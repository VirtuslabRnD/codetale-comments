[
  {
    "id" : "93001232-eb5f-485a-a130-ba9813283dad",
    "prId" : 101881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101881#pullrequestreview-659262236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ee7f87c-00c9-4027-b447-15635e6c4a4e",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Do we want to overload 2008? I realize it should just be the KAS and Proxy-Server which have this group but this means we are giving the KAS access to everything secured by the Konnectivity Server group.",
        "createdAt" : "2021-05-12T00:14:23Z",
        "updatedAt" : "2021-05-12T00:14:24Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "9293c0a2-0388-494f-ac30-22032b03b003",
        "parentId" : "5ee7f87c-00c9-4027-b447-15635e6c4a4e",
        "authorId" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "body" : "Wouldn't konnectivity-server need to support taking a flag to specify which group should have ownership to the socket?\r\nIf konnectivity-server runs as lets say user 100 and group 100 and creates the socket if it does not exist then, the permissions of  the socket would be 770 100(user) 100(group). Now konnectivity-server would need to chgrp or similar to change the ownership to another group. I don't think that konnectivity-server supports that today.",
        "createdAt" : "2021-05-13T19:32:57Z",
        "updatedAt" : "2021-05-13T19:32:57Z",
        "lastEditedBy" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "tags" : [
        ]
      },
      {
        "id" : "9fd4d2e1-b386-428c-a85b-8c9dfeb1ac11",
        "parentId" : "5ee7f87c-00c9-4027-b447-15635e6c4a4e",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Fair.",
        "createdAt" : "2021-05-13T20:10:11Z",
        "updatedAt" : "2021-05-13T20:10:11Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "b951b9349fc9ce4c537b72dae37d7ef2345326ff",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1370,1374 @@KONNECTIVITY_SERVER_RUNASUSER: 2008\nKONNECTIVITY_SERVER_RUNASGROUP: 2008\nKONNECTIVITY_SERVER_SOCKET_WRITER_GROUP: 2008\nEOF\n    # KUBE_APISERVER_REQUEST_TIMEOUT_SEC (if set) controls the --request-timeout"
  },
  {
    "id" : "8660e027-062f-48e0-9bca-aad10a652812",
    "prId" : 101539,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101539#pullrequestreview-649517486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9d75ea6-7713-458f-af4a-33c3b390a525",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Are VERSION, TAR_HASH and RELEASE_PATH set anywhere? Will this be adjusted once the next NPD release is out, as noted in the PR description?",
        "createdAt" : "2021-04-29T22:58:38Z",
        "updatedAt" : "2021-05-11T14:00:50Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "620480d4-1f68-4c47-ac69-9a927c90d312",
        "parentId" : "c9d75ea6-7713-458f-af4a-33c3b390a525",
        "authorId" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "body" : "Yes these are NPD parameters that are set in other parts of the kube-up.",
        "createdAt" : "2021-04-30T18:48:40Z",
        "updatedAt" : "2021-05-11T14:00:50Z",
        "lastEditedBy" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "tags" : [
        ]
      }
    ],
    "commit" : "09f953733883b62d991801b0c570d8e2b14322df",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1610,1614 @@NODE_PROBLEM_DETECTOR_VERSION: $(yaml-quote \"${NODE_PROBLEM_DETECTOR_VERSION}\")\nNODE_PROBLEM_DETECTOR_TAR_HASH: $(yaml-quote \"${NODE_PROBLEM_DETECTOR_TAR_HASH}\")\nNODE_PROBLEM_DETECTOR_RELEASE_PATH: $(yaml-quote \"${NODE_PROBLEM_DETECTOR_RELEASE_PATH}\")\nNODE_PROBLEM_DETECTOR_CUSTOM_FLAGS: $(yaml-quote \"${WINDOWS_NODE_PROBLEM_DETECTOR_CUSTOM_FLAGS}\")\nNODE_PROBLEM_DETECTOR_TOKEN: $(yaml-quote \"${NODE_PROBLEM_DETECTOR_TOKEN:-}\")"
  },
  {
    "id" : "9e29fe07-c3b1-430e-ab2c-cf6ab86856c8",
    "prId" : 99990,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99990#pullrequestreview-609189738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07fcfb39-48a0-43e6-9d9c-b3496c1665d9",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "hmm why is only this one needing this and not the others? probably should have a default like the others instead?",
        "createdAt" : "2021-03-09T08:22:32Z",
        "updatedAt" : "2021-03-09T08:22:32Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "591db0d2-e764-47f0-b61d-04b64f2e90fb",
        "parentId" : "07fcfb39-48a0-43e6-9d9c-b3496c1665d9",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "it is initialised inside an if \r\n```\r\n if [[ \"${WINDOWS_CONTAINER_RUNTIME:-}\" != \"docker\" ]]; then\r\n    flags+=\" --container-runtime=remote\"\r\n    if [[ \"${WINDOWS_CONTAINER_RUNTIME}\" == \"containerd\" ]]; then\r\n      WINDOWS_CONTAINER_RUNTIME_ENDPOINT=${KUBE_WINDOWS_CONTAINER_RUNTIME_ENDPOINT:-npipe:////./pipe/containerd-containerd}\r\n      flags+=\" --container-runtime-endpoint=${WINDOWS_CONTAINER_RUNTIME_ENDPOINT}\"\r\n    fi\r\n  fi\r\n\r\n```",
        "createdAt" : "2021-03-09T08:23:21Z",
        "updatedAt" : "2021-03-09T08:23:21Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "0b5d5b02-b1f9-42ec-b280-9c4678eeda60",
        "parentId" : "07fcfb39-48a0-43e6-9d9c-b3496c1665d9",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "IIRC this should come from config-default.sh or config-test.sh\r\n\r\ncc @amwat (extra eyes on these scripts)",
        "createdAt" : "2021-03-09T08:23:52Z",
        "updatedAt" : "2021-03-09T08:23:52Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "70fdfc1c-aeae-4e93-aa45-1b298c06e402",
        "parentId" : "07fcfb39-48a0-43e6-9d9c-b3496c1665d9",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "the file generated in line 1336 is defaulting this way too\r\nhttps://github.com/kubernetes/kubernetes/pull/99990/files#diff-09816a4dd2fd3cf28f97bf9f34330a66336c631830b103d0c96d71eb632dab0dR1336-R1357",
        "createdAt" : "2021-03-10T10:23:07Z",
        "updatedAt" : "2021-03-10T10:23:08Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "bbbcdaaa-2652-4bda-8124-bcbad4badb07",
        "parentId" : "07fcfb39-48a0-43e6-9d9c-b3496c1665d9",
        "authorId" : "42245a90-5535-42e8-917c-be8545f172e8",
        "body" : "yeah the actual value should ideally come from `config-default.sh` or `config-test.sh`\r\nbut empty fallback at this point sgtm, probably should have it for all others as well (just in case).",
        "createdAt" : "2021-03-10T21:37:11Z",
        "updatedAt" : "2021-03-10T21:40:22Z",
        "lastEditedBy" : "42245a90-5535-42e8-917c-be8545f172e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6787d464caad4f2af398934fbb63de84f3f9bc1d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1581,1585 @@WINDOWS_CNI_VERSION: $(yaml-quote \"${WINDOWS_CNI_VERSION}\")\nWINDOWS_CONTAINER_RUNTIME: $(yaml-quote \"${WINDOWS_CONTAINER_RUNTIME}\")\nWINDOWS_CONTAINER_RUNTIME_ENDPOINT: $(yaml-quote \"${WINDOWS_CONTAINER_RUNTIME_ENDPOINT:-}\")\nMANIFESTS_DIR: $(yaml-quote \"${WINDOWS_MANIFESTS_DIR}\")\nPKI_DIR: $(yaml-quote \"${WINDOWS_PKI_DIR}\")"
  },
  {
    "id" : "dbc8643f-36a5-41cc-ac6f-d8683041081c",
    "prId" : 96391,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96391#pullrequestreview-591774332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc5469b-7ecf-4b8f-986e-cdd5a8021011",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Is this line specific to windows? I wouldn't have expected to ignore an error here ",
        "createdAt" : "2020-11-10T01:26:29Z",
        "updatedAt" : "2020-11-10T01:26:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "49dd2d55-f33e-4ab8-91dc-17e1401e6d5b",
        "parentId" : "ffc5469b-7ecf-4b8f-986e-cdd5a8021011",
        "authorId" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "body" : "Admittedly this isn't the best way to handle this issue. This is the fix in v1.19+. The proper solution is to set public-read on the bucket if this operation fails but that also has bad side effects. All in all there's not really a great workaround here other than just making this optional. Lastly, this probably does impact Linux as well. I was mainly testing Windows clusters but this silent failure happens before cluster bringup.",
        "createdAt" : "2020-11-10T03:35:27Z",
        "updatedAt" : "2020-11-10T03:35:28Z",
        "lastEditedBy" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "tags" : [
        ]
      },
      {
        "id" : "b5445d7b-e280-42a8-908a-49a66cb2dc6d",
        "parentId" : "ffc5469b-7ecf-4b8f-986e-cdd5a8021011",
        "authorId" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "body" : "Ping this still breaks. To reiterate this is the logic that newer versions of Kubernetes does so this is a backport of the awful fix.",
        "createdAt" : "2021-02-09T17:41:39Z",
        "updatedAt" : "2021-02-09T17:41:39Z",
        "lastEditedBy" : "54734308-b9bb-4f25-91a3-239b9e074b3f",
        "tags" : [
        ]
      },
      {
        "id" : "a5875b3c-d619-45a4-9c40-d7cd6e3074e7",
        "parentId" : "ffc5469b-7ecf-4b8f-986e-cdd5a8021011",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "this is the PR where it was introduced: https://github.com/kubernetes/kubernetes/pull/92668",
        "createdAt" : "2021-02-17T01:44:46Z",
        "updatedAt" : "2021-02-17T01:44:46Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "5f8db5a0-9405-4fc7-9b1c-3ca117eec6a4",
        "parentId" : "ffc5469b-7ecf-4b8f-986e-cdd5a8021011",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "@jeremyje do you need to grab a second line from the source PR?",
        "createdAt" : "2021-02-17T01:46:09Z",
        "updatedAt" : "2021-02-17T01:46:09Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "24978fd29fea29d2c3cc90420886259689615c16",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +242,246 @@  echo \"${hash}\" > \"${tar}.sha512\"\n  gsutil -m -q -h \"Cache-Control:private, max-age=0\" cp \"${tar}\" \"${tar}.sha512\" \"${staging_path}\"\n  gsutil -m acl ch -g all:R \"${gs_url}\" \"${gs_url}.sha512\" >/dev/null 2>&1 || true\n  echo \"+++ ${basename_tar} uploaded (sha512 = ${hash})\"\n}"
  },
  {
    "id" : "d71d672e-9b88-4ffd-a80e-719591cebf4b",
    "prId" : 94465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94465#pullrequestreview-498100575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7e1c898-0adc-4eb6-bde8-538a599beec0",
        "parentId" : null,
        "authorId" : "68be493a-362d-4431-b98c-6721a89fd633",
        "body" : "Should `kube::util::read-array` be used here for uniformity, or is it purposefully not used here?",
        "createdAt" : "2020-09-28T21:29:38Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "68be493a-362d-4431-b98c-6721a89fd633",
        "tags" : [
        ]
      },
      {
        "id" : "d964ce09-f42b-4d79-9dd4-3a6bd85a3400",
        "parentId" : "b7e1c898-0adc-4eb6-bde8-538a599beec0",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "`kube::util::read-array` reads line by line and adds it to the array, while here it is a single line that is added. I consider these two separate use cases where `kube::util::read-array` is the best solution for the case for line-by-line, being Bash 3 backwards compatible and all, while this way of writing is the easiest to use/follow/maintain for the single line case.",
        "createdAt" : "2020-09-29T05:13:19Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "2868e07b98cfd9b6e54c35d65fca2217e50bffa6",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +2053,2057 @@  # More details here - https://cloud.google.com/compute/docs/gpus/add-gpus#create-new-gpu-instance\n  if [[ -n \"${NODE_ACCELERATORS}\" ]]; then\n    accelerator_args+=(--maintenance-policy TERMINATE --restart-on-failure --accelerator \"${NODE_ACCELERATORS}\")\n    gcloud=\"gcloud beta\"\n  fi"
  },
  {
    "id" : "4c2bb5e4-8a90-470a-a426-8d5c3877a832",
    "prId" : 94465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94465#pullrequestreview-497909633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "842f2d6d-26f8-4eae-aeb4-36c8e364d801",
        "parentId" : null,
        "authorId" : "68be493a-362d-4431-b98c-6721a89fd633",
        "body" : "Same here",
        "createdAt" : "2020-09-28T21:29:49Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "68be493a-362d-4431-b98c-6721a89fd633",
        "tags" : [
        ]
      }
    ],
    "commit" : "2868e07b98cfd9b6e54c35d65fca2217e50bffa6",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +2059,2063 @@  local preemptible_minions=()\n  if [[ \"${PREEMPTIBLE_NODE}\" == \"true\" ]]; then\n    preemptible_minions+=(--preemptible --maintenance-policy TERMINATE)\n  fi\n"
  },
  {
    "id" : "ca968891-bd64-40e5-a80b-b2a739ff8bc9",
    "prId" : 94465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94465#pullrequestreview-497909633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b71fda6-dbaf-4db5-965a-dc1e2cb6159b",
        "parentId" : null,
        "authorId" : "68be493a-362d-4431-b98c-6721a89fd633",
        "body" : "Ditto",
        "createdAt" : "2020-09-28T21:30:45Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "68be493a-362d-4431-b98c-6721a89fd633",
        "tags" : [
        ]
      }
    ],
    "commit" : "2868e07b98cfd9b6e54c35d65fca2217e50bffa6",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +2071,2075 @@      validate-node-local-ssds-ext \"${ssdopts[@]}\"\n      for ((i=1; i<=ssdopts[0]; i++)); do\n        local_ssds+=(\"--local-ssd=interface=${ssdopts[1]}\")\n      done\n    done"
  },
  {
    "id" : "69b2c2bc-9b5d-4e11-af89-e11906e5604b",
    "prId" : 94465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94465#pullrequestreview-497909633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b23e514b-c281-45c1-a6bb-1b308fda53dc",
        "parentId" : null,
        "authorId" : "68be493a-362d-4431-b98c-6721a89fd633",
        "body" : "Ditto",
        "createdAt" : "2020-09-28T21:30:57Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "68be493a-362d-4431-b98c-6721a89fd633",
        "tags" : [
        ]
      }
    ],
    "commit" : "2868e07b98cfd9b6e54c35d65fca2217e50bffa6",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +2102,2106 @@      node_image_flags+=(--image-project \"${NODE_IMAGE_PROJECT}\" --image \"${NODE_IMAGE}\")\n  elif [[ \"${os}\" == 'windows' ]]; then\n      node_image_flags+=(--image-project \"${WINDOWS_NODE_IMAGE_PROJECT}\" --image \"${WINDOWS_NODE_IMAGE}\")\n  else\n      echo \"Unknown OS ${os}\" >&2"
  },
  {
    "id" : "55202633-e02a-43d7-9cc7-000768cb0e6e",
    "prId" : 94465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94465#pullrequestreview-502273261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41927507-f203-4232-a0d0-5ca91ebe45aa",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "why?",
        "createdAt" : "2020-10-05T16:53:28Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "0172b207-2b44-441a-bca9-7618cd5d0248",
        "parentId" : "41927507-f203-4232-a0d0-5ca91ebe45aa",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "> why?\r\n\r\nhttps://github.com/koalaman/shellcheck/wiki/SC2199\r\n\r\nI believe what we want to achieve here is the\r\n\r\n`Alternatively, if you do want to concatenate all the values in the array into a single string for your test, use \"$*\" or \"${array[*]}\" to make this explicit.\r\n`\r\n\r\nusecase they describe.",
        "createdAt" : "2020-10-05T17:32:14Z",
        "updatedAt" : "2020-10-06T06:44:48Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "2868e07b98cfd9b6e54c35d65fca2217e50bffa6",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +3695,3699 @@  KUBE_RESOURCE_FOUND=\"\"\n\n  if [[ -n \"${INSTANCE_GROUPS[*]:-}\" ]]; then\n    KUBE_RESOURCE_FOUND=\"Managed instance groups ${INSTANCE_GROUPS[*]}\"\n    return 1"
  },
  {
    "id" : "50dbc88f-f275-4738-aaf1-f2e947da7e3d",
    "prId" : 94463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94463#pullrequestreview-579021765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d682a09e-a961-4148-8d2c-2f8035747713",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Same question here",
        "createdAt" : "2020-10-05T16:34:08Z",
        "updatedAt" : "2021-01-30T08:32:14Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "364d16ef-88cc-450d-9663-68a22baf42de",
        "parentId" : "d682a09e-a961-4148-8d2c-2f8035747713",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "To get rid of the shellcheck issues, it is either this or a `#shellcheck disable` statement since shellcheck will complain here.\r\nAlthough not a big fan of Bash myself, I think if one has Bash at hand anyway, using its functionality comes natural. Using shell internals instead of external calls brings robustness/portability and speed too.",
        "createdAt" : "2020-10-06T06:11:57Z",
        "updatedAt" : "2021-01-30T08:32:14Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      },
      {
        "id" : "246e85ea-ac19-429f-a173-3def71f55490",
        "parentId" : "d682a09e-a961-4148-8d2c-2f8035747713",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "the former version is not more readable imho, and this is definitely going to be faster and lower dependency.\r\nimho: sed is useful when you're not storing in a variable, or doing many expressions, neither of which we need here.\r\n\r\nI support this change.",
        "createdAt" : "2021-01-29T08:11:00Z",
        "updatedAt" : "2021-01-30T08:32:14Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7e23620a4eb6f080d04b66c71a93771d6e0972",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1213,1217 @@GCE_GLBC_IMAGE: $(yaml-quote \"${GCE_GLBC_IMAGE:-}\")\nCUSTOM_INGRESS_YAML: |\n${CUSTOM_INGRESS_YAML//\\'/\\'\\'}\nENABLE_NODE_JOURNAL: $(yaml-quote \"${ENABLE_NODE_JOURNAL:-false}\")\nPROMETHEUS_TO_SD_ENDPOINT: $(yaml-quote \"${PROMETHEUS_TO_SD_ENDPOINT:-}\")"
  },
  {
    "id" : "adcc7d67-ad2b-41b4-b10f-4425d95fdada",
    "prId" : 94456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94456#pullrequestreview-502630749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d895c1b-4dc6-4eac-9525-17e1d23247cc",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "I know you allude to shellcheck directives in the comment above, but it would be more helpful for future maintainers to call out the specific variable(s) the disable directive is being used each time you use it",
        "createdAt" : "2020-10-05T16:15:55Z",
        "updatedAt" : "2020-11-17T07:06:51Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "3410a137-6c3e-4c28-b7e6-1d7b0af68878",
        "parentId" : "5d895c1b-4dc6-4eac-9525-17e1d23247cc",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "Agree, I will add such clarifying comments.",
        "createdAt" : "2020-10-06T06:53:05Z",
        "updatedAt" : "2020-11-17T07:06:51Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9ca218872806400dc36c9509dec849ad56577bd",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1704,1708 @@    # this puts the cert into pki/ca.crt and the key into pki/private/ca.key\n    # PRIMARY_CN (expected to be) defined by caller\n    # shellcheck disable=SC2153\n    ./easyrsa --batch \"--req-cn=${PRIMARY_CN}@$(date +%s)\" build-ca nopass\n    # SANS (expected to be) defined by caller"
  },
  {
    "id" : "42a65bd5-670d-4ff7-b7ba-bbfc78b31ce4",
    "prId" : 94456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94456#pullrequestreview-502213279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b9b7a6-b31e-4ab3-8250-e69f053d2bb2",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "same here",
        "createdAt" : "2020-10-05T16:16:57Z",
        "updatedAt" : "2020-11-17T07:06:51Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9ca218872806400dc36c9509dec849ad56577bd",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1707,1711 @@    ./easyrsa --batch \"--req-cn=${PRIMARY_CN}@$(date +%s)\" build-ca nopass\n    # SANS (expected to be) defined by caller\n    # shellcheck disable=SC2153\n    ./easyrsa --subject-alt-name=\"${SANS}\" build-server-full \"${MASTER_NAME}\" nopass\n    ./easyrsa build-client-full kube-apiserver nopass"
  },
  {
    "id" : "89bb3f55-d850-4a5a-8f6a-79d78bd6f117",
    "prId" : 94456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94456#pullrequestreview-544715116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6f43454-b825-49e2-8b4d-542d815d5760",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "why?",
        "createdAt" : "2020-10-05T16:17:13Z",
        "updatedAt" : "2020-11-17T07:06:51Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "d85c81e4-0801-4f0f-b69f-e5d680ad27f4",
        "parentId" : "f6f43454-b825-49e2-8b4d-542d815d5760",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "If we were to quote `gcloud_prompt`, say it contained _foo bar_, we would have the single argument `foo bar` instead of the two arguments `foo` `bar` passed to gcloud. And if gcloud_prompt was empty, we would get an empty argument instead of no argument.",
        "createdAt" : "2020-12-04T07:36:19Z",
        "updatedAt" : "2020-12-04T07:36:20Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9ca218872806400dc36c9509dec849ad56577bd",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1865,1869 @@  # update and install components as needed\n  # (deliberately word split $gcloud_prompt)\n  # shellcheck disable=SC2086\n  if [[ \"${KUBE_PROMPT_FOR_UPDATE}\" == \"y\" ]]; then\n    ${sudo_prefix} gcloud ${gcloud_prompt:-} components install alpha"
  },
  {
    "id" : "08e9f34c-aa98-4c93-ab99-5765b06cbf8d",
    "prId" : 94456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94456#pullrequestreview-532095710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34afc92a-06dd-467d-ab09-1d2c14eaaaa9",
        "parentId" : null,
        "authorId" : "68be493a-362d-4431-b98c-6721a89fd633",
        "body" : "Is this change related to a spellcheck failure?",
        "createdAt" : "2020-11-17T07:50:27Z",
        "updatedAt" : "2020-11-17T07:51:45Z",
        "lastEditedBy" : "68be493a-362d-4431-b98c-6721a89fd633",
        "tags" : [
        ]
      },
      {
        "id" : "bec32ae6-e6ec-4e2d-b588-c5afbfcca9ed",
        "parentId" : "34afc92a-06dd-467d-ab09-1d2c14eaaaa9",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "No, it is not. Well spotted. It is a fix for quotes that were bogusly applied to this line in the quote-fix for the `yaml-quote` statements.",
        "createdAt" : "2020-11-17T07:56:24Z",
        "updatedAt" : "2020-11-17T07:56:25Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9ca218872806400dc36c9509dec849ad56577bd",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1221,1225 @@UBUNTU_INSTALL_RUNC_VERSION: $(yaml-quote \"${UBUNTU_INSTALL_RUNC_VERSION:-}\")\nNODE_LOCAL_SSDS_EXT: $(yaml-quote \"${NODE_LOCAL_SSDS_EXT:-}\")\nNODE_LOCAL_SSDS_EPHEMERAL: $(yaml-quote \"${NODE_LOCAL_SSDS_EPHEMERAL:-}\")\nLOAD_IMAGE_COMMAND: $(yaml-quote \"${LOAD_IMAGE_COMMAND:-}\")\nZONE: $(yaml-quote \"${ZONE}\")"
  },
  {
    "id" : "660c042f-ce75-421c-b43e-9d71bcde161d",
    "prId" : 91386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91386#pullrequestreview-419463441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff3fc62b-bcbc-47d1-8c59-8b2c93a01533",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@bowei to review cluster CNI changes",
        "createdAt" : "2020-05-27T17:43:11Z",
        "updatedAt" : "2020-05-27T17:43:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2091944989067822222e5ccf1a93020da7f2fb9b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1138,1142 @@NODE_PROBLEM_DETECTOR_CUSTOM_FLAGS: $(yaml-quote ${NODE_PROBLEM_DETECTOR_CUSTOM_FLAGS:-})\nCNI_STORAGE_URL_BASE: $(yaml-quote ${CNI_STORAGE_URL_BASE:-})\nCNI_TAR_PREFIX: $(yaml-quote ${CNI_TAR_PREFIX:-})\nCNI_VERSION: $(yaml-quote ${CNI_VERSION:-})\nCNI_SHA1: $(yaml-quote ${CNI_SHA1:-})"
  },
  {
    "id" : "6bcad0f8-0df4-4cf0-adef-e8c6cb0eab9b",
    "prId" : 90405,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90405#pullrequestreview-416014150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f79dfe5-2fdd-473c-8afa-a99358312046",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Why the change from `@` to `*`",
        "createdAt" : "2020-04-29T20:24:30Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "d9d449f6-03eb-449c-8c5d-197be43618cb",
        "parentId" : "1f79dfe5-2fdd-473c-8afa-a99358312046",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "I interpreted this usecase as the case described as\r\n\r\n\"Alternatively, if you do want to concatenate all the values in the array into a single string for your test, use \"$*\" or \"${array[*]}\" to make this explicit.\"\r\n\r\nin https://github.com/koalaman/shellcheck/wiki/SC2199.",
        "createdAt" : "2020-05-21T09:44:42Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf2836e41524c179c73e87e2c4f8f63f319ec86",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +404,408 @@\n  NODE_NAMES=()\n  if [[ -n \"${INSTANCE_GROUPS[*]:-}\" ]]; then\n    for group in \"${INSTANCE_GROUPS[@]}\"; do\n      kube::util::read-array NODE_NAMES < <(gcloud compute instance-groups managed list-instances \\"
  },
  {
    "id" : "91365a7a-36a0-4a7c-9da5-8677511ca096",
    "prId" : 90405,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90405#pullrequestreview-416014016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87b25a68-e464-4ebc-8bf9-8126665d2f8a",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Why the change from `@` to `*`",
        "createdAt" : "2020-04-29T20:24:43Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "122f5288-12ea-4613-8739-ff90c595704a",
        "parentId" : "87b25a68-e464-4ebc-8bf9-8126665d2f8a",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "I interpreted this usecase as the case described as\r\n\r\n\"Alternatively, if you do want to concatenate all the values in the array into a single string for your test, use `\"$*\"` or `\"${array[*]}\"` to make this explicit.\"\r\n\r\nin https://github.com/koalaman/shellcheck/wiki/SC2199.",
        "createdAt" : "2020-05-21T09:44:29Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf2836e41524c179c73e87e2c4f8f63f319ec86",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +417,421 @@  export NODE_NAMES\n  WINDOWS_NODE_NAMES=()\n  if [[ -n \"${WINDOWS_INSTANCE_GROUPS[*]:-}\" ]]; then\n    for group in \"${WINDOWS_INSTANCE_GROUPS[@]}\"; do\n      kube::util::read-array WINDOWS_NODE_NAMES < <(gcloud compute instance-groups managed \\"
  },
  {
    "id" : "f2add7e6-6592-4733-ab9b-f33a71699dd4",
    "prId" : 90405,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90405#pullrequestreview-415948256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afd2fc39-194d-4b38-83ec-b93089a1832c",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "this should remain backticks, they were formatting, not an attempt at a subshell",
        "createdAt" : "2020-05-21T05:39:57Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "48e0471d-d8de-487c-923c-70feeb24f2c9",
        "parentId" : "afd2fc39-194d-4b38-83ec-b93089a1832c",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "Fix upcoming.",
        "createdAt" : "2020-05-21T07:53:18Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf2836e41524c179c73e87e2c4f8f63f319ec86",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +1914,1918 @@  for c in missing:\n    print ('missing required gcloud component \\\"{0}\\\"'.format(c))\n    print ('Try running \\$(gcloud components install {0})'.format(c))\n  exit(1)\n    \" \"${version}\""
  },
  {
    "id" : "789d8e1e-7da3-4018-88d5-b2297a218cf0",
    "prId" : 90405,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90405#pullrequestreview-587101134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "020bfd31-781b-4dae-b054-1564bf623109",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "why the `|| true` here?",
        "createdAt" : "2020-05-21T05:47:09Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "db08b6ae-4a4b-4a17-884b-b91c618b4d73",
        "parentId" : "020bfd31-781b-4dae-b054-1564bf623109",
        "authorId" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "body" : "Should not be there. Thanks for spotting.",
        "createdAt" : "2020-05-21T09:46:17Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "855d0d5a-1d8c-4615-aea7-c78e96d0c8ed",
        "tags" : [
        ]
      },
      {
        "id" : "f1ad85f6-5166-4831-914e-7ac11eddf723",
        "parentId" : "020bfd31-781b-4dae-b054-1564bf623109",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "heh, the `|| true` here is here because we store the value and then check if empty below (and then create the subnet if so), we don't want to fail if the subnet doesn't exist yet.",
        "createdAt" : "2021-02-09T23:07:09Z",
        "updatedAt" : "2021-02-10T09:08:16Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bf2836e41524c179c73e87e2c4f8f63f319ec86",
    "line" : 323,
    "diffHunk" : "@@ -1,1 +2381,2385 @@    --project \"${NETWORK_PROJECT}\" \\\n    --region \"${REGION}\" \\\n    \"${IP_ALIAS_SUBNETWORK}\" 2>/dev/null || true)\n  if [[ -z \"${subnet}\" ]]; then\n    echo \"Creating subnet ${NETWORK}:${IP_ALIAS_SUBNETWORK}\""
  },
  {
    "id" : "33f209c3-c826-4c4e-ad29-a5af6bc3cb77",
    "prId" : 87760,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87760#pullrequestreview-352683357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77979d9e-a0c2-4d8a-a048-5859c069ca8e",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think this was not needed on all versions of Ubuntu.\r\n/cc @chrisohaver ",
        "createdAt" : "2020-02-04T01:02:21Z",
        "updatedAt" : "2020-02-04T01:02:22Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "64186fe8-5aa5-4261-ab89-9b2eabbbb88d",
        "parentId" : "77979d9e-a0c2-4d8a-a048-5859c069ca8e",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "this CI job will not be supporting all the versions. We will just support 18.04 LTS and above. so we should be good. ",
        "createdAt" : "2020-02-04T01:59:58Z",
        "updatedAt" : "2020-02-04T01:59:59Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee3f897ca7bf7c35763324e1f674ea9c00bcf48c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +769,773 @@      # Configure the file path for host dns configuration\n      # as ubuntu uses systemd-resolved\n      flags+=\" --resolv-conf=/run/systemd/resolve/resolv.conf\"\n    fi\n  else # For nodes"
  },
  {
    "id" : "9d27b886-1263-4eb1-a8e5-cb0c8da380bf",
    "prId" : 87760,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87760#pullrequestreview-352896464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f446915b-0c33-4b96-8577-1879da3817c7",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "is ok not to fail if we don't install the route?\r\nit seems it can masks things and making it difficult to troubleshoot",
        "createdAt" : "2020-02-04T10:36:51Z",
        "updatedAt" : "2020-02-04T10:36:51Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "302de608-25c1-42f8-a0d2-05c7ae695137",
        "parentId" : "f446915b-0c33-4b96-8577-1879da3817c7",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "this code path seems to be used for a large number of nodes with an internal master so it won't be invoked for our usual jobs. So as long as we are \"correct\" in computing eth0, we should run with it.",
        "createdAt" : "2020-02-04T11:13:39Z",
        "updatedAt" : "2020-02-04T11:13:39Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee3f897ca7bf7c35763324e1f674ea9c00bcf48c",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +2936,2940 @@  # Attach ${ip} to ${name}\n  gcloud compute instances network-interfaces update \"${name}\" --project \"${PROJECT}\" --zone \"${zone}\" --aliases=\"${aliases}\"\n  run-gcloud-command \"${name}\" \"${zone}\" 'sudo ip route add to local '${ip}'/32 dev $(ip route | grep default | awk '\\''{print $5}'\\'')' || true\n  return $?\n}"
  },
  {
    "id" : "fd3298c5-ad84-47e3-a29d-529da48ba66e",
    "prId" : 87760,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87760#pullrequestreview-352939169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eab2bfb5-79c5-42fc-893c-f5d2202bd39d",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I guess that this can be added at the beginning of the function and it will apply to all nodes, so we don't have to replicate this code",
        "createdAt" : "2020-02-04T10:41:12Z",
        "updatedAt" : "2020-02-04T10:41:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "0ada96f8-8b2c-4a6f-a4b2-867f6e48f266",
        "parentId" : "eab2bfb5-79c5-42fc-893c-f5d2202bd39d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "i am expecting more things to pop up (some differences between the master and node), so for better readability, let's leave this as is please.",
        "createdAt" : "2020-02-04T11:14:48Z",
        "updatedAt" : "2020-02-04T11:14:48Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "4ffcfa39-8e30-4651-a078-ce599f20ccf0",
        "parentId" : "eab2bfb5-79c5-42fc-893c-f5d2202bd39d",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, sure, was more a nit than anything :sweat_smile: ",
        "createdAt" : "2020-02-04T12:31:48Z",
        "updatedAt" : "2020-02-04T12:31:48Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee3f897ca7bf7c35763324e1f674ea9c00bcf48c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +778,782 @@        flags+=\" ${HEAPSTER_KUBELET_TEST_ARGS:-}\"\n    fi\n    if [[ \"${NODE_OS_DISTRIBUTION}\" == \"ubuntu\" ]]; then\n      # Configure the file path for host dns configuration\n      # as ubuntu uses systemd-resolved"
  },
  {
    "id" : "7bfe772c-6542-4cd6-b019-76620d5ef2b5",
    "prId" : 85823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85823#pullrequestreview-326392182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aaae8d2-20d4-49fc-99a6-772353f345a0",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "is it cni at all? it's about DNS.",
        "createdAt" : "2019-12-02T23:12:32Z",
        "updatedAt" : "2019-12-02T23:12:32Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "99512433-da6a-4b80-9fcf-9aa38c90db03",
        "parentId" : "4aaae8d2-20d4-49fc-99a6-772353f345a0",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "It seems not a CNI thing, it is just network related.\r\n\r\nWe can organize the directory structure better, currently the cni directory is the only place containing some network stuff. :)",
        "createdAt" : "2019-12-02T23:41:26Z",
        "updatedAt" : "2019-12-02T23:41:26Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "2565f4ff-8fab-408f-ba11-3c923a3c6f03",
        "parentId" : "4aaae8d2-20d4-49fc-99a6-772353f345a0",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "ok, let's organize it later. thanks.",
        "createdAt" : "2019-12-02T23:46:06Z",
        "updatedAt" : "2019-12-02T23:46:06Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "56ddff18-8271-4009-8fe7-bfc0d90785ae",
        "parentId" : "4aaae8d2-20d4-49fc-99a6-772353f345a0",
        "authorId" : "bf6b086c-ef09-4f4e-8b45-7a12ce3b5b48",
        "body" : "For windows, dns config is through cni. We don't have a network directory and would be nice to have one. \r\n/lgtm",
        "createdAt" : "2019-12-03T19:27:32Z",
        "updatedAt" : "2019-12-03T19:27:32Z",
        "lastEditedBy" : "bf6b086c-ef09-4f4e-8b45-7a12ce3b5b48",
        "tags" : [
        ]
      }
    ],
    "commit" : "330897aeffba916eee6fa1b5b3f99b2ec0afa0ea",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +874,878 @@\n  # Configure the file path for host dns configuration\n  flags+=\" --resolv-conf=${WINDOWS_CNI_DIR}\\hostdns.conf\"\n\n  # Both --cgroups-per-qos and --enforce-node-allocatable should be disabled on"
  },
  {
    "id" : "6604fae0-4bcc-4318-8bd8-b9f17a96242f",
    "prId" : 85396,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85396#pullrequestreview-325759696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100b0769-46c2-4dbc-83f6-b6ba3725d6fc",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "this commit is still here, could you move it to a separate pr?",
        "createdAt" : "2019-12-02T19:32:28Z",
        "updatedAt" : "2019-12-02T19:32:28Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "013e2754-ff25-467e-8450-4017a4bacca5",
        "parentId" : "100b0769-46c2-4dbc-83f6-b6ba3725d6fc",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "See the comment https://github.com/kubernetes/kubernetes/pull/85396#issuecomment-559217726",
        "createdAt" : "2019-12-02T21:37:19Z",
        "updatedAt" : "2019-12-02T21:37:19Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee2418c7aaf8ecc99ac2aa4af3d2b248c9d2bf50",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +879,883 @@\n  # Configure the file path for host dns configuration\n  flags+=\" --resolv-conf=${WINDOWS_CNI_DIR}\\hostdns.conf\"\n\n  # Both --cgroups-per-qos and --enforce-node-allocatable should be disabled on"
  },
  {
    "id" : "5053bce4-cd0c-4014-8042-93cd4c0d6f11",
    "prId" : 82314,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82314#pullrequestreview-283735719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f87e4c58-6c57-4ff6-b566-d8716797fed6",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Reminder: will need to make the change in GKE separately. ",
        "createdAt" : "2019-09-04T16:17:17Z",
        "updatedAt" : "2019-09-05T17:07:44Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a3ab1865408e8dca1eada50e88f7189a2d12873",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +874,878 @@\n  # Configure the file path for host dns configuration\n  flags+=\" --resolv-conf=${WINDOWS_CNI_CONFIG_DIR}\\hostdns.conf\"\n\n  # Both --cgroups-per-qos and --enforce-node-allocatable should be disabled on"
  },
  {
    "id" : "413d282d-7cd7-44aa-8f3f-74b9b8516a9c",
    "prId" : 81074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81074#pullrequestreview-272515218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfd44bbd-75c4-446a-b208-77341fb42b63",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Do you know why for static IP we have to wait and here we don't:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cluster/gce/util.sh#L1817\r\n?",
        "createdAt" : "2019-08-07T13:24:06Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "58dbb76a-824c-4145-894b-888b5541c421",
        "parentId" : "bfd44bbd-75c4-446a-b208-77341fb42b63",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Good question. I tried to understand context of retries in create-static-ip and I think there are two parts:\r\n* https://github.com/kubernetes/kubernetes/pull/15252 which adds some retries as apparently the compute addresses create operation has failed making it impossible to boot the cluster\r\n* https://github.com/kubernetes/kubernetes/pull/33097 which adds some waiting after gcloud compute addresses create for gcloud compute addresses describe finishes.\r\n\r\nWhile I see that significant part of gcloud invocations is in retry loop, there are some without and I have never seen any issue with them (e.g. all calls in create-network).\r\n\r\nI think it's reasonable to start with no retries and add some retry logic if we find that this is flaky. WDYT?",
        "createdAt" : "2019-08-08T08:30:14Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "1949d0e0-34fd-4911-ac9c-40c3ac15e9a9",
        "parentId" : "bfd44bbd-75c4-446a-b208-77341fb42b63",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "When I'm thinking more about it, maybe it actually makes sense.\r\nReserving an address in subnet is local to my project.\r\nReserving a public static IP-address is more global to Google, so maybe more propagation is needed...\r\n\r\nI would still assume that gcloud waits for it, but maybe it doesn't (or didn't in the past?)\r\n\r\nAnyway - I'm fine with leaving as is.",
        "createdAt" : "2019-08-08T11:46:38Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc4094d916b2dd67e2471841d6a5e85303937bd9",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +2563,2567 @@  MASTER_INTERNAL_IP=\"\"\n  if [[ ${GCE_PRIVATE_CLUSTER:-} == \"true\" ]]; then\n    gcloud compute addresses create \"${MASTER_NAME}-internal-ip\" --project \"${PROJECT}\" --region $REGION --subnet $SUBNETWORK\n    MASTER_INTERNAL_IP=$(gcloud compute addresses describe \"${MASTER_NAME}-internal-ip\" --project \"${PROJECT}\" --region \"${REGION}\" -q --format='value(address)')\n    echo \"Master internal ip is: $MASTER_INTERNAL_IP\""
  },
  {
    "id" : "9aac9dc0-b878-4328-bdb5-8d4dca681337",
    "prId" : 81074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81074#pullrequestreview-272515218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b73acf1-dc6f-443b-9f17-7240f23a1cf1",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Don't we need to remove the unmanaged instance group too?",
        "createdAt" : "2019-08-07T13:31:20Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "53b8921b-bd1c-4a30-be38-f8c99b8e94cf",
        "parentId" : "4b73acf1-dc6f-443b-9f17-7240f23a1cf1",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "unmanaged instance group is already removed at this point (around line 3294 in util.sh).",
        "createdAt" : "2019-08-07T14:54:32Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "c5389236-6900-4949-8566-305d7733e949",
        "parentId" : "4b73acf1-dc6f-443b-9f17-7240f23a1cf1",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "It seems a bit weird to me that it is created in \"create-internal-load-balancer\", but removed in some other (a bit random place). Can we move it here?",
        "createdAt" : "2019-08-08T11:57:20Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "80e772d7-fce7-40fb-a054-830a8d444482",
        "parentId" : "4b73acf1-dc6f-443b-9f17-7240f23a1cf1",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Ohh - I think I see that now. We generally create it for new master, but we don't create it for the first one, because we may not need it. So we need to create it here.\r\n\r\nThat is reasonable, but I think it requires a comment.",
        "createdAt" : "2019-08-08T12:02:00Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc4094d916b2dd67e2471841d6a5e85303937bd9",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +2868,2872 @@    gcloud compute backend-services delete \"${MASTER_NAME}\" --project \"${PROJECT}\" --region \"${REGION}\" --quiet\n  fi\n  if gcloud compute health-checks describe \"${MASTER_NAME}-gc\" --project \"${PROJECT}\" &>/dev/null; then\n    gcloud compute health-checks delete \"${MASTER_NAME}-gc\" --project \"${PROJECT}\" --quiet\n  fi"
  },
  {
    "id" : "8dfc7fc7-8b02-422e-ad01-b3613854e582",
    "prId" : 81074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81074#pullrequestreview-272527182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2800d16-6c61-4f81-8938-54be171801e9",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Same for this one, right?",
        "createdAt" : "2019-08-08T12:04:07Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "4ed9a099-8ca9-4e24-bc31-b17f1aa84f29",
        "parentId" : "a2800d16-6c61-4f81-8938-54be171801e9",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "They both are in if [[ REMAINING_MASTER_COUNT -eq 0 ]] starting in 3340 and ending in 3363? :)",
        "createdAt" : "2019-08-08T12:12:32Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc4094d916b2dd67e2471841d6a5e85303937bd9",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +3383,3387 @@    fi\n\n    if gcloud compute addresses describe \"${MASTER_NAME}-internal-ip\" --region \"${REGION}\" --project \"${PROJECT}\" &>/dev/null; then\n      gcloud compute addresses delete \\\n        --project \"${PROJECT}\" \\"
  },
  {
    "id" : "9d1afc43-95ab-47e5-aa42-7c321f39b574",
    "prId" : 81074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81074#pullrequestreview-273068699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc73ad90-58dc-4f8e-a7cc-d8e3777a2148",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "nit: you can now remove detect-master from create-loadbalancer function",
        "createdAt" : "2019-08-09T08:56:27Z",
        "updatedAt" : "2019-08-09T10:45:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "87caf0e1-f8c7-459e-a736-e468869dbd61",
        "parentId" : "bc73ad90-58dc-4f8e-a7cc-d8e3777a2148",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Done",
        "createdAt" : "2019-08-09T10:45:30Z",
        "updatedAt" : "2019-08-09T10:45:30Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc4094d916b2dd67e2471841d6a5e85303937bd9",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +2129,2133 @@    create-linux-nodes\n  elif [[ ${KUBE_REPLICATE_EXISTING_MASTER:-} == \"true\" ]]; then\n    detect-master\n    if  [[ \"${MASTER_OS_DISTRIBUTION}\" != \"gci\" && \"${MASTER_OS_DISTRIBUTION}\" != \"ubuntu\" ]]; then\n      echo \"Master replication supported only for gci and ubuntu\""
  },
  {
    "id" : "08222708-2a10-4fb9-ba93-a33758945588",
    "prId" : 78727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78727#pullrequestreview-256328767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b18a2e2-58a7-46b8-bcf1-a28d3c118057",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Do we really need that env var?\r\nCan we maybe gate on NUM_NODES=0 instead?",
        "createdAt" : "2019-07-01T12:15:54Z",
        "updatedAt" : "2019-07-01T13:30:14Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0a1d483c-a16b-4878-bba1-c5cb463e3dda",
        "parentId" : "7b18a2e2-58a7-46b8-bcf1-a28d3c118057",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Added comments in config-default.sh and config-test.sh.",
        "createdAt" : "2019-07-01T13:15:16Z",
        "updatedAt" : "2019-07-01T13:30:14Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f10c284c8cdee9be507d61e87257866cba18b87",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2135,2139 @@    create-nodes-firewall\n    create-nodes-template\n    if [[ \"${KUBE_CREATE_NODES}\" == \"true\" ]]; then\n      # Windows nodes take longer to boot and setup so create them first.\n      create-windows-nodes"
  },
  {
    "id" : "c5a5c15b-9d84-427d-b8fb-a152d1b8e78a",
    "prId" : 78183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78183#pullrequestreview-240876751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7496588a-e24d-49bf-8420-f91259d462ea",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I think it should just be `flags+=\" --register-with-taints=node-role.kubernetes.io/master:NoSchedule\"` (omit the final equals sign, just `:` instead of `=:`).",
        "createdAt" : "2019-05-22T18:17:18Z",
        "updatedAt" : "2019-05-22T18:17:18Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "b3e53c15-6568-4b2c-805b-e629a0f2ded9",
        "parentId" : "7496588a-e24d-49bf-8420-f91259d462ea",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Oh nevermind, you have an empty value. That's confusing lol.",
        "createdAt" : "2019-05-22T20:59:09Z",
        "updatedAt" : "2019-05-22T20:59:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "d574ab00e4191dbf86b60f93ceaee1f7dc796ff7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +747,751 @@      #flags+=\" --bootstrap-kubeconfig=/var/lib/kubelet/bootstrap-kubeconfig\"\n      #flags+=\" --kubeconfig=/var/lib/kubelet/kubeconfig\"\n      flags+=\" --register-with-taints=node-role.kubernetes.io/master=:NoSchedule\"\n      flags+=\" --kubeconfig=/var/lib/kubelet/bootstrap-kubeconfig\"\n      flags+=\" --register-schedulable=false\""
  },
  {
    "id" : "fe405078-88f6-45e8-bb72-d60281654fcd",
    "prId" : 77271,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77271#pullrequestreview-233879916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eda925d-7894-4218-909c-d3ce17b3e955",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Hmm - so what is was doing before?\r\n\r\n@mbrannock - FYI",
        "createdAt" : "2019-05-06T08:04:32Z",
        "updatedAt" : "2019-05-06T08:04:33Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "ad7b41e7-b84f-4c9d-823e-2af780913fc6",
        "parentId" : "7eda925d-7894-4218-909c-d3ce17b3e955",
        "authorId" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "body" : "Previously it was `A`; `B`& where `A` - create instance group, `B` - wait for group to become stable. The & applies only to the last command. So it was running `A`s sequentially and `B`s in background (parallel).\r\n`A` ; `A` ; ... ; `A` || `B` || `B` ||... || `B`\r\n\r\nI run experiment with 10 instance groups, 10 instances each. It took 330s with original script to run create-linux-nodes().  Only 62s with this new one. ",
        "createdAt" : "2019-05-06T08:49:55Z",
        "updatedAt" : "2019-05-06T08:49:55Z",
        "lastEditedBy" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dc0be6b9ef3c0ae2f5c534f0b482d4a33315fcd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +2801,2805 @@          --project \"${PROJECT}\" \\\n          --timeout \"${MIG_WAIT_UNTIL_STABLE_TIMEOUT}\" || true\n    } &\n  done\n  wait"
  },
  {
    "id" : "0bb97071-25b0-4093-adcb-5ea8b3f3f997",
    "prId" : 73442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73442#pullrequestreview-197731147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1391a499-0c2a-441d-9b10-fdb6237b2633",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "For parity with the comment above `set-windows-node-image`, what env vars does this require/set\r\n",
        "createdAt" : "2019-01-29T17:59:54Z",
        "updatedAt" : "2019-01-31T03:49:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "ea3a642c-6c4f-494c-90fd-fe56f2f373b8",
        "parentId" : "1391a499-0c2a-441d-9b10-fdb6237b2633",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Done.",
        "createdAt" : "2019-01-29T19:07:38Z",
        "updatedAt" : "2019-01-31T03:49:16Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0f78299348afcf770d4e8d89dcea82f80811b28",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +67,71 @@#   NODE_IMAGE\n#   NODE_IMAGE_PROJECT\nfunction set-linux-node-image() {\n  if [[ \"${NODE_OS_DISTRIBUTION}\" == \"gci\" ]]; then\n    DEFAULT_GCI_PROJECT=google-containers"
  },
  {
    "id" : "83088817-25f2-478c-ae59-23ac7ed96f26",
    "prId" : 73442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73442#pullrequestreview-197731147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6b2bcf6-c99f-4e01-af2b-eb7815506cbb",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "we should probably error out if `os` is neither `linux` nor `windows`",
        "createdAt" : "2019-01-29T18:20:29Z",
        "updatedAt" : "2019-01-31T03:49:16Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "d0ffaae9-95b0-41e4-8a43-1d51040629ab",
        "parentId" : "a6b2bcf6-c99f-4e01-af2b-eb7815506cbb",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Done.",
        "createdAt" : "2019-01-29T19:10:58Z",
        "updatedAt" : "2019-01-31T03:49:16Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0f78299348afcf770d4e8d89dcea82f80811b28",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +873,877 @@        echo \"Unknown OS ${os}\" >&2\n        exit 1\n      fi\n    fi\n  } > \"${file}\""
  },
  {
    "id" : "915afaa8-eab6-4210-8577-b9d188fe8ba8",
    "prId" : 70144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70144#pullrequestreview-171319446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1672d0a1-47aa-4d5d-8c91-a40ca80b7c5e",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "s/Assumed/Required?",
        "createdAt" : "2018-10-29T17:23:43Z",
        "updatedAt" : "2019-01-07T21:52:40Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "7f544705-278b-4143-aa32-d3e5f7e28bf1",
        "parentId" : "1672d0a1-47aa-4d5d-8c91-a40ca80b7c5e",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "It seems like \"Assumed\" gets used everywhere, so I just copy and paste and used as is. It might be a little wield to just use required in this one place?",
        "createdAt" : "2018-11-03T07:40:05Z",
        "updatedAt" : "2019-01-07T21:52:40Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c17233c41c13f2d3bb7af9ea598c62392089f44c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +2096,2100 @@# Generates SSL certificates for etcd-client and kube-apiserver communication. Uses cfssl program.\n#\n# Assumed vars:\n#   KUBE_TEMP: temporary directory\n#"
  },
  {
    "id" : "4cda130a-f4cd-4fdd-92f3-aa4f24214c69",
    "prId" : 70144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70144#pullrequestreview-190843971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16bbb1a-310b-4055-a5c4-f6ee83582451",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I don't think you want to allow those variables to be unset, as you're depending on them in a line below.",
        "createdAt" : "2019-01-09T10:35:09Z",
        "updatedAt" : "2019-01-09T10:35:19Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "2d9e36dd-c57c-4870-9447-152b08b2fa63",
        "parentId" : "a16bbb1a-310b-4055-a5c4-f6ee83582451",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "@gmarek I think it would be fine, as in [generate-etcd-cert](https://github.com/kubernetes/kubernetes/blob/7f23a743e8c23ac6489340bbb34fa6f1d392db9d/cluster/common.sh#L347), \"If GEN_ETCD_CA_CERT or GEN_ETCD_CA_KEY is not specified, it will generates certs for CA.\" The existing [create-etcd-certs](https://github.com/kubernetes/kubernetes/blob/e6413d20427cb78c20e3e3d963682a9413244db3/cluster/gce/util.sh#L2069) is set this way too. Is it OK?",
        "createdAt" : "2019-01-09T17:33:30Z",
        "updatedAt" : "2019-01-09T17:33:30Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c17233c41c13f2d3bb7af9ea598c62392089f44c",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +2118,2122 @@  local hostServer=${1}\n  local hostClient=${2}\n  local etcd_apiserver_ca_cert=${3:-}\n  local etcd_apiserver_ca_key=${4:-}\n"
  },
  {
    "id" : "7d6ae964-eb18-46d8-9bcf-def429fcec59",
    "prId" : 67943,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67943#pullrequestreview-150607185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97590062-e1f0-45f7-960a-132cc0ba019d",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Generally these parameters are also exposed in config-default.sh and config-test.sh so that people know that they can be toggled. ",
        "createdAt" : "2018-08-29T14:43:18Z",
        "updatedAt" : "2018-08-29T14:43:18Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "001477bb-65ca-42ea-bacc-ccd16959b35e",
        "parentId" : "97590062-e1f0-45f7-960a-132cc0ba019d",
        "authorId" : "a3c0ff2e-2878-4224-8c64-6c1245f4835e",
        "body" : "We do not expect people to disable prometheus-to-sd for DaemonSets only. For GKE specifically our team wants to monitor DaemonSets with just one prometheus-to-sd deployed as DaemonSet, thus this is why we are adding this flag.",
        "createdAt" : "2018-08-29T15:01:33Z",
        "updatedAt" : "2018-08-29T15:01:33Z",
        "lastEditedBy" : "a3c0ff2e-2878-4224-8c64-6c1245f4835e",
        "tags" : [
        ]
      }
    ],
    "commit" : "134f7f2a9d960319475b6a242df37238c01943e3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +900,904 @@PROMETHEUS_TO_SD_PREFIX: $(yaml-quote ${PROMETHEUS_TO_SD_PREFIX:-})\nENABLE_PROMETHEUS_TO_SD: $(yaml-quote ${ENABLE_PROMETHEUS_TO_SD:-false})\nDISABLE_PROMETHEUS_TO_SD_IN_DS: $(yaml-quote ${DISABLE_PROMETHEUS_TO_SD_IN_DS:-false})\nENABLE_POD_PRIORITY: $(yaml-quote ${ENABLE_POD_PRIORITY:-})\nCONTAINER_RUNTIME: $(yaml-quote ${CONTAINER_RUNTIME:-})"
  },
  {
    "id" : "eb1dc0cc-fd90-458a-9c7e-d1c417411fbe",
    "prId" : 67569,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67569#pullrequestreview-148262536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c937fd58-85e5-4ce2-a8b1-dc6d4092e9c8",
        "parentId" : null,
        "authorId" : "6f944810-c490-4e34-9792-19715a133bef",
        "body" : "you can leave this as false",
        "createdAt" : "2018-08-21T20:35:24Z",
        "updatedAt" : "2018-08-27T20:32:10Z",
        "lastEditedBy" : "6f944810-c490-4e34-9792-19715a133bef",
        "tags" : [
        ]
      },
      {
        "id" : "72753963-e8b9-46e4-a772-d80b1d7b9b23",
        "parentId" : "c937fd58-85e5-4ce2-a8b1-dc6d4092e9c8",
        "authorId" : "1964c59f-0b00-4e0b-9caf-5c101a6169d9",
        "body" : "why ?",
        "createdAt" : "2018-08-21T21:41:12Z",
        "updatedAt" : "2018-08-27T20:32:10Z",
        "lastEditedBy" : "1964c59f-0b00-4e0b-9caf-5c101a6169d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "96922ceef07c0f7b41452c1dc9077b0c01b6af0b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +849,853 @@ELASTICSEARCH_LOGGING_REPLICAS: $(yaml-quote ${ELASTICSEARCH_LOGGING_REPLICAS:-})\nENABLE_CLUSTER_DNS: $(yaml-quote ${ENABLE_CLUSTER_DNS:-false})\nCLUSTER_DNS_CORE_DNS: $(yaml-quote ${CLUSTER_DNS_CORE_DNS:-true})\nDNS_SERVER_IP: $(yaml-quote ${DNS_SERVER_IP:-})\nDNS_DOMAIN: $(yaml-quote ${DNS_DOMAIN:-})"
  },
  {
    "id" : "150a3de8-4284-46f1-91f9-ab36ccaf5c0d",
    "prId" : 67377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67377#pullrequestreview-149195756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3be741ae-f3ad-4a48-8520-7e52c236d964",
        "parentId" : null,
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "While I'm perfectly fine with not waiting forever for mig to become stable, I don't think it's a good idea to continue test with only partial set of nodes: either test will fail later because it won't be able to do regular job (like scheduling 30*5k pods on nodes it has) or we will have false feeling that tests are passing (while what we call '5k node test' can be passing with only ~100 nodes).",
        "createdAt" : "2018-08-14T09:46:51Z",
        "updatedAt" : "2018-08-14T09:46:52Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "0ac76086-a85e-4926-b330-9dc881641b52",
        "parentId" : "3be741ae-f3ad-4a48-8520-7e52c236d964",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Good point. Let me add few thoughts:\r\n\r\n- I think if we succeeded to start let's say 4k out of 5k, it's still better to run tests and get some scalability signal rather than wasting the run altogether\r\n- I'm not sure if the test would (should) fail in such a scenario as iirc we calculate #pods based on #nodes registered. If there are some other places where there's dependency of the test on NUM_NODES, we probably should revisit them too\r\n- If we're worried about not catching such issues (i.e only 4k started out of 5k), we can probably just report it as an error/flake and proceed (so that we observe a red in the test run).",
        "createdAt" : "2018-08-14T10:41:03Z",
        "updatedAt" : "2018-08-14T10:41:49Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "5c07c091-8a7a-45a1-ae04-f35a867ffe47",
        "parentId" : "3be741ae-f3ad-4a48-8520-7e52c236d964",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "How often that problem happens?\r\n\r\nI think last of your points should be addressed before doing that...",
        "createdAt" : "2018-08-23T13:56:17Z",
        "updatedAt" : "2018-08-23T13:56:17Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "52c6736c-4623-4bad-ac33-89d51c90a15e",
        "parentId" : "3be741ae-f3ad-4a48-8520-7e52c236d964",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "> How often that problem happens?\r\n\r\nI remember this happening a few times in the past (when we could only start about 3k-4k nodes due to zone being busy).\r\n\r\n> I think last of your points should be addressed before doing that...\r\n\r\nIt seems like we're currently already catching error if not enough nodes are ready during [validate-cluster](https://github.com/kubernetes/kubernetes/blob/c6a852fe74890c9d890e8c35e7e4dcf2d5b84145/cluster/validate-cluster.sh#L138-L139). So basically this change would currently assure that we don't wait arbitrarily long for MIGs, but go ahead and fail fast. For my 1st point, we can change our large-scale jobs to have higher tolerance if needed (but still report a flake through test-infra if some nodes didn't come up).",
        "createdAt" : "2018-08-23T17:07:05Z",
        "updatedAt" : "2018-08-23T17:08:19Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "e1703138-5ba6-4708-a740-e630c7010bfb",
        "parentId" : "3be741ae-f3ad-4a48-8520-7e52c236d964",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Ok - the validate-cluster bit is good to know.\r\n\r\nRe increasing tollerance - I don't think we should allow for higher toleration. If we're running 5k-node test, then we don't want to run with 3k or 4k nodes, because that will make results incomparable, etc.\r\n\r\nBut not waiting long enough probably make sense given that we will fail right after that.",
        "createdAt" : "2018-08-24T07:11:49Z",
        "updatedAt" : "2018-08-24T07:11:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "65850950b4215fce28b918ed60400e3702619be9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2362,2366 @@        --project \"${PROJECT}\" \\\n        --timeout \"${MIG_WAIT_UNTIL_STABLE_TIMEOUT}\" || true;\n  done\n}\n"
  },
  {
    "id" : "e64abaee-48cf-454b-8467-89350bcf8d7c",
    "prId" : 64591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64591#pullrequestreview-125414314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e298b83d-22d5-419e-86ad-b84462736379",
        "parentId" : null,
        "authorId" : "825edc96-c83b-443e-b383-681319b474e8",
        "body" : "@jingax10 We have to do this, because the python yaml lib has a bug, it will detect the \"---\" and raise an error even it is in single quoted. \r\nhttps://github.com/yaml/pyyaml/blob/master/lib/yaml/scanner.py#L1264",
        "createdAt" : "2018-06-03T08:38:14Z",
        "updatedAt" : "2018-06-04T03:48:32Z",
        "lastEditedBy" : "825edc96-c83b-443e-b383-681319b474e8",
        "tags" : [
        ]
      },
      {
        "id" : "7218676c-bd1b-405e-9eba-49d5df02b565",
        "parentId" : "e298b83d-22d5-419e-86ad-b84462736379",
        "authorId" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "body" : "why we need CUSTOM_NETD_YAML here? Please refer to an example of CUSTOM_KUBE_DNS_YAML.",
        "createdAt" : "2018-06-03T17:01:10Z",
        "updatedAt" : "2018-06-04T03:48:32Z",
        "lastEditedBy" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "tags" : [
        ]
      },
      {
        "id" : "a79f9f51-c2d7-43b9-87cd-c4df36bb6619",
        "parentId" : "e298b83d-22d5-419e-86ad-b84462736379",
        "authorId" : "825edc96-c83b-443e-b383-681319b474e8",
        "body" : "You mean this https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/gci/configure-helper.sh#L2230 ?\r\n We want to pass the yaml via the kube-env but not check it in.  So we can't cat it in the configure-helper.sh.\r\nThe bug I mentioned is happened  when configure-helper.sh trying to save kube-env from metadata server.\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cluster/gce/gci/configure.sh#L67\r\n",
        "createdAt" : "2018-06-04T00:18:51Z",
        "updatedAt" : "2018-06-04T03:48:32Z",
        "lastEditedBy" : "825edc96-c83b-443e-b383-681319b474e8",
        "tags" : [
        ]
      },
      {
        "id" : "bd5578e2-bdc3-4e85-819d-846f97acad59",
        "parentId" : "e298b83d-22d5-419e-86ad-b84462736379",
        "authorId" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "body" : "I meant you should remove CUSTOM_NETD_YAML. Just take customized DNS as example, the relevant CUSTOM_KUBE_DNS_YAML is not needed here.",
        "createdAt" : "2018-06-04T00:32:00Z",
        "updatedAt" : "2018-06-04T03:48:32Z",
        "lastEditedBy" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "daf5e15535674483791f798bf16f82f42c32c3a9",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +902,906 @@ENABLE_NETD: $(yaml-quote ${ENABLE_NETD:-false})\nCUSTOM_NETD_YAML: |\n$(echo \"${CUSTOM_NETD_YAML:-}\" | sed -e \"s/'/''/g\")\nEOF\n  if [[ \"${master}\" == \"true\" && \"${MASTER_OS_DISTRIBUTION}\" == \"gci\" ]] || \\"
  },
  {
    "id" : "a85ac84f-3f64-452f-b80a-1c4ed5145dd1",
    "prId" : 62183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62183#pullrequestreview-111032599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16fb7913-105f-4a89-9c6c-2e7dd440716e",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Name in comment doesn't match actual function name...",
        "createdAt" : "2018-04-09T22:43:47Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "e20486d6-eb89-41ca-be13-c85835cadac5",
        "parentId" : "16fb7913-105f-4a89-9c6c-2e7dd440716e",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "done",
        "createdAt" : "2018-04-10T17:15:47Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "2ca57ccf-d6c3-4673-a663-deac5bd94ec4",
        "parentId" : "16fb7913-105f-4a89-9c6c-2e7dd440716e",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Looks great!\r\n\r\nYou're taking a `${file}` argument here but you don't use it anywhere. Just remove it (and shift the other two up.)",
        "createdAt" : "2018-04-10T22:00:37Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "c3586b1d-7702-4fe6-b802-4ae1e02e8adf",
        "parentId" : "16fb7913-105f-4a89-9c6c-2e7dd440716e",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "ya just found that too, caused a parsing bug :D",
        "createdAt" : "2018-04-10T22:25:46Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "420edc7b50ff035fb5773e0590c2f6d21898d5f8",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +534,538 @@}\n\n# yaml-map-string-stringarray converts the encoded structure to yaml format, and echoes the result\n# under the provided name. If the encoded structure is empty, echoes nothing.\n# 1: name to be output in yaml"
  },
  {
    "id" : "bf6f7ead-8cd1-43f7-9c6b-736c8dec131f",
    "prId" : 62183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62183#pullrequestreview-111032966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faa1533b-4cc0-4519-bb26-507ab809f7ca",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Also doesn't match the actual function... Missing a `write-` prefix here.",
        "createdAt" : "2018-04-09T23:07:44Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "b1f00492-e675-4b48-8103-49fad663a797",
        "parentId" : "faa1533b-4cc0-4519-bb26-507ab809f7ca",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Done.",
        "createdAt" : "2018-04-10T17:46:39Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "2ac99698-b40f-4dd7-9519-4fa8f865c3ca",
        "parentId" : "faa1533b-4cc0-4519-bb26-507ab809f7ca",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Same here, `${file}` should be gone...",
        "createdAt" : "2018-04-10T22:03:02Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "3ef210ae-4537-4b41-a5f2-e10fbdd25377",
        "parentId" : "faa1533b-4cc0-4519-bb26-507ab809f7ca",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "done",
        "createdAt" : "2018-04-10T22:27:14Z",
        "updatedAt" : "2018-04-13T20:09:20Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "420edc7b50ff035fb5773e0590c2f6d21898d5f8",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +572,576 @@}\n\n# yaml-map-string-string converts the encoded structure to yaml format, and echoes the result\n# under the provided name. If the encoded structure is empty, echoes nothing.\n# 1: name to be output in yaml"
  },
  {
    "id" : "59fb1b20-8f93-42c4-956b-9688e7973e44",
    "prId" : 61065,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61065#pullrequestreview-103657811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95d81112-75d0-4f42-a395-93c1c34dbc24",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this skips checking for the required components, too - is that what we want? (I don't know how the components work with dev gcloud.)",
        "createdAt" : "2018-03-13T21:44:38Z",
        "updatedAt" : "2018-03-13T21:44:38Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "6ea31182-cf51-4aab-ab99-c48350d2e37e",
        "parentId" : "95d81112-75d0-4f42-a395-93c1c34dbc24",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I noticed that dev gcloud will not report version of individual components. That is why dev gcloud could not pass the validation here, although everything is in place. ",
        "createdAt" : "2018-03-14T00:15:43Z",
        "updatedAt" : "2018-03-14T00:15:43Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec77fe97ecd827efc053c4263677f39d53cb1032",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1202,1206 @@if \"CL @\" in rel:\n  print(\"Using dev version of gcloud: %s\" %rel)\n  exit(0)\nif rel != \"HEAD\" and version.LooseVersion(rel) < minVersion:\n  print(\"gcloud version out of date ( < %s )\" % minVersion)"
  },
  {
    "id" : "1bb39efa-573e-4f90-b4f4-e3517f6acd13",
    "prId" : 60590,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60590#pullrequestreview-100231045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "808253a0-07da-4284-8b1d-c1df761b005f",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Setting it here will put it into the metadata, but presumably you need to also make a change on the master to apply the new resource? Or is that code already in place?",
        "createdAt" : "2018-02-28T20:57:45Z",
        "updatedAt" : "2018-03-22T20:54:44Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "f979cbfd-b02a-42c0-af3c-c3d08744fb1f",
        "parentId" : "808253a0-07da-4284-8b1d-c1df761b005f",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Yes, such code already exists:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cluster/gce/gci/configure-helper.sh#L1654\r\n",
        "createdAt" : "2018-02-28T21:14:16Z",
        "updatedAt" : "2018-03-22T20:54:44Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d08799ca098c6143ceaa4aa1c0ae800aa5c3a105",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +835,839 @@ETCD_PEER_KEY: $(yaml-quote ${ETCD_PEER_KEY_BASE64:-})\nETCD_PEER_CERT: $(yaml-quote ${ETCD_PEER_CERT_BASE64:-})\nENCRYPTION_PROVIDER_CONFIG: $(yaml-quote ${ENCRYPTION_PROVIDER_CONFIG:-})\nEOF\n    if [[ \"${ENABLE_TOKENREQUEST:-}\" == \"true\" ]]; then"
  },
  {
    "id" : "015673ed-5466-4359-a285-11f9b0b5f3d6",
    "prId" : 60102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60102#pullrequestreview-102139300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eec87a7b-e62a-4403-b8df-a2aa84cc5829",
        "parentId" : null,
        "authorId" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "body" : "Do we still need the capitalization?",
        "createdAt" : "2018-03-07T22:05:41Z",
        "updatedAt" : "2018-03-07T23:30:03Z",
        "lastEditedBy" : "e9206068-cf10-4ff4-86b1-27a295a2f7b8",
        "tags" : [
        ]
      },
      {
        "id" : "20e08402-ee9f-4b9a-86a0-b00e03525e82",
        "parentId" : "eec87a7b-e62a-4403-b8df-a2aa84cc5829",
        "authorId" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "body" : "My thinking was that it was safe to retain it for now.",
        "createdAt" : "2018-03-07T23:35:18Z",
        "updatedAt" : "2018-03-07T23:35:18Z",
        "lastEditedBy" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b1ff820c22dddbbdc98278c4934cdfabcef41f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1546,1550 @@  local mode=\"$(gcloud compute networks list --filter=\"name=('${NETWORK}')\" --project ${NETWORK_PROJECT} --format='value(x_gcloud_subnet_mode)' || true)\"\n  # The deprecated field uses lower case. Convert to upper case for consistency.\n  echo \"$(echo $mode | tr [a-z] [A-Z])\"\n}\n"
  },
  {
    "id" : "8ef2b7b5-47db-4873-871d-ac3023cbda6e",
    "prId" : 60020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60020#pullrequestreview-97677016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf3a6065-ee15-4a54-ad5e-9e2e955d4de0",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : ":+1: ",
        "createdAt" : "2018-02-19T23:39:00Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10c27ec0589c05f6e73357d43485dcb8842597",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +529,533 @@  flags+=\" --experimental-check-node-capabilities-before-mount=true\"\n  # Keep in sync with the mkdir command in configure-helper.sh (until the TODO is resolved)\n  flags+=\" --cert-dir=/var/lib/kubelet/pki/\"\n\n  if [[ \"${master}\" == \"true\" ]]; then"
  },
  {
    "id" : "747be5f0-92ca-426e-8722-b89b91263cc6",
    "prId" : 60020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60020#pullrequestreview-98084499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16507f5-0a49-4584-8ac7-96a77f55c95b",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "do we have a concept like KUBE_HOME in scope that we could use to compute CONTAINERIZED_MOUNTER_HOME?",
        "createdAt" : "2018-02-19T23:53:44Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "7f38d5ab-3607-49d8-931d-9cf59339a05e",
        "parentId" : "a16507f5-0a49-4584-8ac7-96a77f55c95b",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "configure-helper.sh defines `$KUBE_HOME` statically as `/home/kubernetes`. It isn't dynamically configurable, so there's no variable here that gets passed via the kube-env onto the kubelet to instruct the startup script to put the mounter into a configurable location. ",
        "createdAt" : "2018-02-21T06:20:35Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10c27ec0589c05f6e73357d43485dcb8842597",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +525,529 @@  flags+=\" --cluster-domain=${DNS_DOMAIN}\"\n  flags+=\" --pod-manifest-path=/etc/kubernetes/manifests\"\n  # Keep in sync with CONTAINERIZED_MOUNTER_HOME in configure-helper.sh\n  flags+=\" --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter\"\n  flags+=\" --experimental-check-node-capabilities-before-mount=true\""
  },
  {
    "id" : "b2180969-a604-41c5-805e-6f790be9744b",
    "prId" : 60020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60020#pullrequestreview-97677016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e86fe11-fe1d-4b94-8d81-fda69dcdf8b1",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "nice update to this comment",
        "createdAt" : "2018-02-20T00:16:11Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10c27ec0589c05f6e73357d43485dcb8842597",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +542,546 @@      flags+=\" --register-schedulable=false\"\n    else\n      # Note: Standalone mode is used by GKE\n      flags+=\" --pod-cidr=${MASTER_IP_RANGE}\"\n    fi"
  },
  {
    "id" : "1acc5f31-6884-4776-9751-ad94592c6a58",
    "prId" : 60020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60020#pullrequestreview-98678772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "909e3cf1-a63c-4269-a174-5ee66f4fd4b2",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "All this path hardcoding, when it was previously computed on the node, makes me a little nervous.",
        "createdAt" : "2018-02-20T00:17:30Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "4c2c04a2-ab35-4e07-9d01-70175998311c",
        "parentId" : "909e3cf1-a63c-4269-a174-5ee66f4fd4b2",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Most of it wasn't \"computed\" in the sense that it was dynamic. It was concatenated based on fixed strings. The notes here are to make sure we keep the fixed strings in sync between the flags and the on-node file. \r\n\r\nAs you move us to dynamic kubelet config, we should be trying to get rid of as much of the start up script as we can (e.g. the create-dir mkdir call) and make the kubelet more self sufficient. That should reduce the duplication of constants between the files. ",
        "createdAt" : "2018-02-21T06:27:16Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "7e077408-82b5-4382-b94a-4fb9aa885e40",
        "parentId" : "909e3cf1-a63c-4269-a174-5ee66f4fd4b2",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "sounds good",
        "createdAt" : "2018-02-22T18:32:34Z",
        "updatedAt" : "2018-02-25T06:40:22Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10c27ec0589c05f6e73357d43485dcb8842597",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +556,560 @@    fi\n    # Keep client-ca-file in sync with CA_CERT_BUNDLE_PATH in configure-helper.sh\n    flags+=\" --anonymous-auth=false --authorization-mode=Webhook --client-ca-file=/etc/srv/kubernetes/pki/ca-certificates.crt\"\n  fi\n  # Network plugin"
  },
  {
    "id" : "699767f9-9e96-464b-8655-516545fdd482",
    "prId" : 59908,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59908#pullrequestreview-97363943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "make sure that the `cluster/gce` files which were sourcing `cluster/common.sh` to get these functions are now sourcing `cluster/gce/util.sh`",
        "createdAt" : "2018-02-16T02:09:46Z",
        "updatedAt" : "2018-02-16T05:31:29Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "65419ec5-26d5-44ab-bfc3-e1fb80819984",
        "parentId" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "(I guess this should happen via `cluster/kube-util.sh`, based on `KUBERNETES_PROVIDER`)",
        "createdAt" : "2018-02-16T02:12:25Z",
        "updatedAt" : "2018-02-16T05:31:29Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "0b9439b7-2425-49f7-b160-1e46c2ce6255",
        "parentId" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "also if they don't have to source `cluster/common.sh` anymore, good to remove that dependency",
        "createdAt" : "2018-02-16T02:20:53Z",
        "updatedAt" : "2018-02-16T05:31:29Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "f7bf9123-766c-4e43-a754-5d0df4ce696b",
        "parentId" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "`cluster/gce/util.sh` is the only file that sources `cluster/common.sh` so there aren't any dependencies to remove. ",
        "createdAt" : "2018-02-16T05:30:39Z",
        "updatedAt" : "2018-02-16T05:31:35Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "dfa19e00-fb78-4352-97a8-7a645191b8ae",
        "parentId" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "sounds good (parsing as \"only file [in cluster/gce] that sources\")",
        "createdAt" : "2018-02-17T00:53:16Z",
        "updatedAt" : "2018-02-17T00:53:16Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "171d347f-13b6-4521-ade8-9c3dc9caaa9a",
        "parentId" : "5dab57e8-191c-4f54-91c6-9595bc52dceb",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Yes. There were no other files in the gce directory that needed to be updated. ",
        "createdAt" : "2018-02-17T03:33:33Z",
        "updatedAt" : "2018-02-17T03:33:33Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "49cb1024b74a56557e519e8493b68ce2017feb6b",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +391,395 @@  echo \"Using master: $KUBE_MASTER (external IP: $KUBE_MASTER_IP)\" >&2\n}\n\nfunction load-or-gen-kube-bearertoken() {\n  if [[ ! -z \"${KUBE_CONTEXT:-}\" ]]; then"
  },
  {
    "id" : "cbe9a5be-4674-49a5-be8c-2f90f2368ed3",
    "prId" : 58561,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58561#pullrequestreview-90338108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cd36bf6-2630-4736-8395-264f95e1bee1",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "why not use `kubernetes-staging` in your own env? :)",
        "createdAt" : "2018-01-20T04:19:15Z",
        "updatedAt" : "2018-01-20T04:19:36Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "c749dfa0-7e47-4842-84b9-01dc3515596a",
        "parentId" : "9cd36bf6-2630-4736-8395-264f95e1bee1",
        "authorId" : "569e0287-4d0e-4280-8b5d-733f87bfa4b9",
        "body" : "Good point :) Had I known I was gonna run into this issue I would have totally done that! I'm just hoping this will help someone else down the line. ",
        "createdAt" : "2018-01-20T05:02:02Z",
        "updatedAt" : "2018-01-20T05:02:02Z",
        "lastEditedBy" : "569e0287-4d0e-4280-8b5d-733f87bfa4b9",
        "tags" : [
        ]
      },
      {
        "id" : "87d1ee86-2a8a-4b1c-bde2-508f2c33e469",
        "parentId" : "9cd36bf6-2630-4736-8395-264f95e1bee1",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm not sure I understand this change. What's the motivation of it?",
        "createdAt" : "2018-01-21T10:38:56Z",
        "updatedAt" : "2018-01-21T10:38:56Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "ae3918f8-69d0-4b7c-be59-c157f87818e2",
        "parentId" : "9cd36bf6-2630-4736-8395-264f95e1bee1",
        "authorId" : "569e0287-4d0e-4280-8b5d-733f87bfa4b9",
        "body" : "I wrote a little bit about it in the PR description above, but basically, I'm running a production cluster and staging cluster and I have GCE instances named `kubernetes-master-001`, `kubernetes-master-002`, etc and more GCE instances named `staging-kubernetes-master-001`, `staging-kubernetes-master-002`, etc. \r\n\r\nWhen running `kube-up.sh` to create another production master, the `INITIAL_ETCD_CLUSTER` contains the production and staging instances when it should only be production instances. As a result, etcd fails to startup with an errors like `member count unequal` -> the api server fails to startup -> nothing else works and the newly created master is broken.\r\n\r\nThis change makes sure that the `INITIAL_ETCD_CLUSTER` only contains the production master instances.",
        "createdAt" : "2018-01-21T17:08:20Z",
        "updatedAt" : "2018-01-21T17:08:20Z",
        "lastEditedBy" : "569e0287-4d0e-4280-8b5d-733f87bfa4b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9e43f3a6f1b3518630bc9829001a82cdaf24794",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1869,1873 @@# VM names may either be MASTER_NAME or MASTER_NAME with a suffix for a replica.\nfunction get-replica-name-regexp() {\n  echo \"^${MASTER_NAME}(-...)?\"\n}\n"
  },
  {
    "id" : "c08a3981-3fd6-404d-a54f-fc5db90c09ed",
    "prId" : 54623,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54623#pullrequestreview-72651942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2417a5ad-f4dc-4c56-9c09-f2a6a2df984d",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "How is this default still set to minion instead of node? I wonder if it's because upgrades don't work if we change it to -node... @krousey ",
        "createdAt" : "2017-10-26T14:31:21Z",
        "updatedAt" : "2017-10-26T14:31:21Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "15c8c300-c9a7-4ed8-abc5-fc8a2b88aaa0",
        "parentId" : "2417a5ad-f4dc-4c56-9c09-f2a6a2df984d",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Yea. The relevant code is `detect-node-names`.\r\n\r\n```shell\r\n  INSTANCE_GROUPS+=($(gcloud compute instance-groups managed list \\\r\n    --project \"${PROJECT}\" \\\r\n    --filter \"name ~ '${NODE_INSTANCE_PREFIX}-.+' AND zone:(${ZONE})\" \\\r\n    --format='value(name)' || true))\r\n```",
        "createdAt" : "2017-10-27T23:28:52Z",
        "updatedAt" : "2017-10-27T23:28:52Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a217217c13dd85ecc6b6c4dca5efc705aba48bb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +85,89 @@fi\n\nNODE_INSTANCE_PREFIX=${NODE_INSTANCE_PREFIX:-\"${INSTANCE_PREFIX}-minion\"}\n\nNODE_TAGS=\"${NODE_TAG}\""
  },
  {
    "id" : "39e52ece-9664-4590-bc1f-68abd98801eb",
    "prId" : 53626,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53626#pullrequestreview-68465680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1640ef79-af02-4554-ab60-703e3c26c304",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Maybe call this inside `delete-network` and get rid of the `# might fail if there are leaked firewall rules` comment below?",
        "createdAt" : "2017-10-10T20:20:53Z",
        "updatedAt" : "2017-10-10T21:49:19Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "c38b6ee8-fffb-4d21-bc3b-85365136330a",
        "parentId" : "1640ef79-af02-4554-ab60-703e3c26c304",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Ref https://github.com/kubernetes/kubernetes/pull/53626#discussion_r143827108, WDYT about keeping resource cleanup detached?\r\n\r\nI revised that comment a bit as it isn't completely right. Network deletion might fail no only due to firewalls, but also routes, VMs, or any others that reference this network.",
        "createdAt" : "2017-10-10T21:50:28Z",
        "updatedAt" : "2017-10-10T21:50:28Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "8576a373-76b2-4404-849c-9a7e70f7acc1",
        "parentId" : "1640ef79-af02-4554-ab60-703e3c26c304",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Sounds good.",
        "createdAt" : "2017-10-11T00:35:31Z",
        "updatedAt" : "2017-10-11T00:35:31Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "80f57b7df7cefdefa60d5c543d1767d5ac157818",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1739,1743 @@    if [[ \"${KUBE_DELETE_NETWORK}\" == \"true\" ]]; then\n      # Delete all remaining firewall rules in the network.\n      delete-all-firewall-rules || true\n      delete-subnetworks || true\n      delete-network || true  # might fail if there are leaked resources that reference the network"
  },
  {
    "id" : "9f2a5dc2-e5fe-4c1d-af6f-5403286ea115",
    "prId" : 53466,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53466#pullrequestreview-77263742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c78e566-0e11-40b3-93d0-329d9b26e77e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : ":- here as well",
        "createdAt" : "2017-11-16T21:10:52Z",
        "updatedAt" : "2017-11-16T21:10:52Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "028258244c864aec97ef1dfec371c858ec390f73",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +40,44 @@fi\n\nif [[ ${NODE_LOCAL_SSDS} -ge 1 ]] && [[ ! -z ${NODE_LOCAL_SSDS_EXT} ]] ; then\n  echo -e \"${color_red}Local SSD: Only one of NODE_LOCAL_SSDS and NODE_LOCAL_SSDS_EXT can be specified at once${color_norm}\" >&2\n  exit 2"
  },
  {
    "id" : "9e662a06-0a0a-43bf-ad1d-9dc4ac8ce0a4",
    "prId" : 53466,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53466#pullrequestreview-77264033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad571a7-3e78-4552-a22e-7dd2d59f87dd",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "instead of `-\"\"`, use `:-`",
        "createdAt" : "2017-11-16T21:11:56Z",
        "updatedAt" : "2017-11-16T21:11:56Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "028258244c864aec97ef1dfec371c858ec390f73",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +619,623 @@  local local_ssds=\"\"\n  local_ssd_ext_count=0\n  if [[ ! -z ${NODE_LOCAL_SSDS_EXT-\"\"} ]]; then\n    IFS=\";\" read -r -a ssdgroups <<< ${NODE_LOCAL_SSDS_EXT}\n    for ssdgroup in \"${ssdgroups[@]}\""
  },
  {
    "id" : "4f299fea-d027-47a0-9d50-7891da5c5d10",
    "prId" : 50398,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50398#pullrequestreview-59450582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18c82a1a-bfbd-4476-9ac0-7bcd1c6c501f",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "why is it sometimes `zone:(${ZONE})` and sometimes `zone=(${ZONE})`?",
        "createdAt" : "2017-08-30T05:23:50Z",
        "updatedAt" : "2017-08-30T05:41:28Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "7db4a5d4-4a2b-4a0c-8773-1d4459c15433",
        "parentId" : "18c82a1a-bfbd-4476-9ac0-7bcd1c6c501f",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "ah, I guess `:(` matches patterns, whereas `=(` matches exactly, per https://cloud.google.com/sdk/gcloud/reference/topic/filters.\r\n\r\nthis is probably fine, though I'm guessing `=(` is maybe more correct?",
        "createdAt" : "2017-08-30T05:29:23Z",
        "updatedAt" : "2017-08-30T05:41:28Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "b07b3d9b-0bb8-42cf-80ab-97746ce81f18",
        "parentId" : "18c82a1a-bfbd-4476-9ac0-7bcd1c6c501f",
        "authorId" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "body" : "@ixdy the reasoning in full [is here](https://github.com/kubernetes/kubernetes/pull/50398#issuecomment-324380995) but `:` seems to be the way `gcloud` pushes as `=` flat out doesn't work for zones",
        "createdAt" : "2017-08-30T05:33:08Z",
        "updatedAt" : "2017-08-30T05:41:28Z",
        "lastEditedBy" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "tags" : [
        ]
      },
      {
        "id" : "6d67331b-fead-47d4-bec4-ac7229ba7684",
        "parentId" : "18c82a1a-bfbd-4476-9ac0-7bcd1c6c501f",
        "authorId" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "body" : "@ixdy Very sorry - I missed [one zone here](cluster/validate-cluster.sh) I'll fix that",
        "createdAt" : "2017-08-30T05:40:21Z",
        "updatedAt" : "2017-08-30T05:41:28Z",
        "lastEditedBy" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "tags" : [
        ]
      },
      {
        "id" : "b666b6ad-7526-4756-ae41-64824fcf2a96",
        "parentId" : "18c82a1a-bfbd-4476-9ac0-7bcd1c6c501f",
        "authorId" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "body" : "ok, there now shouldn't be any occurrences of `zone=` inside a filter",
        "createdAt" : "2017-08-30T05:47:14Z",
        "updatedAt" : "2017-08-30T05:47:14Z",
        "lastEditedBy" : "1004452d-a217-4de0-a24e-9c5fb45463c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "697f92a5d2944a34d53fa91e266d58c0128f9243",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +336,340 @@  INSTANCE_GROUPS+=($(gcloud compute instance-groups managed list \\\n    --project \"${PROJECT}\" \\\n    --filter \"name ~ '${NODE_INSTANCE_PREFIX}-.+' AND zone:(${ZONE})\" \\\n    --format='value(name)' || true))\n  NODE_NAMES=()"
  },
  {
    "id" : "dc191551-d6a0-464d-ba90-8458d83836c2",
    "prId" : 47513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47513#pullrequestreview-45412671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dedc9ca-d92f-4840-a065-9259607a1be8",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Shouldn't this be scaled with the # of nodes?",
        "createdAt" : "2017-06-21T00:42:22Z",
        "updatedAt" : "2017-06-26T19:27:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "f51d0eda-1672-435c-86de-a27708d1f689",
        "parentId" : "8dedc9ca-d92f-4840-a065-9259607a1be8",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Also, should we expand if it is not needed?",
        "createdAt" : "2017-06-21T00:42:49Z",
        "updatedAt" : "2017-06-26T19:27:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "e9df4090-6f98-462d-a87d-91a6094622fb",
        "parentId" : "8dedc9ca-d92f-4840-a065-9259607a1be8",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "In the fullness of time yes. But not for 1.7. Now that I think about this the best user experience would be to try using current network (if it exists) and do all this subnet magic if it doesn't. This means that we just want to create subnet big enough for biggest cluster we support if we're setting up whole networking. In the future probably ClusterAutoscaler should handle that.",
        "createdAt" : "2017-06-21T12:17:13Z",
        "updatedAt" : "2017-06-26T19:27:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "536f48ef152fde944ace3bb65798ba0d84cce091",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +794,798 @@    --region=\"${REGION}\" \\\n    --project \"${PROJECT}\" \\\n    --prefix-length=19 \\\n    --quiet\n}"
  },
  {
    "id" : "18d4e1fb-0315-4eed-ae51-ac1badfa0d62",
    "prId" : 47513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47513#pullrequestreview-46245949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88283f8f-bf47-40b6-b996-301d3e8b7787",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Should we delete the default subnetworks? As I understand it, you expand the existing subnetwork, but then we delete them here. Should we keep the default (but expanded) subnetwork? Why is deletion required in that case?",
        "createdAt" : "2017-06-23T19:07:12Z",
        "updatedAt" : "2017-06-26T19:27:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "7dcd1485-1a3a-41e5-a618-82972b2550d2",
        "parentId" : "88283f8f-bf47-40b6-b996-301d3e8b7787",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "After my change to line 1658 if we enter this part of code it means that `KUBE_DELETE_NETWORK=true`. This may be wrong, but I'd argue that semantics of  `KUBE_DELETE_NETWORK=false` was \"I want to keep my networking setup\", and \"=true\" I want to get rid of all Kubernetes networking. If we want to have more possibilities we need more flags...",
        "createdAt" : "2017-06-26T12:26:31Z",
        "updatedAt" : "2017-06-26T19:27:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "536f48ef152fde944ace3bb65798ba0d84cce091",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +899,903 @@function delete-subnetworks() {\n  if [[ ${ENABLE_IP_ALIASES:-} != \"true\" ]]; then\n    if [[ \"${ENABLE_BIG_CLUSTER_SUBNETS}\" = \"true\" ]]; then\n      # If running in custom mode network we need to delete subnets\n      mode=\"$(gcloud compute networks list ${NETWORK} --format='value(x_gcloud_mode)' || true)\""
  },
  {
    "id" : "ceba2aab-2f84-4e7d-b8fe-cb269c3630c0",
    "prId" : 46792,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46792#pullrequestreview-45005861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5e058a2-7b78-4e7f-a770-65d635809e33",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "typo: already",
        "createdAt" : "2017-06-20T00:12:26Z",
        "updatedAt" : "2017-06-20T00:12:26Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2450d2eb7b0def9ccd6b348515d880db81a9e4d",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +169,173 @@  local -r basename_tar=$(basename ${tar})\n\n  #check whether this tar alread exists and has the same hash\n  #if it matches, then don't bother uploading it again\n"
  },
  {
    "id" : "7c0fad68-9d6f-498d-90b4-fe70a6be864c",
    "prId" : 45136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45136#pullrequestreview-39654796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "620c0efc-3223-4ad9-9cc1-ca6ccd7d8a54",
        "parentId" : null,
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "since you are changing the default version, why refer to `google-containers` project in context of `gci` here and elsewhere? why not just switch the projects to `cos-cloud`?",
        "createdAt" : "2017-05-22T23:32:24Z",
        "updatedAt" : "2017-05-22T23:37:27Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      },
      {
        "id" : "37b055fc-c550-442f-a060-1dea58f99392",
        "parentId" : "620c0efc-3223-4ad9-9cc1-ca6ccd7d8a54",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I can change the defaults here too. Honestly I don't think it matters. All these hacks would hopefully disappear soon.\r\nAt this point, I want this PR to go in and then I can clean things up.",
        "createdAt" : "2017-05-23T06:50:43Z",
        "updatedAt" : "2017-05-23T06:50:43Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "333e571bee76610da7ee3185c029c8c93cec2a02",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +39,43 @@\nif [[ \"${MASTER_OS_DISTRIBUTION}\" == \"gci\" ]]; then\n    DEFAULT_GCI_PROJECT=google-containers\n    if [[ \"${GCI_VERSION}\" == \"cos\"* ]]; then\n        DEFAULT_GCI_PROJECT=cos-cloud"
  },
  {
    "id" : "c83e266d-c862-4c28-8907-28c58f1e1b89",
    "prId" : 45136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45136#pullrequestreview-39796136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d824673b-0c05-4f99-a980-5d6bb03e7998",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "`\"cos\"*` is a neat trick, will have to add that to my toolbox.",
        "createdAt" : "2017-05-23T16:33:49Z",
        "updatedAt" : "2017-05-23T16:46:37Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "333e571bee76610da7ee3185c029c8c93cec2a02",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +40,44 @@if [[ \"${MASTER_OS_DISTRIBUTION}\" == \"gci\" ]]; then\n    DEFAULT_GCI_PROJECT=google-containers\n    if [[ \"${GCI_VERSION}\" == \"cos\"* ]]; then\n        DEFAULT_GCI_PROJECT=cos-cloud\n    fi"
  },
  {
    "id" : "04fba3c1-85aa-4eb8-8802-2e53220237b5",
    "prId" : 45130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45130#pullrequestreview-35612446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89b9fac8-e000-4bda-87a5-9140e50b0eed",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@mikedanese @zmerlynn any objections towards switching OSS to using beta APIs?",
        "createdAt" : "2017-04-28T23:04:41Z",
        "updatedAt" : "2017-04-28T23:04:56Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ffa3b9ed-89d4-46d5-ab2d-bdb34bb6967a",
        "parentId" : "89b9fac8-e000-4bda-87a5-9140e50b0eed",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "should we do similar to this PR in gke? cc @roberthbailey ",
        "createdAt" : "2017-04-29T00:31:35Z",
        "updatedAt" : "2017-04-29T00:31:35Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "d7e6e5e1-2b84-4a2f-9303-c976b34c2783",
        "parentId" : "89b9fac8-e000-4bda-87a5-9140e50b0eed",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I have a change list out for GKE already.",
        "createdAt" : "2017-04-29T00:38:37Z",
        "updatedAt" : "2017-04-29T00:38:37Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "733730cc-d078-487c-889e-688a77d6aeed",
        "parentId" : "89b9fac8-e000-4bda-87a5-9140e50b0eed",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@mikedanese can I assume no objections towards this change then?",
        "createdAt" : "2017-04-29T01:30:15Z",
        "updatedAt" : "2017-04-29T01:30:15Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "eb2cc702-5ef9-4707-8e71-dac5746d6ee7",
        "parentId" : "89b9fac8-e000-4bda-87a5-9140e50b0eed",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Not from me. Thanks.",
        "createdAt" : "2017-05-01T18:08:21Z",
        "updatedAt" : "2017-05-01T18:08:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e74d4a0d682653dd4f5c2087f8aae8a5ac0dda10",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +537,541 @@  while true; do\n    echo \"Attempt ${attempt} to create ${1}\" >&2\n    if ! ${gcloud} beta compute instance-templates create \\\n      \"$template_name\" \\\n      --project \"${PROJECT}\" \\"
  },
  {
    "id" : "4ac05c42-f7d8-4685-aeea-0c26497dc67f",
    "prId" : 45130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45130#pullrequestreview-35483907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc22ee5f-421d-42af-91d6-34a470cd34d1",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "does it matter that terminate is all caps?  Looks like [the documentation](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options#setnewoption) has it lowercase...",
        "createdAt" : "2017-04-29T00:31:01Z",
        "updatedAt" : "2017-04-29T00:31:01Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "92a34f72-c4fb-4d23-9c5c-e91ebb713ed3",
        "parentId" : "bc22ee5f-421d-42af-91d6-34a470cd34d1",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "jk, found the full example [here](https://cloud.google.com/compute/docs/gpus/add-gpus)",
        "createdAt" : "2017-04-29T00:32:26Z",
        "updatedAt" : "2017-04-29T00:32:26Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "e74d4a0d682653dd4f5c2087f8aae8a5ac0dda10",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +532,536 @@  # More details here - https://cloud.google.com/compute/docs/gpus/add-gpus#create-new-gpu-instance\n  if [[ ! -z \"${NODE_ACCELERATORS}\" ]]; then\n      accelerator_args=\"--maintenance-policy TERMINATE --restart-on-failure --accelerator ${NODE_ACCELERATORS}\"\n  fi\n  local attempt=1"
  },
  {
    "id" : "3e188b6b-9ca3-4d15-b0e7-8fc37d19dff5",
    "prId" : 44744,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44744#pullrequestreview-38178054",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63005ba7-4dc6-49d7-93ec-e82178c0f08a",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "We don't update copyright dates. The dates should be when the file was added.",
        "createdAt" : "2017-05-15T17:13:47Z",
        "updatedAt" : "2017-05-15T17:13:47Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d66fc97cd73f2e7fcf2ff7152ae4a32550a08c6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@#!/bin/bash\n\n# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");"
  },
  {
    "id" : "b539c845-3800-4193-84a5-f4ce34cacfd7",
    "prId" : 42994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42994#pullrequestreview-27303781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "939f915d-fc87-4695-951e-57951436e193",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Who creates `${KUBE_TEMP}/cfssl` directory?",
        "createdAt" : "2017-03-16T10:33:38Z",
        "updatedAt" : "2017-03-24T01:18:37Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "d5cda2f3-9917-471e-b0ac-f3740a6e749e",
        "parentId" : "939f915d-fc87-4695-951e-57951436e193",
        "authorId" : "8e20da89-8a0d-4598-96b7-5e7b6de4cd88",
        "body" : "The directory `${KUBE_TEMP}/cfssl` will create in `download-cfssl` function, but it's not exists before call download in `generate-etcd-cert` function. It maybe cause error: `the file or directory not exists`. I'll fix it.",
        "createdAt" : "2017-03-16T10:44:03Z",
        "updatedAt" : "2017-03-24T01:18:37Z",
        "lastEditedBy" : "8e20da89-8a0d-4598-96b7-5e7b6de4cd88",
        "tags" : [
        ]
      }
    ],
    "commit" : "c692b55b57163dc4f8953c2941024d4abd77aaa9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +744,748 @@\n  GEN_ETCD_CA_CERT=\"${ca_cert}\" GEN_ETCD_CA_KEY=\"${ca_key}\" \\\n    generate-etcd-cert \"${KUBE_TEMP}/cfssl\" \"${host}\" \"peer\" \"peer\"\n\n  pushd \"${KUBE_TEMP}/cfssl\""
  },
  {
    "id" : "fe68270f-f5d0-4921-a62d-4c032c541202",
    "prId" : 39020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39020#pullrequestreview-15018835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b51ba6d-a193-4b8a-8910-b87be2b098c8",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Is there a reason this function isn't in `cluster/common.sh` vs here?",
        "createdAt" : "2017-01-03T21:48:18Z",
        "updatedAt" : "2017-01-03T21:48:18Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "8360bc1a9fd844794c753ea1c7977bf96331c03c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +732,736 @@#   KUBE_TEMP: temporary directory\n#\nfunction download-cfssl {\n  mkdir -p \"${KUBE_TEMP}/cfssl\"\n  pushd \"${KUBE_TEMP}/cfssl\""
  },
  {
    "id" : "133e6a98-1623-4b10-952c-bd405fa9d877",
    "prId" : 36999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36999#pullrequestreview-9475326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37f93dcf-c82e-4050-a851-420dbbf9d88e",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Why are you adding it?",
        "createdAt" : "2016-11-21T14:20:47Z",
        "updatedAt" : "2016-11-22T11:03:52Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "b8a165d6-6e5f-4cce-a909-676a6653fde9",
        "parentId" : "37f93dcf-c82e-4050-a851-420dbbf9d88e",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "We need to distinguish two cases: \r\n1. we want to set-up multimaster cluster with kubelets in a single zone (MULTIZONE=true, E2E_ZONES=false) a\r\n2. we want to set-up cluster with kubelets in many zones (MULTIZONE=ture, E2E_ZONES={list of zones for kubelets})\r\n",
        "createdAt" : "2016-11-21T15:34:16Z",
        "updatedAt" : "2016-11-22T11:03:52Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01998f5fa4146d8f2d5f71a10b48b1199e33293",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +1817,1821 @@  detect-project\n\n  if [[ ${MULTIZONE:-} == \"true\" && -n ${E2E_ZONES:-} ]]; then\n    for KUBE_GCE_ZONE in ${E2E_ZONES}\n    do"
  },
  {
    "id" : "0ff21606-c1da-474b-9343-403c17f5e5ed",
    "prId" : 34750,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34750#pullrequestreview-4160628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Maybe something like `delete-network || echo \"failed to delete network\"`?\n",
        "createdAt" : "2016-10-13T20:05:33Z",
        "updatedAt" : "2016-10-13T20:05:33Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "02600218-9720-451e-ae4b-2021f95283fa",
        "parentId" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "`delete-network` already does that.\n",
        "createdAt" : "2016-10-13T20:06:56Z",
        "updatedAt" : "2016-10-13T20:06:56Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "b7f1ca45-9f41-4251-a10e-d1d0ec8f63f9",
        "parentId" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "Please address this in a followup so the tests pass sooner.  Then I can merge this and unblock the queue.\n",
        "createdAt" : "2016-10-13T20:07:11Z",
        "updatedAt" : "2016-10-13T20:07:11Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      },
      {
        "id" : "7323954b-4e9d-4153-bbd3-6901b96d23a6",
        "parentId" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "hmm - this is super strange. \"Delete network\" may fail when there are leaked firewall rules? If so, that as soon as we leak firewall rules in all networks, we won't be able to delete any. Or am I missing something?\n",
        "createdAt" : "2016-10-13T20:33:29Z",
        "updatedAt" : "2016-10-13T20:33:29Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e9ee56d0-c462-40c1-9022-28f025b9c22d",
        "parentId" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I should probably update the comment, since leaked VMs, routes, and other things will also prevent network deletion.\n\nBasically, with the `gcloud` API it'll only delete the network if there are no resources in it. In the cloud console (web) it'll first delete anything in the network.\n",
        "createdAt" : "2016-10-13T20:41:41Z",
        "updatedAt" : "2016-10-13T20:41:41Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "7be6640a-b317-4b8e-820d-b37d90893e79",
        "parentId" : "a4a5a406-c1dd-4e23-a336-f69cf1fab295",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "@krzyzacy is working on a janitor to clean up leaked resources, so I'm not super worried about this.\n",
        "createdAt" : "2016-10-13T20:42:26Z",
        "updatedAt" : "2016-10-13T20:42:26Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b65d4a3902d36a450d721305a35365287000d8c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1363,1367 @@    \"${NETWORK}-default-internal\"  # Pre-1.5 clusters\n  if [[ \"${KUBE_DELETE_NETWORK}\" == \"true\" ]]; then\n    delete-network || true  # might fail if there are leaked firewall rules\n  fi\n"
  },
  {
    "id" : "0a841b06-fa85-4a81-b46b-5273d62447ce",
    "prId" : 34577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34577#pullrequestreview-3972304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8213adc7-e1eb-4759-ab86-4f91c82874ac",
        "parentId" : null,
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : "Assume the flag is renamed? I saw other scripts still using --zone and might need to be renamed\n",
        "createdAt" : "2016-10-12T22:04:28Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      },
      {
        "id" : "9555da93-58c8-40e9-a252-a277e69224d4",
        "parentId" : "8213adc7-e1eb-4759-ab86-4f91c82874ac",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "`gcloud` has been pitching a warning for a while now, yeah.\n",
        "createdAt" : "2016-10-12T22:06:52Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "70de60d0-3356-4a76-81e4-d05bbea9cdd8",
        "parentId" : "8213adc7-e1eb-4759-ab86-4f91c82874ac",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Yeah, most `gcloud compute list` calls use `--zones` now instead of `--zone`. #29851 fixed most of these, but missed this one (which was added by #29995).\n\nI left this change as a separate commit to make that clear.\n",
        "createdAt" : "2016-10-12T22:08:28Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee6e92473d24c30417f49ca261fa7c436551fc48",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +1386,1390 @@  echo $(gcloud compute instances list \\\n    --project \"${PROJECT}\" \\\n    --zones \"${ZONE}\" \\\n    --regexp \"$(get-replica-name-regexp)\" \\\n    --format \"value(name)\" | head -n1)"
  },
  {
    "id" : "389dd6cf-233f-4c64-9ce4-81620052f5d2",
    "prId" : 34577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34577#pullrequestreview-3977327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec178fa7-6b7a-4aad-871b-1428ce5e7f98",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "firewalls?\n",
        "createdAt" : "2016-10-12T22:34:58Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "55211458-c6c8-4ea7-bcb4-c02bf7bf36e6",
        "parentId" : "ec178fa7-6b7a-4aad-871b-1428ce5e7f98",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "the command is `gcloud compute firewall-rules`, so I'm not sure what your comment means.\n",
        "createdAt" : "2016-10-12T22:46:45Z",
        "updatedAt" : "2016-10-12T22:46:46Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee6e92473d24c30417f49ca261fa7c436551fc48",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +712,716 @@    if ! gcloud compute networks delete --project \"${PROJECT}\" --quiet \"${NETWORK}\"; then\n      echo \"Failed to delete network '${NETWORK}'. Listing firewall-rules:\"\n      gcloud compute firewall-rules --project \"${PROJECT}\" list --filter=\"network=${NETWORK}\"\n      return 1\n    fi"
  },
  {
    "id" : "f65490a7-b2a6-4cbb-8627-d1d7c52e5039",
    "prId" : 34577,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34577#pullrequestreview-3979324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "oh, this is a lot more heavy-handed than I expected.  I do NOT think this should be teh default for non-test, because the default network is \"default\", and many people launch into an existing project.  This PR will totally nuke my project, if I understand it.\n",
        "createdAt" : "2016-10-12T22:36:12Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8665563f-ac8d-45f5-9458-f4b5b847caf7",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ugh, misreading, nevermind\n",
        "createdAt" : "2016-10-12T22:36:53Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f3d37209-022b-4538-8e43-98c10d8f83eb",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "no, I was right - this will delete the default net.  Taht would be bad\n",
        "createdAt" : "2016-10-12T22:38:08Z",
        "updatedAt" : "2016-10-12T22:46:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "288be73f-5ce3-47df-b204-f5d91c8df332",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it'd probably fail to delete the network, assuming there are other things using the network (e.g. firewall rules with a different prefix).\n\nin any case, you're right that this is a bit scary, so I've updated this so we only delete the network by default for test. (I still have this deleting the cluster firewall rules by default)\n",
        "createdAt" : "2016-10-12T22:48:01Z",
        "updatedAt" : "2016-10-12T22:48:01Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "e919cd2b-9a6a-4fc9-9f1f-6468ab9d4ed1",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "It won't, typically, because it takes all the dependencies being gone before the `default` network can be deleted using `gcloud` (unlike the webconsole, gcloud is just trying to delete this single object). That's not usually going to be the case because `default` has other fw rules in it to start (the `default-allow` rules, etc.).\n",
        "createdAt" : "2016-10-12T22:54:35Z",
        "updatedAt" : "2016-10-12T22:54:35Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "cf84d3ce-92c1-4d44-ab46-b0c1921839c7",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "That said, as I commented above, I don't think it should be the default for `config-default.sh`, simply because it'll usually error.\n",
        "createdAt" : "2016-10-12T22:54:57Z",
        "updatedAt" : "2016-10-12T22:54:58Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "4f985619-beb1-406c-983c-0d2b75367b79",
        "parentId" : "9fe53f13-e4b8-4353-af63-3f6a74e9acdb",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "And I was commenting on a non-refreshed copy, apparently, so this thread looks all jacked up. LGTM.\n",
        "createdAt" : "2016-10-12T23:03:04Z",
        "updatedAt" : "2016-10-12T23:03:04Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee6e92473d24c30417f49ca261fa7c436551fc48",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +710,714 @@function delete-network() {\n  if [[ -n $(gcloud compute networks --project \"${PROJECT}\" describe \"${NETWORK}\" --format='value(name)' 2>/dev/null || true) ]]; then\n    if ! gcloud compute networks delete --project \"${PROJECT}\" --quiet \"${NETWORK}\"; then\n      echo \"Failed to delete network '${NETWORK}'. Listing firewall-rules:\"\n      gcloud compute firewall-rules --project \"${PROJECT}\" list --filter=\"network=${NETWORK}\""
  },
  {
    "id" : "c6cc1d28-6c7c-43f1-93e0-305f7c8f5cbb",
    "prId" : 33655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33655#pullrequestreview-2311191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6050a580-3089-44fa-8267-7f27057fa6e3",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "How did it ever work? Were we deleting routes when deleting each replica?\n",
        "createdAt" : "2016-09-29T15:06:50Z",
        "updatedAt" : "2016-10-19T10:06:08Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "bbe5d7f6-f00c-4d02-9605-7084337ebdae",
        "parentId" : "6050a580-3089-44fa-8267-7f27057fa6e3",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Routes were deleted and instantly recreated by routecontroller. So, severity of this bug was low.\n",
        "createdAt" : "2016-09-30T11:40:07Z",
        "updatedAt" : "2016-10-19T10:06:08Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a93e10b3420d4d0575867d403fef4e151fdad88d",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1333,1337 @@\n  # If there are no more remaining master replicas: delete routes, pd for influxdb and update kubeconfig\n  if [[ \"${REMAINING_MASTER_COUNT}\" == \"0\" ]]; then\n    # Delete routes.\n    local -a routes"
  },
  {
    "id" : "58e0dd49-5ee2-41c7-b67f-6875c5553636",
    "prId" : 33094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33094#pullrequestreview-2490570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0044e2f7-2b6f-4b03-81c8-e3652edd1e30",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "As explained in my previous email I think we should only expose specific ports. At the very least please leave a TODO to check which ports are actually needed on master.\n",
        "createdAt" : "2016-10-03T09:27:50Z",
        "updatedAt" : "2016-10-03T09:38:12Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "7e803c32-833b-45ae-8335-c92717ae3a14",
        "parentId" : "0044e2f7-2b6f-4b03-81c8-e3652edd1e30",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Also I think it'd be useful to explain in a comment why do you exclude those two ports.\n",
        "createdAt" : "2016-10-03T09:31:28Z",
        "updatedAt" : "2016-10-03T09:38:12Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8cbac6753e9990e75e7fcad8c347faa98846707",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +661,665 @@      --network \"${NETWORK}\" \\\n      --source-ranges \"10.0.0.0/8\" \\\n      --allow \"tcp:1-2379,tcp:2382-65535,udp:1-65535,icmp\" \\\n      --target-tags \"${MASTER_TAG}\"&\n  fi"
  },
  {
    "id" : "ffca88e8-79ab-4901-8104-621888a308ef",
    "prId" : 33094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33094#pullrequestreview-2590997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fe25aa8-5913-474e-a5c2-b1cdbafbec05",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "oh, this should not have the `!` in front.\n",
        "createdAt" : "2016-10-03T19:36:53Z",
        "updatedAt" : "2016-10-03T19:36:53Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "68e27d78-62da-4e8f-bd5a-c158af113d16",
        "parentId" : "2fe25aa8-5913-474e-a5c2-b1cdbafbec05",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "#33963\n",
        "createdAt" : "2016-10-03T19:42:40Z",
        "updatedAt" : "2016-10-03T19:42:40Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8cbac6753e9990e75e7fcad8c347faa98846707",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1283,1287 @@    fi\n    # Delete firewall rule for etcd servers.\n    if ! gcloud compute firewall-rules --project \"${PROJECT}\" describe \"${MASTER_NAME}-etcd\" &>/dev/null; then\n      gcloud compute firewall-rules delete  \\\n        --project \"${PROJECT}\" \\"
  },
  {
    "id" : "f14d7b11-ecb8-4ac3-90ff-b93a5438f7c3",
    "prId" : 29995,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9505a84f-da78-4b14-864f-77d51681f755",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "For the future - it would be much easier to review this PR if you would fix those in a separate PR.\n",
        "createdAt" : "2016-08-03T14:42:04Z",
        "updatedAt" : "2016-08-15T20:37:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a41623b0f641dcfe8d26b9d5ee0f54e7123a52",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +99,103 @@KUBE_CLUSTER_INITIALIZATION_TIMEOUT=${KUBE_CLUSTER_INITIALIZATION_TIMEOUT:-300}\n\nfunction join_csv() {\n  local IFS=','; echo \"$*\";\n}"
  },
  {
    "id" : "d0b418b9-f7ec-41dd-bb51-cdde5670c0bb",
    "prId" : 29995,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08b765d3-1438-45c4-b3b3-c0261ea35c85",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "What I'm afraid about here is that if (after those commands) replicating master fails (e.g. because we weren't able to create PD, which potentially may happen), we end up in a state, where etcd still think that it contains more replicas.\nThat means that (potentially after more then one failure in a row), you will not longer have usable etcd cluster, because there will be less existing replicas than what quorum requires. This seems pretty dangerous.\n",
        "createdAt" : "2016-08-04T09:42:09Z",
        "updatedAt" : "2016-08-15T20:37:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9a475a34-9470-4b38-8ea9-8c6d7a4f0881",
        "parentId" : "08b765d3-1438-45c4-b3b3-c0261ea35c85",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "done\n",
        "createdAt" : "2016-08-04T12:10:25Z",
        "updatedAt" : "2016-08-15T20:37:06Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a41623b0f641dcfe8d26b9d5ee0f54e7123a52",
    "line" : null,
    "diffHunk" : "@@ -1,1 +793,797 @@    echo \"Failed to add master replica to etcd events cluster.\"\n    return 1\n  fi\n\n  # We have to make sure the disk is created before creating the master VM, so"
  },
  {
    "id" : "6e5c04fe-1572-47ea-a91a-67da67c776b2",
    "prId" : 29295,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26475f79-d243-4fdb-8e24-6d13ae0e930a",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "sleep here to not spam the k8s api endpoint?\n",
        "createdAt" : "2016-07-20T16:17:52Z",
        "updatedAt" : "2016-07-20T16:17:52Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "031b1628-5113-40a4-97db-8becab0dd74b",
        "parentId" : "26475f79-d243-4fdb-8e24-6d13ae0e930a",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "During this loop those requests will timeout after 1s, so they will not run more often than once every second. Do you think we should make it less often?\n",
        "createdAt" : "2016-07-20T16:22:38Z",
        "updatedAt" : "2016-07-20T16:22:38Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9585fba9134de4796d281497ac89dc42d0467eb",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +813,817 @@      echo -e \"${color_red}Load balancer failed to initialize within ${counter} seconds.${color_norm}\" >&2\n      exit 2\n    fi\n  done\n  echo \"DONE\""
  },
  {
    "id" : "4a33a83b-3673-4805-8714-15d295e8c5e6",
    "prId" : 29201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71ff4c25-ac3a-4baf-ac2c-272cf096fdad",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Should we compute REGION once rather than in each function?\n",
        "createdAt" : "2016-07-19T22:13:07Z",
        "updatedAt" : "2016-07-19T22:13:07Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c0f0daae03855049665580d9985b991edde7e11",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +767,771 @@function create-loadbalancer() {\n  detect-master\n  local REGION=${ZONE%-*}\n\n  # Step 0: Return early if LB is already configured."
  },
  {
    "id" : "2775000c-6c96-4dd7-bac0-1a675302bf0f",
    "prId" : 29201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "481b57ec-41a1-4061-9911-868b4e9ddf15",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "This should have a timeout so it doesn't get stuck spinning forever if there is an error. \n",
        "createdAt" : "2016-07-19T22:19:02Z",
        "updatedAt" : "2016-07-19T22:19:02Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c0f0daae03855049665580d9985b991edde7e11",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +794,798 @@\n  echo -n \"Waiting for the load balancer configuration to propagate...\"\n  until $(curl -k -m1 https://${KUBE_MASTER_IP} > /dev/null 2>&1); do echo -n .; done\n  echo \"DONE\"\n}"
  },
  {
    "id" : "687d1906-1249-45ed-8cb2-18259972bb0e",
    "prId" : 27961,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5f95ae6-ade7-495b-839a-8f33d53b8ef2",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It seems like, split_csv should be the inverse of join_csv. Maybe csv_first_element is a better name.\n",
        "createdAt" : "2016-07-14T22:08:59Z",
        "updatedAt" : "2016-07-15T19:03:02Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "463e1657-30f2-4909-84ca-876615d9d182",
        "parentId" : "f5f95ae6-ade7-495b-839a-8f33d53b8ef2",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Also do we want ${1} instead of $*? Do we want to accept multiple rows of CSV?\n",
        "createdAt" : "2016-07-14T22:09:55Z",
        "updatedAt" : "2016-07-15T19:03:02Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "97f3f80833f61fcb369d3da7f1b2422b875ec54f",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +98,102 @@# This function returns the first string before the comma\nfunction split_csv {\n  echo \"$*\" | cut -d',' -f1\n}\n"
  },
  {
    "id" : "b0172452-f604-4099-9bae-20080920aeab",
    "prId" : 27522,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6d2020a-4bf5-4074-ae88-293f8c032adf",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "should this be a return instead of an echo?\n",
        "createdAt" : "2016-06-16T06:08:55Z",
        "updatedAt" : "2016-06-17T17:03:08Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "17cd47de-212e-4cd2-85d1-14788ba1fe50",
        "parentId" : "b6d2020a-4bf5-4074-ae88-293f8c032adf",
        "authorId" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "body" : "Humm.. I tried return \"${gci_images[0]}\" (and also without quotes), but I get error \"numeric argument required\". I couldn't find any other way to return a string from a bash function (but I am not a bash expert).\n",
        "createdAt" : "2016-06-17T16:55:56Z",
        "updatedAt" : "2016-06-17T17:03:08Z",
        "lastEditedBy" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a46c948f27a08bad86393e5e6674ddba6b4c22d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@  fi\n\n  echo \"${gci_images[0]}\"\n}\n"
  },
  {
    "id" : "73575b3e-5644-4f06-af0a-0c120362cc1f",
    "prId" : 27302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "486eba17-4fcb-4037-b8dd-651d4948ad6a",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually, if there would be a lot of MIGs, this may result in too many migs being removed concurrently. So maybe drop a TODO to change it in the future.\n",
        "createdAt" : "2016-06-14T12:02:23Z",
        "updatedAt" : "2016-06-14T12:02:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d77dc639b283445f8c23b6642033a8ff7e877c2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +967,971 @@        --quiet \\\n        --zone \"${ZONE}\" \\\n        \"${group}\" &\n    fi\n  done"
  },
  {
    "id" : "f0c6bc91-d42b-4cc3-b4ed-35313939c886",
    "prId" : 25357,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07f00d0a-1445-4a6b-b23b-a037c7967a64",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Add a comment what variable is set/exported inside.\n",
        "createdAt" : "2016-05-11T10:10:57Z",
        "updatedAt" : "2016-05-13T15:04:40Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "19253441-2200-4779-bb6b-ce2d506c7156",
        "parentId" : "07f00d0a-1445-4a6b-b23b-a037c7967a64",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Done.\n",
        "createdAt" : "2016-05-12T10:06:29Z",
        "updatedAt" : "2016-05-13T15:04:40Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac4b380453a644412497fd893781da37576ddd73",
    "line" : null,
    "diffHunk" : "@@ -1,1 +767,771 @@# - ZONE\n# - AUTOSCALER_MAX_NODES\n# - AUTOSCALER_MIN_NODES\n# Exports\n# - AUTOSCALER_MIG_CONFIG"
  },
  {
    "id" : "6d4126dc-d8c0-4a9c-9775-011a193b9bf7",
    "prId" : 25357,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e011341-8c0b-4f5e-a1fe-1ebf93ba2807",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Please keep the comment about being backward compatible.\n",
        "createdAt" : "2016-05-12T10:38:25Z",
        "updatedAt" : "2016-05-13T15:04:40Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac4b380453a644412497fd893781da37576ddd73",
    "line" : null,
    "diffHunk" : "@@ -1,1 +741,745 @@      # TODO: We don't add a suffix for the last group to keep backward compatibility when there's only one MIG.\n      # We should change it at some point, but note #18545 when changing this.\n      group_name=\"${NODE_INSTANCE_PREFIX}-group\"\n    fi\n    # Spread the remaining number of nodes evenly"
  },
  {
    "id" : "40f8106f-f83c-4331-a642-15cf2a9490da",
    "prId" : 25173,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e3fcee2-c416-4a69-89f6-4c8bc28abd6e",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Was this command changed to wait for the operation to complete?\n",
        "createdAt" : "2016-05-05T04:08:05Z",
        "updatedAt" : "2016-05-06T22:50:34Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "5001ae22-7b6c-4a70-b011-ab8629442228",
        "parentId" : "9e3fcee2-c416-4a69-89f6-4c8bc28abd6e",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it appears to.\n",
        "createdAt" : "2016-05-05T08:45:22Z",
        "updatedAt" : "2016-05-06T22:50:34Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc7922c374138a1ba7979c79d722b91744c40a86",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +898,902 @@  for group in ${INSTANCE_GROUPS[@]:-}; do\n    if gcloud compute instance-groups managed describe \"${group}\" --project \"${PROJECT}\" --zone \"${ZONE}\" &>/dev/null; then\n      gcloud compute instance-groups managed delete \\\n        --project \"${PROJECT}\" \\\n        --quiet \\"
  },
  {
    "id" : "c733faee-162e-4850-b6c2-0db51e863c0c",
    "prId" : 25159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fb93fb9-aad6-4937-b8f0-cc52e6b0f159",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Are you sure we no longer need the `| awk '{ print $2 }' ?`\n",
        "createdAt" : "2016-05-04T20:09:21Z",
        "updatedAt" : "2016-05-04T20:09:21Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "6895b02f-23a7-4156-a8a0-c30ea5686177",
        "parentId" : "9fb93fb9-aad6-4937-b8f0-cc52e6b0f159",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "``` console\n$ gcloud compute instances describe --project kubernetes-jkns-e2e-gce-serial --zone us-central1-f  jenkins-e2e-master --format='value(networkInterfaces[0].accessConfigs[0].natIP)'\n8.34.212.150\n```\n",
        "createdAt" : "2016-05-04T20:13:40Z",
        "updatedAt" : "2016-05-04T20:13:40Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "50580f56-1229-4ca1-b0a8-5c782dcbc3b4",
        "parentId" : "9fb93fb9-aad6-4937-b8f0-cc52e6b0f159",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "This is basically the same fix as I did in #24746.\n",
        "createdAt" : "2016-05-04T20:16:29Z",
        "updatedAt" : "2016-05-04T20:16:29Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cd9dcba60bfcd0bab346d2267bfd139bbbf330f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +341,345 @@  if [[ -z \"${KUBE_MASTER_IP-}\" ]]; then\n    KUBE_MASTER_IP=$(gcloud compute instances describe --project \"${PROJECT}\" --zone \"${ZONE}\" \\\n      \"${MASTER_NAME}\" --format='value(networkInterfaces[0].accessConfigs[0].natIP)')\n  fi\n  if [[ -z \"${KUBE_MASTER_IP-}\" ]]; then"
  },
  {
    "id" : "0f9427b4-db80-4d17-9556-fbf7a612ba7b",
    "prId" : 22594,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86de9851-ca1d-4fd9-907f-bee4eeb40cf5",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: How did zmerlynn's comment get in here?  Is this code cut 'n pasted from somewhere else, not reflected in this PR?  Just curious, mainly.\n",
        "createdAt" : "2016-03-10T15:47:10Z",
        "updatedAt" : "2016-03-10T15:47:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f46e5dcc-3be5-41eb-b2a6-03e55ad60837",
        "parentId" : "86de9851-ca1d-4fd9-907f-bee4eeb40cf5",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "This is \"liberated\" from the upgrade script yes.  I hope that if we get this merged, then maybe we can even get the upgrade script working again in kube-up.  Maybe :-)  cc @zmerlynn \n",
        "createdAt" : "2016-03-10T16:10:40Z",
        "updatedAt" : "2016-03-10T16:10:40Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "523e1d0d8cf830ed7cbf6f2a7d1131610a34c3df",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +333,337 @@#   ZONE\nfunction get-master-env() {\n  # TODO(zmerlynn): Make this more reliable with retries.\n  gcloud compute --project ${PROJECT} ssh --zone ${ZONE} ${KUBE_MASTER} --command \\\n    \"curl --fail --silent -H 'Metadata-Flavor: Google' \\"
  },
  {
    "id" : "40d27449-2b72-4ee2-aa78-75ec83a631f7",
    "prId" : 22234,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fd09f57-f1c0-46ae-8ba9-66a8de6f421a",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I see this being appended to but never used. Am I missing something?\n",
        "createdAt" : "2016-03-01T04:06:56Z",
        "updatedAt" : "2016-03-01T17:59:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "48b96ffe-4fe7-4e89-a68d-f7d89726d8f5",
        "parentId" : "7fd09f57-f1c0-46ae-8ba9-66a8de6f421a",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "You're missing lines 240-248.\n",
        "createdAt" : "2016-03-01T16:56:11Z",
        "updatedAt" : "2016-03-01T17:59:46Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "96cd1f13-b3b2-4956-891e-a29fc642867f",
        "parentId" : "7fd09f57-f1c0-46ae-8ba9-66a8de6f421a",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Not sure why I didn't see those when doing a Ctrl-F...\n",
        "createdAt" : "2016-03-01T17:22:31Z",
        "updatedAt" : "2016-03-01T17:59:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a031bf52c988686db49815bf2ce09b21c27239b",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +201,205 @@  fi\n\n  local server_binary_tar_urls=()\n  local salt_tar_urls=()\n  local kube_manifest_tar_urls=()"
  },
  {
    "id" : "f0d89984-6005-4938-947b-2f575789d97f",
    "prId" : 22234,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18f0fab3-3744-45b2-aea1-cd299e60eb1e",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "same here\n",
        "createdAt" : "2016-03-01T04:07:31Z",
        "updatedAt" : "2016-03-01T17:59:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a031bf52c988686db49815bf2ce09b21c27239b",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +202,206 @@\n  local server_binary_tar_urls=()\n  local salt_tar_urls=()\n  local kube_manifest_tar_urls=()\n"
  },
  {
    "id" : "cd095120-0ac7-4566-80c1-363da6f541b4",
    "prId" : 22234,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea756545-779b-49ec-ac96-57028bfad213",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "... and this one doesn't seem used at all. \n",
        "createdAt" : "2016-03-01T04:07:35Z",
        "updatedAt" : "2016-03-01T17:59:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a031bf52c988686db49815bf2ce09b21c27239b",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +203,207 @@  local server_binary_tar_urls=()\n  local salt_tar_urls=()\n  local kube_manifest_tar_urls=()\n\n  for region in \"${PREFERRED_REGION[@]}\"; do"
  },
  {
    "id" : "f9e3a051-34cf-4857-9c29-a65f33c4a454",
    "prId" : 21108,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08e870a7-965a-40c3-b219-09421aeb75e3",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "an alternative to `cat`ing these files: if `E2E_REPORT_DIR` is set (which it is on Jenkins runs), save these logs there; they are automatically uploaded to GCS.\n",
        "createdAt" : "2016-02-12T00:21:09Z",
        "updatedAt" : "2016-02-12T00:34:04Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a2e6497452cddbb9981f40165cc06555402872f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +752,756 @@              if gcloud compute copy-files --project \"${PROJECT}\" \\\n                --zone \"${ZONE}\" \"${MASTER_NAME}:${file}\" \"${tmp_log}\"; then\n                cat \"${tmp_log}\"\n              fi\n            done"
  },
  {
    "id" : "4b668bdc-3b01-4b98-b4cd-0fbd5d5820c0",
    "prId" : 18567,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b8f816a-eade-4102-90f0-af9e30513760",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Keeping separate names for the main and additional groups is more like a hack. Can we at least have a TODO to fix this at some point?\n",
        "createdAt" : "2015-12-14T12:10:10Z",
        "updatedAt" : "2015-12-14T13:02:37Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "c555e38a-b600-450b-b983-11cea8320e1a",
        "parentId" : "4b8f816a-eade-4102-90f0-af9e30513760",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is for backward compatibility. We can't easily fix this in one shot.\n",
        "createdAt" : "2015-12-14T12:11:46Z",
        "updatedAt" : "2015-12-14T13:02:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9a03cf3d-76d8-49bc-b361-97c6e13d8069",
        "parentId" : "4b8f816a-eade-4102-90f0-af9e30513760",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "No harm in adding a TODO:)\n",
        "createdAt" : "2015-12-14T12:30:46Z",
        "updatedAt" : "2015-12-14T13:02:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b6c78818ba72337751f1869c2aee22ae8d2668a",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +737,741 @@\n  #TODO: parallelize this loop to speed up the process\n  for i in $(seq $((${num_migs} - 1))); do\n    gcloud compute instance-groups managed \\\n        create \"${NODE_INSTANCE_PREFIX}-group-$i\" \\"
  },
  {
    "id" : "60189b82-2549-4332-b042-8e907eade02a",
    "prId" : 18436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b130e7c0-73a3-4ec4-8a5d-61272748659f",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "If you want to keep the intermediate output, I'd suggest making the echo string at least somewhat different from the final output so that it's obvious where this is being printed. \n",
        "createdAt" : "2015-12-10T05:02:36Z",
        "updatedAt" : "2015-12-10T11:13:51Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "ef79db4c-0268-450d-bb07-089a389503e0",
        "parentId" : "b130e7c0-73a3-4ec4-8a5d-61272748659f",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done. I guess...\n",
        "createdAt" : "2015-12-10T09:32:27Z",
        "updatedAt" : "2015-12-10T11:13:51Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c6126911b557b5d52f21821771f852923786f07",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +266,270 @@        --format=yaml | grep instance: | cut -d ' ' -f 2))\n    done\n    echo \"INSTANCE_GROUPS=${INSTANCE_GROUPS[*]}\" >&2\n    echo \"NODE_NAMES=${NODE_NAMES[*]}\" >&2\n  else "
  },
  {
    "id" : "11ca9102-132f-442e-b741-7adc9bc1898c",
    "prId" : 18436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f6fb194-5347-42df-99b5-80651cdc8138",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Can you add a TODO to spin these all up in parallel and then do a bunch of waits at the end?\n",
        "createdAt" : "2015-12-10T05:05:34Z",
        "updatedAt" : "2015-12-10T11:13:51Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "0f8cb972-4773-4711-8e94-8416d48c73d0",
        "parentId" : "0f6fb194-5347-42df-99b5-80651cdc8138",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2015-12-10T09:34:59Z",
        "updatedAt" : "2015-12-10T11:13:51Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c6126911b557b5d52f21821771f852923786f07",
    "line" : null,
    "diffHunk" : "@@ -1,1 +745,749 @@        --size \"${instances_per_mig}\" \\\n        --template \"$template_name\" || true;\n    gcloud compute instance-groups managed wait-until-stable \\\n        \"${NODE_INSTANCE_PREFIX}-group-$i\" \\\n\t      --zone \"${ZONE}\" \\"
  },
  {
    "id" : "9c4f649e-0e0f-48e6-9804-0f123c2431c1",
    "prId" : 18436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84ed8c4c-ca7d-4afe-992b-2218cd21b851",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "In the typical case (num nodes << 500) this will rename the instance group from \"${NODE_INSTANCE_PREFIX}-group\" to \"${NODE_INSTANCE_PREFIX}-group-1\", which I initially thought would cause issues with teardown, but since you dynamically compute the instance group names seems like it'll be ok. \n",
        "createdAt" : "2015-12-10T05:09:38Z",
        "updatedAt" : "2015-12-10T11:13:51Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c6126911b557b5d52f21821771f852923786f07",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +751,755 @@  done\n\n  gcloud compute instance-groups managed \\\n      create \"${NODE_INSTANCE_PREFIX}-group-${num_migs}\" \\\n      --project \"${PROJECT}\" \\"
  },
  {
    "id" : "168d29b2-5b45-4d2d-9135-fb7f0f7d212e",
    "prId" : 18115,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8db3e2b-c09d-45dd-b5b4-5667915051e3",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "This seems reasonable for the developer workflow, but for releases we will want to do something similar with the build scripts so that official releases have the manifest files available too. \n",
        "createdAt" : "2015-12-04T06:59:06Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "871f18d0-5f4d-46ce-b6d1-594579e6a9d5",
        "parentId" : "c8db3e2b-c09d-45dd-b5b4-5667915051e3",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "I have not figured what to change for official releases. So I put a TODO above the place where this function is called to remind me for adding the release support. I am working on it and will make it happen in the next PR (coming next week). I separated this PR out so as to unblock other master side changes. I think this PR and my next PR for release support would be appear in the same release, so it should be fine.\n",
        "createdAt" : "2015-12-04T21:59:22Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      },
      {
        "id" : "dac2bfd2-7745-41f5-b2f3-b180f38b58d8",
        "parentId" : "c8db3e2b-c09d-45dd-b5b4-5667915051e3",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Yep, just wanted to make sure you weren't caught offguard by this working fine in CI and then failing in the next release. It'd be worth testing out the next 1.2 alpha release (they should get cut every 2 weeks or so) once both of your PRs are in to make sure the files are in the right place in the release. \n",
        "createdAt" : "2015-12-04T22:28:32Z",
        "updatedAt" : "2015-12-04T23:50:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "816b29536a660491c99e03d0fa159a768bdaf0fa",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +162,166 @@#   KUBE_MANIFESTS_TAR_URL\n#   KUBE_MANIFESTS_TAR_HASH\nfunction prepare-manifests-tar() {\n  KUBE_MANIFESTS_TAR_URL=\n  KUBE_MANIFESTS_TAR_HASH="
  },
  {
    "id" : "5a9f3976-20c4-4579-88af-df5b9d15607b",
    "prId" : 16701,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6215859a-c8bd-44a4-a610-f85024d8391c",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "did you mean`&>`?\n",
        "createdAt" : "2015-11-09T23:38:57Z",
        "updatedAt" : "2015-11-09T23:38:57Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75b1e6ec44a70c5b3eb90b84fef0b8c5306cb23b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +741,745 @@  # curl in mavericks is borked.\n  secure=\"\"\n  if which sw_vers >& /dev/null; then\n    if [[ $(sw_vers | grep ProductVersion | awk '{print $2}') = \"10.9.\"* ]]; then\n      secure=\"--insecure\""
  },
  {
    "id" : "ee914c05-c6b0-40c5-9faa-23c10244a0e3",
    "prId" : 15252,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82b03777-4cdf-4901-9224-0a2c26c37bbc",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: This is going to retry in rapid succession in a tight loop.  Please insert an exponential backoff (even as simple as a \"sleep ${attempt \\* 5}\".\n",
        "createdAt" : "2015-10-07T20:29:49Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "de9559ea-a133-41f5-b1fd-c243b5c37033",
        "parentId" : "82b03777-4cdf-4901-9224-0a2c26c37bbc",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done (and added to the other retry loop too)\n",
        "createdAt" : "2015-10-07T20:51:42Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d67b1525fde05e3b9e7ec8c217f96f0e4166482",
    "line" : null,
    "diffHunk" : "@@ -1,1 +337,341 @@# $1: The name of the ip to create\n# $2: The name of the region to create the ip in.\nfunction create-static-ip {\n  detect-project\n  local attempt=0"
  },
  {
    "id" : "5d830326-3d69-4f3e-9f4d-348f049e97f8",
    "prId" : 15252,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f582286-ba5f-42cd-a89e-2c59324cf885",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this is missing a `fi`.\n\n`/jenkins-master-data/jobs/kubernetes-pull-build-test-e2e-gce/workspace@7/hack/e2e-iternal/../../cluster/gce/util.sh: line 352: syntax error near unexpected token`done'`\n",
        "createdAt" : "2015-10-07T20:57:51Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "726da59b-b1e5-4cce-9d0c-ad82f4bfd35b",
        "parentId" : "6f582286-ba5f-42cd-a89e-2c59324cf885",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done (oops)\n",
        "createdAt" : "2015-10-07T23:04:14Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d67b1525fde05e3b9e7ec8c217f96f0e4166482",
    "line" : null,
    "diffHunk" : "@@ -1,1 +342,346 @@  local REGION=\"$2\"\n  while true; do\n    if ! gcloud compute addresses create \"$1\" \\\n      --project \"${PROJECT}\" \\\n      --region \"${REGION}\" -q > /dev/null; then"
  },
  {
    "id" : "04e8c62b-3b3c-4509-bed3-cee33a74dffc",
    "prId" : 15252,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed5a8f7e-fac6-4ed7-842f-b73b7be6b4b6",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "just noticed that `REGION` is declared local on L677, so this will also probably fail\n",
        "createdAt" : "2015-10-07T23:48:06Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "31dbaf8e-1526-428f-94fb-7da370b3ff21",
        "parentId" : "ed5a8f7e-fac6-4ed7-842f-b73b7be6b4b6",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "except that it worked? maybe I don't understand how local works.\nin any case, having a `local REGION=${ZONE%-*}` in this function might be a good idea too.\n",
        "createdAt" : "2015-10-07T23:50:28Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8e9d4c17-1949-4f4b-8b83-1c70b611b1c6",
        "parentId" : "ed5a8f7e-fac6-4ed7-842f-b73b7be6b4b6",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "added as a second parameter to `create-static-ip`\n",
        "createdAt" : "2015-10-08T03:10:56Z",
        "updatedAt" : "2015-10-12T21:43:45Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d67b1525fde05e3b9e7ec8c217f96f0e4166482",
    "line" : null,
    "diffHunk" : "@@ -1,1 +344,348 @@    if ! gcloud compute addresses create \"$1\" \\\n      --project \"${PROJECT}\" \\\n      --region \"${REGION}\" -q > /dev/null; then\n      if (( attempt > 4 )); then\n        echo -e \"${color_red}Failed to create static ip $1 ${color_norm}\" >&2"
  },
  {
    "id" : "da6a89ff-8357-4cf7-9e5a-957711131676",
    "prId" : 14690,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f2d7128-ab1d-4dff-b1fa-6400406dc3f2",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "You should use `template_name` below as well, line 1077.\n",
        "createdAt" : "2015-09-29T18:47:23Z",
        "updatedAt" : "2015-09-29T18:52:42Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "05355145b9bc0a13376a7736dc38769d5747f036",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1060,1064 @@    create-node-instance-template $tmp_template_name\n\n    local template_name=\"${NODE_INSTANCE_PREFIX}-template\"\n    gcloud compute instance-groups managed \\\n      set-instance-template \"${NODE_INSTANCE_PREFIX}-group\" \\"
  },
  {
    "id" : "a4098086-e346-4514-aa0b-c9c261e0d8fc",
    "prId" : 13547,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7c0254c-906a-4bd9-89f0-2250659d7da5",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Is this going to work if someone specifies `RUNTIME_CONFIG` manually? I think we should just append our part to it. WDYT?\n",
        "createdAt" : "2015-09-09T10:20:53Z",
        "updatedAt" : "2015-09-10T14:10:29Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "2adde140-3c96-4bbc-a3c4-77bd825350d3",
        "parentId" : "f7c0254c-906a-4bd9-89f0-2250659d7da5",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I think appending is a bed idea. RUNTIME_CONFIG defined by user may contain \"experimental/v1=false\", and if we appended \"experimental/v1=true\" we would have wrong configuration. My solution only checks if RUNTIME_CONFIG is consistent with ENABLE_EXPERIMENTAL_API, what is much safer.\n",
        "createdAt" : "2015-09-09T17:18:55Z",
        "updatedAt" : "2015-09-10T14:10:29Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "99614e56-ae0b-4864-8fd4-94d23c0b567b",
        "parentId" : "f7c0254c-906a-4bd9-89f0-2250659d7da5",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "We can easily check if we have explicit false. Nonetheless I don't think we need to do it now. I think it's worth a TODO, because if user sets RUNTIME_CONFIG enabling autoscaler will simply not work.\n",
        "createdAt" : "2015-09-10T12:06:27Z",
        "updatedAt" : "2015-09-10T14:10:29Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "118a8fb4-cff4-4410-ab23-275d6d03f0c0",
        "parentId" : "f7c0254c-906a-4bd9-89f0-2250659d7da5",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Done.\n",
        "createdAt" : "2015-09-10T14:10:47Z",
        "updatedAt" : "2015-09-10T14:10:47Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b41862b6703bcf9036a61dc8453a5253534545c3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +54,58 @@# Verify prereqs\nfunction verify-prereqs {\n  if [[ \"${ENABLE_EXPERIMENTAL_API}\" == \"true\" ]]; then\n    if [[ -z \"${RUNTIME_CONFIG}\" ]]; then\n      RUNTIME_CONFIG=\"experimental/v1=true\""
  },
  {
    "id" : "18d2a4dc-3835-4885-aee0-9af639867d04",
    "prId" : 9859,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9af0a210-efe7-4a03-a43d-2cdf160f7af0",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Please add a comment when this may give false negative.\n",
        "createdAt" : "2015-06-17T11:50:27Z",
        "updatedAt" : "2015-06-17T13:11:56Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b33b881bc2ac9cc79b05b45256e4afc8711d2ff6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +587,591 @@  local running_in_terminal=false\n  # May be false if tty is not allocated (for example with ssh -T).\n  if [ -t 1 ]; then\n    running_in_terminal=true\n  fi"
  },
  {
    "id" : "a27c843b-5c6f-478a-b5ee-b132b2123d7c",
    "prId" : 9859,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ff95def-b0ce-443e-9ee3-648814663bf7",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Other idea for logic here is to have a flag that turn the cleanup behavior on/off, always ask the user if we're running in a terminal and assume 'yes' as an answer if we're not. I think the logic will be simpler then. @zmerlynn ?\n",
        "createdAt" : "2015-06-17T11:55:28Z",
        "updatedAt" : "2015-06-17T13:11:56Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "b7d8f842-4017-475a-b120-3721edb668be",
        "parentId" : "9ff95def-b0ce-443e-9ee3-648814663bf7",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I don't think we should default to yes in any circumstance. The first time we accidentally recycle a cluster because someone buried `kube-up` in a script, that choice will haunt us. :/\n\nI like the env variable.\n\nRemember that as upgrade starts to be more of a reality, up/down should become relevant to testing and out-of-the-box / first-touch experience alone, rather than the constant experience, so convenience for things like teardown / recreate are less important as we go forward.\n",
        "createdAt" : "2015-06-17T12:04:43Z",
        "updatedAt" : "2015-06-17T13:11:56Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "b33b881bc2ac9cc79b05b45256e4afc8711d2ff6",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +591,595 @@  fi\n\n  if [[ ${running_in_terminal} == \"true\" || ${KUBE_UP_AUTOMATIC_CLEANUP} == \"true\" ]]; then \n    if ! check-resources; then\n      local run_kube_down=\"n\""
  },
  {
    "id" : "2ad39979-d882-43e7-a9cf-f78d29e3cbd5",
    "prId" : 9702,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58d03f27-7dd5-4ed5-90ba-71a37320c650",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "`exit` seems a bit intense but I guess it will just fail afterwards, so makes sense\n",
        "createdAt" : "2015-06-12T04:17:37Z",
        "updatedAt" : "2015-06-12T04:31:41Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "1da7ffdf-3d2c-4b7d-a8e1-9d5ece2f621b",
        "parentId" : "58d03f27-7dd5-4ed5-90ba-71a37320c650",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "well, the alternative is turning up a borked cluster, I think I prefer exit.\n",
        "createdAt" : "2015-06-12T04:20:09Z",
        "updatedAt" : "2015-06-12T04:31:41Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcb09e73a977a7cabd4625b489d0f1016d55e579",
    "line" : null,
    "diffHunk" : "@@ -1,1 +405,409 @@    if ! gcloud compute instance-templates delete \"$1\" --project \"${PROJECT}\" &>/dev/null; then\n      echo -e \"${color_yellow}Failed to delete existing instance template${color_norm}\" >&2\n      exit 2\n    fi\n  fi"
  },
  {
    "id" : "9221c432-8277-4a25-8869-1f155cbcf9d5",
    "prId" : 9658,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "794e9a1d-f781-49e7-9961-6954dcab590e",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "This should be after first gcloud compute call. Same below.\n",
        "createdAt" : "2015-06-11T13:34:38Z",
        "updatedAt" : "2015-06-11T13:38:44Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "28160927-861d-462b-b417-1429051f0231",
        "parentId" : "794e9a1d-f781-49e7-9961-6954dcab590e",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "I increased timeout to 20 minutes, but kept start here, to avoid depending on 11 min gcloud timeout.\n",
        "createdAt" : "2015-06-11T13:39:39Z",
        "updatedAt" : "2015-06-11T13:39:39Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93895dd36e76c602cfeae187796aee75dc3d910",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +979,983 @@  # Open up port 80 & 8080 so common containers on minions can be reached\n  # TODO(roberthbailey): Remove this once we are no longer relying on hostPorts.\n  local start=`date +%s`\n  gcloud compute firewall-rules create \\\n    --project \"${PROJECT}\" \\"
  },
  {
    "id" : "0afc2c44-8b86-4327-adc5-5b5556fa7f67",
    "prId" : 8902,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0750012b-29ec-4cbf-a9d9-bbc303d6c853",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "`sw_vers -productVersion` gives you the number directly without needing grep/awk. At least it does on Yosemite. Maybe Mavericks isn't advanced enough.... :)\n",
        "createdAt" : "2015-05-28T04:21:15Z",
        "updatedAt" : "2015-05-28T04:21:15Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1c0e100b51df33ef4d7cfa308595ee95328ef7f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +669,673 @@  secure=\"\"\n  if which sw_vers > /dev/null; then\n    if [[ $(sw_vers | grep ProductVersion | awk '{print $2}') = \"10.9.\"* ]]; then\n      secure=\"--insecure\"\n    fi"
  },
  {
    "id" : "1190538d-3961-4938-91ff-79fa94d256ee",
    "prId" : 8208,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1b1a1cd-e11e-4972-bf9b-4fa3b9c50d07",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "the indentation under the do is inconsistent (spaces/tabs) which my editor renders differently than github (way worse).\n",
        "createdAt" : "2015-05-13T21:50:53Z",
        "updatedAt" : "2015-05-13T22:07:00Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "c118b6d603805801cab579cda3877f66d7011d2d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +658,662 @@      deleteCmdStatus=\"PENDING\"\n      while [[ \"$deleteCmdStatus\" != \"DONE\" ]]\n      do\n        sleep 5\n        deleteCmdOperationOutput=$(gcloud preview managed-instance-groups --zone \"${ZONE}\" get-operation $deleteCmdOperationId)"
  },
  {
    "id" : "00060d99-40a5-4de9-8e52-6923a8c3960b",
    "prId" : 8164,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec3d3910-ef9e-493e-86b5-fe19f238e652",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What does this line do? (please add a comment)\n",
        "createdAt" : "2015-05-21T22:58:59Z",
        "updatedAt" : "2015-05-22T01:05:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9b8875e0-e528-47b7-97c7-0b571054482e",
        "parentId" : "ec3d3910-ef9e-493e-86b5-fe19f238e652",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Done.\n",
        "createdAt" : "2015-05-21T23:19:42Z",
        "updatedAt" : "2015-05-22T01:05:34Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6da5b9601738069e0a3f81aca6dcf4bb24a4b4f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +775,779 @@  # e.g. \"kubernetes-12345678-90ab-cdef-1234-567890abcdef\"\n  routes=( $(gcloud compute routes list --project \"${PROJECT}\" \\\n    --regexp \"${INSTANCE_PREFIX}-.{8}-.{4}-.{4}-.{4}-.{12}\" | awk 'NR >= 2 { print $1 }') )\n  routes+=(\"${MASTER_NAME}\")\n  while (( \"${#routes[@]}\" > 0 )); do"
  },
  {
    "id" : "194d5431-51d6-4e75-abee-1b97a529df2a",
    "prId" : 8096,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b820ad9-0f08-48f0-ba66-9f2ec8d4ba35",
        "parentId" : null,
        "authorId" : null,
        "body" : "Similar to the above comment, isn't this if statement just going to skip over the checks if the deletion above failed?\n",
        "createdAt" : "2015-05-12T02:29:35Z",
        "updatedAt" : "2015-05-12T23:58:39Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f09dc76f-1333-4a9b-9ed0-60c8feb2a266",
        "parentId" : "6b820ad9-0f08-48f0-ba66-9f2ec8d4ba35",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Yes, both statements skip over the deletion check, which is intended--if the group ID doesn't exist, for example, it doesn't make sense to wait for deletion to complete.\n",
        "createdAt" : "2015-05-12T04:27:11Z",
        "updatedAt" : "2015-05-12T23:58:39Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "932cdd954dea696ed1c77c12c2d90fc47e42ec59",
    "line" : null,
    "diffHunk" : "@@ -1,1 +652,656 @@    --quiet \\\n    \"${NODE_INSTANCE_PREFIX}-group\")\n  if [[ \"$deleteCmdOutput\" != \"\"  ]]; then\n    # Managed instance group deletion is done asyncronously, we must wait for it to complete, or subsequent steps fail\n    deleteCmdOperationId=$(echo $deleteCmdOutput | grep \"Operation:\" | sed \"s/.*Operation:\\s//\" | sed \"s/\\s.*//\" | sed \"s/ //g\")"
  },
  {
    "id" : "44c3c7fd-02b3-4044-ac6e-868e13b78304",
    "prId" : 8096,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a548782e-4ac3-475d-9240-91c9fded5014",
        "parentId" : null,
        "authorId" : null,
        "body" : "Similar comments to above. What if this fails?  In it's current state it looks like we just naively assume success, which is also wrong?\n",
        "createdAt" : "2015-05-12T02:30:45Z",
        "updatedAt" : "2015-05-12T23:58:39Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "932cdd954dea696ed1c77c12c2d90fc47e42ec59",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +667,671 @@  fi\n\n  gcloud compute instance-templates delete \\\n    --project \"${PROJECT}\" \\\n    --quiet \\"
  },
  {
    "id" : "5d7e67e0-410c-4259-8d1d-26adf28ffa48",
    "prId" : 7651,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "130d9f2e-fe90-4bd4-b298-1db6f61b01a3",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "oldsum should be local.\n\nThere's a problem with `local v=$(...)` in that the `local` statement will hide an error of the command in the `$(...)` expression, so declare it in a separate line.\n\n``` shell\n  local oldsum\n  oldsum=$(cat \"${file}.sha1\")\n```\n",
        "createdAt" : "2015-05-02T06:57:50Z",
        "updatedAt" : "2015-05-05T00:45:45Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c107e4c44ef412c53071e112d7443fe78c35331",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@\n  local oldsum\n  oldsum=$(cat \"${file}.sha1\")\n\n  [[ \"${oldsum}\" == \"${newsum}\" ]]"
  },
  {
    "id" : "13cabbb0-223f-4dde-a88e-68ea5128af12",
    "prId" : 7651,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6add8874-54e5-44ae-939e-b41f72cdabd2",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Gotta love MacOS X :-)\n\n(It's fine to check it this way, of course.)\n",
        "createdAt" : "2015-05-02T07:02:46Z",
        "updatedAt" : "2015-05-05T00:45:45Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c107e4c44ef412c53071e112d7443fe78c35331",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +134,138 @@\nfunction sha1sum-file() {\n  if which shasum >/dev/null 2>&1; then\n    shasum -a1 \"$1\" | awk '{ print $1 }'\n  else"
  },
  {
    "id" : "0e65300b-86ae-4f67-856e-5850533b54f4",
    "prId" : 7113,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55e0ee9e-e48d-4a34-ab37-2ac20fbb5cf9",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Oh. Except I'm not paying attention and you're generating a second token. I need more coffee.\n\nGKE currently bakes these into the kube-env, as I just noted. So this would break us, and we'd wait forever (if I'm reading the code correctly).\n",
        "createdAt" : "2015-04-21T16:41:43Z",
        "updatedAt" : "2015-04-21T16:41:43Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "c933e892-1a57-472f-9650-5001dc005433",
        "parentId" : "55e0ee9e-e48d-4a34-ab37-2ac20fbb5cf9",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "So, did that GKE change I just made make this PR okay now?\n",
        "createdAt" : "2015-04-21T20:32:20Z",
        "updatedAt" : "2015-04-21T20:32:20Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "eae1cc53-a757-4ce5-8936-e69e9eb37a7d",
        "parentId" : "55e0ee9e-e48d-4a34-ab37-2ac20fbb5cf9",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Unless you want to deal with merging this into the kube-env as well.\n",
        "createdAt" : "2015-04-21T20:50:14Z",
        "updatedAt" : "2015-04-21T20:50:14Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ca8a9d15d98f89e3e61e8e25efbb4ad4589f717",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +591,595 @@  # https://github.com/GoogleCloudPlatform/kubernetes/issues/3168\n  KUBELET_TOKEN=$(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64 | tr -d \"=+/\" | dd bs=32 count=1 2>/dev/null)\n  KUBE_PROXY_TOKEN=$(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64 | tr -d \"=+/\" | dd bs=32 count=1 2>/dev/null)\n\n  # Reserve the master's IP so that it can later be transferred to another VM"
  },
  {
    "id" : "baf7b986-608c-4ff0-a520-d0beaaceb3f5",
    "prId" : 6427,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd295277-81c0-4e22-84b7-ca7ef07cfd34",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "nit to make me happy: having \"Assumed vars:\" section here would be awesome, given the extensive prereqs this function has and that it's called from multiple places.\n",
        "createdAt" : "2015-04-04T22:49:02Z",
        "updatedAt" : "2015-04-06T15:35:24Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "616c6be65378347e6225947acef203dc8ea9a498",
    "line" : null,
    "diffHunk" : "@@ -1,1 +889,893 @@#  PROJECT\n#  ZONE\nfunction kube-update-nodes() {\n  action=${1}\n"
  },
  {
    "id" : "e6ec9bc4-ba60-4647-ba1d-49d221d5f7b4",
    "prId" : 6427,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "515127bc-4d80-4604-b9e8-8e090c3f6df3",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "This is obviously great as a first draft; can you add a TODO for me in here to grab the `node-kube-env.yaml` and `configure-vm.sh` from the correct version? That seems like the most pressing addition needed.\n",
        "createdAt" : "2015-04-04T23:00:23Z",
        "updatedAt" : "2015-04-06T15:35:24Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "1065cf13-cdd1-42a9-9acf-b7c13c0c1201",
        "parentId" : "515127bc-4d80-4604-b9e8-8e090c3f6df3",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I think before you head down that route, we should talk about just doing it on the node, watching the instance metadat. But sure, it's a fine todo.\n",
        "createdAt" : "2015-04-05T03:22:11Z",
        "updatedAt" : "2015-04-06T15:35:24Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "83151b8a-b9ce-4bdb-b0b1-e30b0f954c98",
        "parentId" : "515127bc-4d80-4604-b9e8-8e090c3f6df3",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "BTW, I'm not sure what you meant by the node-kube-env.yaml here. I think we absolutely need to run the configure-vm from the right version, but I think for the time being the answer is that the configure-vm script of the future needs to consume the kube-env of the past. Having past code have to write out future bits is going to result in some sort of schema rewriting confusion that... nevermind. Let's chat on Monday. I threw a TODO in about the configure-vm script at least.\n",
        "createdAt" : "2015-04-05T18:17:50Z",
        "updatedAt" : "2015-04-06T15:35:24Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "616c6be65378347e6225947acef203dc8ea9a498",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +898,902 @@  write-node-env\n  for (( i=0; i<${#MINION_NAMES[@]}; i++)); do\n    add-instance-metadata-from-file \"${MINION_NAMES[$i]}\" \"kube-env=${KUBE_TEMP}/node-kube-env.yaml\" &\n  done\n  wait-for-jobs"
  },
  {
    "id" : "25a2e039-9f9d-4442-8706-33cf0947d8a2",
    "prId" : 6168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47ead1a8-b212-400c-ae7e-2ebdbd5f9bd5",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "There's a missing } here. This is breaking jenkins.\n",
        "createdAt" : "2015-03-31T21:00:59Z",
        "updatedAt" : "2015-03-31T21:00:59Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "6dec6142-56a4-4826-87e3-ae5d30b5c59a",
        "parentId" : "47ead1a8-b212-400c-ae7e-2ebdbd5f9bd5",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Ah, you caught it. :) I'll let @ixdy handle it.\n",
        "createdAt" : "2015-03-31T21:03:44Z",
        "updatedAt" : "2015-03-31T21:03:44Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "98cdf0418907757bde41dc3898d44807cb8d81e0",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +33,37 @@    if ! which \"${cmd}\" >/dev/null; then\n      local resp\n      if [[ \"${KUBE_PROMPT_FOR_UPDATE\" == \"y\" ]]; then\n        echo \"Can't find ${cmd} in PATH.  Do you wish to install the Google Cloud SDK? [Y/n]\"\n        read resp"
  },
  {
    "id" : "5fc21828-dec3-406b-abd0-eb872eaca542",
    "prId" : 4715,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12adabbf-114c-4d7b-a46c-ea7cd2fa7a30",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Did you miss committing this file, or did I miss something?\n",
        "createdAt" : "2015-02-23T00:13:30Z",
        "updatedAt" : "2015-02-23T21:57:59Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "f186f586-eac4-4210-b86f-afdd7e15845d",
        "parentId" : "12adabbf-114c-4d7b-a46c-ea7cd2fa7a30",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Ugh, yeah. Thanks for catching that.\n",
        "createdAt" : "2015-02-23T04:24:54Z",
        "updatedAt" : "2015-02-23T21:57:59Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a18b74fa3d97a4273ff3f36c751f4a87adbe540",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +462,466 @@    echo \"readonly DNS_DOMAIN='${DNS_DOMAIN:-}'\"\n    grep -v \"^#\" \"${KUBE_ROOT}/cluster/gce/templates/common.sh\"\n    grep -v \"^#\" \"${KUBE_ROOT}/cluster/gce/templates/mount-pd.sh\"\n    grep -v \"^#\" \"${KUBE_ROOT}/cluster/gce/templates/create-dynamic-salt-files.sh\"\n    grep -v \"^#\" \"${KUBE_ROOT}/cluster/gce/templates/download-release.sh\""
  },
  {
    "id" : "10a19952-8019-426b-86b3-da0a7d44a2c9",
    "prId" : 4715,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bcd4d37-b01b-4d82-89fb-bae4aadfcdc3",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Can you explain the re-organizations in here, both of the `compute disks create` and the `MINION_SCOPES`? They don't seem to be necessary?\n\nIf it's just cleanup, maybe revert or put in a separate commit?\n",
        "createdAt" : "2015-02-23T21:41:26Z",
        "updatedAt" : "2015-02-23T21:57:59Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "e62ebd6b-9628-4ebb-b12f-a444bcfe5605",
        "parentId" : "6bcd4d37-b01b-4d82-89fb-bae4aadfcdc3",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Yes, it's just cleanup to keep the commands grouped more logically. I'll move it into a separate commit. Is it fine if I leave it in this PR?\n",
        "createdAt" : "2015-02-23T21:56:47Z",
        "updatedAt" : "2015-02-23T21:57:59Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "d8e4b647-969c-4e25-8e08-4b496cdb8b86",
        "parentId" : "6bcd4d37-b01b-4d82-89fb-bae4aadfcdc3",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah, I'm happy in the same PR. I was just trying to make sure there wasn't something I was missing.\n",
        "createdAt" : "2015-02-23T22:05:35Z",
        "updatedAt" : "2015-02-23T22:05:35Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a18b74fa3d97a4273ff3f36c751f4a87adbe540",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +440,444 @@    --zone \"${ZONE}\" \\\n    --size \"10GB\"\n\n  (\n    echo \"#! /bin/bash\""
  },
  {
    "id" : "5e7e87c4-2cb5-484d-9485-e728fadad8fa",
    "prId" : 4164,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51e5a3c8-aed9-4dea-9bb0-104b20ff9d22",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Pre-existing, but seeing shell scripts generating other shell scripts always makes me cringe... Why do people think it's OK to do it? If I were to suggest they should use Go (or Python, Javascript, etc.) to generate a code snippet on the fly I'm sure people would agree that is bad... Why not with shell?\n",
        "createdAt" : "2015-02-12T16:08:24Z",
        "updatedAt" : "2015-02-17T19:34:42Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcadad2e2eec8e6bb1fcd85de2cf5497d2a4aeec",
    "line" : 182,
    "diffHunk" : "@@ -1,1 +506,510 @@      echo \"ZONE='${ZONE}'\"\n      echo \"MASTER_NAME='${MASTER_NAME}'\"\n      echo \"until MINION_IP_RANGE=\\$(curl --fail --silent -H 'Metadata-Flavor: Google'\\\\\"\n      echo \"        http://metadata/computeMetadata/v1/instance/attributes/node-ip-range); do\"\n      echo \"    echo 'Waiting for metadata MINION_IP_RANGE...'\""
  },
  {
    "id" : "3d149cb4-b86d-4091-98f0-0db1f7595916",
    "prId" : 4164,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d30d8503-a531-4775-be96-6373119a34a1",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Also pre-existing, but this assumes `${NODE_INSTANCE_PREFIX}` can be used as a regexp and yet doesn't escape the characters in it, so if it had any magic characters such as `.` or `*` or `[`, etc. this might potentially present invalid matches. But this is already in use elsewhere and it's not really easy to fix in shell...\n\nI think my problem here is the amount of shell we let into Kubernetes but right now there's not much we can do in individual PRs to really address that... Sigh.\n",
        "createdAt" : "2015-02-12T16:11:10Z",
        "updatedAt" : "2015-02-17T19:34:42Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcadad2e2eec8e6bb1fcd85de2cf5497d2a4aeec",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +689,693 @@  minions=( $(gcloud compute instances list \\\n                --project \"${PROJECT}\" --zone \"${ZONE}\" \\\n                --regexp \"${NODE_INSTANCE_PREFIX}-.+\" \\\n                | awk 'NR >= 2 { print $1 }') )\n  # If any minions are running, delete them in batches."
  },
  {
    "id" : "09dd656c-1a92-499a-bae8-d5ad19135cc1",
    "prId" : 4097,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9c87e3f-844b-4f8f-9005-63fa284d45fd",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I would love to express my displeasure at inline python for this solution, but it's the most readable inline python in our codebase so far.\n\nSomething something need a YAML splitter for bash blah blah rant rant except this should be in go anyways LGTM.\n",
        "createdAt" : "2015-02-04T04:09:04Z",
        "updatedAt" : "2015-02-04T04:09:04Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "06aa8bd1642e09fd336764b9e679471a97f45cd7",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +209,213 @@  pass\n'''\n  local file=$(\"${KUBE_ROOT}/cluster/kubectl.sh\" config view --global | python -c \"${get_auth_path}\")\n  if [[ -r \"$file\" ]]; then\n    KUBE_USER=$(cat \"$file\" | python -c 'import json,sys;print json.load(sys.stdin)[\"User\"]')"
  },
  {
    "id" : "39bd5cee-0632-4178-8b75-bb1516e97279",
    "prId" : 3008,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b1d013b-8d1d-45ef-a7c4-1ee0e5cc95f2",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "document $3 above\n",
        "createdAt" : "2014-12-17T23:41:31Z",
        "updatedAt" : "2014-12-18T01:10:17Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "869983f4-d50e-4303-81db-3ed0690e5a1e",
        "parentId" : "2b1d013b-8d1d-45ef-a7c4-1ee0e5cc95f2",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Oops. Good catch. Done.\n",
        "createdAt" : "2014-12-17T23:50:30Z",
        "updatedAt" : "2014-12-18T01:10:17Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "90364b30b0d8ad2674ab9bd507a9245ab66d41c0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +258,262 @@      --network \"${NETWORK}\" \\\n      --source-ranges \"$2\" \\\n      --target-tags \"$3\" \\\n      --allow tcp udp icmp esp ah sctp; then \n        if (( attempt > 5 )); then"
  },
  {
    "id" : "4aa3a3ee-6533-423a-926f-04cd9a6973cf",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b1a231f-9434-4f80-82f0-73082117611c",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "A few suggestions here. One is this requires `echo -e` which you haven't really used everywhere consistently, you can work around that by using `...=$(echo -en ...)` here instead.\n\nThese are global constants so using all uppercase might be more appropriate.\n\nAlso, ideally this shouldn't be unconditional since it can be fairly annoying if you're redirecting the output to a logfile or similar. One suggestion is to use `[[ -t 1 ]]` to test if the stdout is a terminal to set the constants. (You can also accept command-line flags and/or environment variables to force enable/disable colors if you'd like.)\n\nWhen you use double quotes then backslashes should ideally be doubled, but here single quotes tend to work better.\n\nIf you use `$(echo ...)` for an assignment then avoid variable modifiers (like `readonly` or `declare -r`) since that masks the error status of the command. (In this case it's a bit moot since it's unlike that `echo` will fail but it's a good practice to adhere to.)\n\nSo putting it all together:\n\n``` shell\nif [[ -t 1 ]]; then\n  COLOR_RED=$(echo -en '\\e[0;31m')\n  COLOR_YELLOW=$(echo -en '\\e[0;33m')\n  COLOR_GREEN=$(echo -en '\\e[0;32m')\n  COLOR_NORMAL=$(echo -en '\\e[0m')\nelse\n  COLOR_RED=''\n  COLOR_YELLOW=''\n  COLOR_GREEN=''\n  COLOR_NORMAL=''\nfi\nreadonly COLOR_RED\nreadonly COLOR_YELLOW\nreadonly COLOR_GREEN\nreadonly COLOR_NORMAL\n```\n\nOne more suggestion (that I haven't put here) is that maybe you'll want to use symbolic names (like \"success\", \"error\", \"fail\", \"warning\", etc.) instead of RED/YELLOW/GREEN, that way if later you pick different colors you don't need to rename the variables everywhere...\n\nI know this gets a bit into bikeshedding but I hope you find this a bit helpful. If you prefer to address this in a later commit not to block this one just let me know and I'll merge this one as is.\n",
        "createdAt" : "2014-12-12T04:35:16Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "ef4b1a10-0123-4fa8-a4fe-8f56bc99b8ef",
        "parentId" : "8b1a231f-9434-4f80-82f0-73082117611c",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Given that I have a burning desire to re-write all of this in Go I am not sure how much we should polish this code. Personally, I think we should just make it work enough to reliably get a few big clusters up and then move on to a longer term solution.\n",
        "createdAt" : "2014-12-12T05:17:54Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "3430be11-6482-49e6-81b3-d27db9630841",
        "parentId" : "8b1a231f-9434-4f80-82f0-73082117611c",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Yep I do see your point...\n\nIn any case, my suggestions are here, feel free to take as much as you'd like and when you think it's good enough let's move on.\n\nI agree that it's best to just keep this working well enough until there's time to rewrite the bulk of it in Go.\n\nCheers,\nFilipe\n",
        "createdAt" : "2014-12-12T05:21:48Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "4fc6f43d-8d08-4454-a394-643d4f2287ca",
        "parentId" : "8b1a231f-9434-4f80-82f0-73082117611c",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I **very** much appreciate all your great suggestions and I am\n(re-)learning a lot. I've drunk too much wine now to work on this any more\ntonight (without any work being counter-productive) but I shall get back to\nit in the morning,\n\nCheers,\n\nSatnam\n\nOn Thu, Dec 11, 2014 at 9:22 PM, Filipe Brandenburger <\nnotifications@github.com> wrote:\n\n> In cluster/gce/util.sh\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/2816#discussion-diff-21729175\n> :\n> \n> > @@ -21,6 +21,13 @@\n> >  KUBE_ROOT=$(dirname \"${BASH_SOURCE}\")/../..\n> >  source \"${KUBE_ROOT}/cluster/gce/${KUBE_CONFIG_FILE-\"config-default.sh\"}\"\n> > \n> > +# Some useful colors.\n> \n> Yep I do see your point...\n> \n> In any case, my suggestions are here, feel free to take as much as you'd\n> like and when you think it's good enough let's move on.\n> \n> I agree that it's best to just keep this working well enough until there's\n> time to rewrite the bulk of it in Go.\n> \n> Cheers,\n> Filipe\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/2816/files#r21729175\n> .\n",
        "createdAt" : "2014-12-12T05:24:28Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +22,26 @@source \"${KUBE_ROOT}/cluster/gce/${KUBE_CONFIG_FILE-\"config-default.sh\"}\"\n\n# Some useful colors.\ndeclare -r color_start=\"\\033[\"\ndeclare -r color_red=\"${color_start}0;31m\""
  },
  {
    "id" : "93bfb223-c5d7-4985-8545-ab55db45cd99",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b8d82e-e8d2-4756-b468-183e3a798eb3",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Here too (and on the line above) you can drop the `$` and I think keeping the spacing around the `+` operator is more common style, possibly around the `$((` as well similar to the `(( attempt > 5 ))` on your `if` statement:\n\n``` shell\nattempt=$(( attempt + 1 ))\n```\n",
        "createdAt" : "2014-12-12T04:39:21Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "5f4d9999-deac-4095-ae52-acd11bbae4ab",
        "parentId" : "a2b8d82e-e8d2-4756-b468-183e3a798eb3",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I originally had quotes around the $2 but then gcloud gets the wrong argument so I had to drop it. Thank you.\n",
        "createdAt" : "2014-12-12T05:16:47Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "76a422ec-aa4c-4285-bc8d-5a92e5c7cb44",
        "parentId" : "a2b8d82e-e8d2-4756-b468-183e3a798eb3",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Ah in that case see what I suggested below for `create-instance` and use a `$@` for the remaining arguments.\n\n``` shell\n  local firewall_rule=$1; shift\n  ...\n    if ! gcloud compute firewall-rules create \"${firewall_rule}\" \\\n        ...\n        --source-ranges \"$@\" \\\n        ...\n```\n",
        "createdAt" : "2014-12-12T05:19:40Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +267,271 @@        fi\n        echo -e \"${color_yellow}Attempt $(($attempt+1)) failed to create firewall rule $1. Retrying.${color_norm}\"\n        attempt=$(($attempt+1))\n    else\n       break"
  },
  {
    "id" : "20050818-d00b-467a-9ebc-ab9b959cb2ee",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89367c97-5a7c-4512-b738-edfb5166510e",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I think this `$2` should be quoted, or are you expecting the caller to pass multiple arguments separated by space and expand them here? Seems like you want multiple arguments, in that case, may I suggest making that the last argument and using a list instead?\n\n``` shell\n  local instance_name=$1; shift\n  local start_script=$1; shift\n  local attempt=0\n  while true; do\n    if ! gcloud compute instances create \"${instance_name}\" \\\n      --project \"${PROJECT}\" \\\n      --zone \"${ZONE}\" \\\n      --machine-type \"${MINION_SIZE}\" \\\n      --image-project=\"${IMAGE_PROJECT}\" \\\n      --image \"${IMAGE}\" \\\n      --tags \"${MINION_TAG}\" \\\n      --network \"${NETWORK}\" \\\n      \"$@\" \\\n      --can-ip-forward \\\n      --metadata-from-file \"${startup_script}\"; then\n        ...\n```\n\nDoes that make sense?\n",
        "createdAt" : "2014-12-12T04:43:41Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +313,317 @@      --tags \"${MINION_TAG}\" \\\n      --network \"${NETWORK}\" \\\n      $2 \\\n      --can-ip-forward \\\n      --metadata-from-file \"$3\"; then"
  },
  {
    "id" : "3e46bccc-4375-41f3-9924-a52c1fbcc440",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b898de1-e044-4d42-a628-0e5364becf95",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "This looks incorrectly indented... Can you please fix it?\n\nI think in the block above (`gcloud` call in the `if`), you want to indent the continuation lines 4 spaces, then the block inside the `if` (starting with the `if (( attempt > 5 ))`) should be indented 2 spaces, that means 2 before the end of that line. That's similar to Python/C++ usual indentation. Does that make sense?\n",
        "createdAt" : "2014-12-12T04:45:46Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +325,329 @@        # if the instance creation failed).\n        gcloud compute disks delete \"$1\" --project \"${PROJECT}\" --zone \"${ZONE}\" --quiet || true\n     else\n       break\n    fi"
  },
  {
    "id" : "e59d5fb0-775b-4e38-9df4-504903ac96cd",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfa6a0cd-a474-4f18-8309-5d67e8b41f2b",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Use `(( ... ))` and the `&&` operator inside it:\n\n``` shell\n  if (( i != 0 && i % 10 == 0 )); then\n```\n\n(If this was not numeric operators, then always use `[[ ... ]]` instead of `[ ... ]` since it's vastly superior.)\n",
        "createdAt" : "2014-12-12T04:51:51Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +425,429 @@    create-firewall-rule \"${MINION_NAMES[$i]}-all\" \"${MINION_IP_RANGES[$i]}\" &\n\n    if [ $i -ne 0 ] && [ $((i%10)) -eq 0 ]; then\n      echo Waiting for a batch of firewall rules at $i...\n      wait-for-jobs"
  },
  {
    "id" : "d0193fa3-0695-4848-8c1b-8ac276f738f8",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc6c4bf7-28fc-478c-a7e2-395c61eb17a2",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I suggest always using quotes for something that looks like a string...\n\n``` shell\n  echo \"Waiting for a batch of firewall rules at ${i}...\"\n```\n",
        "createdAt" : "2014-12-12T04:52:29Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +426,430 @@\n    if [ $i -ne 0 ] && [ $((i%10)) -eq 0 ]; then\n      echo Waiting for a batch of firewall rules at $i...\n      wait-for-jobs\n    fi"
  },
  {
    "id" : "ebd5c43d-c150-4170-8ec6-c55cb52d9bd1",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a6c3cf5-0a81-4b60-b26b-c0a5ccb50758",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "`local i` before this loop or maybe beginning of this function since you reuse it many times in loops.\n",
        "createdAt" : "2014-12-12T04:53:02Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +422,426 @@\n  # Create the firewall rules, 10 at a time.\n  for (( i=0; i<${#MINION_NAMES[@]}; i++)); do\n    create-firewall-rule \"${MINION_NAMES[$i]}-all\" \"${MINION_IP_RANGES[$i]}\" &\n"
  },
  {
    "id" : "3eeb7858-3a99-40a3-a05c-caae08f7e583",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e55a3d8c-31bf-4f16-b7b2-ce44950ee8f3",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "See comment above about moving the multiple word variable to the end, in which case you'll get:\n\n``` shell\n    create-instance \"${MINION_NAMES[$i]}\" \"startup-script=${KUBE_TEMP}/minion-start-${i}.sh\" \"${scope_flags[@]}\" &\n```\n",
        "createdAt" : "2014-12-12T04:55:03Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +467,471 @@\n    local scopes_flag=\"${scope_flags[@]}\"\n    create-instance \"${MINION_NAMES[$i]}\" \"${scopes_flag}\" \"startup-script=${KUBE_TEMP}/minion-start-${i}.sh\" &\n\n    if [ $i -ne 0 ] && [ $((i%5)) -eq 0 ]; then"
  },
  {
    "id" : "576dd164-db00-4f47-9955-37641ac931a8",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ebcace3-bf9a-4cdd-8d35-0ff3fb73ab9c",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Same as above, quote the string.\n",
        "createdAt" : "2014-12-12T04:55:13Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +470,474 @@\n    if [ $i -ne 0 ] && [ $((i%5)) -eq 0 ]; then\n      echo Waiting for creation of a batch of instances at $i...\n      wait-for-jobs\n    fi"
  },
  {
    "id" : "3d3f6330-d689-46bd-b3c2-d0c9b147161b",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a95bfd8-47ab-4df5-a991-5f7b793c309f",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Hmmm... I'd suggest quoting the string, but that will in effect change the behavior because if you quote it instead of expanding to user's home it will print a literal `~`, though I'm not sure if that's not really a good thing...\n\nIf you really want the user's home, maybe you should be explicit with:\n\n``` shell\n  echo \"Wrote ${HOME}/.kubernetes_auth\"\n```\n",
        "createdAt" : "2014-12-12T04:56:55Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +518,522 @@   chmod 0600 ~/.kubernetes_auth \"${HOME}/${kube_cert}\" \\\n     \"${HOME}/${kube_key}\" \"${HOME}/${ca_cert}\"\n   echo Wrote ~/.kubernetes_auth\n  )\n"
  },
  {
    "id" : "fb146b63-a2d8-4d97-b904-15c945dd7262",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52fe7252-ba0f-43f6-8fe7-04e698537944",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Here use `$(( attempt + 1 ))` (without the `$` and with more spacing) and quote the entire string:\n\n``` shell\n  echo -n \"Attempt $((attempt + 1)) to check Docker on node ${MINION_NAMES[$i]} ...\"\n```\n",
        "createdAt" : "2014-12-12T04:58:01Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : null,
    "diffHunk" : "@@ -1,1 +530,534 @@      local attempt=0\n      while true; do\n        echo -n Attempt \"$(($attempt+1))\" to check Docker on node \"${MINION_NAMES[$i]}\" ...\n        local output=$(gcloud compute --project \"${PROJECT}\" ssh --zone \"$ZONE\" \"${MINION_NAMES[$i]}\" --command \"sudo docker ps -a\" 2>/dev/null)\n        if [[ -z \"${output}\" ]]; then"
  },
  {
    "id" : "897bd25f-01e6-456f-951c-9aa495b6fe21",
    "prId" : 2816,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d6e0733-5f8e-48ff-a3c5-429d32442c05",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "There's a problem with using `local` and `=$(...)` on the same line since `local` will mask the error output of the command (in this case the `gcloud` command)\n\nBetter would be:\n\n``` shell\n  local output\n  if ! output=$(gcloud compute ...); then\n    # ... error in gcloud\n  elif [[ -z \"${output}\" ]]; then\n    # ... also error in gcloud? maybe use a || above\n  elif [[ \"${output}\" != *\"kubernetes/pause\"* ]]; then\n    ...\n```\n",
        "createdAt" : "2014-12-12T05:00:30Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "27a0b189-2322-42cf-9f93-98ecd5c7f4b4",
        "parentId" : "7d6e0733-5f8e-48ff-a3c5-429d32442c05",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I would actually like to mask in this case.\n",
        "createdAt" : "2014-12-12T05:21:11Z",
        "updatedAt" : "2014-12-12T21:54:04Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ce71d1e33573e2962e34ebcb73c89e3e4c75067",
    "line" : null,
    "diffHunk" : "@@ -1,1 +531,535 @@      while true; do\n        echo -n Attempt \"$(($attempt+1))\" to check Docker on node \"${MINION_NAMES[$i]}\" ...\n        local output=$(gcloud compute --project \"${PROJECT}\" ssh --zone \"$ZONE\" \"${MINION_NAMES[$i]}\" --command \"sudo docker ps -a\" 2>/dev/null)\n        if [[ -z \"${output}\" ]]; then\n          if (( attempt > 9 )); then"
  },
  {
    "id" : "18f7d0f4-88f5-4257-bd0b-3d445e63936f",
    "prId" : 2419,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9765e0af-7001-49b6-b44a-0b55bbb6e7fc",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Shouldn't this have been called much earlier in the teardown process?\n",
        "createdAt" : "2014-11-17T19:28:42Z",
        "updatedAt" : "2014-11-17T19:28:42Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2f7ce3f2-e9a0-4bd9-85b5-dfbf3f57bf96",
        "parentId" : "9765e0af-7001-49b6-b44a-0b55bbb6e7fc",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "No -- look at 'kube-down.sh'.  We tear down monitoring before we tear down the regular cluster.  This stuff needs to be refactored but I wanted to fix it up first.\n",
        "createdAt" : "2014-11-17T19:50:33Z",
        "updatedAt" : "2014-11-17T19:50:33Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "257f10fd-ceef-48cf-8060-0e5ba328557c",
        "parentId" : "9765e0af-7001-49b6-b44a-0b55bbb6e7fc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Gotcha. One wonders why we bother to tear down monitoring at all if we're nuking the cluster.\n",
        "createdAt" : "2014-11-17T20:35:46Z",
        "updatedAt" : "2014-11-17T20:35:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "01cebe1b-9fdc-4746-a4d7-e68da00c137a",
        "parentId" : "9765e0af-7001-49b6-b44a-0b55bbb6e7fc",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Its mainly for the firewall rules. \n",
        "createdAt" : "2014-11-17T21:27:22Z",
        "updatedAt" : "2014-11-17T21:27:22Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ed74a8da-87b5-41d3-ab7e-8c5e5a53685d",
        "parentId" : "9765e0af-7001-49b6-b44a-0b55bbb6e7fc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, of course. Thanks.\n",
        "createdAt" : "2014-11-18T00:57:34Z",
        "updatedAt" : "2014-11-18T00:57:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b5a77c56c6671dbc090f6d4bdf5b95fd24eb633",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +631,635 @@function teardown-monitoring {\n  if [[ \"${MONITORING}\" == \"true\" ]]; then\n    detect-project\n\n    local kubectl=\"${KUBE_ROOT}/cluster/kubectl.sh\""
  },
  {
    "id" : "5cec9504-b339-41a7-8742-36193c761174",
    "prId" : 2405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3e37dda-509e-45d2-9f52-594c931ae3ad",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Formatting error.\n",
        "createdAt" : "2014-11-17T04:48:08Z",
        "updatedAt" : "2014-11-17T04:48:08Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c82bd2127f02cba4c6b0529dd6fa76f7e7756507",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +605,609 @@\n  \t# Re-use master auth for Grafana\n  \tget-password\n    ensure-temp-dir\n"
  },
  {
    "id" : "ca8ed921-8b0f-4ea6-af29-eb0376775282",
    "prId" : 2318,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b86c2cff-f4f6-46bb-ae38-fe8b1ac7fac1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Nit: spacing off by one character _twitch_\n",
        "createdAt" : "2014-11-12T19:01:57Z",
        "updatedAt" : "2014-11-12T19:01:57Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4faefda415610927a2b3081ac7c03947a6aa9193",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +595,599 @@\t    fi\n\tfi\n        local kubectl=${KUBE_ROOT}/cluster/kubectl.sh\n\t${kubectl} create -f \"${KUBE_ROOT}/examples/monitoring/influx-grafana-pod.json\" > /dev/null &&\n\t${kubectl} create -f \"${KUBE_ROOT}/examples/monitoring/influx-grafana-service.json\" > /dev/null &&"
  },
  {
    "id" : "748fc7db-cd18-4cb8-82ce-5a31722c4583",
    "prId" : 2046,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf1abb35-b956-427d-b2be-096391c97efa",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "I'm guessing we need this in case the image is not already in the user's project?\n",
        "createdAt" : "2014-10-29T06:59:41Z",
        "updatedAt" : "2014-10-29T16:43:02Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "46bb5d02-6161-411f-bfff-41d1111e4e58",
        "parentId" : "bf1abb35-b956-427d-b2be-096391c97efa",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Yes. the latest gcloud SDK release (or candidate) finally has  containervm image as another official image provided by gce. But even that, we might want to explicitly control which release of containervm image to use for now. \n",
        "createdAt" : "2014-10-29T16:41:29Z",
        "updatedAt" : "2014-10-29T16:43:02Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "18685d49ed89812055f5ea0ba9a502a610feac0b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +240,244 @@  htpasswd=$(cat \"${KUBE_TEMP}/htpasswd\")\n\n  if ! gcutil getimage \"${IMAGE}\" > /dev/null 2>&1; then\n    echo \"Adding new image: ${IMAGE}\"\n    gcutil addimage \"${IMAGE}\" \\"
  },
  {
    "id" : "652038a1-faa3-45ba-83a6-a706904bd17b",
    "prId" : 1532,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "433d6b05-6b92-4002-bf3c-56b0c1ad9701",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "The preferred syntax is using `()` and without the `function` keyword:\n\n``` shell\nverify-prereqs() {\n```\n",
        "createdAt" : "2014-10-02T13:44:25Z",
        "updatedAt" : "2014-10-10T19:37:07Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "bb3c03bd-1f49-452b-9761-9f4cbd7b02f0",
        "parentId" : "433d6b05-6b92-4002-bf3c-56b0c1ad9701",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I'm going to save this clean up for a different PR.\n",
        "createdAt" : "2014-10-06T20:44:07Z",
        "updatedAt" : "2014-10-10T19:37:07Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "272b9306c45c18effa5d92ef2e5bfa6263c88430",
    "line" : null,
    "diffHunk" : "@@ -1,1 +23,27 @@\n# Verify prereqs\nfunction verify-prereqs {\n  local cmd\n  for cmd in gcloud gcutil gsutil; do"
  },
  {
    "id" : "f5dc7a38-c37d-474d-88ea-af29b9d0ba6a",
    "prId" : 1532,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0701a630-5fce-44b9-be6f-0e0e66429e1f",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "`find-release-tars() {`\n",
        "createdAt" : "2014-10-02T13:48:15Z",
        "updatedAt" : "2014-10-10T19:37:07Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "272b9306c45c18effa5d92ef2e5bfa6263c88430",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +50,54 @@#   SERVER_BINARY_TAR\n#   SALT_TAR\nfunction find-release-tars {\n  SERVER_BINARY_TAR=\"${KUBE_ROOT}/server/kubernetes-server-linux-amd64.tar.gz\"\n  if [[ ! -f \"$SERVER_BINARY_TAR\" ]]; then"
  },
  {
    "id" : "1cbe2581-f840-4509-8138-6a29f398fcf7",
    "prId" : 1435,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6265920-2303-45b8-9fd6-e9c398c6a948",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I'm not sure that you can launch a VM on a network that isn't created yet so this may introduce a race.  I'd (a) move this up above where we create the `master-start.sh` script and (b) put a `wait` in for the network itself.  To do that the \"wait and report errors\" snippet below should probably be pulled out into a function.\n\nI have a e2e tweak coming and I'm happy to make these changes there.\n",
        "createdAt" : "2014-09-25T16:25:55Z",
        "updatedAt" : "2014-09-25T16:25:55Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "b1ea0421-28f4-4ff7-bbb9-e5991391d6c2",
        "parentId" : "a6265920-2303-45b8-9fd6-e9c398c6a948",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Ah -- I see that the network is created synchronously but the firewalls are done in the background.  I'll add a clarifying comment in my PR.\n",
        "createdAt" : "2014-09-25T17:15:12Z",
        "updatedAt" : "2014-09-25T17:15:12Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "511ec280b9cec4f6463c532104a6eb89c20e3cbc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +164,168 @@      --network \"${NETWORK}\" \\\n      --allowed_ip_sources \"0.0.0.0/0\" \\\n      --allowed \"tcp:22\" &\n  fi\n"
  },
  {
    "id" : "a9f586a2-8e0c-41c9-b574-a814ae4c85e4",
    "prId" : 1418,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b974bfa-3e18-45fc-b4cc-ed92229d1d48",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Is anything using these values yet?  I couldn't find them in `client.go`.  If we want to borrow the pattern from etcd, we should name this `caCertFiles` and take an array.  \n",
        "createdAt" : "2014-09-23T21:32:04Z",
        "updatedAt" : "2014-09-23T23:51:12Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "eddb29c2-a186-45f1-990f-0d5fbb926acc",
        "parentId" : "7b974bfa-3e18-45fc-b4cc-ed92229d1d48",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "The client code is already using them:\n\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/client/client.go#L179\n",
        "createdAt" : "2014-09-23T22:50:01Z",
        "updatedAt" : "2014-09-23T23:51:12Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "380b6afd-71ff-4417-8bfb-cdedbdd451a5",
        "parentId" : "7b974bfa-3e18-45fc-b4cc-ed92229d1d48",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "You are moving too fast!  I didn't have that in the (a few days old) code I searched through.  Carry on!\n",
        "createdAt" : "2014-09-23T22:57:50Z",
        "updatedAt" : "2014-09-23T23:51:12Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "cafd20b233c4a1246f9fb340218d7f4c436ec8bc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +268,272 @@  \"User\": \"$user\",\n  \"Password\": \"$passwd\",\n  \"CAFile\": \"$HOME/$ca_crt\",\n  \"CertFile\": \"$HOME/$kube_crt\",\n  \"KeyFile\": \"$HOME/$kube_key\","
  },
  {
    "id" : "96dee3bd-214d-4d4d-9fbc-d8b31e877170",
    "prId" : 1402,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a0e85dd-d8a8-4459-a4fa-8bd8dc1295cc",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I'm almost sure you don't want to quote the arguments to ssh, since I believe it will not split words on the other side of the command:\n\n``` shell\nrestart-kube-proxy() {\n  ssh-to-node \"$1\" sudo /etc/init.d/kube-proxy restart\n}\n```\n",
        "createdAt" : "2014-10-15T16:43:13Z",
        "updatedAt" : "2014-10-16T15:37:00Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "1c861767-6871-4676-8cd4-dd7d1e41e5a6",
        "parentId" : "5a0e85dd-d8a8-4459-a4fa-8bd8dc1295cc",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This works.\n",
        "createdAt" : "2014-10-16T02:45:19Z",
        "updatedAt" : "2014-10-16T15:37:00Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c4bd552730fb2a4ca6d5c85230aed4f37734e7e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +542,546 @@# Restart the kube-proxy on a node ($1)\nfunction restart-kube-proxy {\n  ssh-to-node \"$1\" \"sudo /etc/init.d/kube-proxy restart\"\n}"
  }
]