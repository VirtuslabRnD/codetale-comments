[
  {
    "id" : "c20aa808-e016-40d8-8075-b4e236d60f30",
    "prId" : 100764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100764#pullrequestreview-637138741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ec4f073-8411-418f-9772-4be4ce174dc6",
        "parentId" : null,
        "authorId" : "b112ea13-32cd-4220-9b55-14ca54cb7a3c",
        "body" : "I'm not that familiar with the ins and outs of these configuration scripts other than what I've had to do to debug some gnarly issues.  Does the existence of the script necessarily indicate that it has been `source`d by the time we're here?  This feels like it's begging to throw a `command not found` at us.\r\n\r\nMy initial reaction was to suggest we `source` the `*configure-helper.sh` here, since it should be safe to `source` in this `if` block even if it has already been `source`d before.  But looking around elsewhere, there are a other commands (i.e., `append-param-if-not-present`, `get-metadata-value`) that are just assumed to be on the `PATH`, so maybe that worry is moot.",
        "createdAt" : "2021-04-15T20:30:36Z",
        "updatedAt" : "2021-04-15T20:30:39Z",
        "lastEditedBy" : "b112ea13-32cd-4220-9b55-14ca54cb7a3c",
        "tags" : [
        ]
      },
      {
        "id" : "af12a701-1b4a-43fd-ab92-84349cdeb4ed",
        "parentId" : "1ec4f073-8411-418f-9772-4be4ce174dc6",
        "authorId" : "e87ec811-9209-4ef9-992c-eab08b2e4d81",
        "body" : "It's sourced in https://github.com/Kubernetes/kubernetes/blob/master/cluster/gce/gci/configure.sh#L386",
        "createdAt" : "2021-04-15T21:20:02Z",
        "updatedAt" : "2021-04-15T21:20:02Z",
        "lastEditedBy" : "e87ec811-9209-4ef9-992c-eab08b2e4d81",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccb742c43c4d4497723393612748e03c9134650a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +97,101 @@  fi\n  if [[ -e \"${KUBE_HOME}/bin/gke-internal-configure-helper.sh\" ]]; then\n    params+=\" $(gke-kube-apiserver-internal-sni-param)\"\n  fi\n  params+=\" --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\""
  },
  {
    "id" : "fe1ccf4f-7ad8-4d37-a5f2-efc0158bf233",
    "prId" : 95312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95312#pullrequestreview-547406896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c05c1e41-8961-44e5-a650-827787153416",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is not ok... this means kube-apiserver is connecting to etcd over a potentially public IP over http.",
        "createdAt" : "2020-12-08T16:29:44Z",
        "updatedAt" : "2020-12-08T16:31:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b4e164a781822bbc5e8249b64346cb74280abf2",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +33,37 @@      params_ref+=\" --etcd-keyfile=${ETCD_APISERVER_CLIENT_KEY_PATH}\"\n  elif [[ -z \"${ETCD_APISERVER_CA_KEY:-}\" && -z \"${ETCD_APISERVER_CA_CERT:-}\" && -z \"${ETCD_APISERVER_SERVER_KEY:-}\" && -z \"${ETCD_APISERVER_SERVER_CERT:-}\" && -z \"${ETCD_APISERVER_CLIENT_KEY:-}\" && -z \"${ETCD_APISERVER_CLIENT_CERT:-}\" ]]; then\n      params_ref+=\" --etcd-servers=${ETCD_SERVERS:-http://${host_ip}:2379}\"\n      echo \"WARNING: ALL of ETCD_APISERVER_CA_KEY, ETCD_APISERVER_CA_CERT, ETCD_APISERVER_SERVER_KEY, ETCD_APISERVER_SERVER_CERT, ETCD_APISERVER_CLIENT_KEY and ETCD_APISERVER_CLIENT_CERT are missing, mTLS between etcd server and kube-apiserver is not enabled.\"\n  else"
  },
  {
    "id" : "7dad36a9-23bb-4022-9e0b-6f7cbe443e78",
    "prId" : 92669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92669#pullrequestreview-514071789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a45893c-a327-4e74-abb4-8bf3ddbf89f8",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "A bit wonky moving this out of the PREPARE_KONNECTIVITY_SERVICE switch. If PREPARE_KONNECTIVITY_SERVICE isn't enabled then the file won't exist. OTOH at least it may make the issue obvious in the way it blows up. (I realize your not supposed to enable this without PREPARE_KONNECTIVITY_SERVICE being enabled. However if we were relying on that we wouldn't move this out)",
        "createdAt" : "2020-10-21T18:41:57Z",
        "updatedAt" : "2020-10-22T15:43:41Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e5d05775557f867cc076a036d147f8e48fbeae7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +352,356 @@    default_konnectivity_socket_mnt=\"{ \\\"name\\\": \\\"konnectivity-socket\\\", \\\"mountPath\\\": \\\"${default_konnectivity_socket_path}\\\", \\\"readOnly\\\": false},\"\n  fi\n  if [[ \"${EGRESS_VIA_KONNECTIVITY:-false}\" == \"true\" ]]; then\n    params+=\" --egress-selector-config-file=/etc/srv/kubernetes/egress_selector_configuration.yaml\"\n  fi"
  }
]