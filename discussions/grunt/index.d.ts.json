[
  {
    "id" : "6125927a-8157-4af9-9001-ddda90b0b0ae",
    "prId" : 13493,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13493#pullrequestreview-14858431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0411a3c-2ce6-497a-a5c4-40fa22ab8dac",
        "parentId" : null,
        "authorId" : "2fa0ceae-fd42-4f86-a1c4-e02ef925b60b",
        "body" : "I guess I was expecting you would go the other way with adding the type parameter, but this works for me. I might just have trouble understanding the ramifications since it has been a while since I have used TypeScript. Would this not work for most use cases?\r\n\r\n```\r\nregisterMultiTask<T>(taskName: string, taskDescription: string, taskFunction: (this: IMultiTask<T>, ...args: any[]) => void): void\r\n```\r\n\r\nIf not, could you explain why? I'm okay with using `any`, but it seems like allowing the caller to constrict the type could be useful.",
        "createdAt" : "2016-12-28T20:52:45Z",
        "updatedAt" : "2017-01-14T09:10:10Z",
        "lastEditedBy" : "2fa0ceae-fd42-4f86-a1c4-e02ef925b60b",
        "tags" : [
        ]
      },
      {
        "id" : "bf91eb02-c094-4750-a44e-2bfbe5ca4fc3",
        "parentId" : "b0411a3c-2ce6-497a-a5c4-40fa22ab8dac",
        "authorId" : "f1ae7da8-9018-4b5b-b569-53de0e27c1a1",
        "body" : "@jeffmay that would work. Though, my concern is just that it will breaks peoples code. Since not providing a type (there is also noway TS can infer the type) the default type will be `{}`. \r\n\r\nWhat we want though is default generic types, though I'm not sure when that will happen:\r\nhttps://github.com/Microsoft/TypeScript/issues/2175",
        "createdAt" : "2016-12-29T10:30:47Z",
        "updatedAt" : "2017-01-14T09:10:10Z",
        "lastEditedBy" : "f1ae7da8-9018-4b5b-b569-53de0e27c1a1",
        "tags" : [
        ]
      },
      {
        "id" : "d23d2f7f-a390-4275-adca-7307aa61566e",
        "parentId" : "b0411a3c-2ce6-497a-a5c4-40fa22ab8dac",
        "authorId" : "2fa0ceae-fd42-4f86-a1c4-e02ef925b60b",
        "body" : "Ah, I see. Does `T extends any` provide any IDE support? It seemed weird from a code perspective, but if it helps with auto-complete and stuff, I would be okay with the original approach, otherwise, this seems like the closest we can get without breaking people's stuff.",
        "createdAt" : "2017-01-02T16:22:34Z",
        "updatedAt" : "2017-01-14T09:10:10Z",
        "lastEditedBy" : "2fa0ceae-fd42-4f86-a1c4-e02ef925b60b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e613ad6f3242de7a2fe4a7151c09f5ca1f7b4ceb",
    "line" : 732,
    "diffHunk" : "@@ -1,1 +798,802 @@             */\n            registerMultiTask(taskName: string, taskFunction: (this: IMultiTask<any>, ...args: any[]) => void): void;\n            registerMultiTask(taskName: string, taskDescription: string, taskFunction: (this: IMultiTask<any>, ...args: any[]) => void): void;\n\n            /**"
  }
]