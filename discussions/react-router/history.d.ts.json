[
  {
    "id" : "b2fa3b75-03d2-4e99-a811-4fecb1e0df5f",
    "prId" : 6073,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75d9009b-2d6f-4ecb-9758-254b5ea842f6",
        "parentId" : null,
        "authorId" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "body" : "When you update this to 1.13.1 or later, you'll want this:\n\n```\n        pushState(state: LocationState, path: Path, query?: Query): void\n        replaceState(state: LocationState, path: Path, query?: Query): void\n        push(path: Path, query?: Query): void\n        replace(path: Path, query?: Query): void\n```\n\nNote that `push` and `replace` currently don't accept a `query` parameter in the published code, but the published API says they should. I opened an issue for that (https://github.com/rackt/history/issues/144) but left my definitions matching the docs.\n",
        "createdAt" : "2015-11-19T08:47:48Z",
        "updatedAt" : "2015-11-20T09:31:52Z",
        "lastEditedBy" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "tags" : [
        ]
      },
      {
        "id" : "d1fbc636-8835-4d33-97c7-e61ffde22053",
        "parentId" : "75d9009b-2d6f-4ecb-9758-254b5ea842f6",
        "authorId" : "a7eb3f7e-e6f7-4a36-bedd-50f3acf546e5",
        "body" : "They accept, but in case when you apply history enhancer function to a history object:\nlet history = useQueries(createHistory)\n// this history should have updated pushState function with query parameter\nhistory.pushState(state: LocationState, path: Path, query?: Query): void\n",
        "createdAt" : "2015-11-19T12:22:23Z",
        "updatedAt" : "2015-11-20T09:31:52Z",
        "lastEditedBy" : "a7eb3f7e-e6f7-4a36-bedd-50f3acf546e5",
        "tags" : [
        ]
      },
      {
        "id" : "bcdfc6f1-8c7c-4b44-926e-401cf9dc5c03",
        "parentId" : "75d9009b-2d6f-4ecb-9758-254b5ea842f6",
        "authorId" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "body" : "I don't think I understand your comment. \n\nI noticed you pushed a commit that updates the `history` definitions to 1.13.1, but you still need to add `push` and `replace` here and an optional `query` parameter on the other two.\n",
        "createdAt" : "2015-11-20T05:55:39Z",
        "updatedAt" : "2015-11-20T09:31:52Z",
        "lastEditedBy" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "tags" : [
        ]
      },
      {
        "id" : "60b7a8d1-f3d6-4122-ab05-736affe97e11",
        "parentId" : "75d9009b-2d6f-4ecb-9758-254b5ea842f6",
        "authorId" : "a7eb3f7e-e6f7-4a36-bedd-50f3acf546e5",
        "body" : "Sorry, didn't see new methods you mentioned, thought you was talking about `pushState`.\nRegarding new methods, in the base history interface `push` and `replace` have to be without query parameter. This parameter have to be introduced in HistoryQueries interface in overriden `push` and `replace` as it is with `pushState` and `replaceState`, but it seems from implementation that guys forgot to override these new methods in `useQueries` module.\n",
        "createdAt" : "2015-11-20T09:39:42Z",
        "updatedAt" : "2015-11-20T09:40:17Z",
        "lastEditedBy" : "a7eb3f7e-e6f7-4a36-bedd-50f3acf546e5",
        "tags" : [
        ]
      },
      {
        "id" : "ca7f12f0-2b87-4c1d-bef0-fb63d25e69c3",
        "parentId" : "75d9009b-2d6f-4ecb-9758-254b5ea842f6",
        "authorId" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "body" : "@sergey-buturlakin correct, the overrides for `push` and `replace` with query support were removed for some reason.\n\nAnd I was confused about the other two. I didn't see the overrides you had in HistoryQueries, so I'm good now. :)\n",
        "createdAt" : "2015-11-23T22:52:08Z",
        "updatedAt" : "2015-11-23T22:52:08Z",
        "lastEditedBy" : "af117914-9bcb-4a2d-97af-82a8b4a011d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "99f6493ffb1ef5479c6154ec9f82a47178bbf8b6",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@        transitionTo(location: Location): void\n        pushState(state: LocationState, path: Path): void\n        replaceState(state: LocationState, path: Path): void\n        push(path: Path): void\n        replace(path: Path): void"
  }
]