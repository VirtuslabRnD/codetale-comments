[
  {
    "id" : "36a7369a-48d6-4eb6-ad47-ecbf91a4991b",
    "prId" : 424,
    "prUrl" : "https://github.com/sbt/zinc/pull/424#pullrequestreview-68954772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e47c50d1-682b-45bf-86cc-63032d950366",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Why has this been changed?\r\n  \r\nThe reformulation of this test is less precise than the previous one, and I think we should always favor `checkRecompilations` since it gives room to less errors than just \"expect a random compilation failure\".",
        "createdAt" : "2017-10-11T07:52:51Z",
        "updatedAt" : "2017-10-12T17:00:11Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "2a95bf4e-0745-4109-b819-d50074824695",
        "parentId" : "e47c50d1-682b-45bf-86cc-63032d950366",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "> Why has this been changed?\r\n\r\nBecause what I expect as output is failure of compilation, as it was tested in sbt/sbt, and it's more direct result of what we've tested using this test. The comment right above says\r\n\r\n```\r\n # D.scala needs recompiling because the pattern match in D\r\n # is no longer exhaustive, which emits a warning\r\n```\r\n\r\nSee also `source-dependencies/check-recompilation` test for a more normal usage. `checkRecompilations` looks into the Analysis so see what step each classes were recompiled. The expected output we want is that the final compilation to show warning when the pattern match is no longer exhaustive. We are testing the behavior using `-Xfatal-warnings` flag.\r\n\r\n```\r\n> checkRecompilations 1 A B C E\r\n> checkRecompilations 2 D\r\n```\r\n\r\nsays, in 1st compilation step it compiled A, B, C, and E. And in the 2nd step, it compiled D. This does not tell us about the warning. In other words, this is a _weaker_ test than what we had in sbt 0.13.\r\n\r\nNow thanks to the `-Xfatal-warnings` flag, it fails to compile. So I could potentially put `-> checkRecompilations 1 A B C E` (with minus sign), but that value would be nonsensical.\r\n\r\n",
        "createdAt" : "2017-10-12T06:38:01Z",
        "updatedAt" : "2017-10-12T17:00:11Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "07f02a8c-ab5d-4e63-8534-574e5078b90c",
        "parentId" : "e47c50d1-682b-45bf-86cc-63032d950366",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "The issue here is that `checkRecompilations` runs both compile and checks the value of the analysis file. IMO `checkRecompilations` should only read the last persisted analysis file and make sure that the invariants are met. I'm happy to leave that for another pull request.",
        "createdAt" : "2017-10-12T14:57:25Z",
        "updatedAt" : "2017-10-12T17:00:11Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9403160bc8577dc6934e9c0de96ffeffe16ca5ab",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +6,10 @@# D.scala needs recompiling because the pattern match in D\n# is no longer exhaustive, which emits a warning\n-> compile"
  }
]