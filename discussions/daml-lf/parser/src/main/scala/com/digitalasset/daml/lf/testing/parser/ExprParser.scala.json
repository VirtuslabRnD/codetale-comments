[
  {
    "id" : "d86f0222-0d32-4457-9974-05291a9589e5",
    "prId" : 9809,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df84b285-40ea-497c-860b-a89af791fc35",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Was the problem that we parsed it as a literal because that comes first here?",
        "createdAt" : "2021-05-27T06:44:43Z",
        "updatedAt" : "2021-05-27T06:44:44Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "068002ca-77d3-469f-815a-f48ec62f4d92",
        "parentId" : "df84b285-40ea-497c-860b-a89af791fc35",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Yes. \r\nPartyId and PackageId have the same syntax.  ",
        "createdAt" : "2021-05-27T06:55:31Z",
        "updatedAt" : "2021-05-27T06:55:31Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "6508119d-9bc8-4f09-b4b5-d8b2a6d8b0aa",
        "parentId" : "df84b285-40ea-497c-860b-a89af791fc35",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "thanks for the explanation!",
        "createdAt" : "2021-05-27T07:04:10Z",
        "updatedAt" : "2021-05-27T07:04:11Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d59ea5f54ef1d787959a389d24489819ee9f0885",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +20,24 @@  lazy val expr0: Parser[Expr] =\n    // expressions starting with fullIdentifier should come before litterals\n    eRecCon |\n      eRecProj |\n      eRecUpd |"
  },
  {
    "id" : "f7bce697-2eaa-4ee4-a995-fe9105853034",
    "prId" : 8391,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "492db1aa-fe4d-4916-a297-3a1fc787569f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is to work around https://github.com/scala/bug/issues/12071. Afaict, the warning is a false positive but adding a few parentheses seems easy enough.",
        "createdAt" : "2021-01-05T10:09:10Z",
        "updatedAt" : "2021-01-05T11:06:13Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "63c1cddd9b079e1d772d1db407c8b81fd8261e4c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@      caseOf |\n      id ^^ EVar |\n      (`(` ~> expr <~ `)`)\n\n  lazy val exprs: Parser[List[Expr]] = rep(expr0)"
  },
  {
    "id" : "d7487ec0-6d23-457e-a2b4-ec57439ea85e",
    "prId" : 8332,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "876d7a02-a0ef-4209-9938-dd175a8ddaa9",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why is this different from the other places now? Is this some sort of simplification?",
        "createdAt" : "2020-12-17T15:57:48Z",
        "updatedAt" : "2020-12-18T10:53:18Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "9e2c6f4f-9700-4b87-825c-605c3d239920",
        "parentId" : "876d7a02-a0ef-4209-9938-dd175a8ddaa9",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I just try to reduce the number of key words.",
        "createdAt" : "2020-12-17T18:19:30Z",
        "updatedAt" : "2020-12-18T10:53:18Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "8b4f5fc9-4402-43ae-9089-0f5b6b3d1b89",
        "parentId" : "876d7a02-a0ef-4209-9938-dd175a8ddaa9",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I see. That makes sense. Thanks.",
        "createdAt" : "2020-12-18T10:45:58Z",
        "updatedAt" : "2020-12-18T10:53:18Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4bdc41f9d734f7d91aa335bdb372c60f959e486",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +310,314 @@\n  private lazy val scenarioBlock: Parser[Scenario] =\n    Id(\"sbind\") ~>! bindings ~ expr ^^ {\n      case bs ~ body => ScenarioBlock(bs, body)\n    }"
  },
  {
    "id" : "941432b2-7258-4434-9396-c2d1bff8beae",
    "prId" : 6932,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4bde143-c2a5-4cbb-a159-e998112344ad",
        "parentId" : null,
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Could this be  `expr` instead of `expr0`?",
        "createdAt" : "2020-07-30T14:30:48Z",
        "updatedAt" : "2020-07-30T15:15:05Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "03279304-7619-43a6-aabf-47fc1399e074",
        "parentId" : "c4bde143-c2a5-4cbb-a159-e998112344ad",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Are you asking about replacing the `expr0` in this line with `expr` or making this rule part of `expr` instead of `expr0` further up?\r\n\r\nThe answer to the former is \"no\". I want the `loc(...)` construct to look like a function and arguments are of the `expr0` form.\r\n\r\nThe answer to the second would be \"good catch\". In fact, `eLoc` should be part of `expr` since it looks like an application. Otherwise expressions like `loc(...) f g` would be parsed as `(loc(...) f) g`, which seems somewhat counterintuitive. When `eLoc` is part of `expr`, this expression will be rejected.\r\n\r\nI moved `eLoc` to `expr` and added a test case demonstrating that the expression above gets rejected.",
        "createdAt" : "2020-07-30T14:57:30Z",
        "updatedAt" : "2020-07-30T15:15:05Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3109c58e342d7cc654c81ed03b022ce9f979c0df",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +390,394 @@\n  private lazy val eLoc: Parser[Expr] =\n    `loc` ~>! (`(` ~> dottedName) ~ (`,` ~> id) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`,` ~> int) ~ (`)` ~> expr0) ^^ {\n      case m ~ d ~ ls ~ cs ~ le ~ ce ~ e =>\n        val location ="
  }
]