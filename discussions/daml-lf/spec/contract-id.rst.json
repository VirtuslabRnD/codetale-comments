[
  {
    "id" : "fde7d646-f8bf-47c8-b8d8-8feb5b6e154d",
    "prId" : 5876,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ceaea47-072e-4f70-9c72-75ca90e78724",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "in #5784 @hurryabit wrote:\r\n> Should it be `versionPrefix`? If so, the same type happened further below again.",
        "createdAt" : "2020-05-06T18:10:53Z",
        "updatedAt" : "2020-05-06T18:10:54Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "ccd8ba3d-53e4-49c7-995d-dafc1cf0c262",
        "parentId" : "9ceaea47-072e-4f70-9c72-75ca90e78724",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "good catch. ",
        "createdAt" : "2020-05-06T18:11:15Z",
        "updatedAt" : "2020-05-06T18:11:15Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a986d2bbeb660bd1f4ff36a1909e53966b144273",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@bytes defined as follows ::\n\n  ContractID := versionPrefix ∥ discriminator ∥ suffix\n\nwhere"
  },
  {
    "id" : "3fba029a-ce12-4626-a0db-03eb60c9154d",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b064b71d-0c3a-428d-8c7b-588d7fabb7ec",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "```suggestion\r\n* Allows ledgers to store arbitrary information about the contract and the creating transaction in the contract ID if necessary.\r\n\r\n```",
        "createdAt" : "2020-05-04T08:11:24Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@* Eliminate all contract ID translations for central commiter ledger\n* Allows ledgers to store arbitrary information about the contract and the creating transaction in the contract ID if necessary.\n\nRequirements\n^^^^^^^^^^^^"
  },
  {
    "id" : "8a62bf2e-3915-49cf-8547-826d80608c05",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7522bded-4918-4bbe-b75c-9f4b15930b5c",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "This is the first time in this document that you mention \"input seeds\". Can you explain them briefly here or put a forward reference to their definition?",
        "createdAt" : "2020-05-04T08:13:02Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "fbaa2443-a186-4486-8a9b-f1083779bc51",
        "parentId" : "7522bded-4918-4bbe-b75c-9f4b15930b5c",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I drop the \"input seeds\". I just consider the seed of the node to be part of the projection. ",
        "createdAt" : "2020-05-05T12:26:42Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@projection. That is, the contract IDs for contracts created in the\nprojection of a transaction to a set of parties can be computed\nsolely from the projection and input seeds.\n\n**Unlinkability**: It is computationally infeasible to link the contract"
  },
  {
    "id" : "4f949bce-d256-47e4-b033-e1ae745da881",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4541397-a9ce-48ae-a71a-dfb24e86d219",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "```suggestion\r\n* ``discriminator`` is a sequence of 32 bytes. It is generated from an initial seed (called *submission seed*)\r\n```\r\nI'd try to avoid the technical term \"UUID\" because there's a standard that describes the precise format. In particular, a UUID consists of exactly 16 bytes.",
        "createdAt" : "2020-05-04T08:47:02Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@  contract ID scheme;\n* ``discriminator`` is a sequence of 32 bytes. It is like a random\n  UUID, but generated from an initial seed (called *submission seed*)\n  via a fixed `derivation scheme <Allocation scheme for\n  discriminators_>`_ that supports validation (see below)."
  },
  {
    "id" : "8d00d54d-82d4-4adf-b84b-be011a226c62",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5147dbcf-5d93-4f57-8515-7ac1109ff32e",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "Is this enforced in the implementation anywhere? In our tests, even very long suffixes seem to be accepted: https://github.com/DACH-NY/canton/blob/master/common/src/test/scala/com/digitalasset/canton/protocol/ContractIdTest.scala#L70",
        "createdAt" : "2020-05-04T08:48:37Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "b126fb44-80ff-4139-b396-aa3433dd466e",
        "parentId" : "5147dbcf-5d93-4f57-8515-7ac1109ff32e",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "It is specified in the [DAML-LF spec](https://github.com/digital-asset/daml/blob/remy-contract-id-spec/daml-lf/spec/daml-lf-1.rst) line 564 (with a typo :().\r\nI will fix the typo and add a check in a upcoming PR. \r\n",
        "createdAt" : "2020-05-04T17:04:57Z",
        "updatedAt" : "2020-05-05T12:28:37Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@  discriminators_>`_ that supports validation (see below).\n* ``suffix`` is a sequence of 0 to 95 bytes used to enforce global\n  uniqueness of the contract ID in a distributed ledger.\n\nDiscriminator freshness"
  },
  {
    "id" : "ae6ae736-d414-4b12-ade0-beabaad4a46b",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29056a6a-1d13-40da-a604-6084b0e69e56",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Should it be `versionPrefix`? If so, the same type happened further below again.",
        "createdAt" : "2020-05-06T16:11:18Z",
        "updatedAt" : "2020-05-06T16:22:43Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@bytes defined as follows ::\n\n  ContractID := verisionPrefix ∥ discriminator ∥ suffix  \n\nwhere"
  },
  {
    "id" : "c071c124-a1d8-471f-9956-43154f03a961",
    "prId" : 5784,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dc6d21b-f61d-468d-946a-17bbd7c87c61",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Doesn't it say 96 in the DAML-LF 1 spec?",
        "createdAt" : "2020-05-06T16:21:47Z",
        "updatedAt" : "2020-05-06T16:22:43Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "1740b4aad8b549fda29ee37d8663f4d503545a20",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@  via a fixed `derivation scheme <Allocation scheme for\n  discriminators_>`_ that supports validation (see below).\n* ``suffix`` is a sequence of 0 to 95 bytes used to enforce global\n  uniqueness of the contract ID in a distributed ledger.\n"
  }
]