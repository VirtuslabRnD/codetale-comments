[
  {
    "id" : "2fe9f358-9510-49ef-9082-b4e3114cf7c7",
    "prId" : 9587,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fba53cd-3862-4ae1-bc11-14f51004717a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "a comment on what the cids are that we return would be great.",
        "createdAt" : "2021-05-05T14:26:19Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "bd421e16-1ccb-452b-8054-f2b332c50e4b",
        "parentId" : "5fba53cd-3862-4ae1-bc11-14f51004717a",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "done.",
        "createdAt" : "2021-05-05T17:20:20Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b1e301c5db50426186edd6a36de1a01e740783f",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +130,134 @@\n  // returns the speedy translation of an LF command together with all the contract IDs contains inside.\n  private[preprocessing] def unsafePreprocessCommand(\n      cmd: command.Command\n  ): (speedy.Command, Set[Value.ContractId]) = {"
  },
  {
    "id" : "01338564-6364-4666-9b41-687865ad813b",
    "prId" : 9587,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "572607b1-3a11-41d3-a65c-bcbd5f1de891",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "What happened to the cids?",
        "createdAt" : "2021-05-05T14:59:53Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e5fa2ee3-e35a-4d34-958e-e8f8e645c076",
        "parentId" : "572607b1-3a11-41d3-a65c-bcbd5f1de891",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "before `cids` was modify imperatively and go return only the list of commands. \r\nI change to a purer approach where go return the list of commands together with the list of global CIDs. \r\nThe `Set.empty` is the initialization of the CIds accumulator.",
        "createdAt" : "2021-05-05T17:15:56Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "a0352ab8-5b20-41d7-a1dc-8186154d43c3",
        "parentId" : "572607b1-3a11-41d3-a65c-bcbd5f1de891",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "oh I see, clearly didnâ€™t take a close enough look",
        "createdAt" : "2021-05-05T17:17:29Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b1e301c5db50426186edd6a36de1a01e740783f",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +187,191 @@    }\n\n    go(FrontStack(cmds), BackStack.empty, Set.empty)\n  }\n"
  },
  {
    "id" : "c338b4e4-95f6-47e9-b454-cd334786770a",
    "prId" : 5361,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56c031ae-9729-43d8-960a-733225393f72",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Why do we care about contractIds referred to in a value? Since this can come from the ledger api, anything can be put in there. See @andreaslochbihler-da's [comment](https://github.com/digital-asset/daml/pull/5361#discussion_r417146998).",
        "createdAt" : "2020-04-29T10:10:17Z",
        "updatedAt" : "2020-04-30T07:34:20Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "fd46f780-9744-4884-8eb2-9ba1e0d9ae96",
        "parentId" : "56c031ae-9729-43d8-960a-733225393f72",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "The purpose of this check is the discriminator of the contract created by the transaction are globally fresh, that is they do not conflict with any other contract IDs refered by a transaction. \r\n\r\nFor this purpose we introduce the notion of local and global contract IDs that slightly differs from input/output contracts. \r\n\r\nA _local contract ID_ is the ID of a contract created in a transaction.  \r\nNote that local contract IDs correspond to the IDs of output contract ID together with those which are created and consumed in the same transaction. \r\n\r\nA _global contract ID_ is a contract ID that: \r\n1 appears in the command itself (notably in the argument of the create, exercise)  \r\n2 the IDs of input contract fetched or looked up by key\r\n3 the IDs referenced in the body of the input contracts. \r\n\r\nNote that global contract IDs do not reference only to IDs of some contract that exists (or has existed) on the ledger  but also any random CID somebody can submit to the ledger API\r\n\r\nThe freshness check consists to verify the discriminators of the local ID are distinct from the global ID. \r\n\r\nThe value here is part of the command (point 1) and should be  considered as a global ID.",
        "createdAt" : "2020-04-29T11:17:06Z",
        "updatedAt" : "2020-04-30T07:34:20Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "a9604ecf-7c0e-4441-bf20-6e4d9b1755ee",
        "parentId" : "56c031ae-9729-43d8-960a-733225393f72",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Great explanation. Would you mind putting this as a comment on `Machine` somewhere?",
        "createdAt" : "2020-04-29T11:42:36Z",
        "updatedAt" : "2020-04-30T07:34:20Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "38d003c1-a1b7-4db7-affe-52ae64f9223b",
        "parentId" : "56c031ae-9729-43d8-960a-733225393f72",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "done.",
        "createdAt" : "2020-04-29T16:42:52Z",
        "updatedAt" : "2020-04-30T07:34:20Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "33e121173bce232d87fb34d60de0cb851f4511a9",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +77,81 @@    val template = unsafeGetTemplate(templateId)\n    val choiceArgType = unsafeGetChoiceArgType(templateId, template, choiceId)\n    val (arg, argCids) = valueTranslator.unsafeTranslateValue(choiceArgType, argument)\n    val cids = contractId match {\n      case acoid: Value.AbsoluteContractId => argCids + acoid"
  }
]