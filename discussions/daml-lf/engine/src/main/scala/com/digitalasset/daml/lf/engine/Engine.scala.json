[
  {
    "id" : "b52e887d-bcc8-4bd0-beb8-4279cdb0da30",
    "prId" : 10136,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you extend the code documentation above, please?",
        "createdAt" : "2021-06-28T16:20:56Z",
        "updatedAt" : "2021-06-28T16:22:10Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "41bddd4f-4730-4b89-8b76-7f3ad3176730",
        "parentId" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "Good idea, thanks!",
        "createdAt" : "2021-06-28T16:34:46Z",
        "updatedAt" : "2021-06-28T16:34:46Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      },
      {
        "id" : "9d4f823d-9559-4a8d-afd7-a48ebd8a61f6",
        "parentId" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Thanks for extending the code documentation!\r\nIf these are really additional readers (i.e., besides the submitters), I'd suggest naming the parameter accordingly. Though, I might be missing some context regarding why we chose `readAs` originally.",
        "createdAt" : "2021-06-28T17:16:22Z",
        "updatedAt" : "2021-06-28T17:16:29Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "00fee8f7-8ea9-4caf-ad04-556f0019673d",
        "parentId" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’d prefer using the same name everywhere. Using different names for the same thing across our codebase is just confusing. As for why we have those names, I believe we tried to match the names we used for authorization when we added multitparty submissions.",
        "createdAt" : "2021-06-28T17:19:19Z",
        "updatedAt" : "2021-06-28T17:19:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "05ebbb09-c109-4a16-ae08-978ac5b8c245",
        "parentId" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "The `readAs` and `actAs` terms were first used when we added ledger API authorization, for parties the bearer of the auth token is allowed to use for read-only (e.g., transaction service) and state modifying (e.g., command service) ledger API queries, respectively. At this time, the concept of multi-party submissions did not exist and `readAs` had nothing to do with contract visibility during command interpretation.\r\n\r\nThe terms then made it into the ledger API and the engine when we added multi-party submissions, where `readAs` means \"parties that can be used to look up contracts/keys, in addition to the submitters\". Using a `readAs` party for multi-party submissions requires a corresponding `readAs` claim in the auth token.\r\n\r\nNote also the following details:\r\n- The `readAs`/ `actAs` parties from auth tokens are a superset of the parties used in ledger API commands (you don't have to use all parties you are allowed to)\r\n- The `readAs`/ `actAs` parties from ledger API commands are a superset of the minimal sets of parties required to successfully submit the command (you can submit a command as Alice+Bob, even though Alice alone would be enough to authorize the command in the Daml model)\r\n- The ledger API server normalizes `readAs` parties by removing `actAs` parties (as `actAs` implies read access)\r\n\r\n`submitters` and `actAs` are the probably the same thing.",
        "createdAt" : "2021-06-29T09:36:03Z",
        "updatedAt" : "2021-06-29T09:36:03Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "33608a70-ed46-4eef-aa74-83d933fbbbdc",
        "parentId" : "7ea90c97-4adc-43af-9865-fe1062ed4556",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Thanks for the additional context, @rautenrieth-da — very much appreciated. We might want to add these bullet points to the [code] documentation as well (I'm not sure if these points are available at a single place).",
        "createdAt" : "2021-06-29T13:55:38Z",
        "updatedAt" : "2021-06-29T13:55:38Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "187e702152b81872c3f5365d8c8679d81593a8c6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +89,93 @@  def submit(\n      submitters: Set[Party],\n      readAs: Set[Party],\n      cmds: Commands,\n      participantId: ParticipantId,"
  },
  {
    "id" : "57b98b63-0bd9-485c-a593-0e41dde2a1ca",
    "prId" : 10013,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e34f8e5-ac34-4feb-9585-db9b7f0ac8de",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "maybe add a comment why this internal. Presumably because typechecking should have failed earlier?",
        "createdAt" : "2021-06-16T10:21:46Z",
        "updatedAt" : "2021-06-16T10:44:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d027d039-5c51-443a-b31d-d5b46f1aa288",
        "parentId" : "7e34f8e5-ac34-4feb-9585-db9b7f0ac8de",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":+1: ",
        "createdAt" : "2021-06-16T15:22:57Z",
        "updatedAt" : "2021-06-16T15:33:21Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b60bee44c63f2a29472b483a7533336f31e9be4",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +252,256 @@          )\n        case speedy.Compiler.CompilationError(error) =>\n          ResultError(Error.Preprocessing.Internal(funcName, s\"CompilationError: $error\"))\n      }\n    start"
  },
  {
    "id" : "3e04365f-6eed-4b86-ba40-d0c0a48efb7c",
    "prId" : 9993,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4029a85-21c6-4720-82d2-70aeab6d9d62",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Maybe we can extend the comment above to explain what's happening when the command fails with an unhanded exception ? ",
        "createdAt" : "2021-06-21T15:24:48Z",
        "updatedAt" : "2021-06-21T15:25:01Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "2980dea0-3831-4e19-9627-c88fb02bf672",
        "parentId" : "a4029a85-21c6-4720-82d2-70aeab6d9d62",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "done",
        "createdAt" : "2021-06-22T08:37:27Z",
        "updatedAt" : "2021-06-22T08:37:27Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "2903c9aeeccebf33ebface10ab722ffc603332c7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +146,150 @@      commandWithCids <- preprocessor.preprocessCommand(command)\n      (speedyCommand, globalCids) = commandWithCids\n      sexpr = compiledPackages.compiler.unsafeCompileForReinterpretation(speedyCommand)\n      // reinterpret is never used for submission, only for validation.\n      result <- interpretExpression("
  },
  {
    "id" : "1a2eeb50-b64d-45bb-878b-2abfb2d594f0",
    "prId" : 9587,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b690d81d-501a-49df-9dd4-dd804638fd5c",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Minor: Canton currently uses GenActionNode.requiredAuthorizers as the submitters which we get as a side effect of building nodes which let us use the logic in `NodeInfo.requiredAuthorizers`. @remyhaemmerle-da, do you see a way that we can avoid duplicating the `NodeInfo.requiredAuthorizers` mapping?:\r\n\r\nsubmitters :=\r\n- create -> signatories\r\n- exercise and fetch -> actingParties\r\n- lookup by key -> maintainers\r\n\r\nOnce we pass `lf.Command`s to `Engine.reinterpret` it would be nice to no longer have to build nodes only to figure out the submitters.",
        "createdAt" : "2021-05-06T08:40:43Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "5fd7e5b6-21dd-424a-aa29-a4c4096dead5",
        "parentId" : "b690d81d-501a-49df-9dd4-dd804638fd5c",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "@oliverse-da I’m not following. `requiredAuthorizers` just picks the value from the node. If you can currently construct the node, why can’t you pass in the value you use when building the node as the `submitters`?\r\n\r\nWe can’t compute the authorizers from the command without LF interpretation and imho we shouldn’t do that here. The submitters should really be stored separately.",
        "createdAt" : "2021-05-06T08:52:59Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "39ba607a-1e53-4bdb-aa2d-d5b8ad19bf7c",
        "parentId" : "b690d81d-501a-49df-9dd4-dd804638fd5c",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "we can continue contructing the node - I was only considering the option of canton turning the canton `ActionDescription` directly into `lf.command.Command` rather than first cooking up a `GenActionNode`.",
        "createdAt" : "2021-05-06T10:22:02Z",
        "updatedAt" : "2021-05-06T13:20:53Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b1e301c5db50426186edd6a36de1a01e740783f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +132,136 @@    */\n  def reinterpret(\n      submitters: Set[Party],\n      command: Command,\n      nodeSeed: Option[crypto.Hash],"
  },
  {
    "id" : "4fb8ff31-e0e9-4dfe-8d30-a33d10295a85",
    "prId" : 9174,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92875973-f854-4492-940d-a10ade59fcf4",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This change is deliberate. Including the transaction seed makes no sense for users.",
        "createdAt" : "2021-03-17T16:31:10Z",
        "updatedAt" : "2021-03-17T16:50:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b32c4e9b05100969ecba720a3aecacd32d96122",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +366,370 @@          val desc = Engine.profileDesc(tx)\n          machine.profile.name = s\"${meta.submissionTime}-$desc\"\n          val profileFile = dir.resolve(s\"${meta.submissionTime}-$desc.json\")\n          machine.profile.writeSpeedscopeJson(profileFile)\n        }"
  },
  {
    "id" : "4344f6db-a6b1-4cba-8708-a4bba7883900",
    "prId" : 8493,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95fbf148-4d59-4297-b315-2912b335d4e8",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "The core implementation is a bit silly. \r\nLet's implement a better solution  if we need more efficiency.",
        "createdAt" : "2021-01-13T13:46:18Z",
        "updatedAt" : "2021-01-13T16:21:57Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "31e5173275c7ae90cb509e95b70dc47277c17d3f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +450,454 @@\n  private[engine] def enrich(typ: Type, value: Value[ContractId]): Result[Value[ContractId]] =\n    preprocessor.translateValue(typ, value).map(_.toValue)\n\n}"
  },
  {
    "id" : "8b620603-e4f7-44c1-b6c5-d60eb45cc4fe",
    "prId" : 8152,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Note that this changes the API for many ledger integrations. \r\n@remyhaemmerle-da: would you say we should keep the submitters in the LF `Commands` data type? They basically represent the parties for the root node authorization, right?\r\n\r\nWe could look at it like this:\r\nlf.Commands: root node authorization (aka `actAs` parties)\r\ndomain.Commands: `actAs ∪ readAs` for contract lookup",
        "createdAt" : "2020-12-07T10:25:35Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "fde2077b-db68-4395-8c03-d1ffa6af9bd4",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "@andreaslochbihler-da @simonmaxen-da  is the change of `com.daml.lf.command.Commands` from Kamil annoying to you ? ",
        "createdAt" : "2020-12-07T10:31:05Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "fc5601f1-2439-4b13-bf83-444213aed646",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "For reference, the proposed change is to remove the submitting parties from `com.daml.lf.command.Commands`, and instead pass them as a separate parameter to `Engine.submit`.",
        "createdAt" : "2020-12-07T11:14:06Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "4b3f4dc3-d675-400c-9110-9c4637be0f4b",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "The motivation for keeping `actAs` and `readAs` sets of parties on the API level was that the `Engine` should not be aware of such concepts. Is such an assumption valid?",
        "createdAt" : "2020-12-07T11:16:52Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      },
      {
        "id" : "5e751a49-cad7-430d-9d30-ca531b7c5f37",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "We don't need `submit` in Canton. Submission is taken care of by the Ledger API server at the moment. So no problem from the Canton side.",
        "createdAt" : "2020-12-07T11:30:00Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "2302d861-54fb-49f4-b546-c80417a9cf37",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I was more worried in the change in`com.daml.lf.command.Commands`. Since @kamil-da already change the signature of `com.daml.lf.command.Commands` in #8081 I do not think it should be a heartbreaking problem. ",
        "createdAt" : "2020-12-07T11:39:31Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "81a9fcb5-9215-48a1-9f5e-f847f9d14f73",
        "parentId" : "f2ebeba8-34fa-4f7b-88b4-76e2925ec4cc",
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "That should be fine as well. (I've already adapted to #8081 in Canton.)",
        "createdAt" : "2020-12-07T16:10:31Z",
        "updatedAt" : "2020-12-10T20:25:07Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7e15b0aae02655614cec3af2274073dc75cd1b7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +88,92 @@    */\n  def submit(\n      submitters: Set[Party],\n      cmds: Commands,\n      participantId: ParticipantId,"
  },
  {
    "id" : "718a920b-c19d-4702-b98d-63b9214cd754",
    "prId" : 8081,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17061288-0ebb-4b70-8e2e-fbc92226f3e5",
        "parentId" : null,
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "@rautenrieth-da You've mentioned that we should use here `List[Party]` but `Set[Party]` seems to be used across the `Engine`, so I used the latter. Is that ok for you?",
        "createdAt" : "2020-11-26T16:24:15Z",
        "updatedAt" : "2020-11-30T11:22:21Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      },
      {
        "id" : "3b1f6a32-6e36-4521-96fd-cd18a907ff62",
        "parentId" : "17061288-0ebb-4b70-8e2e-fbc92226f3e5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Yes, IMO the interface should be consistent with the rest of `Engine`.",
        "createdAt" : "2020-11-27T08:49:26Z",
        "updatedAt" : "2020-11-30T11:22:21Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c37ab1342d58c7d2733307fa12fdb3781194db1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +162,166 @@\n  def replay(\n      submitters: Set[Party],\n      tx: SubmittedTransaction,\n      ledgerEffectiveTime: Time.Timestamp,"
  },
  {
    "id" : "16e5eb6e-6950-41b5-9803-694f02076b28",
    "prId" : 6515,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83301e44-cbbb-4b58-b226-1b6dbe0b38dc",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Just code tidying here.",
        "createdAt" : "2020-06-29T08:35:58Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +71,75 @@    * </li>\n    * </ul>\n    *\n    *\n    * [[transactionSeed]] is the master hash used to derive node and contractId discriminator."
  },
  {
    "id" : "bb737a35-a79e-47ff-9020-51536241d85b",
    "prId" : 6515,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "570127e9-1c50-4d4a-84f7-1a05e8774761",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "This must be non-final in order to mock.",
        "createdAt" : "2020-06-29T12:52:02Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@  * This class is thread safe as long `nextRandomInt` is.\n  */\nclass Engine(config: Engine.Config) {\n  private[this] val compiledPackages = ConcurrentCompiledPackages()\n  private[this] val preprocessor = new preprocessing.Preprocessor(compiledPackages)"
  },
  {
    "id" : "1be55f18-9475-4164-856d-369ec5801da7",
    "prId" : 6464,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2864004-2862-46c5-862f-870d15102290",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Excellent diff minimization. 👍 ",
        "createdAt" : "2020-07-07T12:13:43Z",
        "updatedAt" : "2020-07-07T20:12:09Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e4534ddfd19654c1da5ce2930793a4eaa7a12cf",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +225,229 @@    //reinterpret\n    for {\n      result <- replay(tx, ledgerEffectiveTime, participantId, submissionTime, submissionSeed)\n      (rtx, _) = result\n      validationResult <- if (tx.transaction isReplayedBy rtx.transaction) {"
  },
  {
    "id" : "5626127d-17a3-4936-b9da-b912ce701492",
    "prId" : 6151,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2f114a4-1f81-432f-99e7-47d250737b9d",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "It does not work for `LF-REPL` as the `submissionTime` is always EPOCH and the sequence of `hashes` may repeat (for the same program /scenario it is guarantee it will be the same).\r\nThe fix time and fix sequence of seed is done to have reproducible runs. \r\nIn case of sandbox it should be fine.",
        "createdAt" : "2020-05-29T11:32:17Z",
        "updatedAt" : "2020-05-29T11:34:26Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "fc3f9afe-a0c1-4405-9913-e0cdebe43c27",
        "parentId" : "d2f114a4-1f81-432f-99e7-47d250737b9d",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "`LF-REPL` does not use the engine but rather the speedy machine directly. for `daml-lf-repl profile` you need to specify an output file directly hence.",
        "createdAt" : "2020-05-29T13:02:12Z",
        "updatedAt" : "2020-05-29T13:02:13Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa42faf4fffb4e6c0891d323b87bdf1cb115576f",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +425,429 @@        s\"compound:${tx.roots.length}\"\n      }\n    s\"${meta.submissionTime}-${desc}-${hash}.json\"\n  }\n}"
  },
  {
    "id" : "043a9813-d9b2-4bd5-b496-39750d5c2fb2",
    "prId" : 6143,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "854274fa-b8c3-42d8-8b28-c20deb727438",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "It's good to document that `validate` only works for submitted transaction, not for committed ones. 👏 ",
        "createdAt" : "2020-06-08T13:56:24Z",
        "updatedAt" : "2020-06-08T14:24:10Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "89af6d420800adee764159fb1c3073fae07859e9",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +167,171 @@    */\n  def validate(\n      tx: Tx.SubmittedTransaction,\n      ledgerEffectiveTime: Time.Timestamp,\n      participantId: Ref.ParticipantId,"
  },
  {
    "id" : "3b8d3e48-45ab-427b-b63a-95b86069a33b",
    "prId" : 5570,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f822a05-5abb-46df-b984-9b6f23ef0537",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "Please update the comment according to the changed parameters:\r\n- there is no transactionSeed any more\r\n- the seed argument and the submission time should be added to `reinterpret(cmds.submitter, ...)` and `reinterpret(n.requiredAuthorizers, ...)`\r\n- renaming of relative contract IDs is now suffixing of contract IDs\r\n\r\nI also recommend to extend the comment with a warning that it is not sensible to run `reinterpret` for a several nodes unless they are not exactly the roots of the original transaction.",
        "createdAt" : "2020-04-16T05:42:37Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "61a90c2c-c6a8-4295-93be-558bb3da1ad1",
        "parentId" : "8f822a05-5abb-46df-b984-9b6f23ef0537",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I do not get the last sentence. Could you reformulate ? ",
        "createdAt" : "2020-04-16T12:00:04Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +133,137 @@    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */\n  def reinterpret(\n      submitters: Set[Party],\n      node: GenNode.WithTxValue[Value.NodeId, Value.ContractId],"
  },
  {
    "id" : "286624c2-68b8-4082-b5ae-0917603866ba",
    "prId" : 5570,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffd10f0a-d1e5-4ec8-856c-748c15c89a65",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "Can you update the comment? We no longer have [[transactionSeed]] here anymore.",
        "createdAt" : "2020-04-16T05:46:32Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "712b34cf-d326-4d29-9b74-51c02fca9c62",
        "parentId" : "ffd10f0a-d1e5-4ec8-856c-748c15c89a65",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "fixed",
        "createdAt" : "2020-04-16T12:03:46Z",
        "updatedAt" : "2020-04-16T15:56:18Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +244,248 @@      commands: ImmArray[SpeedyCommand],\n      ledgerTime: Time.Timestamp,\n      submissionTime: Time.Timestamp,\n      seeding: speedy.InitialSeeding,\n  ): Result[(Transaction, Boolean, ImmArray[(Tx.NodeId, crypto.Hash)])] = {"
  },
  {
    "id" : "9a053855-503a-405f-8bd4-0c14c58d1e12",
    "prId" : 5570,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27a6dde8-5092-467d-9289-01c81c6953b4",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "```suggestion\r\n    * If undefined the contract IDs are derived using V0 scheme.\r\n```",
        "createdAt" : "2020-04-17T09:03:04Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +130,134 @@    *\n    * [[nodeSeed]] is the seed of the Create and Exercise node as generated during submission.\n    * If undefined the contract IDs are derive using V0 scheme.\n    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */"
  },
  {
    "id" : "84910062-2b36-4001-ad09-88bd66868e01",
    "prId" : 5570,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d201052-a06f-4963-80e8-f665283e6f00",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "It may be worth referencing what 'V0 scheme' means.",
        "createdAt" : "2020-04-17T09:09:12Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +130,134 @@    *\n    * [[nodeSeed]] is the seed of the Create and Exercise node as generated during submission.\n    * If undefined the contract IDs are derive using V0 scheme.\n    * The value of [[nodeSeed]] does not matter for other kind of nodes.\n    */"
  },
  {
    "id" : "64585f3b-7261-454b-992f-d94f4497151e",
    "prId" : 5570,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95bf4ac7-771e-4960-9637-dd1d32430d05",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Did you mean `seeding used to derive node and contractId discriminator`?",
        "createdAt" : "2020-04-17T09:10:21Z",
        "updatedAt" : "2020-04-17T09:10:47Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "0131af72a15602be1889879e8178298a5cea4a63",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +235,239 @@    * (a subtransaction can be authorized by multiple parties).\n    *\n    * [[seeding]] is seeding used to derive node seed and contractId discriminator.\n    */\n  private[engine] def interpretCommands("
  },
  {
    "id" : "b0a6676a-fd82-49a6-a68f-6238ab6c82eb",
    "prId" : 4533,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b20a54a5-9dc5-4a47-adb8-dabd06994f50",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Looks like the submission seed is only used once to derive the transaction seed. Instead of passing `participantId` and `submissionSeed`, can we instead pass the `transactionSeed` directly?",
        "createdAt" : "2020-02-17T09:37:19Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "ad8d56aa-14a3-42bf-9d34-2eeca8ded9f7",
        "parentId" : "b20a54a5-9dc5-4a47-adb8-dabd06994f50",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "The `submissionSeed` is used twice:\r\n- It is used to compute the `transactionSeed` \r\n- It is stored in the transaction itself, so the receiver of the transaction can verify the `transactionSeed` was derived properly.",
        "createdAt" : "2020-02-17T09:46:08Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "ca8c47bf-c121-4c75-a7e9-8fe491127729",
        "parentId" : "b20a54a5-9dc5-4a47-adb8-dabd06994f50",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Hm, where is it actually stored in the transaction? Sorry if I'm missing something obvious.",
        "createdAt" : "2020-02-17T12:16:00Z",
        "updatedAt" : "2020-02-17T12:34:30Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "ec631c86-b6fe-4a4a-8e7a-fec8130c079c",
        "parentId" : "b20a54a5-9dc5-4a47-adb8-dabd06994f50",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "See @remyhaemmerle-da's [comment](https://github.com/digital-asset/daml/pull/4533#discussion_r380156077).",
        "createdAt" : "2020-02-17T12:36:42Z",
        "updatedAt" : "2020-02-17T12:36:42Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "69e42150daf521f93631ef81bea5b8b2314d7beb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +79,83 @@      cmds: Commands,\n      participantId: ParticipantId,\n      submissionSeed: Option[crypto.Hash],\n  ): Result[Transaction.Transaction] = {\n    _commandTranslation"
  },
  {
    "id" : "1e31fbaa-392f-4cbc-8970-6b7cfea426cd",
    "prId" : 4077,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84b2ef26-d0fb-40d0-88d1-a2381fe2e00f",
        "parentId" : null,
        "authorId" : null,
        "body" : "a more descriptive name would be good (nodeIdSeed? I don't know...) and we should document how it is used.",
        "createdAt" : "2020-01-21T15:23:55Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f3a1a246-fe34-4c9c-90c6-090b14f9a5e8",
        "parentId" : "84b2ef26-d0fb-40d0-88d1-a2381fe2e00f",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "add description in the comment above\r\n",
        "createdAt" : "2020-01-22T07:50:07Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +78,82 @@  def submit(\n      cmds: Commands,\n      transactionSeed: Option[crypto.Hash] = None\n  ): Result[Transaction.Transaction] = {\n    _commandTranslation"
  },
  {
    "id" : "ae9fbe9f-112c-4d4d-8fec-bf32757269ee",
    "prId" : 4077,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6afcffa-6af3-42ee-addc-0062fb5de0c7",
        "parentId" : null,
        "authorId" : null,
        "body" : "```suggestion\r\n    * If left undefined, no discriminator will be generated.\r\n```",
        "createdAt" : "2020-01-22T10:23:54Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +132,136 @@    *\n    * [[transactionSeed]] is the master hash te be used to derive node and contractId discriminator.\n    * If let undefined, no discriminator will be generated.\n    */\n  def reinterpret("
  },
  {
    "id" : "175e4bf2-0539-490d-901f-80ac57c2ef68",
    "prId" : 4077,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6543034b-c7fc-4178-a379-636117251a65",
        "parentId" : null,
        "authorId" : null,
        "body" : "```suggestion\r\n    * If left undefined, no discriminator will be generated.\r\n```",
        "createdAt" : "2020-01-22T10:24:08Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +320,324 @@    *\n    * [[transactionSeed]] is the master hash used to derive node and contractId discriminator.\n    * If let undefined, no discriminator will be generated.\n    */\n  private[engine] def interpretCommands("
  }
]