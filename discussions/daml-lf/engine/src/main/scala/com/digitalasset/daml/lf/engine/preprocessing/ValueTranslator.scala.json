[
  {
    "id" : "2c55e1fe-f943-44c2-be44-ac83e19cc089",
    "prId" : 8465,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b68cf1c-e0ce-4379-b2f6-d322cce5a090",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "is `toSeq.view` actually more efficient than just `map`?",
        "createdAt" : "2021-01-12T08:49:03Z",
        "updatedAt" : "2021-01-12T13:24:59Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9790ff68-be73-467a-9b9c-60621276e577",
        "parentId" : "7b68cf1c-e0ce-4379-b2f6-d322cce5a090",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "In this case, I think the following points are relevant:\r\n\r\n-  First I need the result to be `Iterable` (to be able to use `.toMap`). \r\n- Since `dataTypParams` is an `ImmArray` I need a `.toSeq` somewhere. \r\n- `dataTypParams.toSeq.map(_._1).zip(tyArgs)` will allocate 2 intermediate `ImmArraySeq`\r\n- In general `Array` builder allocates several intermediate arrays (as they do not know the final size of the array they are building).\r\n\r\n ",
        "createdAt" : "2021-01-12T09:09:20Z",
        "updatedAt" : "2021-01-12T13:24:59Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d57b8feee6fabeb1f1d5b188e93a6b8d34c63b18",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +205,209 @@                  case Some(rank) =>\n                    val (_, argTyp) = variantDef.variants(rank)\n                    val replacedTyp =\n                      replaceParameters(dataTypParams.toSeq.view.map(_._1).zip(tyArgs), argTyp)\n                    SValue.SVariant("
  }
]