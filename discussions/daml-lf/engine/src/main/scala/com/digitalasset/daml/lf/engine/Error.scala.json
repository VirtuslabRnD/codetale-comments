[
  {
    "id" : "cc3de4cf-affc-429d-b3ad-8615e39ee41e",
    "prId" : 10091,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a03f7994-625c-4a50-be88-46904970c594",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Added this to https://github.com/digital-asset/daml/issues/9974 's description, feel free to delete [the comment](https://github.com/digital-asset/daml/issues/9974#issuecomment-867649444) if unnecessary. ðŸ™‚",
        "createdAt" : "2021-06-24T13:47:39Z",
        "updatedAt" : "2021-06-24T13:52:03Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "58c2d764e4b0541c1e64b6ba15c6839cc4b70de6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +147,151 @@      // TODO https://github.com/digital-asset/daml/issues/9974\n      //  For now we try to preserve the exact same message (for the ledger API)\n      //  Review once all the errors are properly structured\n      override def msg: String = error match {\n        case interpretation.Error.ContractNotFound(cid) =>"
  },
  {
    "id" : "85be660a-3f36-49fb-ae20-4d86d9ef1f4a",
    "prId" : 10091,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff8b9faa-b0c8-4eb3-a4a7-53e9dc9d03dc",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Added this to https://github.com/digital-asset/daml/issues/9974 's description, feel free to delete [the comment](https://github.com/digital-asset/daml/issues/9974#issuecomment-867649444) if unnecessary. ðŸ™‚ ",
        "createdAt" : "2021-06-24T13:47:49Z",
        "updatedAt" : "2021-06-24T13:52:03Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "58c2d764e4b0541c1e64b6ba15c6839cc4b70de6",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +151,155 @@        case interpretation.Error.ContractNotFound(cid) =>\n          // TODO https://github.com/digital-asset/daml/issues/9974\n          //   we should probably use ${cid.coid} instead of $cid\n          s\"Contract could not be found with id $cid\"\n        case interpretation.Error.ContractKeyNotFound(key) =>"
  },
  {
    "id" : "003d94b0-aa78-4e9a-a5b0-049a0a7e18fb",
    "prId" : 10013,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbc57d48-cf9f-4e67-b446-38c7df50f46a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "do we ever throw this?",
        "createdAt" : "2021-06-16T10:25:19Z",
        "updatedAt" : "2021-06-16T10:44:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a30cc9e2-f54e-4a83-8ddb-5add5bcf6057",
        "parentId" : "bbc57d48-cf9f-4e67-b446-38c7df50f46a",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "We throw `Preprocessing.ValueNesting`,  `Error.Preprocessing.TypeMismatch`, `Error.Preprocessing.RootNode`",
        "createdAt" : "2021-06-16T15:27:19Z",
        "updatedAt" : "2021-06-16T15:33:21Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b60bee44c63f2a29472b483a7533336f31e9be4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +71,75 @@\n    sealed abstract class Error\n        extends RuntimeException\n        with scala.util.control.NoStackTrace\n        with Product {"
  },
  {
    "id" : "e8436251-786a-4322-8919-628f4b7f61d5",
    "prId" : 10013,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fb4551b-9744-42e3-b521-75fc4efe38fc",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "not clear what a `RootNode` error is.",
        "createdAt" : "2021-06-16T10:27:08Z",
        "updatedAt" : "2021-06-16T10:44:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2c8c2108-b732-4a1d-bd77-b9e9cdf72311",
        "parentId" : "3fb4551b-9744-42e3-b521-75fc4efe38fc",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Answering my own question: This means that we had an invalid root node in a `replay`, i.e., a root node that can not originate from a submission.",
        "createdAt" : "2021-06-16T10:33:45Z",
        "updatedAt" : "2021-06-16T10:44:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b60bee44c63f2a29472b483a7533336f31e9be4",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +111,115 @@    }\n\n    final case class RootNode(nodeId: NodeId, override val msg: String) extends Error\n\n    // TODO https://github.com/digital-asset/daml/issues/9974"
  },
  {
    "id" : "c90e228a-99a5-4fc7-8c78-9ed7118059f1",
    "prId" : 10013,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b87e8395-ff58-4dca-933e-16e8ce765a7d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "this _only_ covers preprocessing right? Not the contracd id freshness during interpretation?",
        "createdAt" : "2021-06-16T10:29:03Z",
        "updatedAt" : "2021-06-16T10:44:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e273a28c-ce0b-436c-b01c-013ebba3c005",
        "parentId" : "b87e8395-ff58-4dca-933e-16e8ce765a7d",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Yes. ",
        "createdAt" : "2021-06-16T15:29:08Z",
        "updatedAt" : "2021-06-16T15:33:21Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b60bee44c63f2a29472b483a7533336f31e9be4",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +115,119 @@    // TODO https://github.com/digital-asset/daml/issues/9974\n    //  get ride of ContractIdFreshness\n    final case class ContractIdFreshness(\n        localContractIds: Set[Value.ContractId],\n        globalContractIds: Set[Value.ContractId],"
  }
]