[
  {
    "id" : "48a9ce3c-d661-4af0-ae89-f77a31dc97ae",
    "prId" : 9993,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9ea5197-7de6-471d-a851-9568591022e7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Can we get some tests for the edge cases here, I’m particularly interested in uncatchable errors due to\r\n1. version checks\r\n2. because they are uncatchable in general, e.g. failed DAML-LF ensure, error call, ….",
        "createdAt" : "2021-06-21T15:32:03Z",
        "updatedAt" : "2021-06-21T15:32:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5cac3c8e-7982-4272-b53c-62e0c86caa19",
        "parentId" : "a9ea5197-7de6-471d-a851-9568591022e7",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "failure ensure -- done\r\nversion check -- still to do\r\nerror call -- do we have an _uncatchable_ error primitive?",
        "createdAt" : "2021-06-22T08:38:37Z",
        "updatedAt" : "2021-06-22T08:38:38Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "03d907cb-3dac-4f3b-a083-f7c29ec5fa9b",
        "parentId" : "a9ea5197-7de6-471d-a851-9568591022e7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Yes, Daml-LF’s error primitive is uncatchable. Daml’s `error` function does not use that primitive so you have to hand-write that to test it.\r\nI think testing one uncatchable error is sufficient so either failed ensure (see my comment below, I think your test isn’t quite testing the right case), error call, ordering failure, ….",
        "createdAt" : "2021-06-22T08:48:06Z",
        "updatedAt" : "2021-06-22T08:53:35Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a0389b98-0514-4ad8-90df-e3b8d2f934bd",
        "parentId" : "a9ea5197-7de6-471d-a851-9568591022e7",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Removed the previous useless ensure test.\r\nAnd added a test which provokes an uncatchable error by creating a broken `Ord` instance (as we discussed),",
        "createdAt" : "2021-06-22T12:49:05Z",
        "updatedAt" : "2021-06-22T12:49:06Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "2903c9aeeccebf33ebface10ab722ffc603332c7",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@import scala.language.implicitConversions\n\nclass ReinterpretTest\n    extends AnyWordSpec\n    with Matchers"
  }
]