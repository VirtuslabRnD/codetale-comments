[
  {
    "id" : "ed7d92d6-3701-46f7-8b63-2b98e488710d",
    "prId" : 10108,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e926e5f-2881-49ad-8547-4f2f2af67e6b",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":+1: ",
        "createdAt" : "2021-06-24T13:13:20Z",
        "updatedAt" : "2021-06-24T13:13:21Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "9f1d4c5f-0517-4cc2-8862-4aed9c1fa2c2",
        "parentId" : "1e926e5f-2881-49ad-8547-4f2f2af67e6b",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Maybe we could have one more involved test that actually uses rollback node. ",
        "createdAt" : "2021-06-24T13:14:11Z",
        "updatedAt" : "2021-06-24T13:14:11Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "59e60b6c-b089-4623-965a-c31517e040e2",
        "parentId" : "1e926e5f-2881-49ad-8547-4f2f2af67e6b",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "A test for `submit` also would be nice. This really applies to everything as soon as a `try` is involved.",
        "createdAt" : "2021-06-24T13:18:23Z",
        "updatedAt" : "2021-06-24T13:18:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ff732e16350aedd066771ca4a979b34e153aaa7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +508,512 @@        )\n      isReplayedBy(tx, rtx) shouldBe Right(())\n      txMeta.nodeSeeds shouldBe newMeta.nodeSeeds\n    }\n"
  },
  {
    "id" : "648ed113-506f-4d50-ac54-3adda165a93b",
    "prId" : 9192,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f2ce550-5a1e-4b53-9260-d82f0ec44519",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":bow: ",
        "createdAt" : "2021-03-22T12:27:22Z",
        "updatedAt" : "2021-03-22T12:27:23Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "220e52fb3b287fd25f626355bc15755008ca9467",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1807,1811 @@  }\n\n  \"wrongly typed contract id\" should {\n    val withKeyId = Identifier(basicTestsPkgId, \"BasicTests:WithKey\")\n    val simpleId = Identifier(basicTestsPkgId, \"BasicTests:Simple\")"
  },
  {
    "id" : "a1a6a33d-1015-4c4d-8a08-befa2e997b1b",
    "prId" : 7826,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd8a86f-9553-4daf-a5c0-0fb568a2ec63",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Did you know that I'm not a big fan of the infix syntax? This makes me so happy. ðŸ˜º ",
        "createdAt" : "2020-11-03T09:30:51Z",
        "updatedAt" : "2020-11-04T18:17:53Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "9f0e6c30-d646-402d-bab7-f53d657764c1",
        "parentId" : "ecd8a86f-9553-4daf-a5c0-0fb568a2ec63",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I don't have a specific opinion about this, but I'm actually curious about why changing. Is it just a preference or is there some other reasoning behind it?",
        "createdAt" : "2020-11-03T14:30:17Z",
        "updatedAt" : "2020-11-04T18:17:53Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "9b402f20-bbad-4faa-8eae-ee7f5b2deeb2",
        "parentId" : "ecd8a86f-9553-4daf-a5c0-0fb568a2ec63",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "It is more a question of preference, but here are some reasons of the change:\r\n- It is done in the same way as `Node.isReplayedBy`, function that `Transaction.isReplayedBy` subsumes now.  \r\n- I can give a name to the left hand side transaction inside the body of `isReplayedBy`. \r\n- The code of the comparison is not so tide to the transaction itself, we could imagine implementing comparison more or less lenient. In fact, I am considering moving the code to the Engine package ",
        "createdAt" : "2020-11-03T15:31:33Z",
        "updatedAt" : "2020-11-04T18:17:53Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e75da66b69a5711804c967f6a973d4b35cfe2156",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +469,473 @@          lookupPackage\n        )\n      Tx.isReplayedBy(tx.transaction, rtx.transaction) shouldBe Right(())\n    }\n"
  },
  {
    "id" : "d182d66f-11c9-4311-b09a-e56492ff430a",
    "prId" : 7649,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11a2059e-f919-43d7-8e57-70bd0a19afc8",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "```suggestion\r\n            \"Update failed due to a contract key with an empty set of maintainers\")\r\n```",
        "createdAt" : "2020-10-12T14:46:27Z",
        "updatedAt" : "2020-10-14T11:03:16Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f819d6e9c5437d552d3a5102358593cc79c09b5",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +711,715 @@        case Left(err) =>\n          err.msg should include(\n            \"Update failed due to a contract key with an empty sey of maintainers\")\n      }\n    }"
  },
  {
    "id" : "5898be2b-d5ee-4b2e-9b4e-a710f6c75b6c",
    "prId" : 7649,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8766eed-3d07-4275-bffa-f45ba45de922",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "```suggestion\r\n            \"Update failed due to a contract key with an empty set of maintainers\")\r\n```",
        "createdAt" : "2020-10-12T14:48:04Z",
        "updatedAt" : "2020-10-14T11:03:16Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f819d6e9c5437d552d3a5102358593cc79c09b5",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +747,751 @@        case Left(err) =>\n          err.msg should include(\n            \"Update failed due to a contract key with an empty sey of maintainers\")\n      }\n    }"
  },
  {
    "id" : "47265d59-a42f-4973-a123-78f3a930f52a",
    "prId" : 7400,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ed386e0-641a-4c21-a0d4-28665fb65ee2",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Was this a mistake in the test before?",
        "createdAt" : "2020-09-16T08:59:28Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "ed817428-b652-44be-866a-a85392fe4c8f",
        "parentId" : "3ed386e0-641a-4c21-a0d4-28665fb65ee2",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "yes",
        "createdAt" : "2020-09-16T14:39:56Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +1513,1517 @@        Some(forkableTemplateId),\n        ImmArray(\n          (Some[Name](\"party\"), ValueParty(party)),\n          (Some[Name](\"parent\"), ValueOptional(None)))\n      )"
  },
  {
    "id" : "49b755f0-c0f2-4b8d-b18e-59814afb324f",
    "prId" : 5966,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f431481-de2f-40b6-8c29-46d73e2dea68",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "...transaction structure",
        "createdAt" : "2020-06-11T15:51:04Z",
        "updatedAt" : "2020-06-11T15:51:04Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c31fcd6f1afce560a4ef4dba5af7a6f877ec71a",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +1373,1377 @@    val now = Time.Timestamp.now()\n    val submissionSeed = crypto.Hash.hashPrivateKey(\n      \"fetching contracts that have keys correctly fills in the transaction structur\")\n    val txSeed = crypto.Hash.deriveTransactionSeed(submissionSeed, participant, now)\n"
  },
  {
    "id" : "fca69341-530e-449a-be8e-3d9b58b25dce",
    "prId" : 5486,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5541c3c4-1769-450e-a278-fe784deeeb7c",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "This test fails without the fix to `PartialTransaction`",
        "createdAt" : "2020-04-08T13:20:41Z",
        "updatedAt" : "2020-04-08T13:24:11Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "50e1d58f9542c576e6eab5cf0f45f84b6f1fa196",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +1473,1477 @@\n    \"be partially reinterpretable\" in {\n      val Right((tx, metaData)) = run(3)\n      val ImmArray(_, exeNode1) = tx.roots\n      val NodeExercises(Some(exeNode1Seed), _, _, _, _, _, _, _, _, _, _, children, _, _) ="
  },
  {
    "id" : "286a4a53-01d9-44ec-b8da-810fdd6aebb1",
    "prId" : 5186,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5186",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1af6dd2d-b4b9-4e14-a0ee-2d09c87f26d4",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n\r\n  def lookupContractWithKey(\r\n```",
        "createdAt" : "2020-03-26T09:22:42Z",
        "updatedAt" : "2020-03-26T11:00:44Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "66d880bfd3506c1d95fc2e0178dcfd79755b55b9",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +107,111 @@    )\n\n  def lookupContractWithKey(\n      @deprecated(\"shut up unused arguments warning\", \"blah\") id: AbsoluteContractId)\n    : Option[ContractInst[Tx.Value[AbsoluteContractId]]] = {"
  },
  {
    "id" : "0e685681-7aa4-4362-b71b-b7ead08ce777",
    "prId" : 10394,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10394#pullrequestreview-715651714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d71a8af-04d1-4525-a73d-dd5a7c3f5561",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Was this just broken before? Iâ€™m a bit confused why we now need to add a global key that we did not need before.",
        "createdAt" : "2021-07-27T08:01:41Z",
        "updatedAt" : "2021-07-27T08:01:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "15bfb34c-801c-4d8b-868c-5bf5a502443c",
        "parentId" : "6d71a8af-04d1-4525-a73d-dd5a7c3f5561",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Before `1.14`, `by-key` node where replayed `by-id`, so we did not need to mock the `ResultNeedKey` lookup during reinterpretation. \r\n\r\nNow we have the `by-key` flag we replay them `by-key`, so we need to mock properly the  `ResultNeedKey` lookup. ",
        "createdAt" : "2021-07-27T08:45:30Z",
        "updatedAt" : "2021-07-27T08:45:30Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "d3063f80-f17b-4d88-9036-b2975a5da744",
        "parentId" : "6d71a8af-04d1-4525-a73d-dd5a7c3f5561",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "oh I see, so the state was broken before but because we replayed by-id speedy did not emit a SResultNeedKey. Thanks for the explanation",
        "createdAt" : "2021-07-27T08:46:28Z",
        "updatedAt" : "2021-07-27T08:46:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d17b2bf9cc8987154d6985b225c2718c6772a447",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +133,137 @@    )\n\n  val defaultKey = Map(\n    GlobalKey.assertBuild(\n      TypeConName(basicTestsPkgId, withKeyTemplate),"
  },
  {
    "id" : "85704d56-1c2e-44ac-8c1b-b7d195c0ca6a",
    "prId" : 10394,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10394#pullrequestreview-715651714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "958ace31-5434-497d-8b17-f9662be35bb5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Was this just broken before? Iâ€™m a bit confused why we now need to add a global key that we did not need before.",
        "createdAt" : "2021-07-27T08:01:41Z",
        "updatedAt" : "2021-07-27T08:01:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "33297754-ceb6-4825-a6d0-9bd9efbc34bb",
        "parentId" : "958ace31-5434-497d-8b17-f9662be35bb5",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Before `1.14`, `by-key` node where replayed `by-id`, so we did not need to mock the `ResultNeedKey` lookup during reinterpretation. \r\n\r\nNow we have the `by-key` flag we replay them `by-key`, so we need to mock properly the  `ResultNeedKey` lookup. ",
        "createdAt" : "2021-07-27T08:45:30Z",
        "updatedAt" : "2021-07-27T08:45:30Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "890e06f0-0228-4f80-891a-38e6dad78b9e",
        "parentId" : "958ace31-5434-497d-8b17-f9662be35bb5",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "oh I see, so the state was broken before but because we replayed by-id speedy did not emit a SResultNeedKey. Thanks for the explanation",
        "createdAt" : "2021-07-27T08:46:28Z",
        "updatedAt" : "2021-07-27T08:46:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d17b2bf9cc8987154d6985b225c2718c6772a447",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +133,137 @@    )\n\n  val defaultKey = Map(\n    GlobalKey.assertBuild(\n      TypeConName(basicTestsPkgId, withKeyTemplate),"
  }
]