[
  {
    "id" : "57403b9b-c504-4380-8ee7-7bbe01fc0afb",
    "prId" : 9528,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd15b626-6c7b-422b-b0b1-416fb3a5c921",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "While `Option` results in exhaustive warnings `Some` does not. However, the autogenerated `unapply` on a case class returns `Option`. We could either use the underlying `unapply` and just `.get` it or inline it here. Given that these don’t change too often, I’ve chosen the latter but I don’t feel strongly about this.",
        "createdAt" : "2021-04-29T07:28:56Z",
        "updatedAt" : "2021-04-29T09:04:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "94275008086af6fa6c1f971d095f7d2c1a71e9ac",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +579,583 @@      new GenDValue(typ, noPartyLiterals, body, isTest)\n\n    def unapply(arg: GenDValue[E]): Some[(Type, Boolean, E, Boolean)] =\n      Some((arg.typ, arg.noPartyLiterals, arg.body, arg.isTest))\n  }"
  },
  {
    "id" : "3d62b008-cfc0-432e-8991-02f5d00a67dd",
    "prId" : 7577,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68ebc074-8177-4000-a32b-2f459f883d8d",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Maybe it's a good idea to leave a comment explaining the difference between _signature_ and _interface_ somewhere in this file.",
        "createdAt" : "2020-10-09T11:51:06Z",
        "updatedAt" : "2020-10-12T12:30:48Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "7fc2c901-e158-4ed9-ac4e-4d87f504f47c",
        "parentId" : "68ebc074-8177-4000-a32b-2f459f883d8d",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Good point. I add a comment.",
        "createdAt" : "2020-10-12T12:24:11Z",
        "updatedAt" : "2020-10-12T12:30:48Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "69a9d35e-6588-4908-8dbc-d9edf6b41bf0",
        "parentId" : "68ebc074-8177-4000-a32b-2f459f883d8d",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Thanks a lot.",
        "createdAt" : "2020-10-13T10:33:34Z",
        "updatedAt" : "2020-10-13T10:33:34Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d8aeac74d12178596915f46b0e6afbe8a23966",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +487,491 @@  //\n  // Definitions\n  //\n\n  sealed abstract class GenDefinition[+E] extends Product with Serializable"
  }
]