[
  {
    "id" : "dc3fb23f-a87d-4aa7-8927-10b136f2aeae",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c2dee40-bc93-438a-940a-a3c3be431b62",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I suppose the reason why we can’t change this to a single `oneof interned_name` type and then change all field types to that is backwards compat?",
        "createdAt" : "2019-10-02T14:39:36Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4f471ceb-411d-4639-912e-567ee794d27d",
        "parentId" : "7c2dee40-bc93-438a-940a-a3c3be431b62",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Correct.",
        "createdAt" : "2019-10-02T14:57:50Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +888,892 @@    // name of the variant constructor\n    // *Must be a valid identifier*\n    oneof variant {\n      string variant_name = 2;\n      int32 variant_interned_id = 4; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "406a2171-c2fc-4f75-a19c-b8a2249093c1",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e4b6a24-701e-409e-bac9-5f4a4211b4e3",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "We should require that at most one of the two fields is non empty.\r\nPlease add a comment and add the check when unserializing. ",
        "createdAt" : "2019-10-02T18:57:57Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 356,
    "diffHunk" : "@@ -1,1 +1217,1221 @@\n  // *Available in versions >= 1.6*\n  message EnumConstructors {\n    repeated string constructors = 1;\n    repeated int32 constructors_interned_ids = 2; // *Available in versions >= 1.dev*"
  },
  {
    "id" : "f9cf2cf6-6eab-4597-81e8-527946b2e66c",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96af8866-b673-4347-9265-64f5f5985630",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n   repeated string segments = 1; // Deprecated in version >= 1.dev\r\n```\r\nI would like to push for that.\r\nI volunteer to modify the scala encoder in an upcomming PR.  ",
        "createdAt" : "2019-10-02T19:01:15Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "758d9208-2a85-4a00-a1ac-be416fe8bb2d",
        "parentId" : "96af8866-b673-4347-9265-64f5f5985630",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "postponed to upcoming PR. ",
        "createdAt" : "2019-10-03T15:23:42Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +71,75 @@message DottedName {\n  // *Must be a non-empty list of a valid identifiers unless `segments_interned_id` is set.*\n  repeated string segments = 1;\n\n  // *Must be set if and only if `segments` is an empty list.*"
  },
  {
    "id" : "f819a8a5-07a5-4d0d-b317-7e4905907d42",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52fcdddf-eaaf-4781-ad1a-bdbb8a6e28e8",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n   repeated string name = 2;  // Deprecated in version 1.dev\r\n```\r\nsame as above.",
        "createdAt" : "2019-10-02T19:06:36Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "f8a6785e-fe67-440a-8df1-23669d4b069a",
        "parentId" : "52fcdddf-eaaf-4781-ad1a-bdbb8a6e28e8",
        "authorId" : null,
        "body" : "There is the option of supporting both schemes. Not sure it'd be sensible, but I'd like to at least discuss that. Right now the scala encoder doesn't intern for example.",
        "createdAt" : "2019-10-03T16:56:25Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +106,110 @@\n  // *Must be a non-empty list of a valid identifiers unless `interned_id` is set.*\n  repeated string name = 2;\n\n  // *Must be set if and only if `segments` is an empty list.*"
  },
  {
    "id" : "40a4a9ea-da06-4f39-8887-104e86cd95b1",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a2be198-bad4-4ff3-b228-a0f956b0744c",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n    string name = 1;  // Deprecated in v >= 1.dev\r\n```\r\nsame as above, and so on similar string fields .",
        "createdAt" : "2019-10-02T19:08:48Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +118,122 @@  // *Must be a valid identifier*\n  oneof field {\n    string name = 1;\n    int32 interned_id = 3; // *Available in versions >= 1.dev*\n  }"
  },
  {
    "id" : "50c55f10-c1dd-44a8-8c39-f5b6e1bfd4ed",
    "prId" : 2930,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "913760ad-b0db-4efd-856c-b47f9f483222",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Scala people would prefer not using `Any`. (cc @gerolf-da)",
        "createdAt" : "2019-09-17T11:30:22Z",
        "updatedAt" : "2019-09-17T12:00:28Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "3f03a669-53c6-4b62-a24a-7cfec5d983ed",
        "parentId" : "913760ad-b0db-4efd-856c-b47f9f483222",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "So what are you proposing instead? Calling this `Dynamic` while keeping `AnyTemplate` seems really confusing and I’m not entirely sold that `DynamicTemplate` is a good name.",
        "createdAt" : "2019-09-17T11:44:28Z",
        "updatedAt" : "2019-09-17T12:00:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "59d3c207-ee49-4b81-9d92-323fcb61a362",
        "parentId" : "913760ad-b0db-4efd-856c-b47f9f483222",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’ll go for `Dynamic` now and keep `AnyTemplate`. I’ll rename it in a separate PR to not clutter the diff here too much.",
        "createdAt" : "2019-09-17T11:50:58Z",
        "updatedAt" : "2019-09-17T12:00:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "47844ec9-0491-489b-95ec-2167317563b5",
        "parentId" : "913760ad-b0db-4efd-856c-b47f9f483222",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "OK let's go with `ANY`.",
        "createdAt" : "2019-09-17T11:55:53Z",
        "updatedAt" : "2019-09-17T12:00:28Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d03fb1f1bef05c953d9b07d8f58b002ad7b9413",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +237,241 @@  // Builtin type 'Any'\n  // *Available in versions >= 1.dev*\n  ANY = 18;\n}\n"
  },
  {
    "id" : "b7b8f494-9bd8-41f5-863a-76ebcb2a69a6",
    "prId" : 2298,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85df7fa2-a2fe-4258-8874-10bf27c75540",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Isn't there a `uint64`?",
        "createdAt" : "2019-07-29T11:04:22Z",
        "updatedAt" : "2019-07-29T18:04:31Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8dc47129-5d1a-4b9e-a5e7-0aa795355a95",
        "parentId" : "85df7fa2-a2fe-4258-8874-10bf27c75540",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I prefer to use a signed version, as we may generalize the type parameter `nat` in the future. For instance, decimal with negative scale makes perfect sens. ",
        "createdAt" : "2019-07-29T11:24:04Z",
        "updatedAt" : "2019-07-29T18:04:31Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "33e6b1950b738efc874e833e075c7c7044405865",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +302,306 @@    // *Must be between 0 and 38 (bounds inclusive)*\n    // use standard signed long for future usage.\n    sint64 nat = 11;\n  }\n"
  },
  {
    "id" : "ef85597d-d4f0-488f-b681-9ff67c2fcbc2",
    "prId" : 2298,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7bbada8-1a4e-4faa-a068-6e855f0b2a75",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "This is a type for older versions of DAML-LF but a type constructor for newer versions. We should document this.",
        "createdAt" : "2019-07-29T11:04:58Z",
        "updatedAt" : "2019-07-29T18:04:31Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "7bb5bf47-468d-451f-8f6a-dc166fe32a25",
        "parentId" : "d7bbada8-1a4e-4faa-a068-6e855f0b2a75",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I update the daml-lf spec (could you please take a look?) and add a note here that it was called ``DECIAML`` is previous version.",
        "createdAt" : "2019-07-29T15:21:59Z",
        "updatedAt" : "2019-07-29T18:04:31Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "33e6b1950b738efc874e833e075c7c7044405865",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +186,190 @@  INT64 = 2;\n\n  // Builtin type 'Numeric'\n  // was named `DECIMAL` in version 1.6 or earlier\n  NUMERIC = 3;"
  },
  {
    "id" : "ed7dc42a-5336-477b-b151-168cb5d21154",
    "prId" : 2033,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cffdf914-7ae0-48de-a195-e8204972fbb1",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":+1: ",
        "createdAt" : "2019-07-08T09:30:05Z",
        "updatedAt" : "2019-07-08T09:30:05Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "543d0f2fd51d18c809d4f9b4d5a7d7256705a1e2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4,8 @@// .proto representation of the first version of the DAML-LF language,\n// as specified by\n// <https://github.com/digital-asset/daml/blob/master/daml-lf/spec/daml-lf-1.rst>.\n//\n// A few notes:"
  },
  {
    "id" : "69138c18-1d9a-4948-b6b9-d0bc06279539",
    "prId" : 1614,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "365c2824-ee3c-41c4-83fd-1fc20e3dc773",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Shouldn't this live in a `oneof` together with `package_id`?",
        "createdAt" : "2019-06-25T12:30:13Z",
        "updatedAt" : "2019-06-26T07:32:46Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "b2369ff7-ebce-4045-ace0-9bd8eeb8a1df",
        "parentId" : "365c2824-ee3c-41c4-83fd-1fc20e3dc773",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "It's within one, with `package_id` and `self`.",
        "createdAt" : "2019-06-25T12:32:31Z",
        "updatedAt" : "2019-06-26T07:32:46Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "e6748ef9-c6dc-49b9-a923-df5ce9836cc5",
        "parentId" : "365c2824-ee3c-41c4-83fd-1fc20e3dc773",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "You're totally right. I should have scanned a few more lines. By bad.",
        "createdAt" : "2019-06-25T12:35:20Z",
        "updatedAt" : "2019-06-26T07:32:46Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdebfafb9ac009ed15ea8adb801c50def398bf27",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +59,63 @@    // An index into `interned_package_ids` of the Package containing\n    // this reference.\n    uint64 interned_id = 3;\n  }\n}"
  },
  {
    "id" : "0283e416-f84c-4e73-b4de-3e4b702e4d5d",
    "prId" : 1480,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21947f5e-3238-4511-b1e9-c7a50894e54a",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Will anybody ever update this? Should we just say it'll be in 1.6?",
        "createdAt" : "2019-06-03T13:10:41Z",
        "updatedAt" : "2019-06-04T13:28:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "1166e566-c4b5-43f2-b0f3-b61af0dcf4d7",
        "parentId" : "21947f5e-3238-4511-b1e9-c7a50894e54a",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I will take care of that when I bump 1.6 for enum types.",
        "createdAt" : "2019-06-03T13:12:16Z",
        "updatedAt" : "2019-06-04T13:28:02Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4d59d529f1dc909384d1bcbc58e2f901116e90b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +375,379 @@  TO_QUOTED_TEXT_PARTY = 63; // legacy, remove in next major version\n  TO_TEXT_PARTY = 94; // *Available Since version 1.2*\n  TO_TEXT_CODE_POINTS = 105;  // *Available Since version 1.dev*\n  FROM_TEXT_PARTY = 95; // *Available Since version 1.2*, was named FROM_TEXT_PARTY in 1.2, 1.3 and 1.4\n  FROM_TEXT_INT64 = 103; // *Available Since version 1.5*"
  },
  {
    "id" : "23198c41-9585-4650-88d6-af785400e555",
    "prId" : 1397,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15616984-28bc-4997-98f5-34fb216f99a2",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "add the note about enums at the top of this file",
        "createdAt" : "2019-05-27T11:23:09Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      },
      {
        "id" : "e77d674a-3dfb-4fb1-ae49-8432a1f82086",
        "parentId" : "15616984-28bc-4997-98f5-34fb216f99a2",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "done",
        "createdAt" : "2019-05-27T12:19:23Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce95b727edd6150f719d1c4c22df4bde71e6ef6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +533,537 @@  }\n\n   // Enum construction ('ExpEnumCon')\n   message EnumCon {\n"
  },
  {
    "id" : "3aec349a-f6c2-4e1a-a152-69609ea04662",
    "prId" : 1397,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "308b90f1-aa29-4ed6-84f9-d27d1ed46e93",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "If you're calling them constructors here, which I think is OK, then it should probably be the same in the enum pattern.",
        "createdAt" : "2019-05-27T11:32:27Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce95b727edd6150f719d1c4c22df4bde71e6ef6",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +1051,1055 @@\n  message EnumConstructor {\n    repeated string constructors = 1;\n  }\n"
  },
  {
    "id" : "578f20fc-a7f4-4595-a077-d0b453059c4d",
    "prId" : 1397,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ddb96c2-cc92-4051-acaa-da45ae0a3e7b",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "Did you delete the `*must be non-empty*` comment for a reason? Is this actually untrue?",
        "createdAt" : "2019-05-27T11:32:49Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      },
      {
        "id" : "b7ee2af8-66eb-4c46-9f49-6c78408192ab",
        "parentId" : "1ddb96c2-cc92-4051-acaa-da45ae0a3e7b",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "`// *must be non-empty*` was just wrong. See just below:\r\n```\r\n    Fields record = 3; // Records without fields are explicitly allowed.\r\n    Fields variant = 4; // Variants without constructors are explicitly allowed.\r\n```",
        "createdAt" : "2019-05-27T12:16:10Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce95b727edd6150f719d1c4c22df4bde71e6ef6",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +1047,1051 @@message DefDataType {\n  message Fields {\n    repeated FieldWithType fields = 1;\n  }\n"
  },
  {
    "id" : "2cd81a79-7895-45ad-a169-6b8aec9e35b4",
    "prId" : 1397,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfb8939a-e1be-4a3d-ae3d-1278bd4d8dae",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "Is this true? Shouldn't this go in `dev`?",
        "createdAt" : "2019-05-29T10:01:06Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      },
      {
        "id" : "43ef8d6c-7341-4b17-b802-23a4547c33d3",
        "parentId" : "dfb8939a-e1be-4a3d-ae3d-1278bd4d8dae",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "fixed. It should go to dev. ",
        "createdAt" : "2019-05-29T10:07:17Z",
        "updatedAt" : "2019-05-29T11:46:15Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ce95b727edd6150f719d1c4c22df4bde71e6ef6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@//        2019-05-24: Make actors in exercise optional\n// * dev (special staging area for the next version to be released)\n//        2019-05-27: Add enum type.\n\n"
  }
]