[
  {
    "id" : "71d825d4-9feb-408e-ae1c-91464e61883c",
    "prId" : 7540,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12bac4eb-bd44-4595-a6ba-27eac14670f6",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why can't we use `SELet` here anymore?",
        "createdAt" : "2020-10-01T10:40:01Z",
        "updatedAt" : "2020-10-01T13:51:34Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c2c92617-ae03-4ebf-87a0-4fa57b83f6c9",
        "parentId" : "12bac4eb-bd44-4595-a6ba-27eac14670f6",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "because this one is not rewritten by ANF.",
        "createdAt" : "2020-10-01T11:19:37Z",
        "updatedAt" : "2020-10-01T13:51:34Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "ea704973-e40d-4dff-925f-cc89f13289b4",
        "parentId" : "12bac4eb-bd44-4595-a6ba-27eac14670f6",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "That makes sense. Thanks for the explanation.",
        "createdAt" : "2020-10-01T11:21:36Z",
        "updatedAt" : "2020-10-01T13:51:34Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "e55637f913c36a84131d8d78a5fd33c7acea709e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +141,145 @@                twice,\n                Array(SEAbs(1, subtract2(SEVar(1), subtract2(SEVar(4), SEVar(2)))), SEVar(2)))) //100\n          ))\n      )\n    )"
  },
  {
    "id" : "0ba212ff-0552-41c6-a511-cdbeff5b2684",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f606307b-4d5d-4c14-9f12-711cb7488191",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "How is this related?",
        "createdAt" : "2020-06-26T10:33:10Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "a17471e9-7e92-4a54-86ca-50902bcccd03",
        "parentId" : "f606307b-4d5d-4c14-9f12-711cb7488191",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "This is dev./explore code. This stops us dropping the stack trace. Remy confirmed this change is good.",
        "createdAt" : "2020-06-30T14:55:26Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +85,89 @@  }\n\n  final case class MachineProblem(s: String) extends RuntimeException(s)\n\n  def examples: Map[String, (Int, SExpr)] = {"
  },
  {
    "id" : "b33069c1-715b-4373-89b9-1f0caa042627",
    "prId" : 6003,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "574e72f9-efce-48cb-be96-3cb27c8113c3",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n          case SInt64(got) if (got != expected) =>\r\n              throw new MachineProblem(s\"Expected final integer to be $expected, but got $got\")\r\n```",
        "createdAt" : "2020-05-19T12:58:43Z",
        "updatedAt" : "2020-05-20T09:14:01Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "51e1b092-7fed-4620-a030-17f321c255b4",
        "parentId" : "574e72f9-efce-48cb-be96-3cb27c8113c3",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Didn't do this. It changes the meaning, making the case of an SInt64 where got==expected get handled by the `case _ =>`. Which is not what we want.",
        "createdAt" : "2020-05-20T07:02:36Z",
        "updatedAt" : "2020-05-20T09:14:01Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "db07107e-0d19-4d83-83c4-a3467deceb87",
        "parentId" : "574e72f9-efce-48cb-be96-3cb27c8113c3",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Sorry. my mistake.",
        "createdAt" : "2020-05-20T07:50:49Z",
        "updatedAt" : "2020-05-20T09:14:01Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab369bff4b7cfcc541b5335c6c2996cbe061b74d",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +88,92 @@            if (got != expected) {\n              throw new MachineProblem(s\"Expected final integer to be $expected, but got $got\")\n            }\n          case _ =>\n            throw new MachineProblem(s\"Expected final-value to be an integer\")"
  },
  {
    "id" : "dd48e25b-fc9c-446d-85b7-d346224509f0",
    "prId" : 6003,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f2ac82c-4f2d-42a6-bb21-9b0a87164ee8",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-05-19T12:59:46Z",
        "updatedAt" : "2020-05-20T09:14:01Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab369bff4b7cfcc541b5335c6c2996cbe061b74d",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +91,95 @@          case _ =>\n            throw new MachineProblem(s\"Expected final-value to be an integer\")\n        }\n      case res =>\n        throw new MachineProblem(s\"Unexpected result from machine $res\")"
  }
]