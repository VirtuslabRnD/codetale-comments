[
  {
    "id" : "61115e92-1d2d-4d77-accd-b50a1404d69e",
    "prId" : 8102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a870bfa9-1f27-492f-86e3-c4c76e386a7a",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Good thinking!",
        "createdAt" : "2020-11-30T18:12:26Z",
        "updatedAt" : "2020-12-01T10:24:20Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aea23e2e26d09b6b3955c7a79283a4d8fc4a689",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@    val exp = e\"F:triangle 100\"\n    val expected = SValue.SInt64(5050)\n    // The point of this test is to prove that the bounded-evaluation checking really works.\n    runExpr(exp, envBound = unbounded, kontBound = unbounded) shouldBe expected\n"
  },
  {
    "id" : "dc7a2eb7-9416-420f-8a4b-70d6cc9519e2",
    "prId" : 8102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed8aa721-dc42-4d44-bc42-b1a5c2e0f4d4",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Don't you do something like this in a language with subtyping?\r\n```suggestion\r\n  def crash(reason: String): Nothing = throw new RuntimeException(reason)\r\n```",
        "createdAt" : "2020-11-30T18:15:34Z",
        "updatedAt" : "2020-12-01T10:24:20Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "aebd7fab-0fa7-431f-b22e-af6af01c43c1",
        "parentId" : "ed8aa721-dc42-4d44-bc42-b1a5c2e0f4d4",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I think either way is acceptable. The parametric form is used in speedy code `SError.scala`",
        "createdAt" : "2020-12-01T10:29:51Z",
        "updatedAt" : "2020-12-01T10:29:52Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aea23e2e26d09b6b3955c7a79283a4d8fc4a689",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@  }\n\n  def crash[A](reason: String): A = throw new RuntimeException(reason)\n\n}"
  },
  {
    "id" : "a966f777-240f-4bcd-9691-0b832ceb46dd",
    "prId" : 8102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeda5a4f-923e-465e-aec8-79ff8df0058d",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Have you by any chance tried what happens if we hit the `KFoldr1Map/Reduce` case? For instance, if the step function passed to `foldr` is something like `\\x -> identity(\\y -> ...)`. I'd be very curious to know. 😃",
        "createdAt" : "2020-11-30T18:20:03Z",
        "updatedAt" : "2020-12-01T10:24:20Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "1fec3787-5e46-41c4-9b56-07975e2d7cba",
        "parentId" : "aeda5a4f-923e-465e-aec8-79ff8df0058d",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I added a test which checks the `KFold1Map/Reduce` works in bounded space.",
        "createdAt" : "2020-12-01T10:31:14Z",
        "updatedAt" : "2020-12-01T10:31:14Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "3440d35b-f3ef-4d7b-a293-32ca71f53cc5",
        "parentId" : "aeda5a4f-923e-465e-aec8-79ff8df0058d",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Nice. Thank you.",
        "createdAt" : "2020-12-01T16:18:57Z",
        "updatedAt" : "2020-12-01T16:18:58Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aea23e2e26d09b6b3955c7a79283a4d8fc4a689",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +91,95 @@  }\n\n  \"fold-right executes with a small env-stack, and a small kont-stack\" in {\n    val exp = e\"F:triangle_viaFoldRight 100\"\n    val expected = SValue.SInt64(5050)"
  },
  {
    "id" : "e0a665b2-61b2-441f-ac4e-f578c957b133",
    "prId" : 8102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "830a725e-7988-44fd-a2e2-4736a5b94fd0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "That's a nice way to trigger the `KFoldr1Map/Reduce` case. 👍 ",
        "createdAt" : "2020-12-01T16:19:58Z",
        "updatedAt" : "2020-12-01T16:20:01Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aea23e2e26d09b6b3955c7a79283a4d8fc4a689",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@\n         val triangle_viaFoldRight2 : (Int64 -> Int64) = \\ (x: Int64) ->\n            FOLDR @Int64 @Int64 (\\(y: Int64) -> ADD_INT64 y) 0 (F:generate Nil@Int64 x);\n\n         // tail-recursive generator"
  }
]