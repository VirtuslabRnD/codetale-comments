[
  {
    "id" : "a8fef614-0408-4a73-9dd5-a410b177c176",
    "prId" : 7438,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd9a151d-efb4-4db4-91e8-31630ae373f8",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why is this test commented out?",
        "createdAt" : "2020-09-21T12:12:33Z",
        "updatedAt" : "2020-09-21T12:13:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "4ada2c93-6057-439b-a5d0-fc04db8fd14a",
        "parentId" : "cd9a151d-efb4-4db4-91e8-31630ae373f8",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "They have nothing to do here. \r\nI remove them in #7450",
        "createdAt" : "2020-09-21T12:18:24Z",
        "updatedAt" : "2020-09-21T12:18:24Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "51496ee9-18bc-476d-94c4-161366cefe4d",
        "parentId" : "cd9a151d-efb4-4db4-91e8-31630ae373f8",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I see. Thanks for the explanation.",
        "createdAt" : "2020-09-21T12:24:56Z",
        "updatedAt" : "2020-09-21T12:24:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9fae9394b4e7efd302fa8781b37c97d5671c98f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +322,326 @@    Some(SELabelClosure(LfDefRef(-pkgId-:M:p_1_0),\n        SELet1General(SEVal(LfDefRef(-pkgId-:M:origin)),SEAppAtomicSaturatedBuiltin(SBRecUpd(-pkgId-:M:Point,0),[SELocS(1),SEValue(SInt64(1))])))) did not equal\n    Some(SELet1General(SEVal(LfDefRef(-pkgId-:M:origin)),SEAppAtomicSaturatedBuiltin(SBRecUpd(-pkgId-:M:Point,0),[SELocS(1),SEValue(SInt64(1))])))\n\n"
  },
  {
    "id" : "ae14ad4b-fae7-406e-99a4-b614029befe8",
    "prId" : 6003,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38c1d292-4f1c-4ae5-98c4-2920e5b8917c",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Given how simple it is to write such a test I'd be happy to see a test like\r\n```\r\n(\\ (a: Int64) (b: Int64) -> SUB_INT64 a b) 88 33\r\n```\r\nas well to make sure we also get the order of the arguments right. I'm fine with doing this in a separate PR.",
        "createdAt" : "2020-05-20T11:16:35Z",
        "updatedAt" : "2020-05-20T11:16:47Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab369bff4b7cfcc541b5335c6c2996cbe061b74d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +29,33 @@    val pkgs = typeAndCompile(p\"\")\n\n    \"be captured correctly\" in {\n      eval(\n        e\"\"\""
  },
  {
    "id" : "218b01e8-3986-46f2-aa73-f0321aac52dc",
    "prId" : 3416,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55c4b4dc-8d6a-46be-9c06-2147554742c3",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "This is also defined in [`SBuiltinTest`](https://github.com/digital-asset/daml/pull/3416/files#diff-ae9014deee9be354b39ebd26faa0150bR1231). How about moving this to `Equality`'s companion object? ",
        "createdAt" : "2019-11-12T08:47:33Z",
        "updatedAt" : "2019-11-12T10:28:32Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "c66a8518440a160bdac8fa002ff6c9c0aac64311",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +241,245 @@  }\n\n  @SuppressWarnings(Array(\"org.wartremover.warts.Any\"))\n  private implicit def resultEq: Equality[Either[SError, SValue]] = {\n    case (Right(v1: SValue), Right(v2: SValue)) => svalue.Equality.areEqual(v1, v2)"
  }
]