[
  {
    "id" : "e1d9a018-d063-4683-8f9d-dccbe2ecb852",
    "prId" : 6918,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4e95270-26bd-4938-a436-841b9790db18",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The title of the test is a lambda with 3 params whereas this lambda has only 2 params. Something got out of sync here.",
        "createdAt" : "2020-07-30T14:40:25Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "9efa214f-f978-4fd0-8577-1ad5817d2f3a",
        "parentId" : "e4e95270-26bd-4938-a436-841b9790db18",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "fixed the title",
        "createdAt" : "2020-08-04T07:54:08Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92f961786f34509dbaa09fc380a83b8561bc236",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@    \"be transformed to ANF as expected\" in {\n      val original =\n        lam(2, app(arg1, clo1(arg0, 1, app(free0, app(free0, arg0)))))\n      val expected =\n        lam("
  },
  {
    "id" : "a1162e6e-4545-4d11-a98b-43e235b973c4",
    "prId" : 6918,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1e9af1f-1fd3-46ab-b753-1d10441500b0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Is this the test for the issue @cocreature raised?",
        "createdAt" : "2020-07-30T14:42:08Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "98fb79ff-ddf6-4d9e-bdd4-fba85fd70b12",
        "parentId" : "c1e9af1f-1fd3-46ab-b753-1d10441500b0",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "yes",
        "createdAt" : "2020-08-04T07:54:16Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92f961786f34509dbaa09fc380a83b8561bc236",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +123,127 @@  }\n\n  \"error (over) applied to 2 arg\" should {\n    \"be transformed to ANF as expected\" in {\n      val original = lam(2, SEApp(SEBuiltin(SBError), Array(arg0, arg1)))"
  },
  {
    "id" : "8b48bd9c-06d5-4c2f-893d-4c6e50c72695",
    "prId" : 6918,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba81f384-53d2-4e40-9614-b75184453e47",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "This test says we're transforming\r\n```\r\nf (g 1) g(2)\r\n```\r\ninto\r\n```\r\nlet x = g 1 in\r\nlet y = f x in\r\nlet z = g 2 in\r\ny z\r\n```\r\ndoesn't it? To me this looks exactly like the cascade of `let`s and single argument applications we want to avoid.",
        "createdAt" : "2020-07-30T15:04:06Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "72832c79-e018-4617-8ad1-9ce373562615",
        "parentId" : "ba81f384-53d2-4e40-9614-b75184453e47",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Oh sorry. That is very embarrassing. I had the wrong version of the transform switched on.\r\nWhat is worse. When I switch to the transform we intend, it crashes in just the same was as attempt #2.",
        "createdAt" : "2020-07-30T15:20:14Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "98b29e15-68cc-4530-8b6b-1223b5003998",
        "parentId" : "ba81f384-53d2-4e40-9614-b75184453e47",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I need to look carefully at what is going on here.",
        "createdAt" : "2020-07-30T15:21:07Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "d1249952-a734-441b-a9bb-9ed3a0f14cf3",
        "parentId" : "ba81f384-53d2-4e40-9614-b75184453e47",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "ok, so the new transform, which avoids the transform to a cascade of single-apps in now switched on\r\nand the AnfTests are updated to show this",
        "createdAt" : "2020-08-04T07:55:12Z",
        "updatedAt" : "2020-08-12T07:41:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92f961786f34509dbaa09fc380a83b8561bc236",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@  }\n\n  \"unknown multi-arg fun: [\\\\f g. f (g 1) (g 2)]\" should {\n    \"be transformed to ANF as expected (safely)\" in {\n      val original ="
  },
  {
    "id" : "6b6d2040-2410-46c4-a76e-c64f761bd9d5",
    "prId" : 6562,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8cbe7d2-a639-4e99-9965-2aa4ee4cf8dd",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Can we please have a test case for the expression mentioned in https://github.com/digital-asset/daml/issues/6535 as well?",
        "createdAt" : "2020-07-01T18:58:11Z",
        "updatedAt" : "2020-07-02T07:27:39Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "d849ac30-8153-48e0-a1ee-b13d52cbc31a",
        "parentId" : "f8cbe7d2-a639-4e99-9965-2aa4ee4cf8dd",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "done. turns out we never did add redundant lets in this example",
        "createdAt" : "2020-07-02T07:31:16Z",
        "updatedAt" : "2020-07-02T07:31:17Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ca69a9ff42f50246a7439214e6ddcfd720da0fe",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +124,128 @@      testTransform(original, expected)\n    }\n  }\n\n  \"issue 6535: [\\\\f x. f x x]\" should {"
  }
]