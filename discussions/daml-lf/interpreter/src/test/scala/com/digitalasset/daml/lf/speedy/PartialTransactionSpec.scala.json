[
  {
    "id" : "6aa7fb04-8f71-4ea6-bddf-26803c7a4680",
    "prId" : 8808,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09e6b794-220a-4219-bd9b-c9b9f9b079c5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "what’s up with all those slashes? Is that to trick scalafmt into using a newline? If so, please add a comment for that because I’ll definitely forget it and remove them.",
        "createdAt" : "2021-02-11T11:00:52Z",
        "updatedAt" : "2021-02-12T11:31:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "76987cc9-403c-4d8d-a456-f738091ddbe0",
        "parentId" : "09e6b794-220a-4219-bd9b-c9b9f9b079c5",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":+1: ",
        "createdAt" : "2021-02-12T09:29:55Z",
        "updatedAt" : "2021-02-12T11:31:48Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "105d691f83dab6577b9afd72d0c8210b56aaffb7",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@    \"be without effect when closed without exception\" in {\n      def run1 = contractIdsInOrder(\n        initialState //\n          .insertCreate_ // create the contract cid_0\n          .beginExercises_ // open an exercise context"
  },
  {
    "id" : "be67a4a2-a756-4a18-9c8d-6c8091931cfa",
    "prId" : 8808,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77594bc-b702-4dd8-ad4b-e5ed50ed9dc7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I assume `fold` recurses over every node rather than just root nodes? I couldn’t find the implementation from a quick look.",
        "createdAt" : "2021-02-11T11:02:53Z",
        "updatedAt" : "2021-02-12T11:31:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0bafd5f4-1fb2-4e45-9bd6-21a27069a018",
        "parentId" : "d77594bc-b702-4dd8-ad4b-e5ed50ed9dc7",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```\r\n  /** Traverses the transaction tree in pre-order traversal (i.e. exercise nodes are traversed before their children)\r\n    *\r\n    * Takes constant stack space. Crashes if the transaction is not well formed (see `isWellFormed`)\r\n    */\r\n  final def fold[A](z: A)(f: (A, (Nid, Node.GenNode[Nid, Cid])) => A): A\r\n```",
        "createdAt" : "2021-02-12T09:01:19Z",
        "updatedAt" : "2021-02-12T11:31:48Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "105d691f83dab6577b9afd72d0c8210b56aaffb7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@        tx.fold(Vector.empty[Value.ContractId]) {\n          case (acc, (_, create: Node.NodeCreate[Value.ContractId])) => acc :+ create.coid\n          case (acc, _) => acc\n        }\n      case IncompleteTransaction(_) =>"
  }
]