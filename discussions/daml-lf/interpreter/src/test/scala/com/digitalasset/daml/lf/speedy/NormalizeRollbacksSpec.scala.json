[
  {
    "id" : "311b9113-aead-467b-b235-d30a1630b45e",
    "prId" : 9712,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33891379-7083-403b-9387-fa7b088ad499",
        "parentId" : null,
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "Good idea. \"Meaning\" here would be the transaction tree among actions (i.e. after removing/flattening all rollback nodes), as well as the consistency order and the set of rolled back actions. That's a lot, but we definitely want to guarantee we're preserving these.",
        "createdAt" : "2021-05-20T13:32:03Z",
        "updatedAt" : "2021-05-20T13:36:51Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1691ce29ebfc52ba7f1f71ce32c20f15538ca500",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@\n  // TODO: https://github.com/digital-asset/daml/issues/8020\n  // We should test that the `meaning` of a transaction is preserved by normalization.\n\n  def test(name: String)(orig: Shape.Top, expected: Shape.Top): Unit = {"
  },
  {
    "id" : "aaa88de1-9905-4994-a9f7-80e5a96848cd",
    "prId" : 9712,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b55d814e-7d48-42d9-b9d0-656899eb5b9a",
        "parentId" : null,
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "These tests look great! I would also add some more odd mixed rollback cases:\r\n\r\n```\r\nR(c1, R(R(c2), c3)) --> R(c1, R(c2), c3)\r\n```\r\n\r\nand \r\n\r\n```\r\nR(R(c1, R(c2)), c3) --> R(c1, c2), R(c3)\r\n```\r\n",
        "createdAt" : "2021-05-20T13:36:05Z",
        "updatedAt" : "2021-05-20T13:36:51Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      },
      {
        "id" : "65ceffd2-d51e-4616-9e23-52b2f6a86cb8",
        "parentId" : "b55d814e-7d48-42d9-b9d0-656899eb5b9a",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "added this, thanks",
        "createdAt" : "2021-05-24T11:45:39Z",
        "updatedAt" : "2021-05-24T11:45:39Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "1691ce29ebfc52ba7f1f71ce32c20f15538ca500",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +167,171 @@    Top(R(c1, c2), R(c3)),\n  )\n\n}\n"
  },
  {
    "id" : "5161e441-9bb0-419a-b252-b0af43a7d4f4",
    "prId" : 9712,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91865ae5-ec46-4d75-bec4-975484273f3f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "this looks like we can probably simplify the code a fair bit by using the transaction builder.",
        "createdAt" : "2021-05-20T14:25:40Z",
        "updatedAt" : "2021-05-20T14:30:34Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5b6e6434-df50-4dda-bd4e-491266204c42",
        "parentId" : "91865ae5-ec46-4d75-bec4-975484273f3f",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I looked at the transaction builder, and it look really awkward to use in this case.",
        "createdAt" : "2021-05-24T11:51:07Z",
        "updatedAt" : "2021-05-24T11:51:07Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "5f65220c-cd79-4a56-a3b0-d964b9275bf5",
        "parentId" : "91865ae5-ec46-4d75-bec4-975484273f3f",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Just a bit curious about what is awkward. ",
        "createdAt" : "2021-05-25T08:28:18Z",
        "updatedAt" : "2021-05-25T08:28:47Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "41810fa1-321e-4bce-9091-ca0f7e62ba03",
        "parentId" : "91865ae5-ec46-4d75-bec4-975484273f3f",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Mainly that I am building the transaction bottom up from a declarative description.\r\nBut the transaction builder seems to assume that I am building top-down. Create nodes, and then mutably attach children.",
        "createdAt" : "2021-05-25T12:40:19Z",
        "updatedAt" : "2021-05-25T12:40:19Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "1691ce29ebfc52ba7f1f71ce32c20f15538ca500",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +253,257 @@    final case class Rollback(x: List[Shape]) extends Shape\n\n    def toTransaction(top: Top): TX = {\n      val ids = Iterator.from(0).map(NodeId(_))\n      var nodes: Map[Nid, Node] = Map.empty"
  }
]