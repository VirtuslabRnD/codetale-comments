[
  {
    "id" : "87e3d49a-284f-4c7f-b4c7-ad9929b6bac8",
    "prId" : 6606,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfd55d0e-ffbc-4819-9218-7fbd881eab44",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "You may find the formatting becomes much nicer if you split `k` into its own parameter list (in all cases).\r\n\r\nThis would become:\r\n\r\n```scala\r\n  private[this] def transformExp[A](\r\n      depth: DepthA,\r\n      env: Env,\r\n      exp: SExpr,\r\n      transform: Tx[SExpr, A],\r\n  )(k: K[AExpr, A]): Trampoline[A]\r\n```\r\n\r\nAnd its call site in `transformLet1` would look something like this:\r\n\r\n```scala\r\n      Bounce { () =>\r\n        transformExp(depth1, env1, body, transform) { body1 =>\r\n          Bounce(() => txK(AExpr(SELet1(rhs, body1.wrapped))))\r\n        }\r\n      }\r\n``` ",
        "createdAt" : "2020-07-06T12:42:03Z",
        "updatedAt" : "2020-07-06T12:43:02Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "f9a6cb69-66ae-4788-904c-3a198e2fc42c",
        "parentId" : "dfd55d0e-ffbc-4819-9218-7fbd881eab44",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "@SamirTalwar-DA Thanks, I might try this fix, because the current formatting is truly awful.",
        "createdAt" : "2020-07-06T14:18:50Z",
        "updatedAt" : "2020-07-06T14:18:50Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "65b3fbbee49dc3ce74eb132bd8e62c398a10ccbb",
    "line" : 337,
    "diffHunk" : "@@ -1,1 +277,281 @@      exp: SExpr,\n      transform: Tx[SExpr, A],\n      k: K[AExpr, A]): Trampoline[A] =\n    exp match {\n      case atom0: SExprAtomic =>"
  },
  {
    "id" : "2640e27c-7a31-4118-a651-8ee83ec14970",
    "prId" : 6606,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d02178a-24a0-4bc5-b776-d2a9afe26759",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "There's probably a monad in here somewhere, but I don't think you should worry about finding it.",
        "createdAt" : "2020-07-06T12:42:57Z",
        "updatedAt" : "2020-07-06T12:43:02Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "65b3fbbee49dc3ce74eb132bd8e62c398a10ccbb",
    "line" : 411,
    "diffHunk" : "@@ -1,1 +351,355 @@                                  k))))\n                ))\n          ))\n\n      case SELocation(loc, body) => {"
  },
  {
    "id" : "2e274402-8373-4e79-881e-62e1dde25afe",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16734c4d-3133-4687-8efe-ee6e02e9b453",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I am surprise this compile. ",
        "createdAt" : "2020-06-22T08:56:43Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "892f0d1f-a8c1-4a41-8e8c-3d8eb6f93403",
        "parentId" : "16734c4d-3133-4687-8efe-ee6e02e9b453",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "it did!...",
        "createdAt" : "2020-06-25T10:29:48Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@    final def bounce: T = this match {\n      case Land(x) => x\n      case Bounce(continue) => continue().bounce\n    }\n  }"
  },
  {
    "id" : "83e53205-05ac-442d-b07c-5e2a6bc597be",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7889ab0-2b0d-426d-8946-8f3833efd488",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Is this comment still valid? Doesn't the Scala type checker enforce this for us given the separate AST for ANF expressions?",
        "createdAt" : "2020-06-26T09:32:27Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3acc24dc-1796-46d1-bf8b-fd6477b25299",
        "parentId" : "b7889ab0-2b0d-426d-8946-8f3833efd488",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Yes this comment is still valid.\r\n`AExpr` is not currently a _proper_ separate type, but just a wrapper around `SExpr`.",
        "createdAt" : "2020-06-29T11:49:23Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "f451f920-e228-4247-8639-dea21cd44d71",
        "parentId" : "b7889ab0-2b0d-426d-8946-8f3833efd488",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Yeah, I noticed afterward. Please don't forget to update this comment when you turn `AExpr` to a separate type.",
        "createdAt" : "2020-06-29T11:58:02Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "04218237-1f87-4a94-97ea-1dc065cee383",
        "parentId" : "b7889ab0-2b0d-426d-8946-8f3833efd488",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "See #6521 ",
        "createdAt" : "2020-06-29T13:57:17Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@  execution to continue after a compound expression is reduced to a value.\n\n  The speedy machine now expects that it will never have to execute a non-ANF expression,\n  crashing at runtime if one is encountered.  In particular we must ensure that the\n  expression forms: SEAppGeneral and SECase are removed, and replaced by the simpler"
  },
  {
    "id" : "c22ed9ed-29c8-497a-8429-c1a8c7b7d8b7",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ddd7566-9cf7-466c-9164-656fabe72bf7",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm not sure this explanation really cuts it. I'd say it's rather that `ELocS` is indexing relative to the end of the stack and what you're calling \"absolute\" is relative to the beginning of the stack frame of the current function.",
        "createdAt" : "2020-06-29T12:56:50Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3179f093-8954-450e-8e3f-1b97e457220c",
        "parentId" : "9ddd7566-9cf7-466c-9164-656fabe72bf7",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I've improved the explanation in the comment,",
        "createdAt" : "2020-06-30T09:01:57Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "8117e0c4-9180-47bd-a30a-3277d65682ed",
        "parentId" : "9ddd7566-9cf7-466c-9164-656fabe72bf7",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "> An absolute stack depth is the offset from the bottom of the stack, which is empty when a function is entered.\r\n\r\nThat is not the case because we use the same stack throughout the whole interpretation. I would prefer to clarify this even further.",
        "createdAt" : "2020-06-30T10:19:37Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "df6e7c08-9d0a-49f7-8bf9-940097e19f43",
        "parentId" : "9ddd7566-9cf7-466c-9164-656fabe72bf7",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "clarified further",
        "createdAt" : "2020-06-30T10:44:14Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@    expression which we traverse AND the new ANF expression we are constructing. The\n    relative-offset to a binding varies as new bindings are pushed on the stack.\n    */\n  case class AbsBinding(abs: DepthA)\n"
  },
  {
    "id" : "2111e4b2-1e02-4e72-8f55-f8c3f63f1c28",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "810df851-05bc-49e6-b549-ffbaa7c78927",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\nprivate[speedy] object Anf {\r\n```",
        "createdAt" : "2020-06-30T12:35:59Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "dfba1d70-9de7-4891-be54-d79f8cffc4bc",
        "parentId" : "810df851-05bc-49e6-b549-ffbaa7c78927",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I tried this. But sadly `flattenToAnf` is used in daml-script. I put a note in the code.",
        "createdAt" : "2020-06-30T15:21:04Z",
        "updatedAt" : "2020-06-30T15:21:05Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "bd5ea567-900b-4875-983e-3b8208041661",
        "parentId" : "810df851-05bc-49e6-b549-ffbaa7c78927",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "then maybe \r\n\r\n```suggestion\r\nprivate[lf] object Anf {\r\n```",
        "createdAt" : "2020-06-30T15:29:27Z",
        "updatedAt" : "2020-06-30T15:30:56Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@\n//TODO: make this object private[speedy] when use of flattenToAnf is removed from daml-script\nobject Anf {\n\n  /*** Entry point for the ANF transformation phase */"
  },
  {
    "id" : "b71dc884-a155-454c-b767-89f95867282e",
    "prId" : 6440,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e0af08-1442-4d3c-8c0c-e897d318523d",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Could you please make all the other definition private ? \r\nIf you want to write unit tests for some of functions, you are authorize to make those package private (with a comment). \r\n ",
        "createdAt" : "2020-06-30T12:37:39Z",
        "updatedAt" : "2020-06-30T15:19:02Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "15108d3c-618e-4b51-aa23-1fff1124db50",
        "parentId" : "69e0af08-1442-4d3c-8c0c-e897d318523d",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "made everything else private as you suggest",
        "createdAt" : "2020-06-30T15:21:23Z",
        "updatedAt" : "2020-06-30T15:21:23Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "26318810-f9ba-4fd2-958f-122a45eaa05c",
        "parentId" : "69e0af08-1442-4d3c-8c0c-e897d318523d",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "By definitions, I mean methods, **and** fields, **and** types. ",
        "createdAt" : "2020-06-30T15:30:36Z",
        "updatedAt" : "2020-06-30T17:06:57Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1ca0fa6575631a0602ea895e0155fae12fd986b",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\n  /*** Entry point for the ANF transformation phase */\n  def flattenToAnf(exp: SExpr): AExpr = {\n    val depth = DepthA(0)\n    val env = initEnv"
  }
]