[
  {
    "id" : "2f50b917-210d-4ae3-9728-d6b64646c829",
    "prId" : 3715,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5482b5a4-c03b-4840-a810-64396c63e958",
        "parentId" : null,
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "You can just use `opt.size` here.",
        "createdAt" : "2019-12-05T15:35:17Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "3443c205-010f-4f07-b1d1-a827893c2be8",
        "parentId" : "5482b5a4-c03b-4840-a810-64396c63e958",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "implicit conversion from Option to Traversable are considered warts.",
        "createdAt" : "2019-12-06T10:00:01Z",
        "updatedAt" : "2019-12-06T15:11:21Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +74,78 @@                loop(pushOrderedValues(values.size, values.iterator().asScala, cmdsRest), stack)\n              case SOptional(opt) =>\n                loop(pushOrderedValues(opt.fold(0)(_ => 1), opt.iterator, cmdsRest), stack)\n              case SList(values) =>\n                loop(pushOrderedValues(values.length, values.iterator, cmdsRest), stack)"
  },
  {
    "id" : "910afc47-bc62-446c-8a71-aed89e5449bb",
    "prId" : 3715,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "751f1d20-e840-47f7-bbd6-a479caafad9c",
        "parentId" : null,
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Nice catch.",
        "createdAt" : "2019-12-05T15:35:20Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +30,34 @@\n  private def pushOrderedValues(size: Int, values: Iterator[SValue], cmds: List[Command]) =\n    ((Ordered(size) :: cmds) /: values) { case (acc, v) => Value(v) :: acc }\n\n  @tailrec"
  },
  {
    "id" : "eefbcc7a-1e84-4f67-b381-0ae0ab12325a",
    "prId" : 3715,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da05f53b-4e17-43e4-92fc-182e32180458",
        "parentId" : null,
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "I am glad you're writing tests.",
        "createdAt" : "2019-12-05T15:35:59Z",
        "updatedAt" : "2019-12-06T15:11:20Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0703e5eb35d9a96c6ea7a07d0899920f5b3df5d7",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +88,92 @@                loop(newCmds, stack)\n              case SAny(t, v) =>\n                loop(Value(v) :: Mix(t.hashCode()) :: cmdsRest, stack)\n            }\n          case Mix(h) =>"
  }
]