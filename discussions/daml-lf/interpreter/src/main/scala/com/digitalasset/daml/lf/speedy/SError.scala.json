[
  {
    "id" : "738b807e-8bd3-4030-8182-ab37b7ee3d06",
    "prId" : 8612,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef703e8-1b4d-4611-ac27-71006e88a1ea",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "can we include the actual exception value and also the type (or `SAny` to store both) here? Imho itâ€™s super useful for error messages to see the type and the actual value is useful for daml script and triggers where we have to implement our own catch handlers.",
        "createdAt" : "2021-02-11T07:36:51Z",
        "updatedAt" : "2021-02-15T09:27:14Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2efa9083-8500-455c-9c38-8af2a3acf45e",
        "parentId" : "eef703e8-1b4d-4611-ac27-71006e88a1ea",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "This is a bit more involved than it seems. Because the payload values would have to be converted back from speedy-values to normal LF values. I've marked this as a TODO.",
        "createdAt" : "2021-02-12T13:25:29Z",
        "updatedAt" : "2021-02-15T09:27:14Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a7c69fbff2aaee6c8500bf0826a79cf0cd9f356",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +46,50 @@  // Have the unhandled-exception contain directly the original payload value & type\n  // as well as (or perhaps instead of) the computed message text\n  final case class DamlEUnhandledException(message: String) extends SErrorDamlException {\n    override def toString: String = message\n  }"
  },
  {
    "id" : "27e2fd7a-fdfe-47e5-ac0b-ac2e11028a7e",
    "prId" : 7400,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72118430-218c-45d8-bd09-4fd78320f70f",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Indeed. ",
        "createdAt" : "2020-09-15T12:16:14Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "2d7e0ede-3712-4f4d-9979-cc98706cf552",
        "parentId" : "72118430-218c-45d8-bd09-4fd78320f70f",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I'll do this in the following cleanup PR",
        "createdAt" : "2020-09-16T16:49:04Z",
        "updatedAt" : "2020-09-17T13:03:20Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "a360635b966cdfe27bfd3cd6e156308321238660",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +119,123 @@  /** The commit of the transaction failed due to authorization errors. */\n  final case class ScenarioErrorCommitError(commitError: ScenarioLedger.CommitError) //TODO: Rename. This error is not just for scenarios, but for all authorization errors.\n      extends SErrorDamlException\n\n  /** The transaction produced by the update expression in a 'mustFailAt' succeeded. */"
  }
]