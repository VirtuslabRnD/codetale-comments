[
  {
    "id" : "e6c33e5b-edd0-42df-9acd-61ce0d98c81e",
    "prId" : 9904,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39380993-d20f-4743-a4d3-cf3d9580bfb8",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ugh, I hate the pattern match thingy.",
        "createdAt" : "2021-06-03T12:02:52Z",
        "updatedAt" : "2021-06-03T12:02:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9ac7bd6734216d4b48958f5da4502613678f788",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +638,642 @@              .setExceptionExpr(exc)\n          )\n        case EToAnyException(ty, body) =>\n          assertSince(LV.Features.exceptions, \"Expr.ToAnyException\")\n          builder.setToAnyException(PLF.Expr.ToAnyException.newBuilder().setType(ty).setExpr(body))"
  },
  {
    "id" : "06fff856-23ab-4f9a-ad3a-c78b8f916f51",
    "prId" : 8575,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12f4c67e-f45f-428d-9582-29c00500dc4b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "that’s the actual fix right?",
        "createdAt" : "2021-01-20T10:07:26Z",
        "updatedAt" : "2021-01-20T13:45:13Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "343406f5-86c4-4d96-ba93-d252d9cc4af6",
        "parentId" : "12f4c67e-f45f-428d-9582-29c00500dc4b",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "This is the second  fix.",
        "createdAt" : "2021-01-20T11:24:05Z",
        "updatedAt" : "2021-01-20T13:45:13Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c4f44403abeb5543ba5aa3d9edd5814a695eac2",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +692,696 @@      choice.choiceObservers match {\n        case Some(value) =>\n          assertSince(LV.Features.choiceObservers, \"TemplateChoice.observer\")\n          b.setObservers(value)\n        case None if languageVersion >= LV.Features.choiceObservers =>"
  },
  {
    "id" : "cb05a391-38b6-4015-a277-5dcce84ac0ac",
    "prId" : 8575,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc97eeee-ebc8-4a2f-8fe3-819908bd4fe8",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This was wrong before right? At least it doesn’t seem equivalent to the old version.",
        "createdAt" : "2021-01-20T10:13:22Z",
        "updatedAt" : "2021-01-20T13:45:13Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "25c76b76-9025-49bb-9214-7c9d6f418176",
        "parentId" : "cc97eeee-ebc8-4a2f-8fe3-819908bd4fe8",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "this should be the first fix. \r\nI fact  I am quite unable to decipher the original code. ",
        "createdAt" : "2021-01-20T11:26:55Z",
        "updatedAt" : "2021-01-20T13:45:13Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c4f44403abeb5543ba5aa3d9edd5814a695eac2",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +278,282 @@      DecodeV1.builtinFunctionInfos\n        .filter(info =>\n          info.minVersion <= languageVersion && info.maxVersion.forall(languageVersion < _)\n        )\n"
  },
  {
    "id" : "5f7d0743-4a8d-4db2-b4eb-f3d71f95283d",
    "prId" : 4101,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "488a4e78-0650-4ef6-b0ee-cefab45ae6cb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I think we can write tests for the decoder and typechecking without fixing this, so I would suggest to leave this for a separate PR.",
        "createdAt" : "2020-01-20T07:58:58Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "8728440e-1a75-4342-a416-f3d6d78dcadf",
        "parentId" : "488a4e78-0650-4ef6-b0ee-cefab45ae6cb",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "ok",
        "createdAt" : "2020-01-20T19:44:20Z",
        "updatedAt" : "2020-01-22T18:54:57Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9b7ff4849afb993cbda3dc7bea03b90e9dd9c19",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +77,81 @@\n          case DTypeSyn(params @ _, typ @ _) =>\n            throw new RuntimeException(\"TODO #3616, EncodeV1, DTypeSyn\")\n\n        }"
  },
  {
    "id" : "38e39b39-df01-4f75-a72a-da620697595b",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a253a0fb-6568-4272-9572-7d9c104b972c",
        "parentId" : null,
        "authorId" : null,
        "body" : "heads up here that this is non-interned and we might want to change that if we don't support both schemes in v.dev.",
        "createdAt" : "2019-10-03T17:01:18Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "a5307dbf-47b6-4cea-b9de-d5b73f8b2ae7",
        "parentId" : "a253a0fb-6568-4272-9572-7d9c104b972c",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I will fix that in another PR. this one is already too big.",
        "createdAt" : "2019-10-03T17:58:08Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +152,156 @@    private implicit def encodeFieldWithType(nameWithType: (String, Type)): PLF.FieldWithType = {\n      val (name, typ) = nameWithType\n      PLF.FieldWithType.newBuilder().setName(name).setType(typ).build()\n    }\n"
  }
]