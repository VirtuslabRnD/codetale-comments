[
  {
    "id" : "98968382-cdaf-4657-a893-920e40b2487c",
    "prId" : 9084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce8720d-b784-421b-a9d7-daef29ea7e97",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "please crash here or add test `HashSpec`",
        "createdAt" : "2021-03-15T10:56:40Z",
        "updatedAt" : "2021-03-16T10:46:28Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "df3483ff-9b6b-441c-8ed8-97e809fe8fa3",
        "parentId" : "bce8720d-b784-421b-a9d7-daef29ea7e97",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "added test in HashSpec",
        "createdAt" : "2021-03-15T17:54:26Z",
        "updatedAt" : "2021-03-16T10:46:28Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "5812f04d26ab6bec832c6a582535fc8732c7055b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +214,218 @@        case Value.ValueRecord(_, fs) =>\n          iterateOver(fs)(_ addTypedValue _._2)\n        case Value.ValueBuiltinException(tag, v) =>\n          add(tag).addTypedValue(v)\n        case Value.ValueVariant(_, variant, v) =>"
  },
  {
    "id" : "123ea3ab-3c86-43ac-b4f7-2a2a2f1757ab",
    "prId" : 5140,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07a278c7-fa3a-4763-8584-7de3b1f72a17",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "And this; can it be `AnyVal`? You'd get rid of `equals` and `hashCode` implementations.",
        "createdAt" : "2020-03-23T17:32:53Z",
        "updatedAt" : "2020-03-23T22:49:17Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "7a4c8396-25cc-4362-8b09-1d4ef4bf7e02",
        "parentId" : "07a278c7-fa3a-4763-8584-7de3b1f72a17",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "same as before. It cannot because Bytes is already a user-defined `AnyVal`",
        "createdAt" : "2020-03-23T17:37:10Z",
        "updatedAt" : "2020-03-23T22:49:17Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "571ab661-681e-4554-970c-f78e76484fc1",
        "parentId" : "07a278c7-fa3a-4763-8584-7de3b1f72a17",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Same as for `Offset`: `Bytes` already is an `AnyVal`.",
        "createdAt" : "2020-03-23T17:38:00Z",
        "updatedAt" : "2020-03-23T22:49:17Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "f294ff3bf6e8f914a9259daabba5a33e2634244d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +16,20 @@import scala.util.control.NoStackTrace\n\nfinal class Hash private (val bytes: Bytes) {\n\n  override def hashCode(): Int = bytes.hashCode()"
  },
  {
    "id" : "89db3a47-51de-44ef-a8e0-355c5998ecc8",
    "prId" : 4542,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "040e6270-eee6-47a1-b7a9-434fe0c24024",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "`Value[Nothing]`? :thinking: ",
        "createdAt" : "2020-02-17T12:18:57Z",
        "updatedAt" : "2020-02-19T10:57:23Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "80fba262-eee7-49a5-9398-9bc76d55b516",
        "parentId" : "040e6270-eee6-47a1-b7a9-434fe0c24024",
        "authorId" : null,
        "body" : "It must not contain contract ids, hence the `Nothing`. This is following @remyhaemmerle-da 's code.",
        "createdAt" : "2020-02-17T13:22:41Z",
        "updatedAt" : "2020-02-19T10:57:23Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "fbc2660afe9d3e007e4fd907f341697c73d3cb7c",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +252,256 @@  // 1 - `templateId` is the identifier for a template with a key of type τ\n  // 2 - `key` is a value of type τ\n  def hashContractKey(templateId: Identifier, key: Value[Nothing]): Hash =\n    builder(Hash.Purpose.ContractKey)\n      .addIdentifier(templateId)"
  },
  {
    "id" : "48a7115c-aaf6-4074-9573-ac89558de9d6",
    "prId" : 4542,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eac8c59-0e45-4fda-9e1a-cccb013f1fc7",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : ":+1: ",
        "createdAt" : "2020-02-18T12:43:07Z",
        "updatedAt" : "2020-02-19T10:57:23Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbc2660afe9d3e007e4fd907f341697c73d3cb7c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +161,165 @@            case Purpose.ContractKey =>\n              sys.error(\"Hashing of contract id for contract keys is not supported\")\n            case _ => add(v.coid)\n          }\n        case Value.ValueOptional(None) =>"
  },
  {
    "id" : "0ae8973e-ae41-492a-ab63-b037bcf69f5d",
    "prId" : 4077,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92c57712-a040-4181-ae42-68de5e5905cd",
        "parentId" : null,
        "authorId" : null,
        "body" : "this isn't thread-safe, but not sure if it's a problem...",
        "createdAt" : "2020-01-21T15:27:55Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "22081fb0-ed6c-49b4-bb2b-6a119ed85bd2",
        "parentId" : "92c57712-a040-4181-ae42-68de5e5905cd",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Data should be hashed in a deterministic way.\r\nYou probably shouldn't play with threads when doing that. \r\n\r\nAnyway the builder is assumed to be build only in a very controlled way inside the `Hash` object. It is accessible from the package  for testing purpose only (see comment 171/172).\r\nI made the abstract class `Builder` `sealed` so you cannot exend it. \r\n\r\n",
        "createdAt" : "2020-01-21T16:00:30Z",
        "updatedAt" : "2020-01-22T16:15:50Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b715411c8916b18ec1c64dcd871e8a0fd22b9adb",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +69,73 @@    }\n\n    private val byteBuff = Array.ofDim[Byte](1)\n\n    final def add(a: Byte): this.type = {"
  }
]