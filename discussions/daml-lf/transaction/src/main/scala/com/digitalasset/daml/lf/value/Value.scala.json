[
  {
    "id" : "aeb45269-0963-4ee6-99e8-9e9db5ce0c33",
    "prId" : 9084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74f1afa5-9856-44a1-94bb-7ae0ccc01e13",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "this problably should be tested in ValueSpec.",
        "createdAt" : "2021-03-15T11:04:22Z",
        "updatedAt" : "2021-03-16T10:46:28Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "9b9a7392-8f35-44ab-a6f4-ddfbeb87a0ea",
        "parentId" : "74f1afa5-9856-44a1-94bb-7ae0ccc01e13",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Added a generator for BuiltinException, but it is not enabled because it causes lots of test fails.\r\nLets talk about this tomorrow!...",
        "createdAt" : "2021-03-15T17:55:09Z",
        "updatedAt" : "2021-03-16T10:46:28Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "5812f04d26ab6bec832c6a582535fc8732c7055b",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +524,528 @@          tagA ?|? tagB |+| a ?|? b\n        },\n      )\n    case ValueVariant(idA, conA, a) =>\n      ("
  },
  {
    "id" : "e243da38-3f1f-4ee4-a298-aba65ae3eea7",
    "prId" : 9084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec1e3cd-6b6a-4ba2-98a7-bce8fb185c27",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "side note: the logic for checking against max nesting seems to be duplicated quite a bit. maybe worth factoring it out at some point.",
        "createdAt" : "2021-03-16T10:45:02Z",
        "updatedAt" : "2021-03-16T10:46:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "5812f04d26ab6bec832c6a582535fc8732c7055b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +77,81 @@            }\n\n          case ValueBuiltinException(_, value) =>\n            if (newNesting > MAXIMUM_NESTING) {\n              if (exceededNesting) {"
  },
  {
    "id" : "bc3a30f9-5915-4cbd-9425-ff29ab142a4c",
    "prId" : 6739,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf23d1cf-1cda-4399-a9e7-8866d5ead521",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "It's not entirely clear why this is being bumped as well.",
        "createdAt" : "2020-07-15T11:55:49Z",
        "updatedAt" : "2020-07-15T19:43:20Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "56f970d2f86437d6e9b09a51bc1648fd3ae8e4c8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +446,450 @@  }\n\n  @deprecated(\"use com.daml.lf.transaction.NodeId\", since = \"1.4.0\")\n  type NodeId = transaction.NodeId\n  @deprecated(\"use com.daml.lf.transaction.NodeId\", since = \"1.4.0\")"
  },
  {
    "id" : "b5dc6c18-47a4-413e-952f-3a062051cdcc",
    "prId" : 5991,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d85a3a1-dd30-4903-a9d1-43133604baef",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "What's our process for removing deprecated elements such as this? Do we remove them in e.g. the next major SDK version?",
        "createdAt" : "2020-05-20T16:21:11Z",
        "updatedAt" : "2020-05-25T08:54:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "c0555a43-de10-4d7b-896e-45dba1b7e140",
        "parentId" : "5d85a3a1-dd30-4903-a9d1-43133604baef",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "We do not have clearly defined process. My intention was to let this deprecated warning for a least one release.  \r\n",
        "createdAt" : "2020-05-25T07:21:11Z",
        "updatedAt" : "2020-05-25T08:54:03Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "d229e5f6-6bac-4c1b-b51d-a5ebb894de67",
        "parentId" : "5d85a3a1-dd30-4903-a9d1-43133604baef",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Sounds good.",
        "createdAt" : "2020-05-25T08:29:58Z",
        "updatedAt" : "2020-05-25T08:54:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d70cbbf83f8ff0e01b793b887f877d8f61f7294",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +340,344 @@  type NodeIdx = Int\n\n  @deprecated(\"Use ContractId\", since = \"1.1.2\")\n  type AbsoluteContractId = ContractId\n"
  },
  {
    "id" : "985b262a-0507-436e-b785-930966364660",
    "prId" : 5966,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de5f32ca-35e8-4c0c-a7a0-681334b8208d",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I'm just wondering: from where does that magic number come from? If you would like to follow the Scala style guide this constant should be `MaxSuffixLength`.",
        "createdAt" : "2020-06-11T15:52:21Z",
        "updatedAt" : "2020-06-11T15:52:21Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c31fcd6f1afce560a4ef4dba5af7a6f877ec71a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +389,393 @@\n    object V1 {\n      val maxSuffixLength = 94\n\n      def apply(discriminator: Hash): V1 = new V1(discriminator, Bytes.Empty)"
  },
  {
    "id" : "9bf1eec7-b91d-4e44-8c8e-ada188f18644",
    "prId" : 5913,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c409e8a7-7729-465e-9dbe-9a297e9189e6",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "```suggestion\r\n  sealed abstract class AbsoluteContractId extends ContractId with Equals {\r\n```",
        "createdAt" : "2020-05-08T16:15:43Z",
        "updatedAt" : "2020-05-09T10:32:09Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e43df9442f6e63fbda69ee802d912e0e1699956",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +362,366 @@  sealed abstract class ContractId extends Product with Serializable\n\n  sealed abstract class AbsoluteContractId extends ContractId {\n    def coid: String\n  }"
  },
  {
    "id" : "f399968f-9e99-47bb-97bd-9fcf4b51e429",
    "prId" : 5207,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a08d70-5841-4eea-8f7d-3d3078e1d830",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Often a contractId is bound to a name like `coid`. Referencing the hex string the looks like `coid.coid`. How about we call this `toHexString`? Also makes it very explicit what this is.",
        "createdAt" : "2020-03-27T09:24:38Z",
        "updatedAt" : "2020-03-27T15:00:59Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "5cd32d9f-76f7-4dd2-ac0d-85b11c91df54",
        "parentId" : "c1a08d70-5841-4eea-8f7d-3d3078e1d830",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "We need the same name for V0 and V1. V0 coid is not a `HexString`.  ",
        "createdAt" : "2020-03-27T09:57:11Z",
        "updatedAt" : "2020-03-27T15:00:59Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "2f7c6ae1-ef6c-4b2a-9b6c-314a12f48dc5",
        "parentId" : "c1a08d70-5841-4eea-8f7d-3d3078e1d830",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I definitively do not want to use `toString`. Any suggestion ? ",
        "createdAt" : "2020-03-27T09:59:04Z",
        "updatedAt" : "2020-03-27T15:00:59Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "bb58751c-d0cb-4449-b9a0-354a89105898",
        "parentId" : "c1a08d70-5841-4eea-8f7d-3d3078e1d830",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "okay, let's keep it for now.",
        "createdAt" : "2020-03-27T15:13:04Z",
        "updatedAt" : "2020-03-27T15:13:04Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a5558b423555a61e77d2e1a7d19227c8ae2134b",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +369,373 @@        extends AbsoluteContractId {\n      lazy val toBytes: Bytes = V1.prefix ++ discriminator.bytes ++ suffix\n      lazy val coid: Ref.HexString = toBytes.toHexString\n      override def toString: String = s\"AbsoluteContractId($coid)\"\n    }"
  },
  {
    "id" : "de8801b2-a5ce-437d-9c7a-67bd64fd1c11",
    "prId" : 4364,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e5764e8-6978-4268-91e1-104c1bbe5d7d",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Did you want to deprecate this method as well?",
        "createdAt" : "2020-02-04T09:58:54Z",
        "updatedAt" : "2020-02-05T15:43:03Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "e4941f24-5a70-40cb-bcf9-363f2cf14b71",
        "parentId" : "8e5764e8-6978-4268-91e1-104c1bbe5d7d",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I let the one of Value, because: \r\n- I know it is not versioned\r\n- Navigator uses it heavily",
        "createdAt" : "2020-02-04T15:37:48Z",
        "updatedAt" : "2020-02-05T15:43:03Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed7aa085e66c23d39da73f99079c0647ab202aa2",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +22,26 @@\n  final def mapContractId[Cid2](f: Cid => Cid2): Value[Cid2] =\n    map1(f)\n\n  private[lf] final def map1[Cid2](f: Cid => Cid2): Value[Cid2] ="
  }
]