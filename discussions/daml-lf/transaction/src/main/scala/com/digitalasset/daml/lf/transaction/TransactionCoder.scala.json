[
  {
    "id" : "7d37bb7d-2fb2-4731-a081-e416107722dc",
    "prId" : 9468,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc48006d-9d22-4e41-93fe-6b307dd03f06",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We also need a version check here.",
        "createdAt" : "2021-04-22T06:36:39Z",
        "updatedAt" : "2021-04-22T14:38:09Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d11314d1-7551-4e9c-bdd3-9f69034d2017",
        "parentId" : "bc48006d-9d22-4e41-93fe-6b307dd03f06",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "done",
        "createdAt" : "2021-04-22T10:43:28Z",
        "updatedAt" : "2021-04-22T14:38:09Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0131daf6981a49c63b05b32a1722091ae39a1d6",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +461,465 @@\n    protoNode.getNodeTypeCase match {\n      case NodeTypeCase.ROLLBACK =>\n        val protoRollback = protoNode.getRollback\n        for {"
  },
  {
    "id" : "6458aaeb-8ebf-478b-8151-b9a4a48e4dfc",
    "prId" : 9468,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60efae5b-0788-437e-a6db-175db65ec8e9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":+1: ",
        "createdAt" : "2021-04-22T06:39:52Z",
        "updatedAt" : "2021-04-22T14:38:09Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0cc80549-f306-40cb-bd06-ae1d114c5776",
        "parentId" : "60efae5b-0788-437e-a6db-175db65ec8e9",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "note that this isnâ€™t used at all in the Daml repo but it is used in pkvutils.",
        "createdAt" : "2021-04-22T06:40:09Z",
        "updatedAt" : "2021-04-22T14:38:09Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0131daf6981a49c63b05b32a1722091ae39a1d6",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +784,788 @@  ): Either[DecodeError, NodeInfo] =\n    protoNode.getNodeTypeCase match {\n      case NodeTypeCase.ROLLBACK =>\n        // TODO https://github.com/digital-asset/daml/issues/8020\n        sys.error(\"protoNodeInfo, rollback nodes are not supported\")"
  },
  {
    "id" : "f13adf89-6ab8-43b3-855e-b6ea17895906",
    "prId" : 9468,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c707621-1dc3-4b63-9a26-0b6001d89a42",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I am a bit uncomfortable with adding this kind of logic only for testing. \r\nThis can be void by tweaking the proto directly as suggested below. \r\n\r\n",
        "createdAt" : "2021-05-03T10:10:05Z",
        "updatedAt" : "2021-05-03T10:11:12Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0131daf6981a49c63b05b32a1722091ae39a1d6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +248,252 @@      node: GenNode[Nid, Cid],\n      disableVersionCheck: Boolean =\n        false, //true allows encoding of bad protos (for testing of decode checks)\n  ): Either[EncodeError, TransactionOuterClass.Node] = {\n    val nodeVersion = node.version"
  },
  {
    "id" : "dba86406-8350-435e-b503-48f81791c77c",
    "prId" : 8958,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1efc8f25-46a6-4ec8-9e24-f4fbf722c582",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Test case for this please.",
        "createdAt" : "2021-02-26T13:49:39Z",
        "updatedAt" : "2021-03-01T16:58:45Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "3d2ea6c5-a054-496d-a5e1-b05c573e8cf8",
        "parentId" : "1efc8f25-46a6-4ec8-9e24-f4fbf722c582",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "added.",
        "createdAt" : "2021-02-26T15:56:55Z",
        "updatedAt" : "2021-03-01T16:58:45Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "97d0b74039f7a05a71570f6dde3322228d6e99a6",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +633,637 @@  }\n\n  def decodeNodeVersion(\n      txVersion: TransactionVersion,\n      protoNode: TransactionOuterClass.Node,"
  },
  {
    "id" : "86a2a36d-4840-4604-b564-10262db9ae9a",
    "prId" : 8958,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe040c6-4e55-4485-97e6-4c10aea95199",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "I realized that I write the field `version` for Node message even in transaction that does not support it. \r\nI mean, the node in a transaction V10 should not have field `version`. \r\nThis is not a big deal, as the reader ignore the field in this case -- I add a test to check we continue to ignore it-- \r\n",
        "createdAt" : "2021-02-26T16:02:18Z",
        "updatedAt" : "2021-03-01T16:58:45Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "97d0b74039f7a05a71570f6dde3322228d6e99a6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +258,262 @@        TransactionOuterClass.Node.newBuilder().setNodeId(encodeNid.asString(nodeId))\n      if (enclosingVersion >= TransactionVersion.minNodeVersion)\n        nodeBuilder.setVersion(node.version.protoValue)\n\n      node match {"
  },
  {
    "id" : "8c923805-bceb-45e3-a92f-9306693261c5",
    "prId" : 8958,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1d3efa1-7d69-4964-aff7-e5d28ed110c9",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "You might want to remove the wrapping braces here.",
        "createdAt" : "2021-03-01T15:55:31Z",
        "updatedAt" : "2021-03-01T16:58:45Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "97d0b74039f7a05a71570f6dde3322228d6e99a6",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +636,640 @@      txVersion: TransactionVersion,\n      protoNode: TransactionOuterClass.Node,\n  ): Either[DecodeError, TransactionVersion] = {\n    if (txVersion < TransactionVersion.minNodeVersion) {\n      Right(txVersion)"
  },
  {
    "id" : "ea5d2bc8-ced5-429b-b759-a260738927c1",
    "prId" : 8512,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86817d84-7e70-43c4-bde7-74392cd7764f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":+1: ",
        "createdAt" : "2021-01-15T08:03:17Z",
        "updatedAt" : "2021-01-15T08:39:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb40962d9656284c0d3a2211a4a864f064dc5936",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +150,154 @@      val builder = TransactionOuterClass.KeyWithMaintainers.newBuilder()\n      builder.setKey(encodedKeyValue)\n      key.maintainers.foreach(builder.addMaintainers)\n      builder.build()\n    }"
  },
  {
    "id" : "4d4f12d3-cc92-49d0-aaf4-fbc1a5cc3765",
    "prId" : 7617,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9e0e77c-339e-484d-b1d4-c1b75a76fa3c",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why do we always set this to `false` during decoding? Does the encoded version not contain the required information? Same question a bit further down.",
        "createdAt" : "2020-10-09T14:09:18Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "79da3603-cd48-4124-9405-88d7fbf10945",
        "parentId" : "c9e0e77c-339e-484d-b1d4-c1b75a76fa3c",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "The encoded version does not contain the required information.\r\nWe have to add the flag to `transaction.proto`. I will do that in a following up PR.  \r\nThis PR is concerned with replacing the field `PartialTransaction#byKeyNodes` by the `byKey` flag in `GenNode`.",
        "createdAt" : "2020-10-09T16:36:28Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "c92aa27d-ab14-4d72-aa5d-dad2b47ef666",
        "parentId" : "c9e0e77c-339e-484d-b1d4-c1b75a76fa3c",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Thanks for the explanation.",
        "createdAt" : "2020-10-12T08:58:56Z",
        "updatedAt" : "2020-10-13T08:21:59Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "028bbced28b92a3143f68f3f65bf48954cba4025",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +356,360 @@          else decodeKeyWithMaintainers(decodeCid, protoFetch.getKeyWithMaintainers).map(Some(_))\n        } yield\n          (ni, NodeFetch(c, templateId, None, actingParties, signatories, stakeholders, key, false))\n\n      case NodeTypeCase.EXERCISE =>"
  },
  {
    "id" : "743f9958-87b8-471c-b955-943d9846b6e2",
    "prId" : 4425,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0b62acd-9887-4731-8cad-c3739639a466",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "```suggestion\r\n  val NidEncoder: EncodeNid[Value.NodeId] = _.index.toString\r\n```",
        "createdAt" : "2020-02-06T16:54:33Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "33710244-c2bc-48dc-a76e-7915e7940597",
        "parentId" : "a0b62acd-9887-4731-8cad-c3739639a466",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "does not work with the `private[lf]`at line 29 ",
        "createdAt" : "2020-02-06T17:50:50Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +34,38 @@  }\n\n  val NidEncoder: EncodeNid[Value.NodeId] = new EncodeNid[Value.NodeId] {\n    override def asString(id: Value.NodeId): String = id.index.toString\n  }"
  },
  {
    "id" : "b7375a46-46da-487e-a821-a1a3cc44d08e",
    "prId" : 4425,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f158e54e-324a-4908-9e22-6fd9e85b7786",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "```suggestion\r\n  val NidDecoder: DecodeNid[Value.NodeId] = s => parseInt(s).fold(...)\r\n```\r\n\r\nand so on for the other instances.",
        "createdAt" : "2020-02-06T16:55:20Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +38,42 @@  }\n\n  val NidDecoder: DecodeNid[Value.NodeId] = new DecodeNid[Value.NodeId] {\n    override def fromString(s: String): Either[DecodeError, Value.NodeId] =\n      scalaz.std.string"
  },
  {
    "id" : "52bf2101-a1c7-47be-8c83-6d79c57ebeaa",
    "prId" : 4425,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a90ef1b-4271-4d0a-b092-a9e8d1de7998",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "ðŸ†’ ",
        "createdAt" : "2020-02-06T16:56:45Z",
        "updatedAt" : "2020-02-07T10:48:52Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "76171aef4450ee340eab6ce616663f8242cf25c9",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +77,81 @@    * @return protobuf wire format contract instance\n    */\n  def encodeContractInstance[Cid](\n      encodeCid: EncodeCid[Cid],\n      coinst: Value.ContractInst[Value.VersionedValue[Cid]],"
  },
  {
    "id" : "ee94e091-0306-4b32-aca6-cd8a31084349",
    "prId" : 4048,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29fa7d93-c314-4009-863d-80339e828aaf",
        "parentId" : null,
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2020-01-15T10:18:38Z",
        "updatedAt" : "2020-01-20T14:12:53Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc2b942e21c744f7822b8e099b9269bc6d0f16bc",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +337,341 @@              decodeKeyWithMaintainers(decodeVal, protoExe.getKeyWithMaintainers).map(k => Some(k))\n          } else Right(None)\n\n          ni <- nodeId\n          targetCoid <- protoExe.decodeContractIdOrStruct(decodeCid, txVersion)("
  },
  {
    "id" : "d2a38d4f-7ffe-4e51-b00b-bc5b7419df26",
    "prId" : 766,
    "prUrl" : "https://github.com/digital-asset/daml/pull/766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44ad458a-0f1b-4518-8cf5-c64d45cbfc2e",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "```suggestion\r\n          decodedControllers <- toPartySet(protoExe.getControllersList)\r\n```",
        "createdAt" : "2019-05-02T16:44:47Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +286,290 @@          templateId <- ValueCoder.decodeIdentifier(protoExe.getTemplateId)\n          actingParties <- toPartySet(protoExe.getActorsList)\n          encodedControllers <- toPartySet(protoExe.getControllersList)\n          controllers <- if (!(txVersion precedes minNoControllers)) {\n            if (encodedControllers.isEmpty) {"
  },
  {
    "id" : "d0b8045d-64c7-42e3-8b0a-5a4423f5d316",
    "prId" : 766,
    "prUrl" : "https://github.com/digital-asset/daml/pull/766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e88d235-e3df-4439-9435-4c0ccdf95647",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "@bitonic As you say,\r\n\r\n> we can't [delete the controllers field] if we keep the validation separate.\r\n\r\nI want to remove the possibility that the field is used for anything but that separate validation, then, rather than leaving the separate `controllers` field open to \"interpretation\", so to speak; depending on how we report validation failures here, that can be as simple as\r\n\r\n```suggestion\r\n            Right(decodedControllers != actingParties)\r\n```\r\n\r\nand the other case on line 291 is `Right(false)`.",
        "createdAt" : "2019-05-02T16:49:54Z",
        "updatedAt" : "2019-05-03T13:49:25Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "296332ca23791717faee6e5d5787d0262be907ad",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +294,298 @@            }\n          } else {\n            Right(encodedControllers)\n          }\n          signatories <- toPartySet(protoExe.getSignatoriesList)"
  },
  {
    "id" : "de6173a2-9789-4ca9-8306-98b483950d4a",
    "prId" : 583,
    "prUrl" : "https://github.com/digital-asset/daml/pull/583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62344b26-2d05-4927-a870-136814af9529",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "We're going with @bitonic's plan elsewhere so when precedes, ignore `retValue`, otherwise fold it (do not use `get` or `nonEmpty`). Also this expression has to occur as the result of the whole containing block; you're just dropping the `Left` or `Right` on the floor right now.",
        "createdAt" : "2019-04-30T13:14:18Z",
        "updatedAt" : "2019-05-06T11:45:15Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "7dba066e451634d93091257340a85b47cb24ff23",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +180,184 @@                s\"As of version $transactionVersion, the controllers and actingParties of an exercise node _must_ be the same, but I got ${e.controllers} as controllers and ${e.actingParties} as actingParties.\"))\n            }\n          }\n\n          retValue match {"
  }
]