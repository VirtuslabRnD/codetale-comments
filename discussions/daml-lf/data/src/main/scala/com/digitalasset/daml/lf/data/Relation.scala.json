[
  {
    "id" : "a1a74b96-5073-4244-9d50-326f763f3166",
    "prId" : 8019,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b09d3bc-da31-4c7f-97c4-a3108c85117b",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Typically we'd use `ACollection.apply` with varargs. If you want to parse an `Iterable`, I think `Relation.from` might be a more Scala-esque name.",
        "createdAt" : "2020-11-23T15:10:51Z",
        "updatedAt" : "2020-11-23T19:15:07Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "c27dc567-ff42-4d8e-8265-309dcbb4fbf2",
        "parentId" : "5b09d3bc-da31-4c7f-97c4-a3108c85117b",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed in https://github.com/digital-asset/daml/pull/8139",
        "createdAt" : "2020-12-02T15:28:27Z",
        "updatedAt" : "2020-12-02T15:28:27Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23fbbff77e4c9db4138e2ceb66ccabf40580ed2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +23,27 @@      r.updated(pair._1, r.getOrElse(pair._1, Set.empty[B]).union(pair._2))\n\n    def apply[A, B](pairs: Iterable[(A, Set[B])]): Relation[A, B] =\n      pairs.foldLeft(immutable.Map.empty[A, Set[B]])(merge)\n"
  }
]