[
  {
    "id" : "e6a86f09-509a-499e-bf82-f5ba475b7e39",
    "prId" : 13506,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13506#pullrequestreview-14582838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb790f85-504a-48a2-8781-9e17037292d3",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Should this class be generic too?",
        "createdAt" : "2016-12-28T16:24:05Z",
        "updatedAt" : "2016-12-28T16:24:05Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      },
      {
        "id" : "4944dc87-685a-4ac7-a2df-54add3014f9d",
        "parentId" : "bb790f85-504a-48a2-8781-9e17037292d3",
        "authorId" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "body" : "Yes it should, but TSX doesn't support generics yet.\r\n\r\nHaving a generic on the props allows you to hack around this and typecast with the generic.\r\n```tsx\r\nconst MyAutoComplete = AutoComplete as React.Commponent<AutoCompleteProps<MyDataItem>, {}>;\r\n\r\nrender(<MyAutoComplete />);\r\n```",
        "createdAt" : "2016-12-28T16:31:10Z",
        "updatedAt" : "2016-12-28T16:31:10Z",
        "lastEditedBy" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "tags" : [
        ]
      },
      {
        "id" : "72a3ec6f-2092-42d2-8d95-6763d2d0440e",
        "parentId" : "bb790f85-504a-48a2-8781-9e17037292d3",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Ah, Microsoft/TypeScript#6395. OK.",
        "createdAt" : "2016-12-28T16:40:15Z",
        "updatedAt" : "2016-12-28T16:40:15Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "af3a912ebf95b195038997fac3822e34b260760b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +560,564 @@        textFieldStyle?: React.CSSProperties;\n    }\n    export class AutoComplete extends React.Component<AutoCompleteProps<any>, {}> {\n        static noFilter: () => boolean;\n        static defaultFilter: (searchText: string, key: string) => boolean;"
  }
]