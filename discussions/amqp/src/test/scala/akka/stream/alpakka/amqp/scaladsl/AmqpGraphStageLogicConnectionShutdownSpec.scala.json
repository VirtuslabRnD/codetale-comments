[
  {
    "id" : "deda7944-fe15-495a-8aff-89ef2fb530f7",
    "prId" : 887,
    "prUrl" : "https://github.com/akka/alpakka/pull/887#pullrequestreview-112247430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b44656-f18d-4d3d-bb94-71ae66ceefde",
        "parentId" : null,
        "authorId" : "b72d8a6d-804d-4bd9-b92d-199fc7f129e7",
        "body" : "A few notes:\r\n\r\nI wouldn't have to require `AmqpProxyConnection` as the self-type (`Connection` should be enough), except I couldn't figure out any scala gymnastics to both override `addShutdownListener` and delegate to the super class' default behavior without a stack overflow (infinite loop of this function calling itself). So I require the proxy and get direct access to the delegate.\r\n\r\nI could make this trait a bit more general purpose by giving it its own delegate, but it doesn't seem worth the effort to me. Something like this:\r\n\r\n```scala\r\ntrait ShutdownListenerTracking { self: Connection => \r\n  protected def delegate: Connection\r\n\r\n  override def addShutdownListener(shutdownListener: ShutdownListner): Unit = {\r\n    shutdownsAdded.incrementAndGet\r\n    delegate.addShutdownListener(shutdownListener)\r\n  }\r\n}\r\n```",
        "createdAt" : "2018-04-15T18:53:30Z",
        "updatedAt" : "2018-04-16T02:29:30Z",
        "lastEditedBy" : "b72d8a6d-804d-4bd9-b92d-199fc7f129e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9686d2cf991af99670b1fd6588f159e2daeeb58",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@  }\n\n  trait ShutdownListenerTracking { self: AmqpProxyConnection =>\n    override def addShutdownListener(shutdownListener: ShutdownListener): Unit = {\n      shutdownsAdded.incrementAndGet()"
  },
  {
    "id" : "5f8f7d66-416f-4036-81d0-de7040647462",
    "prId" : 887,
    "prUrl" : "https://github.com/akka/alpakka/pull/887#pullrequestreview-112247448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d678bafb-fc74-4dd3-abec-482b18907f97",
        "parentId" : null,
        "authorId" : "b72d8a6d-804d-4bd9-b92d-199fc7f129e7",
        "body" : "@juanjoDiaz I mostly took your advice here but had to override this particular variant of the various, overloaded `newConnection` implementations as they all delegate to this one. ",
        "createdAt" : "2018-04-15T18:54:20Z",
        "updatedAt" : "2018-04-16T02:29:30Z",
        "lastEditedBy" : "b72d8a6d-804d-4bd9-b92d-199fc7f129e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9686d2cf991af99670b1fd6588f159e2daeeb58",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@\n    val connectionFactory = new ConnectionFactory() {\n      override def newConnection(es: ExecutorService, ar: AddressResolver, name: String): Connection =\n        new AmqpProxyConnection(super.newConnection(es, ar, name)) with ShutdownListenerTracking\n    }"
  }
]