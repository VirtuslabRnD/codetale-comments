[
  {
    "id" : "978b9207-6931-481f-a826-9dbb5d7d3630",
    "prId" : 9352,
    "prUrl" : "https://github.com/apache/kafka/pull/9352#pullrequestreview-506976569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66bc8b7d-c257-41e3-805f-6aedff65791d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Is this function going to be used for non-testing code in the future?",
        "createdAt" : "2020-10-12T22:44:29Z",
        "updatedAt" : "2020-10-13T00:38:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1e21cf9a-43c2-4054-970a-2ee515e1ddd8",
        "parentId" : "66bc8b7d-c257-41e3-805f-6aedff65791d",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I think we will need it to implement the leader deferred fsync or any other optimization which allows the followers to read unflushed data from the leader. I decided to add it to the interface since we have a trivial implementation for it in `KafkaMetadataLog` already. We can save it for later if you prefer.",
        "createdAt" : "2020-10-12T23:10:33Z",
        "updatedAt" : "2020-10-13T00:38:58Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "6a794cf1-dfe0-41f4-b413-ee2d74df8174",
        "parentId" : "66bc8b7d-c257-41e3-805f-6aedff65791d",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nah, I'm just curious to see what's in your future plan. Let's just keep it.",
        "createdAt" : "2020-10-12T23:34:47Z",
        "updatedAt" : "2020-10-13T00:38:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bceb07ff9233d969d13108c3d15fefbe665ed873",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +112,116 @@     * Get the last offset which has been flushed to disk.\n     */\n    long lastFlushedOffset();\n\n    /**"
  },
  {
    "id" : "c0ee16fd-b81e-47be-9bb4-60961086d1c6",
    "prId" : 9512,
    "prUrl" : "https://github.com/apache/kafka/pull/9512#pullrequestreview-542430898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b60313c1-8f55-466f-bbb8-5bcba3208c8d",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Do we also need an api to list snapshots?",
        "createdAt" : "2020-12-01T21:44:15Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "a5b05230-8031-4b6f-8084-376eae565783",
        "parentId" : "b60313c1-8f55-466f-bbb8-5bcba3208c8d",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yeah. I think we will need that when we implement deleting snapshot. Do you mind if I add this later?\r\n\r\nAlso, I think we are going to need a `readLatestSnapshot()` when the state machine (controller or broker) needs to load the latest valid snapshot. I was planning to add this later when the case was clear to me.",
        "createdAt" : "2020-12-02T01:30:23Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "f853c50e61e179daf239a46fd8b77bbae6eeefca",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +161,165 @@     * @return a writable snapshot\n     */\n    RawSnapshotWriter createSnapshot(OffsetAndEpoch snapshotId) throws IOException;\n\n    /**"
  }
]