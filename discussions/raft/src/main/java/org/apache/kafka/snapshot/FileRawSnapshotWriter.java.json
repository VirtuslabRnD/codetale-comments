[
  {
    "id" : "93ae9752-6ad5-4a7b-a82a-4c52cad7a1c9",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575258837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22a119ff-ac6b-4f52-9f89-40bf8a92aeee",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "What do you think about keeping this signature as `void append(ByterBuffer buffer)`, having a static function that knows how to convert a `BaseRecords` to `ByteBuffer` and moving this responsibility to the `KafkaRaftClient`?\r\n\r\nIf I am not mistake, as of right now it is only the `KafkaRaftClient` that needs to deal with this mismatch.",
        "createdAt" : "2021-01-19T19:17:27Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "759e3c7a-b742-4abb-ac24-ecb9e2c95897",
        "parentId" : "22a119ff-ac6b-4f52-9f89-40bf8a92aeee",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "In fact, I change the signature to keep consistent with `FileRawSnapshotReader`, I'm also a little wobbly to make these changes.",
        "createdAt" : "2021-01-20T15:26:18Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "f0859616-fd54-43db-897c-077156cc7df3",
        "parentId" : "22a119ff-ac6b-4f52-9f89-40bf8a92aeee",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "> I change the signature to keep consistent with FileRawSnapshotReader\r\n\r\nOkay. I think this is something that I struggled with when creating the original APIs. I am okay with \"inconsistent\" APIs since `RawSnapshot{Reader,Writer}` are internal interfaces to the raft client and are not exposed to the state machine (controller).\r\n\r\nI think this \"inconsistency\" will go away when we implement the long term solution.",
        "createdAt" : "2021-01-21T00:27:00Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "21aab50b-6d99-4364-b062-dbded2ab27db",
        "parentId" : "22a119ff-ac6b-4f52-9f89-40bf8a92aeee",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "Done, make parameter type to MemoryRecords.",
        "createdAt" : "2021-01-21T09:55:33Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "cdcb7db8-58d7-49ba-9528-9cf98f6f1bec",
        "parentId" : "22a119ff-ac6b-4f52-9f89-40bf8a92aeee",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "Keep 2 methods here, one for MemoryRecords and one for UnalignedMemoryRecords.",
        "createdAt" : "2021-01-25T10:34:04Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +70,74 @@                    String.format(\"Append is not supported. Snapshot is already frozen: id = %s; temp path = %s\", snapshotId, tempSnapshotPath)\n            );\n        }\n        Utils.writeFully(channel, records.buffer());\n    }"
  },
  {
    "id" : "de969fa1-f6a9-4de6-b95a-f9b5b61c4997",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575096217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0993ae8-73c5-4d9a-8ee1-e6b0e2e51e35",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It might be helpful to have an `append(MemoryRecords)`. That saves an annoying conversion when we are generating the snapshot instead of copying it from the leader.",
        "createdAt" : "2021-01-25T06:47:43Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +55,59 @@\n    @Override\n    public void append(UnalignedMemoryRecords records) throws IOException {\n        if (frozen) {\n            throw new IllegalStateException("
  }
]