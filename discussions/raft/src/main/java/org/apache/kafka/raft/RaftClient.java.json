[
  {
    "id" : "4d265be4-84ec-4219-aede-bbd166942a64",
    "prId" : 9418,
    "prUrl" : "https://github.com/apache/kafka/pull/9418#pullrequestreview-510688223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "908f3a74-aaa7-4393-b544-4ca0032d7462",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "How about either \r\n```\r\nOptionalLong scheduleAppend(int epoch, List<T> records);\r\n```\r\nor\r\n```\r\nvoid scheduleAppend(int epoch, List<T> records) throws BusyException;\r\n```\r\n\r\nI am okay with either solution but I am wondering why did you decide to return a `null` for this case instead of throwing some exception?",
        "createdAt" : "2020-10-14T22:45:22Z",
        "updatedAt" : "2020-10-27T03:04:10Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "37fa46c1-c201-44bf-b56d-0247470e723a",
        "parentId" : "908f3a74-aaa7-4393-b544-4ca0032d7462",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, this was more of a workaround until we thought of something better. The current idea we are thinking about is letting the Raft layer return a backoff time, so the type would semantically be `Either[Offset, BackoffMs]`.",
        "createdAt" : "2020-10-16T17:55:29Z",
        "updatedAt" : "2020-10-27T03:04:10Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "fac5c0a9507f9f40f99dac017242d12500a97d5d",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +70,74 @@     *         being reached).\n     */\n    Long scheduleAppend(int epoch, List<T> records);\n\n    /**"
  },
  {
    "id" : "607f4f22-2306-486d-a791-6848c008f7b8",
    "prId" : 9482,
    "prUrl" : "https://github.com/apache/kafka/pull/9482#pullrequestreview-515087361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a63befd4-0fe5-45b1-b599-d8480e4e8777",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "I think it is okay as the fix may be non-trivial but technically `scheduleAppend` will accept records even if no `Listener` has received a `handleClaim`.",
        "createdAt" : "2020-10-22T19:43:01Z",
        "updatedAt" : "2020-11-02T18:54:18Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "082ad473-f811-418b-b518-fc8a6f673d77",
        "parentId" : "a63befd4-0fe5-45b1-b599-d8480e4e8777",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, I don't see a strong need to be too strict about this for now.",
        "createdAt" : "2020-10-22T20:19:13Z",
        "updatedAt" : "2020-11-02T18:54:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "65494771be58190214d67d2d27bdd3f853fdaa6c",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +91,95 @@     *         being reached).\n     */\n    Long scheduleAppend(int epoch, List<T> records);\n\n    /**"
  },
  {
    "id" : "3fe68779-235d-4fc9-851d-3dbeb3677769",
    "prId" : 9482,
    "prUrl" : "https://github.com/apache/kafka/pull/9482#pullrequestreview-520110313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bb64fea-cbe4-46fc-93cc-889499d8b487",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "What about just name as `handleBecomeLeader`?",
        "createdAt" : "2020-10-29T18:06:18Z",
        "updatedAt" : "2020-11-02T18:54:18Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "1d6a8eed-86cf-4b32-8701-8dd218ac772d",
        "parentId" : "0bb64fea-cbe4-46fc-93cc-889499d8b487",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, I considered using `handleBecomeLeader` and `handleResignLeader`. In the end, I decided to use the more concise `handleClaim` and `handleResign` names which are used in the kip-500 branch. ",
        "createdAt" : "2020-10-29T21:43:05Z",
        "updatedAt" : "2020-11-02T18:54:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "65494771be58190214d67d2d27bdd3f853fdaa6c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +50,54 @@         * @param epoch the claimed leader epoch\n         */\n        default void handleClaim(int epoch) {}\n\n        /**"
  },
  {
    "id" : "7fef6805-6dcd-44cc-866b-6c4eaefb65c0",
    "prId" : 9512,
    "prUrl" : "https://github.com/apache/kafka/pull/9512#pullrequestreview-543366333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e65b899-a294-4422-8e17-3859f37e18ef",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Do we assume the offset is below the high watermark?",
        "createdAt" : "2020-12-01T21:22:35Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "1e9ba169-3e33-4794-84c0-af389416ad33",
        "parentId" : "0e65b899-a294-4422-8e17-3859f37e18ef",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Is there a specific reason why you are asking this? We don't currently check for this. I will add a check for this and we can relax this later if we need to.",
        "createdAt" : "2020-12-02T01:10:12Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "e10ce20f-f7dd-4798-b55c-78afaf7a3aa4",
        "parentId" : "0e65b899-a294-4422-8e17-3859f37e18ef",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Just curious. Thought it might be worth mentioning the expectation in the javadoc.",
        "createdAt" : "2020-12-02T21:13:40Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "3594bc73-a86c-4e4f-b7b9-6b18a3c835de",
        "parentId" : "0e65b899-a294-4422-8e17-3859f37e18ef",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yeah. I'll create a Jira to validate the snapshot id. We should perform at least the following validations:\r\n1. it is less than the high-watermark.\r\n2. it is a valid epoch and end offset based on the log. I think we can use the leader epoch cache to check this.",
        "createdAt" : "2020-12-02T21:22:30Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "f632ff22-7b85-4c0b-b0ab-e81babb5c36a",
        "parentId" : "0e65b899-a294-4422-8e17-3859f37e18ef",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Create https://issues.apache.org/jira/browse/KAFKA-10800",
        "createdAt" : "2020-12-03T01:14:34Z",
        "updatedAt" : "2020-12-07T19:26:44Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "f853c50e61e179daf239a46fd8b77bbae6eeefca",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +110,114 @@     * details on how to use this object.\n     *\n     * @param snapshotId the end offset and epoch that identifies the snapshot\n     * @return a writable snapshot\n     */"
  }
]