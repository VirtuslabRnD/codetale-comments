[
  {
    "id" : "eb65d6b6-96c4-4377-a846-4a264aa44d08",
    "prId" : 10085,
    "prUrl" : "https://github.com/apache/kafka/pull/10085#pullrequestreview-648619488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2541bb65-8da8-4ee7-a694-7a47f52aaebd",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Maybe a useful `Invariant` we can add here is that there always exists a snapshot corresponding to the log start offset.",
        "createdAt" : "2021-04-28T20:48:15Z",
        "updatedAt" : "2021-04-29T20:11:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "7c9e2d41-4aa5-4100-9f5d-219ee7f67d08",
        "parentId" : "2541bb65-8da8-4ee7-a694-7a47f52aaebd",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yes. Good idea. Done.",
        "createdAt" : "2021-04-29T20:16:18Z",
        "updatedAt" : "2021-04-29T20:16:19Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbbf95304c34a52855ad56d51561e822d64ecc54",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +723,727 @@                time,\n                random,\n                serde\n            );\n            node.initialize();"
  },
  {
    "id" : "932ccf8f-304a-47eb-a4e5-887dcaa34138",
    "prId" : 10085,
    "prUrl" : "https://github.com/apache/kafka/pull/10085#pullrequestreview-649636988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9f28a36-d60a-43b4-ba39-b9914be93aef",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Is there any noticeable change in simulation run time? It looks reasonable, but thought I'd check.",
        "createdAt" : "2021-04-30T19:25:26Z",
        "updatedAt" : "2021-04-30T19:25:27Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "ddd1b349-5faf-4a63-8ba8-fd4da296e244",
        "parentId" : "f9f28a36-d60a-43b4-ba39-b9914be93aef",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Good catch. I made some improvements After the improvements the simulation time went from 1 minute in trunk to a 1:41 minutes for this PR. It looks like a good amount of that time is spent in MockLog.validateOffsetAndEpoch. Let me see what we can do but we can also remove that functionality from the verification.",
        "createdAt" : "2021-04-30T20:59:32Z",
        "updatedAt" : "2021-04-30T21:03:44Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "a34b9486-f5f4-4660-ab08-b9f44f9188a1",
        "parentId" : "f9f28a36-d60a-43b4-ba39-b9914be93aef",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Okay. The simulations now take less than a minute in total on my machine which is what I see on trunk in my machine.",
        "createdAt" : "2021-04-30T21:40:28Z",
        "updatedAt" : "2021-04-30T21:40:29Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbbf95304c34a52855ad56d51561e822d64ecc54",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +968,972 @@    }\n\n    private static class SnapshotAtLogStart implements Invariant {\n        final Cluster cluster;\n"
  },
  {
    "id" : "0d5848f1-2f06-4911-b0c2-860d8c814347",
    "prId" : 10323,
    "prUrl" : "https://github.com/apache/kafka/pull/10323#pullrequestreview-612988739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82cd3877-8294-4cfa-88fc-93aff8e4f19f",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about setting `@Timeout` instead of `MAX_ITERATIONS`?",
        "createdAt" : "2021-03-16T08:57:33Z",
        "updatedAt" : "2021-03-17T22:42:58Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "fab16de9e3f1644bfdbf3fabafe0a1ee42b23de6",
    "line" : 600,
    "diffHunk" : "@@ -1,1 +431,435 @@\n        void runUntil(Supplier<Boolean> exitCondition) {\n            for (int iteration = 0; iteration < MAX_ITERATIONS; iteration++) {\n                if (exitCondition.get()) {\n                    break;"
  },
  {
    "id" : "73771be8-aaed-4c9a-a20d-e42bbd61c2f8",
    "prId" : 10323,
    "prUrl" : "https://github.com/apache/kafka/pull/10323#pullrequestreview-614864870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159ee107-2673-4de5-9185-3e986ccc7cf2",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Hmm. These simulation tests are already the slowest suite in `raft:test`. I `git fetch` the PR and it looks like they still run when calling `./gradlew raft:test`. Is there away to set this to a smaller number (2) as the default and override it if the user wants to run them with 100 tries?\r\n\r\nBtw, `5` (number of possible voters) * `6` (number of possible observers) is `30` which is much smaller than `100`. I assume that the library will run the same configuration with multiple seeds.",
        "createdAt" : "2021-03-17T21:53:40Z",
        "updatedAt" : "2021-03-17T22:42:58Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "9518521c-db95-463d-8b2d-a8697997d465",
        "parentId" : "159ee107-2673-4de5-9185-3e986ccc7cf2",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "The PR is reducing the number of runs by quite a lot. I justified this on account of the randomized seed which allow more of the builds to be doing useful (i.e. non-redundant) work. I think there are a bunch of improvements we can make to improve execution time overall. Also I suspect there was a regression since these used to execute much faster. Really I'd like to get to the point where we can run thousands of simulations on each build without significantly adding build time.",
        "createdAt" : "2021-03-17T22:23:42Z",
        "updatedAt" : "2021-03-17T22:42:58Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "a3ebfd8b-c5be-4f24-a687-9acbd7cbd6d2",
        "parentId" : "159ee107-2673-4de5-9185-3e986ccc7cf2",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I was inspired to take a look and found the big regression. The way we catch NoSuchElementException in `MockLog` was killing the performance of these tests because of need to fill in the stack trace. I tested locally with a fix and it brought the local time for this test from over 4 minutes to 48 seconds. On trunk, this test is taking more than 16 minutes for me, so overall this patch will be a major improvement.",
        "createdAt" : "2021-03-17T22:43:01Z",
        "updatedAt" : "2021-03-17T22:43:01Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "2b548017-36dc-4e3d-a52b-d224125b86c0",
        "parentId" : "159ee107-2673-4de5-9185-3e986ccc7cf2",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Very cool. I made the same change to `KafkaMetadataLog`: https://github.com/apache/kafka/pull/10344",
        "createdAt" : "2021-03-17T23:25:53Z",
        "updatedAt" : "2021-03-17T23:25:54Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "fab16de9e3f1644bfdbf3fabafe0a1ee42b23de6",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +109,113 @@    private static final int LINGER_MS = 0;\n\n    @Property(tries = 100)\n    void canElectInitialLeader(\n        @ForAll Random random,"
  },
  {
    "id" : "15ff7643-475d-4152-b3b8-e35b24610be2",
    "prId" : 10323,
    "prUrl" : "https://github.com/apache/kafka/pull/10323#pullrequestreview-614831057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cec28f06-4a56-4049-bf5e-b687b9a99e8c",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "I assume that `@ForAll` will cause the library to run this test multiple times with different random seeds. If so is there a way to tell the library to only run it once for some random seed?",
        "createdAt" : "2021-03-17T21:56:23Z",
        "updatedAt" : "2021-03-17T22:42:58Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "a272910f-ef99-4e62-a7c1-007f2da00866",
        "parentId" : "cec28f06-4a56-4049-bf5e-b687b9a99e8c",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Probably, but here I want it to run with multiple random seeds.",
        "createdAt" : "2021-03-17T22:15:56Z",
        "updatedAt" : "2021-03-17T22:42:58Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "fab16de9e3f1644bfdbf3fabafe0a1ee42b23de6",
    "line" : 310,
    "diffHunk" : "@@ -1,1 +111,115 @@    @Property(tries = 100)\n    void canElectInitialLeader(\n        @ForAll Random random,\n        @ForAll @IntRange(min = 1, max = 5) int numVoters,\n        @ForAll @IntRange(min = 0, max = 5) int numObservers"
  }
]