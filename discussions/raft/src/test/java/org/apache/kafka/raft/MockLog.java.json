[
  {
    "id" : "80cb74db-0a1b-4cef-97b6-6aa12cd12c12",
    "prId" : 9332,
    "prUrl" : "https://github.com/apache/kafka/pull/9332#pullrequestreview-495801315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab50bca6-7e27-409b-ae73-9b91d9e0cc8b",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "So the idea is to wipe out the older epoch (as epoch - 1)'s end offset, and the search for (epoch - 1) would give (epoch - 2) end offset? In the case where we put leader change message in mock log, this should never happen right?",
        "createdAt" : "2020-09-24T06:15:50Z",
        "updatedAt" : "2020-09-24T06:19:03Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "34d06f07-f557-40d8-8731-0be4cb180a1e",
        "parentId" : "ab50bca6-7e27-409b-ae73-9b91d9e0cc8b",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "There's no guarantee that the leader change message ever gets committed. It is even possible for the leadership to change multiple times before a leader change message can be committed. There is no correctness problem with the current implementation. I just wanted the behavior to be consistent with `LeaderEpochFileCache`.",
        "createdAt" : "2020-09-24T17:36:02Z",
        "updatedAt" : "2020-09-24T17:36:02Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "14e0cab5e335b2619d8f17c999aac6a1c648b465",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +313,317 @@    public void initializeLeaderEpoch(int epoch) {\n        long startOffset = endOffset().offset;\n        epochStartOffsets.removeIf(epochStartOffset ->\n            epochStartOffset.startOffset >= startOffset || epochStartOffset.epoch >= epoch);\n        epochStartOffsets.add(new EpochStartOffset(epoch, startOffset));"
  }
]