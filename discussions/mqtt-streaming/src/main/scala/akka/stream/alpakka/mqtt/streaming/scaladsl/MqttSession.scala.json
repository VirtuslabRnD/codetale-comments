[
  {
    "id" : "ae9ca0f4-31e8-4e8e-a6da-763fdfbc50fd",
    "prId" : 1614,
    "prUrl" : "https://github.com/akka/alpakka/pull/1614#pullrequestreview-220297843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7571d61-9009-4db2-b0aa-def7ce507941",
        "parentId" : null,
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "Nice. Captures the failure also.",
        "createdAt" : "2019-03-28T22:07:35Z",
        "updatedAt" : "2019-03-28T22:07:45Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "236bed19b825bf5925436be1e66dfeb8b2a959a8",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +506,510 @@                      case _: RemotePacketRouter.CannotRoute => ByteString.empty\n                    }\n\n                case Command(cp: UnsubAck, _, _) =>\n                  val reply = Promise[Unpublisher.ForwardUnsubAck.type]"
  },
  {
    "id" : "2dbc9096-b8ab-44ed-b74e-8cb52b11db60",
    "prId" : 1577,
    "prUrl" : "https://github.com/akka/alpakka/pull/1577#pullrequestreview-213822508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82087fd2-7b4f-4d4c-97d8-44ab31629cd8",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Great to clear those from the logs when they shouldn't concern anyone.",
        "createdAt" : "2019-03-13T09:15:31Z",
        "updatedAt" : "2019-07-01T06:16:48Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "e096ddb829373b5b523313c9d34a0e4cb9474e79",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +552,556 @@            )\n            .recover {\n              case _: WatchedActorTerminatedException => ByteString.empty\n            }\n            .filter(_.nonEmpty)"
  },
  {
    "id" : "7aefe46f-3f37-4ef9-9370-3f88dd2cc09b",
    "prId" : 1414,
    "prUrl" : "https://github.com/akka/alpakka/pull/1414#pullrequestreview-191961795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "595d9d20-78a6-4e4b-974d-72dc8ad2b494",
        "parentId" : null,
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "Slight optimisation to reduce log messages. We are explicitly watching an actor so don't send it a message when terminated. :-)",
        "createdAt" : "2019-01-13T06:20:05Z",
        "updatedAt" : "2019-01-14T06:41:27Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4ba4c275adbbf65910355a0c36ab7398019986",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +159,163 @@                  case _ =>\n                    clientConnector ! ClientConnector.ConnectionLost\n                }\n                NotUsed\n            }"
  },
  {
    "id" : "522f4981-8d81-4826-9977-ab7c00594789",
    "prId" : 1394,
    "prUrl" : "https://github.com/akka/alpakka/pull/1394#pullrequestreview-187287872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bccbfca8-0595-4b32-b783-fe532d043385",
        "parentId" : null,
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "This is the crux of the change for the PR. When our connect stream ends it means that the session has moved to a disconnected state. We, therefore, need to kill upstream.",
        "createdAt" : "2018-12-21T06:53:47Z",
        "updatedAt" : "2018-12-21T06:53:47Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "787a0152f85263b04b2c0fb8f595dd6cf5cdff73",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +169,173 @@                }\n                .watchTermination()((_, done) => done.foreach(_ => killSwitch.shutdown())))\n            )\n          case Command(cp: PubAck, _) =>\n            val reply = Promise[Consumer.ForwardPubAck.type]"
  },
  {
    "id" : "a52059a3-99f2-4600-bf0f-4a119346d9bb",
    "prId" : 1394,
    "prUrl" : "https://github.com/akka/alpakka/pull/1394#pullrequestreview-187296609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eae9c236-eb2e-429a-a702-399d1de7ffb6",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Indentation looks weird, but the scalafmt check is happy.",
        "createdAt" : "2018-12-21T07:50:43Z",
        "updatedAt" : "2018-12-21T07:52:19Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "787a0152f85263b04b2c0fb8f595dd6cf5cdff73",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +166,170 @@                  PubRel(packetId).encode(ByteString.newBuilder).result()\n              }.mapError {\n                  case ClientConnector.PingFailed => ActorMqttClientSession.PingFailed\n                }\n                .watchTermination()((_, done) => done.foreach(_ => killSwitch.shutdown())))"
  },
  {
    "id" : "58606517-25a0-457a-8d58-dcb16898b85e",
    "prId" : 1327,
    "prUrl" : "https://github.com/akka/alpakka/pull/1327#pullrequestreview-174557459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a6a897c-812a-42e2-9c85-dedcc27bc9ae",
        "parentId" : null,
        "authorId" : "7393f2ae-68ce-4ca1-8eea-cc4b5e9f0769",
        "body" : "Any implications here for a broken/malicious client that e.g. sets the DUP flag when it isn't really one?",
        "createdAt" : "2018-11-13T18:28:28Z",
        "updatedAt" : "2018-11-16T08:00:54Z",
        "lastEditedBy" : "7393f2ae-68ce-4ca1-8eea-cc4b5e9f0769",
        "tags" : [
        ]
      },
      {
        "id" : "73020f98-ab27-4df2-9b1c-cfb23b51a437",
        "parentId" : "1a6a897c-812a-42e2-9c85-dedcc27bc9ae",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "In this instance, a publish will be dropped given that there's no packet id already registered.",
        "createdAt" : "2018-11-13T19:54:00Z",
        "updatedAt" : "2018-11-16T08:00:54Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "d550f756cff6ef0184d51b8f6f8dddadce6673ac",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +243,247 @@            case Unsubscriber.ForwardUnsubAck(carry: Option[A] @unchecked) => Right(Event(cp, carry))\n          }\n        case Right(cp @ Publish(flags, _, Some(packetId), _)) if flags.contains(ControlPacketFlags.DUP) =>\n          val reply = Promise[Consumer.ForwardPublish.type]\n          consumerPacketRouter ! RemotePacketRouter.Route(None,"
  },
  {
    "id" : "4f47133a-c096-48f6-b41f-1760d0c36d19",
    "prId" : 1315,
    "prUrl" : "https://github.com/akka/alpakka/pull/1315#pullrequestreview-173497802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "415dd07b-f840-433f-b855-88e068acd579",
        "parentId" : null,
        "authorId" : "7393f2ae-68ce-4ca1-8eea-cc4b5e9f0769",
        "body" : "Is there benefit in allowing `Subscribe`, `Unsubscribe` here as well? Or perhaps as it is now, resending those remains the client's responsibility?",
        "createdAt" : "2018-11-09T16:46:52Z",
        "updatedAt" : "2018-11-12T08:48:02Z",
        "lastEditedBy" : "7393f2ae-68ce-4ca1-8eea-cc4b5e9f0769",
        "tags" : [
        ]
      },
      {
        "id" : "721fdfad-5f34-4818-9ef9-fb49f406d94a",
        "parentId" : "415dd07b-f840-433f-b855-88e068acd579",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "I think those ones should remain the client responsibility. They are idempotent and the session isnâ€™t persistent about their retries ie you really should have a connection established. ",
        "createdAt" : "2018-11-09T16:51:08Z",
        "updatedAt" : "2018-11-12T08:48:02Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6963c888e242ef370b57460c2d840eb1a1201f",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +360,364 @@    case Command(cp: Publish, carry) =>\n      serverConnector ! ServerConnector.PublishReceivedLocally(cp, carry)\n    case c: Command[_] => throw new IllegalStateException(c + \" is not a server command that can be sent directly\")\n  }\n"
  }
]