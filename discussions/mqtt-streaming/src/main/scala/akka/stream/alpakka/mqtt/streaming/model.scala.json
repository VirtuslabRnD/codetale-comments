[
  {
    "id" : "4ae12984-6dae-4fb4-976f-d1111ba545df",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-159712762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89bb567d-e010-4201-8150-99479701a628",
        "parentId" : null,
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "@2m I've arrived at this naming convention for mapping Scala's `Either` to Java. I use it now in a couple of places. It tends to read well when used.",
        "createdAt" : "2018-09-28T03:52:13Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 559,
    "diffHunk" : "@@ -1,1 +557,561 @@        case Left(_) => Optional.empty()\n      }\n  }\n\n  // 1.5.3 UTF-8 encoded strings"
  },
  {
    "id" : "54c8b85c-7c53-49f8-a1a8-1820cf887225",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-166750571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dfa0030-0732-473a-b957-9dfcc0683efe",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "I wonder if `create` methods instead of constructors would make the Java API align more with the Scala API.",
        "createdAt" : "2018-10-19T10:52:30Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "0c6329ca-861e-4c01-8deb-c45b1777d3a9",
        "parentId" : "4dfa0030-0732-473a-b957-9dfcc0683efe",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "I'm a little conflicted here as I've never really understood why we prefer Java developers to use a `create` method. In Java, it is idiomatic to create an object by using `new`. They'd be a lot of change for me to affect here, so I'd like to better understand why `create` would be preferred.",
        "createdAt" : "2018-10-19T19:07:43Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      },
      {
        "id" : "07b5b23a-fa13-41ff-9051-a19ceb16d5b8",
        "parentId" : "4dfa0030-0732-473a-b957-9dfcc0683efe",
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Yes, I guess you're right about `new` and Java. It's mostly that I find factory methods easier to evolve.",
        "createdAt" : "2018-10-20T14:12:28Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 283,
    "diffHunk" : "@@ -1,1 +281,285 @@   * http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html\n   */\n  def this(flags: ControlPacketFlags, topicName: String, payload: ByteString) =\n    this(flags, topicName, None, payload)\n"
  },
  {
    "id" : "734f6da7-cce8-429a-a44b-e045a25e5f2f",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-166677799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d47c1a2-f1fe-46b8-bc87-03a97f60d66f",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Offer a `getTopicFilters: java.util.List[akka.japi.Pair[String, ControlPacketFlags]]` as Java API, please.",
        "createdAt" : "2018-10-19T11:11:38Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "c6725cf2-3cf9-4fe6-a14f-42bffbbe4553",
        "parentId" : "4d47c1a2-f1fe-46b8-bc87-03a97f60d66f",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "Done.",
        "createdAt" : "2018-10-19T20:07:05Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +340,344 @@ */\nfinal case class Subscribe @InternalApi private[streaming] (packetId: PacketId,\n                                                            topicFilters: Seq[(String, ControlPacketFlags)])\n    extends ControlPacket(ControlPacketType.SUBSCRIBE, ControlPacketFlags.ReservedSubscribe) {\n"
  },
  {
    "id" : "0d93e610-9285-487c-8f56-8298e2d33167",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-166750571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "813ace7a-5994-4c6e-966e-0b60acdb58d6",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Would it make sense to offer `create` methods for the important `ControlPacket` subtypes to get `Command.pubAck(packetId)`?",
        "createdAt" : "2018-10-19T11:14:23Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "490ebedb-480a-4d08-8a63-34f251a83572",
        "parentId" : "813ace7a-5994-4c6e-966e-0b60acdb58d6",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "Again, I'm conflicted about `create`. The Java developer can use `new` here, quite nicely.",
        "createdAt" : "2018-10-19T20:08:31Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      },
      {
        "id" : "d5a4698e-4037-4661-83b9-96d52aede7fb",
        "parentId" : "813ace7a-5994-4c6e-966e-0b60acdb58d6",
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "This would work nice for Scala, as well: instead of `Command(Connect(clientId,...))` you'd have `Command.connect(clientId)`\r\nBut yeah, just an idea.",
        "createdAt" : "2018-10-20T14:16:53Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 1065,
    "diffHunk" : "@@ -1,1 +1063,1067 @@  def apply[A](command: ControlPacket, carry: A): Command[A] =\n    new Command(command, carry)\n}\n\n/**"
  }
]