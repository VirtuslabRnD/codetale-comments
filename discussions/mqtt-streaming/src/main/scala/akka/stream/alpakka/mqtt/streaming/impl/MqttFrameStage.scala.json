[
  {
    "id" : "6c8bddd0-32dd-411c-9b80-a8d49b9f7c0b",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-159307667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e010d70d-c8ec-490a-9f61-f11863924096",
        "parentId" : null,
        "authorId" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "body" : "appending to a list is not a fast operation. May I suggest switching to a Vector?",
        "createdAt" : "2018-09-27T06:52:58Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "tags" : [
        ]
      },
      {
        "id" : "41720719-159a-46a9-a9a3-030a79b17f78",
        "parentId" : "e010d70d-c8ec-490a-9f61-f11863924096",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "You may! Done. https://www.youtube.com/watch?v=fVq4_HhBK8Y",
        "createdAt" : "2018-09-27T06:59:45Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      },
      {
        "id" : "5ccbe148-5bf3-429e-966d-55070c7bbd5d",
        "parentId" : "e010d70d-c8ec-490a-9f61-f11863924096",
        "authorId" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "body" : ":D",
        "createdAt" : "2018-09-27T07:06:38Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@          if (bytesReceived.size >= packetSize) {\n            val (b0, b1) = bytesReceived.splitAt(packetSize)\n            frames(maxPacketSize, b1, bytesToEmit :+ b0)\n          } else {\n            Right((bytesToEmit, bytesReceived))"
  },
  {
    "id" : "2d86c7ae-d4be-4758-86bf-80d8ac5626ac",
    "prId" : 1225,
    "prUrl" : "https://github.com/akka/alpakka/pull/1225#pullrequestreview-159307813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84a3a776-8aef-438a-ad76-b43750657735",
        "parentId" : null,
        "authorId" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "body" : "Are there any overflow/underflow considerations to be made here?",
        "createdAt" : "2018-09-27T06:59:32Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "1c2cd010-c910-4dc3-a866-54d600f22795",
        "tags" : [
        ]
      },
      {
        "id" : "74ceefa1-0147-4be6-b175-609a2aaeb798",
        "parentId" : "84a3a776-8aef-438a-ad76-b43750657735",
        "authorId" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "body" : "I don't believe so... have I missed something?",
        "createdAt" : "2018-09-27T07:07:06Z",
        "updatedAt" : "2018-10-25T12:27:17Z",
        "lastEditedBy" : "c82885b6-397c-46ac-bd34-8b847b9fcd87",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca136ff5fca984da9e1df75c78c97c349780d8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@      case Right(remainingLength) =>\n        val headerSize = bytesReceived.size - i.len\n        val packetSize = remainingLength + headerSize\n        if (packetSize <= maxPacketSize) {\n          if (bytesReceived.size >= packetSize) {"
  }
]