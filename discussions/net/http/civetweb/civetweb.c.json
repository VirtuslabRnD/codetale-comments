[
  {
    "id" : "cbecdd3f-974f-4656-9630-a706b6634ebe",
    "prId" : 1836,
    "prUrl" : "https://github.com/root-project/root/pull/1836#pullrequestreview-110902049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I think that civetweb has some bugs with the use of incompatible pointer types that would be better to solve by using the right types rather than suppressing the warnings. For example, there are conversions from `void *` (64 bits) to `int` (32 bits), which lose half of the value.\r\n\r\n```\r\n/.../root/net/http/civetweb/civetweb.c(2577): warning #810: conversion from \"void *\" to \"int\" may lose significant bits\r\n   \t\tevhdl = (int)eventhdl;\r\n```",
        "createdAt" : "2018-04-10T11:30:56Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "fde4d4d4-1b1c-4cd7-8a3f-e8449429a553",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "1. I guess, OPENSSL_VERSION_NUMBER one should use in source file - not in the cmake. And here already during compilation I need to specify OpenSSL version.\r\n\r\n2. There are several hints why they have that warning. Here:\r\nhttps://github.com/civetweb/civetweb/blob/master/src/civetweb.c#L15484-L15509\r\nI right now submit two PRs to civetweb source.\r\n",
        "createdAt" : "2018-04-10T11:36:24Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "ccb58865-8da0-46cc-ba4f-e2b42cc81d52",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I still don't understand why `add_definitions(-DOPENSSL_API_1_1)` is needed.\r\n\r\nAs for the warnings, what I worry about it that the suppression will hide real bugs, but from the link you passed it seems it's quite confined, so it should be ok. However, I still think that the conversions from `void *` to `int` should be fixed. This just reminded me.",
        "createdAt" : "2018-04-10T11:52:32Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "596c0d03-72ad-4c5c-924c-627d15d6cff6",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "> I still don't understand why add_definitions(-DOPENSSL_API_1_1) is needed.\r\n\r\nIt is how civetweb working.\r\n\r\nThey let compile source code with SSL support without linking ssl libraries directly.\r\nAnd then loading library at the run time if required. And \"fishing\" all necessary symbols from loaded code. In principle, one could skip header files completely during compilation. \r\n\r\nOPENSSL_API_1_1 just inform expected SSL version by civetweb. \r\nI am not sure, that we can easily convince civetweb developers to change this logic. \r\nAnd with current civetweb 1.10 it is the only solution.\r\n\r\n",
        "createdAt" : "2018-04-10T11:58:24Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "73c10f9d-a1e0-44e9-9d6f-5e0126c71914",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Thank you for the explanation. I think this choice of civetweb devs is a bit unfortunate. I still think that `add_definitions()` is the wrong solution for us, because this will not be propagated to dependencies by CMake. Maybe that's not needed now? If `target_compile_definitions()` could be used, that would be better.",
        "createdAt" : "2018-04-10T13:25:11Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "86144d9f-b855-443e-a213-6796d1f44d36",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "> Maybe that's not needed now?\r\n\r\nI think it is very rare case when openssl version changes between ROOT recompilations. \r\nBut I add definitions with target_compile_definitions() if it helps to recognize such changes. ",
        "createdAt" : "2018-04-10T15:43:01Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "ad23f104-b07f-4fa2-9439-149762747df5",
        "parentId" : "b36d34d3-353f-41b6-922f-3c79ad6651b1",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "That's not the problem. The problem is that the macro `OPENSSL_API_1_1` will only be defined during compilation of civetweb, and not during runtime or compilation of dependent targets. Then if something uses civetweb in interpreted code or other parts of ROOT, it may crash because it will be using the wrong interface. If no external code needs the macro to work properly, then it's fine.",
        "createdAt" : "2018-04-10T15:57:48Z",
        "updatedAt" : "2018-04-10T18:02:52Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbfcca91a3675c141c925050aa374b8fbfbae1d1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +14312,14316 @@#if defined(__GNUC__) || defined(__MINGW32__)\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wincompatible-pointer-types\"\n#endif\n\t/* Depending on the OpenSSL version, the callback may be"
  },
  {
    "id" : "c22fdec7-ae13-4e3d-b5bb-0362197415ff",
    "prId" : 1852,
    "prUrl" : "https://github.com/root-project/root/pull/1852#pullrequestreview-112795847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7af8c06b-a015-4d04-ad95-4623f956ad7c",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Please avoid adding dead code. Can this not be removed? We have the git log to resurrect it if needed.",
        "createdAt" : "2018-04-17T11:25:20Z",
        "updatedAt" : "2018-04-17T11:25:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "f4814fa6-2427-463a-948b-049f1fa65fa9",
        "parentId" : "7af8c06b-a015-4d04-ad95-4623f956ad7c",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It is more about syncing with original civetweb code. \r\nI change constant cast at one place and comment-out warning suppression.\r\nLater it will be easier for me merge changes once again from civetweb.\r\n",
        "createdAt" : "2018-04-17T11:29:01Z",
        "updatedAt" : "2018-04-17T11:29:01Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "868ecd96-c4ec-48af-93e5-de42b283521b",
        "parentId" : "7af8c06b-a015-4d04-ad95-4623f956ad7c",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "It will be different either way, I don't see why this is better than just removing the bad code (possibly even in civetweb itself, since it comes from there). I don't like how ROOT is often inheriting warnings/problems from external projects. Maybe civetweb should be made external, but with a builtin to handle when it's not there, like openssl, for example? What do you think, @Axel-Naumann?",
        "createdAt" : "2018-04-17T12:42:09Z",
        "updatedAt" : "2018-04-17T12:42:10Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "936b8bd4-1326-42c2-a3a9-bcb6a822aa41",
        "parentId" : "7af8c06b-a015-4d04-ad95-4623f956ad7c",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "civetweb is full http server-side code (not only ssl part)\r\nIt has minimal deviations from original repository, therefore it is difficult to use it as pure externals.\r\n\r\nThere is very important feature missing (dynamic number of used threads). I plan to implement it in our copy of the code and then try to submit PR to original repository. \r\n\r\nIf you do not like comments - I can remove them. ",
        "createdAt" : "2018-04-17T12:51:53Z",
        "updatedAt" : "2018-04-17T12:52:09Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "b120b7d0-43cc-4edd-8c1e-2f76698e4fb0",
        "parentId" : "7af8c06b-a015-4d04-ad95-4623f956ad7c",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Will be part of next PR: https://github.com/root-project/root/commit/1de3f0dcf710bcc2957e3a1357f05a9a163b0c30",
        "createdAt" : "2018-04-17T12:56:53Z",
        "updatedAt" : "2018-04-17T12:56:53Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a242622da167c971ce4bec7bc446c9706a3fc52",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +14313,14317 @@//#pragma GCC diagnostic push\n//#pragma GCC diagnostic ignored \"-Wincompatible-pointer-types\"\n//#endif\n\t/* Depending on the OpenSSL version, the callback may be\n\t * 'void (*)(SSL *, int, int)' or 'void (*)(const SSL *, int, int)'"
  }
]