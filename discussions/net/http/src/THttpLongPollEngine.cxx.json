[
  {
    "id" : "b3c13451-489b-484b-9199-e00e9191d9bf",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111176379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "231dfe78-8762-4e69-be19-6f8e5cdcea5a",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Just because this seems to be a pattern: the non-fragile version (memory-wise) that is equally performant is:\r\n```\r\nres.reserve(len);\r\nstd::copy(buf, buf + len, res.begin());\r\n```\r\nI'd appreciate if you could replace the pattern `resize()` / `memcpy()` but that pattern.",
        "createdAt" : "2018-04-11T13:32:51Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +69,73 @@   if (!fRaw) {\n      res.resize(len);\n      memcpy((void *) res.data(), buf, len);\n      return res;\n   }"
  },
  {
    "id" : "a2f44c6a-c83a-4c1e-ab2b-834d2a612a94",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111256289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ccb2e97-dadf-4ce7-9e43-a7cc411bc3bb",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__ERROR_HERE`?",
        "createdAt" : "2018-04-11T13:33:41Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "843b6412-5f77-4628-8335-aba841930e7f",
        "parentId" : "2ccb2e97-dadf-4ce7-9e43-a7cc411bc3bb",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "No - it is code for ROOT6 also",
        "createdAt" : "2018-04-11T14:32:38Z",
        "updatedAt" : "2018-04-11T14:32:38Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +105,109 @@      fQueue.emplace_back(true, std::move(buf2));\n      if (fQueue.size() > 100)\n         Error(\"Send\", \"Too many send operations %u in the queue, check algorithms\", (unsigned) fQueue.size());\n   }\n}"
  },
  {
    "id" : "eb392f7f-7ed9-45f2-8ce5-3f97f88b578d",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111256356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc0a72c-0c3f-4da7-a003-0f09dc8f4477",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__ERROR_HERE`?",
        "createdAt" : "2018-04-11T13:33:57Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "545a6c8a-2b58-436d-9aa2-d1ce9bcec63b",
        "parentId" : "afc0a72c-0c3f-4da7-a003-0f09dc8f4477",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "No - it is code for ROOT6 also",
        "createdAt" : "2018-04-11T14:32:46Z",
        "updatedAt" : "2018-04-11T14:32:46Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +125,129 @@      fQueue.emplace_back(true, std::move(buf2), hdr);\n      if (fQueue.size() > 100)\n         Error(\"SendHeader\", \"Too many send operations %u in the queue, check algorithms\", (unsigned) fQueue.size());\n   }\n}"
  },
  {
    "id" : "b379d211-8ac3-46bb-8cba-9c3e79fc44d8",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111256431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce4070f-e82e-4c73-af16-eb84792a5cb4",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__ERROR_HERE`?",
        "createdAt" : "2018-04-11T13:34:34Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "d9275f7e-9a9b-4016-b75a-77495833b998",
        "parentId" : "bce4070f-e82e-4c73-af16-eb84792a5cb4",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "No - it is code for ROOT6 also",
        "createdAt" : "2018-04-11T14:32:55Z",
        "updatedAt" : "2018-04-11T14:32:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +146,150 @@      fQueue.emplace_back(false, std::move(sendbuf));\n      if (fQueue.size() > 100)\n         Error(\"SendCharStar\", \"Too many send operations %u in the queue, check algorithms\", (unsigned) fQueue.size());\n   }\n}"
  },
  {
    "id" : "d111d373-52d7-4e14-a38b-118f3fc257aa",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111256472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d6112f9-0ad7-4bde-b0d5-2170dcebccbf",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__FATAL_HERE` - and possibly below, I'll stop commenting on this :-)",
        "createdAt" : "2018-04-11T13:35:10Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "aa2527e3-5337-4d94-951b-5c59b8f7e97e",
        "parentId" : "2d6112f9-0ad7-4bde-b0d5-2170dcebccbf",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "No - it is code for ROOT6 also",
        "createdAt" : "2018-04-11T14:33:01Z",
        "updatedAt" : "2018-04-11T14:33:02Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +165,169 @@\n   if (arg == fPoll)\n      Fatal(\"PreviewData\", \"Submit same THttpCallArg object once again\");\n\n   if (fPoll) {"
  },
  {
    "id" : "a834386f-96eb-410e-a289-79813fcc778e",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111499639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a16a894e-0b61-47ed-a996-32e16a927d49",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Should `fQueue` be a `std::queue`? `pop_front()`?",
        "createdAt" : "2018-04-11T13:36:21Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "0b727f11-b341-43da-8074-c208ce59e749",
        "parentId" : "a16a894e-0b61-47ed-a996-32e16a927d49",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Done",
        "createdAt" : "2018-04-12T07:02:38Z",
        "updatedAt" : "2018-04-12T07:02:38Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +185,189 @@         arg->SetTextContent(std::move(item.fData));\n      }\n      fQueue.erase(fQueue.begin());\n   } else {\n      arg->SetPostponed(); // mark http request as pending, http server should wait for notification"
  },
  {
    "id" : "6279e0d9-f900-4839-8082-872b7fef50c0",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111499958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f84fe08-55d5-4690-9646-842dc6737277",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Calling this is not an error if arg is not text?",
        "createdAt" : "2018-04-11T13:37:28Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "9f81bffc-9928-40f1-9882-c9ade8b6f6a2",
        "parentId" : "9f84fe08-55d5-4690-9646-842dc6737277",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Method called for any request after user process it.\r\nAnd if user does not assign any new values - one can use it for something else",
        "createdAt" : "2018-04-12T07:04:00Z",
        "updatedAt" : "2018-04-12T07:04:00Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +201,205 @@void THttpLongPollEngine::PostProcess(std::shared_ptr<THttpCallArg> &arg)\n{\n   if (arg->IsText() && (arg->GetContentLength() == (Long_t)strlen(gLongPollNope)) &&\n       (strcmp((const char *)arg->GetContent(), gLongPollNope) == 0)) {\n      if (fQueue.size() > 0) {"
  },
  {
    "id" : "1b8b83c1-5d73-4c84-b6d4-ca8534678993",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111501372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9e5a50-0af2-4c43-afd7-7603d03bc03d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "If you make `gLongPollNope` a `std::string` you don't need the conversion here... and string comparisons can use `op==`!",
        "createdAt" : "2018-04-11T13:41:09Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "33e67f2e-6666-42fc-a099-744c4cde7a04",
        "parentId" : "2c9e5a50-0af2-4c43-afd7-7603d03bc03d",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Method has signature `SetTextContent(std::string &&cont)`, therefore I need anyway create temporary object here",
        "createdAt" : "2018-04-12T07:10:22Z",
        "updatedAt" : "2018-04-12T07:10:22Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +160,164 @@      // this is normal request, deliver and process it as any other\n      // put dummy content, it can be overwritten in the future\n      arg->SetTextContent(std::string(gLongPollNope));\n      return kFALSE;\n   }"
  },
  {
    "id" : "987dffde-40d5-4266-86a2-ab38edf75054",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111501415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88e2ebfa-1740-4f43-87a4-7cdd21975719",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`gLongPollNope` conversion",
        "createdAt" : "2018-04-11T13:41:22Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "46b2fec3-1a45-4cd9-b105-ea558044f70a",
        "parentId" : "88e2ebfa-1740-4f43-87a4-7cdd21975719",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Same as before",
        "createdAt" : "2018-04-12T07:10:33Z",
        "updatedAt" : "2018-04-12T07:10:33Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +171,175 @@      // if there are pending request, reply it immediately\n      if (fRaw) fPoll->SetBinaryContent(std::string(\"txt:\") + gLongPollNope);\n           else fPoll->SetTextContent(std::string(gLongPollNope)); // normally should never happen\n      fPoll->NotifyCondition();         // inform http server that request is processed\n      fPoll.reset();"
  },
  {
    "id" : "10f7f7c6-19f9-4159-bc2b-5d9097729a07",
    "prId" : 1785,
    "prUrl" : "https://github.com/root-project/root/pull/1785#pullrequestreview-111176379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55cb155f-e90f-45e4-875e-107927c49c0d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Could you maybe use an early return instead of additional indentation? I.e.\r\n```\r\nif (!arg->IsText() || (arg->GetContentLength() != gLongPollNope.length()) ||\r\ngLongPollNope != (const char*)arg->GetContent())\r\n```",
        "createdAt" : "2018-04-11T13:41:58Z",
        "updatedAt" : "2018-04-11T13:49:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ee23ca08fb4d100608c111a02a1df07ee58b71f",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +201,205 @@void THttpLongPollEngine::PostProcess(std::shared_ptr<THttpCallArg> &arg)\n{\n   if (arg->IsText() && (arg->GetContentLength() == (Long_t)strlen(gLongPollNope)) &&\n       (strcmp((const char *)arg->GetContent(), gLongPollNope) == 0)) {\n      if (fQueue.size() > 0) {"
  }
]