[
  {
    "id" : "3a923f1b-5aa1-456f-8f83-467760d7ce3c",
    "prId" : 2751,
    "prUrl" : "https://github.com/root-project/root/pull/2751#pullrequestreview-162945001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d52d4a0-9f22-43ee-8b17-b05e6a78f439",
        "parentId" : null,
        "authorId" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "body" : "If you want to make sure that porting back this change does not break existing code, you should add a new constructor and have the existing one calling the new one with the last value set to 0.\r\nTNetXNGFile(const char *url, const char *lurl, Option_t *mode=\"\", const char *title=\"\",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE);\r\nTNetXNGFile(const char *url, Option_t *mode=\"\", const char *title=\"\",Int_t compress=1, Int_t netopt=0, Bool_t parallelopen=kFALSE) : TNetXNGFile(url, 0, mode, title, compress, netopt, parallelopen) { }",
        "createdAt" : "2018-10-09T08:26:27Z",
        "updatedAt" : "2019-03-12T16:34:55Z",
        "lastEditedBy" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "tags" : [
        ]
      },
      {
        "id" : "02769c72-c9bb-4720-9152-4429735547a4",
        "parentId" : "4d52d4a0-9f22-43ee-8b17-b05e6a78f439",
        "authorId" : "94b7f7b7-7d82-4fe4-9281-7b78d239ab70",
        "body" : "If I put the new const char* to the end of formal parameter list of the ctor and default it to 0, like I did, I think, all calls to the old ctor without the last parameter automatically call the new ctor, with the last missing parameter's default value. That way it wouldn't break existing code and generate less object code(okay: very minor savings here, that most likely would be optimized out ). Or do you mean, it's better to use lurl as the second parameter for clarity?",
        "createdAt" : "2018-10-09T13:37:51Z",
        "updatedAt" : "2019-03-12T16:34:55Z",
        "lastEditedBy" : "94b7f7b7-7d82-4fe4-9281-7b78d239ab70",
        "tags" : [
        ]
      },
      {
        "id" : "f6448071-f587-4441-b1eb-eab98ffaae3a",
        "parentId" : "4d52d4a0-9f22-43ee-8b17-b05e6a78f439",
        "authorId" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "body" : "For compatibility you need a different constructor, setting the new parameter to a default 0 is not enough.\r\nAnd in the new constructor, you cannot have the new parameter as last argument with default otherwise you'll have compilation problems. Hence the suggestion above. ",
        "createdAt" : "2018-10-09T14:43:16Z",
        "updatedAt" : "2019-03-12T16:34:55Z",
        "lastEditedBy" : "95d25081-bab5-48a6-a128-d3f77acb4c78",
        "tags" : [
        ]
      },
      {
        "id" : "a30a58eb-c4bd-49e7-ad51-abf254473948",
        "parentId" : "4d52d4a0-9f22-43ee-8b17-b05e6a78f439",
        "authorId" : "94b7f7b7-7d82-4fe4-9281-7b78d239ab70",
        "body" : "Hm, I will do as you suggested, but I still wonder why. Its not really the right place, but I'd be happy to understand the difference, so I can learn something from it, if you do have the time.\r\n```c++\r\n#include <iostream>\r\nclass Test{\r\n\tpublic:\r\n Test(char a='1', char b='2', char c='3'){std::cout<<a<<\" \"<<b<<\" \"<<c<<std::endl;}\r\n};\r\n---------------------------------------------------------\r\n#include \"test.hpp\"\r\nint main(){\r\n Test('h','m');\r\n return 0;\r\n}\r\n```\r\n\r\nCompiling and \r\nrunning this, the output is\r\n\r\n>  h m 3\r\n\r\nI thought, all calls to the 'old' constructor would instead just call the modified constructor like this.\r\nWhere and why wouldn't old code compile like this? \r\n\r\nEven if you don't have the time, thanks in advance",
        "createdAt" : "2018-10-09T15:10:46Z",
        "updatedAt" : "2019-03-12T16:34:55Z",
        "lastEditedBy" : "94b7f7b7-7d82-4fe4-9281-7b78d239ab70",
        "tags" : [
        ]
      }
    ],
    "commit" : "b824da298b4babe355a4752eab5c9d630f8f6da1",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +63,67 @@               Int_t compress = 1, Int_t netopt = 0, Bool_t parallelopen = kFALSE);\n\n   virtual ~TNetXNGFile();\n\n   virtual void     Init(Bool_t create);"
  }
]