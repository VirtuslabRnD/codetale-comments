[
  {
    "id" : "6a489ad0-8fe8-4152-94dd-39af7d45d30a",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-209866240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I suggest we add this line after 2.13 is released.",
        "createdAt" : "2018-08-08T06:52:36Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "08f08369-1087-4852-9d55-5c0b18fa8901",
        "parentId" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Sure @ijuma, I agree on all accounts. \r\n\r\nScala **2.13.0-M5** will be stable enough; (a way to early) PR was inspired by this JIRA ticket: https://issues.apache.org/jira/browse/KAFKA-7197 ***Release a milestone build for Scala 2.13.0 M3***",
        "createdAt" : "2018-08-10T14:12:23Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "b0433d82-4327-478e-b708-fe4af143452d",
        "parentId" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Resolving conversation (see git commit changes).",
        "createdAt" : "2019-03-02T12:31:17Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@  \n  // Enabled by default when commands like `testAll` are invoked\n  defaultScalaVersions = [ '2.11', '2.12', '2.13' ]\n  // Available if -PscalaVersion is used. This is useful when we want to support a Scala version that has\n  // a higher minimum Java requirement than Kafka. This was previously the case for Scala 2.12 and Java 7."
  },
  {
    "id" : "4d0d71e5-99b3-4b3f-8c65-7c40fd71d432",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-233792036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "parentId" : null,
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "Why does this need to be different? Is this just to make it clear it's not a valid final release with that version of scala or does something not work otherwise?\r\n\r\nIf we really do need this, you can make it generic by just checking for `-` in the Scala version string and we won't have to edit it either a) when we update to final 2.13.0 or b) if we want to test against future scala version milestones, i.e. 2.14+.",
        "createdAt" : "2019-03-17T23:46:34Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "261d5161-0a50-4774-a332-dc5d222d1880",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "@ewencp Makes sense. Actually, checking for a dash `-` only was one of interim solutions (now rebased). ",
        "createdAt" : "2019-03-18T09:08:53Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "7122d3c2-43b2-47e1-ad17-c85e86f35309",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "> Why does this need to be different? Is this just to make it clear it's not a valid final release with that version of scala or does something not work otherwise?\r\n\r\n  One word: cross-compiling. This hack (so to say) is added with intention to resolve **_scoverage-plugin_**, **_scoverage-runtime_**, **_scala-logging_** and **_scalatest_**  artifacts versions builded against various `2.13.0-` Scala available versions (and also to preserve compiling for a current default versions, i.e. for Scala 2.11 and 2.12). \r\n\r\n```\r\n  scalaLogging: \"com.typesafe.scala-logging:scala-logging_$versions.baseScala:$versions.scalaLogging\",\r\n  scalatest: \"org.scalatest:scalatest_$versions.baseScala:$versions.scalatest\",\r\n  scoveragePlugin: \"org.scoverage:scalac-scoverage-plugin_$versions.baseScala:$versions.scoverage\",\r\n  scoverageRuntime: \"org.scoverage:scalac-scoverage-runtime_$versions.baseScala:$versions.scoverage\",\r\n```\r\n(https://search.maven.org/search?q=g:org.scoverage%20a:scalac-scoverage-runtime_2.1*)\r\n\r\n![image](https://user-images.githubusercontent.com/19467899/54521859-1fc7e380-496c-11e9-80b9-dcdae4a4cb86.png)\r\n\r\n\r\n",
        "createdAt" : "2019-03-18T10:05:30Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "bc3ca707-0e75-4bef-95ef-dd57e2244639",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Dash `-` checking added via new commit (also, new commit comments explain this, I hope). \r\nI will leave this review open (Maven central snapshot above should be visible, it explains a lot).",
        "createdAt" : "2019-03-20T14:40:40Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "0cc620e7-448b-4eb4-a9df-da6ea5d441ed",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@dejan2609 I think you should mention in the comment that pre-releases are not binary compatible with each other and that's the reason why libraries include the full Scala release string in their name for pre-releases. Focusing on cross-compilation doesn't explain the motivation and it's more of an implementation detail.",
        "createdAt" : "2019-04-29T13:47:15Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8b4e4f43-97d6-43b8-bda9-577110050cf8",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done.",
        "createdAt" : "2019-05-05T18:24:20Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +56,60 @@  versions[\"baseScala\"] = versions.scala.substring(0, versions.scala.lastIndexOf(\".\"))\n} else {\n  versions[\"baseScala\"] = versions.scala\n}\n"
  },
  {
    "id" : "90cd106f-7e5e-496a-94c4-c474b473697c",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-252667088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Since 2.13 is out now, should we have this in the `defaultScalaVersions` instead?",
        "createdAt" : "2019-06-19T15:29:44Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "f7160021-e672-40de-bddd-04da42328079",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Question and a note:\r\n\r\n **Question:** '_instead_' or '_also_' ? My assumption is that 2.13 should be included into `defaultScalaVersions` (but `availableScalaVersions` should keep version 2.13, right ?)\r\n\r\n**Note:** if we add 2.13 into `defaultScalaVersions` gradle tasks **_testAll_**, **_jarAll_** and **_releaseTarGzAll_** will fail until code is refactored for 2.13 (but then again: maybe this is what you want).",
        "createdAt" : "2019-06-20T11:30:37Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "75b84fbc-efb2-49a4-b5c6-d92adc10f4d2",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I meant \"also\", sorry.",
        "createdAt" : "2019-06-20T13:19:18Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c0dc2c45-3710-4eeb-897a-08cfa3cb4430",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done, 2.13 is added into `defaultScalaVersions`",
        "createdAt" : "2019-06-21T06:56:21Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +26,30 @@  // Available if -PscalaVersion is used. This is useful when we want to support a Scala version that has\n  // a higher minimum Java requirement than Kafka. This was previously the case for Scala 2.12 and Java 7.\n  availableScalaVersions = [ '2.11', '2.12', '2.13' ]\n}\n"
  }
]