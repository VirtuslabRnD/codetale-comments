[
  {
    "id" : "6a489ad0-8fe8-4152-94dd-39af7d45d30a",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-209866240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I suggest we add this line after 2.13 is released.",
        "createdAt" : "2018-08-08T06:52:36Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "08f08369-1087-4852-9d55-5c0b18fa8901",
        "parentId" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Sure @ijuma, I agree on all accounts. \r\n\r\nScala **2.13.0-M5** will be stable enough; (a way to early) PR was inspired by this JIRA ticket: https://issues.apache.org/jira/browse/KAFKA-7197 ***Release a milestone build for Scala 2.13.0 M3***",
        "createdAt" : "2018-08-10T14:12:23Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "b0433d82-4327-478e-b708-fe4af143452d",
        "parentId" : "14882a61-f215-4f77-84b1-44062fedc6ed",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Resolving conversation (see git commit changes).",
        "createdAt" : "2019-03-02T12:31:17Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@  \n  // Enabled by default when commands like `testAll` are invoked\n  defaultScalaVersions = [ '2.11', '2.12', '2.13' ]\n  // Available if -PscalaVersion is used. This is useful when we want to support a Scala version that has\n  // a higher minimum Java requirement than Kafka. This was previously the case for Scala 2.12 and Java 7."
  },
  {
    "id" : "4d0d71e5-99b3-4b3f-8c65-7c40fd71d432",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-233792036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "parentId" : null,
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "Why does this need to be different? Is this just to make it clear it's not a valid final release with that version of scala or does something not work otherwise?\r\n\r\nIf we really do need this, you can make it generic by just checking for `-` in the Scala version string and we won't have to edit it either a) when we update to final 2.13.0 or b) if we want to test against future scala version milestones, i.e. 2.14+.",
        "createdAt" : "2019-03-17T23:46:34Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "261d5161-0a50-4774-a332-dc5d222d1880",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "@ewencp Makes sense. Actually, checking for a dash `-` only was one of interim solutions (now rebased). ",
        "createdAt" : "2019-03-18T09:08:53Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "7122d3c2-43b2-47e1-ad17-c85e86f35309",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "> Why does this need to be different? Is this just to make it clear it's not a valid final release with that version of scala or does something not work otherwise?\r\n\r\n  One word: cross-compiling. This hack (so to say) is added with intention to resolve **_scoverage-plugin_**, **_scoverage-runtime_**, **_scala-logging_** and **_scalatest_**  artifacts versions builded against various `2.13.0-` Scala available versions (and also to preserve compiling for a current default versions, i.e. for Scala 2.11 and 2.12). \r\n\r\n```\r\n  scalaLogging: \"com.typesafe.scala-logging:scala-logging_$versions.baseScala:$versions.scalaLogging\",\r\n  scalatest: \"org.scalatest:scalatest_$versions.baseScala:$versions.scalatest\",\r\n  scoveragePlugin: \"org.scoverage:scalac-scoverage-plugin_$versions.baseScala:$versions.scoverage\",\r\n  scoverageRuntime: \"org.scoverage:scalac-scoverage-runtime_$versions.baseScala:$versions.scoverage\",\r\n```\r\n(https://search.maven.org/search?q=g:org.scoverage%20a:scalac-scoverage-runtime_2.1*)\r\n\r\n![image](https://user-images.githubusercontent.com/19467899/54521859-1fc7e380-496c-11e9-80b9-dcdae4a4cb86.png)\r\n\r\n\r\n",
        "createdAt" : "2019-03-18T10:05:30Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "bc3ca707-0e75-4bef-95ef-dd57e2244639",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Dash `-` checking added via new commit (also, new commit comments explain this, I hope). \r\nI will leave this review open (Maven central snapshot above should be visible, it explains a lot).",
        "createdAt" : "2019-03-20T14:40:40Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "0cc620e7-448b-4eb4-a9df-da6ea5d441ed",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@dejan2609 I think you should mention in the comment that pre-releases are not binary compatible with each other and that's the reason why libraries include the full Scala release string in their name for pre-releases. Focusing on cross-compilation doesn't explain the motivation and it's more of an implementation detail.",
        "createdAt" : "2019-04-29T13:47:15Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8b4e4f43-97d6-43b8-bda9-577110050cf8",
        "parentId" : "d77cae81-828b-4d88-bdd4-428833e60468",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done.",
        "createdAt" : "2019-05-05T18:24:20Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +56,60 @@  versions[\"baseScala\"] = versions.scala.substring(0, versions.scala.lastIndexOf(\".\"))\n} else {\n  versions[\"baseScala\"] = versions.scala\n}\n"
  },
  {
    "id" : "90cd106f-7e5e-496a-94c4-c474b473697c",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-252667088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Since 2.13 is out now, should we have this in the `defaultScalaVersions` instead?",
        "createdAt" : "2019-06-19T15:29:44Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "f7160021-e672-40de-bddd-04da42328079",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Question and a note:\r\n\r\n **Question:** '_instead_' or '_also_' ? My assumption is that 2.13 should be included into `defaultScalaVersions` (but `availableScalaVersions` should keep version 2.13, right ?)\r\n\r\n**Note:** if we add 2.13 into `defaultScalaVersions` gradle tasks **_testAll_**, **_jarAll_** and **_releaseTarGzAll_** will fail until code is refactored for 2.13 (but then again: maybe this is what you want).",
        "createdAt" : "2019-06-20T11:30:37Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "75b84fbc-efb2-49a4-b5c6-d92adc10f4d2",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I meant \"also\", sorry.",
        "createdAt" : "2019-06-20T13:19:18Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c0dc2c45-3710-4eeb-897a-08cfa3cb4430",
        "parentId" : "aee942be-336d-434d-a8b3-eb209fe75bf0",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done, 2.13 is added into `defaultScalaVersions`",
        "createdAt" : "2019-06-21T06:56:21Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +26,30 @@  // Available if -PscalaVersion is used. This is useful when we want to support a Scala version that has\n  // a higher minimum Java requirement than Kafka. This was previously the case for Scala 2.12 and Java 7.\n  availableScalaVersions = [ '2.11', '2.12', '2.13' ]\n}\n"
  },
  {
    "id" : "e99c2392-7740-462a-b45f-8f21480a3d97",
    "prId" : 8308,
    "prUrl" : "https://github.com/apache/kafka/pull/8308#pullrequestreview-376929435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad1ca1d3-2c12-4ad9-aaad-df8ec35c7640",
        "parentId" : null,
        "authorId" : "915b2f67-05e6-4824-939a-398e7be58870",
        "body" : "we should also update `gradle.properties`, `bin/kafka-run-class.sh`, `bin/windows/kafka-run-class.bat`?",
        "createdAt" : "2020-03-17T07:59:18Z",
        "updatedAt" : "2020-03-18T14:18:58Z",
        "lastEditedBy" : "915b2f67-05e6-4824-939a-398e7be58870",
        "tags" : [
        ]
      },
      {
        "id" : "7e944340-9a57-42d2-83af-92e0b2863273",
        "parentId" : "ad1ca1d3-2c12-4ad9-aaad-df8ec35c7640",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Yes.",
        "createdAt" : "2020-03-18T14:41:04Z",
        "updatedAt" : "2020-03-18T14:41:04Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "86cda062d1fa50656bca37299290324222fc54a8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@\n// Add Scala version\ndef defaultScala212Version = '2.12.11'\ndef defaultScala213Version = '2.13.1'\nif (hasProperty('scalaVersion')) {"
  },
  {
    "id" : "deb94968-032d-4f2e-ac0b-f691a23239dd",
    "prId" : 10588,
    "prUrl" : "https://github.com/apache/kafka/pull/10588#pullrequestreview-685962270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "Is this library necessary to do the test? I'm asking because this will make our build have more dependency, not sure if it's required.",
        "createdAt" : "2021-06-17T02:50:53Z",
        "updatedAt" : "2021-06-17T02:59:42Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      },
      {
        "id" : "b8d06602-b86e-442f-8e22-462d9a34d279",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "body" : "This library supports `MockitoExtension`. \r\nWe can not use `@RunWith(MockitoJUnitRunner.class)` in junit5, we need to use `@ExtendWith(MockitoExtension.class)` instead.",
        "createdAt" : "2021-06-17T04:31:44Z",
        "updatedAt" : "2021-06-17T04:31:44Z",
        "lastEditedBy" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "tags" : [
        ]
      },
      {
        "id" : "d7d9af5a-d452-4172-8c79-ed3b7646f418",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "OK, but what I want to ask is, could we do the test without `mockitoJunitJupiter`? If yes, why should we use this library since we didn't use it before. Thanks.",
        "createdAt" : "2021-06-17T06:13:08Z",
        "updatedAt" : "2021-06-17T06:13:08Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      },
      {
        "id" : "2dde0bc1-757f-4cb9-81bd-fec82ca146eb",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "body" : "Maybe I can replace  `@Mock` and `@Spy` with `Mockito.mock`  and `Mockito.spy`.\r\nThen we don't need  `mockitoJunitJupiter` library.\r\nBut it will have a `unchecked` warning. \r\n",
        "createdAt" : "2021-06-17T06:52:12Z",
        "updatedAt" : "2021-06-17T06:55:05Z",
        "lastEditedBy" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "tags" : [
        ]
      },
      {
        "id" : "a50df128-c86b-4515-ba2c-e606609ed52c",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "@chia7712 , what do you think about this?",
        "createdAt" : "2021-06-17T07:26:37Z",
        "updatedAt" : "2021-06-17T07:26:37Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      },
      {
        "id" : "a8a21f23-6db7-41d7-b718-e46798410608",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "As we want to replace PowerMock/easymock by mockito, it is useful to introduce that library to simplify the migration. Especially, there are many tests using similar PowerMock/easymock annotation.\r\n\r\nIn short, it should be fine to me :)",
        "createdAt" : "2021-06-17T07:31:03Z",
        "updatedAt" : "2021-06-17T07:31:03Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "22588337-bce9-4662-9da6-05590c09cf1d",
        "parentId" : "e883ef41-e0ea-46fa-a5e7-2061bf9a4b6e",
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "Thanks, @chia7712 , I have not more comments. :)",
        "createdAt" : "2021-06-17T07:32:58Z",
        "updatedAt" : "2021-06-17T07:32:58Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "19eb467186c9e3543196117e737735deb60bde28",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +174,178 @@  mockitoCore: \"org.mockito:mockito-core:$versions.mockito\",\n  mockitoInline: \"org.mockito:mockito-inline:$versions.mockito\",\n  mockitoJunitJupiter: \"org.mockito:mockito-junit-jupiter:$versions.mockito\",\n  nettyHandler: \"io.netty:netty-handler:$versions.netty\",\n  nettyTransportNativeEpoll: \"io.netty:netty-transport-native-epoll:$versions.netty\","
  },
  {
    "id" : "2f5eb56c-70ec-41e5-b50d-cd993cd4dc50",
    "prId" : 10918,
    "prUrl" : "https://github.com/apache/kafka/pull/10918#pullrequestreview-700314440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Does this conflict with the yammer metrics library we use in Kafka?",
        "createdAt" : "2021-06-22T22:19:58Z",
        "updatedAt" : "2021-06-22T22:19:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "d94f239c-26ed-4ddd-9dd7-e8b10e91d4e1",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "> Does this conflict with the yammer metrics library \r\n\r\nIt doesn't, no.  The yammer metrics library is called `metrics-core-2.2.0.jar` and has all classes underneath the `com.yammer.metrics` package.  The dropwizard library is called `metrics-core-3.2.5.jar` and has all classes underneath the `com.codahale.metrics` package.  It isn't ideal that the jar names differ only by the version, but there is no conflict.",
        "createdAt" : "2021-06-23T13:34:32Z",
        "updatedAt" : "2021-06-23T13:34:32Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "6d070c6c-03b3-422a-9fa2-9233a3573b0e",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Why are we using this old version? The latest version is 4.2.2.",
        "createdAt" : "2021-07-03T21:49:58Z",
        "updatedAt" : "2021-07-03T21:49:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8adff624-4082-4178-a307-b61520ccc2fc",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "https://github.com/apache/zookeeper/blob/release-3.6.3/pom.xml#L367\r\n\r\n```\r\n<dropwizard.version>3.2.5</dropwizard.version>\r\n```",
        "createdAt" : "2021-07-03T21:54:16Z",
        "updatedAt" : "2021-07-03T21:54:16Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "1d1512d7-fc05-4a71-ab70-762ca01aa637",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "3.7 uses a newer version though, have we checked if we have to stick with this old version? It will be harder to update  in the 3.0 series after that's released.",
        "createdAt" : "2021-07-03T22:07:23Z",
        "updatedAt" : "2021-07-03T22:07:24Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "a0d3d13d-5324-485f-a213-630535311378",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "> have we checked if we have to stick with this old version\r\n\r\nNo.  How would we do that check?  I can think of 2 ways: 1) Feels too risky: just take the new version and call it good if the system tests pass; 2) Ask in the Zk mailing list maybe?  Any other options?\r\n\r\n> It will be harder to update in the 3.0 series after that's released\r\n\r\nIt feels to me like the straightforward thing to do is use the version that ZK uses, and there's no need to update the dropwizard version unless we update the ZK version.  And if we are sticking with ZK 3.6.x through the EOL of ZooKeeper with Kafka (unknown, but potentially the case) then there's no reason to change it sans some kind of CVE.  Maybe I'm missing something, though?",
        "createdAt" : "2021-07-03T22:22:57Z",
        "updatedAt" : "2021-07-03T22:22:57Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "34d7f1c7-1d2d-4527-85fd-8fe94f6e47c3",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The straightforward way would be to check the version bump in the 3.7 branch, did that require code changes?\r\n\r\nCVEs are the common reason to have to update these days.",
        "createdAt" : "2021-07-03T22:35:03Z",
        "updatedAt" : "2021-07-03T22:35:04Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c7d14ee9-9f8c-4802-a592-2175e6f7470f",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "https://github.com/apache/zookeeper/commit/13fe0d0ffb9fd2c379b9b430aaaf9ee75acfceba\r\n\r\nIt's not the only version update that was made, but no code changes.",
        "createdAt" : "2021-07-03T22:42:29Z",
        "updatedAt" : "2021-07-03T22:42:29Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "16d7c108-ae85-43ab-bb55-4259691c2cdd",
        "parentId" : "4fbbd455-34ea-466b-8b74-53bce9cfa26c",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "https://github.com/apache/kafka/pull/10982 contains this change.  Will attache system test results there when tests complete.",
        "createdAt" : "2021-07-06T19:35:35Z",
        "updatedAt" : "2021-07-06T19:35:35Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9deb81b0e7a26f13b91904aaae870e1d53686a0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +62,66 @@  checkstyle: \"8.36.2\",\n  commonsCli: \"1.4\",\n  dropwizardMetrics: \"3.2.5\",\n  gradle: \"7.0.2\",\n  grgit: \"4.1.0\","
  }
]