[
  {
    "id" : "c6432b2f-dd1a-4cca-85e0-0b05068a2a93",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38197069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1d7aa88-c0d0-4cb9-8e0e-6ba59b03b02c",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Is this an idiomatic way to allow users to configure the semanticdb mode by project/config? See semantic-example `test` how to disable/enable custom semantic dbs by config.",
        "createdAt" : "2017-05-15T11:22:20Z",
        "updatedAt" : "2017-05-15T18:38:46Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "ff95d1d8-8e0d-478a-b507-d4bdf803c9cf",
        "parentId" : "b1d7aa88-c0d0-4cb9-8e0e-6ba59b03b02c",
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "AFAIK, this is very idiomatic. Make sure you document it clearly -- tasks are scoped in the `Compile` and `Test` configurations.",
        "createdAt" : "2017-05-15T22:08:40Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "ec4471c0-2dd2-4efd-9c8e-2fc60183aac7",
        "parentId" : "b1d7aa88-c0d0-4cb9-8e0e-6ba59b03b02c",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Good point. Docs are totally behind atm. cc/ https://github.com/scalameta/scalameta/issues/816",
        "createdAt" : "2017-05-16T07:02:05Z",
        "updatedAt" : "2017-05-16T07:21:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@  lazy val scalahostAllSettings =\n    scalahostBaseSettings ++\n      inTestAndCompile(scalahostConfigSettings) ++\n      scalahostInjectScalacOptions ++\n      scalahostInjectDependency ++"
  },
  {
    "id" : "70488b81-b078-41dd-9abf-fb947c7f71a0",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38503027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I don't like the duplication in saying `foobarbaz := Foobarbaz.qux`. Can we do better here?",
        "createdAt" : "2017-05-15T16:37:12Z",
        "updatedAt" : "2017-05-15T18:38:46Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "b97dbdde-db64-4147-9521-417dfaef4498",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I believe this is idiomatic sbt, see http://www.scala-sbt.org/0.13/docs/Plugins-Best-Practices.html#Avoid+namespace+clashes\r\n\r\nEverything inside autoImport will be in scope of build.sbt files so for example `Fat` would not be a good idea.",
        "createdAt" : "2017-05-15T18:35:46Z",
        "updatedAt" : "2017-05-16T07:21:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "c3e54cbd-2d25-43a4-ba34-ec2df67777ec",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "NB. It would be possible to make this a `settingKey[String]` to get this syntax\r\n\r\n```scala\r\nscalametaSemanticdb := \"fat\"\r\n```\r\n\r\nI prefer the current approach since it avoid dealing with invalid values and it documents the valid cases  in the types.",
        "createdAt" : "2017-05-15T18:37:15Z",
        "updatedAt" : "2017-05-16T07:21:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "c86dde65-995c-4638-8351-23ef83f65a73",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "What duplication do you mean Eugene?",
        "createdAt" : "2017-05-15T22:10:05Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "75bb9102-0a15-4253-b422-5a2793a3aa08",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I think he's referring to `scalametaX := scalametaY`",
        "createdAt" : "2017-05-16T07:04:53Z",
        "updatedAt" : "2017-05-16T07:21:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "3fad5298-2b6a-4a04-8583-6fe22509e8f8",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yes.",
        "createdAt" : "2017-05-16T18:26:22Z",
        "updatedAt" : "2017-05-16T18:26:22Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "eb8d3167-6f8a-4197-8c38-353ec2e97fcb",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I suggest we at least drop the `scalameta` prefix. There are no other semantic dbs around.\r\n\r\n`semanticDb := SemanticDb.Fat` looks more or less allright.",
        "createdAt" : "2017-05-16T18:27:17Z",
        "updatedAt" : "2017-05-16T18:27:17Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "9c52faf0-69b1-4298-b3cb-fe1a6130ceca",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It's conventional to prefix all plugin keys by the plugin name, this makes it easier to discover what settings are provided by a plugin, for example via `scalameta<TAB>` in the sbt shell. I'm open to make the syntax `scalametaSemanticdb := Semanticdb.Fat`, would that be better?",
        "createdAt" : "2017-05-16T20:01:26Z",
        "updatedAt" : "2017-05-16T20:01:26Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "1f6aad1f-79b7-484a-86f5-185d1c0f1fcb",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Relevant http://www.lihaoyi.com/post/StrategicScalaStyleConcisenessNames.html#long-names-vs-short-names\r\n\r\nConsidering that users will typically write this setting few times, I believe a longer/verbose name that follows sbt plugin naming conventions is fine.",
        "createdAt" : "2017-05-16T20:05:10Z",
        "updatedAt" : "2017-05-16T20:05:11Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "3aa9db50-1246-4281-bf20-ae8ab0b8abfd",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Well, then I guess it should be `scalahostSemanticDb := ScalahostSemanticDb.Fat`.",
        "createdAt" : "2017-05-16T20:06:59Z",
        "updatedAt" : "2017-05-16T20:06:59Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "ec1ee50c-b233-4966-b27a-fb323a2c8ab7",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Or rather, the plugin should be `ScalametaPlugin` named instead of `ScalahostSbtPlugin`?\r\n\r\nThis also opens the question if we should rename `sbt-scalahost` to `sbt-scalameta`. Having explained what were doing to several people, I have noticed that the word \"scalahost\" is confusing to many.",
        "createdAt" : "2017-05-16T20:20:35Z",
        "updatedAt" : "2017-05-16T20:20:35Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "7745a2bc-1ab2-4ae8-8d42-a01caee3717e",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Good point. How about we explore this in 2.x? I'm afraid big refactorings like this will interfere with the 2.x branch, which will have to coexist with 1.x for quite a while.",
        "createdAt" : "2017-05-16T20:24:55Z",
        "updatedAt" : "2017-05-16T20:24:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "da2a4ee6-0ba8-4e12-b6ba-322df91e1999",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "So keep things as is for now? So far the plugin exposes only `scalameta*` keys to the build.sbt scope so I think renaming the plugin to sbt-scalameta would be a logical step, but I'm fine with waiting with that change.",
        "createdAt" : "2017-05-16T20:26:44Z",
        "updatedAt" : "2017-05-16T20:26:45Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "5276be6a-e2c8-4c8c-9da3-6aa0d2aff711",
        "parentId" : "24907fa4-6797-468c-8497-3e204c670b9e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yes, let's keep this as is for now.",
        "createdAt" : "2017-05-16T20:27:37Z",
        "updatedAt" : "2017-05-16T20:27:37Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@  )\n  lazy val scalahostConfigSettings: Seq[Def.Setting[_]] = Def.settings(\n    scalametaSemanticdb := ScalametaSemanticdb.Fat\n  )\n"
  },
  {
    "id" : "fe5ce9da-672f-4259-89e5-4246381842e6",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38197069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66977b35-0c4e-4189-bfaf-ca4039293e84",
        "parentId" : null,
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "You don't need `lazy` here.",
        "createdAt" : "2017-05-15T22:09:38Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "035eaedc-3e2c-4f36-9d6e-8aca78ad6913",
        "parentId" : "66977b35-0c4e-4189-bfaf-ca4039293e84",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The `lazy` is actually intentional, but maybe not for the best reason. ScalahostSbtPlugin is an object so removing the lazy would make initialization errors more cryptic compared to typical stack traces.",
        "createdAt" : "2017-05-16T07:03:02Z",
        "updatedAt" : "2017-05-16T07:21:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@    resolvers += Resolver.bintrayRepo(\"scalameta\", \"maven\")\n  )\n  lazy val scalahostConfigSettings: Seq[Def.Setting[_]] = Def.settings(\n    scalametaSemanticdb := ScalametaSemanticdb.Fat\n  )"
  },
  {
    "id" : "734aeddf-12da-4541-9f8f-65b0658f5d1a",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38197069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdb232f4-eed6-42b3-8d7e-42d94584983e",
        "parentId" : null,
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "You can probably remove all these lazy's.",
        "createdAt" : "2017-05-15T22:10:41Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "a8cceefc-7325-489e-83fa-afd0835275ad",
        "parentId" : "fdb232f4-eed6-42b3-8d7e-42d94584983e",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "See comment above.",
        "createdAt" : "2017-05-16T07:05:03Z",
        "updatedAt" : "2017-05-16T07:21:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +66,70 @@    }\n  )\n  lazy val scalahostInjectScalacOptions: Seq[Def.Setting[_]] = Def.settings(\n    // sets -Xplugin:/scalahost.jar and other necessary compiler options.\n    scalacOptions ++= {"
  },
  {
    "id" : "2b027b13-5278-4149-a102-22f7440a1590",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38246915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f128d1fd-2db8-490d-ab0a-8a232a06dbe9",
        "parentId" : null,
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "I would group the settings based on the place they are scoped. Following this criterion, these two can be grouped together.",
        "createdAt" : "2017-05-15T22:11:31Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@    scalahostBaseSettings ++\n      inTestAndCompile(scalahostConfigSettings) ++\n      scalahostInjectScalacOptions ++\n      scalahostInjectDependency ++\n      scalahostHasMirrorSettings"
  },
  {
    "id" : "de15f84b-df30-44fd-8229-fecf738b13d5",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38197069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85a482a5-0380-41eb-b010-6a0c7a33f6d2",
        "parentId" : null,
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "I've used this so many times that i think it's about time we add it to sbt/sbt.",
        "createdAt" : "2017-05-15T22:12:01Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "3900fc9a-ff9d-406b-b748-e83a0f86c5c7",
        "parentId" : "85a482a5-0380-41eb-b010-6a0c7a33f6d2",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "👏 ",
        "createdAt" : "2017-05-16T07:05:12Z",
        "updatedAt" : "2017-05-16T07:21:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +122,126 @@  )\n\n  private def inTestAndCompile(settings: Seq[Def.Setting[_]]) =\n    List(Compile, Test).flatMap(inConfig(_)(settings)) ++ settings\n"
  },
  {
    "id" : "9785113d-7c6d-4143-855d-2ec1626ec5fd",
    "prId" : 854,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/854#pullrequestreview-37706070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79c3464c-79eb-4c2f-95e6-1ce5f9666efc",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "We may hit on performance issues in `Fragment.deep/find` with this sourcepath. For example, in the scalafmt/scalameta repos `target/` often contains (tens of) thousands of files from testkit.",
        "createdAt" : "2017-05-11T21:29:41Z",
        "updatedAt" : "2017-05-11T21:31:41Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "9f45060d-29eb-4208-8f91-427e952501db",
        "parentId" : "79c3464c-79eb-4c2f-95e6-1ce5f9666efc",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "We can definitely improve the implementations on deep and find if the need arises. At the moment, they are intentionally very naive in order to focus the development effort.",
        "createdAt" : "2017-05-11T21:33:11Z",
        "updatedAt" : "2017-05-11T21:33:11Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed5af9cd9004a6db68a119de7a748eb491429856",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +61,65 @@      if (scalametaDependencies.value.isEmpty) Nil\n      else {\n        val sourcepath = sys.props(\"user.dir\")\n        val classpath =\n          scalahostClasspath.value"
  }
]