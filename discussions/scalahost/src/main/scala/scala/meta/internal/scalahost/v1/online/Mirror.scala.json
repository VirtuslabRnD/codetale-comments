[
  {
    "id" : "cee8a192-890c-4677-a4d7-dd12dd66ffeb",
    "prId" : 680,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/680#pullrequestreview-21702785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cf21c81-fa2f-4fba-bb2f-d32f3ff2ddb3",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Cool! I was thinking how to cache the database correctly since it is convenient to instantiate the mirror during global initialization.",
        "createdAt" : "2017-02-14T09:06:56Z",
        "updatedAt" : "2017-02-14T09:27:00Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c73a8ace2ee18ab80d1f5341c5ab19672d924b71",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +46,50 @@  private var cachedDatabase: Database = null\n  def database: Database = {\n    // NOTE: We rely on the fact that compilation units change monotonously,\n    // i.e. that we can only add new compilation units, but not remove them.\n    if (cachedDatabaseKey != recomputeCachedDatabaseKey()) {"
  }
]