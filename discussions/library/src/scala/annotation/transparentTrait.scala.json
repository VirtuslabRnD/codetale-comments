[
  {
    "id" : "fedc5931-7ff1-4428-8b83-d9e92da1051e",
    "prId" : 10458,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10458#pullrequestreview-537657372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b63ff8a-b0a2-4680-82ce-555661e8e467",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "What are the use cases for this feature?",
        "createdAt" : "2020-11-24T14:56:16Z",
        "updatedAt" : "2020-11-24T14:56:16Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "48399df3-ba21-4aff-a929-78d69bd5eb3c",
        "parentId" : "6b63ff8a-b0a2-4680-82ce-555661e8e467",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Essentially cross-compilation. stdLib213 already contains 9 traits that are annotated with `@transparentTrait`. Right now, we treat them also specially in a \"assume transparent\" set. But once we can backport the code into the standard library, we can drop that special treatment.\r\n",
        "createdAt" : "2020-11-24T15:27:06Z",
        "updatedAt" : "2020-11-24T15:27:07Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "0485baf3-dacf-498f-b5d1-b1583bd3b847",
        "parentId" : "6b63ff8a-b0a2-4680-82ce-555661e8e467",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The issue seems to be that we won't be able to drop the annotation itself. I'm not sure if that is a good idea.",
        "createdAt" : "2020-11-24T15:56:07Z",
        "updatedAt" : "2020-11-24T15:56:08Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "f08f00c968bdf4bc8bbe8d06b454a3b0c157ad85",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@ *  See reference/other-new-features/transparent-traits.html for details.\n */\nfinal class transparentTrait extends StaticAnnotation"
  }
]