[
  {
    "id" : "5fda7f27-ef7e-40d2-9c4a-4ea4ec5fa20f",
    "prId" : 7689,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7689#pullrequestreview-332207700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ca27d29-ef21-4705-92a0-7b3424e73378",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The least common case is `Unit` which can be put at the end.\r\n```scala\r\n  def dynamicToArray(self: Tuple): Array[Object] = (self: Any) match {\r\n    case self: TupleXXL => self.toArray\r\n    case self: Product => productToArray(self)\r\n    case self: Unit => Array.emptyObjectArray\r\n  }\r\n```",
        "createdAt" : "2019-12-14T10:39:16Z",
        "updatedAt" : "2019-12-15T09:07:46Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "08613cba238d1bf97fd8826be51ceae88b40252f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +29,33 @@    case self: Product => productToArray(self)\n    case self: Unit => Array.emptyObjectArray\n  }\n\n  def dynamicToIArray(self: Tuple): IArray[Object] = (self: Any) match {"
  },
  {
    "id" : "e9981a54-f4e2-4c8b-b293-7057184a6d0b",
    "prId" : 7689,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7689#pullrequestreview-332207700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee5f48a8-4cb2-482c-82d4-852ba4467d29",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Put the `Unit` case at the end",
        "createdAt" : "2019-12-14T10:39:39Z",
        "updatedAt" : "2019-12-15T09:07:46Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "08613cba238d1bf97fd8826be51ceae88b40252f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +33,37 @@  def dynamicToIArray(self: Tuple): IArray[Object] = (self: Any) match {\n    case self: TupleXXL => self.elems\n    case self: Product => productToArray(self).asInstanceOf[IArray[Object]]\n    case self: Unit => Array.emptyObjectArray.asInstanceOf[IArray[Object]]\n  }"
  },
  {
    "id" : "16a74cd6-b801-4b08-8d5b-adea639800b1",
    "prId" : 6929,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6929#pullrequestreview-267014856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56e5d62e-a20d-43f9-8e11-41678146f622",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's better to create IArray through its constructors instead of cast.",
        "createdAt" : "2019-07-26T06:20:31Z",
        "updatedAt" : "2019-07-26T07:49:31Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "54505c1d-b626-4419-ad8c-c27d23132f70",
        "parentId" : "56e5d62e-a20d-43f9-8e11-41678146f622",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Good point. It might also be good to have a `toIArray` on collections",
        "createdAt" : "2019-07-26T06:43:50Z",
        "updatedAt" : "2019-07-26T07:49:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c320fa893cd91e7ba8ee3ce67d7fe6c24326f54",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +53,57 @@    case 21 => Tuple21(xs(0), xs(1), xs(2), xs(3), xs(4), xs(5), xs(6), xs(7), xs(8), xs(9), xs(10), xs(11), xs(12), xs(13), xs(14), xs(15), xs(16), xs(17), xs(18), xs(19), xs(20)).asInstanceOf[T]\n    case 22 => Tuple22(xs(0), xs(1), xs(2), xs(3), xs(4), xs(5), xs(6), xs(7), xs(8), xs(9), xs(10), xs(11), xs(12), xs(13), xs(14), xs(15), xs(16), xs(17), xs(18), xs(19), xs(20), xs(21)).asInstanceOf[T]\n    case _ => TupleXXL.fromIArray(xs.clone().asInstanceOf[IArray[Object]]).asInstanceOf[T]\n  }\n"
  },
  {
    "id" : "9a39c258-60f0-471a-b347-68d0ac1b0456",
    "prId" : 6929,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6929#pullrequestreview-267033784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa6a49da-302d-4420-be1f-6d1d28f33126",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's better to create IArray through its constructors instead of cast.\r\n\r\n",
        "createdAt" : "2019-07-26T06:23:55Z",
        "updatedAt" : "2019-07-26T07:49:31Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "7d798237-47a0-4ad6-8989-e1abbebef79d",
        "parentId" : "aa6a49da-302d-4420-be1f-6d1d28f33126",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The array constructor would create a new empty array each time",
        "createdAt" : "2019-07-26T07:39:23Z",
        "updatedAt" : "2019-07-26T07:49:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c320fa893cd91e7ba8ee3ce67d7fe6c24326f54",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +188,192 @@    case self: Unit => Array.emptyObjectArray.asInstanceOf[IArray[Object]] // TODO use IArray.emptyObjectIArray\n    case self: TupleXXL => self.elems\n    case self: Product => productToArray(self).asInstanceOf[IArray[Object]]\n  }\n"
  }
]