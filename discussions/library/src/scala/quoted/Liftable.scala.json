[
  {
    "id" : "7cf4e2c1-894f-44d0-9fb0-6ebba71434ec",
    "prId" : 8242,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8242#pullrequestreview-355593252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f2795a6-8392-4848-b27f-559784618ae5",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Side note: It seems `extends` is easier to read than `as` in this case.",
        "createdAt" : "2020-02-09T09:10:33Z",
        "updatedAt" : "2020-02-09T09:10:47Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3988ba1cefd1e3a94e188596d6c900fadad2fbd3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +104,108 @@  }\n\n  given iArrayIsLiftable[T: Type](using ltArray: Liftable[Array[T]]) as Liftable[IArray[T]] {\n    def toExpr(iarray: IArray[T]): QuoteContext ?=> Expr[IArray[T]] =\n      '{ ${ltArray.toExpr(iarray.asInstanceOf[Array[T]])}.asInstanceOf[IArray[T]] }"
  },
  {
    "id" : "54acc9f6-889c-472e-bc68-436191ee5289",
    "prId" : 6944,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6944#pullrequestreview-267468371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "151e43b4-ce0f-4d52-b768-b7a87864bba1",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Handling of cached values depends on implementation details, which is up to change. Maybe always use the non-cached version for stability.\r\n\r\nThe same for `Liftable[BigDecimal] `.",
        "createdAt" : "2019-07-27T09:59:50Z",
        "updatedAt" : "2019-07-27T14:53:57Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "e3d3d800-dcd7-4a7d-821c-46ffd44aa433",
        "parentId" : "151e43b4-ce0f-4d52-b768-b7a87864bba1",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Done",
        "createdAt" : "2019-07-27T13:10:15Z",
        "updatedAt" : "2019-07-27T14:53:57Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e083d572ab658977733c2f3e163a5259ce3bd2d",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +243,247 @@    def toExpr(x: BigInt): given QuoteContext => Expr[BigInt] =\n      '{ BigInt(${x.toByteArray.toExpr}) }\n  }\n\n  /** Lift a BigDecimal using the default MathContext */"
  },
  {
    "id" : "d95422fa-592b-45f3-a4b8-8553f3b5a916",
    "prId" : 6928,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6928#pullrequestreview-267019230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4506ef64-727a-499a-a1c0-a86198f6e2a7",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "can we use `toExprOfList` here?",
        "createdAt" : "2019-07-26T06:39:04Z",
        "updatedAt" : "2019-07-26T10:24:27Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "c0be7cde-c0d7-45f0-a68c-9a3ea69120b8",
        "parentId" : "4506ef64-727a-499a-a1c0-a86198f6e2a7",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Yes, we can",
        "createdAt" : "2019-07-26T06:57:57Z",
        "updatedAt" : "2019-07-26T10:24:27Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "81dd055aedff3dae85b1b17e88212450bd1cf98d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +61,65 @@    def toExpr(xs: List[T]): given QuoteContext => Expr[List[T]] =\n      xs.map(the[Liftable[T]].toExpr).toExprOfList\n  }\n\n  given [T: Type: Liftable] as Liftable[Set[T]] = new Liftable[Set[T]] {"
  },
  {
    "id" : "60967072-cb87-4720-ab10-f47324638b24",
    "prId" : 6928,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6928#pullrequestreview-267019540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adead0fb-31ab-4d54-aed3-94c88985bb27",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Minor: maybe still write `new Liftable[...]` to be consistent and explicit as above, the same for the code below",
        "createdAt" : "2019-07-26T06:49:34Z",
        "updatedAt" : "2019-07-26T10:24:27Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "239876a9-0b47-494f-9efd-e7e950ac5688",
        "parentId" : "adead0fb-31ab-4d54-aed3-94c88985bb27",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It got way too long and made it harder to read.",
        "createdAt" : "2019-07-26T06:59:03Z",
        "updatedAt" : "2019-07-26T10:24:27Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "81dd055aedff3dae85b1b17e88212450bd1cf98d",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +90,94 @@    def toExpr(tup: Tuple1[T1]) =\n      '{ Tuple1(${tup._1.toExpr}) }\n  }\n\n  given [T1: Type: Liftable, T2: Type: Liftable] as Liftable[Tuple2[T1, T2]] = new {"
  }
]