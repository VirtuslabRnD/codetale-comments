[
  {
    "id" : "d237f004-8c45-4030-a0a9-fc694e73ec91",
    "prId" : 7398,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7398#pullrequestreview-299533874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e1a0a7d-4034-4f0d-950a-a6020cf1283c",
        "parentId" : null,
        "authorId" : "4107dafe-4e7b-4e85-8d5b-63e06e0e6318",
        "body" : "Should we remove this line? ",
        "createdAt" : "2019-10-09T14:56:57Z",
        "updatedAt" : "2019-10-09T14:57:05Z",
        "lastEditedBy" : "4107dafe-4e7b-4e85-8d5b-63e06e0e6318",
        "tags" : [
        ]
      },
      {
        "id" : "acfedae4-67fe-4149-8877-5a14d4f937f3",
        "parentId" : "1e1a0a7d-4034-4f0d-950a-a6020cf1283c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The term contains the argument sequence",
        "createdAt" : "2019-10-09T16:16:42Z",
        "updatedAt" : "2019-10-09T16:16:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ba89c0f284ceaec0ef9de86ae1efa5263108f82",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +834,838 @@          tpt.tpe match {\n            case Types.Repeated(_) =>\n              printTree(term)\n              term match {\n                case Repeated(_, _) | Inlined(None, Nil, Repeated(_, _))  => this"
  },
  {
    "id" : "f519a984-bef9-4e12-b049-4d3a686e63fa",
    "prId" : 6881,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6881#pullrequestreview-267472183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2afdf4c3-433d-4926-8470-6e1852d7910c",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "We have `isImplicitFunctionType` in tasty API",
        "createdAt" : "2019-07-26T07:17:49Z",
        "updatedAt" : "2019-07-30T05:57:03Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "0376cfb1-9a07-4416-a411-03410f733d42",
        "parentId" : "2afdf4c3-433d-4926-8470-6e1852d7910c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "used",
        "createdAt" : "2019-07-27T15:21:14Z",
        "updatedAt" : "2019-07-30T05:57:03Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "80e42bb5eaa98a1081900d030216619c2018efa0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +836,840 @@            case Select(This(_), \"<init>\") => this += \"this\" // call to constructor inside a constructor\n            case Select(qual, \"apply\") if qual.tpe.isImplicitFunctionType =>\n              printTree(qual) += \" given \"\n            case _ => printQualTree(fn)\n          }"
  },
  {
    "id" : "8731a1d6-ae3b-447d-b47c-ef879755396c",
    "prId" : 6113,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6113#pullrequestreview-216044695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78425768-ac4d-4e99-b7f7-ce4c31793a7b",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I'm wondering inside the `if`, what is the value of `prefix` at runtime?",
        "createdAt" : "2019-03-19T09:10:10Z",
        "updatedAt" : "2019-03-19T10:02:12Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "fba2204b-561f-446a-adc1-0b8ba7adb401",
        "parentId" : "78425768-ac4d-4e99-b7f7-ce4c31793a7b",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is a `Types.EmptyPrefix()` as the pattern matching indicates.",
        "createdAt" : "2019-03-19T09:23:50Z",
        "updatedAt" : "2019-03-19T10:02:12Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "52963be4-230b-42d9-a6f5-a633d3fcb3f4",
        "parentId" : "78425768-ac4d-4e99-b7f7-ce4c31793a7b",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "If that is the case, it seems to me the type is ill-formed, the `prefix` is wrong -- or I misunderstood the invariant for `TermRef`. We can get this in to unblock other issues, but it would be nice to clarify the invariant about `TermRef`. /cc: @odersky .",
        "createdAt" : "2019-03-19T09:39:09Z",
        "updatedAt" : "2019-03-19T10:02:12Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09e1a9839485ad8c480d3d1f27e2e7ba5bd2c43",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1452,1456 @@                if (packagePath != \"\")\n                  this += packagePath += \".\"\n              }\n            case IsType(prefix @ Type.SymRef(IsClassSymbol(_), _)) =>\n              printType(prefix)"
  },
  {
    "id" : "837a8e4d-9104-492f-b8cd-4157b01d84dd",
    "prId" : 5863,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5863#pullrequestreview-217334898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa2fc3ec-6233-41e9-8d6e-1210a80779b7",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Now you can use `case tpe @ Type.SymRef(IsTermSymbol(sym), _) =>`",
        "createdAt" : "2019-03-21T09:09:15Z",
        "updatedAt" : "2019-03-21T09:56:32Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "3776ce90-1651-4a6a-9bd1-4edcfa1ff7dd",
        "parentId" : "aa2fc3ec-6233-41e9-8d6e-1210a80779b7",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Now we implemented `isTerm` as a helper method.",
        "createdAt" : "2019-03-21T16:00:20Z",
        "updatedAt" : "2019-03-21T16:00:20Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "50cdb1e6786e916a3d3f6e18f8239dc1ebb76659",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +1369,1373 @@              printType(tpe)\n              this += \".type\"\n            case tpe @ Type.SymRef(sym, _) if sym.isTerm =>\n              printType(tpe)\n              this += \".type\""
  },
  {
    "id" : "0de42637-3e37-4603-a319-875cb9e42cc5",
    "prId" : 5729,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5729#pullrequestreview-197590294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "005c5c7a-81fb-4275-92bc-a0747a389822",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Maybe a document for `printTargDef `, explaining what the meaning of `(TypeDef, TypeDef)`, the same for `printTargsDefs` as well,",
        "createdAt" : "2019-01-29T14:47:28Z",
        "updatedAt" : "2019-01-29T14:47:28Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdf8139be91ab334f6214f9f471b023c7191e609",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +1147,1151 @@      }\n\n      def printTargDef(arg: (TypeDef, TypeDef), isMember: Boolean = false, isDef:Boolean = true): Buffer = {\n        val (argDef, argCons) = arg\n"
  },
  {
    "id" : "1a1d90f3-42ad-4b3c-a94e-c91fe2a48396",
    "prId" : 5670,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5670#pullrequestreview-189732145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6a11565-9af6-44c5-87b0-fbbfa0e6840c",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Private is not handled? In other places as well.",
        "createdAt" : "2019-01-06T21:17:17Z",
        "updatedAt" : "2019-01-07T09:35:13Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "ed40068e-517a-41f5-8ddb-b9fd2a725a6a",
        "parentId" : "a6a11565-9af6-44c5-87b0-fbbfa0e6840c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Actually, the private flag is missing altogether ðŸ¤£. I will add it.",
        "createdAt" : "2019-01-07T09:31:39Z",
        "updatedAt" : "2019-01-07T09:35:13Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "3c4c9844-2a06-4950-ab23-4d8195c38d90",
        "parentId" : "a6a11565-9af6-44c5-87b0-fbbfa0e6840c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Added",
        "createdAt" : "2019-01-07T09:35:22Z",
        "updatedAt" : "2019-01-07T09:35:22Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce80f0f26ba4ca120f3e2d7278fa557b16295e13",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +129,133 @@      if (flags.is(Flags.Param)) flagList += \"Flags.Param\"\n      if (flags.is(Flags.ParamAccessor)) flagList += \"Flags.ParamAccessor\"\n      flagList.result().mkString(\" | \")\n    }\n"
  },
  {
    "id" : "3f5cd8ff-3f2c-4d8c-9cdf-da453fa53f5a",
    "prId" : 5510,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5510#pullrequestreview-182124465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97da4995-5c00-4dd8-ac3a-c7e5053b953a",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The code seems to have forgotten the case `implicit object A`.",
        "createdAt" : "2018-12-06T08:26:01Z",
        "updatedAt" : "2018-12-06T08:45:39Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dc058727aed8f433295364a18ceb7e85b6c9c48",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +789,793 @@            case _ => true\n          }\n          printFlatBlock(stats, expr)\n\n        case Term.Inlined(_, bindings, expansion) =>"
  },
  {
    "id" : "30e5b119-7a9a-4bfe-9f25-762e7eb68ade",
    "prId" : 5510,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5510#pullrequestreview-182124465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7d6c97-fe6b-400a-8148-e0dccee0ab91",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Code smell for `flatBlock`: is there a way to simplify the code and logic?",
        "createdAt" : "2018-12-06T08:37:25Z",
        "updatedAt" : "2018-12-06T08:45:39Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dc058727aed8f433295364a18ceb7e85b6c9c48",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +872,876 @@        val flatExpr = extractFlatExpr(expr)\n        (flatStats.result(), flatExpr)\n      }\n\n      def printFlatBlock(stats: List[Statement], expr: Term): Buffer = {"
  },
  {
    "id" : "ad3caddf-a866-4df4-b656-07f4df4afbcc",
    "prId" : 5510,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5510#pullrequestreview-182210668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27d21cac-90ef-4ae0-aa8e-172bd11ae828",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The `Remove Term.Lambda` logic seems to belong to somewhere else . ",
        "createdAt" : "2018-12-06T08:45:31Z",
        "updatedAt" : "2018-12-06T08:45:39Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "91e342d2-ef22-4a99-a197-9b8e73918a8b",
        "parentId" : "27d21cac-90ef-4ae0-aa8e-172bd11ae828",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "For the decompiler, `Term.Lambda` are `no-op`/`no-print` trees that must be removed from the blocks. We need to remove them here because they might affect the block flattening.",
        "createdAt" : "2018-12-06T12:15:12Z",
        "updatedAt" : "2018-12-06T12:15:12Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dc058727aed8f433295364a18ceb7e85b6c9c48",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +883,887 @@            (init, last)\n          case _ => (stats2, expr1)\n        }\n        if (stats3.isEmpty) {\n          printTree(expr3)"
  }
]