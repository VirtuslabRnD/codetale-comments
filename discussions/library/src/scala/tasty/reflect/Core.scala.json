[
  {
    "id" : "b34f8cc5-b454-401e-8cc2-ce402d5f5aca",
    "prId" : 6275,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6275#pullrequestreview-225380664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec74f6a5-ac2d-4c35-aa89-d267f85cb359",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "A little concern for flattened `Pattern` names:  `Wildcard` has different meanings in different places, it may cause confusion.\r\n\r\nMaybe `WildcardPattern` -- as most macros will not touch patterns, a long name will not affect usability.",
        "createdAt" : "2019-04-11T07:47:46Z",
        "updatedAt" : "2019-04-11T07:59:17Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "b79a1d48-d1d9-459d-aac1-d15b8522053c",
        "parentId" : "ec74f6a5-ac2d-4c35-aa89-d267f85cb359",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I renamed it to `WildcardPattern`",
        "createdAt" : "2019-04-11T07:59:45Z",
        "updatedAt" : "2019-04-11T07:59:45Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "59e378a7bd701e36a18898d1dd1338fb54dae5f2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +308,312 @@    /** Pattern representing a `_` pattern */\n    type WildcardPattern = kernel.WildcardPattern\n\n  /** Type or bounds */\n  type TypeOrBounds = kernel.TypeOrBounds"
  },
  {
    "id" : "3519f58a-0669-49e5-b1f9-7667edd37bd6",
    "prId" : 5990,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5990#pullrequestreview-211072782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac148e67-5484-4495-9aae-8891235b2099",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's better to find another name for `Core`, to avoid conflicts with `Kernel`.",
        "createdAt" : "2019-03-05T20:42:55Z",
        "updatedAt" : "2019-03-06T11:17:20Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "a296eabb-b320-4cf4-bcd9-0330bb183a15",
        "parentId" : "ac148e67-5484-4495-9aae-8891235b2099",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "What about `ReflectionTypes`?",
        "createdAt" : "2019-03-06T07:17:33Z",
        "updatedAt" : "2019-03-06T11:17:20Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf304cb81d65d7e7d69b7b9441dc22aa2a545b5b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +117,121 @@ *  ```\n */\ntrait Core {\n\n  val kernel: Kernel"
  },
  {
    "id" : "bb889dbb-ee91-44b6-be29-07e618c1b1de",
    "prId" : 5529,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5529#pullrequestreview-179206840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "695cf823-8f9a-4ee9-81b9-61d9fdb2203c",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Where is this type generated?",
        "createdAt" : "2018-11-28T09:23:03Z",
        "updatedAt" : "2018-11-28T09:25:40Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "078c1410-e0e1-445e-a5b8-a7e7ca90a81d",
        "parentId" : "695cf823-8f9a-4ee9-81b9-61d9fdb2203c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Currently only in reified quoted code to splice in the types trees into typedefs rather than reconstructing the full type tree to then splice the type trees. The are some potential other use case.",
        "createdAt" : "2018-11-28T09:55:42Z",
        "updatedAt" : "2018-11-28T09:55:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "757c3c722b0a7ee4fce9fb03efccddadfb309eb1",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +309,313 @@      /** Type tree within a block with aliases `{ type U1 = ... ; T[U1, U2] }` */\n      type Block <: TypeTree\n\n    }\n"
  },
  {
    "id" : "77f3b86e-5d86-4e95-b66c-306fdccbe570",
    "prId" : 5529,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5529#pullrequestreview-179216927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4c41c6a-2f97-4f09-9abb-5c664842b902",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "What's the relation between `SymRef`, `TermRef` and `TypeRef`?",
        "createdAt" : "2018-11-28T09:23:37Z",
        "updatedAt" : "2018-11-28T09:25:40Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "864bc885-54d6-4bf5-b4c6-e30cec7f47c4",
        "parentId" : "f4c41c6a-2f97-4f09-9abb-5c664842b902",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The difference is in the semantic name. SymRefs have a name that contains a symbol while the other ones do not. As we expose names as String s we need to distinguish them in another way.",
        "createdAt" : "2018-11-28T09:58:04Z",
        "updatedAt" : "2018-11-28T09:58:05Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "c8d8b418-a809-46de-a734-d48fd7880ec6",
        "parentId" : "f4c41c6a-2f97-4f09-9abb-5c664842b902",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I'm not sure about this one, maybe @odersky can share some thoughts here?",
        "createdAt" : "2018-11-28T10:02:54Z",
        "updatedAt" : "2018-11-28T10:02:54Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "1d4adb37-aae8-464c-a449-bde40bbfd63f",
        "parentId" : "f4c41c6a-2f97-4f09-9abb-5c664842b902",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It was @odersky that designed it like this in the original draft.",
        "createdAt" : "2018-11-28T10:17:10Z",
        "updatedAt" : "2018-11-28T10:17:11Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "757c3c722b0a7ee4fce9fb03efccddadfb309eb1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +337,341 @@\n      /** Type of a reference to a symbol */\n      type SymRef <: Type\n\n      /** Type of a reference to a term */"
  },
  {
    "id" : "e1ceaf05-647c-40c2-aed5-1f9a0ddd4587",
    "prId" : 5483,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5483#pullrequestreview-177147653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "347517f6-b564-40c3-9932-78de397000a8",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`Inferred` instead of `Synthetic`?",
        "createdAt" : "2018-11-21T09:02:36Z",
        "updatedAt" : "2018-11-21T09:03:22Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "ed2f155e-e063-4d57-8268-149bec6ba3c9",
        "parentId" : "347517f6-b564-40c3-9932-78de397000a8",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Good idea. I will propose it in another PR.",
        "createdAt" : "2018-11-21T09:39:04Z",
        "updatedAt" : "2018-11-21T09:39:04Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e5af48a7e1d82d8c8235304e5ab1b0acad0002",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +266,270 @@\n      /** Type tree representing an inferred type */\n      type Synthetic <: TypeTree\n\n      /** Type tree representing a reference to definition with a given name */"
  },
  {
    "id" : "c21d6250-c0d0-48c0-b7ee-a810613bc2b5",
    "prId" : 5475,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5475#pullrequestreview-177836905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d8e5904-d96d-42f3-b23f-8f6fb43fdf36",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I think the document is not precise. Given the following code:\r\n\r\n```Scala\r\nval a: List[_] = List(1, \"String\")\r\n```\r\n\r\nThe underscore become `TypeBoundsTree(TypeTree( | scala.this.Nothing), TypeTree( | scala.this.Any) | )`",
        "createdAt" : "2018-11-23T08:27:36Z",
        "updatedAt" : "2018-11-23T09:56:30Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "d414885a-89a2-4913-8aa3-2dad629b3f36",
        "parentId" : "3d8e5904-d96d-42f3-b23f-8f6fb43fdf36",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I think we can give the [hypothesis](https://github.com/lampepfl/dotty/pull/5483#issuecomment-440605499) in #5483 a second thought.\r\n\r\nEven if we want to report errors for type trees:\r\n\r\n- it's completely acceptable for end users to see the error report on the _whole_ type tree\r\n- they work for type alias and infered types as well\r\n- In practice, I conjecture that macro authors will check types to detect errors, and then just report errors on the _whole_ type tree instead of inspecting the components of type trees & deal with inferred and aliased types.\r\n\r\n```Scala\r\nfooMacro[List[Int]]\r\n              ^^^\r\n```",
        "createdAt" : "2018-11-23T08:37:02Z",
        "updatedAt" : "2018-11-23T09:56:30Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "114a5ba7afb6e17df5ff3ca7c037dc0feea517c7",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +317,321 @@     */\n    type WildcardType <: TypeOrBoundsTree\n\n  /** Type or bounds */\n  type TypeOrBounds <: AnyRef"
  },
  {
    "id" : "a4084102-e240-4a7c-8c92-f969ab892968",
    "prId" : 5437,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5437#pullrequestreview-174848787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8acd149-387a-42f3-a830-f9854ac373f5",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I'd remove ~executable~ from the doc above.",
        "createdAt" : "2018-11-14T13:07:31Z",
        "updatedAt" : "2018-11-14T13:57:02Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3b9aa2598bcf4dfb187e358188a4b45a8c3f063",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +126,130 @@\n  /** Tree representing code written in the source */\n  type Tree\n\n    /** Tree representing a pacakage clause in the source code */"
  },
  {
    "id" : "83dc7211-020f-449a-982c-2632953a7ac6",
    "prId" : 5437,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5437#pullrequestreview-175418999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d48d2f1-39dc-41e4-897c-0e981d2c8ed2",
        "parentId" : null,
        "authorId" : "d5511a84-165f-4bfa-85ce-b7c872b2f880",
        "body" : "/s/pacakage/package",
        "createdAt" : "2018-11-15T15:50:43Z",
        "updatedAt" : "2018-11-15T15:50:43Z",
        "lastEditedBy" : "d5511a84-165f-4bfa-85ce-b7c872b2f880",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3b9aa2598bcf4dfb187e358188a4b45a8c3f063",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +128,132 @@  type Tree\n\n    /** Tree representing a pacakage clause in the source code */\n    type PackageClause <: Tree\n"
  }
]