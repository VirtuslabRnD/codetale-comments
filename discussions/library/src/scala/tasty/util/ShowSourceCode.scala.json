[
  {
    "id" : "ad12baa7-4254-4352-8772-d5b4aaac6f89",
    "prId" : 4707,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4707#pullrequestreview-131250543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec99f23-ce99-4ac9-8ae1-cd192569762d",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`inBrackets` to match `inParens`? Or `inSquare`?",
        "createdAt" : "2018-06-22T14:42:40Z",
        "updatedAt" : "2018-06-22T15:22:02Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "aae04583-dfff-4ead-b964-726b5f283218",
        "parentId" : "5ec99f23-ce99-4ac9-8ae1-cd192569762d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Will change in next pr",
        "createdAt" : "2018-06-22T15:55:04Z",
        "updatedAt" : "2018-06-22T15:55:04Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "078c773bead06d07ed406c9a8c0fe3cfe7341d46",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +46,50 @@      body\n      this += \"]\"\n    }\n\n    def inBlock(body: => Unit): Buffer = {"
  },
  {
    "id" : "8dadb488-0b8b-4c1d-8e1e-2d7fa9f6765b",
    "prId" : 4707,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4707#pullrequestreview-131222088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "782da5ea-c393-466f-83ae-ec08b159b886",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`inBraces` to match `inParens`?\r\n\r\nedit: `inBlock` is fine as it is.",
        "createdAt" : "2018-06-22T14:43:05Z",
        "updatedAt" : "2018-06-22T15:22:02Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "078c773bead06d07ed406c9a8c0fe3cfe7341d46",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +56,60 @@      this += lineBreak() += \"}\"\n    }\n\n    def result(): String = sb.result()\n"
  },
  {
    "id" : "4ceb95ef-cdc6-4202-9ac5-c2b9e74216f5",
    "prId" : 4706,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4706#pullrequestreview-131194739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f130ee4-e05c-4d35-9d7a-e8346fde6f1d",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Name-checking may potentially cause problems, though we expect no one will write the following code:\r\n\r\n```Scala\r\nclass `package$`  {\r\n  def `<init>` = ()\r\n}\r\n```",
        "createdAt" : "2018-06-22T13:16:54Z",
        "updatedAt" : "2018-06-22T13:57:59Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "004922ea-2cb0-41a3-84bd-e4fef4b25c69",
        "parentId" : "6f130ee4-e05c-4d35-9d7a-e8346fde6f1d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "`$` is reserved for compiler use only by spec.",
        "createdAt" : "2018-06-22T13:31:54Z",
        "updatedAt" : "2018-06-22T13:57:59Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "59513dd4-48a0-4433-8699-2aa040613388",
        "parentId" : "6f130ee4-e05c-4d35-9d7a-e8346fde6f1d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Or in this case the `$` might be encoded",
        "createdAt" : "2018-06-22T13:32:19Z",
        "updatedAt" : "2018-06-22T13:57:59Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "877821844eb5767c6583454fdd4d2cac454ec402",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +87,91 @@          this += \"package object \"\n          printDefinitionName(cdef.owner)\n        }\n        else if (flags.isObject) this += \"object \" += name.stripSuffix(\"$\")\n        else if (flags.isTrait) this += \"trait \" += name"
  },
  {
    "id" : "cb87697e-adf3-4337-8104-3bd6d91c30fe",
    "prId" : 4705,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4705#pullrequestreview-131252667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "207ca807-aad0-43b9-8d8c-28cae34bf241",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Why skip `val ` (line 641) if we have `override`?",
        "createdAt" : "2018-06-22T14:52:31Z",
        "updatedAt" : "2018-06-22T16:02:32Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "46132ae8-7f5e-442f-811f-f7ddf30595a7",
        "parentId" : "207ca807-aad0-43b9-8d8c-28cae34bf241",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We skip `val` if we have NOT `override`",
        "createdAt" : "2018-06-22T16:00:46Z",
        "updatedAt" : "2018-06-22T16:02:32Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "a62585cac00e770b1f9028e2a7c1c7b54d3372ca",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +639,643 @@                if (vdef.flags.isOverride) {\n                  this += \"override \"\n                  printedPrefix = true\n                }\n                printedPrefix  |= printProtectedOrPrivate(vdef)"
  },
  {
    "id" : "8b3d5c9f-032f-4498-a420-e41ea073752b",
    "prId" : 4704,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4704#pullrequestreview-131183135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb14029b-18a5-4706-a9dc-3bacddeb8eb3",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Introduce a verb `inParens { ... }`?",
        "createdAt" : "2018-06-22T12:57:51Z",
        "updatedAt" : "2018-06-22T12:57:59Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "60ed50f6dc35597e2b5bf0fff1c7064aa8250607",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +680,684 @@        this += \"(\"\n        printPatterns(trees, \" | \")\n        this += \")\"\n\n      case Pattern.TypeTest(tpt) =>"
  },
  {
    "id" : "712695c4-8b66-4fa8-ac16-6c0733a79fbc",
    "prId" : 4698,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4698#pullrequestreview-130799543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2e8f6aa-8e9f-4a01-8368-e2a1633f35e8",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`sealed`, `final` and access modifiers are missing here.",
        "createdAt" : "2018-06-21T11:41:58Z",
        "updatedAt" : "2018-06-21T13:00:43Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "ff4578ba-2660-497c-87f4-e890f1e6a1d3",
        "parentId" : "b2e8f6aa-8e9f-4a01-8368-e2a1633f35e8",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "`final` is a few lines above. I will add `sealed `.",
        "createdAt" : "2018-06-21T12:50:53Z",
        "updatedAt" : "2018-06-21T13:00:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a2155805207149c6395bafc56f33a66bf99361f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +77,81 @@        else if (flags.isTrait) this += \"trait \" += name\n        else if (flags.isAbstract) this += \"abstract class \" += name\n        else this += \"class \" += name\n\n        if (!flags.isObject) {"
  },
  {
    "id" : "41820793-3c4e-4a5b-b4a1-994e51279460",
    "prId" : 4698,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4698#pullrequestreview-130843107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edf36991-3cf7-4bfc-9ded-08f58c0836e5",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems it is also OK to print the prefix here? For hygiene, we do need to print the prefix for local members as well.",
        "createdAt" : "2018-06-21T11:47:34Z",
        "updatedAt" : "2018-06-21T13:00:43Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "ddaaf939-7901-4a43-827f-3926bdd0e2f9",
        "parentId" : "edf36991-3cf7-4bfc-9ded-08f58c0836e5",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This is to not print prefixes in references inside the parents of a class.",
        "createdAt" : "2018-06-21T12:52:25Z",
        "updatedAt" : "2018-06-21T13:00:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "82179197-cf44-4c5f-b4b1-b728e7e0ee82",
        "parentId" : "edf36991-3cf7-4bfc-9ded-08f58c0836e5",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Could you please explain what do you mean by `prefixes in references inside the parents of a class`?  I see in the code `C.this.T` becomes `T`, which may be unhygienic.",
        "createdAt" : "2018-06-21T14:25:54Z",
        "updatedAt" : "2018-06-21T14:25:54Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "0145f313-c69b-4ac9-a293-74d5af418769",
        "parentId" : "edf36991-3cf7-4bfc-9ded-08f58c0836e5",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I will reprint the prefix and add test cases where this fails",
        "createdAt" : "2018-06-21T14:30:09Z",
        "updatedAt" : "2018-06-21T14:30:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a2155805207149c6395bafc56f33a66bf99361f",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +788,792 @@              printType(prefix)\n              this += \".\"\n            }\n        }\n        printDefinitionName(sym)"
  },
  {
    "id" : "3c7363a5-2cd8-4850-8aa7-07b7a1d764f6",
    "prId" : 4694,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4694#pullrequestreview-130775098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ee5387a-dd71-4b13-9a48-42f5e1543df0",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I think it's worthy to create another verb like `braced` which could be used in several places to simplify the code.",
        "createdAt" : "2018-06-21T11:26:53Z",
        "updatedAt" : "2018-06-21T11:27:34Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "8296addc-8263-45c5-9549-a23c679ba442",
        "parentId" : "8ee5387a-dd71-4b13-9a48-42f5e1543df0",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Nice idea. I will add it in another PR.",
        "createdAt" : "2018-06-21T11:32:47Z",
        "updatedAt" : "2018-06-21T11:32:47Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3d332be6a5e79811c4b8a10f7f8d80ae30a0b41",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +389,393 @@            printCases(cases, lineBreak())\n          }\n          this += lineBreak() += \"}\"\n        }\n        finallyOpt match {"
  },
  {
    "id" : "de6325db-c332-4437-83a4-55e940191a50",
    "prId" : 4687,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4687#pullrequestreview-130248875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e85edcd-1138-42e1-88af-d380ae3a73cf",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "why `package`? BTW, how are backquoted identifiers are handled?",
        "createdAt" : "2018-06-19T20:20:16Z",
        "updatedAt" : "2018-06-19T20:26:22Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "9be670a0-fcfd-4200-bec2-61f7edb7ceae",
        "parentId" : "1e85edcd-1138-42e1-88af-d380ae3a73cf",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "To avoid printing the package object in `scala.reflect.package.classTag`. \r\n\r\nBackquoted are not yet handled.",
        "createdAt" : "2018-06-20T06:00:45Z",
        "updatedAt" : "2018-06-20T06:00:45Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "38fe18bf00a285e52cbf7bd9e86b53c4a036b6c4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +238,242 @@      case Term.Select(qual, name, sig) =>\n        printTree(qual)\n        if (name != \"<init>\" && name != \"package\")\n          this += \".\" += name\n        this"
  },
  {
    "id" : "b09a1d61-7c8c-4a53-9709-9ec6b88854c7",
    "prId" : 4681,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4681#pullrequestreview-129846830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "996203ab-55fc-49ad-b96e-8f58f3d80c11",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Nice simplification 👍 ",
        "createdAt" : "2018-06-19T07:32:09Z",
        "updatedAt" : "2018-06-19T07:34:58Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "01f19b4e647ee241ea7019e5d208c9195b4e3a7e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +234,238 @@\n      case tree @ Term.Ident(_) =>\n        printType(tree.tpe)\n\n      case Term.Select(qual, name, sig) =>"
  },
  {
    "id" : "6150d91b-133d-485d-9629-ffbc95f9a549",
    "prId" : 4676,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4676#pullrequestreview-129520815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64a539b4-a09f-4e35-9921-70e9d3b04adc",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems `SymRef` subsumes `TermRef`?",
        "createdAt" : "2018-06-18T11:13:49Z",
        "updatedAt" : "2018-06-18T13:44:37Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "312765bd-332e-4540-b5f5-7d4eff0959ff",
        "parentId" : "64a539b4-a09f-4e35-9921-70e9d3b04adc",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "No, both are `core.Types.NamedType`s but `SymRef` as a symbol as `designator` and `TermRef` has a `TermName` as `designator`.",
        "createdAt" : "2018-06-18T11:25:43Z",
        "updatedAt" : "2018-06-18T13:44:37Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "40fffc1e9bc5d2205b23f909eb5e809c54001fe6",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +230,234 @@      case tree @ Term.Ident(name) =>\n        tree.tpe match {\n          case Type.SymRef(_, Types.EmptyPrefix()) | Type.TermRef(_, Types.EmptyPrefix()) => this += name\n          case Type.SymRef(_, prefix) =>\n            printTypeOrBound(prefix)"
  },
  {
    "id" : "673dbb4a-30c1-43c9-8ed0-a1d2824fb983",
    "prId" : 4676,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4676#pullrequestreview-129572862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "151621ad-671b-4d25-94d4-206d653ed14b",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`tests/run-with-compiler/i3947c.scala` failed due to the change, I cannot figure out why.",
        "createdAt" : "2018-06-18T13:38:53Z",
        "updatedAt" : "2018-06-18T13:44:37Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "89828e7d-0c04-4179-b169-b81fcb5bbc64",
        "parentId" : "151621ad-671b-4d25-94d4-206d653ed14b",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It was because `scala.runtime.Null$` and `scala.runtime.Nothing$` where handled as modules. Those are now special cases.",
        "createdAt" : "2018-06-18T13:57:10Z",
        "updatedAt" : "2018-06-18T13:57:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "40fffc1e9bc5d2205b23f909eb5e809c54001fe6",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +671,675 @@          case tpe => printType(tpe)\n        }\n        printTypeAndAnnots(tree.tpe)\n\n      case TypeTree.TypeIdent(name) =>"
  },
  {
    "id" : "f5e06adc-408b-4216-bfe0-7ae56b8abcb8",
    "prId" : 4633,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4633#pullrequestreview-127376892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d19594d-da4d-46e9-a1b7-db43b9c1aa5c",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Could you explain why special case object here? ",
        "createdAt" : "2018-06-09T19:04:32Z",
        "updatedAt" : "2018-06-10T12:41:32Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "c7a7e585-9e18-46e5-a0d4-3ac3f7b2760f",
        "parentId" : "2d19594d-da4d-46e9-a1b7-db43b9c1aa5c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "When refering to the this type of a module we just refere directly to the module itself. For example `scala.Predef` and not `scala.Predef.this`.",
        "createdAt" : "2018-06-09T19:44:18Z",
        "updatedAt" : "2018-06-10T12:41:32Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7214a83505a0db38a44c95bd739d60b0bc84926",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +741,745 @@          case Type.SymRef(cdef @ ClassDef(_, _, _, _, _), _) if !cdef.flags.isObject => this += \".this\"\n          case _ => this\n        }\n\n      case _ =>"
  },
  {
    "id" : "4eee9804-d91c-499e-b8f0-5dca156158d1",
    "prId" : 4579,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4579#pullrequestreview-124306688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38d46795-9dd6-4b51-8015-f131255ee09b",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Do we have a test for partial functions?\r\n\r\nAnother tricky issue is extractors with implicits. Maybe add a TODO to support later.",
        "createdAt" : "2018-05-29T16:18:52Z",
        "updatedAt" : "2018-05-30T11:53:00Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "21b08f73-7030-4969-b4e8-b327742b8ded",
        "parentId" : "38d46795-9dd6-4b51-8015-f131255ee09b",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Not yet, I will add it later. The idea is to start testing all the files in `test/pos` and `test/run`. ",
        "createdAt" : "2018-05-30T08:54:01Z",
        "updatedAt" : "2018-05-30T11:53:00Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cb137415b384cd56bff262bd09e6ca105a78e6",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +293,297 @@          printCases(cases, lineBreak())\n        }\n        this += lineBreak() += \"}\"\n\n      case Term.Try(body, cases, finallyOpt) =>"
  }
]