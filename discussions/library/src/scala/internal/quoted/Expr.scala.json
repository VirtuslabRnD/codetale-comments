[
  {
    "id" : "34108cba-cec5-4976-8a13-e8aaba060e5b",
    "prId" : 9551,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9551#pullrequestreview-467567862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems both can be `val` instead of `def`?",
        "createdAt" : "2020-08-14T11:52:22Z",
        "updatedAt" : "2020-08-14T11:52:48Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "87d7852e-9288-4195-ab6c-84a86043826e",
        "parentId" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "They could but they would not get the optimization where the context parameter is passed directly as one of the method parameters and the closure is not created. We effectively call the following method at runtime (not closure creation needed):\r\n```scala\r\ndef Unit(using q: QuoteContext): quoted.Expr[Unit] = {\r\n  import qctx.tasty._\r\n  Literal(Constant(())).seal.asInstanceOf[quoted.Expr[Unit]]\r\n}\r\n```",
        "createdAt" : "2020-08-14T12:39:08Z",
        "updatedAt" : "2020-08-14T12:39:08Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "3b547624-e42f-4396-a530-483616d1ca4d",
        "parentId" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Good point, maybe we can write it directly, instead of the original form? ",
        "createdAt" : "2020-08-14T12:43:01Z",
        "updatedAt" : "2020-08-14T12:43:01Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "69caddde-49b7-487f-b7f6-4701b817d7bb",
        "parentId" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is like this to align with the quote internal encoding to simplify the transformation.",
        "createdAt" : "2020-08-14T12:47:31Z",
        "updatedAt" : "2020-08-14T12:47:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "5a9cf1f1-cd76-4159-8e06-76bae8c71dfc",
        "parentId" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I will consider changing the encoding but this is a larger change that will take some time to accomplish.",
        "createdAt" : "2020-08-14T12:58:51Z",
        "updatedAt" : "2020-08-14T12:58:52Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "a0fe0e0e-d9cc-44eb-a50d-b78b1394abfe",
        "parentId" : "3d4bd25a-d60f-4095-98e0-41421e0f6a33",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Thanks for the clarification, it makes sense.",
        "createdAt" : "2020-08-14T13:20:00Z",
        "updatedAt" : "2020-08-14T13:20:00Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "566bdf5924963eb9db3ce1d612a69799c645c6ff",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +66,70 @@    import qctx.tasty._\n    Literal(Constant(())).seal.asInstanceOf[quoted.Expr[Unit]]\n  }\n\n}"
  }
]