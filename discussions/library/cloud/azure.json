[
  {
    "id" : "c4813353-48fa-407a-abc8-40bc191706e3",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8866927a-b808-4b90-a75d-7ad17f75a370",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "remember disks\n",
        "createdAt" : "2014-06-08T07:42:14Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +345,349 @@                role_props = azure.get_role(name, deployment.name, role.role_name)\n                if role_props.os_virtual_hard_disk.disk_name not in disk_names:\n                    disk_names.append(role_props.os_virtual_hard_disk.disk_name)\n\n            result = azure.delete_deployment(name, deployment.name)"
  },
  {
    "id" : "1c5b1e12-77f5-4b11-86c6-3fda21c5b542",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09610b4c-b2cb-4ca2-9650-851ef9f6fd74",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "delete disks\n",
        "createdAt" : "2014-06-08T07:42:53Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 223,
    "diffHunk" : "@@ -1,1 +351,355 @@\n            for disk_name in disk_names:\n                azure.delete_disk(disk_name, True)\n\n            # Now that the vm is deleted, remove the cloud service"
  },
  {
    "id" : "2ae968e6-65f9-4425-8393-0f10ebcb2ccb",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c22b3cd-ee06-4f18-a0e6-de8381804050",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "handle temporary redirects in a wrapper. only needed for version <= 0.8.0\n",
        "createdAt" : "2014-06-08T07:43:32Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +400,404 @@    wait_timeout_redirects = int(module.params.get('wait_timeout_redirects'))\n    if LooseVersion(windows_azure.__version__) <= \"0.8.0\":\n        #wrapper for handling redirects which the sdk <= 0.8.0 is not following\n        azure = Wrapper(ServiceManagementService(subscription_id, management_cert_path), wait_timeout_redirects)\n    else:"
  },
  {
    "id" : "51c1c5ce-de5b-4dac-bd42-f0a7d6970379",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81a026fe-f4e5-4030-886a-37047f3bdb04",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "wait for the certificate to be added to the cloud servers, otherwise the create_deployment below might fail\n",
        "createdAt" : "2014-06-08T07:46:19Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +259,263 @@            # Add certificate to cloud service\n            result = azure.add_service_certificate(name, pkcs12_base64, 'pfx', '')\n            _wait_for_completion(azure, result, wait_timeout, \"add_service_certificate\")\n\n            # Create ssh config"
  },
  {
    "id" : "9e3b1af2-f733-4aa0-80e8-949b95527778",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "167e9325-616f-417f-9a95-0356dd27f71a",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "check hosted service availability can be used here\n",
        "createdAt" : "2014-06-08T07:47:04Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +238,242 @@\n    # Check if a deployment with the same name already exists\n    cloud_service_name_available = azure.check_hosted_service_name_availability(name)\n    if not cloud_service_name_available.result:\n        changed = False"
  },
  {
    "id" : "9284dc4b-8cda-4be4-bcaa-f861f06c2806",
    "prId" : 7694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77602561-9dbf-4f92-8702-15f90be18bab",
        "parentId" : null,
        "authorId" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "body" : "we here know that the service name is available\n",
        "createdAt" : "2014-06-08T07:47:24Z",
        "updatedAt" : "2014-06-08T19:39:46Z",
        "lastEditedBy" : "2b187568-ebae-412d-83ce-78bbd78db742",
        "tags" : [
        ]
      }
    ],
    "commit" : "98ff559fa095e76566d178885e3a29410caacae7",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +245,249 @@        # Create cloud service if necessary\n        try:\n            result = azure.create_hosted_service(service_name=name, label=name, location=location)\n            _wait_for_completion(azure, result, wait_timeout, \"create_hosted_service\")\n        except WindowsAzureError as e:"
  }
]