[
  {
    "id" : "419d071c-c5eb-4c23-bc0f-3ca67ceb3db7",
    "prId" : 8915,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8915#pullrequestreview-408966227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems to me the usability is better if methods can be called directly on `qctx`, as they don't need to remember another top-level name. What's the consideration to introduce `Reporting`?",
        "createdAt" : "2020-05-08T16:41:44Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "a749af41-c782-471f-919f-ff6c5869dfe6",
        "parentId" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It can be imported if needed. The previous location was unintuitive and a few missed it. Additionally, this seems to be the only reason to not use anonymous `QuoteContext`s.",
        "createdAt" : "2020-05-08T19:12:52Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "c46c9fb9-bab4-416a-9dc7-6292e49b748a",
        "parentId" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "What about using the same trick as Dotty to introduce a method `def qctx(using QuoteContext) = ...`?",
        "createdAt" : "2020-05-08T19:46:03Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "6335fa7e-e2bb-42cf-b915-163a5c17bad1",
        "parentId" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "That would also help. But, still errors and warnings do not belong there.",
        "createdAt" : "2020-05-09T05:36:56Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "67f6b3f6-3706-4ef0-af64-dd900b734bd5",
        "parentId" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I agree with you, logically it is better to separate things.\r\n\r\nThe little worry I have is that Scala 3 macro authors may also be compiler hackers, compiler plugin writers, and some experience with Scala 2 macros. In all other cases, the error reporting is the same by calling `ctx.error`. So it would be nice to follow the convention.",
        "createdAt" : "2020-05-11T08:18:44Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "4dd608ee-fe35-46fc-856d-b47d06791ab8",
        "parentId" : "51b5c212-72e6-4f1f-a350-455d84b8a9ff",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "As shown, that can be optionally supported with an implicit conversion.\r\n\r\nIt also seems that the users of the API did not find the reporting utilities or ended up finding the ones in the reflection API. The second is fine but the overhead could have been avoided by making it more explicit.",
        "createdAt" : "2020-05-11T08:30:55Z",
        "updatedAt" : "2020-05-11T14:22:43Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "d262e9904aa2d5203aa348de39d4eb3f94d1add0",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +69,73 @@    val args = argsExpr match {\n      case Varargs(args) => args\n      case _ => Reporting.throwError(\"Expected statically known argument list\", argsExpr)\n    }\n"
  }
]