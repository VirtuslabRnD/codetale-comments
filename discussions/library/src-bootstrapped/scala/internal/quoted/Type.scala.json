[
  {
    "id" : "04a3dfcb-1443-4c07-9fd8-f2bf203ae320",
    "prId" : 9815,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9815#pullrequestreview-490906268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aae8870-6663-4e36-b51a-9adf86cebb00",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Can we do the same for `Type.Int`, etc as in `Reflection.Type`?",
        "createdAt" : "2020-09-17T18:19:12Z",
        "updatedAt" : "2020-09-17T18:20:10Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "583a9ef6-74c0-42f7-be96-f9d12b86ef87",
        "parentId" : "1aae8870-6663-4e36-b51a-9adf86cebb00",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "That definition is not visible in the public API. It is used as an optimization of `'[Int]`. I'm looking for other ways to optimize it differently but it will take some time.",
        "createdAt" : "2020-09-17T18:49:42Z",
        "updatedAt" : "2020-09-17T18:49:42Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "885f161b-0a98-4ce5-b3de-201ab121b30f",
        "parentId" : "1aae8870-6663-4e36-b51a-9adf86cebb00",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I see, it makes sense.",
        "createdAt" : "2020-09-17T19:12:20Z",
        "updatedAt" : "2020-09-17T19:12:20Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f64cc1a57798b8fd76da166be101378401d4ae3",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +90,94 @@    val qctx1 = quoteContextWithCompilerInterface(qctx)\n    qctx1.tasty.Definitions_DoubleType.seal.asInstanceOf[quoted.Type[Double]]\n\n\n}"
  }
]