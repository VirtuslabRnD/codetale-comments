[
  {
    "id" : "7e9f97c2-240b-4fa4-b441-964f872bfb97",
    "prId" : 9921,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9921#pullrequestreview-500943626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Is it possible to do the check lazily inside the compiler, so that we can avoid changing the semantics of `hashCode`?",
        "createdAt" : "2020-09-30T14:39:04Z",
        "updatedAt" : "2020-10-01T15:30:15Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "1ceee027-4290-41b5-9867-241eb9ea2a16",
        "parentId" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Indeed, we should lazily compute this hash. But we should change the `hashCode` as this is semantically a better fit for it.",
        "createdAt" : "2020-09-30T14:46:38Z",
        "updatedAt" : "2020-10-01T15:30:15Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "76080c35-5a5b-4c20-bd78-0fa707448933",
        "parentId" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Either way the idea is to eventually remove it. If we decide to keep it we can figure out a better efficient scheme at that point.",
        "createdAt" : "2020-09-30T15:51:17Z",
        "updatedAt" : "2020-10-01T15:30:15Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "d051891c-bc64-44ab-8f76-23d49b071b97",
        "parentId" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems we are just repurposing the method `hashCode` to do something else in this PR, to avoid creating another method. This raises concern.\r\n\r\nI'm wondering if we can remove the checks in the library, and only perform checks in the compiler, so that we may not need the repurposing.",
        "createdAt" : "2020-10-02T07:28:05Z",
        "updatedAt" : "2020-10-02T07:28:05Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "b3924d3d-4d3d-46da-912a-172342ac36f0",
        "parentId" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Before we were using another method to return the hash associated with that QuoteContext. Now we use hashCode to return the hash of that instance.\r\n",
        "createdAt" : "2020-10-02T08:16:39Z",
        "updatedAt" : "2020-10-02T08:16:39Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "be46404a-24ad-464f-9197-5c4bc02b9459",
        "parentId" : "5b8856d6-f39d-4522-bcf5-6e8dd307f855",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "And #8940 aims to remove this altogether.",
        "createdAt" : "2020-10-02T08:20:28Z",
        "updatedAt" : "2020-10-02T08:20:28Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd7b1464b313acb3e4c269e4e4d749dbbf5a97af",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +21,25 @@\n  def unseal(using qctx: QuoteContext): qctx.tasty.Term =\n    if (qctx.hashCode != scopeId)\n      throw new scala.quoted.ScopeException(\"Cannot call `scala.quoted.staging.run(...)` within a macro or another `run(...)`\")\n    tree.asInstanceOf[qctx.tasty.Term]"
  }
]