[
  {
    "id" : "21680766-1a62-4986-aaa4-1472b1e00dca",
    "prId" : 6258,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6258#pullrequestreview-224454540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec0f6901-0200-4233-bf11-93a0bad23a78",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "@nicolasstucki We need to allow one option `color: Boolean = false` here.",
        "createdAt" : "2019-04-09T14:20:16Z",
        "updatedAt" : "2019-04-09T14:20:16Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "966302ba-993f-4eed-a7a7-033a048a1991",
        "parentId" : "ec0f6901-0200-4233-bf11-93a0bad23a78",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It should be inheriting the one from the compiler. Is that the case? ",
        "createdAt" : "2019-04-09T14:23:53Z",
        "updatedAt" : "2019-04-09T14:23:54Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "d41db423-0a42-42a7-aa8d-a55124171d6c",
        "parentId" : "ec0f6901-0200-4233-bf11-93a0bad23a78",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We should be able to create a new setting with the setting enabled or disabled",
        "createdAt" : "2019-04-09T14:25:51Z",
        "updatedAt" : "2019-04-09T14:25:52Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "f21b8400-73d3-4af7-a43b-f33eb9e474a7",
        "parentId" : "ec0f6901-0200-4233-bf11-93a0bad23a78",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "In macro usage, usually, there will never be a need for colors -- because the text will be used for values. Inheriting from the compiler is not the correct behavior.\r\n\r\nThe `Toobox` settings does not work as expected. I currently use the following walkaround:\r\n\r\n```Scala\r\ndef (str: String) clean: String = str.replaceAll(\"\\u001B\\\\[[;\\\\d]*m\", \"\")\r\n```",
        "createdAt" : "2019-04-09T14:47:12Z",
        "updatedAt" : "2019-04-09T14:47:12Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cc821f892ea3db701a5f930bded3f8bb0d1ceb",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +25,29 @@    /** Show a source code like representation of this type */\n    def show(implicit ctx: Context): String =\n      unseal.showCode\n  }\n"
  }
]