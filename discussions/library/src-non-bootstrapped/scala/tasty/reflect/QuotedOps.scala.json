[
  {
    "id" : "b1e817c8-a495-4e09-b77f-e96e5ba96fbd",
    "prId" : 6276,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6276#pullrequestreview-225073552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7f2d037-d5d1-4e96-955b-696bd42a3e1a",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's better to default to no colors other than `ctx.printColors` as that's what users want most of the time.\r\n\r\nOtherwise, users will be forced to write `x.show(the[Context].withColors)` instead of `x.show`.\r\n\r\n",
        "createdAt" : "2019-04-10T15:49:14Z",
        "updatedAt" : "2019-04-10T15:50:00Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "64766655-45f2-4b59-8083-1da01a64a8de",
        "parentId" : "a7f2d037-d5d1-4e96-955b-696bd42a3e1a",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "We can do either with a default `color: Boolean = false` or have two methods:\r\n\r\n- show\r\n- showColored\r\n\r\nBoth are more friendly than `x.show(the[Context].withColors)`",
        "createdAt" : "2019-04-10T15:51:29Z",
        "updatedAt" : "2019-04-10T15:51:30Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "a83c805d-519d-47a6-ba57-7fe91cecf48d",
        "parentId" : "a7f2d037-d5d1-4e96-955b-696bd42a3e1a",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We cannot a default the is different for the compiler setting or every other use case will break.\r\n\r\nAs shown in the example it is easy to add your own version of `show` where you disregard the default settings.",
        "createdAt" : "2019-04-10T15:59:49Z",
        "updatedAt" : "2019-04-10T15:59:49Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "cde8a46f-fc30-40cf-a286-f5f1db4c98e1",
        "parentId" : "a7f2d037-d5d1-4e96-955b-696bd42a3e1a",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We can always add some variant later",
        "createdAt" : "2019-04-10T16:00:25Z",
        "updatedAt" : "2019-04-10T16:00:26Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "30069e22-2dcf-4c74-afc1-7741828654d2",
        "parentId" : "a7f2d037-d5d1-4e96-955b-696bd42a3e1a",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I think it's better to have it now as we go -- we will forget all these minor usability issues. If such usability issues accumulate, the user experience with Tasty Reflect will degrade.",
        "createdAt" : "2019-04-10T16:09:38Z",
        "updatedAt" : "2019-04-10T16:09:39Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "31087c6a76fd29a46db268c4af227d08af917b7d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +29,33 @@     */\n    def show(implicit ctx: Context): String =\n      unseal.showCode\n  }\n"
  }
]