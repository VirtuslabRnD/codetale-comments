[
  {
    "id" : "bec0c95f-4194-43a8-9488-077d11a11d36",
    "prId" : 9553,
    "prUrl" : "https://github.com/apache/kafka/pull/9553#pullrequestreview-558899753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edcf6ef6-e0f1-4912-b7b6-a1bc7ad7b551",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can you remind me if we are planning to change the type to \"records\"? I don't think we will get the benefit of `sendfile` unless we do so.",
        "createdAt" : "2020-12-22T17:14:15Z",
        "updatedAt" : "2020-12-23T18:10:34Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "f4dccb89-9444-4193-bbdb-507bfbcba5f6",
        "parentId" : "edcf6ef6-e0f1-4912-b7b6-a1bc7ad7b551",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yeah. I created this issue: https://issues.apache.org/jira/browse/KAFKA-10694\r\n\r\nI think we have two options:\r\n1. Use \"records\" as you have suggested.\r\n2. Similar to \"records\" introduce a new type called for example `Memory` that has two implementations one that encapsulates `ByteBuffer` and another that encapsulates a file and a start position. This is similar to \"records\", `MemoryRecords` and `FileRecords` without the requirement that the start needs to be a valid `RecordBatch`.\r\n\r\nI want to play around with this soon and restart the conversation on that issue and PR.",
        "createdAt" : "2020-12-22T19:36:38Z",
        "updatedAt" : "2020-12-23T18:10:34Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "cf955815-917c-436d-b386-e15e29238992",
        "parentId" : "edcf6ef6-e0f1-4912-b7b6-a1bc7ad7b551",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "@jsancio Can we add an index file to the snapshot file so that the `FetchSnaphotResponseData` can also satisfy the requirement that the start is a valid `RecordBatch`? I can help with some work of this issue: https://issues.apache.org/jira/browse/KAFKA-10694.",
        "createdAt" : "2020-12-26T08:40:57Z",
        "updatedAt" : "2020-12-26T08:40:57Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "b038eec2-dc68-47fb-9342-d0e31af5ee14",
        "parentId" : "edcf6ef6-e0f1-4912-b7b6-a1bc7ad7b551",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "@dengziming, Thanks for the comment. The `FetchSnapshotRequest` differs from `FetchRequest` in that `Position` is a byte offset. Because of this we don't need an `Offset` to `Byte` index.\r\n\r\nIf we implement option 1 in my comment above, we can still use `Records` by making sure that:\r\n1. The `leaders` send at least one entire `RecordBatch` in the `FetchSnapshotResponse`.\r\n2. The `followers` only write complete `RecordBatch`es by not writing bytes sent by the leader that are not complete `RecordBatch`.\r\n\r\nThis guarantees that the `Position` sent in `FetchSnapshotRequest` is `RecordBatch` aligned and it always makes progress because the leader sends at least one complete `RecordBatch`.\r\n\r\nHaving said that, I think we should try and implement option 2. Unfortunately, the Jira https://issues.apache.org/jira/browse/KAFKA-10694 doesn't document option 2.",
        "createdAt" : "2020-12-27T02:11:36Z",
        "updatedAt" : "2020-12-27T02:11:37Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "22133d1166394ea4ffbf111aeb8eb063c2182cd8",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@        { \"name\": \"Position\", \"type\": \"int64\", \"versions\": \"0+\",\n          \"about\": \"The starting byte position within the snapshot included in the Bytes field.\" },\n        { \"name\": \"Bytes\", \"type\": \"bytes\", \"versions\": \"0+\", \"zeroCopy\": true,\n          \"about\": \"Snapshot data.\" }\n      ]}"
  }
]