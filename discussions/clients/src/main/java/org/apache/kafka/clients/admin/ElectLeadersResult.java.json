[
  {
    "id" : "4692e752-63c1-41bb-a33e-e1aea1377892",
    "prId" : 6686,
    "prUrl" : "https://github.com/apache/kafka/pull/6686#pullrequestreview-240818987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Might be convenient for users to have the `all()` API?\r\n\r\nBy the way, do you think it's worth fixing the issues with the old API? We can do this separately, just wondering if you think it's worthwhile.",
        "createdAt" : "2019-05-16T21:45:07Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "7d044ead-094c-46c8-8d27-91da717f2690",
        "parentId" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Which issue specifically? That the user need to create `N` futures to get all of the errors?\r\n\r\nIf so, I think the user should just use `electLeaders` instead.",
        "createdAt" : "2019-05-17T00:18:56Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "cef00b27-4a30-4ceb-8151-3a43961eaff2",
        "parentId" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Oh, I was referring to the buggy/inconsistent handling of the partitions=null case.",
        "createdAt" : "2019-05-17T00:28:56Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "ef27c9cb-d1fb-4d04-9943-0b244350d255",
        "parentId" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Is it reasonable to add the `all()` API?",
        "createdAt" : "2019-05-22T16:11:34Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "8c77e8d4-f2c0-40b3-b796-6911b19f1889",
        "parentId" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Sure. We have `partitions: Future[Map[TopicPartition, Optional[Throwable]]]`. Are you suggesting renaming this to `all`? Or do you want to add a new method `all: Future[Unit]` that throws if any of the partitions is set to a `Throwable`?",
        "createdAt" : "2019-05-22T18:23:12Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "ca831c67-9137-43f3-a7f9-128932c50cfa",
        "parentId" : "af17df91-f16c-4894-b41f-ccff348c6bf5",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I think it would be nice to have both. Many (maybe most?) of the AdminClient APIs offer `all()` for convenience.",
        "createdAt" : "2019-05-22T19:00:01Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d53f267c91cc93478d817214f47a6fd2ec20691",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@ */\n@InterfaceStability.Evolving\nfinal public class ElectLeadersResult {\n    private final KafkaFutureImpl<Map<TopicPartition, Optional<Throwable>>> electionFuture;\n"
  }
]