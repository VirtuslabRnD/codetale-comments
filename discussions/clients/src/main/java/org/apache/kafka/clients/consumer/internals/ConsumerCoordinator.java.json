[
  {
    "id" : "6671866e-3f4c-4d12-a9fe-4afb289ff7cc",
    "prId" : 4326,
    "prUrl" : "https://github.com/apache/kafka/pull/4326#pullrequestreview-148319429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae1a272-160a-4ff8-a15b-31fbbec3e16a",
        "parentId" : null,
        "authorId" : "3e414f4e-e846-4984-a05e-2537617c5141",
        "body" : "This modification can lead to repeated commit offset because of nextAutoCommitDeadline has not increased. Could someone tell me this is normal or correct me if I am wrong",
        "createdAt" : "2018-08-22T03:03:44Z",
        "updatedAt" : "2018-08-22T03:18:45Z",
        "lastEditedBy" : "3e414f4e-e846-4984-a05e-2537617c5141",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5426e18c6c8136578819b36e66bc663a547ddf5",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +626,630 @@\n    public void maybeAutoCommitOffsetsAsync(long now) {\n        if (autoCommitEnabled && now >= nextAutoCommitDeadline) {\n            doAutoCommitOffsetsAsync();\n        }"
  },
  {
    "id" : "2c32c672-16f3-4724-85f4-6219736b1433",
    "prId" : 4855,
    "prUrl" : "https://github.com/apache/kafka/pull/4855#pullrequestreview-123424401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4454c7d-ce3f-46d3-8221-e0616abd7305",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Same comment as before. We can skip the time system calls by passing the current time since the common case is that no work needs to be done here.",
        "createdAt" : "2018-05-25T16:37:44Z",
        "updatedAt" : "2018-05-26T00:00:49Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3fce0f22e8b12e03475212b2bf07e69bc230362",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +302,306 @@     * @return true iff the operation succeeded\n     */\n    public boolean poll(final long timeoutMs) {\n        final long startTime = time.milliseconds();\n        long elapsed = 0L;"
  },
  {
    "id" : "f3b31834-794f-4e57-b4a8-d406a4d40eff",
    "prId" : 4855,
    "prUrl" : "https://github.com/apache/kafka/pull/4855#pullrequestreview-123564019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5b43e6d-ff28-4c3d-b1e4-f065329ee250",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I guess it's tough to avoid blocking here. All of this would be considerably easier if we moved the rebalance to the background thread. Another improvement for another time.",
        "createdAt" : "2018-05-26T18:37:58Z",
        "updatedAt" : "2018-05-26T18:38:50Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3fce0f22e8b12e03475212b2bf07e69bc230362",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +395,399 @@        // update metadata (if needed) and keep track of the metadata used for assignment so that\n        // we can check after rebalance completion whether anything has changed\n        if (!client.ensureFreshMetadata(Long.MAX_VALUE)) throw new TimeoutException();\n\n        isLeader = true;"
  },
  {
    "id" : "06b15bbc-788d-4672-a79a-69786d7430d7",
    "prId" : 4855,
    "prUrl" : "https://github.com/apache/kafka/pull/4855#pullrequestreview-124078456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31947692-17b7-4eee-a83e-d5c329f4b07a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The names here are a bit misleading, maybe we can fix them in https://github.com/apache/kafka/pull/5087? cc @hachikuji . I'm thinking `requestedPartitions` and `requestedGeneration`?",
        "createdAt" : "2018-05-29T16:46:07Z",
        "updatedAt" : "2018-05-29T16:49:07Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3fce0f22e8b12e03475212b2bf07e69bc230362",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +92,96 @@\n    private static class PendingCommittedOffsetRequest {\n        private final Set<TopicPartition> request;\n        private final Generation generation;\n        private final RequestFuture<Map<TopicPartition, OffsetAndMetadata>> response;"
  },
  {
    "id" : "7494aeb2-15f7-44d5-b62b-0025b58018ec",
    "prId" : 4855,
    "prUrl" : "https://github.com/apache/kafka/pull/4855#pullrequestreview-124078456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc8b301-9597-48fd-aa43-bd7436488175",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "We have three `remainingTimeAtLeastZero` functions, in AbstractCoordinator, ConsumerCoordinator and KafkaConsumer. Is it intentional? If not we could leave just one to avoid unintentional code divergence in the future. cc @vvcephei ",
        "createdAt" : "2018-05-29T16:48:02Z",
        "updatedAt" : "2018-05-29T16:49:07Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3fce0f22e8b12e03475212b2bf07e69bc230362",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +353,357 @@    }\n\n    private long remainingTimeAtLeastZero(final long timeoutMs, final long elapsed) {\n        return Math.max(0, timeoutMs - elapsed);\n    }"
  },
  {
    "id" : "670d5218-ca8e-4d7d-896c-86e07563fda2",
    "prId" : 5084,
    "prUrl" : "https://github.com/apache/kafka/pull/5084#pullrequestreview-124594426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f45efaf-3fcf-4fe2-848e-1319f311c025",
        "parentId" : null,
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Do you need this currentTime because `ensureCoordinatorReady`, `ensureFreshMetadata` and `ensureActiveGroup` are somewhat long-running?",
        "createdAt" : "2018-05-30T12:46:17Z",
        "updatedAt" : "2018-05-30T21:46:19Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "3f4baa31-4dbf-4e6c-bcdf-66cb6eba712f",
        "parentId" : "3f45efaf-3fcf-4fe2-848e-1319f311c025",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yes, right. I think the approach in #5087 is less irritating.",
        "createdAt" : "2018-05-30T21:10:00Z",
        "updatedAt" : "2018-05-30T21:46:19Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea9fe01ef54c446cfddb36fba41218d989f6e275",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +301,305 @@    public boolean poll(final long timeoutMs) {\n        final long startTime = time.milliseconds();\n        long currentTime = startTime;\n        long elapsed = 0L;\n"
  },
  {
    "id" : "e69ac94f-83b3-4c96-a54f-19a6dcc0eddf",
    "prId" : 5087,
    "prUrl" : "https://github.com/apache/kafka/pull/5087#pullrequestreview-142907077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b56544b-2b88-45dd-bccf-509f42be0850",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Nice catch :)",
        "createdAt" : "2018-08-02T18:43:50Z",
        "updatedAt" : "2018-08-03T20:47:50Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef469881a5e14aecbaa3dbe890d30335c2c75a8",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +280,284 @@\n        // reschedule the auto commit starting from now\n        if (autoCommitEnabled)\n            this.nextAutoCommitTimer.updateAndReset(autoCommitIntervalMs);\n"
  },
  {
    "id" : "9857f9c6-e03a-4705-918d-ea4cb3e1a110",
    "prId" : 5087,
    "prUrl" : "https://github.com/apache/kafka/pull/5087#pullrequestreview-143260988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a3d5d43-ed7a-45ba-b732-8fe939773a64",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why changing `if` to a `while`, and also add a `client.poll()`? ",
        "createdAt" : "2018-08-02T19:05:46Z",
        "updatedAt" : "2018-08-03T20:47:50Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "5d8d0bc6-ebd6-43f0-99a6-483b741dc061",
        "parentId" : "3a3d5d43-ed7a-45ba-b732-8fe939773a64",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I think the point of this check was to allow some time for pending async commits to return, but the previous code seemed a little bizarre. What was the point of ensuring the coordinator is ready and then immediately closing?  It made more sense to turn this into a loop and call `poll` so that we could give the OffsetCommit responses a chance to be delivered.",
        "createdAt" : "2018-08-02T20:18:49Z",
        "updatedAt" : "2018-08-03T20:47:50Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "328e1433-ff8c-4206-ba7a-3b1c1ecd8d28",
        "parentId" : "3a3d5d43-ed7a-45ba-b732-8fe939773a64",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "makes sense.",
        "createdAt" : "2018-08-03T17:04:41Z",
        "updatedAt" : "2018-08-03T20:47:50Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef469881a5e14aecbaa3dbe890d30335c2c75a8",
    "line" : 247,
    "diffHunk" : "@@ -1,1 +556,560 @@        try {\n            maybeAutoCommitOffsetsSync(timer);\n            while (pendingAsyncCommits.get() > 0 && timer.notExpired()) {\n                ensureCoordinatorReady(timer);\n                client.poll(timer);"
  }
]