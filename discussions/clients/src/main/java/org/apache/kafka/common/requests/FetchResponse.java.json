[
  {
    "id" : "5c6d733a-d92a-4ea9-966b-ca14e77da61a",
    "prId" : 2267,
    "prUrl" : "https://github.com/apache/kafka/pull/2267#pullrequestreview-161914522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "addcedca-e9f1-43a1-a1c7-a773912f3ce8",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can you add `UNSUPPORTED_COMPRESSION_TYPE` to the error codes listed in the javadoc for this class?",
        "createdAt" : "2018-10-05T07:17:42Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "147c47358b3d9483de633b855ff809f64b9befef",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +183,187 @@    private static final Schema FETCH_RESPONSE_V9 = FETCH_RESPONSE_V8;\n\n    // V10 bumped up to indicate ZStandard capability. (see KIP-110)\n    private static final Schema FETCH_RESPONSE_V10 = FETCH_RESPONSE_V9;\n"
  },
  {
    "id" : "cb79e8bd-e090-4a9a-8164-c96fa71756a9",
    "prId" : 6731,
    "prUrl" : "https://github.com/apache/kafka/pull/6731#pullrequestreview-239005707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ad09b56-a012-421e-aa33-63ad3b6c0a30",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Do we consider upgrading `FetchResponse` to automated protocol first to reduce our effort here?",
        "createdAt" : "2019-05-15T21:32:09Z",
        "updatedAt" : "2019-05-17T21:55:02Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "6a80c97f-8080-474c-986b-0751258d28da",
        "parentId" : "8ad09b56-a012-421e-aa33-63ad3b6c0a30",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Yes, I believe that's on a list of TODOs regarding the protocol generator. As I understand it, there are some complexities with FetchRequest/Response that would need to be figured out.",
        "createdAt" : "2019-05-16T00:40:44Z",
        "updatedAt" : "2019-05-17T21:55:02Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "5d692f19-9a95-474e-8c28-88493da442ba",
        "parentId" : "8ad09b56-a012-421e-aa33-63ad3b6c0a30",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, `FetchResponse` will most likely be the last one to convert because we'll have to figure out how zero-copy will work.",
        "createdAt" : "2019-05-17T16:41:16Z",
        "updatedAt" : "2019-05-17T21:55:02Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c7c0bdc761dc4bb68e0ec59c113abb4a834901d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +80,84 @@    private static final Field.Int64 LOG_START_OFFSET = new Field.Int64(\"log_start_offset\",\n            \"Earliest available offset.\");\n    private static final Field.Int32 PREFERRED_READ_REPLICA = new Field.Int32(\"preferred_read_replica\",\n            \"The ID of the replica that the consumer should prefer.\");\n"
  },
  {
    "id" : "095df463-7978-4f6a-9010-feec8dddc0a8",
    "prId" : 6731,
    "prUrl" : "https://github.com/apache/kafka/pull/6731#pullrequestreview-239169896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e47dc0b-17e7-417a-8e45-8d0bc6eca552",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Maybe we should make this type `Optional<Integer>`. Otherwise it's a little confusing if you should use `null` or `UNSPECIFIED_PREFERRED_REPLICA`.",
        "createdAt" : "2019-05-17T23:41:30Z",
        "updatedAt" : "2019-05-17T23:46:45Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c7c0bdc761dc4bb68e0ec59c113abb4a834901d",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +278,282 @@                             long lastStableOffset,\n                             long logStartOffset,\n                             Integer preferredReadReplica,\n                             List<AbortedTransaction> abortedTransactions,\n                             T records) {"
  },
  {
    "id" : "97edf380-5075-462a-b5ed-0e101384c2e9",
    "prId" : 6775,
    "prUrl" : "https://github.com/apache/kafka/pull/6775#pullrequestreview-240089612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6f207d9-1abe-49a1-afa1-0391fbdcca45",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Do you think it's worth checking that the id is not negative, if provided?",
        "createdAt" : "2019-05-20T17:42:55Z",
        "updatedAt" : "2019-05-20T17:56:10Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "3b9c07fa-3b01-435d-9f10-457edbcf73f0",
        "parentId" : "b6f207d9-1abe-49a1-afa1-0391fbdcca45",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Doesn't seem like we normally do this kind of validation. If a negative was given, I suppose we'd end up reverting to the leader since that Node wouldn't be found. ",
        "createdAt" : "2019-05-21T14:35:37Z",
        "updatedAt" : "2019-05-21T14:35:37Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "68327a82553d3a31f39e0420181ac50d61307f76",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +286,290 @@            this.lastStableOffset = lastStableOffset;\n            this.logStartOffset = logStartOffset;\n            this.preferredReadReplica = preferredReadReplica;\n            this.abortedTransactions = abortedTransactions;\n            this.records = records;"
  }
]