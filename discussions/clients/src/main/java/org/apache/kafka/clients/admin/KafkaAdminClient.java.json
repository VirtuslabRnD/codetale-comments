[
  {
    "id" : "b3ffc042-e206-477e-8390-39e725536b3a",
    "prId" : 4263,
    "prUrl" : "https://github.com/apache/kafka/pull/4263#pullrequestreview-85096900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7790e3cf-e653-418f-90dc-4bf93f93aff9",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Maybe `DescribeConfigsResponse.ConfigSource` could have a method to get the corresponding `ConfigEntry.ConfigSource`?",
        "createdAt" : "2017-12-20T00:27:48Z",
        "updatedAt" : "2018-01-19T13:34:09Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "d9b2c1a7-12c9-4ea1-89ed-6acd144057ce",
        "parentId" : "7790e3cf-e653-418f-90dc-4bf93f93aff9",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Don't know about that. `ConfigEntry.ConfigSource` is in the admin client's package, so not sure we want to refer to that from the `requests` package. At the moment, it uses the same pattern as `ConfigResource`.",
        "createdAt" : "2017-12-21T15:36:27Z",
        "updatedAt" : "2018-01-19T13:34:10Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d7e19562c3db9e224ad0933b90f58446641c527",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1622,1626 @@    private ConfigEntry.ConfigSource configSource(DescribeConfigsResponse.ConfigSource source) {\n        ConfigEntry.ConfigSource configSource;\n        switch (source) {\n            case TOPIC_CONFIG:\n                configSource = ConfigEntry.ConfigSource.DYNAMIC_TOPIC_CONFIG;"
  },
  {
    "id" : "7da83bfb-fb6a-4730-bc2f-1deef503f9e3",
    "prId" : 4295,
    "prUrl" : "https://github.com/apache/kafka/pull/4295#pullrequestreview-118087722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eb19d48-3b0f-4dc9-83ba-d33051816760",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "What is the expected behavior if the user ignores the auth error and continues to use the AdminClient? ",
        "createdAt" : "2018-05-04T15:39:54Z",
        "updatedAt" : "2018-05-09T17:37:08Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "1aecf13a-fec7-4791-abed-491472d3fa63",
        "parentId" : "6eb19d48-3b0f-4dc9-83ba-d33051816760",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It will continue to throw `AuthenticationException`.\r\n\r\nAfter enough time, another metadata request may be made which may succeed, which would allow future requests to go through.  But we don't spam metadata requests or anything-- if the auth exception is cleared, it will be because of a timeout.",
        "createdAt" : "2018-05-07T17:54:25Z",
        "updatedAt" : "2018-05-09T17:37:08Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e52241619be28f6f5e072cc4f084e0901109c30",
    "line" : 588,
    "diffHunk" : "@@ -1,1 +1177,1181 @@                        log.info(\"Unable to fetch cluster metadata from node {} because of \" +\n                            \"authentication error\", curNode(), e);\n                        metadataManager.update(Cluster.empty(), time.milliseconds(), (AuthenticationException) e);\n                    } else {\n                        log.info(\"Unable to fetch cluster metadata from node {}\","
  }
]