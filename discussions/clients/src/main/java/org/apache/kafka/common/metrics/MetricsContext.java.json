[
  {
    "id" : "604124a0-3991-43c8-b78f-9592f40bdbdd",
    "prId" : 8691,
    "prUrl" : "https://github.com/apache/kafka/pull/8691#pullrequestreview-418486121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7355e082-9c7f-41a9-991d-d71be0c6693b",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Looking through the PR, it seems that MetricsContext is a short lived object used to pass values to the MetricReporters as they are constructed. Since the usage appears to be write-once, it might be better to expose a subset of Map rather than the full thing. E.g., `String get(String field)` and `Iterator<String> fields` or something.\r\n\r\nIf we think this might evolve into a mutable long-lived object, then a Map is probably better. Just a thought.\r\n\r\n\r\n ",
        "createdAt" : "2020-05-22T19:34:20Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "c00ed486-67d3-4ca2-ac48-7223bca043e2",
        "parentId" : "7355e082-9c7f-41a9-991d-d71be0c6693b",
        "authorId" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "body" : "I think having an interface gives us more flexibility to evolve the API, without breaking backwards compatibility.",
        "createdAt" : "2020-05-22T20:33:05Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "tags" : [
        ]
      },
      {
        "id" : "bb1b0dee-b379-4846-b002-20fc7e96a165",
        "parentId" : "7355e082-9c7f-41a9-991d-d71be0c6693b",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "I wasn't suggesting that we eliminate the interface, I definitely think having one is a good choice (for the reasons you mentioned). What I meant was in this interface, we expose a Map as the collection of metrics tags/labels. But since it appears that the usage is intended to be read-only, maybe a Map isn't the best choice. Here's what I was thinking:\r\n\r\n```java\r\ninterface MetricsContext {\r\n  String namespace();\r\n  String get(String field);\r\n  Collection<String> fields();\r\n}\r\n```\r\n\r\n(included the namespace suggestion from my other comment as well).",
        "createdAt" : "2020-05-26T15:11:27Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "c0df392a-aefb-4b73-9762-3c16341573ee",
        "parentId" : "7355e082-9c7f-41a9-991d-d71be0c6693b",
        "authorId" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "body" : "I think keeping a Map interface makes it more convenient to work with. It gives you all the helper methods and streaming interfaces rather than having to hand-roll those things for someone consuming the api.",
        "createdAt" : "2020-05-26T16:43:15Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "tags" : [
        ]
      }
    ],
    "commit" : "319f5c556715d6733e82b41d7289ab71513ae27b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@ */\n@InterfaceStability.Evolving\npublic interface MetricsContext {\n    /* predefined fields */\n    String NAMESPACE = \"_namespace\"; // metrics namespace, formerly jmx prefix"
  },
  {
    "id" : "9742e467-6f7c-4001-8b47-35627e5319fd",
    "prId" : 8691,
    "prUrl" : "https://github.com/apache/kafka/pull/8691#pullrequestreview-418501288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cbcde98-0bd1-4742-9be1-7484fd1d09e5",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Should we define this as a field on the interface? ",
        "createdAt" : "2020-05-22T19:34:41Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "4c27520f-39f4-4411-bdd8-b0f4181da444",
        "parentId" : "5cbcde98-0bd1-4742-9be1-7484fd1d09e5",
        "authorId" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "body" : "I think the interface is a natural way to expose predefined constants an API might need. I don't see a need to have a separate class for this yet.",
        "createdAt" : "2020-05-22T20:39:27Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "tags" : [
        ]
      },
      {
        "id" : "397d7190-0459-4bee-86cd-05d7606e69ea",
        "parentId" : "5cbcde98-0bd1-4742-9be1-7484fd1d09e5",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Sorry, I shouldn't have said \"field\" since that implies a concrete class. See above comment above for an example of what I meant.",
        "createdAt" : "2020-05-26T15:12:51Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "2f26fa8a-db78-4491-a568-027e21e993c5",
        "parentId" : "5cbcde98-0bd1-4742-9be1-7484fd1d09e5",
        "authorId" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "body" : "I'm not convinced we should give namespace a special status over other fields, it just happens to be the only one we currently define by default for backwards compatibility reasons. If we find ourselves adding more of those, I agreee it would be worth revisiting how we expose pre-defined fields.",
        "createdAt" : "2020-05-26T17:02:35Z",
        "updatedAt" : "2020-05-27T17:48:24Z",
        "lastEditedBy" : "73896ffa-873a-4115-b79b-370ca722bd60",
        "tags" : [
        ]
      }
    ],
    "commit" : "319f5c556715d6733e82b41d7289ab71513ae27b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@public interface MetricsContext {\n    /* predefined fields */\n    String NAMESPACE = \"_namespace\"; // metrics namespace, formerly jmx prefix\n\n    /**"
  }
]