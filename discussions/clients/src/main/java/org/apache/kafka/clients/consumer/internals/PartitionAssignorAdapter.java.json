[
  {
    "id" : "97f7abdb-1705-4c1e-8fc5-bbfa0918b406",
    "prId" : 7110,
    "prUrl" : "https://github.com/apache/kafka/pull/7110#pullrequestreview-268014282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ea53cc0-9fb3-426d-b651-1a79c074edcc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Do we still want some class level comments?",
        "createdAt" : "2019-07-29T20:16:34Z",
        "updatedAt" : "2019-07-30T22:58:28Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f13479b72dfcad229df8a9113e21362094780",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@ * interface, which has been deprecated in favor of the new {@link org.apache.kafka.clients.consumer.ConsumerPartitionAssignor}\n */\n@SuppressWarnings(\"deprecation\")\npublic class PartitionAssignorAdapter implements ConsumerPartitionAssignor {\n"
  },
  {
    "id" : "0bc05992-35e9-40bf-a9df-537fbff52862",
    "prId" : 7110,
    "prUrl" : "https://github.com/apache/kafka/pull/7110#pullrequestreview-268014282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae6a98ae-0bcb-4bba-8099-70cd778358e9",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Comment for public method is favorable.",
        "createdAt" : "2019-07-29T20:19:26Z",
        "updatedAt" : "2019-07-30T22:58:28Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f13479b72dfcad229df8a9113e21362094780",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@     * {@link org.apache.kafka.clients.consumer.ConsumerPartitionAssignor} interface\n     */\n    public static List<ConsumerPartitionAssignor> getAssignorInstances(List<String> assignorClasses, Map<String, Object> configs) {\n        List<ConsumerPartitionAssignor> assignors = new ArrayList<>();\n"
  },
  {
    "id" : "68dfba9d-ceca-4248-8362-c5d8492bcdc9",
    "prId" : 7110,
    "prUrl" : "https://github.com/apache/kafka/pull/7110#pullrequestreview-269263968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f8315e7-6f41-407c-89c7-625f089c6ada",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "[code dedup]: Can we leverage the refactored `getConfiguredInstance` in `AbstractConfig` by making it a public method?",
        "createdAt" : "2019-07-30T22:31:54Z",
        "updatedAt" : "2019-07-30T22:58:29Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "38bd7398-c085-43bb-92fc-f014075d9c7f",
        "parentId" : "0f8315e7-6f41-407c-89c7-625f089c6ada",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Not sure I follow? All `getConfiguredInstance` methods I see are public, but can't be used here as they expect the key and the class to instantiate it as. And of course, in this case we don't know ahead of time whether it will be PartitionAssignor or ConsumerPartitionAssignor?\r\n\r\nI suppose we could try instantiating it as both and catch the KafkaException, but that doesn't seem much better",
        "createdAt" : "2019-07-30T22:48:19Z",
        "updatedAt" : "2019-07-30T22:58:29Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "2d8d30c3-5ffc-471f-8e90-cd34d8c37afd",
        "parentId" : "0f8315e7-6f41-407c-89c7-625f089c6ada",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I was referring to `private <T> T getConfiguredInstance(Object klass, Class<T> t, Map<String, Object> configPairs)`\r\n\r\nThe `Class<T> t` is only for type validation after the construction, but after some more thinking I'd agree with you that reusing this function would require us to move the check out of it and pushed to caller (and in this case the caller would be checking with two types) would not be worthy. Let's keep it as is.",
        "createdAt" : "2019-07-31T20:29:48Z",
        "updatedAt" : "2019-07-31T20:29:49Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4f13479b72dfcad229df8a9113e21362094780",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@        List<ConsumerPartitionAssignor> assignors = new ArrayList<>();\n\n        if (assignorClasses == null)\n            return assignors;\n"
  }
]