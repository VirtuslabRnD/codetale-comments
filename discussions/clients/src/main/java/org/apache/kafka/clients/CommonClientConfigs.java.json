[
  {
    "id" : "3027116c-8c1e-4452-b78d-be0fc378b75a",
    "prId" : 4987,
    "prUrl" : "https://github.com/apache/kafka/pull/4987#pullrequestreview-160251928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a7b42ec-c338-4653-96a7-5a9d97cc9a4d",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@edoardocomar Since this PR is using the same config as https://github.com/apache/kafka/pull/4485, it will need to get merged on top of that right?",
        "createdAt" : "2018-10-01T11:13:39Z",
        "updatedAt" : "2018-10-11T13:25:42Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "e2d8c1bd-d352-4c75-8c62-61f816e2a24b",
        "parentId" : "4a7b42ec-c338-4653-96a7-5a9d97cc9a4d",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "We copied all common files from #4485 (at the same time addressing the points we raised there) so they can be merged in any order.",
        "createdAt" : "2018-10-01T11:21:37Z",
        "updatedAt" : "2018-10-11T13:25:42Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "545dd8f621a1c89e9f96c7e133f7d4f0c13283e8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +94,98 @@                                                         + \"retries are exhausted.\";\n\n    public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n    public static final String CLIENT_DNS_LOOKUP_DOC = \"<p>Controls how the client uses DNS lookups.</p><p>If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n                                                        + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.</p>\";"
  },
  {
    "id" : "bac49e2b-32cb-463f-b07b-1dd19779d1d6",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157043980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3da44611-a4d2-482b-9573-9b3d265bcd9a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@guozhangwang @hachikuji I think we can do this without a KIP, but I would like to very with you.",
        "createdAt" : "2018-09-18T21:11:35Z",
        "updatedAt" : "2018-09-20T12:49:07Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a9e693ef-eaeb-419a-a516-063d17760936",
        "parentId" : "3da44611-a4d2-482b-9573-9b3d265bcd9a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "sounds good to me.",
        "createdAt" : "2018-09-19T22:14:12Z",
        "updatedAt" : "2018-09-20T12:49:07Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +47,51 @@    public static final String SEND_BUFFER_CONFIG = \"send.buffer.bytes\";\n    public static final String SEND_BUFFER_DOC = \"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.\";\n    public static final int SEND_BUFFER_LOWER_BOUND = -1;\n\n    public static final String RECEIVE_BUFFER_CONFIG = \"receive.buffer.bytes\";"
  },
  {
    "id" : "5a0e750b-d187-49a2-9c30-e033b910c9b9",
    "prId" : 6592,
    "prUrl" : "https://github.com/apache/kafka/pull/6592#pullrequestreview-266799959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8c8f35e-8abe-45cb-9336-fceae9a996dc",
        "parentId" : null,
        "authorId" : "98d34aa9-6dc0-43b8-9574-e9c16b2aade1",
        "body" : "Should I add `DOC`s for `DEFAULT_LIST_KEY/VALUE_SERDE_INNER_CLASS` configs? \r\n\r\nI was looking at `DEFAULT_WINDOWED_KEY/VALUE_SERDE_INNER_CLASS` configs in `StreamsConfig` class, and they don't have docs underneath them.",
        "createdAt" : "2019-07-25T14:46:23Z",
        "updatedAt" : "2021-05-04T20:48:42Z",
        "lastEditedBy" : "98d34aa9-6dc0-43b8-9574-e9c16b2aade1",
        "tags" : [
        ]
      },
      {
        "id" : "186ed1ea-c294-4aa8-a882-cd4af3508e89",
        "parentId" : "e8c8f35e-8abe-45cb-9336-fceae9a996dc",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Sound like something we should fix, ie, add corresponding DOC entries to `StreamsConfig`",
        "createdAt" : "2019-07-25T18:15:42Z",
        "updatedAt" : "2021-05-04T20:48:42Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "37569c9464d37351ccbd5bab72b5d604f932d635",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +119,123 @@                                                         + \"retries are exhausted.\";\n\n    public static final String DEFAULT_LIST_KEY_SERDE_INNER_CLASS = \"default.list.key.serde.inner\";\n    public static final String DEFAULT_LIST_KEY_SERDE_INNER_CLASS_DOC = \"Default inner class of list serde for key that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. \"\n            + \"This configuration will be read if and only if <code>default.key.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code>\";"
  },
  {
    "id" : "91604eef-0580-4435-ae2f-c8c2e2125676",
    "prId" : 6592,
    "prUrl" : "https://github.com/apache/kafka/pull/6592#pullrequestreview-269163947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f160a3f-a7e8-4be2-aef4-b26b054d4db8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Seems this variable is still misssing the corresponding DOC string? (Same for `DEFAULT_LIST_VALUE_SERDE_INNER_CLASS` below)",
        "createdAt" : "2019-07-31T17:22:07Z",
        "updatedAt" : "2021-05-04T20:48:42Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "37569c9464d37351ccbd5bab72b5d604f932d635",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +119,123 @@                                                         + \"retries are exhausted.\";\n\n    public static final String DEFAULT_LIST_KEY_SERDE_INNER_CLASS = \"default.list.key.serde.inner\";\n    public static final String DEFAULT_LIST_KEY_SERDE_INNER_CLASS_DOC = \"Default inner class of list serde for key that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. \"\n            + \"This configuration will be read if and only if <code>default.key.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code>\";"
  },
  {
    "id" : "42ba7d53-b91c-4496-a104-fca8d09e2e08",
    "prId" : 6592,
    "prUrl" : "https://github.com/apache/kafka/pull/6592#pullrequestreview-270785236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e0cfeac-1cbd-4abc-b8b8-d16aaaa70e87",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "`Note when list serde class is used` -> seems be a little fuzzy if one does not know the context. It might be better to be very explicit.\r\n\r\nWhat about:\r\n```\r\n\"Default class for keys (that are of type <code>java.util.List</code>) that implements the <code>java.util.List</code> interface. \"\r\n+ \"This config is only effective if configuration parameter \" + DEFAULT_KEY_SERDE_CLASS_CONFIG + \" is set to \" + ListSerde.class.getName() + \" and determines the concrete List-type (eg, LinkedList, ArrayList etc.) that is instantiated during deserialization. \"\r\n+ \"Note that you also need to set the inner serde class (for the list elements) that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via \" + DEFAULT_LIST_KEY_SERDE_INNER_CLASS + \" configuration parameter.\"\r\n```\r\n\r\nWe should be similarly explicit, for the \"inner serde\" configs.",
        "createdAt" : "2019-08-04T01:40:26Z",
        "updatedAt" : "2021-05-04T20:48:43Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2a160672-75d7-40b3-8148-a38a57f3b645",
        "parentId" : "7e0cfeac-1cbd-4abc-b8b8-d16aaaa70e87",
        "authorId" : "98d34aa9-6dc0-43b8-9574-e9c16b2aade1",
        "body" : "`DEFAULT_KEY_SERDE_CLASS_CONFIG` is not accessible from `ComminClientConfigs` since it lives in `StreamsConfig`, the same applies for `ListSerde.class.getName()`",
        "createdAt" : "2019-08-05T14:00:08Z",
        "updatedAt" : "2021-05-04T20:48:43Z",
        "lastEditedBy" : "98d34aa9-6dc0-43b8-9574-e9c16b2aade1",
        "tags" : [
        ]
      }
    ],
    "commit" : "37569c9464d37351ccbd5bab72b5d604f932d635",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +130,134 @@    public static final String DEFAULT_LIST_KEY_SERDE_TYPE_CLASS_DOC = \"Default class for key that implements the <code>java.util.List</code> interface. \"\n            + \"This configuration will be read if and only if <code>default.key.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code> \"\n            + \"Note when list serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via '\"\n            + DEFAULT_LIST_KEY_SERDE_INNER_CLASS + \"'\";\n"
  },
  {
    "id" : "3ad3409e-5dee-4b88-8a0e-2b0865068f13",
    "prId" : 6854,
    "prUrl" : "https://github.com/apache/kafka/pull/6854#pullrequestreview-249025918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3287f44f-b2dd-4549-8c7f-ee3770745ed6",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why do we want to move consumer-only configs to common-client configs?",
        "createdAt" : "2019-06-04T19:09:03Z",
        "updatedAt" : "2019-06-14T23:47:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "09c85193-cccf-4b3a-9f29-7419f00582e2",
        "parentId" : "3287f44f-b2dd-4549-8c7f-ee3770745ed6",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "`group.id` is not consumer-only. It is also used in `DistributedConfig`, and if we want to consolidate all the rebalance related configs, we need to have it defined in common area.",
        "createdAt" : "2019-06-10T16:11:14Z",
        "updatedAt" : "2019-06-14T23:47:24Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "3bf874cb-87a2-4c37-85c5-346c2936c657",
        "parentId" : "3287f44f-b2dd-4549-8c7f-ee3770745ed6",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Sounds good to me.",
        "createdAt" : "2019-06-12T21:22:29Z",
        "updatedAt" : "2019-06-14T23:47:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b13d584c48d0aa1fcb927d62f8951a6f5704264",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +102,106 @@                                                         + \"retries are exhausted.\";\n\n    public static final String GROUP_ID_CONFIG = \"group.id\";\n    public static final String GROUP_ID_DOC = \"A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer uses either the group management functionality by using <code>subscribe(topic)</code> or the Kafka-based offset management strategy.\";\n"
  },
  {
    "id" : "0585821b-b455-4ebf-a120-803421c4fa96",
    "prId" : 6870,
    "prUrl" : "https://github.com/apache/kafka/pull/6870#pullrequestreview-259369822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09546930-57f1-46be-90a4-a27485df004a",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Why do we need to remove `<p>` in this case?",
        "createdAt" : "2019-07-08T17:02:14Z",
        "updatedAt" : "2019-09-11T09:27:52Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "af2e0a55-4ce2-455f-adbe-bc164c4be9e2",
        "parentId" : "09546930-57f1-46be-90a4-a27485df004a",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "These new paragraphs inserted unnecessary whitespace and it looked weird having paragraphs only containing very short sentences.",
        "createdAt" : "2019-07-09T09:13:11Z",
        "updatedAt" : "2019-09-11T09:27:52Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "24b758f2320d2958a45c73af8660770da7398021",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +43,47 @@\n    public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups. If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n                                                       + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.\"\n                                                       + \" If the value is <code>resolve_canonical_bootstrap_servers_only</code> each entry will be resolved and expanded into a list of canonical names.\";"
  }
]