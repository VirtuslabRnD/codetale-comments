[
  {
    "id" : "edaaa85f-ce41-4055-8529-38ab6db53bbb",
    "prId" : 2267,
    "prUrl" : "https://github.com/apache/kafka/pull/2267#pullrequestreview-162128404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcbd4108-255c-4858-badd-9a7ac6044678",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm.. when the producer has zstd enabled, then we should fail if the broker doesn't support v7 of the produce API. Maybe we can pass the `CompressionType` to this builder and add the validation to the `build` method?",
        "createdAt" : "2018-10-05T07:23:45Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "01f13bcf-022e-4086-b3d4-7fed9999bf24",
        "parentId" : "dcbd4108-255c-4858-badd-9a7ac6044678",
        "authorId" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "body" : "Since `CompressionType` is configured on `RecordBatch` instances in `MemoryRecords,` I think we don't need to add a new, duplicate parameter. How about checking whether `MemoryRecords` instances include the zstd compressed `RecordBatch` instances? You know, the compression type may differ between topic partitions included in `ProduceRequest.`",
        "createdAt" : "2018-10-05T16:42:36Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "tags" : [
        ]
      },
      {
        "id" : "476d5a62-7684-45c1-a8e7-276bb0e40380",
        "parentId" : "dcbd4108-255c-4858-badd-9a7ac6044678",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, I think that works also. Actually, now that you mention it, another place we could do this validation is `ProduceRequest.validateRecords`.",
        "createdAt" : "2018-10-05T16:48:14Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "841fa05d-dbd8-45df-90fb-d8a27c4d2ee6",
        "parentId" : "dcbd4108-255c-4858-badd-9a7ac6044678",
        "authorId" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "body" : "This approach seems like the most reasonable. :+1: for `ProduceRequest.validateRecords`.",
        "createdAt" : "2018-10-05T17:17:38Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "147c47358b3d9483de633b855ff809f64b9befef",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +158,162 @@        }\n\n        public Builder(short minVersion,\n                       short maxVersion,\n                       short acks,"
  },
  {
    "id" : "04a53e03-1fa9-445d-b6c3-d19412748915",
    "prId" : 2267,
    "prUrl" : "https://github.com/apache/kafka/pull/2267#pullrequestreview-162177303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71b45964-fcc9-4534-82d6-991f0fcbfa06",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can we use `UnsupportedVersionException`? The record is valid, it is just that the produce request version doesn't support it.",
        "createdAt" : "2018-10-05T19:38:04Z",
        "updatedAt" : "2018-10-09T21:16:40Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "147c47358b3d9483de633b855ff809f64b9befef",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +254,258 @@                        \"contain record batches with magic version 2\");\n            if (version < 7 && entry.compressionType() == CompressionType.ZSTD) {\n                throw new InvalidRecordException(\"Produce requests with version \" + version + \" are note allowed to \" +\n                    \"use ZStandard compression\");\n            }"
  }
]