[
  {
    "id" : "e6ac1333-ae82-41ee-8af1-3cccf2bebf88",
    "prId" : 4570,
    "prUrl" : "https://github.com/apache/kafka/pull/4570#pullrequestreview-96546630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb78891-7d9c-4749-87db-75f4a06448f7",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Out of curiosity, why use this instead of just setting it to `null`?",
        "createdAt" : "2018-02-14T14:56:34Z",
        "updatedAt" : "2018-02-14T15:41:17Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "ca7026eb-7c91-44ee-8565-0849d863ce32",
        "parentId" : "bfb78891-7d9c-4749-87db-75f4a06448f7",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Since I removed the flag which was tracking whether the stream was closed, I thought it will be better to throw a meaningful exception rather than NPE if we made any changes later which missed out the check for `appendStreamIsClosed`.",
        "createdAt" : "2018-02-14T15:47:27Z",
        "updatedAt" : "2018-02-14T15:47:27Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ae1e71e8e785cb230282f0ef56cfc40294502b2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +45,49 @@            throw new IllegalStateException(\"MemoryRecordsBuilder is closed for record appends\");\n        }\n    });\n\n    private final TimestampType timestampType;"
  },
  {
    "id" : "de7eaac5-5097-456b-9342-d61061345fc3",
    "prId" : 8647,
    "prUrl" : "https://github.com/apache/kafka/pull/8647#pullrequestreview-410228829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8340b12-1571-4966-a287-0412a9b17828",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I'm a bit nervous about this method being in the public interface. Could we make it package private and then add a test utility method in the same package that calls it, exposing it only for tests?",
        "createdAt" : "2020-05-12T16:02:03Z",
        "updatedAt" : "2020-05-12T16:45:52Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "9f1f030d-9685-4b23-89af-aac66f983b23",
        "parentId" : "d8340b12-1571-4966-a287-0412a9b17828",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Oh, we already have a public `appendUncheckedWithOffset` for `LegacyRecord`.",
        "createdAt" : "2020-05-12T16:03:49Z",
        "updatedAt" : "2020-05-12T16:45:52Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "57bb4d7a-2dbb-4c5f-9e8c-97ebaf30fc5a",
        "parentId" : "d8340b12-1571-4966-a287-0412a9b17828",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We could move these methods to a `TestMemoryRecordsBuilder` or something. I think risk of misuse is probably not high though.",
        "createdAt" : "2020-05-12T16:17:33Z",
        "updatedAt" : "2020-05-12T16:45:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "be4bde3a-c1b5-47cd-a319-fe27ad8ccdd0",
        "parentId" : "d8340b12-1571-4966-a287-0412a9b17828",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Makes sense. Since we already had one such method, I'm ok with keeping as is.",
        "createdAt" : "2020-05-12T16:42:42Z",
        "updatedAt" : "2020-05-12T16:45:52Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b174f7c272a0cdec396e613507c612ded7f96044",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +595,599 @@     * @param record The record to add\n     */\n    public void appendUncheckedWithOffset(long offset, SimpleRecord record) throws IOException {\n        if (magic >= RecordBatch.MAGIC_VALUE_V2) {\n            int offsetDelta = (int) (offset - baseOffset);"
  }
]