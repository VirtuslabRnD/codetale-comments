[
  {
    "id" : "dee957d0-1016-47d6-8847-23f26fdd08a9",
    "prId" : 10455,
    "prUrl" : "https://github.com/apache/kafka/pull/10455#pullrequestreview-629016264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1727d021-d97a-40e1-94b7-fc3e25bc8709",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "I had to look this constant up :) \r\n\r\nCan we just make it check if the jitter is equal to zero (or maybe `<=` zero)? A caller of this method setting jitter to something like 0.5 might be surprised that there is no jitter added.",
        "createdAt" : "2021-04-05T20:27:27Z",
        "updatedAt" : "2021-04-05T20:27:30Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "2765266e-adac-470c-821c-3aeb5a570041",
        "parentId" : "1727d021-d97a-40e1-94b7-fc3e25bc8709",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "`MIN_NORMAL` is 2^-1022, though.  So it certainly wouldn't affect someone setting jitter = 0.5.",
        "createdAt" : "2021-04-05T20:59:01Z",
        "updatedAt" : "2021-04-05T20:59:01Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "ce134973-d948-423d-a75a-c408ae5b0759",
        "parentId" : "1727d021-d97a-40e1-94b7-fc3e25bc8709",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Gotcha, I misunderstood the docs and thought it was ~1. Let's keep it as-is",
        "createdAt" : "2021-04-06T14:08:05Z",
        "updatedAt" : "2021-04-06T14:08:05Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "31df6b755f2b3b2aab02e8eb0dd22775d02a3398",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +48,52 @@        double exp = Math.min(attempts, this.expMax);\n        double term = initialInterval * Math.pow(multiplier, exp);\n        double randomFactor = jitter < Double.MIN_NORMAL ? 1.0 :\n            ThreadLocalRandom.current().nextDouble(1 - jitter, 1 + jitter);\n        return (long) (randomFactor * term);"
  }
]