[
  {
    "id" : "434cf462-2753-4c10-a875-dedde140fbb0",
    "prId" : 5974,
    "prUrl" : "https://github.com/apache/kafka/pull/5974#pullrequestreview-180088760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24531587-f01d-489a-b59d-4f559aacf048",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It's really weird that we store a reference to the parent sensors inside the `Sensor` object, but children sensors are kept in a separate map. ðŸ˜• ",
        "createdAt" : "2018-11-30T00:20:37Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "4256451c-be58-4ab8-b419-95d7a079fbd5",
        "parentId" : "24531587-f01d-489a-b59d-4f559aacf048",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I frowned upon it as well, and for the history the parent stored on sensor was there since day one, while the children map is added a year later. I think it's actually better to keep both the parents and children inside a single Sensor, but we can do that in another cleanup PR.",
        "createdAt" : "2018-11-30T01:03:23Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "3e765962-1ad1-4f26-999e-08d3c76c96e7",
        "parentId" : "24531587-f01d-489a-b59d-4f559aacf048",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I fought the urge to refactor it into a more traditional bidirectionally linked graph structure.\r\n\r\nMaybe later; it doesn't seem worth opening that can of worms right now.",
        "createdAt" : "2018-11-30T01:17:20Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f6aea2d56592bc19c46f71559c2a1e53dd98764",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +450,454 @@                        childSensors = childrenSensors.remove(sensor);\n                        for (final Sensor parent : sensor.parents()) {\n                            childrenSensors.getOrDefault(parent, emptyList()).remove(sensor);\n                        }\n                    }"
  },
  {
    "id" : "8ba33937-68ff-42e9-9cfd-d57b10d86bb2",
    "prId" : 5974,
    "prUrl" : "https://github.com/apache/kafka/pull/5974#pullrequestreview-180099427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d93cc699-d449-4151-a176-068f3881b905",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm.. On sensor creation, we have a check if `parents` is null. Should we have that check here as well or is it unneeded in the creation logic?",
        "createdAt" : "2018-11-30T00:29:56Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "0be52071-465d-420e-8a8b-3ffde59d4ded",
        "parentId" : "d93cc699-d449-4151-a176-068f3881b905",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Not sure I follow: since we check and avoid nulls at the creation time already, `parents()` call is hence always safe to return not-null, right?",
        "createdAt" : "2018-11-30T01:05:05Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "30c7f4fd-af7f-42df-9500-f5b11400eabe",
        "parentId" : "d93cc699-d449-4151-a176-068f3881b905",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'm ashamed I didn't think of this. I think it's not needed here, since the sensor's constructor ensures that the `parents` field is not null. If the constructor arg is null, the field is initialized as an empty array.\r\n\r\nDoes that seem legit?",
        "createdAt" : "2018-11-30T01:20:13Z",
        "updatedAt" : "2018-11-30T01:24:09Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "17549a90-ff2e-4490-8d70-152ac175fa7d",
        "parentId" : "d93cc699-d449-4151-a176-068f3881b905",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Ah yeah, we do have a null check in the constructor. Good enough for me.",
        "createdAt" : "2018-11-30T02:18:02Z",
        "updatedAt" : "2018-11-30T02:18:02Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f6aea2d56592bc19c46f71559c2a1e53dd98764",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +449,453 @@                        log.debug(\"Removed sensor with name {}\", name);\n                        childSensors = childrenSensors.remove(sensor);\n                        for (final Sensor parent : sensor.parents()) {\n                            childrenSensors.getOrDefault(parent, emptyList()).remove(sensor);\n                        }"
  }
]