[
  {
    "id" : "a794ab0b-acbe-4c1e-9cbf-5a63ab5e2a78",
    "prId" : 7867,
    "prUrl" : "https://github.com/apache/kafka/pull/7867#pullrequestreview-336803254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96757e3c-a3f3-4e1a-9ce0-99c9aa6f4e28",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "needs `@param logContext`",
        "createdAt" : "2019-12-27T15:39:28Z",
        "updatedAt" : "2020-01-06T18:43:12Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f7b4b32d70c783a5e49ab15a492aa7feefb655",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +52,56 @@     * @param logContext the log context instance\n     *\n     * @return the configured `ChannelBuilder`\n     * @throws IllegalArgumentException if `mode` invariants described above is not maintained\n     */"
  },
  {
    "id" : "ad8e31fa-5077-4af4-a562-9a60592c775d",
    "prId" : 7867,
    "prUrl" : "https://github.com/apache/kafka/pull/7867#pullrequestreview-336803254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60703e9e-04fb-41bd-b991-63c2658af96a",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Needs `@param logContext` in Javadoc (and also `@param isInterBrokerListener`, `@param isInterBrokerListener `, and `@param time`)",
        "createdAt" : "2019-12-27T15:44:14Z",
        "updatedAt" : "2020-01-06T18:43:12Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f7b4b32d70c783a5e49ab15a492aa7feefb655",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +94,98 @@                                                      DelegationTokenCache tokenCache,\n                                                      Time time,\n                                                      LogContext logContext) {\n        return create(securityProtocol, Mode.SERVER, JaasContext.Type.SERVER, config, listenerName,\n                isInterBrokerListener, null, true, credentialCache,"
  },
  {
    "id" : "90ae93fa-e63b-424d-a115-c00c00f7d7c2",
    "prId" : 8826,
    "prUrl" : "https://github.com/apache/kafka/pull/8826#pullrequestreview-438712110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47c7deb9-1c83-4398-884f-e5c40d874e8a",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "I'm confused, why does convert the type of config will change the way we interpret the config value?",
        "createdAt" : "2020-06-27T16:39:57Z",
        "updatedAt" : "2020-12-02T15:49:33Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "728d492f-6d1f-4ff1-b708-2393d8488b48",
        "parentId" : "47c7deb9-1c83-4398-884f-e5c40d874e8a",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "> Does it make sense to just change the logging\r\n\r\nPardon me, I failed to get your point.\r\n\r\n> And in terms of misleading, does this log confuse the user by any chance?\r\n\r\nfor example, the ssl-related configs used to create ssl protocol are viewed as *unknown* when creating ```KafkaAdmin```.\r\n\r\n> why does convert the type of config will change the way we interpret the config value?\r\n\r\nthe fix is unrelated to the type of config. The ```configs``` returned by this method is changed to the inner map (```RecordingMap```) of ```AbstractConfig``` so the keys used to call ```Map#get``` will be added to *used list* of ```AbstractConfig```. ",
        "createdAt" : "2020-06-27T17:21:04Z",
        "updatedAt" : "2020-12-02T15:49:33Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "bee0513e40c2eae343456a067d7dce26af55854a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +164,168 @@    @SuppressWarnings(\"unchecked\")\n    static Map<String, Object> channelBuilderConfigs(final AbstractConfig config, final ListenerName listenerName) {\n        Map<String, Object> parsedConfigs;\n        if (listenerName == null)\n            parsedConfigs = (Map<String, Object>) config.values();"
  },
  {
    "id" : "7d4ed9e3-bfbe-48f1-9e8e-5884e7b54b85",
    "prId" : 8826,
    "prUrl" : "https://github.com/apache/kafka/pull/8826#pullrequestreview-526795911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98eade13-e400-4cba-b7cd-1309547fca30",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Does this cover the case when listenerName is not null? I guess that can only happen on the server side and since we don't log unused configs on the server, so maybe this is ok for now?",
        "createdAt" : "2020-11-10T01:21:34Z",
        "updatedAt" : "2020-12-02T15:49:33Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "4f97737b-2f9c-4e45-8a93-ca7b659dd974",
        "parentId" : "98eade13-e400-4cba-b7cd-1309547fca30",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "```java\r\n        if (listenerName == null)\r\n            parsedConfigs = (Map<String, Object>) config.values();\r\n        else\r\n            parsedConfigs = config.valuesWithPrefixOverride(listenerName.configPrefix());\r\n```\r\n\r\nthe method ```config.valuesWithPrefixOverride``` also returns ```RecordingMap so it is ok.",
        "createdAt" : "2020-11-10T01:59:21Z",
        "updatedAt" : "2020-12-02T15:49:33Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "bee0513e40c2eae343456a067d7dce26af55854a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +166,170 @@        Map<String, Object> parsedConfigs;\n        if (listenerName == null)\n            parsedConfigs = (Map<String, Object>) config.values();\n        else\n            parsedConfigs = config.valuesWithPrefixOverride(listenerName.configPrefix());"
  }
]