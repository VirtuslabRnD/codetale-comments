[
  {
    "id" : "9c937c31-f121-4ca6-8f0a-9513f642ddf2",
    "prId" : 7296,
    "prUrl" : "https://github.com/apache/kafka/pull/7296#pullrequestreview-297176287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97fa934a-7d1c-4583-9883-ed32652fe41f",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "It's not introduce in this PR, but while reviewing it I found in `OffsetAndMetadata` we are storing nullable `Integer` directly whereas in `OffsetAndTimestamp` and here we are still maintaining the `Optional<Integer>`. Maybe it's better to make the first one consistent with others.",
        "createdAt" : "2019-10-02T23:54:50Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "9ebf70a8-b98c-493c-9f63-a4e6c0e37e6b",
        "parentId" : "97fa934a-7d1c-4583-9883-ed32652fe41f",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "Unfortunately `OffsetAndMetadata` is `Serializable` so I'm not sure it's worth it",
        "createdAt" : "2019-10-03T20:54:15Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "630307ce-6689-4de1-9381-891c4e765700",
        "parentId" : "97fa934a-7d1c-4583-9883-ed32652fe41f",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yes, that is the reason for the inconsistency. Obviously it was a mistake to let `OffsetAndMetadata` be serializable in the first place.",
        "createdAt" : "2019-10-03T22:00:13Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "adb3377352be6336d1586a4a160eedbcd5a9a021",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@        }\n\n        public Optional<Integer> leaderEpoch() {\n            return leaderEpoch;\n        }"
  }
]