[
  {
    "id" : "9a9215ff-7e9f-4753-a7c7-545e9e361abd",
    "prId" : 6731,
    "prUrl" : "https://github.com/apache/kafka/pull/6731#pullrequestreview-239169896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57c19494-ce95-4792-9296-ffad6f4cc863",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: missing parameter docs. Could just leave them off.",
        "createdAt" : "2019-05-17T23:43:32Z",
        "updatedAt" : "2019-05-17T23:46:45Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c7c0bdc761dc4bb68e0ec59c113abb4a834901d",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +188,192 @@    /**\n     * Get the node by node id if the replica for the given partition is online\n     * @param partition\n     * @param id\n     * @return"
  },
  {
    "id" : "1e4ce4e8-ede5-4a71-9132-b04b1fbbd31b",
    "prId" : 7192,
    "prUrl" : "https://github.com/apache/kafka/pull/7192#pullrequestreview-273725830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c88221a1-e31d-4ac9-acd5-27efd50bb928",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "`tmpPartitionsByNode` has modifiable lists as values and by extension `this.partitionsByNode` will as well. Is that a concern? We can access it via a public interface so I assume we should keep the immutableness",
        "createdAt" : "2019-08-11T13:39:17Z",
        "updatedAt" : "2019-08-14T13:25:15Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "007abbd4-35ba-4500-b6dc-702ca4131be1",
        "parentId" : "c88221a1-e31d-4ac9-acd5-27efd50bb928",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Yeah, it's a bit annoying that we have to do an iteration just to do this. Pushed a fix.",
        "createdAt" : "2019-08-11T15:33:58Z",
        "updatedAt" : "2019-08-14T13:25:15Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "d7bef8e1-3948-475f-90e6-e7b538d55ca4",
        "parentId" : "c88221a1-e31d-4ac9-acd5-27efd50bb928",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I also added a test to verify this since the logic is a bit complex.",
        "createdAt" : "2019-08-11T15:52:03Z",
        "updatedAt" : "2019-08-14T13:25:15Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8b6017a8-76cf-4397-9ceb-6ed0a1d05534",
        "parentId" : "c88221a1-e31d-4ac9-acd5-27efd50bb928",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "nice",
        "createdAt" : "2019-08-12T14:21:54Z",
        "updatedAt" : "2019-08-14T13:25:15Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a01cb353557fcf370a7bc947ae7393d08fc93ff",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +107,111 @@        // Index the nodes for quick lookup\n        Map<Integer, Node> tmpNodesById = new HashMap<>();\n        Map<Integer, List<PartitionInfo>> tmpPartitionsByNode = new HashMap<>(nodes.size());\n        for (Node node : nodes) {\n            tmpNodesById.put(node.id(), node);"
  }
]