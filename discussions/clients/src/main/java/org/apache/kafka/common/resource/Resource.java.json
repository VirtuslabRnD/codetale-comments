[
  {
    "id" : "3ef43852-7568-4dc8-ba95-4900ba6e328e",
    "prId" : 5117,
    "prUrl" : "https://github.com/apache/kafka/pull/5117#pullrequestreview-126144105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f14dc3d-8b31-4831-a6e6-8e85dcaa02f6",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should we remove the Resource in o.a.k.c.request?",
        "createdAt" : "2018-06-04T02:42:34Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "b126138c-ed2e-4f33-a642-e93cf1c0286d",
        "parentId" : "4f14dc3d-8b31-4831-a6e6-8e85dcaa02f6",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "IMHO, no.\r\n\r\nConceptually, it doesn't make any sense for a _resource_ to support literal or prefixed names. A _resource_ should be an actual cluster resource, with a full name.\r\n\r\nThe two `Resource` classes are used in two different areas of the API: topic config and Acls.  For one area were being forced to add this `ResourceTypeName` to the `Resource` class. But in the other are the name type field is not required.\r\n\r\nI would say that we leave these two classes as separate for now and look to merge them in KIP-50. This way, users wanting to make use of the topic config API don't need to worry about this new `ResourceNameType` field. This is only required if dealing with Acls, and only until we implement KIP-50, which should also make the field redundant.",
        "createdAt" : "2018-06-04T08:46:08Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      },
      {
        "id" : "22d0c541-0508-4e31-9f56-adf97859e902",
        "parentId" : "4f14dc3d-8b31-4831-a6e6-8e85dcaa02f6",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "To be fair, `org.apache.kafka.common.requests.Resource` is not actually a part of the public AdminClient API for getting and setting configurations.  The public class for that is `org.apache.kafka.common.config.ConfigResource`.  I would argue that we should just get rid of `o.a.k.c.r.Resource`, since it just duplicates `ConfigResource`.  We just end up copying things to and from `ConfigResource` in `alterConfigs` and the other functions.  And it's an internal private class anyway, so we can always re-create it if we need to (we won't)\r\n\r\n(I would also argue that ConfigResource should never have been separate from `org.apache.kafka.common.resource.Resource`, but that ship has sailed since ConfigResource is part of the stable API now).",
        "createdAt" : "2018-06-05T20:39:52Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "c05249a2-eef5-428f-b8f8-501d0b7b4f45",
        "parentId" : "4f14dc3d-8b31-4831-a6e6-8e85dcaa02f6",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "By the way, I think we should remove `o.a.k.c.r.Resource` in a separate follow-on change.  It's not really related to KIP-290",
        "createdAt" : "2018-06-05T20:41:21Z",
        "updatedAt" : "2018-06-06T11:20:45Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f96d0db4fbc086139542b5730ac79aea8c44c13",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@\n/**\n * Represents a cluster resource with a tuple of (type, name, nameType).\n *\n * The API for this class is still evolving and we may break compatibility in minor releases, if necessary."
  }
]