[
  {
    "id" : "5d97bcef-125c-420a-83a9-7edaa9750998",
    "prId" : 10173,
    "prUrl" : "https://github.com/apache/kafka/pull/10173#pullrequestreview-620240775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fb9c3d9-f1d2-4ab0-be4d-e4e8d70b468c",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "`Path` is meant to be the modern counterpart of `File`. Is there any reason why we're using `File` in the public interfaces?",
        "createdAt" : "2021-03-09T17:45:23Z",
        "updatedAt" : "2021-03-09T17:45:23Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "5fc221ad-fd7c-47d2-9a8b-fff87c240e21",
        "parentId" : "5fb9c3d9-f1d2-4ab0-be4d-e4e8d70b468c",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "@ijuma This is a good point. `File` is used here as the targeted implementations like HDFS/S3 have good API integration with that and the implementations can have efficient transfers accessing `File/Path`. \r\nWe can avoid using `File/Path` instances to avoid giving write access to the RSM implementations. But we can give readable `FileChannel` so that they can still efficiently transfer them if they need to. wdyt?\r\n",
        "createdAt" : "2021-03-24T16:34:50Z",
        "updatedAt" : "2021-03-24T16:34:50Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      },
      {
        "id" : "c457daae-e7f7-435a-981f-bc42f5df243d",
        "parentId" : "5fb9c3d9-f1d2-4ab0-be4d-e4e8d70b468c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "`Path` is fine. I am saying that `File` is not good.",
        "createdAt" : "2021-03-24T21:19:42Z",
        "updatedAt" : "2021-03-24T21:19:43Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0c79ed3d8d2850ec14e8de70f0e48c5f8e86427",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@     * @return Time index file of this segment.\n     */\n    public File timeIndex() {\n        return timeIndex;\n    }"
  },
  {
    "id" : "eaf6b779-e888-47ea-8708-ef0c0fd95f2c",
    "prId" : 10173,
    "prUrl" : "https://github.com/apache/kafka/pull/10173#pullrequestreview-609110235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd80a418-8e09-40aa-a1b2-3dd8aa3c85ae",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "The indentation looks a bit off here.",
        "createdAt" : "2021-03-10T20:03:48Z",
        "updatedAt" : "2021-03-10T20:24:16Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0c79ed3d8d2850ec14e8de70f0e48c5f8e86427",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +115,119 @@        return Objects.equals(logSegment, that.logSegment) && Objects\n                .equals(offsetIndex, that.offsetIndex) && Objects\n                       .equals(timeIndex, that.timeIndex) && Objects\n                       .equals(txnIndex, that.txnIndex) && Objects\n                       .equals(producerSnapshotIndex, that.producerSnapshotIndex) && Objects"
  }
]