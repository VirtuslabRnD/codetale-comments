[
  {
    "id" : "8909ca66-3911-411e-bb7f-5908c6482f0f",
    "prId" : 8417,
    "prUrl" : "https://github.com/apache/kafka/pull/8417#pullrequestreview-397931083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "680624b9-af3e-42df-842f-cb431d6f8bec",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Could we leverage the new method ```errorCounts(Stream<Errors>)```? For example:\r\n```\r\nreturn errorCounts(data.results().stream().map(result -> Errors.forCode(result.errorCode())));\r\n```",
        "createdAt" : "2020-04-10T17:24:52Z",
        "updatedAt" : "2020-04-22T13:52:42Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "8120c6f5-c2c3-439f-b07c-e4f72737330b",
        "parentId" : "680624b9-af3e-42df-842f-cb431d6f8bec",
        "authorId" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "body" : "@chia7712 what I've tried to do in this PR so far is:\r\n\r\n* Change `for` stmt  + updateErrorCounts to use `forEach` consistently\r\n* Change calls to `errorCounts(Collection)` to `errorCounts(Stream)`\r\n\r\nI've not tried to change all code to use either `forEach` or `errorCounts(Stream)`. Obviously we could do that, but @ijuma seems happy enough with continuing to have these two ways to do it.",
        "createdAt" : "2020-04-22T07:52:00Z",
        "updatedAt" : "2020-04-22T13:52:42Z",
        "lastEditedBy" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc52740ff70d790bdc2927a6000ef45b682e119f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +51,55 @@    @Override\n    public Map<Errors, Integer> errorCounts() {\n        Map<Errors, Integer> counts = new HashMap<>();\n        data.results().forEach(result ->\n            updateErrorCounts(counts, Errors.forCode(result.errorCode()))"
  }
]