[
  {
    "id" : "f8e2ddd1-3fe8-458f-842e-1a95e4139ebb",
    "prId" : 4485,
    "prUrl" : "https://github.com/apache/kafka/pull/4485#pullrequestreview-132977467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d62dd8d1-4208-4ee5-8f34-5cee42ab9d56",
        "parentId" : null,
        "authorId" : "2d677cb0-7f58-4f02-8104-880b46eb7fb3",
        "body" : "can we also check if the security.protocol is sasl or sasl_ssl and only enable this for the sasl handshake. Instead of asking users to disable this if they are using SSL?",
        "createdAt" : "2018-06-27T19:49:06Z",
        "updatedAt" : "2018-10-13T16:40:58Z",
        "lastEditedBy" : "2d677cb0-7f58-4f02-8104-880b46eb7fb3",
        "tags" : [
        ]
      },
      {
        "id" : "7d40c251-9330-46a5-aff8-fb5ab6fef1d1",
        "parentId" : "d62dd8d1-4208-4ee5-8f34-5cee42ab9d56",
        "authorId" : "e82d6bb6-079e-4009-bef9-549ef33387f1",
        "body" : "Hi,\r\n\r\nThis has been suggested previously and was part of the initial implementation (see https://github.com/apache/kafka/pull/4485/commits/24757eb7b06bcf8c7d7649c85232c52b5d54f0e4)\r\n\r\nYou can potentially use SASL_SSL and still enable this feature.\r\nThis has been discussed on the email thread (see replies https://lists.apache.org/thread.html/ec3b6826f876382690214cdcad3ab9adc8f0986b34feb799c9810f22@%3Cdev.kafka.apache.org%3E)\r\n\r\nI think the view is that this feature shouldn't take the security protocol into account.",
        "createdAt" : "2018-06-28T18:59:10Z",
        "updatedAt" : "2018-10-13T16:40:58Z",
        "lastEditedBy" : "e82d6bb6-079e-4009-bef9-549ef33387f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "85cae7d6538b8cd8c4ecd485bec14485ae10a1c4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +56,60 @@                        throw new ConfigException(\"Invalid url in \" + CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG + \": \" + url);\n\n                    if (clientDnsLookupBehaviour == ClientDnsLookup.RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY) {\n                        InetAddress[] inetAddresses = InetAddress.getAllByName(host);\n                        for (InetAddress inetAddress : inetAddresses) {"
  },
  {
    "id" : "77283d27-f350-41ab-95e6-90d6e4b40674",
    "prId" : 7867,
    "prUrl" : "https://github.com/apache/kafka/pull/7867#pullrequestreview-336803254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39ed2ba4-4ff9-4f2d-8f11-768e8484a3d3",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Needs `@param logContext` (and also `@param time the time instance`)",
        "createdAt" : "2019-12-27T15:40:33Z",
        "updatedAt" : "2020-01-06T18:43:12Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f7b4b32d70c783a5e49ab15a492aa7feefb655",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +98,102 @@     * @param logContext the logging context\n     *\n     * @return configured ChannelBuilder based on the configs.\n     */\n    public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time time, LogContext logContext) {"
  },
  {
    "id" : "8853905c-450e-41c5-b232-b447d96ac85e",
    "prId" : 8644,
    "prUrl" : "https://github.com/apache/kafka/pull/8644#pullrequestreview-422254042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@badaiaqrandista We should replace this if/else with a switch statement so that we are forced to handle every case. That makes it easier to avoid issues if we add new elements to the enum. Also, can we please add tests?",
        "createdAt" : "2020-05-28T04:27:20Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "73553ef8-ace7-4c76-844d-efa72f5ab443",
        "parentId" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Btw, it seems that we are changing the behavior of `RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY` as well, right? Before, we would only use the first DNS IP for that option in the non bootstrap path. It would be good to make that clear in the KIP.",
        "createdAt" : "2020-05-28T04:34:20Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "e6af82fe-11fb-4b02-9cb4-2d7a34258663",
        "parentId" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "authorId" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "body" : "Yes, you are correct. If `client.dns.lookup=RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY` , then it will resolves the hostname to IP address using the default behaviour.",
        "createdAt" : "2020-05-28T07:02:46Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "tags" : [
        ]
      },
      {
        "id" : "8b1618a9-a2ce-425a-bbc5-bb762c1003fa",
        "parentId" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "authorId" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "body" : "I've changed this into switch/case and updated the KIP.",
        "createdAt" : "2020-05-28T16:38:46Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "tags" : [
        ]
      },
      {
        "id" : "4fe2070d-2e9a-42e6-a548-9e396af99fdf",
        "parentId" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Can we remove the default since we handled all the cases?",
        "createdAt" : "2020-05-30T15:44:55Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "48f2a19a-8262-41fd-9a2e-c20e1eb242d8",
        "parentId" : "17c959f6-804f-4633-bfc5-9980d101b15f",
        "authorId" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "body" : "ok. will remove the default.",
        "createdAt" : "2020-06-01T23:51:58Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "df0302628a9211c8e628e70e57a2788e4a92fa45",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +116,120 @@            case RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY:\n                return filterPreferredAddresses(addresses);\n        }\n\n        throw new IllegalStateException(\"Unhandled ClientDnsLookup instance: \" + clientDnsLookup);"
  },
  {
    "id" : "0e121ea9-0f24-41c1-b8fd-2f09fc289955",
    "prId" : 8644,
    "prUrl" : "https://github.com/apache/kafka/pull/8644#pullrequestreview-423094202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acc70ef8-7217-4635-a50e-134539379c3e",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Can we add a test that passes `RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY` showing that we now get multiple addresses instead of only the first one. That's one of the changes in this PR.",
        "createdAt" : "2020-05-30T15:50:26Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "166d3f97-f352-45b6-a0f2-c0e6bcfd88a4",
        "parentId" : "acc70ef8-7217-4635-a50e-134539379c3e",
        "authorId" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "body" : "Added. ",
        "createdAt" : "2020-06-02T22:14:34Z",
        "updatedAt" : "2020-06-04T11:20:16Z",
        "lastEditedBy" : "e23983e0-fd82-46d6-9f97-a304f0a5b8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "df0302628a9211c8e628e70e57a2788e4a92fa45",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +115,119 @@            case USE_ALL_DNS_IPS:\n            case RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY:\n                return filterPreferredAddresses(addresses);\n        }\n"
  }
]