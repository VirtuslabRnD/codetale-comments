[
  {
    "id" : "e2a7e512-2f31-4cf6-8010-650d3a8e0753",
    "prId" : 5027,
    "prUrl" : "https://github.com/apache/kafka/pull/5027#pullrequestreview-121586684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64c49936-2d1c-47df-aa57-fa3c6e259c9e",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Should we use `KafkaException` here as well?",
        "createdAt" : "2018-05-18T21:17:20Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "fac0848a-9347-44db-815b-6c64a8db1ce2",
        "parentId" : "64c49936-2d1c-47df-aa57-fa3c6e259c9e",
        "authorId" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "body" : "Hmm, I feel `IllegalStateException` is more appropriate in this case. We expect `NetworkClient` to not invoke `Metadata#update` after it has called `Metadata#close()`.",
        "createdAt" : "2018-05-18T22:15:41Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ba5e2150f77331eebebcfdeb56e84bf747cb5b",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +232,236 @@        Objects.requireNonNull(newCluster, \"cluster should not be null\");\n        if (isClosed())\n            throw new IllegalStateException(\"Update requested after metadata close\");\n\n        this.needUpdate = false;"
  },
  {
    "id" : "7322de91-1633-4ba9-af5f-004237fc9c5e",
    "prId" : 5027,
    "prUrl" : "https://github.com/apache/kafka/pull/5027#pullrequestreview-121595441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86e85c81-8d0f-4e5e-930a-d33b42708e30",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Does this need to be public?",
        "createdAt" : "2018-05-18T21:20:07Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "b88b0764-8a92-4b6e-9dc6-18f4f65cdcae",
        "parentId" : "86e85c81-8d0f-4e5e-930a-d33b42708e30",
        "authorId" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "body" : "I have `KafkaProducer` calling into this now, so needs to be public.",
        "createdAt" : "2018-05-18T23:16:38Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ba5e2150f77331eebebcfdeb56e84bf747cb5b",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +355,359 @@     * @return True if this instance has been closed; false otherwise\n     */\n    public synchronized boolean isClosed() {\n        return this.isClosed;\n    }"
  },
  {
    "id" : "0b7b2fc7-da76-469d-a364-01b584099aea",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-189982682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e9f975c-1231-42e8-9eac-a00c2301e3d9",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Maybe we could add a trace message in this case which mentions the old and new epochs. That may make debugging easier if there is a bug which introduces an invalid epoch somehow.",
        "createdAt" : "2019-01-07T21:24:38Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +205,209 @@            }\n            return true;\n        } else {\n            log.debug(\"Not replacing existing epoch {} with new epoch {}\", oldEpoch, epoch);\n            return false;"
  },
  {
    "id" : "ffcaba11-f89c-4c3f-aaf9-7eac38b9fa8b",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-190793098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a9e1308-51ba-45f3-8d7a-0fbcb63d6001",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We should probably clean this collection up in `setTopics`.",
        "createdAt" : "2019-01-08T23:54:56Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "fad63df4-f95f-4fe6-b3e2-a6fff8303c98",
        "parentId" : "5a9e1308-51ba-45f3-8d7a-0fbcb63d6001",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "üëç ",
        "createdAt" : "2019-01-09T15:48:19Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +81,85 @@    private final boolean topicExpiryEnabled;\n    private boolean isClosed;\n    private final Map<TopicPartition, Integer> lastSeenLeaderEpochs;\n\n    public Metadata(long refreshBackoffMs,"
  },
  {
    "id" : "1f7be1f4-b3c7-4177-b038-a257087ccac5",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-190511611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7042cf8c-2e3a-4de5-b09d-a1c7178b3f20",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Probably need to give MetadataCache a `toString`. Perhaps it can just delegate to `Cluster`.",
        "createdAt" : "2019-01-09T00:10:40Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +368,372 @@\n        notifyAll();\n        log.debug(\"Updated cluster metadata version {} to {}\", this.version, this.cache);\n    }\n"
  },
  {
    "id" : "408d3f91-cebd-4c31-a327-1f449b3065c1",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-193262724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de37aa01-d6db-45d0-8a79-04661057459c",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "If the metadata API does not support leader epochs, I am considering whether we should clear `lastSeenLeaderEpochs`. Say for example that a user seeks to an offset and provides an epoch. But when we try to fetch metadata for that or a later epoch, we find the broker is on an older version. This might be possible in a downgrade scenario. In this case, `partitionInfoIfCurrent` would indefinitely return nothing.",
        "createdAt" : "2019-01-16T17:41:45Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +428,432 @@            }\n        } else {\n            // Old cluster format (no epochs)\n            lastSeenLeaderEpochs.clear();\n            partitionInfoConsumer.accept(MetadataResponse.partitionMetaToInfo(topic, partitionMetadata));"
  },
  {
    "id" : "588ac2ff-b65b-493e-9e27-5b1e8a19ddbd",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-201209186",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34b63347-31e2-44b7-ad16-9fc27b3f8b65",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "nit: javadoc for new param `requestVersion`",
        "createdAt" : "2019-02-07T17:01:24Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +244,248 @@     * @param requestVersion The request version corresponding to the update response, as provided by\n     *     {@link #newMetadataRequestAndVersion()}.\n     * @param response metadata response received from the broker\n     * @param now current time in milliseconds\n     */"
  },
  {
    "id" : "71ffb9f7-eb20-4594-891d-fb7bda92f582",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-201212521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f61250c-d8da-44cb-bdb1-98a8f3f55430",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "This doesn't need to be synchronized?",
        "createdAt" : "2019-02-07T17:07:39Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 520,
    "diffHunk" : "@@ -1,1 +427,431 @@\n    protected MetadataRequest.Builder newMetadataRequestBuilder() {\n        return MetadataRequest.Builder.allTopics();\n    }\n"
  },
  {
    "id" : "cceae0d8-efee-4948-a0aa-595c2d4c59ae",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-201212521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9f7f3c3-fd5e-4d7d-973d-0064fadf6f70",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Same as above, doesn't need to be synchronized?",
        "createdAt" : "2019-02-07T17:08:21Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 524,
    "diffHunk" : "@@ -1,1 +431,435 @@\n    protected boolean retainTopic(String topic, boolean isInternal, long nowMs) {\n        return true;\n    }\n"
  },
  {
    "id" : "596affea-1cd0-4e8e-9d16-08ac595dfa1a",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-202076077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2da91e0-faad-49db-b8ee-827359556bc8",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "nit: add to javadoc",
        "createdAt" : "2019-02-11T12:19:54Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +85,89 @@    public Metadata(long refreshBackoffMs,\n                    long metadataExpireMs,\n                    LogContext logContext,\n                    ClusterResourceListeners clusterResourceListeners) {\n        this.log = logContext.logger(Metadata.class);"
  },
  {
    "id" : "53e32f08-5ab9-44c2-9013-b63c8bc8026b",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-206677334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15e1d1d7-7e55-42d5-9c85-9341a1a86a32",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "`retainTopic` doesn't seem to do anything with the `isInternal` flag",
        "createdAt" : "2019-02-11T12:27:51Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "562daebc-117c-4101-a81c-23aa2203d894",
        "parentId" : "15e1d1d7-7e55-42d5-9c85-9341a1a86a32",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It is used in `ConsumerMetadata.retainTopic`. ",
        "createdAt" : "2019-02-22T06:50:38Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +263,267 @@        String previousClusterId = cache.cluster().clusterResource().clusterId();\n\n        this.cache = handleMetadataResponse(response, topic -> retainTopic(topic.topic(), topic.isInternal(), now));\n\n        Cluster cluster = cache.cluster();"
  },
  {
    "id" : "741cf30f-1e43-429f-bcf2-cdf3c35deab2",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-211008318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4f35aa-36cf-47cb-91f1-5d518b7504d4",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Do we care about overwriting this value if get-and-clear hasn't been called?",
        "createdAt" : "2019-03-06T01:52:25Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +67,71 @@    private long lastSuccessfulRefreshMs;\n    private AuthenticationException authenticationException;\n    private KafkaException metadataException;\n    private MetadataCache cache = MetadataCache.empty();\n    private boolean needUpdate;"
  },
  {
    "id" : "f6553306-b70d-4ae3-aec1-63960a85881b",
    "prId" : 6221,
    "prUrl" : "https://github.com/apache/kafka/pull/6221#pullrequestreview-211980516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a56112c-828d-441f-9548-95d602c334c0",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "I wonder if having the broker manage a metadata version would make this any easier?",
        "createdAt" : "2019-03-06T20:04:09Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "e378aab5-0ce8-4d5f-9e00-0205b4670868",
        "parentId" : "6a56112c-828d-441f-9548-95d602c334c0",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I think it would. It would be nice to have a simple version in the metadata response that we could use to stale metadata. I suspect the partition leader epoch is the closest we can get to that without introducing server metadata bottlenecks. That said, I think some amount of bookkeeping is unavoidable in the client since the set of topics that it is interested in changes over time. You need some way of telling whether pending metadata fetches reflect changes to the interested topic set.\r\n",
        "createdAt" : "2019-03-07T19:38:30Z",
        "updatedAt" : "2019-03-07T21:10:38Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "546247c314070a8e7ce30a9131eac2b1e9fe1139",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +93,97 @@        this.lastSuccessfulRefreshMs = 0L;\n        this.requestVersion = 0;\n        this.updateVersion = 0;\n        this.needUpdate = false;\n        this.clusterResourceListeners = clusterResourceListeners;"
  },
  {
    "id" : "33a36f54-dc5a-4ae7-b9c6-50061e2c84ff",
    "prId" : 6371,
    "prUrl" : "https://github.com/apache/kafka/pull/6371#pullrequestreview-217995699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dce6595-9e21-4024-9c36-cac92eb0df2f",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: perhaps add a `toString`. Not sure it ends up in any log lines yet, but eventually it will.",
        "createdAt" : "2019-03-22T22:29:54Z",
        "updatedAt" : "2019-04-19T22:50:06Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "0934f5ac0211e742b1c5b77b1b5c067ed5ff9a6e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +457,461 @@    }\n\n    public static class LeaderAndEpoch {\n\n        public static final LeaderAndEpoch NO_LEADER_OR_EPOCH = new LeaderAndEpoch(Node.noNode(), Optional.empty());"
  }
]