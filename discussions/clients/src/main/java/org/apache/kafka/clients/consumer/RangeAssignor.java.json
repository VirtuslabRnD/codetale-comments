[
  {
    "id" : "4b343a22-c603-4abd-ba44-0335516208df",
    "prId" : 7014,
    "prUrl" : "https://github.com/apache/kafka/pull/7014#pullrequestreview-285821942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3562d35d-7e1b-49a7-8749-b3daf06bb4e9",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Sounds more like a proposal than a javadoc to me. I would get rid of the conditional tense in the description. IMO you do not need to describe both approaches, i.e., member ID vs group instance ID. Describing the approach with the group instance ID suffices, since this is the implemented one. ",
        "createdAt" : "2019-07-02T13:10:17Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "c20a7b9f-4e9f-499f-a340-c64448d309e5",
        "parentId" : "3562d35d-7e1b-49a7-8749-b3daf06bb4e9",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "I see your point. The purpose of the comparison is to let user understand that `group.instance.id` will be ephemeral, which could be easier to memorize when seeing an example, and in the same making the motivation clear.",
        "createdAt" : "2019-07-03T02:15:49Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "f3888295-c9fc-4667-be28-4b931bb5485e",
        "parentId" : "3562d35d-7e1b-49a7-8749-b3daf06bb4e9",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "You mean `member.id` is ephemeral, don't you?\r\n\r\nAs far as I understand, if the `group.instance.id` is set the assignment will be more sticky than without. It all boils down to `Collections.sort(consumersForTopic)` and the comparator of `MemberInfo`. If `group.instance.id` is set the comparator will use it, otherwise it will use `member.id`. \r\n\r\nIf this is correct, then maybe my comment above was a bit too strong. Still I think you should get rid of the conditional tense. For example, you should write `Since the introduction of static membership, we can leverage <code>group.instance.id</code> to make the assignment behavior more sticky.`, because we do it if `group.instance.id`is set. It's a fact.\r\n\r\nHere is another sentence, I would change:\r\n`The assignment change was caused by the change of <code>member.id</code> relative order, and could be mitigated by the introduction of static membership` -> `The assignment change is caused by the change of <code>member.id</code> relative order, and can be avoided by setting the group.instance.id.`",
        "createdAt" : "2019-07-09T09:46:07Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "c5b0a4dc-a700-404c-a3fd-7e49b464b476",
        "parentId" : "3562d35d-7e1b-49a7-8749-b3daf06bb4e9",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Thanks a lot! Addressed the tense issue",
        "createdAt" : "2019-09-09T22:38:21Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d51938d3563d8e4ed4524d41ef29bb5f458ffc42",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +64,68 @@ * <li><code>I1: [t0p2, t1p2]</code>\n * </ul>\n */\npublic class RangeAssignor extends AbstractPartitionAssignor {\n"
  },
  {
    "id" : "6a6fd5c1-b1ae-4a5f-8b63-d508e001e84e",
    "prId" : 7014,
    "prUrl" : "https://github.com/apache/kafka/pull/7014#pullrequestreview-285821942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59d9cd63-ed2c-4412-a333-81eeabc8a635",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Are these members guaranteed to be sorted by `member.id` already? I wasn't able to see how this change is going to result in a stable assignment. Sorry if I'm missing something obvious.",
        "createdAt" : "2019-07-09T22:09:15Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "5fa7ab6a-7fc0-4c11-9edd-894123796800",
        "parentId" : "59d9cd63-ed2c-4412-a333-81eeabc8a635",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "The sorting is done by AbstractPartitionAssignor#MemberInfo comparator. It will first split static and dynamic members, sort them separately, and return the array as [sorted static members] + [sorted dynamic members]",
        "createdAt" : "2019-09-09T22:41:08Z",
        "updatedAt" : "2019-09-09T23:47:45Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d51938d3563d8e4ed4524d41ef29bb5f458ffc42",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +76,80 @@        for (Map.Entry<String, Subscription> subscriptionEntry : consumerMetadata.entrySet()) {\n            String consumerId = subscriptionEntry.getKey();\n            MemberInfo memberInfo = new MemberInfo(consumerId, subscriptionEntry.getValue().groupInstanceId());\n            for (String topic : subscriptionEntry.getValue().topics()) {\n                put(topicToConsumers, topic, memberInfo);"
  }
]