[
  {
    "id" : "c296d644-cf87-4146-a5a9-87efb72ad685",
    "prId" : 4714,
    "prUrl" : "https://github.com/apache/kafka/pull/4714#pullrequestreview-104731686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c908eb8d-bd6e-4aca-9900-4f6a482a0e8f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we log something for this case?",
        "createdAt" : "2018-03-16T22:10:57Z",
        "updatedAt" : "2018-03-17T04:23:59Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6fdfec080e04f54dcb53f521d2ec8dbfde5c2b2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +509,513 @@\n        if (filename != null) {\n            try (InputStream propStream = new FileInputStream(filename)) {\n                props.load(propStream);\n            }"
  },
  {
    "id" : "910523ce-4a3c-4342-9ea0-f0983d4ca845",
    "prId" : 8267,
    "prUrl" : "https://github.com/apache/kafka/pull/8267#pullrequestreview-374757930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dde6eee-c2db-4acb-afe2-50d066386883",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a bit tricky: for the root file, we only consider deleting it if there's no specified skipping sub-files; otherwise we never try to delete since it would doom with DirectoryNotEmpty.",
        "createdAt" : "2020-03-10T23:16:14Z",
        "updatedAt" : "2020-03-14T20:47:01Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "9dc4c1ae-43ce-4d23-8dab-36c26a18bf4a",
        "parentId" : "1dde6eee-c2db-4acb-afe2-50d066386883",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "It would be good to avoid the unnecessary conversions in this method (`rootFile.toPath`, `path.toFile`). We can do some work at the start of the method to improve efficiency.",
        "createdAt" : "2020-03-14T22:23:59Z",
        "updatedAt" : "2020-03-14T22:23:59Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e76956090f1b8010efb5b1be9dc7a24a7b9884a6",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +778,782 @@                }\n\n                if (rootFile.toPath().equals(path)) {\n                    // only delete the parent directory if there's nothing to keep\n                    if (filesToKeep.isEmpty()) {"
  },
  {
    "id" : "607cc6ee-f169-48ca-8ba5-6d9a0b86aa17",
    "prId" : 8541,
    "prUrl" : "https://github.com/apache/kafka/pull/8541#pullrequestreview-400913168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75286234-bb6e-43a4-8e6b-5dac6a9ea529",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I've been wanting this for a while, so I just decided to add it.",
        "createdAt" : "2020-04-23T23:24:17Z",
        "updatedAt" : "2020-04-28T03:20:48Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "12b9a034-c11c-4525-ab32-d4d83fdef32f",
        "parentId" : "75286234-bb6e-43a4-8e6b-5dac6a9ea529",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please add unit tests for this method",
        "createdAt" : "2020-04-27T12:43:21Z",
        "updatedAt" : "2020-04-28T03:20:48Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "d58f62dc73dc3f4832cb89b5be6a8c8ce2f32e60",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1149,1153 @@\n    @SafeVarargs\n    public static <E> Set<E> union(final Supplier<Set<E>> constructor, final Set<E>... set) {\n        final Set<E> result = constructor.get();\n        for (final Set<E> s : set) {"
  },
  {
    "id" : "b8b7287f-9478-4d49-ac03-1db6c0209ae8",
    "prId" : 8588,
    "prUrl" : "https://github.com/apache/kafka/pull/8588#pullrequestreview-408512587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad542e9-e0d7-46f5-bd37-61a4ad21187a",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I wound up wanting the other two as well, so I went ahead and added them. Added tests as well.",
        "createdAt" : "2020-05-08T20:40:05Z",
        "updatedAt" : "2020-05-14T01:51:44Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cf8316444c205ea04f6fa0874619451f5b94d92",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1158,1162 @@\n    @SafeVarargs\n    public static <E> Set<E> intersection(final Supplier<Set<E>> constructor, final Set<E> first, final Set<E>... set) {\n        final Set<E> result = constructor.get();\n        result.addAll(first);"
  },
  {
    "id" : "48dd04e2-df3f-4e9e-ab8f-59155e68bf59",
    "prId" : 9255,
    "prUrl" : "https://github.com/apache/kafka/pull/9255#pullrequestreview-499643882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92da73e6-aba9-4d7f-9ceb-95979f084209",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I know that this is exiting logic that was just moved, but I am not sure if I understand how it works?",
        "createdAt" : "2020-09-11T22:44:18Z",
        "updatedAt" : "2020-09-16T11:03:04Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b5dc3f6d-6d8f-4e23-aa6c-88100e106e0f",
        "parentId" : "92da73e6-aba9-4d7f-9ceb-95979f084209",
        "authorId" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "body" : "@mjsax please let me know if ur asking anything specific i will try to explore that bt following is my understanding about this fxn : -\r\n\r\n-call from (streamResetter/ commandgroup) to reset the offset based on epooch value given timestamp.\r\n- check the format is correct if correct else throw exception. \r\n- append \"Z\" for UTC timezone if not there.\r\n- parse and get the time.\r\n\r\nBut i tested by running all the unit cases.\r\n",
        "createdAt" : "2020-09-16T15:32:55Z",
        "updatedAt" : "2020-09-16T15:39:25Z",
        "lastEditedBy" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "tags" : [
        ]
      },
      {
        "id" : "fee81071-6a55-40c9-b804-11ebfef2c198",
        "parentId" : "92da73e6-aba9-4d7f-9ceb-95979f084209",
        "authorId" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "body" : "@mjsax request you to please review this again.\r\n\r\nThanks !!",
        "createdAt" : "2020-09-16T15:36:58Z",
        "updatedAt" : "2020-09-16T15:36:59Z",
        "lastEditedBy" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "tags" : [
        ]
      },
      {
        "id" : "ff000848-437b-41fb-8123-cb5815220539",
        "parentId" : "92da73e6-aba9-4d7f-9ceb-95979f084209",
        "authorId" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "body" : "Hi @mjax request you to please review once.",
        "createdAt" : "2020-09-28T08:54:52Z",
        "updatedAt" : "2020-09-28T08:54:53Z",
        "lastEditedBy" : "dc57ad2f-4b98-4cb2-8a4f-2be6bf46015c",
        "tags" : [
        ]
      },
      {
        "id" : "10ed3edb-e23b-476c-a91f-26b05b2087bf",
        "parentId" : "92da73e6-aba9-4d7f-9ceb-95979f084209",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I was looking up the format in more detail and understand now what going on. The code does not seem to be ideal IMHO, but no need to change it in this PR.",
        "createdAt" : "2020-09-30T17:09:28Z",
        "updatedAt" : "2020-09-30T17:09:28Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "08b49370ebf9c970f8e595acc2b72d40dbbeeb4a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1293,1297 @@        }\n\n        if (!(secondPart.contains(\"+\") || secondPart.contains(\"-\") || secondPart.contains(\"Z\"))) {\n            timestamp = timestamp + \"Z\";\n        }"
  },
  {
    "id" : "0b69a72e-268c-4af7-a1c3-3237a60b932e",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575096217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8700d7ae-a35d-4fcc-a992-43526ea6b5dd",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: add documentation?",
        "createdAt" : "2021-01-25T06:46:00Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1112,1116 @@     * @throws IOException If an I/O error occurs\n     */\n    public static long tryWriteTo(TransferableChannel destChannel,\n                                  int position,\n                                  int length,"
  },
  {
    "id" : "708438d7-d06c-450a-b67e-5e83ea1039f9",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575993082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17841a91-b15c-478e-86db-0bb3809949af",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Isn't this `position()` and `limit()` modification the same as `ByteBuffer.slice`?\r\n\r\nHaving said that I find it strange that we want to set the absolute position and limit. Shouldn't this be set relative to the current position? For example think about `sourceBuffer.position() > position`.",
        "createdAt" : "2021-01-26T00:02:42Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "f41fa4f9-756a-4091-be0f-9b8bf1eeb199",
        "parentId" : "17841a91-b15c-478e-86db-0bb3809949af",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "There are many occurrences of `position`+`limit` in Kafka project, I think this is because the developers of Kafka like to handle the ByteBuffer by ourselves.",
        "createdAt" : "2021-01-26T03:57:47Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1119,1123 @@        ByteBuffer dup = sourceBuffer.duplicate();\n        dup.position(position);\n        dup.limit(position + length);\n        return destChannel.write(dup);\n    }"
  },
  {
    "id" : "dbf92399-862b-4006-8cc4-6698b71bfb4d",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575899740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1200e70-f796-406f-b2b9-9d0d8d32edda",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "How about removing the IO from this method with a signature like:\r\n```java\r\npublic static ByteBuffer relativeSlice(ByteBuffer buffer, int position, int length);\r\n```\r\nThe caller of this method can then `long written = destChannel.write(Utils.relativeSlice(buffer, position, length))`.",
        "createdAt" : "2021-01-26T00:05:13Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1115,1119 @@                                  int position,\n                                  int length,\n                                  ByteBuffer sourceBuffer) throws IOException {\n\n        ByteBuffer dup = sourceBuffer.duplicate();"
  },
  {
    "id" : "998ff123-fba1-421f-9653-e4078701c8e3",
    "prId" : 9874,
    "prUrl" : "https://github.com/apache/kafka/pull/9874#pullrequestreview-567260933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fc9227d-5105-4ab0-b151-8b5f869f3568",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The previous implementation did not implement `equals`, which caused one test to fail.",
        "createdAt" : "2021-01-13T14:15:16Z",
        "updatedAt" : "2021-01-13T18:53:57Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "24841495d245873106dc5c4a32af1fa6d2fa8bbd",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +755,759 @@     */\n    public static <K, V> Map.Entry<K, V> mkEntry(final K k, final V v) {\n        return new AbstractMap.SimpleEntry<>(k, v);\n    }\n"
  },
  {
    "id" : "ec53c7e9-677f-4620-a361-79b7b636ea64",
    "prId" : 10012,
    "prUrl" : "https://github.com/apache/kafka/pull/10012#pullrequestreview-586148242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a92220-10ac-4a11-bbc2-d69d6e1cb63e",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "How about applying this helper method to code base? ",
        "createdAt" : "2021-02-09T03:01:40Z",
        "updatedAt" : "2021-02-09T03:01:40Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "75b7da57-a8de-4ceb-b748-6032c48e3ce8",
        "parentId" : "e6a92220-10ac-4a11-bbc2-d69d6e1cb63e",
        "authorId" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "body" : "> How about applying this helper method to code base?\r\n@chia7712  OK.  I will do it on next PR.\r\n",
        "createdAt" : "2021-02-09T03:25:18Z",
        "updatedAt" : "2021-02-09T03:25:18Z",
        "lastEditedBy" : "5d341e66-2cec-4d9d-a321-9f84da136266",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2783636c310e1063641e5b24a43b64bea0d23f0",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1341,1345 @@     * @return true if the string is null, empty or whitespace only; otherwise, return false.\n     */    \n    public static boolean isBlank(String str) {\n        return str == null || str.trim().isEmpty();\n    }"
  },
  {
    "id" : "dd06e890-9534-4402-ad05-ebbd10660332",
    "prId" : 10978,
    "prUrl" : "https://github.com/apache/kafka/pull/10978#pullrequestreview-700942097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e384bf8-e4bd-4f51-90a7-2333bda66a30",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "We can return `false` on the first mismatch no need to check the rest of the arrays.",
        "createdAt" : "2021-07-07T11:45:45Z",
        "updatedAt" : "2021-07-07T11:47:41Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "cede074c-e4f6-4692-b2df-c955bcf531b9",
        "parentId" : "9e384bf8-e4bd-4f51-90a7-2333bda66a30",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "I believe the goal is to use constant-time comparison to prevent timing attacks, hence the walk through the arrays.",
        "createdAt" : "2021-07-07T11:59:31Z",
        "updatedAt" : "2021-07-07T11:59:31Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "bcec9dae-c32a-44bf-a076-abe23b53b5b0",
        "parentId" : "9e384bf8-e4bd-4f51-90a7-2333bda66a30",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "I see, my bad. What about renaming the method to make it explicit, something like `isEqualConstantTime()`?",
        "createdAt" : "2021-07-07T12:28:22Z",
        "updatedAt" : "2021-07-07T12:28:22Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7a70740a46a2134e47d1b8b56d5938e8e76c76a",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +362,366 @@            int j = i < second.length ? i : 0;\n            if (first[i] != second[j]) {\n                matches = false;\n            }\n        }"
  }
]