[
  {
    "id" : "8e04e7d3-5fb6-4f77-9509-63ad2682304f",
    "prId" : 9032,
    "prUrl" : "https://github.com/apache/kafka/pull/9032#pullrequestreview-461224397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8a5eb6-5130-432a-bc3c-8d6fda462b49",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Hmm... for consistency with `from(byte)`, shouldn't we return UNKNOWN if we don't know the name?",
        "createdAt" : "2020-08-04T22:39:49Z",
        "updatedAt" : "2020-09-02T17:54:03Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a882b1794f90bbe002f460803cda9a2beebccc",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@     *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n     */\n    public static ScramMechanism fromMechanismName(String mechanismName) {\n        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;"
  },
  {
    "id" : "bb536737-136d-431f-aee3-860da9b663bc",
    "prId" : 9645,
    "prUrl" : "https://github.com/apache/kafka/pull/9645#pullrequestreview-537053012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3bcce4c-c07e-4bda-a28a-f2f189ab369e",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@rondagostino looks like the original implementation didn't achieve the goal. I added a test that failed without this change.",
        "createdAt" : "2020-11-23T19:33:43Z",
        "updatedAt" : "2020-11-24T04:56:42Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "44ae297e-c4b2-4eab-b2bb-832caf0ff2bf",
        "parentId" : "c3bcce4c-c07e-4bda-a28a-f2f189ab369e",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Ah, you are right: `valueOf()` `Throws: IllegalArgumentException - if the specified enum type has no constant with the specified name, or the specified class object does not represent an enum type.`\r\n\r\nThanks for catching/testing for/fixing it.",
        "createdAt" : "2020-11-23T20:47:29Z",
        "updatedAt" : "2020-11-24T04:56:42Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "0080775d-37bb-471c-8e2f-3aa7b6f40231",
        "parentId" : "c3bcce4c-c07e-4bda-a28a-f2f189ab369e",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@rondagostino do we need to cherry-pick this change to the 2.7 branch? I am not sure under which context this method is used and whether it's important enough to backport.",
        "createdAt" : "2020-11-24T03:34:40Z",
        "updatedAt" : "2020-11-24T04:56:42Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d187756c7ff7f8430eb2cf10ce731f9015d2bfd7",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +57,61 @@            .filter(mechanism -> mechanism.mechanismName.equals(mechanismName))\n            .findFirst()\n            .orElse(UNKNOWN);\n    }\n"
  }
]