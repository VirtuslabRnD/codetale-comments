[
  {
    "id" : "5da374ff-0d09-4cf7-803a-fd07331318b2",
    "prId" : 7120,
    "prUrl" : "https://github.com/apache/kafka/pull/7120#pullrequestreview-268902557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04e31855-83b3-4365-adab-52cafc984cf8",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "I think we should opt out of this excepiton. In my controller changes, I haven't implemented it -- mainly because it's tricky to know when a replica is intermittently offline, as the znode and controller memory cache store only the online brokers.",
        "createdAt" : "2019-07-30T18:00:24Z",
        "updatedAt" : "2019-08-13T18:40:44Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "ed175b12-8cd2-49b6-9a57-cfa49f3125b7",
        "parentId" : "04e31855-83b3-4365-adab-52cafc984cf8",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Can you think of a scenario where we'd want to create a reassignment to a broker that isn't up?  It seems like most (all?) of the time, this would be a mistake.\r\n\r\nAnother reason why the assignment could be invalid is if the same broker ID appeared more than once (reassignment to 1, 1, 1, etc.)",
        "createdAt" : "2019-07-31T00:02:22Z",
        "updatedAt" : "2019-08-13T18:40:44Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "94dc6f16-aa68-4adc-ad6d-e47e6e9b486c",
        "parentId" : "04e31855-83b3-4365-adab-52cafc984cf8",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Come to think of it... I can't. I think it makes sense to have as long as we do the validation on API calls directly",
        "createdAt" : "2019-07-31T09:52:24Z",
        "updatedAt" : "2019-08-13T18:40:44Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09a739c9aee8248f5330619de4c98ebb2855675",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +958,962 @@     *   <li>{@link org.apache.kafka.common.errors.TimeoutException}\n     *   if the request timed out before the controller could record the new assignments.</li>\n     *   <li>{@link org.apache.kafka.common.errors.InvalidReplicaAssignmentException}\n     *   If the specified assignment was not valid.</li>\n     *   <li>{@link org.apache.kafka.common.errors.NoReassignmentInProgressException}"
  },
  {
    "id" : "19451207-6fc3-4e92-b612-e419398ec2ea",
    "prId" : 7296,
    "prUrl" : "https://github.com/apache/kafka/pull/7296#pullrequestreview-288512349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15bf8aa5-1e24-41e7-86ea-2608065147e2",
        "parentId" : null,
        "authorId" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "body" : "It's not immediately clear how listOffsets is different from listConsumerGroupOffsets. Maybe mention how they differ in their respective comments.",
        "createdAt" : "2019-09-11T21:06:36Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "tags" : [
        ]
      },
      {
        "id" : "44250388-7415-4f89-a09b-74a841080274",
        "parentId" : "15bf8aa5-1e24-41e7-86ea-2608065147e2",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "Right, I've added a longer comment. Hopefully it's clearer now, LMK",
        "createdAt" : "2019-09-16T09:42:20Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "adb3377352be6336d1586a4a160eedbcd5a9a021",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +1130,1134 @@     * @return The ListOffsetsResult.\n     */\n    ListOffsetsResult listOffsets(Map<TopicPartition, OffsetSpec> topicPartitionOffsets, ListOffsetsOptions options);\n\n    /**"
  },
  {
    "id" : "722ecd15-84ce-4d3f-a26c-831e76093282",
    "prId" : 9001,
    "prUrl" : "https://github.com/apache/kafka/pull/9001#pullrequestreview-445850773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16aa1c9b-8a9d-4c00-a4f3-28f0fe68c2b7",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "add doc",
        "createdAt" : "2020-07-09T18:05:44Z",
        "updatedAt" : "2020-10-06T22:58:39Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1c79cee2ab243d95647935d2b3e7abe371bf6ea",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1325,1329 @@     * @return          the {@link DescribeFeaturesResult} containing the result\n     */\n    DescribeFeaturesResult describeFeatures(DescribeFeaturesOptions options);\n\n    /**"
  },
  {
    "id" : "6cd817cc-b214-44cc-8bb5-3f32204ba805",
    "prId" : 9001,
    "prUrl" : "https://github.com/apache/kafka/pull/9001#pullrequestreview-455261235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19708705-14a2-4650-ab74-40ad2ea63a73",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Looking at `UpdateFinalizedFeaturesResult`, we don't have a per feature based error code returned. If this is the case, how could we know which feature is missing?",
        "createdAt" : "2020-07-16T23:02:31Z",
        "updatedAt" : "2020-10-06T22:58:39Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "e5b64387-d1fa-4461-b1e9-915deb2198c5",
        "parentId" : "19708705-14a2-4650-ab74-40ad2ea63a73",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "To your point, this information is available in the error message returned in the response.\r\n\r\nThe feature updates are atomically applied to ZK by the controller i.e it is all or none. We don't have a use case (yet) where we have to programmatically learn which feature updates are incorrect. Instead an error message with details seems sufficient to us. Please let me know how you feel about it, and if you feel that we are better off in returning per-feature-update error code. This was discussed in the [KIP-584 thread](https://lists.apache.org/thread.html/r0b04fa38fb3c4a33bc6b6419284f557266e662c9840a2f7661401f30%40%3Cdev.kafka.apache.org%3E), search for the word \"transaction\".",
        "createdAt" : "2020-07-21T02:57:43Z",
        "updatedAt" : "2020-10-06T22:58:39Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      },
      {
        "id" : "c2bbe4f3-c214-4410-9c60-35fdce84032f",
        "parentId" : "19708705-14a2-4650-ab74-40ad2ea63a73",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Done.",
        "createdAt" : "2020-07-28T08:35:14Z",
        "updatedAt" : "2020-10-06T22:58:40Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1c79cee2ab243d95647935d2b3e7abe371bf6ea",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1354,1358 @@     *   If the authenticated user didn't have alter access to the cluster.</li>\n     *   <li>{@link org.apache.kafka.common.errors.InvalidRequestException}\n     *   If the request details are invalid. e.g., a non-existing finalized feature is attempted\n     *   to be deleted or downgraded.</li>\n     *   <li>{@link org.apache.kafka.common.errors.TimeoutException}"
  },
  {
    "id" : "aecf5977-eb56-4973-9ee3-65cf190b10af",
    "prId" : 9001,
    "prUrl" : "https://github.com/apache/kafka/pull/9001#pullrequestreview-452086862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4b485fd-6c76-4905-8f3a-e96e0c3dad23",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "We should suggest in what circumstances a user may require sending the request directly to the controller, to me if there is a case where user wants stronger consistency.",
        "createdAt" : "2020-07-16T23:06:05Z",
        "updatedAt" : "2020-10-06T22:58:39Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "8d75be1d-78bc-4d92-9a96-d4b83f6ed817",
        "parentId" : "e4b485fd-6c76-4905-8f3a-e96e0c3dad23",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Done. Updated the doc now.",
        "createdAt" : "2020-07-21T02:40:49Z",
        "updatedAt" : "2020-10-06T22:58:39Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1c79cee2ab243d95647935d2b3e7abe371bf6ea",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1309,1313 @@\n    /**\n     * Describes finalized as well as supported features. By default, the request is issued to any\n     * broker. It can be optionally directed only to the controller via DescribeFeaturesOptions\n     * parameter. This is particularly useful if the user requires strongly consistent reads of"
  },
  {
    "id" : "8cdaa15e-7520-4e22-ae9e-7ed5b3a4cd07",
    "prId" : 9459,
    "prUrl" : "https://github.com/apache/kafka/pull/9459#pullrequestreview-512711404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04556eb0-df73-4d0c-9a39-bcfb68889e23",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "request \"got\" re-sent to the control",
        "createdAt" : "2020-10-20T13:30:40Z",
        "updatedAt" : "2020-10-21T07:53:48Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9d2cb31afb363f09c227f45a0449ee6827a3119",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +105,109 @@ * The client will transparently retry certain errors which are usually transient.\n * For example if the request for {@code createTopics()} get sent to a node which was not the controller\n * the metadata would be refreshed and the request re-sent to the controller.\n *\n * <h3>Broker Compatibility</h3>"
  },
  {
    "id" : "88b3b629-30ae-4787-97e8-23cc9adf1ac0",
    "prId" : 9459,
    "prUrl" : "https://github.com/apache/kafka/pull/9459#pullrequestreview-512711404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94eb7010-d543-4bce-b311-e328c5e3cb48",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "lose a curly bracket?",
        "createdAt" : "2020-10-20T13:58:49Z",
        "updatedAt" : "2020-10-21T07:53:48Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9d2cb31afb363f09c227f45a0449ee6827a3119",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +67,71 @@ * Here is a simple example of using an Admin client instance to create a new topic:\n * <pre>\n * {@code\n * Properties props = new Properties();\n * props.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");"
  }
]