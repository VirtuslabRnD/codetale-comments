[
  {
    "id" : "bcdd9710-83c9-4bfe-a51d-afb22056e050",
    "prId" : 5893,
    "prUrl" : "https://github.com/apache/kafka/pull/5893#pullrequestreview-177474956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdf19895-15d7-4666-a7bc-c12850edfef6",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Why do we need this?",
        "createdAt" : "2018-11-09T14:57:30Z",
        "updatedAt" : "2019-01-11T21:21:35Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "e47ac343-e5c6-4fd1-86b6-1dd7693da986",
        "parentId" : "bdf19895-15d7-4666-a7bc-c12850edfef6",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "The generated code uses `byte[]` to represent fields with Bytes type.  The existing Struct code uses `ByteBuffer`.  That's why this function is needed now, whereas before we just had a function to get BBs.\r\n\r\nThis is kind of a debatable issue, I guess.  ByteBuffer is not more efficient (in fact, it's less efficient) unless you start sharing memory between multiple buffers, or using off-heap buffers, etc.  I can see a few places in the message processing code where we just turn around immediately and load / unload the BB to an array, which is just pure overhead.\r\n\r\nOn the other hand, perhaps it would be easier to integrate with the existing code if we provided ByteBuffer accessors and so forth?\r\n\r\nThe \"records\" fields are probably where we should get fancy with our optimizations.\r\n\r\nPerhaps we should defer this to a follow-up discussion once we get the basic stuff in?",
        "createdAt" : "2018-11-09T19:04:12Z",
        "updatedAt" : "2019-01-11T21:21:35Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "bfd430fe-f122-44c2-a338-6363a12862ad",
        "parentId" : "bdf19895-15d7-4666-a7bc-c12850edfef6",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Yeah, I was thinking that it would be best to avoid changing things unless they were actually better. Using `byte[]` seems like going in the wrong direction even if in some cases we don't take advantage of using `ByteBuffer`.",
        "createdAt" : "2018-11-19T15:43:07Z",
        "updatedAt" : "2019-01-11T21:21:35Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "14e4e9a3-1755-4674-bce0-155119e67bf1",
        "parentId" : "bdf19895-15d7-4666-a7bc-c12850edfef6",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Perhaps we can revisit this in a follow-on JIRA?  I'm open to changing it, or even making it ByteBuffer everywhere, but for now byte[] is simpler and in some cases more efficient.",
        "createdAt" : "2018-11-22T01:03:53Z",
        "updatedAt" : "2019-01-11T21:21:35Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d8de7a5c2839b05e6d3143f9ef0e31832234abf",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +283,287 @@    }\n\n    public byte[] getByteArray(String name) {\n        Object result = get(name);\n        if (result instanceof byte[])"
  }
]