[
  {
    "id" : "4e3db0b2-6f25-4148-8198-e8615bbce49b",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-193165036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "008d0efe-2f6b-47ad-8b45-813959dbcbf8",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Just double-checking if the intent is to keep this in sync with the map above. Now the `Cluster` is only computed on construction.",
        "createdAt" : "2019-01-16T01:48:34Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "eff47d42-48a8-490d-9f7a-3cd766f227ef",
        "parentId" : "008d0efe-2f6b-47ad-8b45-813959dbcbf8",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Right, I previously had the logic to recompute the Cluster when the partition was removed, but took that out since it made the partition count inaccurate. Now we are only removing partitions when the topic subscription has changed.\r\n\r\nI'll add the Cluster refresh back.\r\n\r\nHow about I change `MetadataCache#removePartitionInfo(TopicPartition)` to `MetadataCache#removePartitionInfosForTopic(String)` so we only remove an entire topic rather than a single partition. This should avoid the situation where the partition count in Cluster is inaccurate. That would change the behavior to be like:\r\n\r\n```\r\nmetadata.setTopics(Collections.singletonList(\"topic-2\"));\r\n\r\n// now metadata for other topics is unavailable\r\nassertNull(metadata.fetch().partition(tp));\r\nassertNull(metadata.fetch().partitionCountForTopic(\"topic-1\"));\r\nassertFalse(metadata.partitionInfoIfCurrent(tp).isPresent());\r\n```",
        "createdAt" : "2019-01-16T14:35:05Z",
        "updatedAt" : "2019-01-17T15:43:00Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@    private final Map<TopicPartition, PartitionInfoAndEpoch> metadataByPartition;\n\n    private Cluster clusterInstance;\n\n    MetadataCache(String clusterId,"
  },
  {
    "id" : "387d78a8-3ace-4b56-bc1a-5fd119f1a939",
    "prId" : 6879,
    "prUrl" : "https://github.com/apache/kafka/pull/6879#pullrequestreview-245592005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0156ba5-5d44-4445-8981-592751e24d47",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "This collection includes PartitionInfo and the leader epoch.",
        "createdAt" : "2019-06-04T17:27:13Z",
        "updatedAt" : "2019-06-04T17:27:13Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "406edb7a6dd6995a75436ee58d0021afa5ff8570",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +140,144 @@                \"clusterId='\" + clusterId + '\\'' +\n                \", nodes=\" + nodes +\n                \", partitions=\" + metadataByPartition.values() +\n                \", controller=\" + controller +\n                '}';"
  },
  {
    "id" : "e112df7a-67e3-4df6-9798-f80d227fdb08",
    "prId" : 9944,
    "prUrl" : "https://github.com/apache/kafka/pull/9944#pullrequestreview-580685944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "200821b0-5d76-457b-ad6f-14927b9bcb99",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Can we end up with cases with some topics with ids and some without?",
        "createdAt" : "2021-01-28T23:00:16Z",
        "updatedAt" : "2021-05-05T20:29:40Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "6ed56f85-f71c-4fd5-8e04-aebc7b216a84",
        "parentId" : "200821b0-5d76-457b-ad6f-14927b9bcb99",
        "authorId" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "body" : "I'm thinking it may be possible if we had a response from a broker that supported topic IDs and then a response from one that did not. Of course, this should eventually get resolved, but I didn't know if it was worth it to try to avoid fetches that are unsupported in a few more cases.",
        "createdAt" : "2021-02-01T19:20:40Z",
        "updatedAt" : "2021-05-05T20:29:40Z",
        "lastEditedBy" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a47290d9a46db70b9ed3273ddafedbc8827e8da",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +174,178 @@            else\n                // Remove if the latest metadata does not have a topic ID\n                newTopicIds.remove(partition.topic());\n        }\n        for (Map.Entry<TopicPartition, PartitionMetadata> entry : metadataByPartition.entrySet()) {"
  },
  {
    "id" : "3948bd34-00dc-4595-b83b-f921d7b171ec",
    "prId" : 9944,
    "prUrl" : "https://github.com/apache/kafka/pull/9944#pullrequestreview-650729950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76dc356b-6a29-470b-833e-9f83f00a8f7d",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we add the javadoc for the new param?",
        "createdAt" : "2021-05-05T22:23:00Z",
        "updatedAt" : "2021-05-06T01:32:08Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a47290d9a46db70b9ed3273ddafedbc8827e8da",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +151,155 @@                            Set<String> addInternalTopics,\n                            Node newController,\n                            Map<String, Uuid> topicIds,\n                            BiPredicate<String, Boolean> retainTopic) {\n"
  }
]