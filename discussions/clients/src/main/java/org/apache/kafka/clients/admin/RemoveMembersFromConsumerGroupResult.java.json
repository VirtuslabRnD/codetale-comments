[
  {
    "id" : "f3e8eb84-5862-488c-818f-be86c0151fdf",
    "prId" : 8589,
    "prUrl" : "https://github.com/apache/kafka/pull/8589#pullrequestreview-416950588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c6bfc4b-afae-4654-b96f-fc2dfdb71609",
        "parentId" : null,
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "Wrap to let the failed member info available for caller like `StreamsResetter`. Only capture the first found member error like in the non `removeAll` scenario.",
        "createdAt" : "2020-05-22T14:22:23Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      }
    ],
    "commit" : "5329315b0fba569e0ffd1e3c2d8cbea002a684ba",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +57,61 @@                        Exception exception = entry.getValue().exception();\n                        if (exception != null) {\n                            Throwable ex = new KafkaException(\"Encounter exception when trying to remove: \"\n                                    + entry.getKey(), exception);\n                            result.completeExceptionally(ex);"
  },
  {
    "id" : "53766fb7-e077-4c4e-9ac5-3c2c3546d06a",
    "prId" : 8589,
    "prUrl" : "https://github.com/apache/kafka/pull/8589#pullrequestreview-417240981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49b24282-995f-41d9-88fc-1856a4d6c7be",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Let's put the exception in the cause so that we could verify the cause in `KafkaAdminClientTest`, as:\r\n```\r\nif (exception != null) {\r\n  result.completeExceptionally(new KafkaException(\r\n \"Encounter exception when trying to remove: \" + entry.getKey(), exception));\r\n  return;\r\n}\r\n```",
        "createdAt" : "2020-05-22T16:11:06Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "94f8e7a6-100e-46a7-9ed5-5719cd9a2a51",
        "parentId" : "49b24282-995f-41d9-88fc-1856a4d6c7be",
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "Cool, updated",
        "createdAt" : "2020-05-23T01:57:09Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      }
    ],
    "commit" : "5329315b0fba569e0ffd1e3c2d8cbea002a684ba",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +57,61 @@                        Exception exception = entry.getValue().exception();\n                        if (exception != null) {\n                            Throwable ex = new KafkaException(\"Encounter exception when trying to remove: \"\n                                    + entry.getKey(), exception);\n                            result.completeExceptionally(ex);"
  },
  {
    "id" : "ea31041d-ad4f-488b-a18c-2a4fb233217a",
    "prId" : 8589,
    "prUrl" : "https://github.com/apache/kafka/pull/8589#pullrequestreview-419522340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure why the `removeAll()` case needs to be handled differently? Can you elaborate?",
        "createdAt" : "2020-05-27T03:12:09Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "75fae569-4598-47c5-9b4e-81e11d760686",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "Because in non `removeAll` scenario, we have put the members to be deleted in the `RemoveMembersFromConsumerGroupResult#memberInfos`, while in the `removeAll` scenario, we don't do so(members to be deleted are decided in the private method: `KafkaAdminClient#getMembersFromGroup` of `KafkaAdminClient`). ",
        "createdAt" : "2020-05-27T17:02:53Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      },
      {
        "id" : "404072ea-bcf2-4290-a3a6-2d8995cfd323",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Well, while `memberInfo` is empty for the `removeAll` case, I am still wondering if the code for `removeAll` would not work for the other case, too?",
        "createdAt" : "2020-05-27T17:45:07Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "d2538854-4b92-4a25-9cca-3a9f76c94757",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "I'm not sure I understand the question, could you elaborate more?",
        "createdAt" : "2020-05-27T18:10:45Z",
        "updatedAt" : "2020-05-27T18:10:45Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      },
      {
        "id" : "b1cf2d8a-d6f0-4f16-90cf-1e00656099c5",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Can we just do for both cases?\r\n```\r\nfor (Map.Entry<MemberIdentity, Errors> entry: memberErrors.entrySet()) {\r\n    Exception exception = entry.getValue().exception();\r\n    if (exception != null) {\r\n        Throwable ex = new KafkaException(\"Encounter exception when trying to remove: \"\r\n             + entry.getKey(), exception);\r\n        result.completeExceptionally(ex);\r\n        return;\r\n    }\r\n}\r\n```\r\n\r\nThe \"issue\" with using `memberInfos` is, that for the removeAll() case it's empty and we cannot use it. However, `memberErrors` should have an entry for all members for both cases?",
        "createdAt" : "2020-05-27T18:26:19Z",
        "updatedAt" : "2020-05-27T18:26:19Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "86b4e406-75a1-4101-b421-114d872e1643",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "I'm afraid not because, in the non `removeAll` scenario, caller specify the members(`memberInfos`) to be deleted, and according to `maybeCompleteExceptionally`, the `memberInfos` is used because it might sometimes happen that certain member in `memberInfos` cannot be found in `memberErrors `, that's the reason I didn't use the `removeAll` logic for all cases.",
        "createdAt" : "2020-05-27T18:58:10Z",
        "updatedAt" : "2020-05-27T18:58:11Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      },
      {
        "id" : "26851116-0333-44c8-bc72-58d026ff3a2e",
        "parentId" : "3c825730-f369-4e88-b9a4-e208dca7f73a",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Thanks for explaining!",
        "createdAt" : "2020-05-27T19:00:58Z",
        "updatedAt" : "2020-05-27T19:00:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5329315b0fba569e0ffd1e3c2d8cbea002a684ba",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +53,57 @@                result.completeExceptionally(throwable);\n            } else {\n                if (removeAll()) {\n                    for (Map.Entry<MemberIdentity, Errors> entry: memberErrors.entrySet()) {\n                        Exception exception = entry.getValue().exception();"
  },
  {
    "id" : "2aaf021a-969e-4dee-9956-70835102f803",
    "prId" : 8589,
    "prUrl" : "https://github.com/apache/kafka/pull/8589#pullrequestreview-419469443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0498eac3-4ffe-4980-b171-015c04b008ba",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why that? I understand that we expect that users don't know the memberId if the so a \"remove all\"; however, I don't see why we need to disallow this call? Can you elaborate?",
        "createdAt" : "2020-05-27T03:13:55Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "f26d7744-a326-4bcd-8e9d-ad3debde33cc",
        "parentId" : "0498eac3-4ffe-4980-b171-015c04b008ba",
        "authorId" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "body" : "Since in the `removeAll` scenario, we don't save the members to be deleted in `RemoveMembersFromConsumerGroupResult`,  so I think calling `memberResult` doesn't seem applicative.",
        "createdAt" : "2020-05-27T17:08:53Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "410e5da8-f561-43d9-a4a1-a8ffb52d0269",
        "tags" : [
        ]
      },
      {
        "id" : "6bf3f896-dce7-47e3-aa60-2dfc92d77a47",
        "parentId" : "0498eac3-4ffe-4980-b171-015c04b008ba",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I see. Makes sense.",
        "createdAt" : "2020-05-27T17:48:14Z",
        "updatedAt" : "2020-05-27T18:01:25Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5329315b0fba569e0ffd1e3c2d8cbea002a684ba",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +81,85 @@    public KafkaFuture<Void> memberResult(MemberToRemove member) {\n        if (removeAll()) {\n            throw new IllegalArgumentException(\"The method: memberResult is not applicable in 'removeAll' mode\");\n        }\n        if (!memberInfos.contains(member)) {"
  }
]