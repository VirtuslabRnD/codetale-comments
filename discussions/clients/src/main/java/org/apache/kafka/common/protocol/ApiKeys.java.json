[
  {
    "id" : "b59d2817-6334-4e60-b79c-42e4be1ff091",
    "prId" : 6686,
    "prUrl" : "https://github.com/apache/kafka/pull/6686#pullrequestreview-238625460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8f6a973-067d-46e8-b3be-e211b79c2f5f",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Is this safe? Can we rename APIs without side effects?",
        "createdAt" : "2019-05-13T21:08:50Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "f48de4dc-752c-4c4b-8a44-cdf821df2ade",
        "parentId" : "b8f6a973-067d-46e8-b3be-e211b79c2f5f",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "The API name is not technically a public interface. We did a similar renaming from GroupCoordinator request to FindCoordinator. That said, this probably will break some downstream systems that were using internals anyway. I suspect our leeway to do stuff like this gets smaller with the schema definitions represented in JSON. Still, I think we should do it.",
        "createdAt" : "2019-05-16T20:23:20Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "ea8456fe-d199-4a68-80b2-7e3bb6aef5aa",
        "parentId" : "b8f6a973-067d-46e8-b3be-e211b79c2f5f",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Yes. This in internal to the broker. The protocol only uses the code. E.g. 43. Can you confirm @hachikuji  or @cmccabe ?",
        "createdAt" : "2019-05-16T20:38:43Z",
        "updatedAt" : "2019-05-29T01:18:29Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d53f267c91cc93478d817214f47a6fd2ec20691",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +191,195 @@    DESCRIBE_DELEGATION_TOKEN(41, \"DescribeDelegationToken\", DescribeDelegationTokenRequest.schemaVersions(), DescribeDelegationTokenResponse.schemaVersions()),\n    DELETE_GROUPS(42, \"DeleteGroups\", DeleteGroupsRequest.schemaVersions(), DeleteGroupsResponse.schemaVersions()),\n    ELECT_LEADERS(43, \"ElectLeaders\", ElectLeadersRequestData.SCHEMAS,\n            ElectLeadersResponseData.SCHEMAS),\n    INCREMENTAL_ALTER_CONFIGS(44, \"IncrementalAlterConfigs\", IncrementalAlterConfigsRequestData.SCHEMAS,"
  },
  {
    "id" : "c49748c1-d2e2-4db6-8f7c-177397d43772",
    "prId" : 7372,
    "prUrl" : "https://github.com/apache/kafka/pull/7372#pullrequestreview-292012013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46af9d0f-be62-4e4a-ae5b-80b1df7cd475",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "nit: I would rather overload the method to handle this case rather like we do for the parsing of `ApiVersions` here: https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java#L154",
        "createdAt" : "2019-09-20T08:53:22Z",
        "updatedAt" : "2019-09-25T15:30:13Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "9e6f207c-eb2e-4181-8fe5-e072a664c5b9",
        "parentId" : "46af9d0f-be62-4e4a-ae5b-80b1df7cd475",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Why do we need this check? There seem to be a comment here that goes into some detail: https://github.com/apache/kafka/pull/7372/files#diff-532a8e555895b9ac3028f30a263b1a57L163-L165. Even after reading that comment it is not clear to me why we are doing this. Can we add a comment here that explains this?",
        "createdAt" : "2019-09-23T18:00:51Z",
        "updatedAt" : "2019-09-25T15:30:13Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "be0dbae7-dbf2-411d-bf6b-057d8b8da15d",
        "parentId" : "46af9d0f-be62-4e4a-ae5b-80b1df7cd475",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "@jsancio : The bigger context here is that KIP-482 (and KIP-511) add a new header version, v2.  The new header version adds optional (tagged) fields.  This PR lays the groundwork for that, although this PR only has v0 and v1.\r\n\r\n@dajac: In a follow-on PR, we will be calling into some automatically generated code to determine what the header version is.  This is part of the header version bump described in KIP-482.  Therefore, creating a subclass of `ApiKeys` is not a viable approach here.",
        "createdAt" : "2019-09-23T19:47:31Z",
        "updatedAt" : "2019-09-25T15:30:13Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "be5a86abde45a85189881e8ebe6995964d91302b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +337,341 @@\n    public short headerVersion(short apiVersion) {\n        if ((this == CONTROLLED_SHUTDOWN) && (apiVersion == 0)) {\n            return 0;\n        } else {"
  },
  {
    "id" : "167391d5-bbce-4c1e-84dc-aa4de62a2494",
    "prId" : 8326,
    "prUrl" : "https://github.com/apache/kafka/pull/8326#pullrequestreview-391783169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "100b7b0f-965d-4028-a93b-68650e07dfd1",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Fix the alignment",
        "createdAt" : "2020-04-11T17:02:50Z",
        "updatedAt" : "2020-04-23T04:09:40Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "32980c7e32353d195081f8d027dd71b09a6fbfc7",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +197,201 @@    CREATE_PARTITIONS(37, \"CreatePartitions\", CreatePartitionsRequestData.SCHEMAS,\n            CreatePartitionsResponseData.SCHEMAS),\n    CREATE_DELEGATION_TOKEN(38, \"CreateDelegationToken\", CreateDelegationTokenRequestData.SCHEMAS,\n            CreateDelegationTokenResponseData.SCHEMAS),\n    RENEW_DELEGATION_TOKEN(39, \"RenewDelegationToken\", RenewDelegationTokenRequestData.SCHEMAS,"
  },
  {
    "id" : "2c7591c3-dac8-4595-95a8-0380292a2d40",
    "prId" : 9748,
    "prUrl" : "https://github.com/apache/kafka/pull/9748#pullrequestreview-553277997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1d082c4-9f2d-4368-b255-1f747016223e",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Is 'short' type more suitable?",
        "createdAt" : "2020-12-16T01:15:07Z",
        "updatedAt" : "2020-12-16T06:14:49Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "42e05c62-0bb6-4759-b2c9-b1abda8d8aea",
        "parentId" : "c1d082c4-9f2d-4368-b255-1f747016223e",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "If the above comment is valid, it can be addressed in separate PR :)",
        "createdAt" : "2020-12-16T01:16:10Z",
        "updatedAt" : "2020-12-16T06:14:49Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "036e85ec-27c0-4c47-8395-1f088d6542ed",
        "parentId" : "c1d082c4-9f2d-4368-b255-1f747016223e",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We used `int` here because `short` in Java is a second class citizen and casting is required in some cases. If we decide to change this, a separate PR (as you suggested) would be better.",
        "createdAt" : "2020-12-16T01:46:07Z",
        "updatedAt" : "2020-12-16T06:14:49Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6e0f72bfb6d16817228132c9825e4f24afa1bd3",
    "line" : 412,
    "diffHunk" : "@@ -1,1 +170,174 @@    }\n\n    public static ApiKeys forId(int id) {\n        ApiKeys apiKey = ID_TO_TYPE.get(id);\n        if (apiKey == null) {"
  },
  {
    "id" : "3317f48a-6876-4bfe-a94e-ce8c819ad422",
    "prId" : 9934,
    "prUrl" : "https://github.com/apache/kafka/pull/9934#pullrequestreview-573659082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1427ad2f-07b0-400c-93d2-581f3cf22dde",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we get a JIRA to track the work for refactoring these boolean flags into static collections of api keys? To me it is not easy to use constructor correctly when there are multiple of them. ",
        "createdAt" : "2021-01-21T17:07:21Z",
        "updatedAt" : "2021-01-21T19:45:26Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "4db96f78-575e-4945-8ae3-7f7444a2fdb4",
        "parentId" : "1427ad2f-07b0-400c-93d2-581f3cf22dde",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Filed this JIRA: https://issues.apache.org/jira/browse/KAFKA-12232.",
        "createdAt" : "2021-01-21T19:20:25Z",
        "updatedAt" : "2021-01-21T19:45:26Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "50fa8e955b3f146b624224917374eaf06575a71b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +118,122 @@\n    /** indicates whether this is an API which is only exposed by the KIP-500 controller **/\n    public final boolean isControllerOnlyApi;\n\n    /** indicates whether the API is enabled for forwarding **/"
  },
  {
    "id" : "5a2fd400-1e90-4772-8209-caa9198ef735",
    "prId" : 9996,
    "prUrl" : "https://github.com/apache/kafka/pull/9996#pullrequestreview-580915961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad8df5ec-0031-40a0-82f1-e68ed4a85094",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "This is not a controller-only API.",
        "createdAt" : "2021-01-29T21:37:45Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "3fc5bdd3-a297-4aca-a99f-82ad9947f247",
        "parentId" : "ad8df5ec-0031-40a0-82f1-e68ed4a85094",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Hmm. Isn't decommissioning a broker something only a controller can do? Or maybe I am missing something here.",
        "createdAt" : "2021-02-01T18:58:54Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      },
      {
        "id" : "1044886e-8b7e-418b-86f2-c12b2d44b87e",
        "parentId" : "ad8df5ec-0031-40a0-82f1-e68ed4a85094",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "You are right that only the controller can properly handle it, but the broker needs to be able to forward it, so it must also expose it.",
        "createdAt" : "2021-02-01T22:56:35Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "8943d047-739b-4829-9864-a3ceb015a06d",
        "parentId" : "ad8df5ec-0031-40a0-82f1-e68ed4a85094",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Ah. Right. I'm curious, then, what would happen if we send a decommission request through the broker being decommissioned? Wouldn't the broker shutdown (as a result of being unregistered) before responding to the AdminClient call?",
        "createdAt" : "2021-02-02T00:57:32Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      },
      {
        "id" : "32c083b6-3e36-481a-9d6b-16345d0a9c8e",
        "parentId" : "ad8df5ec-0031-40a0-82f1-e68ed4a85094",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I am not sure. It seems like the decommissioned broker should wait around long enough to give the controller a chance to move replicas elsewhere.",
        "createdAt" : "2021-02-02T01:37:04Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae6aaf1fe59520e516b8115f16c0cdaf4fad3660",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +106,110 @@    // Once we have the controller integration for supporting broker decommissioning, we will support forwarding from the broker\n    // This is a short-term workaround to avoid advertizing the API on Zookeeper-based brokers\n    DECOMMISSION_BROKER(ApiMessageType.DECOMMISSION_BROKER, false, RecordBatch.MAGIC_VALUE_V0, true, true);\n\n    // The generator ensures every `ApiMessageType` has a unique id"
  },
  {
    "id" : "429dbe78-696d-4219-a4da-1ef6bbaae7a5",
    "prId" : 9996,
    "prUrl" : "https://github.com/apache/kafka/pull/9996#pullrequestreview-581825240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86b180d7-35a0-47f7-b1a8-504fdc2a78ef",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Maybe emphasize that we have temporarily marked this as \"controller-only\" as a short-term workaround to avoid exposing it on zk-based brokers.",
        "createdAt" : "2021-02-02T22:11:26Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "7ce672b9-a57b-4926-b0e2-5d12d1d2d7db",
        "parentId" : "86b180d7-35a0-47f7-b1a8-504fdc2a78ef",
        "authorId" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "body" : "Ack.",
        "createdAt" : "2021-02-02T22:21:28Z",
        "updatedAt" : "2021-02-03T01:38:17Z",
        "lastEditedBy" : "19ee7e44-7168-44d6-980b-a3b07f2ad76a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae6aaf1fe59520e516b8115f16c0cdaf4fad3660",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +104,108 @@    BROKER_HEARTBEAT(ApiMessageType.BROKER_HEARTBEAT, true, RecordBatch.MAGIC_VALUE_V0, false, true),\n\n    // Once we have the controller integration for supporting broker decommissioning, we will support forwarding from the broker\n    // This is a short-term workaround to avoid advertizing the API on Zookeeper-based brokers\n    DECOMMISSION_BROKER(ApiMessageType.DECOMMISSION_BROKER, false, RecordBatch.MAGIC_VALUE_V0, true, true);"
  },
  {
    "id" : "77c80258-a043-462c-9271-ae749c64b500",
    "prId" : 10078,
    "prUrl" : "https://github.com/apache/kafka/pull/10078#pullrequestreview-602881972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17753f7c-3772-44cd-b454-f06999c62a81",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "This is not a critical bug as the method `allVersions` is used by testing only.",
        "createdAt" : "2021-03-03T13:18:38Z",
        "updatedAt" : "2021-03-04T13:04:11Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047e6634d0eb09796f26938a2d83e41b14001f5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +202,206 @@    public List<Short> allVersions() {\n        List<Short> versions = new ArrayList<>(latestVersion() - oldestVersion() + 1);\n        for (short version = oldestVersion(); version <= latestVersion(); version++) {\n            versions.add(version);\n        }"
  }
]