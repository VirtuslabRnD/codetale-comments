[
  {
    "id" : "21632af2-f1fd-40dd-8c22-dd7c77033bfc",
    "prId" : 10552,
    "prUrl" : "https://github.com/apache/kafka/pull/10552#pullrequestreview-638211539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0607c86d-999e-4141-8cf1-6228874f86bd",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "subscribe to only 1 topic for the last consumer",
        "createdAt" : "2021-04-17T08:57:21Z",
        "updatedAt" : "2021-05-11T09:05:03Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "df0023ec1227d279ff35a09d91b4e4ffdd4af194",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +573,577 @@        for (int i = 0; i < consumerCount; i++) {\n            if (i == consumerCount - 1) {\n                subscriptions.put(getConsumerName(i, consumerCount), new Subscription(topics.subList(0, 1)));\n            } else {\n                subscriptions.put(getConsumerName(i, consumerCount), new Subscription(topics));"
  },
  {
    "id" : "7a4f6724-e92e-4333-912d-59b80e3e8fca",
    "prId" : 10552,
    "prUrl" : "https://github.com/apache/kafka/pull/10552#pullrequestreview-666731907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af28693d-f124-4b53-aa5b-6b4d5d40597d",
        "parentId" : null,
        "authorId" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "body" : "Would it be worthwhile to add some verification after the `assign` calls in this test?",
        "createdAt" : "2021-05-24T04:19:05Z",
        "updatedAt" : "2021-05-24T04:21:35Z",
        "lastEditedBy" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "tags" : [
        ]
      },
      {
        "id" : "5083ff17-d1d5-40ec-8904-f57c36da0adc",
        "parentId" : "af28693d-f124-4b53-aa5b-6b4d5d40597d",
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "It can, but this test: `testLargeAssignmentAndGroupWithNonEqualSubscription` is mainly to test **performance**, not functionality. We should cover the function testing in other tests. It's the same purpose for the above one: `testLargeAssignmentAndGroupWithUniformSubscription`. ",
        "createdAt" : "2021-05-24T13:24:07Z",
        "updatedAt" : "2021-05-24T13:24:08Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "df0023ec1227d279ff35a09d91b4e4ffdd4af194",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +580,584 @@\n        Map<String, List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic, subscriptions);\n\n        for (int i = 1; i < consumerCount; i++) {\n            String consumer = getConsumerName(i, consumerCount);"
  },
  {
    "id" : "a3f2ca32-dc2b-427a-b6ed-efe849eed3ed",
    "prId" : 10985,
    "prUrl" : "https://github.com/apache/kafka/pull/10985#pullrequestreview-704561582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e01cab1c-eb44-4c4b-8fdb-c8342de05b6a",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Saw this fail sometimes when running locally. This PR definitely should not have significantly affected the performance of this test in any way, since the only substantial changes are in the constrained assignment algorithm, while this test targets the general case of unequal subscriptions. It's not too surprising to me that this would be running up against the time limit anyways, since we've known that the general assignment algorithm is complicated and doesn't scale too well.So I felt it was reasonable to give it a bit more time. \r\n\r\nAlternatively we could just scale back a bit with the number of partitions and/or consumers. WDYT @showuon?",
        "createdAt" : "2021-07-07T10:19:23Z",
        "updatedAt" : "2021-07-07T10:19:24Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "f640b417-fb8d-4fc7-b294-b052cd63d827",
        "parentId" : "e01cab1c-eb44-4c4b-8fdb-c8342de05b6a",
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "Increase the timeout makes sense to me.",
        "createdAt" : "2021-07-07T12:16:07Z",
        "updatedAt" : "2021-07-07T12:16:07Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      },
      {
        "id" : "75c83e08-01cf-4ce9-9496-83e19f5af6e3",
        "parentId" : "e01cab1c-eb44-4c4b-8fdb-c8342de05b6a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "+1",
        "createdAt" : "2021-07-12T22:19:23Z",
        "updatedAt" : "2021-07-12T22:19:36Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e269e26c50d6e0aa61e9931c9cf3e160754e56a6",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +558,562 @@    }\n\n    @Timeout(60)\n    @Test\n    public void testLargeAssignmentAndGroupWithNonEqualSubscription() {"
  }
]