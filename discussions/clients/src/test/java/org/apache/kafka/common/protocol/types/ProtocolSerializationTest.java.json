[
  {
    "id" : "762104f9-1055-4302-bc36-b19b737ba45c",
    "prId" : 6340,
    "prUrl" : "https://github.com/apache/kafka/pull/6340#pullrequestreview-208851428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2510718b-dc6f-4c68-a3c9-ec25612fc8b0",
        "parentId" : null,
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "FYI: this is already supported and the test is added here for completeness. The code change does not affect this case. ",
        "createdAt" : "2019-02-28T01:20:43Z",
        "updatedAt" : "2019-04-05T23:13:26Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7934f86e0d4b277284cc4b1dde81c48f37d6299c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +282,286 @@\n    @Test\n    public void testReadIgnoringExtraDataAtTheEnd() {\n        Schema oldSchema = new Schema(new Field(\"field1\", Type.NULLABLE_STRING), new Field(\"field2\", Type.NULLABLE_STRING));\n        Schema newSchema = new Schema(new Field(\"field1\", Type.NULLABLE_STRING));"
  },
  {
    "id" : "4e9abdc9-470e-4fa8-93fc-b14c164c234a",
    "prId" : 8012,
    "prUrl" : "https://github.com/apache/kafka/pull/8012#pullrequestreview-350292053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8e629d4-5ecc-46e9-8195-e6ac86f640b0",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Do we want to have a simple positive value like `2.5`?",
        "createdAt" : "2020-01-29T05:45:37Z",
        "updatedAt" : "2020-01-29T17:31:01Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8551b647-a3f7-42a0-810d-452ffb99249f",
        "parentId" : "c8e629d4-5ecc-46e9-8195-e6ac86f640b0",
        "authorId" : "98b12f1a-2624-4608-85a1-ec49503fd316",
        "body" : "Done.",
        "createdAt" : "2020-01-29T17:31:32Z",
        "updatedAt" : "2020-01-29T17:31:32Z",
        "lastEditedBy" : "98b12f1a-2624-4608-85a1-ec49503fd316",
        "tags" : [
        ]
      }
    ],
    "commit" : "533704fe00e87d003c51f50e1a7b48ba98e5d6dd",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +99,103 @@        check(Type.FLOAT64, Double.NaN, \"FLOAT64\");\n        check(Type.FLOAT64, Double.NEGATIVE_INFINITY, \"FLOAT64\");\n        check(Type.FLOAT64, Double.POSITIVE_INFINITY, \"FLOAT64\");\n        check(Type.STRING, \"\", \"STRING\");\n        check(Type.STRING, \"hello\", \"STRING\");"
  }
]