[
  {
    "id" : "485cf621-5eb8-4cd4-8f27-4003b79fe1a8",
    "prId" : 7952,
    "prUrl" : "https://github.com/apache/kafka/pull/7952#pullrequestreview-344375099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fdc9ef4-2b5e-4a12-a6d2-a0e394296c18",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Test changes in this class are only for new API coverage.",
        "createdAt" : "2020-01-17T05:51:59Z",
        "updatedAt" : "2020-01-22T18:43:33Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e81e0daaec396ec5be7cc3d3cc2adae42f242e95",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +17,21 @@package org.apache.kafka.clients.producer;\n\nimport org.apache.kafka.clients.consumer.ConsumerGroupMetadata;\nimport org.apache.kafka.clients.consumer.OffsetAndMetadata;\nimport org.apache.kafka.clients.producer.internals.DefaultPartitioner;"
  },
  {
    "id" : "6b176abf-b50f-4c79-b4f0-6dc1368648f9",
    "prId" : 7952,
    "prUrl" : "https://github.com/apache/kafka/pull/7952#pullrequestreview-345035834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fde5b4e-ee15-4f21-a063-b4d40637fc6d",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Seems this test case would be more interesting if we tried to commit a separate set of offsets before aborting",
        "createdAt" : "2020-01-19T19:04:14Z",
        "updatedAt" : "2020-01-22T18:43:33Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9d4662a0-149c-423b-8a13-93f2bff1e297",
        "parentId" : "0fde5b4e-ee15-4f21-a063-b4d40637fc6d",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "ack",
        "createdAt" : "2020-01-19T23:38:11Z",
        "updatedAt" : "2020-01-22T18:43:33Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e81e0daaec396ec5be7cc3d3cc2adae42f242e95",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +661,665 @@        };\n        producer.sendOffsetsToTransaction(groupCommit, new ConsumerGroupMetadata(group2));\n        producer.abortTransaction();\n\n        Map<String, Map<TopicPartition, OffsetAndMetadata>> expectedResult = new HashMap<>();"
  },
  {
    "id" : "8c92fefa-8fe4-4809-aeaf-4275d07110b1",
    "prId" : 9309,
    "prUrl" : "https://github.com/apache/kafka/pull/9309#pullrequestreview-500017230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f94df97-4278-40f5-98d5-94836261673c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We should avoid to suppress warning. Seems, you need to add generics to `ProducerRecord` in L774 to fix it?",
        "createdAt" : "2020-09-30T18:22:05Z",
        "updatedAt" : "2020-09-30T22:33:41Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2708cce5-3dcb-4876-9171-c8ae17ffe774",
        "parentId" : "0f94df97-4278-40f5-98d5-94836261673c",
        "authorId" : "3c4b0468-3e02-406c-b9a2-574b2d78ebc3",
        "body" : "Thanks a lot for your review @mjsax \r\nIf I add generics, bounded type parameters will make compilation fail, as types are checked and incompatible.\r\nIn fact, the purpose of this enhancement is that MockProducer throws the exception when types are not restricted, wdyt?",
        "createdAt" : "2020-09-30T22:39:23Z",
        "updatedAt" : "2020-09-30T22:39:23Z",
        "lastEditedBy" : "3c4b0468-3e02-406c-b9a2-574b2d78ebc3",
        "tags" : [
        ]
      },
      {
        "id" : "3b2d3ee8-b26b-4643-aa5b-085f7c84d8e6",
        "parentId" : "0f94df97-4278-40f5-98d5-94836261673c",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Oh, I see. We actually want to pass in an incorrect key-type to get the ClassCastException. So you are right, for this case we cannot specify the generics. Keeping the code as-is and to suppress the warning is fine than. Totally missed this. Thanks for clarifying.",
        "createdAt" : "2020-10-01T05:27:32Z",
        "updatedAt" : "2020-10-01T05:27:32Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bcdb44e764ebe93af78ad8910b549915b9fdd97",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +770,774 @@    \n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void shouldThrowClassCastException() {\n        try (MockProducer<Integer, String> customProducer = new MockProducer<>(true, new IntegerSerializer(), new StringSerializer());) {"
  }
]