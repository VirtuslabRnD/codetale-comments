[
  {
    "id" : "0d3fcd67-4054-4d78-8495-c9a89dcb96bd",
    "prId" : 4956,
    "prUrl" : "https://github.com/apache/kafka/pull/4956#pullrequestreview-125876357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62eac54d-34a1-44c8-922c-1b4c4fedbc01",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "What happens if the value is set to `null` instead of empty string?",
        "createdAt" : "2018-05-21T17:51:43Z",
        "updatedAt" : "2018-06-05T08:53:36Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "a191a2f2-332d-4936-882c-1fbc06e69a75",
        "parentId" : "62eac54d-34a1-44c8-922c-1b4c4fedbc01",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Empty string and `null` are handled in the same way, updated test to verify that as well.",
        "createdAt" : "2018-06-05T08:55:21Z",
        "updatedAt" : "2018-06-05T08:55:21Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f31d21c17e690eeb44631100cb82f9cd284b2e7",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +254,258 @@        // Disable endpoint validation, connection should succeed\n        String node = \"1\";\n        sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG, \"\");\n        createSelector(sslClientConfigs);\n        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);"
  },
  {
    "id" : "5fb61f8a-13f0-49da-aab8-c7ac86c3cca1",
    "prId" : 5371,
    "prUrl" : "https://github.com/apache/kafka/pull/5371#pullrequestreview-138262455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adebd5f2-a7da-46f2-bffa-777834b523b6",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "One question: how would the test fail if the disconnection was treated as an authentication failure?",
        "createdAt" : "2018-07-18T07:22:21Z",
        "updatedAt" : "2018-07-18T08:33:12Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "5f5c2ba3-3fe1-4ab4-858c-26d116f444d5",
        "parentId" : "adebd5f2-a7da-46f2-bffa-777834b523b6",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "```\r\nassertTrue(\"Unexpected channel state \" + state, state == ChannelState.State.AUTHENTICATE || state == ChannelState.State.READY)\r\n```\r\nAll the tests check the state when the channel is disconnected. `state` will be `AUTHENTICATION_FAILED` if the disconnection is treated as an authentication failure.\r\n",
        "createdAt" : "2018-07-18T08:26:58Z",
        "updatedAt" : "2018-07-18T08:33:12Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "9d3f8645-30ff-4caf-a9b3-37dce001877c",
        "parentId" : "adebd5f2-a7da-46f2-bffa-777834b523b6",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Thanks, makes sense.",
        "createdAt" : "2018-07-18T13:48:30Z",
        "updatedAt" : "2018-07-18T13:48:30Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "deac2b2a853a92b7342edc5a9387bc5216eef18c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +725,729 @@    /**\n     * Tests that if the remote end closes connection ungracefully during SSL handshake while writing data,\n     * the disconnection is not treated as an authentication failure.\n     */\n    @Test"
  },
  {
    "id" : "38055dcf-1226-4dc4-8269-4e55f7ec406e",
    "prId" : 6377,
    "prUrl" : "https://github.com/apache/kafka/pull/6377#pullrequestreview-211240515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f127df2-b143-42bf-b86f-a6c61e8dfa16",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Should `waitForChannelReady` do this too?",
        "createdAt" : "2019-03-06T11:18:53Z",
        "updatedAt" : "2019-03-06T13:52:34Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "690c4e7b-5c71-4432-b4d4-4795707f3ded",
        "parentId" : "2f127df2-b143-42bf-b86f-a6c61e8dfa16",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@ijuma Thanks for the review. Client should be able to use the client-side channel without waiting for server-side channel state. So I think it would be better not to do this in other tests. I looked through all the tests accessing `server.selector()` and this was the only one where we are doing something on the server-side channel from a test (`muteAll` here).",
        "createdAt" : "2019-03-06T13:11:39Z",
        "updatedAt" : "2019-03-06T13:52:34Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "92d0c68c-86f5-4192-bdd9-c2f754346703",
        "parentId" : "2f127df2-b143-42bf-b86f-a6c61e8dfa16",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Makes sense. Can we add a comment to that effect so that we understand why this is special?",
        "createdAt" : "2019-03-06T13:13:20Z",
        "updatedAt" : "2019-03-06T13:52:34Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "3dcd5044-29e5-46e9-beb1-2f5069c00925",
        "parentId" : "2f127df2-b143-42bf-b86f-a6c61e8dfa16",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Added comment.",
        "createdAt" : "2019-03-06T13:53:07Z",
        "updatedAt" : "2019-03-06T13:53:08Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e471d086c144abafc340e8b16bf02e30112efdf",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +865,869 @@        // need to wait for the server-side channel to be ready as well.\n        TestUtils.waitForCondition(() -> server.selector().channels().stream().allMatch(KafkaChannel::ready),\n                \"Channel not ready\");\n\n        final ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();"
  },
  {
    "id" : "3a902bd5-45da-4d59-900f-19a445568138",
    "prId" : 7998,
    "prUrl" : "https://github.com/apache/kafka/pull/7998#pullrequestreview-349389753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea2b766b-6327-4f8e-98af-de63dd3a8fee",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Not sure if these configs actually come from the default configs. I think these may be explicitly configured in the tests.",
        "createdAt" : "2020-01-28T12:25:18Z",
        "updatedAt" : "2020-01-28T15:50:13Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "7d63171a-1f85-44f5-836f-8f0939722048",
        "parentId" : "ea2b766b-6327-4f8e-98af-de63dd3a8fee",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "This comes from `TestSslUtils#DEFAULT_TLS_PROTOCOL_FOR_TESTS` - chaned it to\r\n\r\n```\r\n    public static final String DEFAULT_TLS_PROTOCOL_FOR_TESTS = SslConfigs.DEFAULT_SSL_PROTOCOL;\r\n```",
        "createdAt" : "2020-01-28T13:54:54Z",
        "updatedAt" : "2020-01-28T15:50:13Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c2051bcd136dd65ae7eb0ce3ef5f25187d746e3",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +561,565 @@\n        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n\n        server = createEchoServer(SecurityProtocol.SSL);"
  },
  {
    "id" : "46b88412-fff5-49d2-8b15-918d4d126013",
    "prId" : 7998,
    "prUrl" : "https://github.com/apache/kafka/pull/7998#pullrequestreview-349485494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3139b1b0-6e55-4f4a-9b88-d0547144459e",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Sorry, missed this earlier: We are creating a new `selector` in `checkAuthentiationFailed`, so we should ensure that the previous selector is closed. You could call `selector.close()` just before calling `checkAuthenticationFailed` here and also a couple of lines below.",
        "createdAt" : "2020-01-28T15:45:03Z",
        "updatedAt" : "2020-01-28T15:50:13Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "4ff04d01-f37c-49ac-9126-b359a0539bb7",
        "parentId" : "3139b1b0-6e55-4f4a-9b88-d0547144459e",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "Fixed.",
        "createdAt" : "2020-01-28T15:50:21Z",
        "updatedAt" : "2020-01-28T15:50:22Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c2051bcd136dd65ae7eb0ce3ef5f25187d746e3",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +573,577 @@        selector.close();\n\n        checkAuthentiationFailed(\"1\", \"TLSv1.1\");\n        server.verifyAuthenticationMetrics(1, 1);\n"
  }
]