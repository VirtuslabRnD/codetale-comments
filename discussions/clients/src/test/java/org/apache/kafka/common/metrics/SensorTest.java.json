[
  {
    "id" : "a7349562-c4d6-4147-8fd9-8de07f0d6caf",
    "prId" : 4404,
    "prUrl" : "https://github.com/apache/kafka/pull/4404#pullrequestreview-89877950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e7195df-0fc1-430b-a6f5-9785cca84afe",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: the timeout is a little obscured below. I'd suggest storing the timeout itself in a nicely named variable and using `time.sleep()` instead of using the auto-tick capability of `MockTime`.",
        "createdAt" : "2018-01-18T18:09:26Z",
        "updatedAt" : "2018-02-16T21:17:51Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b3b783c22cdddf0468efcf59d9c11a3424430fa",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +72,76 @@\n    @Test\n    public void testExpiredSensor() {\n        MetricConfig config = new MetricConfig();\n        Time mockTime = new MockTime();"
  },
  {
    "id" : "c393dde8-0ab9-45d2-bd28-6d439dd01b17",
    "prId" : 9114,
    "prUrl" : "https://github.com/apache/kafka/pull/9114#pullrequestreview-461874817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b81621-fb4d-4198-a74a-115669f7a23f",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "sensor.record() always calls checkQuotas(). Why do we need to call it explicitly here?",
        "createdAt" : "2020-08-04T22:21:46Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "2df40f22-ca99-4f56-85aa-3010b9fa2747",
        "parentId" : "62b81621-fb4d-4198-a74a-115669f7a23f",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "In the above two tests, I simulate a \"strict quotas\" in the sense that recording is not allowed if the quota is already violated. Therefore, I check it before recording the value.",
        "createdAt" : "2020-08-05T17:26:11Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "feb0dade0e9caf1794fb4f687e324bad7806d213",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +273,277 @@    private void strictRecord(Sensor sensor, double value, long timeMs) {\n        synchronized (sensor) {\n            sensor.checkQuotas(timeMs);\n            sensor.record(value, timeMs, false);\n        }"
  },
  {
    "id" : "f00b747d-ec14-45a4-9675-b6eaabde32df",
    "prId" : 9114,
    "prUrl" : "https://github.com/apache/kafka/pull/9114#pullrequestreview-461877266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ba28a97-ffc7-4d98-860a-ea97c04447ed",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Here, we are just verifying there is no quota exception?",
        "createdAt" : "2020-08-04T22:23:56Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "b258af0f-d8d5-47d8-9562-d23b96678525",
        "parentId" : "1ba28a97-ffc7-4d98-860a-ea97c04447ed",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "No. This test actually reproduce a bug that I have found. Basically, a stat can be added to the Sensor with a MetricsConfig but the Sensor was not using the provided one when recording a value but was using the one of the Sensor all the time. This test verifies that the correct config is used both for recording and measuring via calling checkQuota. ",
        "createdAt" : "2020-08-05T17:29:32Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "feb0dade0e9caf1794fb4f687e324bad7806d213",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +300,304 @@        Mockito.when(stat1.measure(stat1Config, 2)).thenReturn(2.0);\n        Mockito.when(stat2.measure(stat2Config, 2)).thenReturn(2.0);\n        sensor.checkQuotas(2);\n\n        metrics.close();"
  },
  {
    "id" : "da663901-ec2f-432e-b2c6-b9d9d5fc7646",
    "prId" : 9114,
    "prUrl" : "https://github.com/apache/kafka/pull/9114#pullrequestreview-461978872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6428db4-b6e8-4d71-9a3c-0bbae432fcb6",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Is the test based on 10 samples?",
        "createdAt" : "2020-08-05T18:29:05Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "a82dd339-9d86-492a-b547-3c95ccd740bb",
        "parentId" : "c6428db4-b6e8-4d71-9a3c-0bbae432fcb6",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "The config is correct. 11 samples. With the few samples in the test, the total window is actually 10s. This is why I use 10 in the formulas.",
        "createdAt" : "2020-08-05T19:57:31Z",
        "updatedAt" : "2020-08-05T20:53:24Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "feb0dade0e9caf1794fb4f687e324bad7806d213",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +221,225 @@            .quota(Quota.upperBound(2))\n            .timeWindow(1, TimeUnit.SECONDS)\n            .samples(11));\n        final MetricName metricName = metrics.metricName(\"rate\", \"test-group\");\n        assertTrue(sensor.add(metricName, new Rate()));"
  }
]