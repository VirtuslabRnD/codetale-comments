[
  {
    "id" : "0ff1c303-1099-45ce-b5c4-2389de2a75be",
    "prId" : 10512,
    "prUrl" : "https://github.com/apache/kafka/pull/10512#pullrequestreview-632817723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a091c6e8-cc0e-4af5-b070-8614040aed38",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Can you add one more test like this one, but with more than one assignor in the list to instantiate?",
        "createdAt" : "2021-04-09T18:33:14Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "b3aa8837-9a9c-40ca-8b42-3f23e3711ec1",
        "parentId" : "a091c6e8-cc0e-4af5-b070-8614040aed38",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "Add `shouldInstantiateListOfAssignors`.",
        "createdAt" : "2021-04-09T22:20:03Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c071204853af51027826be1ae92bba5a4a298bc1",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@                Collections.emptyMap()\n        );\n        assertTrue(assignors.get(0) instanceof StickyAssignor);\n        assertTrue(assignors.get(1) instanceof CooperativeStickyAssignor);\n    }"
  },
  {
    "id" : "639e415e-e9c4-4070-be59-af921e1dfc6b",
    "prId" : 10512,
    "prUrl" : "https://github.com/apache/kafka/pull/10512#pullrequestreview-632840009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b32ffa69-2730-4028-9611-8a61f703d323",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "we should do this `assertTrue` thing for the CooperativeStickyAssignor as well",
        "createdAt" : "2021-04-09T23:02:33Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "c071204853af51027826be1ae92bba5a4a298bc1",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@                Collections.emptyMap()\n        );\n        assertTrue(assignors.get(0) instanceof StickyAssignor);\n        assertTrue(assignors.get(1) instanceof CooperativeStickyAssignor);\n    }"
  },
  {
    "id" : "7113ee88-3297-45ba-aecd-50f96d71be19",
    "prId" : 10512,
    "prUrl" : "https://github.com/apache/kafka/pull/10512#pullrequestreview-632862569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think it would make sense to style this test (and `shouldInstantiateFromListOfClassTypes` below) more like `shouldInstantiateAssignors` now, ie where we actually validate the assignors that are returned (eg `assertTrue(assignors.get(0) instanceof StickyAssignor)`). Previously this test was just making sure that we adaptor would work and we wouldn't throw an exception when constructing the consumer, that's why it's like this ",
        "createdAt" : "2021-04-09T23:05:06Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "2fdb1a83-b1f7-4d96-b4d0-ce0339a59f07",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "`assignors ` is not visible in `KafkaConsumer`, we should add a `getAssignors()` in `KafkaConsumer` to test this. Maybe the other tests are enough to verify that the `getAssignorInstances` operate rightly, How about remove these 2 test cases?",
        "createdAt" : "2021-04-09T23:25:54Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "ada4f73d-5dff-4b1d-8813-8e3021709615",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Ah, I was suggesting to just replicate the `shouldInstantiateAssignor` and `shouldInstantiateListOfAssignors` tests exactly, but with the `classTypes` being eg `StickyAssignor.class` instead of `StickyAssignor.class.getName()`. For example\r\n\r\n```\r\nclassNames = Collections.singletonList(StickyAssignor.class);\r\nList<ConsumerPartitionAssignor> assignors = getAssignorInstances(classNames, Collections.emptyMap());\r\nassertTrue(assignors.get(0) instanceof StickyAssignor);\r\n```",
        "createdAt" : "2021-04-09T23:49:50Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5e578419-40b3-43e3-b131-0dcffa617a4d",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "It seems that `getAssignorInstances()` can only accept `List<String>` as the first parameter, so this could not work.ðŸ˜³",
        "createdAt" : "2021-04-09T23:59:17Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "49e69b34-f279-485f-8c5b-2064c06b79b7",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Ah, yeah, you'd need to do something more like what actually happens in the actual KafkaConsumer/`getAssignorInstances` code. eg\r\n```\r\n@Test\r\n@SuppressWarnings(\"unchecked\")\r\npublic void shouldInstantiateAssignorClass() {\r\n    Object classTypes = Collections.singletonList(StickyAssignor.class);\r\n    List<ConsumerPartitionAssignor> assignors = getAssignorInstances((List<String>) classTypes, Collections.emptyMap());\r\n     assertTrue(assignors.get(0) instanceof StickyAssignor);\r\n}\r\n```",
        "createdAt" : "2021-04-10T00:16:56Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "c88db8e5-697c-4cac-8a73-b6f0fc44f98d",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "It's super awkward, obviously, but since this is what happens when we process the configs in the real code we should try to replicate that in the test",
        "createdAt" : "2021-04-10T00:17:42Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5ab6fd07-98f4-497a-9185-d99dd06ff2f8",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "Yes, this awkward, I fixed this with some code refactoring and fixed the comment in upgrade.html, PTAL, Thank you for your patience.",
        "createdAt" : "2021-04-10T00:57:56Z",
        "updatedAt" : "2021-04-10T00:58:18Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      },
      {
        "id" : "777af67a-622a-46aa-a5a7-72165996ce1a",
        "parentId" : "c4218a91-b1e1-419a-b388-de4f6447e803",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Nice, thanks for the update. Looks good",
        "createdAt" : "2021-04-10T01:03:31Z",
        "updatedAt" : "2021-04-10T01:03:32Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "c071204853af51027826be1ae92bba5a4a298bc1",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@\n    @Test\n    public void shouldInstantiateFromClassType() {\n        List<String> classTypes =\n                initConsumerConfigWithClassTypes(Collections.singletonList(StickyAssignor.class))"
  }
]