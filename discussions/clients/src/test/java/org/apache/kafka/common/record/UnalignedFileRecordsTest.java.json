[
  {
    "id" : "dd479dbc-df53-4d7b-98f5-2efb3248a984",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575993082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83aa09ce-70ee-4f2d-b3ed-01d44c4387c4",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: why not import `ByteBufferChannel`?",
        "createdAt" : "2021-01-25T17:41:42Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9eefcaa4-2cac-4a8a-9f25-f9bbe33e7066",
        "parentId" : "83aa09ce-70ee-4f2d-b3ed-01d44c4387c4",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "ImportControl doesn't allow us to import ByteBufferChannel here, this is similar to `NonOverflowingByteBufferChannel` in your pr #4574",
        "createdAt" : "2021-01-26T03:52:02Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@    public void testWriteTo() throws IOException {\n\n        org.apache.kafka.common.requests.ByteBufferChannel channel = new org.apache.kafka.common.requests.ByteBufferChannel(fileRecords.sizeInBytes());\n        int size = fileRecords.sizeInBytes();\n"
  },
  {
    "id" : "230621dc-04da-4dbf-953d-f4f2bd208141",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575993082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aceee314-d1be-4edf-83e6-917685aa84d9",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: `size - size / 2` looks a little funny. Is that the same as `size / 2 + 1`?",
        "createdAt" : "2021-01-25T17:43:17Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "c728aecb-7b96-4045-9949-cd95a70599fa",
        "parentId" : "aceee314-d1be-4edf-83e6-917685aa84d9",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "`4 - 4/2 = 2` vs `4/2 + 1 = 3`.",
        "createdAt" : "2021-01-26T00:07:35Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "73bde76b-a03a-4772-b828-1eb4edd7e829",
        "parentId" : "aceee314-d1be-4edf-83e6-917685aa84d9",
        "authorId" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "body" : "Size may be an odd number or even number.",
        "createdAt" : "2021-01-26T03:53:09Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "12f98c82-b9ef-4668-aa6f-5a62bf3439bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@\n        UnalignedFileRecords records1 = fileRecords.sliceUnaligned(0, size / 2);\n        UnalignedFileRecords records2 = fileRecords.sliceUnaligned(size / 2, size - size / 2);\n\n        records1.writeTo(channel, 0, records1.sizeInBytes());"
  },
  {
    "id" : "9184b0fa-7327-4b4f-8b35-59a5e0f9f4b7",
    "prId" : 9819,
    "prUrl" : "https://github.com/apache/kafka/pull/9819#pullrequestreview-575647546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5de66bec-2448-4024-82d3-9cb7ca77886d",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: should we add an `@After` so that we can close the file?",
        "createdAt" : "2021-01-25T17:58:24Z",
        "updatedAt" : "2021-01-26T08:26:00Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d75d65b77e2a8ea36e0a236e46a8b11c3316ba20",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@    @BeforeEach\n    public void setup() throws IOException {\n        this.fileRecords = createFileRecords(values);\n    }\n"
  }
]