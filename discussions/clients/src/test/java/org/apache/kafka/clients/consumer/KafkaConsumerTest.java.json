[
  {
    "id" : "bc5ead0d-3972-42db-bf29-47a04ea6a614",
    "prId" : 4557,
    "prUrl" : "https://github.com/apache/kafka/pull/4557#pullrequestreview-96404716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b0d166-29c0-49c9-a52d-a40fcf3abaf5",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Why was this change needed?",
        "createdAt" : "2018-02-13T23:25:57Z",
        "updatedAt" : "2018-02-14T15:55:04Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "221ed0dc-93a5-45f5-8ceb-efbb9982e6d0",
        "parentId" : "90b0d166-29c0-49c9-a52d-a40fcf3abaf5",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I was annoyed that it took 5 seconds for lookup of the previous invalid host to fail. Seemed like any value will work for the purpose of this test case so we can choose something which causes an immediate failure.",
        "createdAt" : "2018-02-14T07:35:56Z",
        "updatedAt" : "2018-02-14T15:55:04Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "76c796ca128c3c97231f3ebda994a07bb06b26aa",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +134,138 @@        Properties props = new Properties();\n        props.setProperty(ConsumerConfig.CLIENT_ID_CONFIG, \"testConstructorClose\");\n        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"invalid-23-8409-adsfsdj\");\n        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n"
  },
  {
    "id" : "e498c4be-6fcb-4e57-9cd8-8147d9e2666a",
    "prId" : 4855,
    "prUrl" : "https://github.com/apache/kafka/pull/4855#pullrequestreview-122280843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e69b7115-3b44-4416-8fae-6729676c22e7",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "time never actually advances because we use `MockTime(0)`, so any timeout at all will block indefinitely and keep polling until we get a response. This only works in tests that expect a response, otherwise it would loop forever.",
        "createdAt" : "2018-05-22T19:26:12Z",
        "updatedAt" : "2018-05-26T00:00:49Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3fce0f22e8b12e03475212b2bf07e69bc230362",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +487,491 @@        client.prepareResponse(fetchResponse(tp0, 50L, 5));\n\n        ConsumerRecords<String, String> records = consumer.poll(Duration.ofMillis(1));\n        assertEquals(5, records.count());\n        assertEquals(55L, consumer.position(tp0));"
  }
]