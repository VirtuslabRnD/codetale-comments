[
  {
    "id" : "d544319b-fd68-43e9-b4d2-d162cb897fcf",
    "prId" : 7967,
    "prUrl" : "https://github.com/apache/kafka/pull/7967#pullrequestreview-344953426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "126ad05a-a8f0-4a06-abee-49e57866854f",
        "parentId" : null,
        "authorId" : "0c73d886-f3da-4107-8045-92d8e3c8fb75",
        "body" : "I stepped through this test a few times.\r\n```\r\n                public Void call() throws Exception {\r\n                    System.out.println(\"allocating\");\r\n                    assertThrows(KafkaException.class, () -> pool.allocate(1, Long.MAX_VALUE));\r\n                    System.out.println(\"allocated\");\r\n```\r\nBufferPool is already closed by the time work#call is executed:\r\n```\r\nclosing\r\nallocating\r\nallocating\r\nallocated\r\nallocated\r\n```\r\nSo the test doesn't exercise line 150 in BufferPool.\r\n",
        "createdAt" : "2020-01-18T15:40:16Z",
        "updatedAt" : "2020-01-18T15:40:16Z",
        "lastEditedBy" : "0c73d886-f3da-4107-8045-92d8e3c8fb75",
        "tags" : [
        ]
      },
      {
        "id" : "879918bf-4f21-4fe6-aa9e-56932d021deb",
        "parentId" : "126ad05a-a8f0-4a06-abee-49e57866854f",
        "authorId" : "98b12f1a-2624-4608-85a1-ec49503fd316",
        "body" : "Good find, thank you. I've opened https://github.com/apache/kafka/pull/7982 to resolve this.",
        "createdAt" : "2020-01-18T17:26:55Z",
        "updatedAt" : "2020-01-18T17:26:56Z",
        "lastEditedBy" : "98b12f1a-2624-4608-85a1-ec49503fd316",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c63d11596d51b9ddd8907fc23eefdb1f0588306",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +419,423 @@        assertEquals(\"Allocation shouldn't have happened yet, waiting on memory\", numWorkers, completed.getCount());\n\n        // Close the buffer pool. This should notify all waiters.\n        pool.close();\n"
  },
  {
    "id" : "809caaa0-b3f9-4a36-86b5-9b22f4f7d084",
    "prId" : 8399,
    "prUrl" : "https://github.com/apache/kafka/pull/8399#pullrequestreview-391705953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0c761a3-2535-4762-bffe-a0b57732c74e",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "This waits on real Timer. So waiting 2 secs in a unit test is too long. Perhaps try 10ms?",
        "createdAt" : "2020-04-10T22:12:23Z",
        "updatedAt" : "2020-04-10T22:18:15Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "dc0d8c59-c24d-43a9-a608-7efddfe67bad",
        "parentId" : "d0c761a3-2535-4762-bffe-a0b57732c74e",
        "authorId" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "body" : "Happy to do that of course. The maxBlockTimeMs affects the entire class of tests though, I'd like to move that to a separate PR to make the change easier to trace in case tests become unstable due to this.\r\n\r\nI ran a couple thousand tests with different values and for me testBlockTimeout became unstable with a value of 10ms - afaik can tell we are betting on a race condition in [line 188 ](https://github.com/soenkeliebau/kafka/blob/KAFKA-3720/clients/src/test/java/org/apache/kafka/clients/producer/internals/BufferPoolTest.java#L188). We allocate three bytes, start delayed deallocations, wait a little and then hope that at least one deallocation took place by the time we check. Which worked for 2000 ms, but apparently breaks sometimes for 10 ms. \r\nIt is an easy fix by changing the condition to 7 instead of 8, but I'm not sure how much actual worth that assertion has after that.\r\n\r\nHappy to discuss this further, but maybe we can first agree on if a new PR makes sense. I think it makes sense to separate this out tbh.",
        "createdAt" : "2020-04-10T23:26:07Z",
        "updatedAt" : "2020-04-10T23:26:07Z",
        "lastEditedBy" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +160,164 @@        BufferPool pool = new BufferPool(2, 1, metrics, time, metricGroup);\n        pool.allocate(1, maxBlockTimeMs);\n        pool.allocate(2, maxBlockTimeMs);\n    }\n"
  },
  {
    "id" : "4cf3d913-f464-4545-bc94-2e90ea213bec",
    "prId" : 8399,
    "prUrl" : "https://github.com/apache/kafka/pull/8399#pullrequestreview-391706366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3d6d806-67c2-4cd3-9a38-f408abbfaff6",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Similar to the above, perhaps reduce maxBlockTimeMs to 10ms?",
        "createdAt" : "2020-04-10T22:13:32Z",
        "updatedAt" : "2020-04-10T22:18:15Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "baffd862-4258-461d-9480-1fb3e4145140",
        "parentId" : "a3d6d806-67c2-4cd3-9a38-f408abbfaff6",
        "authorId" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "body" : "thanks @junrao - I answered in your related comment above. ",
        "createdAt" : "2020-04-10T23:27:46Z",
        "updatedAt" : "2020-04-10T23:27:46Z",
        "lastEditedBy" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +182,186 @@            pool.allocate(10, maxBlockTimeMs);\n            fail(\"The buffer allocated more memory than its maximum value 10\");\n        } catch (BufferExhaustedException e) {\n            // this is good\n        }"
  }
]