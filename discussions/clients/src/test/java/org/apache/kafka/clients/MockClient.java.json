[
  {
    "id" : "ff316c56-c49e-43c3-a143-e00a8b706a17",
    "prId" : 5112,
    "prUrl" : "https://github.com/apache/kafka/pull/5112#pullrequestreview-125342540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efe639ca-a4a5-4204-9410-2474e365ce61",
        "parentId" : null,
        "authorId" : "220f032c-6592-42d9-9042-aed276632816",
        "body" : "nits: it seems more intuitive to name it `expired`. But not a big deal. It is update to you.",
        "createdAt" : "2018-06-01T23:31:06Z",
        "updatedAt" : "2018-06-02T18:24:22Z",
        "lastEditedBy" : "220f032c-6592-42d9-9042-aed276632816",
        "tags" : [
        ]
      }
    ],
    "commit" : "88739849e842f3f64e402a6f5aa06c5fa2edd140",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +555,559 @@        }\n\n        boolean contains(T element) {\n            return contains(element, time.milliseconds());\n        }"
  },
  {
    "id" : "78c297f2-bc08-4ae3-a3dc-8a41872d17e2",
    "prId" : 6613,
    "prUrl" : "https://github.com/apache/kafka/pull/6613#pullrequestreview-232760520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6b6a82f-2c76-487a-95ba-e479c387799c",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Just to clarify this refactoring is orthogonal to unit test augment for this bug fix specifically right?",
        "createdAt" : "2019-05-01T02:21:45Z",
        "updatedAt" : "2019-05-01T20:59:05Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "d53b8291-fa2d-4198-b24b-2451f6c9bf48",
        "parentId" : "c6b6a82f-2c76-487a-95ba-e479c387799c",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I needed it in order to add a good test case.",
        "createdAt" : "2019-05-01T20:30:47Z",
        "updatedAt" : "2019-05-01T20:59:05Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "059a9a42-e4bd-44da-a70a-4fb73ddb6f31",
        "parentId" : "c6b6a82f-2c76-487a-95ba-e479c387799c",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "ack.",
        "createdAt" : "2019-05-01T21:14:40Z",
        "updatedAt" : "2019-05-01T21:14:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfb67287553fb24daf3e7e252379a05d0ef08860",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +76,80 @@    private final Time time;\n    private final MockMetadataUpdater metadataUpdater;\n    private final Map<String, ConnectionState> connections = new HashMap<>();\n    private final Map<Node, Long> pendingAuthenticationErrors = new HashMap<>();\n    private final Map<Node, AuthenticationException> authenticationErrors = new HashMap<>();"
  },
  {
    "id" : "b16eb7e8-0457-4932-ab04-b3150b427a2e",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-254939172",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a19cb25e-271f-4fe1-b148-41174c41d116",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "nit: break up long line",
        "createdAt" : "2019-06-18T22:29:58Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "0cfd2534-3f40-4763-8ee4-0692feb82658",
        "parentId" : "a19cb25e-271f-4fe1-b148-41174c41d116",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@ableegoldman Sorry I missed these comments. Will address in the pt.3 PR.",
        "createdAt" : "2019-06-27T00:11:28Z",
        "updatedAt" : "2019-06-27T00:11:29Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +222,226 @@            AbstractRequest abstractRequest = request.requestBuilder().build(version);\n            if (!futureResp.requestMatcher.matches(abstractRequest))\n                throw new IllegalStateException(\"Request matcher did not match next-in-line request \" + abstractRequest + \" with prepared response \" + futureResp.responseBody);\n\n            UnsupportedVersionException unsupportedVersionException = null;"
  }
]