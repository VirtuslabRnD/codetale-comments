[
  {
    "id" : "6b673331-7547-4117-bec5-4875714ff571",
    "prId" : 5270,
    "prUrl" : "https://github.com/apache/kafka/pull/5270#pullrequestreview-133335457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98348165-e7fc-4da7-bb57-ca7019f9d020",
        "parentId" : null,
        "authorId" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "body" : "We should add some sort of `accumulator.hasInflightBatches` method, and then check that it returns false here. This would check that expired batches are not reenqueued, which is logic added in this patch.",
        "createdAt" : "2018-06-29T06:00:58Z",
        "updatedAt" : "2018-07-26T15:53:34Z",
        "lastEditedBy" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "tags" : [
        ]
      },
      {
        "id" : "5b9fcac8-3703-43ea-ad54-e1b554650fe4",
        "parentId" : "98348165-e7fc-4da7-bb57-ca7019f9d020",
        "authorId" : "a962e9bb-bf94-4294-b23c-d279e1e69019",
        "body" : "added the method `public List<ProducerBatch> inFlightBatches(TopicPartition tp)`  in `RecordAccumulator`, and updated the test with two assertions: \r\n\r\n       line 1912: assertEquals(\"Expect one in-flight batch in accumulator\", 1, accumulator.inFlightBatches(tp0).size());\r\n        .....\r\n       line 1920: assertEquals(\"Expect zero in-flight batch in accumulator\", 0, accumulator.inFlightBatches(tp0).size());\r\n",
        "createdAt" : "2018-06-29T18:36:38Z",
        "updatedAt" : "2018-07-26T15:53:34Z",
        "lastEditedBy" : "a962e9bb-bf94-4294-b23c-d279e1e69019",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9aa6b1706e2e374c20d710567a64b0328fe3119",
    "line" : 463,
    "diffHunk" : "@@ -1,1 +1958,1962 @@            fail(\"The expired batch should throw a TimeoutException\");\n        } catch (ExecutionException e) {\n            assertTrue(e.getCause() instanceof TimeoutException);\n        }\n    }"
  },
  {
    "id" : "967f486f-075e-411a-a2c4-597513b51a3a",
    "prId" : 5270,
    "prUrl" : "https://github.com/apache/kafka/pull/5270#pullrequestreview-133388419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2313699a-f42c-413a-a5c6-2514833a7570",
        "parentId" : null,
        "authorId" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "body" : "How is this different from the test `testExpiryOfFirstBatchShouldNotCauseUnresolvedSequencesIfFutureBatchesSucceed`?",
        "createdAt" : "2018-06-29T06:03:16Z",
        "updatedAt" : "2018-07-26T15:53:34Z",
        "lastEditedBy" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "tags" : [
        ]
      },
      {
        "id" : "0a42eae0-4864-4400-a121-f400dc802ba4",
        "parentId" : "2313699a-f42c-413a-a5c6-2514833a7570",
        "authorId" : "a962e9bb-bf94-4294-b23c-d279e1e69019",
        "body" : "`testExpiryOfFirstBatchShouldNotCauseUnresolvedSequencesIfFutureBatchesSucceed` initialize `sender` with `guaranteeMessageOrder = false`, while `testWhenFirstBatchExpireNoSendSecondBatchIfGuaranteeOrder` initialize sender with `guaranteeMessageOrder = true`.  The `inflightBatches` size is different when we set the parameter to true/false. ",
        "createdAt" : "2018-06-29T21:53:35Z",
        "updatedAt" : "2018-07-26T15:53:34Z",
        "lastEditedBy" : "a962e9bb-bf94-4294-b23c-d279e1e69019",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9aa6b1706e2e374c20d710567a64b0328fe3119",
    "line" : 468,
    "diffHunk" : "@@ -1,1 +1963,1967 @@\n    @Test\n    public void testWhenFirstBatchExpireNoSendSecondBatchIfGuaranteeOrder() throws InterruptedException {\n        long deliveryTimeoutMs = 1500L;\n        setupWithTransactionState(null, true, null);"
  }
]