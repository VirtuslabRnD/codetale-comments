[
  {
    "id" : "6b2776c9-3ecb-4571-be19-353ae607f8fa",
    "prId" : 4570,
    "prUrl" : "https://github.com/apache/kafka/pull/4570#pullrequestreview-96934443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Are we confident that this test is stable? An alternative is to verify that the fields are unset after close. Not as effective, but faster and not flaky.",
        "createdAt" : "2018-02-14T14:58:46Z",
        "updatedAt" : "2018-02-14T15:41:17Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "5ae969b6-3bf8-41e0-bc81-c93d5ac65907",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@ijuma Thanks for the review. The test retries for 100 iterations and I haven't seen it fail. If we see any failures, then I can check for the fields instead.",
        "createdAt" : "2018-02-14T15:49:58Z",
        "updatedAt" : "2018-02-14T15:49:58Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "00df19e8-5442-469c-b350-807dc66803f7",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "And the test fails without the change?",
        "createdAt" : "2018-02-15T15:34:44Z",
        "updatedAt" : "2018-02-15T15:34:44Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "58e38da2-9bba-467b-85f8-85bbd00844b2",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@ijuma Test fails consistently for me for LZ4 and GZIP without the change. Test doesn't fail with SNAPPY since memory growth is slower, but since the changes in the PR are verified with LZ4 and GZIP, I thought that was ok. ",
        "createdAt" : "2018-02-15T16:14:20Z",
        "updatedAt" : "2018-02-15T16:14:21Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "601dd447-c135-4979-8e05-a76607ae9537",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Sounds good.",
        "createdAt" : "2018-02-15T16:17:06Z",
        "updatedAt" : "2018-02-15T16:17:07Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "903286b8-7adf-4a5a-a06c-955dea86180d",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "e5ab8cf9-b65c-43a9-ae60-dc86bd1ec44e",
        "body" : "Based on my analysis of the issue, this fix should definitely address the LZ4 and looks good to me.\r\n\r\nDoes it also fix the same issue in GZIP?  My testing ran out of memory using GZIP as well, but I don't see any gzip classes included.",
        "createdAt" : "2018-02-15T17:05:28Z",
        "updatedAt" : "2018-02-15T17:05:28Z",
        "lastEditedBy" : "e5ab8cf9-b65c-43a9-ae60-dc86bd1ec44e",
        "tags" : [
        ]
      },
      {
        "id" : "fc35cd3d-3ebd-4117-8b85-282aa53556a9",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@Lothsahn Thanks for the review. With the change to set `MemoryRecordsBuilder.appendStream` to `null` when the builder is closed, this should fix the issue with GZIP as well.",
        "createdAt" : "2018-02-15T17:17:58Z",
        "updatedAt" : "2018-02-15T17:17:58Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "3f547ec9-0f8c-476f-96ab-c0aa81779239",
        "parentId" : "6bfd5c59-18cb-4ab0-84c1-97430e4629eb",
        "authorId" : "e5ab8cf9-b65c-43a9-ae60-dc86bd1ec44e",
        "body" : "@rajinisivaram Ah.  I missed that section.  Good fix!\r\n\r\nLGTM",
        "createdAt" : "2018-02-15T17:22:59Z",
        "updatedAt" : "2018-02-15T17:22:59Z",
        "lastEditedBy" : "e5ab8cf9-b65c-43a9-ae60-dc86bd1ec44e",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ae1e71e8e785cb230282f0ef56cfc40294502b2",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +676,680 @@                break;\n        }\n        assertTrue(\"Memory usage too high: \" + memUsed, iterations < 100);\n    }\n"
  },
  {
    "id" : "c2d2f3da-14d5-44c7-8bb7-e97f898b92c5",
    "prId" : 6248,
    "prUrl" : "https://github.com/apache/kafka/pull/6248#pullrequestreview-202380908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b57c452c-54aa-4117-9745-d2b64dc0854c",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Since the `build` method of the builder is what you're testing here, I don't think the Supplier is necessary.",
        "createdAt" : "2019-02-11T19:33:54Z",
        "updatedAt" : "2019-02-11T20:53:57Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "18654857-b984-4479-bae7-186e29e0ae19",
        "parentId" : "b57c452c-54aa-4117-9745-d2b64dc0854c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "The checks happen in the constructor, right?\r\n\r\n```java\r\nif (magic < RecordBatch.MAGIC_VALUE_V2) {\r\n            if (isTransactional)\r\n                throw new IllegalArgumentException(\"Transactional records are not supported for magic \" + magic);\r\n            if (isControlBatch)\r\n                throw new IllegalArgumentException(\"Control records are not supported for magic \" + magic);\r\n            if (compressionType == CompressionType.ZSTD)\r\n                throw new IllegalArgumentException(\"ZStandard compression is not supported for magic \" + magic);\r\n        }\r\n```",
        "createdAt" : "2019-02-11T20:57:15Z",
        "updatedAt" : "2019-02-11T20:57:15Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "0e7f387c-5199-4ade-9ae4-a64ed27af484",
        "parentId" : "b57c452c-54aa-4117-9745-d2b64dc0854c",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Gotcha. I (incorrectly) assumed the \"build\" method. ",
        "createdAt" : "2019-02-11T22:51:29Z",
        "updatedAt" : "2019-02-11T22:51:29Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      }
    ],
    "commit" : "31469cfdcb7c5db19beacb1aafa8bb4018f24f07",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +63,67 @@        buffer.position(bufferOffset);\n\n        Supplier<MemoryRecordsBuilder> builderSupplier = () -> new MemoryRecordsBuilder(buffer, magic,\n            compressionType, TimestampType.CREATE_TIME, 0L, 0L,\n            RecordBatch.NO_PRODUCER_ID, RecordBatch.NO_PRODUCER_EPOCH, RecordBatch.NO_SEQUENCE,"
  }
]