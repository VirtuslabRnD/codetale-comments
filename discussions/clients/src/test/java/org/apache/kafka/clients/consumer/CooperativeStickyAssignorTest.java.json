[
  {
    "id" : "a39bb1e0-2a34-4337-996e-f92ae8e06553",
    "prId" : 7130,
    "prUrl" : "https://github.com/apache/kafka/pull/7130#pullrequestreview-270432054",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fb286eb-6510-43cb-bb1d-9b97c9128d55",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Originally I had this as an `if` instead of a `while` but found that `testReassignmentWithRandomSubscriptionsAndChanges()` was flaky because a third rebalance was occasionally needed. I believe the reason is that with the random subscription changes so many partitions are revoked/removed from assignment on the first rebalance that the assignor doesn't end up deterministically giving back those same partitions.\r\n\r\nIt was only ever at most 3, but I'm looking into it further",
        "createdAt" : "2019-08-02T23:44:37Z",
        "updatedAt" : "2019-08-22T22:29:11Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "2353e5a29fdd36b86160a8e63de90cd54f0d0825",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@        int rebalances = 0;\n        // partitions are being revoked, we must go through another assignment to get the final state\n        while (verifyCooperativeValidity(subscriptions, assignments)) {\n\n            // update the subscriptions with the now owned partitions"
  }
]