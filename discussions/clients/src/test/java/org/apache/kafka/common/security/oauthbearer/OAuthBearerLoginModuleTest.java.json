[
  {
    "id" : "9ef21029-6de2-423b-b915-6a56a23d08a3",
    "prId" : 5379,
    "prUrl" : "https://github.com/apache/kafka/pull/5379#pullrequestreview-139707212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "913a1719-bda1-40fd-b2d5-9bdbab921719",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Same thing here; create an array of SaslExtensions mocks, one element of which should be null, etc.",
        "createdAt" : "2018-07-24T01:54:34Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "36e5db8c09ae89fd4746f71e134115b74e30ffae",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +221,225 @@\n        // Create callback handler\n        OAuthBearerToken[] tokens = new OAuthBearerToken[] {EasyMock.mock(OAuthBearerToken.class),\n            EasyMock.mock(OAuthBearerToken.class)};\n        SaslExtensions[] extensions = new SaslExtensions[] {EasyMock.mock(SaslExtensions.class),"
  },
  {
    "id" : "b5450374-4f84-41d3-8cee-c47e3c79fef8",
    "prId" : 5379,
    "prUrl" : "https://github.com/apache/kafka/pull/5379#pullrequestreview-139707212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dceb878d-67a6-424b-a592-08ab6afbf83a",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Same thing here; create an array of SaslExtensions mocks, one element of which should be null, etc.",
        "createdAt" : "2018-07-24T01:54:57Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "36e5db8c09ae89fd4746f71e134115b74e30ffae",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +281,285 @@\n        // Create callback handler\n        OAuthBearerToken[] tokens = new OAuthBearerToken[] {EasyMock.mock(OAuthBearerToken.class),\n            EasyMock.mock(OAuthBearerToken.class)};\n        SaslExtensions[] extensions = new SaslExtensions[] {EasyMock.mock(SaslExtensions.class),"
  },
  {
    "id" : "e4ead6e0-5b94-4066-b58b-bc152c4298d1",
    "prId" : 5379,
    "prUrl" : "https://github.com/apache/kafka/pull/5379#pullrequestreview-139707212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aa02135-f129-4fff-834c-03f740faa2a7",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Same thing here; create an array of SaslExtensions mocks, one element of which should be null, etc.",
        "createdAt" : "2018-07-24T01:55:36Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "36e5db8c09ae89fd4746f71e134115b74e30ffae",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +333,337 @@\n        // Create callback handler\n        OAuthBearerToken[] tokens = new OAuthBearerToken[] {EasyMock.mock(OAuthBearerToken.class),\n            EasyMock.mock(OAuthBearerToken.class), EasyMock.mock(OAuthBearerToken.class)};\n        SaslExtensions[] extensions = new SaslExtensions[] {EasyMock.mock(SaslExtensions.class),"
  },
  {
    "id" : "962615de-e4db-4425-bfd0-503e73dbc24b",
    "prId" : 5379,
    "prUrl" : "https://github.com/apache/kafka/pull/5379#pullrequestreview-140420701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "809dd0a6-ea45-4444-90a1-1a5389d3f569",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "This test becomes unnecessary after weaving SaslExtensions into the above tests as long as you include at least one null element in the array for each one.",
        "createdAt" : "2018-07-24T02:01:00Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "17470c45-804d-4ab4-b48f-63c2d438da42",
        "parentId" : "809dd0a6-ea45-4444-90a1-1a5389d3f569",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "No, we'd need this. The null element won't test out this backwards-compatible behavior",
        "createdAt" : "2018-07-24T15:10:39Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "5066bc1a-8877-4ed1-99d2-af757f6fe625",
        "parentId" : "809dd0a6-ea45-4444-90a1-1a5389d3f569",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "This test is checking the same thing that was checked via passing in RAISE_UNSUPPORTED_CB_EXCEPTION_FLAG (null) at line 133 and checking for EMPTY_EXTENSIONS at lines 191 and 200.  This test should be deleted.\r\n",
        "createdAt" : "2018-07-25T14:08:10Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "a5cebd5c-b27c-4451-9d57-a880c2cc5696",
        "parentId" : "809dd0a6-ea45-4444-90a1-1a5389d3f569",
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Sorry about my initial comment of \"No, we'd need this. The null element won't test out this backwards-compatible behavior\". I unfortunately commented prematurely before completely understanding your suggestion.\r\n\r\nI acknowledge that this is verified in the above tests.\r\nIt's just that from what I've read from TDD books, the overall approach experts recommend is to rely on single, small tests that test concrete functionality. This way, when a problem occurs you immediately know what the cause is - `commitPopulatesExtensions` - oh, my extensions weren't populated.\r\n\r\nWhere as if you get an error in test `login1Commit1Login2Abort2Login3Commit3Logout3` you need to investigate the test well and figure out where the problem is. \r\nWhile such big tests are always useful, I believe a test suite comprised of more smaller tests is better.\r\nTests comprised of more methods serve as better documentation. You can then just read the method names and get a general feeling of what the tested subject should do.\r\n\r\nPlease share your thoughts on this",
        "createdAt" : "2018-07-25T16:55:30Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "69c72ec5-587d-43fe-9216-8420cb30f213",
        "parentId" : "809dd0a6-ea45-4444-90a1-1a5389d3f569",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Good point -- I agree.  Let's keep this test and eliminate the null value in `login1Commit1Login2Abort2Login3Commit3Logout3`.",
        "createdAt" : "2018-07-25T17:38:17Z",
        "updatedAt" : "2018-08-06T13:03:09Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "36e5db8c09ae89fd4746f71e134115b74e30ffae",
    "line" : 344,
    "diffHunk" : "@@ -1,1 +410,414 @@     */\n    @Test\n    public void commitDoesNotThrowOnUnsupportedExtensionsCallback() throws LoginException {\n        Subject subject = new Subject();\n"
  }
]