[
  {
    "id" : "850e9b64-af8b-44e6-b81b-44095a047be4",
    "prId" : 3848,
    "prUrl" : "https://github.com/apache/kafka/pull/3848#pullrequestreview-196402435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bbe4cfd-d9f6-4f7c-8d1e-2b3cd9f26fc5",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Perhaps we can further assert that calling get on topic1 has no error?",
        "createdAt" : "2019-01-24T23:00:12Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "9bea1c79-43bb-4a98-9ea9-5b9271d3f239",
        "parentId" : "8bbe4cfd-d9f6-4f7c-8d1e-2b3cd9f26fc5",
        "authorId" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "body" : "We do that on line 664, unless I misunderstood what you mean?",
        "createdAt" : "2019-01-25T08:38:53Z",
        "updatedAt" : "2019-01-25T09:57:17Z",
        "lastEditedBy" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "tags" : [
        ]
      }
    ],
    "commit" : "9df18c6b3232f3e8b9bf879b7a8dd762a5968c6c",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +664,668 @@            results.partitionResult(topic1).get();\n            TestUtils.assertFutureError(results.partitionResult(topic2), ClusterAuthorizationException.class);\n            TestUtils.assertFutureError(results.all(), ClusterAuthorizationException.class);\n\n            // Test a call where there are no errors."
  },
  {
    "id" : "f90e6345-acbb-477c-8a80-e0d344981ec7",
    "prId" : 4470,
    "prUrl" : "https://github.com/apache/kafka/pull/4470#pullrequestreview-91954220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aa110ed-371e-4ac0-9d09-8b4c42979524",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit (open to discussion): I tend to prefer smaller test cases when they are possible since it is easier to narrow down the problem. Any reason not to split this into 3 separate cases: one for each API?",
        "createdAt" : "2018-01-25T19:35:48Z",
        "updatedAt" : "2018-01-26T19:32:31Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "13883e11-d9ad-4e1a-895d-c9ef88d47ea0",
        "parentId" : "4aa110ed-371e-4ac0-9d09-8b4c42979524",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's just more boilerplate creating each test.  This particular test actually runs very fast since it's a true unit test (no brokers running), so test time should not be an issue.  I don't feel strongly about it, though.",
        "createdAt" : "2018-01-26T19:23:19Z",
        "updatedAt" : "2018-01-26T19:32:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "8d153d46-524d-4dac-a44f-7b16381454d8",
        "parentId" : "4aa110ed-371e-4ac0-9d09-8b4c42979524",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Yeah, I don't feel too strongly in this case. The advantage generally is that the scope of the test case is clearer which makes failures easier to investigate. ",
        "createdAt" : "2018-01-26T20:03:36Z",
        "updatedAt" : "2018-01-26T20:03:36Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2861635595d2ea2e0e01282e55837c563c15aa8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +218,222 @@\n    @Test\n    public void testInvalidTopicNames() throws Exception {\n        try (AdminClientUnitTestEnv env = mockClientEnv()) {\n            env.kafkaClient().setNodeApiVersions(NodeApiVersions.create());"
  },
  {
    "id" : "7c8e10ad-bcd2-4051-a74a-041d3d93ecd5",
    "prId" : 5578,
    "prUrl" : "https://github.com/apache/kafka/pull/5578#pullrequestreview-151223711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7870e687-32cf-4fb5-ba33-11778f1d6b5a",
        "parentId" : null,
        "authorId" : "96e73e76-849a-48cc-aea2-062b6505864e",
        "body" : "NIT: extra whitespace",
        "createdAt" : "2018-08-31T00:05:24Z",
        "updatedAt" : "2019-05-09T18:36:41Z",
        "lastEditedBy" : "96e73e76-849a-48cc-aea2-062b6505864e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d60ed8b759ca9c141bd47f42bc2eefc9c9629c4",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1085,1089 @@            DescribeGroupsResponseData data = new DescribeGroupsResponseData();\n\n            //Retriable  errors should be retried\n            data.groups().add(DescribeGroupsResponse.groupMetadata(\n                \"group-0\","
  },
  {
    "id" : "5a894181-c5b7-47de-909c-8b9b5d74b7c9",
    "prId" : 5578,
    "prUrl" : "https://github.com/apache/kafka/pull/5578#pullrequestreview-151223773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "603ff74b-a65f-4f9a-b2ee-0616e6ed6682",
        "parentId" : null,
        "authorId" : "96e73e76-849a-48cc-aea2-062b6505864e",
        "body" : "NIT: same, whitespace",
        "createdAt" : "2018-08-31T00:05:47Z",
        "updatedAt" : "2019-05-09T18:36:41Z",
        "lastEditedBy" : "96e73e76-849a-48cc-aea2-062b6505864e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d60ed8b759ca9c141bd47f42bc2eefc9c9629c4",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +1177,1181 @@            env.kafkaClient().prepareResponse(FindCoordinatorResponse.prepareResponse(Errors.NONE, env.cluster().controller()));\n\n            //Retriable  errors should be retried\n            env.kafkaClient().prepareResponse(new OffsetFetchResponse(Errors.COORDINATOR_NOT_AVAILABLE, Collections.emptyMap()));\n            env.kafkaClient().prepareResponse(new OffsetFetchResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS, Collections.emptyMap()));"
  },
  {
    "id" : "d8a65c0f-87c0-4c27-85b1-e124e878ceea",
    "prId" : 7296,
    "prUrl" : "https://github.com/apache/kafka/pull/7296#pullrequestreview-301579638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68bd32e2-bfba-4806-b8f0-8ea9857f8b39",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can we have one test case which sends the ListOffset to multiple leaders?",
        "createdAt" : "2019-10-14T23:07:17Z",
        "updatedAt" : "2019-10-19T14:50:21Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "adb3377352be6336d1586a4a160eedbcd5a9a021",
    "line" : 507,
    "diffHunk" : "@@ -1,1 +2625,2629 @@\n    @Test\n    public void testListOffsetsMetadataRetriableErrors() throws Exception {\n\n        Node node0 = new Node(0, \"localhost\", 8120);"
  },
  {
    "id" : "b9ced5b9-abea-4398-955b-48df95056f31",
    "prId" : 7763,
    "prUrl" : "https://github.com/apache/kafka/pull/7763#pullrequestreview-325151365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a37a7f8b-9808-436a-84a2-9a6d568e344c",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "Lots of duplication in these tests. No need to do it in this PR but I'm wondering if wrapping all the\r\n```\r\n final HashMap<Integer, Node> nodes = new HashMap<>();\r\n        nodes.put(0, new Node(0, \"localhost\", 8121));\r\n\r\n        final Cluster cluster =\r\n            new Cluster(\r\n                \"mockClusterId\",\r\n                nodes.values(),\r\n                Collections.<PartitionInfo>emptyList(),\r\n                Collections.<String>emptySet(),\r\n                Collections.<String>emptySet(), nodes.get(0));\r\n\r\n        try (AdminClientUnitTestEnv env = new AdminClientUnitTestEnv(cluster)) {\r\n```\r\nboilerplate into a single method that accepts a callable would look better in this test class",
        "createdAt" : "2019-11-29T20:15:49Z",
        "updatedAt" : "2019-12-02T10:43:06Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "12378682-c73d-40f6-ac46-f2e84ed73112",
        "parentId" : "a37a7f8b-9808-436a-84a2-9a6d568e344c",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "Totally. If you don't mind, I will tackle this in a separate PR. I'd like to keep this one focus on the bugfix.",
        "createdAt" : "2019-12-02T10:43:47Z",
        "updatedAt" : "2019-12-02T10:43:47Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ede68327425a9c327d491be0ff73da51da39177",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1515,1519 @@    @Test\n    public void testDescribeNonConsumerGroups() throws Exception {\n        final HashMap<Integer, Node> nodes = new HashMap<>();\n        nodes.put(0, new Node(0, \"localhost\", 8121));\n"
  }
]