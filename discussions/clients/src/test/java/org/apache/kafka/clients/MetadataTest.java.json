[
  {
    "id" : "644c3c1a-fe4d-47d2-af62-6b50cbd75dfe",
    "prId" : 5027,
    "prUrl" : "https://github.com/apache/kafka/pull/5027#pullrequestreview-121586884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d70226c-d7c2-460c-a8e5-f7b2f8153f94",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Don't we need to update this?",
        "createdAt" : "2018-05-18T21:10:15Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "0d003527-ca53-4a48-af88-9244245bf199",
        "parentId" : "9d70226c-d7c2-460c-a8e5-f7b2f8153f94",
        "authorId" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "body" : "Related to the other comment - `Metadata#update` throws `IllegalStateException` when invoked after `close`.",
        "createdAt" : "2018-05-18T22:17:06Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ba5e2150f77331eebebcfdeb56e84bf747cb5b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +103,107 @@    }\n\n    @Test(expected = IllegalStateException.class)\n    public void testMetadataUpdateAfterClose() {\n        metadata.close();"
  },
  {
    "id" : "5a8efc18-07f2-45d7-beda-8fe76fa9c8d3",
    "prId" : 5027,
    "prUrl" : "https://github.com/apache/kafka/pull/5027#pullrequestreview-121595262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44cf4c91-0232-43b4-b807-04a41455c3b7",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm.. The old logic would let us continue fetching in the case of a timeout. Do you think that was not intentional?",
        "createdAt" : "2018-05-18T21:23:53Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "747bf500-52aa-4d3c-adff-bf82bb73590e",
        "parentId" : "44cf4c91-0232-43b4-b807-04a41455c3b7",
        "authorId" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "body" : "Even if we continued fetching, we would have failed the test at the end. `tearDown()` checks if we saw any background errors and fails the test if we did, so I thought that this change should be reasonable. Let me know if you think otherwise.",
        "createdAt" : "2018-05-18T23:15:09Z",
        "updatedAt" : "2018-07-20T20:23:18Z",
        "lastEditedBy" : "93b1c273-8917-4547-bd53-5101f22161c0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ba5e2150f77331eebebcfdeb56e84bf747cb5b",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +442,446 @@        Thread thread = new Thread() {\n            public void run() {\n                try {\n                    while (metadata.fetch().partitionsForTopic(topic).isEmpty())\n                        metadata.awaitUpdate(metadata.requestUpdate(), maxWaitMs);"
  },
  {
    "id" : "56f1036e-7283-4924-824d-39f8e449da00",
    "prId" : 7795,
    "prUrl" : "https://github.com/apache/kafka/pull/7795#pullrequestreview-328621729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "116aa69c-ac59-4f10-b33d-0f483d6ec875",
        "parentId" : null,
        "authorId" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "body" : "nit: Could we also briefly explain the issue in the tests? Personally, I tend to read tests to understand the expected behavior and the issue with versions earlier than 9 is not immediately apparent",
        "createdAt" : "2019-12-08T11:32:14Z",
        "updatedAt" : "2019-12-08T17:30:54Z",
        "lastEditedBy" : "df911192-d6c6-4af9-8568-f67bf2dcf926",
        "tags" : [
        ]
      },
      {
        "id" : "e127c378-4990-464d-9844-1106018c9501",
        "parentId" : "116aa69c-ac59-4f10-b33d-0f483d6ec875",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Is it OK now?",
        "createdAt" : "2019-12-08T17:31:34Z",
        "updatedAt" : "2019-12-08T17:31:34Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfb88f4f116e0e2932c5dd2e416841824a915257",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +165,169 @@     */\n    @Test\n    public void testIgnoreLeaderEpochInOlderMetadataResponse() {\n        TopicPartition tp = new TopicPartition(\"topic\", 0);\n"
  },
  {
    "id" : "76ce8e3e-1d96-482a-a2f5-fe11c7748f35",
    "prId" : 10952,
    "prUrl" : "https://github.com/apache/kafka/pull/10952#pullrequestreview-706828690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18104799-6d44-4675-b190-9a3d6d1b003f",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We may as well cover the case when the topicId is changed _and_ the epoch is higher.",
        "createdAt" : "2021-07-15T06:20:28Z",
        "updatedAt" : "2021-07-15T06:38:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d02b4c5813f36f8228fe60d758015cbb3147a215",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +409,413 @@        assertEquals(Optional.of(12), metadata.lastSeenLeaderEpoch(tp));\n\n        // We should also update if we see a new topicId even if the epoch is lower\n        Map<String, Uuid> newTopicIds = Collections.singletonMap(\"topic-1\", Uuid.randomUuid());\n        metadataResponse = RequestTestUtils.metadataUpdateWithIds(\"dummy\", 1, Collections.emptyMap(), Collections.singletonMap(\"topic-1\", 1), _tp -> 3, newTopicIds);"
  },
  {
    "id" : "342ac4fa-5e6d-4963-9d1a-b4dd56142c12",
    "prId" : 10952,
    "prUrl" : "https://github.com/apache/kafka/pull/10952#pullrequestreview-706828690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8a92171-6383-41bc-ad5c-155a5e68e999",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "nit: extra newline (and above before the end brace)",
        "createdAt" : "2021-07-15T06:29:51Z",
        "updatedAt" : "2021-07-15T06:38:52Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "d02b4c5813f36f8228fe60d758015cbb3147a215",
    "line" : 243,
    "diffHunk" : "@@ -1,1 +997,1001 @@        assertEquals(Uuid.ZERO_UUID, cluster.topicId(\"validTopic1\"));\n    }\n\n}"
  }
]