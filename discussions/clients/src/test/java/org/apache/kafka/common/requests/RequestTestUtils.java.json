[
  {
    "id" : "8c641b7f-e2d2-4a88-825a-015f99eef4fd",
    "prId" : 9714,
    "prUrl" : "https://github.com/apache/kafka/pull/9714#pullrequestreview-547845936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3b3982e-4073-4728-b941-301ae88de0d4",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "unused argument",
        "createdAt" : "2020-12-09T04:44:58Z",
        "updatedAt" : "2020-12-09T13:51:45Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "36edf7df-6640-44d7-8e8b-1687632221e3",
        "parentId" : "e3b3982e-4073-4728-b941-301ae88de0d4",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Looks like a test bug from the previous PR. Will fix so that it's used.",
        "createdAt" : "2020-12-09T05:30:21Z",
        "updatedAt" : "2020-12-09T13:51:45Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86ed57b683688e56b031287b0588284935e78cc",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@                                                      final Map<String, Errors> topicErrors,\n                                                      final Map<String, Integer> topicPartitionCounts,\n                                                      final short responseVersion) {\n        return metadataUpdateWith(clusterId, numNodes, topicErrors,\n                topicPartitionCounts, tp -> null, MetadataResponse.PartitionMetadata::new, responseVersion);"
  },
  {
    "id" : "f6178c38-d1a6-4856-8d57-75e6f4e01c41",
    "prId" : 9714,
    "prUrl" : "https://github.com/apache/kafka/pull/9714#pullrequestreview-547860886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9e06cd8-3b28-48ca-9384-fd39dbf3e0a1",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "```RequestHeader#write``` has only 2 usages and both of them are in test scope. It should be fine to remove ```RequestHeader#write``` from production.",
        "createdAt" : "2020-12-09T04:51:44Z",
        "updatedAt" : "2020-12-09T13:51:45Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "668e37e2-32ff-4ee5-a414-f445595e8d2f",
        "parentId" : "e9e06cd8-3b28-48ca-9384-fd39dbf3e0a1",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "It's about conceptual integrity for the class. It should provide a mechanism for serialization that doesn't require reaching into its internal structures.",
        "createdAt" : "2020-12-09T05:31:34Z",
        "updatedAt" : "2020-12-09T13:51:45Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "b565c518-95f6-476c-96cc-a4919f60f042",
        "parentId" : "e9e06cd8-3b28-48ca-9384-fd39dbf3e0a1",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "fair enough",
        "createdAt" : "2020-12-09T05:54:02Z",
        "updatedAt" : "2020-12-09T13:51:45Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86ed57b683688e56b031287b0588284935e78cc",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@        ObjectSerializationCache serializationCache = new ObjectSerializationCache();\n        ByteBuffer buffer = ByteBuffer.allocate(header.size(serializationCache));\n        header.write(buffer, serializationCache);\n        buffer.flip();\n        return buffer;"
  }
]