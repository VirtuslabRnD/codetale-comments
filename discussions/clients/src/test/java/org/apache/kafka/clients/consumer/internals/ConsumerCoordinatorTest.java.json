[
  {
    "id" : "10e36bc5-d4b0-4015-9e76-8f0748d829e3",
    "prId" : 6251,
    "prUrl" : "https://github.com/apache/kafka/pull/6251#pullrequestreview-205042221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4ddf767-a8f2-4c9d-8811-20f04a16fced",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can we verify that the request is a LeaveGroupRequest?",
        "createdAt" : "2019-02-19T04:30:35Z",
        "updatedAt" : "2019-02-19T06:13:25Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "08a7e41c-dea9-4ee5-aa2f-fc172383e4d1",
        "parentId" : "a4ddf767-a8f2-4c9d-8811-20f04a16fced",
        "authorId" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "body" : "done.",
        "createdAt" : "2019-02-19T06:14:01Z",
        "updatedAt" : "2019-02-19T06:14:01Z",
        "lastEditedBy" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2102b7c04ffb64ba163904304f9ee7fb9dab3432",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +769,773 @@        client.prepareResponse(new MockClient.RequestMatcher() {\n            @Override\n            public boolean matches(AbstractRequest body) {\n                received.set(true);\n                LeaveGroupRequest leaveRequest = (LeaveGroupRequest) body;"
  },
  {
    "id" : "e91c72fc-5437-450e-8e6c-090c65aa6044",
    "prId" : 6304,
    "prUrl" : "https://github.com/apache/kafka/pull/6304#pullrequestreview-207069872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "475a6ee3-d3c9-4848-9b1e-948cc061b3ae",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "For this test, the old code fails as follow:\r\n```\r\norg.apache.kafka.clients.consumer.internals.ConsumerCoordinatorTest > testInvalidCoordinatorAssignment FAILED\r\n    java.lang.Exception: Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>\r\n\r\n        Caused by:\r\n        java.lang.IllegalArgumentException: Assigned partition test2-0 for non-subscribed topic; subscription is [test1]\r\n            at org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromSubscribed(SubscriptionState.java:195)\r\n            at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.onJoinComplete(ConsumerCoordinator.java:249)\r\n            at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:410)\r\n            at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:344)\r\n            at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:340)\r\n            at org.apache.kafka.clients.consumer.internals.ConsumerCoordinatorTest.testInvalidCoordinatorAssignment(ConsumerCoordinatorTest.java:506)\r\n```",
        "createdAt" : "2019-02-22T23:30:59Z",
        "updatedAt" : "2019-02-23T00:12:25Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "71eca2a2a6a03a63f1deb7540fce228f3eb9d910",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +480,484 @@\n    @Test\n    public void testInvalidCoordinatorAssignment() {\n        final String consumerId = \"invalid_assignment\";\n"
  },
  {
    "id" : "a7d1c288-dc78-44cf-8fb6-11f7992ecb98",
    "prId" : 6304,
    "prUrl" : "https://github.com/apache/kafka/pull/6304#pullrequestreview-207069872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2139abf8-8a55-434d-bec6-cd3a3599f441",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "For this test the old code fails as follow:\r\n```\r\norg.apache.kafka.clients.consumer.internals.ConsumerCoordinatorTest > testOutdatedCoordinatorAssignment FAILED\r\n    java.lang.IllegalArgumentException: Assigned partition test2-0 for non-subscribed topic; subscription is [test1]\r\n        at org.apache.kafka.clients.consumer.internals.SubscriptionState.assignFromSubscribed(SubscriptionState.java:195)\r\n        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.onJoinComplete(ConsumerCoordinator.java:249)\r\n        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.joinGroupIfNeeded(AbstractCoordinator.java:410)\r\n        at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureActiveGroup(AbstractCoordinator.java:344)\r\n        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll(ConsumerCoordinator.java:340)\r\n        at org.apache.kafka.clients.consumer.internals.ConsumerCoordinatorTest.testOutdatedCoordinatorAssignment(ConsumerCoordinatorTest.java:466)\r\n```",
        "createdAt" : "2019-02-22T23:31:38Z",
        "updatedAt" : "2019-02-23T00:12:25Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "71eca2a2a6a03a63f1deb7540fce228f3eb9d910",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +418,422 @@\n    @Test\n    public void testOutdatedCoordinatorAssignment() {\n        final String consumerId = \"outdated_assignment\";\n"
  },
  {
    "id" : "7a8439eb-b679-4cb3-8457-1af2cbc448f6",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-251399676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5caa8e6-797a-4c16-8a3d-a3eb021b9a69",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "```suggestion\r\n    public void testSelectRebalanceProtocol() {\r\n```",
        "createdAt" : "2019-06-18T22:45:38Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +198,202 @@\n    @Test\n    public void testSelectRebalanceProtcol() {\n        List<PartitionAssignor> assignors = new ArrayList<>();\n        assignors.add(new MockPartitionAssignor(Collections.singletonList(PartitionAssignor.RebalanceProtocol.EAGER)));"
  },
  {
    "id" : "2380cf13-d1b0-418d-b855-fd7a36869488",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-251399676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e305235-7b5a-458e-aad9-8bf2d2f6adaa",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "nit: extra line",
        "createdAt" : "2019-06-18T22:57:41Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +616,620 @@        final List<TopicPartition> owned = Collections.emptyList();\n        final List<TopicPartition> oldAssigned = Arrays.asList(t1p);\n\n\n        subscriptions.subscribe(Pattern.compile(\".*\"), rebalanceListener);"
  },
  {
    "id" : "4fd0faba-14e0-4863-a008-8f35898dcb40",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-251399676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3404e6dc-b615-405e-b338-db2f793757d3",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "nit: all on same line (or all separate)?",
        "createdAt" : "2019-06-18T23:00:43Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 574,
    "diffHunk" : "@@ -1,1 +1386,1390 @@\n        try (ConsumerCoordinator coordinator = buildCoordinator(rebalanceConfig, new Metrics(), assignors,\n            true)\n        ) {\n            subscriptions.subscribe(singleton(topic1), rebalanceListener);"
  },
  {
    "id" : "6e8d3473-7bf2-4fd0-a00f-1419da477c39",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-251399676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fcee14e-8eae-40aa-9eef-a4800855d7cd",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "as above",
        "createdAt" : "2019-06-18T23:01:19Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 726,
    "diffHunk" : "@@ -1,1 +1477,1481 @@\n        try (ConsumerCoordinator coordinator = buildCoordinator(rebalanceConfig, new Metrics(), assignors,\n            true)) {\n            subscriptions.subscribe(singleton(topic1), rebalanceListener);\n            client.prepareResponse(groupCoordinatorResponse(node, Errors.NONE));"
  },
  {
    "id" : "a3bb3de9-6186-43aa-8e98-6a9192de1e6f",
    "prId" : 6778,
    "prUrl" : "https://github.com/apache/kafka/pull/6778#pullrequestreview-251408426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4df4431e-6a5e-4756-84fa-bb105ee5822d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a piggy-backed fix: we should encode the metadata for leaders.",
        "createdAt" : "2019-06-18T23:17:31Z",
        "updatedAt" : "2019-06-19T00:38:37Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8440e7defc7a3b3c0fa6c378969b33035ad1a21d",
    "line" : 1058,
    "diffHunk" : "@@ -1,1 +2400,2404 @@                        .setLeader(memberId)\n                        .setMemberId(memberId)\n                        .setMembers(metadata)\n        );\n    }"
  },
  {
    "id" : "0527c5fd-dd02-4a85-a161-78c6d4fbdee7",
    "prId" : 6884,
    "prUrl" : "https://github.com/apache/kafka/pull/6884#pullrequestreview-255490875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "204eeb09-1c7c-43f9-8b44-e68c9b142ac2",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Just checking... this is because we're now not revoking before reassigning, right?",
        "createdAt" : "2019-06-26T21:59:51Z",
        "updatedAt" : "2019-08-08T21:28:14Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "ee961648-52f9-424f-aba0-b19b3dad67bd",
        "parentId" : "204eeb09-1c7c-43f9-8b44-e68c9b142ac2",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "No that's because we check if the partition list if empty or not now: if it is empty, we'd skip it.\r\n\r\nBut after discussing @ableegoldman and @hachikuji on the other pt.2 PR I've decided to revert this and maintain the old behavior.",
        "createdAt" : "2019-06-27T21:30:13Z",
        "updatedAt" : "2019-08-08T21:28:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6041a792f58b0b9a38983a60e052e9018319a6e6",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +499,503 @@        assertEquals(subscription, subscriptions.groupSubscription());\n        assertEquals(0, rebalanceListener.revokedCount);\n        assertNull(rebalanceListener.revoked);\n        assertEquals(1, rebalanceListener.assignedCount);\n        assertEquals(getAdded(owned, assigned), rebalanceListener.assigned);"
  },
  {
    "id" : "bd334a33-4a65-4402-aed3-25c5ff929efb",
    "prId" : 6884,
    "prUrl" : "https://github.com/apache/kafka/pull/6884#pullrequestreview-269912502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c93619bd-fdb1-4939-87f3-d6518911e19d",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "duplicate of line above?",
        "createdAt" : "2019-07-31T00:57:46Z",
        "updatedAt" : "2019-08-08T21:28:14Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "ecd8ec70-5dea-4ea9-b84c-02a3fbeac808",
        "parentId" : "c93619bd-fdb1-4939-87f3-d6518911e19d",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Actually they are not: one is for the count of the triggering, and one for the latest triggered parameters.",
        "createdAt" : "2019-07-31T17:10:03Z",
        "updatedAt" : "2019-08-08T21:28:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "c4e6837c-c664-42c2-b7f5-ea3b266ae4ac",
        "parentId" : "c93619bd-fdb1-4939-87f3-d6518911e19d",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Ah, my bad, didn't read closely",
        "createdAt" : "2019-08-01T22:38:19Z",
        "updatedAt" : "2019-08-08T21:28:14Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "6041a792f58b0b9a38983a60e052e9018319a6e6",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +680,684 @@        assertEquals(toSet(newAssigned), subscriptions.assignedPartitions());\n        assertEquals(revokedCount, rebalanceListener.revokedCount);\n        assertEquals(revoked.isEmpty() ? null : revoked, rebalanceListener.revoked);\n        assertEquals(2, rebalanceListener.assignedCount);\n        assertEquals(getAdded(oldAssigned, newAssigned), rebalanceListener.assigned);"
  }
]