[
  {
    "id" : "6d24af85-5b1f-42e7-b3de-2de74e50148a",
    "prId" : 4625,
    "prUrl" : "https://github.com/apache/kafka/pull/4625#pullrequestreview-100514100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5f87cf9-066c-4dd8-bb3a-66535b15f3e6",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "It should be `t2 wakeup t1` right?",
        "createdAt" : "2018-03-01T17:00:44Z",
        "updatedAt" : "2018-03-01T17:01:01Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "f2d67936-b10e-412a-9561-f21673a06c7f",
        "parentId" : "b5f87cf9-066c-4dd8-bb3a-66535b15f3e6",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Actually the comment is correct. We're testing the scenario where the future is completed by a thread other than the one waiting for it. So the response returns in t1, which completes the future, and wakes up t2.",
        "createdAt" : "2018-03-01T17:03:31Z",
        "updatedAt" : "2018-03-01T17:03:31Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "af805024-8258-46c9-bbde-5b6ca884ee86",
        "parentId" : "b5f87cf9-066c-4dd8-bb3a-66535b15f3e6",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I see. Makes sense!",
        "createdAt" : "2018-03-01T17:07:33Z",
        "updatedAt" : "2018-03-01T17:07:33Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e789bcb63bead18998d51218f58ad8f8ab366c92",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +262,266 @@        client.wakeup();\n\n        // Both threads should complete since t1 should wakeup t2\n        t1.join();\n        t2.join();"
  }
]