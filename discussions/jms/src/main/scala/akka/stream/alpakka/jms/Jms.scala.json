[
  {
    "id" : "06a3adce-ce90-4a83-a0cc-a7c1ade96521",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-163529085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e17fa691-43f8-45e4-a463-10f7d65682ff",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "Added some helper methods for indefinite retries",
        "createdAt" : "2018-09-22T13:12:00Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      },
      {
        "id" : "0f39737c-23a5-4d3e-ba43-9f7ebbf5fe5d",
        "parentId" : "e17fa691-43f8-45e4-a463-10f7d65682ff",
        "authorId" : "0ce149e1-76d5-48b6-baaa-612972fcc400",
        "body" : "Nice!",
        "createdAt" : "2018-10-10T19:43:37Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "0ce149e1-76d5-48b6-baaa-612972fcc400",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +85,89 @@    copy(maxBackoff = Duration(maxBackoff, unit))\n  def withMaxRetries(maxRetries: Int): ConnectionRetrySettings = copy(maxRetries = maxRetries)\n  def withInfiniteRetries(): ConnectionRetrySettings = withMaxRetries(-1)\n\n  def waitTime(retryNumber: Int): FiniteDuration ="
  },
  {
    "id" : "41b0d49f-cea7-41fd-91ca-00fc4a14f37e",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a05bb660-c591-41af-9448-8cb12db34cb9",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "I chose the default send retries to be much more tight than the reconnect retries. If other default settings make more sense, we should provide those.",
        "createdAt" : "2018-09-22T13:12:58Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +98,102 @@                                   backoffFactor: Double = 1.5,\n                                   maxBackoff: FiniteDuration = 500.millis,\n                                   maxRetries: Int = 10) {\n  def withInitialRetry(delay: FiniteDuration): SendRetrySettings = copy(initialRetry = delay)\n  def withInitialRetry(delay: Long, unit: TimeUnit): SendRetrySettings ="
  },
  {
    "id" : "5981d279-d391-4dd0-8ee5-79139a6fda51",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-163531684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cabfe449-7aea-42b0-8484-ec91f6febc96",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "*-ing out passwords since they would be printed out otherwise in error messages I added",
        "createdAt" : "2018-09-22T13:13:51Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      },
      {
        "id" : "bb58e543-f6be-47ce-a130-b4b659eb1848",
        "parentId" : "cabfe449-7aea-42b0-8484-ec91f6febc96",
        "authorId" : "0ce149e1-76d5-48b6-baaa-612972fcc400",
        "body" : "This is good idea to mask out the credentials logging. Thanks for doing this.",
        "createdAt" : "2018-10-10T19:52:09Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "0ce149e1-76d5-48b6-baaa-612972fcc400",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +181,185 @@\nfinal case class Credentials(username: String, password: String) {\n  override def toString = s\"Credentials($username,${\"*\" * password.length})\"\n}\n"
  },
  {
    "id" : "a0aeb387-8a69-4809-a359-f8f1b587febd",
    "prId" : 522,
    "prUrl" : "https://github.com/akka/alpakka/pull/522#pullrequestreview-69155147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0d132ab-6d1c-4dae-947c-3ece29da8e1a",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "üëç ",
        "createdAt" : "2017-10-13T08:20:45Z",
        "updatedAt" : "2017-10-13T12:16:08Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      }
    ],
    "commit" : "55d3b110faced191616e40330ef7d1506c4994e6",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +71,75 @@   */\n  @deprecated(\"Unclear method name, use withProperty instead\")\n  def add(name: String, value: Any) = withProperty(name, value)\n}\n"
  },
  {
    "id" : "ea65bf68-4b53-417e-a44a-84fafbf0b127",
    "prId" : 200,
    "prUrl" : "https://github.com/akka/alpakka/pull/200#pullrequestreview-50217093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9c7cf7e-1d03-4bbd-b8c9-5f902bb6b514",
        "parentId" : null,
        "authorId" : "f671ad62-946e-4691-83e4-79ee05b8b109",
        "body" : "Could you quickly explain what's the reason to introduce this new type instead of using the JMS message type directly?",
        "createdAt" : "2017-03-28T14:37:30Z",
        "updatedAt" : "2017-07-16T06:28:53Z",
        "lastEditedBy" : "f671ad62-946e-4691-83e4-79ee05b8b109",
        "tags" : [
        ]
      },
      {
        "id" : "6df04db6-3196-4189-9077-efc054f54307",
        "parentId" : "f9c7cf7e-1d03-4bbd-b8c9-5f902bb6b514",
        "authorId" : "43661e26-d9f0-457d-882f-ff92f2dd6c20",
        "body" : "The reason is mainly due to the fact that in order to create a JMS message you need to do it via the JmsSession \r\n```\r\nval textMessage: TextMessage = jmsSession.session.createTextMessage(elem.body)\r\n```\r\nand I wanted to be able to pass JMS message properties. \r\n\r\nI am not happy with the solution in part because the API is currently not symmetric: `Sink[akka.stream.alpakka.jms.JmsTextMessage, NotUsed]` vs. `Source[javax.jms.Message, NotUsed]`. Furthermore the new type currently just adds a convenience method to add JMS message properties. \r\n\r\nWe should either get rid of `akka.stream.alpakka.jms.JmsTextMessage` or refactor `JmsSource` to use the new type `akka.stream.alpakka.jms.JmsTextMessage`. I am inclined to go for the first option (getting rid of `akka.stream.alpakka.jms.JmsTextMessage`), but for this we would need to refactor the `JmsConnector` (see related #199).\r\n\r\nAny suggestions?",
        "createdAt" : "2017-07-16T18:24:46Z",
        "updatedAt" : "2017-07-16T18:24:46Z",
        "lastEditedBy" : "43661e26-d9f0-457d-882f-ff92f2dd6c20",
        "tags" : [
        ]
      }
    ],
    "commit" : "05c780be409ca1ae82c696ea32dd0fa9b6cd1c43",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +19,23 @@final case class Queue(name: String) extends Destination\n\nfinal case class JmsTextMessage(body: String, properties: Map[String, Any] = Map.empty) {\n\n  /**"
  }
]