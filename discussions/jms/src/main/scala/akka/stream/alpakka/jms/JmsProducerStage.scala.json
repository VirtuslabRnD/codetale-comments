[
  {
    "id" : "6de93592-0d48-4269-8c3f-e9c20ab21976",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e26f8ff5-bea0-464f-bc9a-45a931fd8fca",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "produced messages can't be null, so no need for the reactive streams compliance check",
        "createdAt" : "2018-09-22T13:24:01Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +9,13 @@import akka.stream.alpakka.jms.JmsProducerStage._\nimport akka.stream.alpakka.jms.JmsProducerMessage._\nimport akka.stream.impl.Buffer\nimport akka.stream.stage._\nimport akka.util.OptionVal"
  },
  {
    "id" : "64e77a11-1825-46f4-b3e5-7268759398bc",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad991aa1-0d47-468e-afc7-064498454259",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "We need some timers for scheduling retries",
        "createdAt" : "2018-09-22T13:24:29Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +32,36 @@\n  override def createLogic(inheritedAttributes: Attributes): GraphStageLogic =\n    new TimerGraphStageLogic(shape) with JmsProducerConnector {\n\n      /*"
  },
  {
    "id" : "1c17c9cd-7390-4666-9cb0-17bb149d556b",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04f0a058-c32d-457e-bd71-023a4facf75d",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "The in-flight messages don't store the producers any more. Producer handling is now de-coupled from the messages.",
        "createdAt" : "2018-09-22T13:25:26Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +50,54 @@\n      // in-flight messages with the producers that were used to send them.\n      private val inFlightMessages: Buffer[Holder[E]] =\n        Buffer(settings.sessionCount, settings.sessionCount)\n"
  },
  {
    "id" : "32a8d35f-5c9c-4d6e-9d97-2c7faca41c35",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58811f9f-6a69-4273-bab8-20f87fc6c72f",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "Extracted the send logic to a separate method that we can call, and storing the information we need for re-trying in the `SendAttempt` class",
        "createdAt" : "2018-09-22T13:27:16Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +92,96 @@                val holder = new Holder[E](NotYetThere)\n                inFlightMessages.enqueue(holder)\n                sendWithRetries(SendAttempt[E](m, holder))\n              case _: PassThroughMessage[_, _] =>\n                val holder = new Holder[E](NotYetThere)"
  },
  {
    "id" : "3a08c56d-03e1-48fc-bcaa-976ebd32523f",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157909987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7df0bce8-d193-4298-9bc9-a98c98ffaeea",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "As we're already in the graph stage thread,  we can continue with handling the pass-through message directly. Also, the `holder.apply` method got stripped from the `futureCB`, as it got replaced with the `sendCompletedCB` async callback.",
        "createdAt" : "2018-09-22T13:29:37Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +97,101 @@                inFlightMessages.enqueue(holder)\n                holder(Success(elem))\n                pushNextIfPossible()\n            }\n"
  },
  {
    "id" : "980092f4-c1b9-4c07-9c2f-a6fddde2503c",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157910090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd56e9a1-7dcd-46a5-90f3-39bedbac22b4",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "everything that is wrapped in a `Failure` is `NonFatal` (except you really try hard)",
        "createdAt" : "2018-09-22T13:33:19Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +181,185 @@              pullIfNeeded() // Ask for the next element.\n\n            case Failure(ex) => handleFailure(ex, holder)\n          }\n        }"
  },
  {
    "id" : "bd383967-e848-4006-977a-3477ee6b4ae0",
    "prId" : 1227,
    "prUrl" : "https://github.com/akka/alpakka/pull/1227#pullrequestreview-157910109",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b2188b4-94c9-461a-961b-3302dbf1b7bf",
        "parentId" : null,
        "authorId" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "body" : "future callback is not needed, producer is handled outside of the message, so the holder got a lot simpler.",
        "createdAt" : "2018-09-22T13:34:00Z",
        "updatedAt" : "2018-10-16T14:38:04Z",
        "lastEditedBy" : "d15f37f8-2910-4165-af49-f865f0902a09",
        "tags" : [
        ]
      }
    ],
    "commit" : "c480a1b30e90d1ae2006515699af31ae97812367",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +202,206 @@   * To get a condensed view of what the Holder is about, have a look there too.\n   */\n  class Holder[A](var elem: Try[A]) extends (Try[A] => Unit) {\n\n    // To support both fail-fast when the supervision directive is Stop"
  }
]