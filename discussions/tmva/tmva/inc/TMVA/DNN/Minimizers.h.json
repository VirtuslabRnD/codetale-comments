[
  {
    "id" : "c6382ad2-5379-478a-8315-4b733fc1f2e3",
    "prId" : 494,
    "prUrl" : "https://github.com/root-project/root/pull/494#pullrequestreview-31830555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95a42adc-1f31-40f6-a32a-a13728e501eb",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I preferred to change this to match the code rather than the other way around. The code has 0.999 in the test.",
        "createdAt" : "2017-04-10T12:45:17Z",
        "updatedAt" : "2017-04-13T06:10:37Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed34e97fd947a7f6ff9eee7f14bace759b240228",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +44,48 @@*   and the values with which the step counter is increased each time the\n*   HasConverged() member function is called. A convergence step is defined as\n*   a step in which the test error is NOT less than 0.999 times the current\n*   minimal test error that has been reached. If between two subsequent calls\n*   to HasConverged(Double_t) the test error has not been sufficiently reduced"
  },
  {
    "id" : "c52cb1a7-bc87-4890-bcbd-9291acd8e1fd",
    "prId" : 494,
    "prUrl" : "https://github.com/root-project/root/pull/494#pullrequestreview-32083776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4ddb34-fbbc-472e-8a09-a8850698b365",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "This is not introduced by you but: what happens for `nThreads == 4`, `nTrainingSamples == 7`? What does `batches.push_back()` do below, for `i == 1` and ` j == 3`?",
        "createdAt" : "2017-04-11T12:07:19Z",
        "updatedAt" : "2017-04-13T06:10:37Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed34e97fd947a7f6ff9eee7f14bace759b240228",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +301,305 @@      for (fStepCount = 0; fStepCount < fTestInterval; fStepCount++) {\n         trainLoader.Shuffle();\n         for (size_t i = 0; i < batchesInEpoch; i += nThreads) {\n            batches.clear();\n            for (size_t j = 0; j < nThreads; j++) batches.push_back(trainLoader.GetBatch());"
  },
  {
    "id" : "7d57b5fb-3ca8-4073-b416-f8cd152ba613",
    "prId" : 494,
    "prUrl" : "https://github.com/root-project/root/pull/494#pullrequestreview-32093215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83aaef1-ca1d-4734-9b14-8797be694226",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Is this overload actually needed? I find it awkward to have these two public overloads, where that `Has` actually sets something... Then again, the same is true for the other one. Nothing tells me (interface-wise, except the missing `const`-ness...) that `HasConverged` must not be called 5 times in a row - even though it sounds like it's just testing some condition.\r\n\r\nWhy not split this (in a subsequent PR) into `UpdateConvergeance` and `HasConverged()`, where the latter simply returns `fConvergenceCount >= fConvergenceSteps`?",
        "createdAt" : "2017-04-11T12:25:52Z",
        "updatedAt" : "2017-04-13T06:10:37Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "e7d1bc53-fc75-4510-909c-12a28cb88afa",
        "parentId" : "d83aaef1-ca1d-4734-9b14-8797be694226",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "My change is only a typo fix in the documentation again, but I agree with your comments. I may do a more thorough rewrite if Lorenzo likes your idea too. I didn't want to break the interface for now, since these are public and every user is likely to use it, since Train() and TrainMomentum() are mostly only used for testing.",
        "createdAt" : "2017-04-11T12:38:44Z",
        "updatedAt" : "2017-04-13T06:10:37Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed34e97fd947a7f6ff9eee7f14bace759b240228",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +157,161 @@    *  period and uses the provided test error value to determine if the\n    *  minimization has converged. */\n   bool HasConverged(Scalar_t testError);\n\n   size_t   GetConvergenceCount() const {return fConvergenceCount;}"
  }
]