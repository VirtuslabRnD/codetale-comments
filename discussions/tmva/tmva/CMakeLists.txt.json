[
  {
    "id" : "a0b3f251-e9fe-4bf4-838f-0c0935db80ec",
    "prId" : 2219,
    "prUrl" : "https://github.com/root-project/root/pull/2219#pullrequestreview-132443081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e184be6-4cb4-44a1-a436-80e794687d58",
        "parentId" : null,
        "authorId" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "body" : "Does this print the path to the installed library (which I think would be very helpful when debugging!)",
        "createdAt" : "2018-06-27T09:26:17Z",
        "updatedAt" : "2018-08-10T07:51:30Z",
        "lastEditedBy" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "tags" : [
        ]
      },
      {
        "id" : "65244ad6-c3ac-45ba-a9aa-d1340a56c4ec",
        "parentId" : "0e184be6-4cb4-44a1-a436-80e794687d58",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "Yes, it prints that.\r\n\r\nAnd thanks for having seen the mixmcx file committed by mistake",
        "createdAt" : "2018-06-27T13:51:50Z",
        "updatedAt" : "2018-08-10T07:51:30Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2233f13536c501964a54c9a3be107a331f7eaa15",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +77,81 @@#---Handle BLAS dependent code. -----------------\nif(BLAS_FOUND AND imt)\n   message(STATUS \"Using TMVA-DNN with BLAS installation: ${BLAS_LIBRARIES}\") \n  set(DNN_CPU_LIBRARIES MathCore Matrix ${BLAS_LINKER_FLAGS} ${BLAS_LIBRARIES} ${TBB_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT}) \n  include_directories(SYSTEM ${TBB_INCLUDE_DIRS})"
  },
  {
    "id" : "3a24770b-753f-494a-a2bc-1b252ee56242",
    "prId" : 2944,
    "prUrl" : "https://github.com/root-project/root/pull/2944#pullrequestreview-173344388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e5399f5-310b-4480-8124-2c4d04b588d6",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "If you are addressing the case Vdt is external, please try to use `target_include_directories()` to propagate the include to dependencies of TMVA.",
        "createdAt" : "2018-11-09T09:45:36Z",
        "updatedAt" : "2018-11-09T09:45:54Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "a4c9cf7d-0400-409d-8ff3-778c7b189711",
        "parentId" : "8e5399f5-310b-4480-8124-2c4d04b588d6",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "this would become\r\n```\r\ntarget_include_directories(TMVA PRIVATE ${VDT_INCLUDE_DIRS})\r\n```\r\nright?",
        "createdAt" : "2018-11-09T10:00:07Z",
        "updatedAt" : "2018-11-09T10:00:07Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "80ad0917-0f22-4cb2-ae9f-f9097226bd51",
        "parentId" : "8e5399f5-310b-4480-8124-2c4d04b588d6",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Yes, but you may need to make it PUBLIC if Vdt is used in TMVA headers.",
        "createdAt" : "2018-11-09T10:02:46Z",
        "updatedAt" : "2018-11-09T10:02:46Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "f14af336-80e9-488d-9044-4a5874f7cca1",
        "parentId" : "8e5399f5-310b-4480-8124-2c4d04b588d6",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Also, it needs to come after the target has been created in the file.",
        "createdAt" : "2018-11-09T10:05:04Z",
        "updatedAt" : "2018-11-09T10:05:21Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "74b7e13b953c95170419ad73d8df83934f8f1a7f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +227,231 @@endif()\n\n\nif(imt)\n  set(TMVA_DEPENDENCIES Imt)"
  },
  {
    "id" : "d10930b4-ecd9-4e05-bfc4-5c3d01a6a452",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-384684854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04d8f655-f754-42bd-b999-ba55963a3856",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Stray spacing.",
        "createdAt" : "2020-03-31T11:23:15Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "d1eff4db-ef85-4a0c-a82b-6cf4309fcffb",
        "parentId" : "04d8f655-f754-42bd-b999-ba55963a3856",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "I do not like auto-formating tools since @stwunsch many time complains that I reformat complete roofit code just by touching one line. I can look through once again to find these places",
        "createdAt" : "2020-03-31T12:32:41Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +19,23 @@if(tmva-gpu)\n  set(dictoptions -I${CUDA_TOOLKIT_INCLUDE})\n\n  set(TMVA_GPU_HEADERS\n       TMVA/DNN/Architectures/Cuda.h"
  },
  {
    "id" : "d19bc6ae-afcf-4512-9d86-e87e0c46c94d",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-397053562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d34fe3a-7079-463f-afaa-a12d1c47ad85",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "If users build against TMVA (say they `#include` a TMVA header`) - should they be able to find the VDT headers? Yes they should: `tmva/tmva/src/DNN/Architectures/Cpu/ActivationFunctions.hxx` includes them. But that means that these headers *should* be `PUBLIC` and `ActivationFunctions.hxx` cannot be used by users without VDT. @lmoneta what's the plan here?",
        "createdAt" : "2020-04-20T16:11:09Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "75705eee-4472-4cb4-a8aa-66b4c3f5d594",
        "parentId" : "5d34fe3a-7079-463f-afaa-a12d1c47ad85",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It is only for ROOT compilation itself.\r\nAfter ROOT is build, vdt includes should be found in `$ROOTSYS/include` or in some system directories. Probably, very special case when `vdt` installed in custom paths, must be covered in the user makefiles.\r\nBut anyway - I do not see how ROOT cmake files can help users to build their code - they are not available at all when user code is build. ",
        "createdAt" : "2020-04-20T16:50:50Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "07043f30-bd3d-4c30-8098-3c213cd26979",
        "parentId" : "5d34fe3a-7079-463f-afaa-a12d1c47ad85",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "The ActivationFunctions.hxx is a header included only in the source file, it is not public. Also the vet header is protected by the pre-processor macro R__HAS_VDT. If it is enables the vdt header should be visible, correct ? ",
        "createdAt" : "2020-04-21T07:15:48Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      },
      {
        "id" : "a92ca93c-f0dc-429a-95e2-8242c1a07544",
        "parentId" : "5d34fe3a-7079-463f-afaa-a12d1c47ad85",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Lorenzo is right. These includes are only used in source directories and not provided to `$ROOTSYS/include` directory. And even then - vdt will be available in `$ROOTSYS/include/vdt` subdirectory - and can be used after checking `R__HAS_VDT`\r\n\r\n@Axel-Naumann Once again - this PR is only about compilation of ROOT itself. \r\nThere should be no changes for users",
        "createdAt" : "2020-04-21T07:22:27Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +435,439 @@\nif(vdt OR builtin_vdt)\n  target_include_directories(TMVA PRIVATE ${VDT_INCLUDE_DIRS})\nendif()\n"
  },
  {
    "id" : "e357b9af-f72e-46a2-8179-3235ed627343",
    "prId" : 5181,
    "prUrl" : "https://github.com/root-project/root/pull/5181#pullrequestreview-397064418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd93740a-002c-4444-a5eb-af6d897ffbd9",
        "parentId" : null,
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "Are we not adding two times the CUDA_INCLUDE_DIRS to th include path here ? ",
        "createdAt" : "2020-04-21T07:27:13Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      },
      {
        "id" : "359315b9-e547-4f26-b408-87d04e152948",
        "parentId" : "cd93740a-002c-4444-a5eb-af6d897ffbd9",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "@lmoneta You are right, I commit small change to avoid this",
        "createdAt" : "2020-04-21T07:37:33Z",
        "updatedAt" : "2020-04-22T09:24:56Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5da3ae4dc0aff806ce66b7c14d562c58db07307",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +464,468 @@                   src/DNN/Architectures/Cudnn/TensorDataLoader.cxx\n                   src/DNN/Architectures/Cudnn.cu)\n    target_include_directories(TMVA PRIVATE ${CUDA_INCLUDE_DIRS} ${CUDNN_INCLUDE_DIRS} )\n    target_link_libraries(TMVA PRIVATE ${CUDA_CUBLAS_LIBRARIES} ${CUDNN_LIBRARIES})\n  else()"
  }
]