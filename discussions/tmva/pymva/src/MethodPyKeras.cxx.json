[
  {
    "id" : "816a2149-3ae0-4e5c-b39a-41b3632bcbce",
    "prId" : 2566,
    "prUrl" : "https://github.com/root-project/root/pull/2566#pullrequestreview-209546105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3058cfbc-fb00-416f-9592-7af619a5e949",
        "parentId" : null,
        "authorId" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "body" : "Remove this and just use `fNumThreads` directly?",
        "createdAt" : "2019-03-01T11:48:49Z",
        "updatedAt" : "2019-03-08T13:46:35Z",
        "lastEditedBy" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "218f8c32138a529b045a1156b8082e1d586a3b01",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +173,177 @@      PyRunString(\"from keras.backend import tensorflow_backend as K\");\n      // in case specify number of threads\n      int num_threads = fNumThreads;\n      if (num_threads > 0) {\n         Log() << kINFO << \"Setting the CPU number of threads =  \"  << num_threads << Endl;"
  },
  {
    "id" : "f6ff1cbc-e992-4d85-bf14-8cf0dfaaf20a",
    "prId" : 5632,
    "prUrl" : "https://github.com/root-project/root/pull/5632#pullrequestreview-420832026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "There is no documentation that describes how the feature works. It must be explained somewhere that the external file requires an object with name `load_model_custom_objects`, which is a dictionary, that the loading works.",
        "createdAt" : "2020-05-29T07:04:12Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "5a94a203-b07a-44b3-a0b5-430bab7dd24c",
        "parentId" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Also the object has to be in global scope!",
        "createdAt" : "2020-05-29T07:05:33Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "bba57bab-ff9f-457a-a113-592c11a8d3c6",
        "parentId" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "Hi Stefan, \r\nActually I have verified the user object, load_model_custom_objects, must be in the local namespace defined by the method, otherwise it will not work.\r\n\r\nThe problem is in the user function implementations. They are in a different namespace, and in the example above K = keras.backend must be defined in the global namespace. \r\nA possible solution is to define the  lines importing keras and setting K in global namespace to make it work or to execute user code in both local and global namespace. \r\nThis also works.",
        "createdAt" : "2020-05-29T10:24:05Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9731ef0272f7933616597962374c3cc052958b66",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +237,241 @@   Log() << kINFO << \" Setup Keras Model \" << Endl;\n\n   PyRunString(\"load_model_custom_objects=None\");\n\n"
  }
]