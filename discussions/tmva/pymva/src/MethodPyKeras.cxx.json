[
  {
    "id" : "816a2149-3ae0-4e5c-b39a-41b3632bcbce",
    "prId" : 2566,
    "prUrl" : "https://github.com/root-project/root/pull/2566#pullrequestreview-209546105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3058cfbc-fb00-416f-9592-7af619a5e949",
        "parentId" : null,
        "authorId" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "body" : "Remove this and just use `fNumThreads` directly?",
        "createdAt" : "2019-03-01T11:48:49Z",
        "updatedAt" : "2019-03-08T13:46:35Z",
        "lastEditedBy" : "a7291a90-8576-4162-b01b-b44d230129f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "218f8c32138a529b045a1156b8082e1d586a3b01",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +173,177 @@      PyRunString(\"from keras.backend import tensorflow_backend as K\");\n      // in case specify number of threads\n      int num_threads = fNumThreads;\n      if (num_threads > 0) {\n         Log() << kINFO << \"Setting the CPU number of threads =  \"  << num_threads << Endl;"
  },
  {
    "id" : "f6ff1cbc-e992-4d85-bf14-8cf0dfaaf20a",
    "prId" : 5632,
    "prUrl" : "https://github.com/root-project/root/pull/5632#pullrequestreview-420832026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "There is no documentation that describes how the feature works. It must be explained somewhere that the external file requires an object with name `load_model_custom_objects`, which is a dictionary, that the loading works.",
        "createdAt" : "2020-05-29T07:04:12Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "5a94a203-b07a-44b3-a0b5-430bab7dd24c",
        "parentId" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Also the object has to be in global scope!",
        "createdAt" : "2020-05-29T07:05:33Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "bba57bab-ff9f-457a-a113-592c11a8d3c6",
        "parentId" : "66c7fc00-d53d-4cd6-9e85-a3500e91c257",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "Hi Stefan, \r\nActually I have verified the user object, load_model_custom_objects, must be in the local namespace defined by the method, otherwise it will not work.\r\n\r\nThe problem is in the user function implementations. They are in a different namespace, and in the example above K = keras.backend must be defined in the global namespace. \r\nA possible solution is to define the  lines importing keras and setting K in global namespace to make it work or to execute user code in both local and global namespace. \r\nThis also works.",
        "createdAt" : "2020-05-29T10:24:05Z",
        "updatedAt" : "2020-06-10T09:45:41Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9731ef0272f7933616597962374c3cc052958b66",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +237,241 @@   Log() << kINFO << \" Setup Keras Model \" << Endl;\n\n   PyRunString(\"load_model_custom_objects=None\");\n\n"
  },
  {
    "id" : "dabeda0c-266b-431f-9633-599939604c88",
    "prId" : 6568,
    "prUrl" : "https://github.com/root-project/root/pull/6568#pullrequestreview-505403437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f26e638-04c1-4bf1-b395-c88f1664474c",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "This can be an `else` clause.",
        "createdAt" : "2020-10-07T11:08:13Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "a0cf288c-e5e8-4ae5-b5a6-4338064e7d70",
        "parentId" : "2f26e638-04c1-4bf1-b395-c88f1664474c",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "I don;t see the problem here. `ret` is updated in line 218 and it would not be done if I add an `else` clause",
        "createdAt" : "2020-10-08T07:01:57Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      },
      {
        "id" : "b14f6740-c66f-4483-91df-7fee64d714ed",
        "parentId" : "2f26e638-04c1-4bf1-b395-c88f1664474c",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Yep, right!",
        "createdAt" : "2020-10-09T06:49:57Z",
        "updatedAt" : "2020-10-09T06:49:58Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2adf4dc69e52753ff7db4f75033183d55f1e937",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +221,225 @@      auto ret = PyRun_String(\"import tensorflow as tf\", Py_single_input, fGlobalNS, fLocalNS);\n      if (ret != nullptr) ret = PyRun_String(\"import tensorflow as tf\", Py_single_input, fGlobalNS, fGlobalNS);\n      if (ret == nullptr) {\n         Log() << kFATAL << \"Importing TensorFlow failed\" << Endl;\n      }"
  },
  {
    "id" : "5cdf6e85-7c9e-45e3-8aae-24ad593b07a3",
    "prId" : 6568,
    "prUrl" : "https://github.com/root-project/root/pull/6568#pullrequestreview-503766412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc254faa-cf9a-47a2-ab4f-547e1d8f408a",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Here you have two times `if(ret != nullptr)`, you can merge them.",
        "createdAt" : "2020-10-07T11:10:23Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2adf4dc69e52753ff7db4f75033183d55f1e937",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +193,197 @@      // need importing also in global namespace\n      if (ret != nullptr) ret = PyRun_String(\"import keras\", Py_single_input, fGlobalNS, fGlobalNS);\n      if (ret != nullptr)\n         kerasIsPresent = kTRUE;\n      if (kerasIsPresent) {"
  },
  {
    "id" : "86738f52-17fc-437d-90f6-e0e23f73c837",
    "prId" : 6568,
    "prUrl" : "https://github.com/root-project/root/pull/6568#pullrequestreview-504483095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c55dcffa-cebf-40d6-965a-db2db517ba69",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "I think the logic here is not fully correct. What happens if we have `tfVersion < 2` and `fUseTFKeras == 1`? Are we sure that `kerasIsPresent` or `kerasIsCompatible` is false so we error out gracefully?",
        "createdAt" : "2020-10-07T11:13:07Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "6eaf54c4-60bf-44af-b4bd-5c72857fc56d",
        "parentId" : "c55dcffa-cebf-40d6-965a-db2db517ba69",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "In that case if Keras is present normal Keras with Tensorflow 1 backend is used. If Keras is not present we flag a fatal error",
        "createdAt" : "2020-10-08T07:04:49Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      },
      {
        "id" : "36b88b69-a0e2-469c-ab4f-0faa2bb9d742",
        "parentId" : "c55dcffa-cebf-40d6-965a-db2db517ba69",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "I realized the warning/error message is misleading. I will fix it",
        "createdAt" : "2020-10-08T07:07:25Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2adf4dc69e52753ff7db4f75033183d55f1e937",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +231,235 @@\n      if (tfVersion < 2) {\n         if (fUseTFKeras == 1) {\n            Log() << kWARNING << \"Using TensorFlow version 1.x which does not contain tf.keras - use then TensorFlow as Keras backend\" << Endl;\n            fUseTFKeras = kFALSE;"
  },
  {
    "id" : "6218e9be-2d78-4cc1-83bc-c6da439554f9",
    "prId" : 6568,
    "prUrl" : "https://github.com/root-project/root/pull/6568#pullrequestreview-504482100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edfbf0b8-0af2-47e6-ba3a-a8c0e8269ef2",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Should this be a warning or an error?",
        "createdAt" : "2020-10-07T11:14:10Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "1b33ea79-d115-4105-b246-55d79579f8a0",
        "parentId" : "edfbf0b8-0af2-47e6-ba3a-a8c0e8269ef2",
        "authorId" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "body" : "I think a warning is fine. This has been the case so far",
        "createdAt" : "2020-10-08T07:05:45Z",
        "updatedAt" : "2020-10-08T07:59:44Z",
        "lastEditedBy" : "3cdeea47-0921-4380-9f86-57ac2ba3546a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2adf4dc69e52753ff7db4f75033183d55f1e937",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +306,310 @@               << Endl;\n      if (!fGpuOptions.IsNull()) {\n         Log() << kWARNING << \"Cannot set the given GPU option \" << fGpuOptions\n               << \" when not using tensorflow as  backend\" << Endl;\n      }"
  }
]