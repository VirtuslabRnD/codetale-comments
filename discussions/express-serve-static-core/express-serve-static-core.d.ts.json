[
  {
    "id" : "0b24de47-d840-4b37-bbba-18ce67623932",
    "prId" : 10025,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c521edda-d27c-41eb-a4bb-7719588b35c8",
        "parentId" : null,
        "authorId" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "body" : "Does `path` accept `(string | RegExp)[]`? It used not to\n",
        "createdAt" : "2016-07-08T19:38:42Z",
        "updatedAt" : "2016-07-11T18:36:18Z",
        "lastEditedBy" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "tags" : [
        ]
      },
      {
        "id" : "ad541a16-3669-4164-a8e0-009adcaa2925",
        "parentId" : "c521edda-d27c-41eb-a4bb-7719588b35c8",
        "authorId" : "a68dad48-5328-46a6-bd8e-d46e43538f30",
        "body" : "YES. Actually, `path` also accept ['string', ['string'], [['string']], [[\\reg\\]]] and `handlers` accept [handler, [handler], [[handler, handler]]], but this is difficult to define in TypeScript. So I just declare path as `string | RegExp | (string | RegExp)[]`, handler as `RequestHandler | ErrorRequestHandler | (RequestHandler | ErrorRequestHandler)[]`\n\noriginal version of `path` is defined to accept `string` `[string]` `RegExp`. There is already `string[]` in it.\n\n``` TS\nuse(path: string[], ...handler: RequestHandlerParams[]): T;\n```\n",
        "createdAt" : "2016-07-09T01:22:02Z",
        "updatedAt" : "2016-07-11T18:36:18Z",
        "lastEditedBy" : "a68dad48-5328-46a6-bd8e-d46e43538f30",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dd6ead8f045e40c78caf49404ccc4240c0c7c98",
    "line" : null,
    "diffHunk" : "@@ -1,1 +35,39 @@\n    interface IRouterMatcher<T> {\n        (path: PathParams, ...handlers: RequestHandler[]): T;\n        (path: PathParams, ...handlers: RequestHandlerParams[]): T;\n    }"
  }
]