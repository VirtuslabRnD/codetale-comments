[
  {
    "id" : "c29844c8-dbca-449d-98bb-614adc8e3a4b",
    "prId" : 10995,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/10995#pullrequestreview-45882759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcec2478-0b00-4e32-9e31-28301bc5422b",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Sure, this can be helpful, but we need a script that works with linux and windows.\r\nWhat if we did this on linux, and on windows we simply defaulted to 3.5 and 5.2?\r\nOn windows, this script runs under msys\r\n",
        "createdAt" : "2017-06-22T21:33:31Z",
        "updatedAt" : "2017-06-23T13:30:21Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "877c740b-831b-4c7b-bb3c-cfa2486a6580",
        "parentId" : "fcec2478-0b00-4e32-9e31-28301bc5422b",
        "authorId" : "0d926870-310b-41c9-b0ea-46cdc7661c9c",
        "body" : "Yes, you are right. And I think this is done automatically (Not tested on Windows yet. I don't have a Windows machine available now for me to test).\r\n\r\nIn case of errors, for example if on windows, or the samples are not installed with cuda, etc. The function `get_native_cuda_compute_capabilities` will exit without outputting anything (and the configure script will keep running). In this case, `native_cuda_compute_capabilities` will be empty and\r\n```bash\r\ndefault_cuda_compute_capabilities=${native_cuda_compute_capabilities:-\"3.5,5.2\"}\r\n```\r\n\r\nwill automatically gives `3.5,5.2`",
        "createdAt" : "2017-06-23T01:25:53Z",
        "updatedAt" : "2017-06-23T13:30:21Z",
        "lastEditedBy" : "0d926870-310b-41c9-b0ea-46cdc7661c9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "897aacfed7fbcef49b28a43acb69407ca01583d3",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +657,661 @@# Configure the compute capabilities that TensorFlow builds for.\n# Since Cuda toolkit is not backward-compatible, this is not guaranteed to work.\nfunction get_native_cuda_compute_capabilities {\n  device_query_bin=\"$CUDA_TOOLKIT_PATH/extras/demo_suite/deviceQuery\" # Also works on Windows without .exe\n  \"$device_query_bin\" | grep 'Capability' | grep -o '[0-9]*\\.[0-9]*' | sed ':a;{N;s/\\n/,/};ba'"
  },
  {
    "id" : "bc82ea3d-88b9-4991-8e0b-5dfaf1258382",
    "prId" : 10307,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/10307#pullrequestreview-42172881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc14bc8c-d18e-476a-be70-d34698ca470f",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "same as above, this has to be written to bazelrc.",
        "createdAt" : "2017-06-03T05:28:28Z",
        "updatedAt" : "2017-06-06T00:05:52Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "71629be1-86c7-4537-8c62-4ece9b92b16e",
        "parentId" : "cc14bc8c-d18e-476a-be70-d34698ca470f",
        "authorId" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "body" : "Fixed accordingly. ",
        "createdAt" : "2017-06-05T22:40:20Z",
        "updatedAt" : "2017-06-06T00:05:52Z",
        "lastEditedBy" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "tags" : [
        ]
      }
    ],
    "commit" : "27d9b35d6d570db34dc58d895296a624bfcf7934",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +633,637 @@\n# Set default CUDNN version if not set\nif [ -z \"$TF_CUDNN_VERSION\" ]; then\n  TF_CUDNN_VERSION=\"6\"\n  export TF_CUDNN_VERSION"
  },
  {
    "id" : "1544f6a7-f127-408e-9bfe-67b5d264f268",
    "prId" : 10307,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/10307#pullrequestreview-42182410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "608a983f-c707-4c36-9e3f-d745e392c75e",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Let's also reflect this behavioral change in line 469. The part in the parenthesis can say (use empty to default to CUDA 8.0)",
        "createdAt" : "2017-06-05T23:48:25Z",
        "updatedAt" : "2017-06-06T00:05:52Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "27d9b35d6d570db34dc58d895296a624bfcf7934",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +527,531 @@  export TF_CUDA_VERSION \nfi\nwrite_action_env_to_bazelrc \"TF_CUDA_VERSION\" \"$TF_CUDA_VERSION\" \n\n# Set up which gcc nvcc should use as the host compiler"
  },
  {
    "id" : "4a9c3c49-df02-4a06-9021-901ec622d29f",
    "prId" : 10307,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/10307#pullrequestreview-42184715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d735fca-b542-4d47-8fb2-99baf0548cad",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Ditto above, line 564 this time. Default to cuDNN 6.0",
        "createdAt" : "2017-06-05T23:49:34Z",
        "updatedAt" : "2017-06-06T00:05:52Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "1ee4c2a3-6c74-4fee-8a19-375b2ff86883",
        "parentId" : "9d735fca-b542-4d47-8fb2-99baf0548cad",
        "authorId" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "body" : "Good point. Updated.",
        "createdAt" : "2017-06-06T00:06:20Z",
        "updatedAt" : "2017-06-06T00:06:20Z",
        "lastEditedBy" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "tags" : [
        ]
      }
    ],
    "commit" : "27d9b35d6d570db34dc58d895296a624bfcf7934",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +637,641 @@  export TF_CUDNN_VERSION\nfi\nwrite_action_env_to_bazelrc \"TF_CUDNN_VERSION\" \"$TF_CUDNN_VERSION\"\n\n# Configure the compute capabilities that TensorFlow builds for."
  },
  {
    "id" : "849b40b1-f857-4f86-839b-85cb5285573c",
    "prId" : 9580,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/9580#pullrequestreview-36371784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "029fe1bc-882a-4723-8d26-882d0dbc8a79",
        "parentId" : null,
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "Please add a line in .gitignore to ignore third_party/mkl/*",
        "createdAt" : "2017-05-04T19:34:35Z",
        "updatedAt" : "2017-05-04T20:02:59Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "8b2fde9a-e571-4ad1-9aae-a9db3c1726fc",
        "parentId" : "029fe1bc-882a-4723-8d26-882d0dbc8a79",
        "authorId" : "b810f942-5f09-4971-91c8-b1fd643b001d",
        "body" : "Done.",
        "createdAt" : "2017-05-04T20:00:12Z",
        "updatedAt" : "2017-05-04T20:02:59Z",
        "lastEditedBy" : "b810f942-5f09-4971-91c8-b1fd643b001d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b94dfae351c295b3608434c728d50044fdce156",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +212,216 @@    MKLURL=\"https://github.com/01org/mkl-dnn/releases/download/$GITHUB_RELEASE_TAG/$ARCHIVE_BASENAME\"\n    if ! [ -e \"$DST/third_party/mkl/$ARCHIVE_BASENAME\" ]; then\n      wget --no-check-certificate -P $DST/third_party/mkl/ $MKLURL\n    fi\n    tar -xzf $DST/third_party/mkl/$ARCHIVE_BASENAME -C $DST/third_party/mkl/"
  },
  {
    "id" : "bcabaa84-499e-4905-b114-a185e43528bd",
    "prId" : 8218,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/8218#pullrequestreview-25895745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b96df5-d873-4075-9e3e-ea2bfbc4991c",
        "parentId" : null,
        "authorId" : "f7beb1db-3bff-4489-9df0-c170cb1132d1",
        "body" : "Why the `[ ... ] -> [[ ... ]]` changes?  Was it wrong before?",
        "createdAt" : "2017-03-08T21:55:22Z",
        "updatedAt" : "2017-03-14T18:49:26Z",
        "lastEditedBy" : "f7beb1db-3bff-4489-9df0-c170cb1132d1",
        "tags" : [
        ]
      },
      {
        "id" : "ea3f10c7-61d6-4460-8e87-6ecd76592484",
        "parentId" : "62b96df5-d873-4075-9e3e-ea2bfbc4991c",
        "authorId" : "f5057dbd-e005-4936-b4bd-2392dfaaa625",
        "body" : "`[[` is bash builtin syntax whereas `[` is a literal command line program that needs to be spawned.",
        "createdAt" : "2017-03-08T21:58:55Z",
        "updatedAt" : "2017-03-14T18:49:26Z",
        "lastEditedBy" : "f5057dbd-e005-4936-b4bd-2392dfaaa625",
        "tags" : [
        ]
      },
      {
        "id" : "ac9d18bc-6cfc-4ac1-8f6f-e7b1f8416c45",
        "parentId" : "62b96df5-d873-4075-9e3e-ea2bfbc4991c",
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Yes, this is unnecessary. Basic `test` is enough to evaluate `==`. That said, it's never wrong to use `[[...]]`.",
        "createdAt" : "2017-03-08T21:59:58Z",
        "updatedAt" : "2017-03-14T18:49:26Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9aaea93108f1eae4d175aba97d0546bde8e6af8",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +189,193 @@fi\n\nwhile [[ \"$TF_NEED_GCP\" == \"\" ]]; do\n  read -p \"Do you wish to build TensorFlow with \"\\\n\"Google Cloud Platform support? [y/N] \" INPUT"
  },
  {
    "id" : "ad9f0e65-5313-445e-b83f-ba5db578b3f6",
    "prId" : 6921,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/6921#pullrequestreview-19171087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d6643b3-81f9-4380-a0e5-39e2dd320e5a",
        "parentId" : null,
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "please try to match the style of whitespacing as in the rest of this file",
        "createdAt" : "2017-01-30T20:05:34Z",
        "updatedAt" : "2017-02-03T22:04:44Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "59ce7353e2e69a03eb65c7953b0c1e970b1a465b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +75,79 @@\n## Set up MKL related environment settings\nif false; then # Disable building with MKL for now\n  while [ \"$TF_NEED_MKL\" == \"\" ]; do\n    fromuser=\"\""
  },
  {
    "id" : "4c191a15-bf71-4067-9bba-796729bad219",
    "prId" : 6829,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/6829#pullrequestreview-16928281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "parentId" : null,
        "authorId" : "c8f2b008-60f4-4709-b654-47bc9a7795a2",
        "body" : "That removes the fetch for examples/android on non-windows too?",
        "createdAt" : "2017-01-13T18:39:23Z",
        "updatedAt" : "2017-01-13T18:39:24Z",
        "lastEditedBy" : "c8f2b008-60f4-4709-b654-47bc9a7795a2",
        "tags" : [
        ]
      },
      {
        "id" : "dba2d23e-cb21-47ce-9188-fed182d2286d",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "@drpngx is right.\r\nWe already comment out most android fetch targets by default. If anything, I would lean towards fetching everything even in windows.",
        "createdAt" : "2017-01-13T20:34:41Z",
        "updatedAt" : "2017-01-13T20:34:41Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "6c2ff90e-a1ca-4cd9-ad0e-f9a79363956c",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "body" : "@aj-michael Since you are the author of https://github.com/bazelbuild/bazel/commit/0b9ebfee8d7f3bd5cf68f4dba4790bf3fed9349d, can you comment on this? Should we exclude `//tensorflow/examples/android/...` or not? What I observed is that `bazel fetch //tensorflow/...` is fine with bazel 0.4.3, but failing with Bazel@HEAD\r\n",
        "createdAt" : "2017-01-16T09:55:07Z",
        "updatedAt" : "2017-01-16T09:55:07Z",
        "lastEditedBy" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "tags" : [
        ]
      },
      {
        "id" : "76b1c657-034e-49e8-a74d-b76c961b2444",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "body" : "Yes, bazel fetch on an android_binary will intentionally fail if no android_sdk_repository is set up starting with the next Bazel release. I discussed the reasoning a bit in the Bazel issue associated with that commit.",
        "createdAt" : "2017-01-16T13:17:25Z",
        "updatedAt" : "2017-01-16T13:17:25Z",
        "lastEditedBy" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "tags" : [
        ]
      },
      {
        "id" : "461c781a-9012-468e-8878-b495e40f4d72",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "body" : "@gunan Looks like we need this PR on both Linux and Windows for the next Bazel Release.",
        "createdAt" : "2017-01-16T15:45:53Z",
        "updatedAt" : "2017-01-16T15:45:53Z",
        "lastEditedBy" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "tags" : [
        ]
      },
      {
        "id" : "65ee047c-a218-4093-9ce2-663f86fd2802",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "body" : "@meteorcloudy why do you say that? It should work on Linux with the next Bazel release. The reason that I added the `bazel fetch $(bazel query \"//tensorflow/... -//tensorflow/examples/android/...\")` line in https://github.com/tensorflow/tensorflow/pull/6225 was to ensure that configure would work with Bazel from HEAD.",
        "createdAt" : "2017-01-16T16:16:37Z",
        "updatedAt" : "2017-01-16T16:16:38Z",
        "lastEditedBy" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "tags" : [
        ]
      },
      {
        "id" : "e4a46ecb-9936-44f5-bb28-ff29b4a3ccc5",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "body" : "Since `bazel fetch $(bazel query \"//tensorflow/... -//tensorflow/examples/android/...\"` doesn't work on Windows due to https://github.com/bazelbuild/bazel/issues/2248, I replaced it with `bazel fetch \"//tensorflow/... -//tensorflow/examples/android/...\"` in this change so that `./configure` will work both on Linux and Windows. Do you think it's a reasonable change?\r\n\r\nBTW, I am trying to resolve this failure:\r\nhttp://ci.bazel.io/job/TensorFlow/BAZEL_VERSION=HEAD,PLATFORM_NAME=windows-x86_64/606/console",
        "createdAt" : "2017-01-16T16:45:47Z",
        "updatedAt" : "2017-01-16T16:45:47Z",
        "lastEditedBy" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "tags" : [
        ]
      },
      {
        "id" : "62bb2b19-06b4-4be6-853b-df75da0b7cb5",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "body" : "This change will work for now. The reason that I opted for the nested query instead of what you are proposing now is that _if_ someone from Bazel team gets around to fixing https://github.com/bazelbuild/bazel/issues/2220, I suspect that the fix for it would break this workaround.\r\n\r\nAnd just to confirm, yes that failure is due to https://github.com/bazelbuild/bazel/commit/0b9ebfee8d7f3bd5cf68f4dba4790bf3fed9349d which I thought I resolved in #6225, but did not test on Windows. Sorry about that.",
        "createdAt" : "2017-01-16T16:56:59Z",
        "updatedAt" : "2017-01-16T16:56:59Z",
        "lastEditedBy" : "cf64dd1c-baa6-433b-b183-098de4cdeaac",
        "tags" : [
        ]
      },
      {
        "id" : "4553a3b9-87b9-4a08-872b-939f52d6bcbe",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "c8f2b008-60f4-4709-b654-47bc9a7795a2",
        "body" : "So, to summarize, we need to exclude fetch of `//tensorflow/examples/android/...` from all targets, not just windows?",
        "createdAt" : "2017-01-16T18:41:10Z",
        "updatedAt" : "2017-01-16T18:41:10Z",
        "lastEditedBy" : "c8f2b008-60f4-4709-b654-47bc9a7795a2",
        "tags" : [
        ]
      },
      {
        "id" : "edaa12e2-cdaa-45c1-927b-6240ad1c87f9",
        "parentId" : "5abf65a3-918e-4756-a0d6-921425b65a2a",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "@andrewharp Would android build be happy with this change?",
        "createdAt" : "2017-01-17T06:28:59Z",
        "updatedAt" : "2017-01-17T06:28:59Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "45477aadcb5c2cddac4ed3429f4232a23836999b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +25,29 @@    bazel clean --expunge\n  fi\n  bazel fetch \"//tensorflow/... -//tensorflow/examples/android/...\"\n}\n"
  },
  {
    "id" : "1b45f0dd-cf5d-4cc6-97de-1db5b9a07d1f",
    "prId" : 4942,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4942#pullrequestreview-4485833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83c188f7-630d-456e-b39f-09e5177bd8bf",
        "parentId" : null,
        "authorId" : "5f311952-9020-4294-a943-21cbd17dde41",
        "body" : "Is there a reason to use `-m` (\"mixed\") rather than the more natural `-w` (\"Windows names\")?\n",
        "createdAt" : "2016-10-16T23:42:07Z",
        "updatedAt" : "2016-10-19T11:12:03Z",
        "lastEditedBy" : "5f311952-9020-4294-a943-21cbd17dde41",
        "tags" : [
        ]
      },
      {
        "id" : "1498aa1a-03ba-47f8-b086-860aba7102fc",
        "parentId" : "83c188f7-630d-456e-b39f-09e5177bd8bf",
        "authorId" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "body" : "The problem is actually when writing PYTHON_BIN_PATH into `tools/bazel.rc`,  if we use \n`-w`, the bazel.rc file will look like:\n\n```\nbuild --define PYTHON_BIN_PATH=\"C:Program FilesAnaconda3python\"\ntest --define PYTHON_BIN_PATH=\"C:Program FilesAnaconda3python\"\n```\n\nSo I feel using `-m` is a safer choice.\n",
        "createdAt" : "2016-10-17T14:16:41Z",
        "updatedAt" : "2016-10-19T11:12:03Z",
        "lastEditedBy" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "tags" : [
        ]
      },
      {
        "id" : "68d66a71-b566-4a53-abf6-692a4abca909",
        "parentId" : "83c188f7-630d-456e-b39f-09e5177bd8bf",
        "authorId" : "5f311952-9020-4294-a943-21cbd17dde41",
        "body" : "Ah, that makes sense. Sounds good!\n",
        "createdAt" : "2016-10-17T14:37:08Z",
        "updatedAt" : "2016-10-19T11:12:03Z",
        "lastEditedBy" : "5f311952-9020-4294-a943-21cbd17dde41",
        "tags" : [
        ]
      }
    ],
    "commit" : "a981a7dae464a04236c25c114872c02a4e3c574e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +118,122 @@# Convert swig path to Windows style before writing into swig_path\nif is_windows; then\n  SWIG_PATH=\"$(cygpath -m \"$SWIG_PATH\")\"\nfi\necho \"$SWIG_PATH\" > tensorflow/tools/swig/swig_path"
  },
  {
    "id" : "4c938efa-ac02-44ff-a3bf-7ca74d8a3576",
    "prId" : 4874,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4874#pullrequestreview-3628888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27f275f4-85c1-4544-9032-2d17cea4669c",
        "parentId" : null,
        "authorId" : "5f311952-9020-4294-a943-21cbd17dde41",
        "body" : "Could this include spaces? Do we need quotes around each use of `$SOURCE_BASE_DIR` as well?\n",
        "createdAt" : "2016-10-10T18:14:24Z",
        "updatedAt" : "2016-10-12T09:00:01Z",
        "lastEditedBy" : "5f311952-9020-4294-a943-21cbd17dde41",
        "tags" : [
        ]
      },
      {
        "id" : "77af633a-266a-4365-ab63-e516c5391e06",
        "parentId" : "27f275f4-85c1-4544-9032-2d17cea4669c",
        "authorId" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "body" : "Yes, I believe so.\n",
        "createdAt" : "2016-10-11T08:19:06Z",
        "updatedAt" : "2016-10-12T09:00:01Z",
        "lastEditedBy" : "5dee3e52-2371-46cb-b60c-52819cddc5d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3c7c79eacc9edd6b0f2cebefc7b09f736e9c6e4",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +6,10 @@# Find out the absolute path to where ./configure resides\npushd `dirname $0` #> /dev/null\nSOURCE_BASE_DIR=`pwd -P`\npopd > /dev/null\n"
  },
  {
    "id" : "3870aad7-186c-4479-8ede-689d0ea47951",
    "prId" : 4806,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4806#pullrequestreview-3231395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01216fce-2de3-4a2d-99c2-9ad92f19dc0e",
        "parentId" : null,
        "authorId" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "body" : "Are we looking for the full path? echo seems to be not doing the same thing as readlink -f.\n",
        "createdAt" : "2016-10-07T00:04:19Z",
        "updatedAt" : "2016-10-07T00:04:19Z",
        "lastEditedBy" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "tags" : [
        ]
      },
      {
        "id" : "7ac44afc-22d2-4ea7-850d-19e573494cc9",
        "parentId" : "01216fce-2de3-4a2d-99c2-9ad92f19dc0e",
        "authorId" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "body" : "I see we just want .so file name :)\n",
        "createdAt" : "2016-10-07T00:23:08Z",
        "updatedAt" : "2016-10-07T00:23:08Z",
        "lastEditedBy" : "34b6b0a4-d35f-403e-9960-5c426c7c4474",
        "tags" : [
        ]
      },
      {
        "id" : "b2189a6d-652a-4329-8c22-6d522d672694",
        "parentId" : "01216fce-2de3-4a2d-99c2-9ad92f19dc0e",
        "authorId" : "9c7e5968-9725-4d1a-a8f5-822e0c81a540",
        "body" : "Looking into this more, I now understand why the comment says that we only want to resolve one level.\n\nOn my installation, `libcudnn.so` resolves to `libcudnn.so.4`, which then resolves to `libcudnn.so.4.0.7`, and this code extracts the 4 from `libcudnn.so.4`. Though, the regex that we are using would still work if we resolve all the way to `libcudnn.so.4.0.7`.\n\nIn any case, let's merge this since `readlink -f` is invalid on macOS. Once Bazel 0.3.2 (see bazelbuild/bazel#1840) is released, I am planning to move this logic into `cuda_configure` and use the Skylark `realpath()` method, which implements `readlink -f` and works cross-platform.\n",
        "createdAt" : "2016-10-07T00:48:12Z",
        "updatedAt" : "2016-10-07T00:48:13Z",
        "lastEditedBy" : "9c7e5968-9725-4d1a-a8f5-822e0c81a540",
        "tags" : [
        ]
      }
    ],
    "commit" : "5396ee3ad3f3f8d5314556a004578d65ea68a07a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +232,236 @@    # in that case, we return the path itself.\n    if [ -f \"$cudnn_lib_path\" ]; then\n      REALVAL=`readlink ${cudnn_lib_path} || echo \"${cudnn_lib_path}\"`\n    else\n      REALVAL=`readlink ${cudnn_alt_lib_path} || echo \"${cudnn_alt_lib_path}\"`"
  },
  {
    "id" : "ae622e8f-f76a-46c2-b335-02e754cb44af",
    "prId" : 3269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7662767-b3b5-4ca2-ad70-7e2b0ea79dd8",
        "parentId" : null,
        "authorId" : "6724ef88-2ef6-44af-9a01-6a3e3e4d1ab6",
        "body" : "Ultimately we should simplify the part below so that only the user interaction remains in that script.\n",
        "createdAt" : "2016-08-03T07:47:49Z",
        "updatedAt" : "2016-08-20T09:45:57Z",
        "lastEditedBy" : "6724ef88-2ef6-44af-9a01-6a3e3e4d1ab6",
        "tags" : [
        ]
      },
      {
        "id" : "bf962d4d-b075-4a93-9f14-14daf3d253d8",
        "parentId" : "f7662767-b3b5-4ca2-ad70-7e2b0ea79dd8",
        "authorId" : "9c7e5968-9725-4d1a-a8f5-822e0c81a540",
        "body" : "Agreed. I'll do that in a follow-up change.\n",
        "createdAt" : "2016-08-03T08:02:08Z",
        "updatedAt" : "2016-08-20T09:45:57Z",
        "lastEditedBy" : "9c7e5968-9725-4d1a-a8f5-822e0c81a540",
        "tags" : [
        ]
      }
    ],
    "commit" : "353235e0b2b35f3df43f42ef84ca00ccda7a3a6d",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +112,116 @@# Find out where the CUDA toolkit is installed\nOSNAME=`uname -s`\n\nwhile true; do\n  # Configure the Cuda SDK version to use."
  },
  {
    "id" : "5cb89f86-8af3-45b2-ad8c-54d1ea8e4b40",
    "prId" : 3091,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af1d24dc-b690-4a9f-9547-5a8fe3e5ba03",
        "parentId" : null,
        "authorId" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "body" : "Out of curiosity, why only one level? Why not down to the real version, such as \"4.0.7\"? \n\nAlso do we want to handle the darwin case, which is used a few lines below. \n",
        "createdAt" : "2016-06-28T23:44:25Z",
        "updatedAt" : "2016-06-28T23:44:25Z",
        "lastEditedBy" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "tags" : [
        ]
      },
      {
        "id" : "1919613b-9791-4e6c-93cd-ee4b54a3a473",
        "parentId" : "af1d24dc-b690-4a9f-9547-5a8fe3e5ba03",
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "Because the SONAME implies the binary compatibility -- if a user has 4.0.7 on their system and we build with 4.0.4, it should be compatible -- that's the ABI compatibility.  This is going off of what @3XX0 said https://github.com/tensorflow/tensorflow/issues/2525#issuecomment-223523008 there\n\nI'm not entirely sure what I'm supposed to do for OS X -- @yaroslavvb do you know what the dylib's look like?\n",
        "createdAt" : "2016-06-29T04:36:53Z",
        "updatedAt" : "2016-06-29T04:36:53Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      },
      {
        "id" : "64c5c522-c154-45e4-9c1e-a55dcf85e0ac",
        "parentId" : "af1d24dc-b690-4a9f-9547-5a8fe3e5ba03",
        "authorId" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "body" : "LGTM\n",
        "createdAt" : "2016-06-29T05:56:48Z",
        "updatedAt" : "2016-06-29T05:56:48Z",
        "lastEditedBy" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "tags" : [
        ]
      },
      {
        "id" : "23c4778f-497c-4326-ac7f-cc3d6e1b93dd",
        "parentId" : "af1d24dc-b690-4a9f-9547-5a8fe3e5ba03",
        "authorId" : "dc10259a-014b-4195-9453-4e685d09b9d8",
        "body" : "Installing CuDNN 5.0 only gave me this file on MacOS\n`-rwxr-xr-x@ 1 yaroslavvb  staff  58270280 Apr 23 03:19 /usr/local/cuda/lib/libcudnn.5.dylib\n`\nI then manually added this symlink to make it work\n`lrwxr-xr-x  1 yaroslavvb  admin        16 Jun 17 04:24 /usr/local/cuda/lib/libcudnn.dylib -> libcudnn.5.dylib\n`\n",
        "createdAt" : "2016-06-29T06:50:05Z",
        "updatedAt" : "2016-06-29T06:50:05Z",
        "lastEditedBy" : "dc10259a-014b-4195-9453-4e685d09b9d8",
        "tags" : [
        ]
      },
      {
        "id" : "ef2d7503-bc93-4d73-8936-9733bb59ff3e",
        "parentId" : "af1d24dc-b690-4a9f-9547-5a8fe3e5ba03",
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "Ah, if there's no symlink by default, then this branch won't execute, so we're okay.  If the symlink does exist, the existing codepath will work too.\n",
        "createdAt" : "2016-06-29T15:42:46Z",
        "updatedAt" : "2016-06-29T15:42:46Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "101fd5f1f8775e998de3d6af650a4259e18bb5e2",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +178,182 @@    # to resolve exactly once to the SONAME.  E.g, libcudnn.so ->\n    # libcudnn.so.4\n    REALVAL=`readlink ${CUDNN_INSTALL_PATH}/lib64/libcudnn.so`\n\n    # Extract the version of the SONAME, if it was indeed symlinked to"
  }
]