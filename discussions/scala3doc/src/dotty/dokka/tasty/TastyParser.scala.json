[
  {
    "id" : "b662b92e-faab-419f-8110-0c0d1252b9de",
    "prId" : 10593,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10593#pullrequestreview-542909966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "890b5164-1885-4021-acf2-88b0b1579099",
        "parentId" : null,
        "authorId" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "body" : "I think we should turn this into setting and do not hardcode in the logic itseld (I can see usage for excluding bits from documentation)",
        "createdAt" : "2020-12-02T13:55:07Z",
        "updatedAt" : "2020-12-02T16:19:45Z",
        "lastEditedBy" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "tags" : [
        ]
      },
      {
        "id" : "cbe40f42-2fb6-469a-a7bb-f539a3a72506",
        "parentId" : "890b5164-1885-4021-acf2-88b0b1579099",
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "Can we have a separate issue for that? I can already see a bunch of things that would need to be considered with such an option (should the option take a list of full package names? a list of FQN string prefixes?) and I'd rather discuss them separately.",
        "createdAt" : "2020-12-02T14:48:34Z",
        "updatedAt" : "2020-12-02T16:19:45Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b7467cbe85fa67e5626bf804b966ff906169715",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +34,38 @@    // the symbols there are \"patched\" through dark Dotty magic onto other stdlib\n    // definitions, so if we documented their origin, we'd get defs with duplicate DRIs\n    if !root.symbol.show.startsWith(\"scala.runtime.stdLibPatches\") then\n      val parser = new TastyParser(q, this)\n"
  },
  {
    "id" : "f76586ea-e88e-4565-b9c6-3dce3a666008",
    "prId" : 10334,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10334#pullrequestreview-531302333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e707100-3d59-46d2-9c70-a4a6fc1f6101",
        "parentId" : null,
        "authorId" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "body" : "good catch!",
        "createdAt" : "2020-11-16T13:07:51Z",
        "updatedAt" : "2020-11-23T10:38:19Z",
        "lastEditedBy" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "01dcb5952a20cad3b7c1eceab49f39cb74a50f00",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +169,173 @@  private def errorMsg[T](a: Any, m: => String, e: Throwable): Option[T] =\n    val msg = try m catch case e: Throwable => a.toString\n    println(s\"ERROR: tree is faling: $msg\")\n    e.printStackTrace()\n    throw e"
  }
]