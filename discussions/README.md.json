[
  {
    "id" : "640aaee6-c3cc-437e-85bc-cdf1a7ff4762",
    "prId" : 12070,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12070#pullrequestreview-4967811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41026d4b-8209-4b07-92ee-dde7b06eb243",
        "parentId" : null,
        "authorId" : "22f81792-cde0-4d47-bed1-a315d62dc752",
        "body" : "...referencing is **an** written...\nremove 'an'\n",
        "createdAt" : "2016-10-19T21:42:34Z",
        "updatedAt" : "2016-10-19T21:42:34Z",
        "lastEditedBy" : "22f81792-cde0-4d47-bed1-a315d62dc752",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d8176b8fb578a38cd896d0e628e6c233faaa6ce",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +195,199 @@#### I'm writing a definition that depends on another definition. Should I use `<reference types=\"\" />` or an import?\n\nIf the module you're referencing is an written as an external module (uses `export`), use an import.\nIf the module you're referenceing is an ambient module (uses `declare module`, or just declares globals), use `<reference types=\"\" />`.\n"
  },
  {
    "id" : "30975963-887b-491a-b047-1c7699b32f3e",
    "prId" : 32399,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/32399#pullrequestreview-195708156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95060678-ad06-4321-8a5c-6196a75cd49f",
        "parentId" : null,
        "authorId" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "body" : "I don't think we want this entry",
        "createdAt" : "2019-01-23T18:56:42Z",
        "updatedAt" : "2019-01-23T18:56:42Z",
        "lastEditedBy" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "tags" : [
        ]
      },
      {
        "id" : "0ddb1336-be4a-4620-92b7-1e05554430ee",
        "parentId" : "95060678-ad06-4321-8a5c-6196a75cd49f",
        "authorId" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "body" : "Actually, I believe we do. This prevents someone from inadvertently trying to publish the package. Our types publisher ignores this field when it generates the actual package.json file.",
        "createdAt" : "2019-01-23T19:32:07Z",
        "updatedAt" : "2019-01-23T19:32:08Z",
        "lastEditedBy" : "0762ec2f-c2e9-4296-915b-f2139e71b5ad",
        "tags" : [
        ]
      },
      {
        "id" : "7b8db626-af26-493e-9c06-a7ab5e9b9ee3",
        "parentId" : "95060678-ad06-4321-8a5c-6196a75cd49f",
        "authorId" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "body" : "Yeah, it doesn't work without this field. The linter complains with:\r\n```\r\npackage.json should set `\"private\": true`\r\n```",
        "createdAt" : "2019-01-23T19:39:53Z",
        "updatedAt" : "2019-01-23T19:39:53Z",
        "lastEditedBy" : "b020629e-b52b-403a-98c4-dd5d98f3aa6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ff4d5e848a11bef21c120b0d41c2c55275b8db",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +278,282 @@```json\n{\n    \"private\": true,\n    \"types\": \"index\",\n    \"typesVersions\": {"
  }
]