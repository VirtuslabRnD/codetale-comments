[
  {
    "id" : "760a6be4-2868-41f8-9e9b-22585b2b3497",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "242788df-f632-42a3-9733-9fd5d8475048",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "the comma is unnecessary here,\n",
        "createdAt" : "2016-01-22T15:39:59Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@    % make 32bit\n\nAfter building Redis, it is a good idea to test it using:\n\n    % make test"
  },
  {
    "id" : "6d7fd159-3448-40cc-9dc2-c6d3b286fc20",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bc88170-a383-416b-a696-4e2e2b4a7b7c",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "This sentence is long and feel overly heavy. Perhaps something along these lines:\n\"Keeping the concepts in this document at a high level prevents this document from becoming overly large. General ideas are fine as they provide a starting point for greater understanding. Moreover, most of the code ...\"\n",
        "createdAt" : "2016-01-22T15:44:20Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +197,201 @@the Redis source code layout, what is in each file as a general idea, the\nmost important functions and structures inside the Redis server and so forth.\nWe keep all the discussion at a high level without digging into the details\nsince this document would be huge otherwise and our code base changes\ncontinuously, but a general idea should be a good starting point to"
  },
  {
    "id" : "a008a5b5-e7a2-4faf-84c2-cad9d3242c64",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5947caa-2f0a-4479-8c83-40f7e28df123",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "shell calls? Perhaps \"shell scripts,\" with a comma between \"directory, and an example\"\n",
        "createdAt" : "2016-01-22T15:46:00Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      },
      {
        "id" : "d9c65bcb-5cdc-4700-9859-481f4a800ea2",
        "parentId" : "d5947caa-2f0a-4479-8c83-40f7e28df123",
        "authorId" : "b2140a18-b928-4c17-a292-00075166a88d",
        "body" : "The words `shell` and `calls` are not consecutive. It's actually `Makefile which calls`. Am I missing something?\n",
        "createdAt" : "2016-01-23T04:30:30Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "b2140a18-b928-4c17-a292-00075166a88d",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +207,211 @@\nThe Redis root directory just contains this README, the Makefile which\ncalls the real Makefile inside the `src` directory and an example\nconfiguration for Redis and Sentinel. You can find a few shell\nscripts that are used in order to execute the Redis, Redis Cluster and"
  },
  {
    "id" : "5db72b88-9823-471c-883f-6412fd0a35a4",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d30a9383-bad8-4a1f-b84c-79dfeecd16f0",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "I the previous text mentions these shell scripts, this may be redundant. perhaps changing it to \"The shell scripts are used to ...\" to explain what the shell scripts are.\n",
        "createdAt" : "2016-01-22T15:47:07Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +208,212 @@The Redis root directory just contains this README, the Makefile which\ncalls the real Makefile inside the `src` directory and an example\nconfiguration for Redis and Sentinel. You can find a few shell\nscripts that are used in order to execute the Redis, Redis Cluster and\nRedis Sentinel unit tests, which are implemented inside the `tests`"
  },
  {
    "id" : "e0e2822e-eb6e-47ec-b3f7-797ed7823bd1",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1943c741-ab97-4d81-962e-1b0ee8443945",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "I'd remove \"note that\".\n",
        "createdAt" : "2016-01-22T15:48:07Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +217,221 @@* `src`: contains the Redis implementation, written in C.\n* `tests`: contains the unit tests, implemented in Tcl.\n* `deps`: contains libraries Redis uses. Everything needed to compile Redis is inside this directory; your system just needs to provide `libc`, a POSIX compatible interface and a C compiler. Notably `deps` contains a copy of `jemalloc`, which is the default allocator of Redis under Linux. Note that under `deps` there are also things which started with the Redis project, but for which the main repository is not `anitrez/redis`. An exception to this rule is `deps/geohash-int` which is the low level geocoding library used by Redis: it originated from a different project, but at this point it diverged so much that it is developed as a separated entity directly inside the Redis repository.\n\nThere are a few more directories but they are not very important for our goals"
  },
  {
    "id" : "ebcf52ef-9a47-452d-b297-2c7113988a9a",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0340133c-5ea4-4a9b-9608-6d07aa6c02f3",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "\"that\" is superfluous here.\n",
        "createdAt" : "2016-01-22T15:48:34Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +226,230 @@\nNote: lately Redis was refactored quite a bit. Function names and file\nnames have been changed, so you may find that this documentation reflects the\n`unstable` branch more closely. For instance in Redis 3.0 the `server.c`\nand `server.h` files were named to `redis.c` and `redis.h`. However the overall"
  },
  {
    "id" : "b297a83d-c19f-4922-a509-7f8653ada89a",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c77dad4-9166-47e9-aa15-999e55f8a6fc",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "I think \"is\" was the correct one here as the type field is identifying the type of the object, making it an \"is a\" rather than a \"has a\" relationship.\n",
        "createdAt" : "2016-01-22T15:50:35Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +289,293 @@strings, lists, sets, sorted sets and so forth. The interesting thing is that\nit has a `type` field, so that it is possible to know what type a given\nobject has, and a `refcount`, so that the same object can be referenced\nin multiple places without allocating it multiple times. Finally the `ptr`\nfield points to the actual representation of the object, which might vary"
  },
  {
    "id" : "2cbe11d5-2d14-466d-a958-e366d0187fb1",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f5f99cd-302b-4bbe-b3fc-72943c399bc4",
        "parentId" : null,
        "authorId" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "body" : "Good, and proper, usage of which! Nicely done.\n",
        "createdAt" : "2016-01-22T15:51:10Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "1c95ef81-49bf-411c-a428-2a548ea552fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +307,311 @@* `initServerConfig()` setups the default values of the `server` structure.\n* `initServer()` allocates the data structures needed to operate, setup the listening socket, and so forth.\n* `aeMain()` starts the event loop which listens for new connections.\n\nThere are two special functions called periodically by the event loop:"
  },
  {
    "id" : "d6b0786a-0dd1-468d-a854-e3fee7ad5c00",
    "prId" : 2870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "267e13ac-3ccd-4fbf-a4b7-04e6b7722218",
        "parentId" : null,
        "authorId" : "08a6fcc8-3314-4b5f-87a6-a39d3170cfb3",
        "body" : "should be \"were named\", right?\n",
        "createdAt" : "2016-02-19T17:27:57Z",
        "updatedAt" : "2016-06-07T07:09:22Z",
        "lastEditedBy" : "08a6fcc8-3314-4b5f-87a6-a39d3170cfb3",
        "tags" : [
        ]
      }
    ],
    "commit" : "319b1263ecf4e0f41e848e3e88ea1576d2470d3e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +228,232 @@names have been changed, so you may find that this documentation reflects the\n`unstable` branch more closely. For instance in Redis 3.0 the `server.c`\nand `server.h` files were named to `redis.c` and `redis.h`. However the overall\nstructure is the same. Keep in mind that all the new developments and pull\nrequests should be performed against the `unstable` branch."
  }
]