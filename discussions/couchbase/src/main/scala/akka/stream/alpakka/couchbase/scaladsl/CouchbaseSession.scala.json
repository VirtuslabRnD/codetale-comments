[
  {
    "id" : "4baa083c-008e-41f5-94ef-6d6f5c755f6a",
    "prId" : 1677,
    "prUrl" : "https://github.com/akka/alpakka/pull/1677#pullrequestreview-233729620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e19d5a-e0d5-4c1c-a4c9-4e07edaea6c3",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "A bit weird taking a `Future`/`CompletionStage` as a param here, shouldn't it rather be `(AsyncCluster, String) => Future[CouchbaseSession]` and if a user has a `Future[AsyncCluster]` or `Future[String]` for that part it is their job to `map/flatMap` it.",
        "createdAt" : "2019-05-04T09:41:17Z",
        "updatedAt" : "2019-05-06T08:06:49Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e497d4c59b2ad098b96f4021ffdfe02e0c04a5c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +40,44 @@   */\n  def apply(cluster: AsyncCluster, bucketName: String)(implicit ec: ExecutionContext): Future[CouchbaseSession] =\n    openBucket(cluster, disconnectClusterOnClose = false, bucketName)\n\n  /**"
  },
  {
    "id" : "7dc7a3a7-a65c-4ebf-92f0-f1feb15bc61c",
    "prId" : 1677,
    "prUrl" : "https://github.com/akka/alpakka/pull/1677#pullrequestreview-233729620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64433331-d0e9-4e20-8bf4-781b4815f87b",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "Improvement on the pre-existing logic: since it is blocking, run the future on the blocking dispatcher rather than the default one?",
        "createdAt" : "2019-05-04T09:46:31Z",
        "updatedAt" : "2019-05-06T08:06:49Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e497d4c59b2ad098b96f4021ffdfe02e0c04a5c",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +65,69 @@      case None =>\n        CouchbaseAsyncCluster.create(settings.nodes: _*)\n    }).map(_.authenticate(settings.username, settings.password))\n\n  private def openBucket(cluster: AsyncCluster, disconnectClusterOnClose: Boolean, bucketName: String)("
  }
]