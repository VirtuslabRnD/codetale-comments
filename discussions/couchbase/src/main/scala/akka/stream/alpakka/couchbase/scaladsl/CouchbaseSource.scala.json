[
  {
    "id" : "c81a10bb-af4c-4e68-8ef2-19e6c6ad928f",
    "prId" : 1203,
    "prUrl" : "https://github.com/akka/alpakka/pull/1203#pullrequestreview-166709818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ba04fc-98d2-464b-8c18-a4cfa25e2d17",
        "parentId" : null,
        "authorId" : "2f03533e-06cb-4cd5-825a-d6fdacbe083a",
        "body" : "How does the back pressure work here for this conversion? Is this just going to throw an illegl argument for large result sets saying the source doesn't respect back pressure?",
        "createdAt" : "2018-10-17T13:09:05Z",
        "updatedAt" : "2018-11-06T15:14:44Z",
        "lastEditedBy" : "2f03533e-06cb-4cd5-825a-d6fdacbe083a",
        "tags" : [
        ]
      },
      {
        "id" : "2e80c26e-2930-4fd5-8075-f2edf29f5437",
        "parentId" : "25ba04fc-98d2-464b-8c18-a4cfa25e2d17",
        "authorId" : "6204914f-856a-4191-be81-95b3ba04dc4f",
        "body" : "@chbatey If I understand correctly, Publisher/Subscriber manages this. Please correct me if I'm wrong. There is an option to put backpressure on Observable API, but I don't think that this is required, since reactive streams provides pull backpressure as well.   ",
        "createdAt" : "2018-10-19T22:02:08Z",
        "updatedAt" : "2018-11-06T15:14:44Z",
        "lastEditedBy" : "6204914f-856a-4191-be81-95b3ba04dc4f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c490b57d5e21161af10c9751b3b83a02d272d3f9",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@      couchbaseBucket.async().query(query)\n    )\n    Source.fromPublisher(RxReactiveStreams.toPublisher(toJavaObservable(observable.flatMap(f => f.rows()))))\n  }\n}"
  },
  {
    "id" : "d3cab6b7-f767-4372-aecc-29b3d2fff8f1",
    "prId" : 1203,
    "prUrl" : "https://github.com/akka/alpakka/pull/1203#pullrequestreview-166671656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e78da4b-ff40-4d17-bd21-dd1358cabda4",
        "parentId" : null,
        "authorId" : "5bea0f7e-097a-4eb6-845d-4fa1a69d63b5",
        "body" : "Looks like `toScalaObservable` and `toJavaObservable` can be omitted:\r\n```scala\r\nSource.fromPublisher(RxReactiveStreams.toPublisher(couchbaseBucket.async().query(query).flatMap(_.rows())))\r\n```\r\n",
        "createdAt" : "2018-10-18T15:46:57Z",
        "updatedAt" : "2018-11-06T15:14:44Z",
        "lastEditedBy" : "5bea0f7e-097a-4eb6-845d-4fa1a69d63b5",
        "tags" : [
        ]
      },
      {
        "id" : "343fb027-6aa5-47da-a5b4-15cdd11bd67b",
        "parentId" : "2e78da4b-ff40-4d17-bd21-dd1358cabda4",
        "authorId" : "6204914f-856a-4191-be81-95b3ba04dc4f",
        "body" : "Definitely!!!",
        "createdAt" : "2018-10-19T19:48:22Z",
        "updatedAt" : "2018-11-06T15:14:44Z",
        "lastEditedBy" : "6204914f-856a-4191-be81-95b3ba04dc4f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c490b57d5e21161af10c9751b3b83a02d272d3f9",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@      couchbaseBucket.async().query(query)\n    )\n    Source.fromPublisher(RxReactiveStreams.toPublisher(toJavaObservable(observable.flatMap(f => f.rows()))))\n  }\n}"
  }
]