[
  {
    "id" : "6e430e8b-3330-4d3b-b913-c3ebb28044e6",
    "prId" : 8614,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8ec7c50-79a4-4e2f-8e3b-4abd19ab8a15",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "why did we not get a test failure despite this?",
        "createdAt" : "2021-01-22T17:38:44Z",
        "updatedAt" : "2021-01-22T17:38:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "61c92292-f978-4f72-a1b1-dbbf37973efd",
        "parentId" : "d8ec7c50-79a4-4e2f-8e3b-4abd19ab8a15",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Passing a non-existing path to the `--logback-config` flag on `daml-helper run-jar` seems to be silently ignored.\r\n",
        "createdAt" : "2021-01-25T08:58:02Z",
        "updatedAt" : "2021-01-25T08:58:02Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "27511d7749e5df8bdb4a65b9034ebe70384dd402",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +74,78 @@          cp -L $(location //ledger-service/http-json:src/main/resources/logback.xml) $$OUT/daml-sdk/json-api-logback.xml\n          cp -L $(location //triggers/service:release/trigger-service-logback.xml) $$OUT/daml-sdk/\n          cp -L $(location //triggers/service/auth:release/oauth2-middleware-logback.xml) $$OUT/daml-sdk/\n          cp -L $(location //ledger/sandbox-common:src/main/resources/logback.xml) $$OUT/daml-sdk/sandbox-logback.xml\n          cp -L $(location //navigator/backend:src/main/resources/logback.xml) $$OUT/daml-sdk/navigator-logback.xml"
  },
  {
    "id" : "d96535b0-d988-46c6-9bed-6bdb16c86e21",
    "prId" : 5412,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75014a11-4642-4a8f-9424-ee4425f60374",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Do we need to run this on Windows? If not maybe just disable it there, given how directory outputs can be problematic.",
        "createdAt" : "2020-04-03T10:29:51Z",
        "updatedAt" : "2020-04-03T11:50:14Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "a9a9c89a-ffa5-4f7b-8fc1-62f76f8dbd55",
        "parentId" : "75014a11-4642-4a8f-9424-ee4425f60374",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Disabled on Windows.",
        "createdAt" : "2020-04-03T11:54:37Z",
        "updatedAt" : "2020-04-03T11:54:37Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ab45a39af18f11b36a390f3bb8b7df2e365380",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +93,97 @@    ctx.actions.run_shell(\n        inputs = [ctx.file.ledger_api_tarball] + ctx.files.daml_lf_tarballs,\n        outputs = [tmp_dir],\n        tools = tools,\n        command = \"\"\""
  },
  {
    "id" : "164c9e4f-24c1-40c0-8295-36fdbbfb3094",
    "prId" : 5412,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95d951dc-20dd-4338-a531-c9bfebeb4527",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I'm starting to think that we should implement our own versions of `pkg_tar` that can create `tar` and `zip` and don't have the leading `./` issue.",
        "createdAt" : "2020-04-03T10:30:37Z",
        "updatedAt" : "2020-04-03T11:50:14Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "1781594a-5d8c-4c7c-a711-fafae0ae9d91",
        "parentId" : "95d951dc-20dd-4338-a531-c9bfebeb4527",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I vaguely recall seeing issues that `pkg_zip` also has other problems where it breaks directory structures. But havenâ€™t looked too deeply into it.",
        "createdAt" : "2020-04-03T11:45:22Z",
        "updatedAt" : "2020-04-03T11:50:14Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ffa9f43b-fd42-443d-80cf-64edda6c997a",
        "parentId" : "95d951dc-20dd-4338-a531-c9bfebeb4527",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "One has to be a bit careful about how one uses it. As far as I understand the right intuition for these rules is that they originate from generating docker images. There you want to distinguish between paths that should always be placed at the filesystem root (e.g. `/usr/bin/...`) and those that should be placed under some path prefix. They use leading `./` for that distinction. I.e. paths that don't lead with `./` will always remain at the root of the archive independent of the `package_dir` attribute. Paths that do lead with `./` will be placed underneath `package_dir`. AFAIK `pkg_tar|zip` always apply the `./` prefrix, but this distinction matters on the `deps` attribute. If you pull in an archive that doesn't follow that convention you'll end up with surprises.",
        "createdAt" : "2020-04-03T11:53:36Z",
        "updatedAt" : "2020-04-03T11:53:36Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ab45a39af18f11b36a390f3bb8b7df2e365380",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +133,137 @@    )\n\nprotos_zip = rule(\n    implementation = _protos_zip_impl,\n    attrs = {"
  }
]