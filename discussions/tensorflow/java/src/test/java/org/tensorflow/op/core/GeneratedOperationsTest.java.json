[
  {
    "id" : "93a7101b-c5f1-4d53-b02f-7a1490be5c12",
    "prId" : 26181,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26181#pullrequestreview-209233916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa8377c-d347-4f72-9e27-de61256e7692",
        "parentId" : null,
        "authorId" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "body" : "(I'm not an official reviewer of PRs, @sjamesr is, so please take my comments as simple suggestions ;) )\r\n\r\nWould it be interesting to show in this test that the control dependencies are executed *before* the controlled op?\r\n\r\nMaybe `add(ops.constant(0), ops.constant(0));` could be replaced by `add(variable, ops.constant(0));` and you validate that `x` value is 3?",
        "createdAt" : "2019-02-27T17:53:17Z",
        "updatedAt" : "2019-03-26T03:16:22Z",
        "lastEditedBy" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "tags" : [
        ]
      },
      {
        "id" : "1d412a10-9cc3-4055-b457-67ce7d9059e3",
        "parentId" : "cfa8377c-d347-4f72-9e27-de61256e7692",
        "authorId" : "d5dc6cb3-f754-42f9-82bb-1ef4c13e6ff1",
        "body" : "Wonderful suggestion :) ",
        "createdAt" : "2019-02-28T18:23:57Z",
        "updatedAt" : "2019-03-26T03:16:22Z",
        "lastEditedBy" : "d5dc6cb3-f754-42f9-82bb-1ef4c13e6ff1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a86557b09724bf0a1d4b5539848ca5d7475c985b",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +81,85 @@      try (Tensor<Integer> result = sess.runner().fetch(x).run().get(0).expect(Integer.class);\n      ) {\n        assertEquals(3, result.intValue());\n      }\n    }"
  },
  {
    "id" : "4701ebcb-971c-4cae-8030-ca8176f1d954",
    "prId" : 24813,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24813#pullrequestreview-191863098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72022694-a1d0-4094-bb56-d9c6b21061bb",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Just to make sure I understand, we didn't _need_ `ArrayList`, right? This could have been:\r\n\r\n```java\r\nOps ops = Ops.create(g);\r\nOperand<Integer> x = ops.math().addN(new Operand<Integer>{ops.constant(1), ops.constant(2), ops.constant(3)});\r\n```\r\n\r\n?",
        "createdAt" : "2019-01-11T19:37:09Z",
        "updatedAt" : "2019-01-11T19:37:18Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "de25243e-459f-44bf-9776-e6e8d7a803f5",
        "parentId" : "72022694-a1d0-4094-bb56-d9c6b21061bb",
        "authorId" : "08ecda46-fc00-4464-8a5c-047ef2f41fa8",
        "body" : "We were talking about this a bit and at least when I tried that didn't work (assuming you mean for it to be an array of Operands). This is because the inputs that are marked as iterable in the call to TypeOf are generated to take an [Iterable](https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html), so I get an error\r\n```\r\nrequired: Iterable<Operand<T>>\r\nfound: Operand<Integer>[]\r\n```\r\nMy Java is definitely a little out of date and I might have misunderstood the question, so I could definitely be missing something. We can also update the generate code more if this isn't the intended interface.\r\n\r\nCC @melissagrueter @irenedea ",
        "createdAt" : "2019-01-11T20:07:07Z",
        "updatedAt" : "2019-01-11T20:07:08Z",
        "lastEditedBy" : "08ecda46-fc00-4464-8a5c-047ef2f41fa8",
        "tags" : [
        ]
      },
      {
        "id" : "cfe8f462-7846-4a7c-a88a-3f2cc45a90c6",
        "parentId" : "72022694-a1d0-4094-bb56-d9c6b21061bb",
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Ah, righto. Okay, fine for now (this PR should be merged shortly, we can revisit this later if needed).",
        "createdAt" : "2019-01-11T20:59:34Z",
        "updatedAt" : "2019-01-11T20:59:35Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bde6a28b2c8df473aa674aa6b9ee3ba4aa43db2f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +52,56 @@      inputs.add(ops.constant(2));\n      inputs.add(ops.constant(3));\n      Operand<Integer> x = ops.math().addN(inputs);\n      try (Tensor<Integer> result = sess.runner().fetch(x).run().get(0).expect(Integer.class)) {\n        assertEquals(6, result.intValue());"
  }
]