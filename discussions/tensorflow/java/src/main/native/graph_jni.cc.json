[
  {
    "id" : "8ec1f572-73e8-48aa-92ef-35bc6f2a8497",
    "prId" : 20133,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20133#pullrequestreview-132273857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6127da3-7201-4512-9878-dfc24c8ecf68",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "In practice this probably won't matter at all since `dy_elems` will be a pretty small array, but did you consider encoding it as `[handle0, index0, handle1, index1, ...]` instead of `[handle0, handle1, ..., index0, index1, ...]`? The former would be more cache friendly :)",
        "createdAt" : "2018-06-26T02:07:25Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "15ecec51-7c9b-4215-9c19-11fe0f6cbabf",
        "parentId" : "c6127da3-7201-4512-9878-dfc24c8ecf68",
        "authorId" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "body" : "Ironically, I was using the format you proposed in my previous commit. I switched to the new one lately because:\r\n- that could be the new 'standard' for returning more than one value in a JNI binding, e.g. if we had 4 arrays to return, each of different length, the previous format won't work while the second will\r\n- we might find some optimization later to simply split the array in two instead of copying its elements one by one\r\n- I personally found it more elegant to iterate using two iterators at the same time :)\r\n\r\nI don't remind reverting to the previous version if you want to.",
        "createdAt" : "2018-06-26T22:08:13Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "tags" : [
        ]
      },
      {
        "id" : "6112e330-f2c6-48fb-828d-a35f0bdfd336",
        "parentId" : "c6127da3-7201-4512-9878-dfc24c8ecf68",
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "It's an internal detail, so we can easily switch it around as we go along. I don't feel very strongly, but am slightly partial to the previous version. Your call.",
        "createdAt" : "2018-06-27T00:31:29Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "c4cee1cd-cf1b-414b-8688-74aa8ca99f6d",
        "parentId" : "c6127da3-7201-4512-9878-dfc24c8ecf68",
        "authorId" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "body" : "Ok, so just for the sake of keeping that PR continuing smoothly, let's keep it that way for now",
        "createdAt" : "2018-06-27T03:26:46Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7baff70bbdc2c785bda47c9eb06584ae46fd3b3",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +176,180 @@  jlongArray dy_handles_and_indices = env->NewLongArray(nx << 1);\n  jlong* dy_elems = env->GetLongArrayElements(dy_handles_and_indices, nullptr);\n  for (int i = 0, j = nx; i < nx; ++i, ++j) {\n    TF_Output dy_output = dy.get()[i];\n    dy_elems[i] = reinterpret_cast<jlong>(dy_output.oper);"
  }
]