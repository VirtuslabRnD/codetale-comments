[
  {
    "id" : "4c437b4d-c68a-4a0f-b0c4-2fe0df17d1bc",
    "prId" : 20133,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20133#pullrequestreview-132250225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "688ac73d-0b99-4070-9a3f-f490e61aaadd",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Is it really `?`? Don't all of the tensors have to have the same type? In which case, should this be:\r\n\r\n```java\r\npublic Output<T>[] addGradients(Output<T>[] y, Output<T>[] x, Output<T>[] dx)\r\n```\r\n?",
        "createdAt" : "2018-06-26T01:42:05Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "b201f319-206b-4c76-b540-3ae24c951884",
        "parentId" : "688ac73d-0b99-4070-9a3f-f490e61aaadd",
        "authorId" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "body" : "I wasn't sure about this, you probably know better than me: is it possible to have a graph with variables of different types? If it is guaranteed that could never happen, I'll gladly remove those wildcards to enforce type-safety.",
        "createdAt" : "2018-06-26T22:03:23Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "44bac885-95e2-45aa-ac3f-da1e724327a4",
        "tags" : [
        ]
      },
      {
        "id" : "ce802486-d174-4344-aaa9-52bdb837876a",
        "parentId" : "688ac73d-0b99-4070-9a3f-f490e61aaadd",
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Hmm...it actually is, since one could have say `tf.cast`s on the path between `x` and `y`, something like:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nx = tf.placeholder(tf.float64)\r\ny = tf.square(tf.cast(x, tf.float32))\r\ndy = tf.gradients(y, x)[0]\r\nprint(x.dtype, y.dtype, dy.dtype)\r\n```\r\n\r\nSo apologies, ignore my comment :)",
        "createdAt" : "2018-06-27T00:30:34Z",
        "updatedAt" : "2018-06-28T03:08:41Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7baff70bbdc2c785bda47c9eb06584ae46fd3b3",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +159,163 @@   * @return the partial derivatives {@code dy} with the size of {@code x}\n   */\n  public Output<?>[] addGradients(Output<?>[] y, Output<?>[] x, Output<?>[] dx) {\n    Output<?>[] dy = new Output<?>[x.length];\n    final long[] yHandles = new long[y.length];"
  }
]