[
  {
    "id" : "08d03e28-a2de-42ee-9cc5-3b4187baf89a",
    "prId" : 24674,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24674#pullrequestreview-188899649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b64e3d9c-2072-4be5-b877-5d09da9672f9",
        "parentId" : null,
        "authorId" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "body" : "nit: consider adding a blank line here.",
        "createdAt" : "2019-01-03T05:52:15Z",
        "updatedAt" : "2019-01-03T23:01:17Z",
        "lastEditedBy" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf471f0c15b0c9c78c44a238fe60fe1e31289503",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1595,1599 @@  const nvinfer1::DimsHW dilation(tf_dilations[h_index], tf_dilations[w_index]);\n\n  const auto tf_stride = attrs.get<std::vector<int>>(\"strides\");\n  if (tf_stride.size() != 4) {\n    return tensorflow::errors::InvalidArgument("
  },
  {
    "id" : "2689d08f-4f26-4a43-a82d-600eb8de6eb5",
    "prId" : 24454,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24454#pullrequestreview-186788623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "967f7111-4835-4021-9a90-d2c0e97e2876",
        "parentId" : null,
        "authorId" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "body" : "Add a comment or expand TODO to mention that we are using shuffle layer for identity by not setting any transpose or reshape params.",
        "createdAt" : "2018-12-19T23:04:15Z",
        "updatedAt" : "2019-01-02T21:25:42Z",
        "lastEditedBy" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "tags" : [
        ]
      }
    ],
    "commit" : "276a456b3551a329881e0104edf8ea848d446033",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +952,956 @@    if (tensorflow::str_util::StartsWith(tensor->getName(), kOutputPHName)) {\n      // Using shuffle layer for identity by not setting reshape or transpose.\n      nvinfer1::IShuffleLayer* layer = network()->addShuffle(*tensor);\n      TFTRT_RETURN_ERROR_IF_NULLPTR(\n          layer, StrCat(\"Output Copy for \", tensor->getName()));"
  },
  {
    "id" : "e6bf6819-1d5f-4bf0-be48-7e8a7a54f9ed",
    "prId" : 24078,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24078#pullrequestreview-181903334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d730dd5f-706c-465b-9607-66aa30f5e48c",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Is rank of smaller than 4 supported?",
        "createdAt" : "2018-12-05T18:18:04Z",
        "updatedAt" : "2018-12-13T00:51:07Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "5414a2b9-3203-46da-b3a1-519c15635655",
        "parentId" : "d730dd5f-706c-465b-9607-66aa30f5e48c",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "Yes, we use reshape to add dimensions of size 1 to to make the tensor rank 4, and then reshape it back after the padding layer.",
        "createdAt" : "2018-12-05T18:23:38Z",
        "updatedAt" : "2018-12-13T00:51:07Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca10e2d3acd1a93643bcae11aedd25e6ac2f7e66",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +2101,2105 @@    input_dims.insert(input_dims.begin(), inputs.at(0).batch_size());\n  }\n  if (input_dims.size() > 4) {\n    return tensorflow::errors::Unimplemented(\n        \"StridedSlice is not implemented for tensors with rank > 4, at \","
  },
  {
    "id" : "b4338ca5-0dfb-43e1-8604-118afd8b55ce",
    "prId" : 24078,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24078#pullrequestreview-183388688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fbc137e-18d2-4d46-9dc0-fa332dfb8241",
        "parentId" : null,
        "authorId" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "body" : "optional nit: For consistency with other error message structure, we could use the following:\r\n\r\nStridedSlice is not implemented for attr, attr\r\n\r\nOr \"is not supported for StridedSlice\" would be more accurate.",
        "createdAt" : "2018-12-10T21:37:13Z",
        "updatedAt" : "2018-12-13T00:51:07Z",
        "lastEditedBy" : "d5b52da7-e430-40b5-acaf-5ed00acf4442",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca10e2d3acd1a93643bcae11aedd25e6ac2f7e66",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +2132,2136 @@    int attr_val = attrs.get<int>(attr);\n    if (attr_val != 0) {\n      return tensorflow::errors::Unimplemented(\n          attr, \" is not supported for StridedSlice, at \", node_def.name());\n    }"
  },
  {
    "id" : "bcadb456-8791-40ea-9913-7b657f866842",
    "prId" : 23909,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23909#pullrequestreview-181983739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00638afb-4118-4be2-a1df-4235c2811599",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "`squeeze_dims` is deprecated, we should use `axis`, see https://www.tensorflow.org/api_docs/python/tf/squeeze.",
        "createdAt" : "2018-11-29T22:09:37Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "0e32bbe0-2ded-4c29-92a3-3f382b4b117e",
        "parentId" : "00638afb-4118-4be2-a1df-4235c2811599",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "While the API now uses `axis`, it appears the NodeDef.attr() only contains `squeeze_dims`, even though when creating the node def attributes we use the `.axis_` field: https://github.com/tensorflow/tensorflow/pull/23909/files#diff-5b5e9a9d60ab4ad5474d419d568fb6faR2110",
        "createdAt" : "2018-11-30T00:27:40Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      },
      {
        "id" : "a2a475a0-a722-43c8-92dd-d70bc1772805",
        "parentId" : "00638afb-4118-4be2-a1df-4235c2811599",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "See Op definition for Squeeze: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ops/array_ops.cc#L1980",
        "createdAt" : "2018-12-05T18:57:21Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      },
      {
        "id" : "f9ca0a8d-a675-48a0-8690-d701ecf2bf84",
        "parentId" : "00638afb-4118-4be2-a1df-4235c2811599",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Thanks for pointing out!",
        "createdAt" : "2018-12-05T21:34:25Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc4b1847dde6511fb6bfb8d4c3aa1e2586307516",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +1971,1975 @@  // Mark axes to remove by setting them to 0.\n  TFAttrs attrs(node_def);\n  auto squeeze_dims = attrs.get<std::vector<int>>(\"squeeze_dims\");\n  if (squeeze_dims.size() == 0) {\n    return tensorflow::errors::Unimplemented("
  },
  {
    "id" : "bd5dabba-998f-4795-bf91-9efbc2d1e367",
    "prId" : 23909,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23909#pullrequestreview-179486547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe9a8f3a-2cfe-4a38-93ee-73cecd726d8a",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Should we check this  only when input_tensor is a tensor?",
        "createdAt" : "2018-11-29T22:10:27Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc4b1847dde6511fb6bfb8d4c3aa1e2586307516",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +1988,1992 @@    // Don't squeeze batch dim.\n    if (axis == 0) {\n      return tensorflow::errors::Unimplemented(\n          \"Cannot squeeze batch dimension, at \", node_def.name());\n    }"
  },
  {
    "id" : "ca431d9d-e97b-46f1-826b-18648638d19a",
    "prId" : 23909,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23909#pullrequestreview-181911304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbd2bb33-d545-4a36-a64f-e5e452afc386",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Should we make sure `weights` is a scalar?",
        "createdAt" : "2018-12-05T18:41:23Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc4b1847dde6511fb6bfb8d4c3aa1e2586307516",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +1913,1917 @@  const int input_rank = input_dims.size();\n  // Get axis to expand on.\n  TRT_ShapedWeights weights = inputs.at(1).weights();\n  if (weights.count() != 1) {\n    return tensorflow::errors::InvalidArgument("
  },
  {
    "id" : "80fa2bf9-6181-44e1-9461-d7f68cac8ad3",
    "prId" : 23909,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23909#pullrequestreview-181913968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a0d6409-20b0-4277-a0be-48602de12b50",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Isn't `axis` an attribute?",
        "createdAt" : "2018-12-05T18:47:08Z",
        "updatedAt" : "2018-12-06T23:51:39Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc4b1847dde6511fb6bfb8d4c3aa1e2586307516",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1893,1897 @@  const auto& inputs = params->inputs;\n  const auto& node_def = params->node_def;\n  if (inputs.size() != 2) {\n    return tensorflow::errors::InvalidArgument(\n        \"Two inputs expected for ExpandDims, at \", node_def.name());"
  },
  {
    "id" : "c376c5c4-ff37-4917-a3a5-c484630be32a",
    "prId" : 22874,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22874#pullrequestreview-164303435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "217620d6-7bf9-426a-92ad-1a0fd430aa68",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "I assume that TRT doesn't support transpose at batch dim, then we need to make sure `weights_ptr[0] == 0` and return error if not. And please add corresponding test cases.\r\n\r\nWe need the same check in `TransposeTensor()` (also see my below comment for letting it return a `Status`).",
        "createdAt" : "2018-10-11T19:36:41Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "8ed67aeb-09df-4914-a291-81bc4d3b0138",
        "parentId" : "217620d6-7bf9-426a-92ad-1a0fd430aa68",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "Is it not enough to have the check in TransposeTensor() only?",
        "createdAt" : "2018-10-12T01:05:40Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      },
      {
        "id" : "724874f1-26f1-482f-b200-bb1e0f8199a6",
        "parentId" : "217620d6-7bf9-426a-92ad-1a0fd430aa68",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "You're right that should be sufficient.",
        "createdAt" : "2018-10-12T15:50:06Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "77456c6611fd2faa07d6efabafb3f61f82a24eed",
    "line" : 883,
    "diffHunk" : "@@ -1,1 +1334,1338 @@  std::vector<int> perm(weights.count());\n  for (int i = 0; i < weights.count(); i++) {\n    perm[i] = weights_ptr[i];\n  }\n"
  },
  {
    "id" : "4eaf6341-b6c5-4c1f-8937-a7dbf0f018de",
    "prId" : 22874,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22874#pullrequestreview-164303857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83b6bdbc-0f39-4289-9d70-b36f834eab81",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "We need to return an error if the first dim doesn't match the max batch size of the engine.",
        "createdAt" : "2018-10-11T21:17:04Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "34a2eadb-d759-4118-ac70-1389d097a145",
        "parentId" : "83b6bdbc-0f39-4289-9d70-b36f834eab81",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "We also need to return an error if `weights.count() == 0` which means reshaping to scalar according to the [API doc](https://www.tensorflow.org/api_docs/python/tf/manip/reshape). ",
        "createdAt" : "2018-10-11T21:19:49Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "139bd15f-41ac-4848-ae4a-9c3527561c9f",
        "parentId" : "83b6bdbc-0f39-4289-9d70-b36f834eab81",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "And please add corresponding test cases.",
        "createdAt" : "2018-10-11T21:21:38Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "b9142880-3b31-4f85-986c-9453a040349e",
        "parentId" : "83b6bdbc-0f39-4289-9d70-b36f834eab81",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "> We need to return an error if the first dim doesn't match the max batch size of the engine.\r\n\r\nWould there be a problem if the first dim == -1?\r\n\r\nWould this work? new_shape and input_shape include the batch dim.\r\n```\r\nif new_shape[0] == -1 and (product(new_shape[1:]) == product(original_shape[1:])):\r\n  # Good\r\nelif new_shape[0] == max_batch_size:\r\n  # Good\r\nelse:\r\n  # Bad\r\n```",
        "createdAt" : "2018-10-12T01:58:43Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      },
      {
        "id" : "f692c91a-e1e7-4b5b-b0ce-6b5b309c59fd",
        "parentId" : "83b6bdbc-0f39-4289-9d70-b36f834eab81",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Good catch, that should work, thanks!",
        "createdAt" : "2018-10-12T15:51:13Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "77456c6611fd2faa07d6efabafb3f61f82a24eed",
    "line" : 912,
    "diffHunk" : "@@ -1,1 +1363,1367 @@      weights.GetValues()));\n  nvinfer1::Dims new_dims;\n  // Ignore first (batch) dimension because TRT abstracts batch away\n  new_dims.nbDims = weights.count() - 1;\n  for (int i = 1; i < weights.count(); i++) {"
  },
  {
    "id" : "8ca64d91-6310-42ad-bb23-58ece410646b",
    "prId" : 22874,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22874#pullrequestreview-164710794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08107be7-4515-4009-b29c-be89fac8531d",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Sorry, it was my fault: based on the definition, I think `weights.count()` can never be 0. Your test pass because it fails to convert the constant, not because `weights.count()` is 0. But I'll pull in and fix that.",
        "createdAt" : "2018-10-13T04:52:15Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "8b719b86-0a0f-4b22-8353-0cb33f54e09f",
        "parentId" : "08107be7-4515-4009-b29c-be89fac8531d",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "Thanks Lambda!",
        "createdAt" : "2018-10-15T13:44:09Z",
        "updatedAt" : "2018-10-16T17:06:56Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      }
    ],
    "commit" : "77456c6611fd2faa07d6efabafb3f61f82a24eed",
    "line" : 903,
    "diffHunk" : "@@ -1,1 +1354,1358 @@\n  TRT_ShapedWeights weights = inputs.at(1).weights();\n  if (weights.count() == 0) {\n    return tensorflow::errors::Unimplemented(\n        \"Reshape to shape=[] is not supported, at \", node_def.name());"
  },
  {
    "id" : "ef754a4b-6c17-4a5c-8204-2f313c687022",
    "prId" : 21075,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21075#pullrequestreview-140104356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6419c653-827d-4f31-9e71-524694c24861",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Would you please put these inside ValidateInputeProperties()?",
        "createdAt" : "2018-07-24T14:34:52Z",
        "updatedAt" : "2018-08-10T23:01:27Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "7ab2a5e7-4386-449e-90a6-c9d0363ebf0f",
        "parentId" : "6419c653-827d-4f31-9e71-524694c24861",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "I'll add it in ValidateInputProperties() and remove the check in InputEdgeValidator\r\n",
        "createdAt" : "2018-07-24T22:29:07Z",
        "updatedAt" : "2018-08-10T23:01:27Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      },
      {
        "id" : "80c1626b-ec58-4547-a579-cbb818511fd7",
        "parentId" : "6419c653-827d-4f31-9e71-524694c24861",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "A second thought, we should actually put it in InputEdgeValidator. As this check only applies to live-in tensors",
        "createdAt" : "2018-07-24T22:31:19Z",
        "updatedAt" : "2018-08-10T23:01:27Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "be645259c251e9b81e2d36efdd7b403bedaffe03",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +2723,2727 @@\n#if NV_TENSORRT_MAJOR == 3\n      nvinfer1::DimsCHW input_dim;\n#elif NV_TENSORRT_MAJOR > 3\n      nvinfer1::Dims input_dim;"
  },
  {
    "id" : "15df5936-e58a-4302-84df-02bcdd89d6a1",
    "prId" : 20755,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20755#pullrequestreview-139632997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1baa0f8-0c17-415d-a8cd-39e17c40c857",
        "parentId" : null,
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "TRT supports tensor with 8 dimension EXCLUDING batch dimension. So we should be able to support shape.dims() <= 9.\r\nIt is possible that the old code got the check condition wrong.",
        "createdAt" : "2018-07-23T19:16:28Z",
        "updatedAt" : "2018-07-23T19:34:20Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      },
      {
        "id" : "4430b04f-5277-4b67-a897-72299fbb779e",
        "parentId" : "c1baa0f8-0c17-415d-a8cd-39e17c40c857",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Thanks for pointing out. I'll fix this before this is merged.",
        "createdAt" : "2018-07-23T20:06:02Z",
        "updatedAt" : "2018-07-23T20:06:02Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "482b056d3ba925f52ccad8e7166a81120f43a761",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +150,154 @@  if (shape.dims() > 8) {\n    return tensorflow::errors::OutOfRange(\n        \"Input tensor rank is greater than 8.\");\n  }\n  for (int d = 1; d < shape.dims(); ++d) {"
  },
  {
    "id" : "2d61b892-94e8-4953-ae48-f124edbe4635",
    "prId" : 20755,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20755#pullrequestreview-139633459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dd214a1-e3f2-4977-8830-a204a5c8e735",
        "parentId" : null,
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "shape.dims() < 3?\r\nNot quite sure about the check.\r\n\r\nTRT 3.0 requires input to be of rank 4 (batch + 3 dimension). This requirement has been removed in TRT 4.0.\r\nIf this check is related to that, we need to add a compile guard.",
        "createdAt" : "2018-07-23T19:22:41Z",
        "updatedAt" : "2018-07-23T19:33:17Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      },
      {
        "id" : "0f601e0c-25df-438c-9659-34c86db92c95",
        "parentId" : "4dd214a1-e3f2-4977-8830-a204a5c8e735",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "As discussed offline, I'll leave this as is since there are more places to change besides this one regarding the 3 dims requirement. And we can issue another PR to fix the problem.",
        "createdAt" : "2018-07-23T20:07:25Z",
        "updatedAt" : "2018-07-23T20:07:25Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "482b056d3ba925f52ccad8e7166a81120f43a761",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +2900,2904 @@    return false;\n  }\n  if (shape.dims() < 3 && in_edge->src()->type_string() != \"Const\") {\n    VLOG(2) << \"--> Need to remove input node \" << in_edge->dst()->name()\n            << \" which has an input at port \" << in_edge->dst_input()"
  },
  {
    "id" : "af93300a-4eda-4f46-8f95-672e5c4864e6",
    "prId" : 20350,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20350#pullrequestreview-132902697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3e51043-c517-4cab-b156-e3fc33c6a1da",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "@samikama You seems have different clang-format settings which result in code blocks like this get changed back-and-forth. Please revert and make sure you share the same clang-format settings, thanks!",
        "createdAt" : "2018-06-28T16:42:28Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de343c329ff252ed0cb419f29c3ce3765b3da84",
    "line" : 345,
    "diffHunk" : "@@ -1,1 +488,492 @@    }\n    case tensorflow::DataType::DT_HALF: {\n      Reorder2({k, c}, static_cast<Eigen::half const*>(iweights.GetValues()),\n               istrides, static_cast<Eigen::half*>(\n                             const_cast<void*>(oweights->GetValues())),"
  },
  {
    "id" : "2656869e-3381-47bb-b5cf-81e044fbe8be",
    "prId" : 20350,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20350#pullrequestreview-135269815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f35fed6e-3b0f-4dbf-9549-1e79f8cc2de8",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Since l_s is int[], do we assume element_size==sizeof(int) here?",
        "createdAt" : "2018-07-02T20:59:00Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "3f5fbc12-6f1d-425d-a82b-c2d97f7704e1",
        "parentId" : "f35fed6e-3b0f-4dbf-9549-1e79f8cc2de8",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "Yes this is true. Do we want to replace element_size with sizeof(int)?",
        "createdAt" : "2018-07-09T03:50:12Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de343c329ff252ed0cb419f29c3ce3765b3da84",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +152,156 @@  int max_d = std::max(l_d, r_d);\n  std::memcpy(l_s + max_d - operand_l.nbDims, operand_l.d,\n              operand_l.nbDims * element_size);\n  std::memcpy(r_s + max_d - operand_r.nbDims, operand_r.d,\n              operand_r.nbDims * element_size);"
  },
  {
    "id" : "04650733-e4be-4637-91cb-3350f1b4576f",
    "prId" : 20350,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20350#pullrequestreview-135271667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad4373c5-402e-4a03-b2d0-1ca2f095c9b2",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "It seems this does not align with what the comment says:\r\n```\r\n+    T: 3 5 1\r\n+    -> T: 1 1 1 -1 3 5 1\r\n```\r\nbut here it assigns -1 to first element.",
        "createdAt" : "2018-07-02T21:13:38Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "434dabc1-cb6c-4edb-8753-6e07d86a0df3",
        "parentId" : "ad4373c5-402e-4a03-b2d0-1ca2f095c9b2",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "The comment is trying to illustrate why we cannot support this case.\r\nIn the code, if we need to promote the rank of the tensor operand, the state if (max_d != l_d) returns true and the function returns false.",
        "createdAt" : "2018-07-09T04:09:50Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de343c329ff252ed0cb419f29c3ce3765b3da84",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +162,166 @@      return false;\n    }\n    l_s[0] = -1;\n  }\n  if (operand_r_is_tensor) {"
  },
  {
    "id" : "94a7a0e1-987f-4762-9afd-bb676e6873dd",
    "prId" : 20350,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20350#pullrequestreview-135275261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59da5dc8-4d06-41af-bc47-36192af04d0d",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Can we put all checks like this into a method and call it in the segmenter, so we can avoid putting nodes into the trt engine at the very beginning, instead of delaying the check until here? ",
        "createdAt" : "2018-07-02T21:30:01Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "c3c41871-25ae-416b-b1eb-e6d1465305af",
        "parentId" : "59da5dc8-4d06-41af-bc47-36192af04d0d",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "We have undergoing refactoring work on the segmenter. It is to improve the robustness of the converter and expand checking only the op types to consider attributes as well as input types.\r\n\r\nSo that will come in as future PRs.",
        "createdAt" : "2018-07-09T04:49:12Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de343c329ff252ed0cb419f29c3ce3765b3da84",
    "line" : 685,
    "diffHunk" : "@@ -1,1 +954,958 @@\n  // TODO(jie): addScale checks for input tensor dimension\n  if (dims_t.nbDims != 3) {\n    return tensorflow::errors::InvalidArgument(\n        \"addScale requires tensor with rank 3, \" + node_def.name());"
  },
  {
    "id" : "bf835e76-2238-4c7b-af29-ab95ee8c29b2",
    "prId" : 20350,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/20350#pullrequestreview-133724668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9d12ce8-c26f-4278-9c87-81434bddbe2f",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Same question about putting the checks in segmenter.",
        "createdAt" : "2018-07-02T21:30:37Z",
        "updatedAt" : "2018-07-11T18:33:32Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de343c329ff252ed0cb419f29c3ce3765b3da84",
    "line" : 783,
    "diffHunk" : "@@ -1,1 +1138,1142 @@  }\n\n  if (weights_rsck.shape_.nbDims != 4) {\n    return tensorflow::errors::Internal(\n        \"Conv2D expects kernel of dimension 4, at: \" + node_def.name());"
  },
  {
    "id" : "7ec1cd93-6957-4830-8147-3d6c08eaf9cc",
    "prId" : 19652,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19652#pullrequestreview-124607868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c498adc6-756c-4946-bb45-1744059caa5d",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Please revert changes to these lines, it's pure formatting changes and doesn't seem to follow the clang-format rules.",
        "createdAt" : "2018-05-30T20:58:26Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "ed7292dc-f007-4c31-9dd9-8238ef95dfa3",
        "parentId" : "c498adc6-756c-4946-bb45-1744059caa5d",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "As discussed, these are clang-format changes with TF sytle",
        "createdAt" : "2018-05-30T21:53:26Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd9bce7fb411db7304c98a2a324ebe6fbe630e9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +363,367 @@    }\n    case tensorflow::DataType::DT_HALF: {\n      Reorder2(\n          {k, c}, static_cast<Eigen::half const*>(iweights.GetValues()),\n          istrides,"
  },
  {
    "id" : "df13635b-99d7-471f-880f-a022cd608e5e",
    "prId" : 19652,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19652#pullrequestreview-124607908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7273c392-391a-48ca-9f33-1f7bdcd4481a",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Please revert.",
        "createdAt" : "2018-05-30T20:59:32Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "00f6cdfc-a41e-4339-b614-4b1b5e3d3400",
        "parentId" : "7273c392-391a-48ca-9f33-1f7bdcd4481a",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "Same as above",
        "createdAt" : "2018-05-30T21:53:38Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd9bce7fb411db7304c98a2a324ebe6fbe630e9",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1181,1185 @@  auto op_pair = ops.find(node_def.op());\n  if (op_pair == ops.end())\n    return tensorflow::errors::Unimplemented(\n        \"binary op: \" + node_def.op() +\n        \" not supported at: \" + node_def.name());"
  },
  {
    "id" : "856cec04-ef3d-4d00-a828-9c8696ae478e",
    "prId" : 17857,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17857#pullrequestreview-105485283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "590011e9-d607-473d-9447-e44c335692ed",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "How large is the data to transform? Does this hurt performance?",
        "createdAt" : "2018-03-20T18:32:52Z",
        "updatedAt" : "2018-03-20T18:32:52Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "0cc4c84c-f127-4aab-aeb1-b7b438768c0c",
        "parentId" : "590011e9-d607-473d-9447-e44c335692ed",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "This is only done at conversion time. Would not have any impact on inference.",
        "createdAt" : "2018-03-20T18:40:00Z",
        "updatedAt" : "2018-03-20T18:40:01Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b945c4025b6bb7540d50e43daefff8f39812ccb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +557,561 @@      static_cast<Eigen::half const*>(weights.GetValues()));\n  for (int64_t i = 0; i < weights_src.count(); i++) {\n    dst[i] = Eigen::half_impl::float_to_half_rtne(src[i]);\n  }\n  return weights;"
  },
  {
    "id" : "11d8d601-6a0e-48e8-8b48-c8a0495da548",
    "prId" : 17772,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17772#pullrequestreview-104788469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dbb39ad-e629-4ecd-8269-1de3a0576d12",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Please revert all irrelevant changes like this in this PR.",
        "createdAt" : "2018-03-18T04:58:37Z",
        "updatedAt" : "2018-03-19T18:12:59Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "74ccaa27-47ba-4d53-ba83-f277a934a323",
        "parentId" : "2dbb39ad-e629-4ecd-8269-1de3a0576d12",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "These are from clang-format.\r\nShould I revert it to minimize the changes in 1.7 patch?",
        "createdAt" : "2018-03-18T07:40:08Z",
        "updatedAt" : "2018-03-19T18:12:59Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd28c9e3e9bbc1bbabe801741aa67b057df26624",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +347,351 @@    }\n    case tensorflow::DataType::DT_HALF: {\n      Reorder2({k, c}, static_cast<Eigen::half const*>(iweights.GetValues()),\n               istrides, static_cast<Eigen::half*>(\n                             const_cast<void*>(oweights->GetValues())),"
  },
  {
    "id" : "32dad12f-5c35-4650-96bd-be6dd6fdc8e9",
    "prId" : 17772,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17772#pullrequestreview-104788550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1abfd50b-6141-4396-8f40-7aef908f7718",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "I don't understand, why removing the fp16 logic?",
        "createdAt" : "2018-03-18T05:48:52Z",
        "updatedAt" : "2018-03-19T18:12:59Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "a30f6bad-f5db-4beb-bfdc-52c85db9f0d0",
        "parentId" : "1abfd50b-6141-4396-8f40-7aef908f7718",
        "authorId" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "body" : "This fp16 conversion is converting int value to fp16.\r\nWe should only convert fp32 to fp16 (we kept that one here). int values are used for attributes for supported ops in the converter.",
        "createdAt" : "2018-03-18T07:45:44Z",
        "updatedAt" : "2018-03-19T18:12:59Z",
        "lastEditedBy" : "e07b7c87-7b3c-46ad-8dba-53305318d8d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd28c9e3e9bbc1bbabe801741aa67b057df26624",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1445,1449 @@      }\n    }\n    //  we should not have converted //if (ctx.isFP16()) {\n    size_t len_data = tensorflow::DataTypeSize(dtype);\n    for (int i = 0; i < scalar_shape.nbDims; i++) len_data *= scalar_shape.d[i];"
  }
]