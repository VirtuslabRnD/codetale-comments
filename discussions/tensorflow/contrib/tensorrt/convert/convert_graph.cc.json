[
  {
    "id" : "73a99d0f-00f1-4ac6-8f22-f5ad680000ca",
    "prId" : 24675,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24675#pullrequestreview-189482737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aae70bf6-c854-44bc-bf3f-a8c6072b071a",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Can we add a test for this fix as well?",
        "createdAt" : "2019-01-03T02:06:55Z",
        "updatedAt" : "2019-01-14T22:07:43Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "9d97443a-93d0-4934-aa74-6075cb66a8d2",
        "parentId" : "aae70bf6-c854-44bc-bf3f-a8c6072b071a",
        "authorId" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "body" : "This fix is covered by int32_test. This change is more of a final safeguard to prevent a segfault in case the validator didn't exclude an INT32 node. Since the validator for matmul and binary op prevent the nodes in int32_test from being converting, this line isn't reached. But if you removed the type check in the validator, this code would be executed.",
        "createdAt" : "2019-01-04T18:45:46Z",
        "updatedAt" : "2019-01-14T22:07:43Z",
        "lastEditedBy" : "7604040f-899b-4297-b5a5-c102eff4447a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1965757cef0b20c5933f7dd276f41cf4f350d032",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +362,366 @@      DeviceNameUtils::ParsedName parsed_name;\n      DeviceNameUtils::ParseFullName(node_device, &parsed_name);\n      if (parsed_name.type == \"CPU\") {\n        VLOG(1) << \"Node \" << node->name() << \" was assigned to the CPU. \"\n                << \"Attempting to place on GPU.\";"
  },
  {
    "id" : "dd7d4409-511a-4b56-b482-5feabf5b1947",
    "prId" : 23866,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23866#pullrequestreview-176999082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cf2554e-e43a-4a27-967e-aebd2852e451",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "I believe this will most of existing tests especially the python tests. Any reason to change it?",
        "createdAt" : "2018-11-20T18:19:12Z",
        "updatedAt" : "2018-11-21T16:05:07Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "03fc0254-d7c4-415f-939a-d0e3ef10cc81",
        "parentId" : "0cf2554e-e43a-4a27-967e-aebd2852e451",
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "You are right, sorry I missed the tests. I can fix them all. It's just to have a nicer name :)",
        "createdAt" : "2018-11-20T18:27:34Z",
        "updatedAt" : "2018-11-21T16:05:07Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "54f961f7-698e-4c8a-8fd6-335b581b96e9",
        "parentId" : "0cf2554e-e43a-4a27-967e-aebd2852e451",
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Done",
        "createdAt" : "2018-11-20T22:14:12Z",
        "updatedAt" : "2018-11-21T16:05:07Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b97212ff568282aa07af48eb3ae908946de4c7",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +933,937 @@    curr_engine.cached_engine_batches = params.cached_engine_batches;\n    curr_engine.maximum_cached_engines = params.max_cached_engines;\n    StrAppend(&curr_engine.engine_name, \"TRTEngineOp_\", t);\n    status = RegisterSegmentFunctionToFunctionLibrary(\n        &graph, curr_engine.segment_graph_def, curr_engine.engine_name);"
  },
  {
    "id" : "1e9aeef3-dd53-49d5-ad8e-d7ff9ad15414",
    "prId" : 21508,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21508#pullrequestreview-147858672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c7460bd-2256-43b1-82e8-e0aae349115a",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "The max is hard coded to 100.\r\nHow would this work in a virtual environment (e.g. with kubernetes) where a single GPU can be shared by possibly more than 100 users?",
        "createdAt" : "2018-08-20T02:31:34Z",
        "updatedAt" : "2018-08-20T23:04:26Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "b96ff955-6139-409a-99ec-35fa5192848a",
        "parentId" : "7c7460bd-2256-43b1-82e8-e0aae349115a",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "That's a good point. Currently TfGpuId is always [starting from 0](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/gpu/gpu_device.cc#L998), so if there are any gpu device initialized before, gpu 0 should always be available. Note that TfGpuId is a virtual identifier of the gpu device owned by the process, not the physical gpu id. But if we hard coded 0 here, changes to BaseGpuDevice initialization flow can break the integration, so I added the loop here to reduce that risk. ",
        "createdAt" : "2018-08-20T22:58:28Z",
        "updatedAt" : "2018-08-20T23:04:43Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "cfd3daa4-c9ef-485b-8382-8e4f743e69da",
        "parentId" : "7c7460bd-2256-43b1-82e8-e0aae349115a",
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Got it. Looks okay.",
        "createdAt" : "2018-08-20T23:28:56Z",
        "updatedAt" : "2018-08-20T23:28:56Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      }
    ],
    "commit" : "4684421d9aa3e63dc943074025ffdc89df1a1980",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +779,783 @@      engine.device.empty()) {\n    // If device is not set, use the first found GPU device for the conversion.\n    for (int tf_gpu_id_value = 0; tf_gpu_id_value < 100; ++tf_gpu_id_value) {\n      TfGpuId tf_gpu_id(tf_gpu_id_value);\n      CudaGpuId cuda_gpu_id;"
  },
  {
    "id" : "c7b7e3f0-89f6-40b7-bd57-50d71d4169d6",
    "prId" : 21508,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21508#pullrequestreview-147858188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4391cb67-10c4-4b3d-865c-322a3cf7c33a",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Don't we need to `return` here after `LOG(WARNING)`?",
        "createdAt" : "2018-08-20T03:05:39Z",
        "updatedAt" : "2018-08-20T23:04:26Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "0804b771-4eb0-4aa0-8430-002720cfa0fe",
        "parentId" : "4391cb67-10c4-4b3d-865c-322a3cf7c33a",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "In that case `cuda_device_id` remains -1 and `dev_allocator` is `nullptr`.",
        "createdAt" : "2018-08-20T23:01:02Z",
        "updatedAt" : "2018-08-20T23:04:43Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "84134d23-a945-4ab5-bd51-dd73deb7f024",
        "parentId" : "4391cb67-10c4-4b3d-865c-322a3cf7c33a",
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Okay. Makes sense.",
        "createdAt" : "2018-08-20T23:26:19Z",
        "updatedAt" : "2018-08-20T23:26:19Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      }
    ],
    "commit" : "4684421d9aa3e63dc943074025ffdc89df1a1980",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +824,828 @@  } else {\n    LOG(WARNING) << \"Cluster is set but device '\" << engine.device\n                 << \"' is not found in the cluster\";\n  }\n  return std::make_pair(cuda_device_id, dev_allocator);"
  },
  {
    "id" : "0828108c-a2f1-4ada-b385-9073d51c6754",
    "prId" : 21138,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21138#pullrequestreview-142237296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48bd4c99-286a-4fc7-86de-97251c64a218",
        "parentId" : null,
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Is this changing the functionality or `*it` and `node_map.at(node_name)` are actually the same thing?",
        "createdAt" : "2018-08-01T05:55:24Z",
        "updatedAt" : "2018-08-02T14:32:49Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "5886ef08-863e-4570-b03c-8bed9c823d01",
        "parentId" : "48bd4c99-286a-4fc7-86de-97251c64a218",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "It's the same thing, it saves the additional lookup. I didn't modify this, it comes from the first commit of this PR.",
        "createdAt" : "2018-08-01T06:06:21Z",
        "updatedAt" : "2018-08-02T14:32:49Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "26d52994cd3bf16b765799494b1f1c1070231b8c",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +287,291 @@    const auto& node_name = (*it)->name();\n    if (segment_nodes.count(node_name) == 0) continue;\n    auto node = *it;\n    auto node_device = node->requested_device();\n    if (!node_device.empty()) {"
  },
  {
    "id" : "28642671-0d57-4a21-8308-47f48b8d3419",
    "prId" : 19871,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19871#pullrequestreview-128093222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a46d5f4-f8b7-46cc-ba16-edb7c781c4d5",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Are these for debugging purposes only?",
        "createdAt" : "2018-06-11T22:17:01Z",
        "updatedAt" : "2018-06-21T22:23:14Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "a0aa8548-07f2-46f7-a5b2-40fbb82ed2a4",
        "parentId" : "2a46d5f4-f8b7-46cc-ba16-edb7c781c4d5",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "Updates to grappler requires num_cores and frequency to be set since they added a check that FATALs if flops calculated using these values is not greater than 0.",
        "createdAt" : "2018-06-12T00:42:29Z",
        "updatedAt" : "2018-06-21T22:23:14Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      },
      {
        "id" : "103bd46c-2c78-4d29-89d5-04796b6d4c51",
        "parentId" : "2a46d5f4-f8b7-46cc-ba16-edb7c781c4d5",
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Would you please add a comment to explain these numbers then? Also is it about a DCHECK (I'm curious as I seem to meet the same error before)?",
        "createdAt" : "2018-06-12T13:02:47Z",
        "updatedAt" : "2018-06-21T22:23:14Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "73e4f932-4b19-4007-89a8-a1804f1ad15e",
        "parentId" : "2a46d5f4-f8b7-46cc-ba16-edb7c781c4d5",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "Yes FATALs are due to DCHECKs added to grappler. I added some comments",
        "createdAt" : "2018-06-12T18:29:14Z",
        "updatedAt" : "2018-06-21T22:23:14Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      }
    ],
    "commit" : "4631936e61651101932073197c08b600006530a3",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +191,195 @@  device_properties.set_type(\"GPU\");\n  device_properties.mutable_environment()->insert({\"architecture\", \"6\"});\n  device_properties.set_num_cores(3584);\n  device_properties.set_frequency(1531);\n  std::unique_ptr<tensorflow::grappler::Cluster> cluster("
  },
  {
    "id" : "ebbd7fab-8ede-491a-81fb-faecc2e54b78",
    "prId" : 19871,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19871#pullrequestreview-128222699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "962ed56d-c9fc-4f1d-9b8d-19374133a2ef",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Please move the comment to the header.",
        "createdAt" : "2018-06-12T23:01:21Z",
        "updatedAt" : "2018-06-21T22:23:14Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "611464f2-ea82-4a44-a56d-f84830f0414c",
        "parentId" : "962ed56d-c9fc-4f1d-9b8d-19374133a2ef",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "This is an internal method. Not exposed in header.",
        "createdAt" : "2018-06-13T04:20:44Z",
        "updatedAt" : "2018-06-21T22:23:15Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      }
    ],
    "commit" : "4631936e61651101932073197c08b600006530a3",
    "line" : 757,
    "diffHunk" : "@@ -1,1 +538,542 @@}\n\n// Function to construct a funcdef from the segment and add it to the graph.\ntensorflow::Status RegisterSegmentFunctionToFunctionLibrary(\n    tensorflow::Graph* graph, const tensorflow::GraphDef& segment,"
  },
  {
    "id" : "8cddd055-87d2-47a6-affa-525ee9ec3462",
    "prId" : 19652,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19652#pullrequestreview-124609406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24aa8786-d327-49b0-9da4-030af1f33c9d",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "Why does the order matter here?",
        "createdAt" : "2018-05-30T21:18:51Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "b1a53f10-90cb-473a-be84-0017aa648e6c",
        "parentId" : "24aa8786-d327-49b0-9da4-030af1f33c9d",
        "authorId" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "body" : "When we are inserting TRTEngine Ops, we are rewiring its input and outputs. If the destination of an output edge of the engine is absorbed in another engine, rewiring would not work since the output node is removed. By going in reverse topological order, we ensure that the edge is updated to point to appropriate port of the downstream TRTEngine.",
        "createdAt" : "2018-05-30T21:59:21Z",
        "updatedAt" : "2018-05-30T22:08:42Z",
        "lastEditedBy" : "8f9cf5d6-8597-4d0e-8a0a-4fec1fb0f577",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd9bce7fb411db7304c98a2a324ebe6fbe630e9",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +328,332 @@  std::vector<tensorflow::Node*> calib_nodes;\n  std::vector<tensorflow::Node*> topo_order;\n  tensorflow::GetPostOrder(graph, &topo_order);\n  for (auto rit = topo_order.rbegin(); rit != topo_order.rend(); ++rit) {\n    auto node = *rit;"
  }
]