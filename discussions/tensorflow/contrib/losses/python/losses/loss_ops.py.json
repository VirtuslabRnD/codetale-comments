[
  {
    "id" : "2cd62973-f6fc-4a35-9ee0-e4f270949895",
    "prId" : 12801,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/12801#pullrequestreview-67839974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e157d0c-8715-43bd-9388-8c116899410c",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Please include dim in the docstring (the linter will complain if you don't). Can you make sure to look at the docstring of the function that the decorator returns to make sure that dim is appropriately marked as deprecated (and if not, put \"(deprecated)\" in its description)?",
        "createdAt" : "2017-09-26T16:15:29Z",
        "updatedAt" : "2017-10-07T18:33:53Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "83fb3815-124e-4f71-80bb-1af2208aeffa",
        "parentId" : "9e157d0c-8715-43bd-9388-8c116899410c",
        "authorId" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "body" : "Thanks @martinwicke. The docstring has been updated with `dim` at the last line (match order of the API). Also dim is marked as deprecated correctly:\r\n```\r\nubuntu@ubuntu:~$ python\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> print tf.losses.cosine_distance.__doc__\r\nAdds a cosine-distance loss to the training procedure. (deprecated arguments)\r\n\r\nSOME ARGUMENTS ARE DEPRECATED. They will be removed in a future version.\r\nInstructions for updating:\r\ndim is deprecated, use axis instead\r\n\r\nNote that the function assumes that `predictions` and `labels` are already\r\nunit-normalized.\r\n\r\nArgs:\r\n  labels: `Tensor` whose shape matches 'predictions'\r\n  predictions: An arbitrary matrix.\r\n  axis: The dimension along which the cosine distance is computed.\r\n  weights: Optional `Tensor` whose rank is either 0, or the same rank as\r\n    `labels`, and must be broadcastable to `labels` (i.e., all dimensions must\r\n    be either `1`, or the same as the corresponding `losses` dimension).\r\n  scope: The scope for the operations performed in computing the loss.\r\n  loss_collection: collection to which this loss will be added.\r\n  reduction: Type of reduction to apply to loss.\r\n  dim: The old (deprecated) name for `axis`.\r\n\r\nReturns:\r\n  Weighted loss float `Tensor`. If `reduction` is `NONE`, this has the same\r\n  shape as `labels`; otherwise, it is scalar.\r\n\r\nRaises:\r\n  ValueError: If `predictions` shape doesn't match `labels` shape, or\r\n    `axis`, `labels`, `predictions` or `weights` is `None`.\r\n>>> exit()\r\nubuntu@ubuntu:~$ \r\n```",
        "createdAt" : "2017-10-07T18:36:19Z",
        "updatedAt" : "2017-10-07T18:36:19Z",
        "lastEditedBy" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cfaa4350dbb6b78ce1e2a6adc5ffa1b528fb799",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +639,643 @@    weights: Coefficients for the loss a scalar, a tensor of shape\n      [batch_size] or a tensor whose shape matches `predictions`.\n    scope: The scope for the operations performed in computing the loss.\n    dim: The old (deprecated) name for `axis`.\n"
  }
]