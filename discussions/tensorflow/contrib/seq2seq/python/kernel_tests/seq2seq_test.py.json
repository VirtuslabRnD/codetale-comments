[
  {
    "id" : "292dfb1d-2675-40cc-8e11-fab4dffe97e9",
    "prId" : 4686,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4686#pullrequestreview-8439824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58db9eb8-d25d-4a79-ba6d-9628da6996e2",
        "parentId" : null,
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "please also assertAllClose on the outputs of the encoder_training and encoder_inference, since i think they should be the same here?\n",
        "createdAt" : "2016-11-08T00:18:15Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "73033104-9b79-4eb5-98d5-f17c1d441cd2",
        "parentId" : "58db9eb8-d25d-4a79-ba6d-9628da6996e2",
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "this is the real important part.\n",
        "createdAt" : "2016-11-08T00:18:36Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "e99a23db-2c3a-44a5-857f-8437ae486b0d",
        "parentId" : "58db9eb8-d25d-4a79-ba6d-9628da6996e2",
        "authorId" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "body" : "Okay, I have been working some on this, here are my thoughts.\n\nI assume you want something in the regards of `decoder_outputs_inference == decoder_outputs_train`, given they have access to the same embedding.\n\nThis is really tricky because of the following reasons:\n\n**The `simple_decoder_fn_inference` picks random embeddings at every iteration**\n\nWe can solve this by taking the decoder_inference's output, argmax it and pick the same embeddings for the to match `decoder_inputs` (training decoder).\n\n**The `simple_decoder_fn_inference` randomly stops whenever it finds a EOS symbol, and it doesn't tell you when it stopped**\n\nThe problem here is that whenever it finishes (`True` in the `done` vector), `raw_rnn` just starts copying states.\nGiven that our current solution does not return the `done` vector to tell when it stopped, we can't assess when it started copying states. We could do some hack analyzing the `decoder_output_inference` looking for when it started copying, but I don't think this is the optimal solution.\n\nPerhaps we should consider returning the `done` vector from the `dynamic_rnn_decoder`, but not just a boolean vector, a vector with information on when every sequence in the batch stopped. So like a reverse engineered `sequence_lengths`.\nAfterwards we would use this as input for the training decoder, which should allow this test.\n\nOr, simply leave this test out ..?\n",
        "createdAt" : "2016-11-10T14:02:58Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "tags" : [
        ]
      },
      {
        "id" : "ae667e24-e080-4555-93cb-ca77055a0803",
        "parentId" : "58db9eb8-d25d-4a79-ba6d-9628da6996e2",
        "authorId" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "body" : "@ebrevdo would you like to keep `kernel_tests` as is, or modify `dynamic_rnn_decoder` to also return the sequence_lengths in order to support value assertion? (as elaborated above)\n",
        "createdAt" : "2016-11-14T17:05:52Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf9f5d32c2d618e7dd98fe222b92aec1a3cf9dd4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +122,126 @@        # The dynamic decoder might end earlier than `maximal_length`\n        # under inference\n        true_value = (decoder_sequence_length>=\n                      decoder_state_inference_res.shape[0])\n        self.assertEqual((true_value), True)"
  },
  {
    "id" : "82f4bc66-1eaa-4ac0-a45f-e813febd8c78",
    "prId" : 4686,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4686#pullrequestreview-8001551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdffde89-8c49-4338-bfe2-f8f167c44f69",
        "parentId" : null,
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "use .get_shape() instead of .shape\n",
        "createdAt" : "2016-11-08T00:18:27Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "a59a8ce2-70eb-4110-9394-0abaaf5ef33d",
        "parentId" : "fdffde89-8c49-4338-bfe2-f8f167c44f69",
        "authorId" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "body" : "Are you sure? `decoder_outputs_train_res` is a numpy array.\n",
        "createdAt" : "2016-11-10T12:52:51Z",
        "updatedAt" : "2016-11-30T17:47:01Z",
        "lastEditedBy" : "3dc6a44d-942e-4846-99a1-12a12c56989f",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf9f5d32c2d618e7dd98fe222b92aec1a3cf9dd4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +113,117 @@        self.assertEqual((decoder_sequence_length, batch_size,\n                          num_decoder_symbols),\n                         decoder_outputs_train_res.shape)\n        self.assertEqual((batch_size, num_decoder_symbols),\n                         decoder_outputs_inference_res.shape[1:3])"
  }
]