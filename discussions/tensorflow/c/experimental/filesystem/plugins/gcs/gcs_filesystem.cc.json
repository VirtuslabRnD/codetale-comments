[
  {
    "id" : "edab3550-687a-439f-8929-807830603135",
    "prId" : 41497,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41497#pullrequestreview-451151582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18d4b8cb-a87b-4972-ae44-b791666d83f0",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "```suggestion\r\n\r\n  GCSFile(std::string path, bool is_cache_enable, uint64_t buffer_size,\r\n```",
        "createdAt" : "2020-07-19T18:05:03Z",
        "updatedAt" : "2020-07-20T16:32:30Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "362255be18059e1ac03a53ede55299b84eb214f9",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +144,148 @@  std::string buffer ABSL_GUARDED_BY(buffer_mutex);\n\n  GCSFile(std::string path, bool is_cache_enable, uint64_t buffer_size,\n          ReadFn read_fn)\n      : path(path),"
  },
  {
    "id" : "f7b7f7ab-5544-4644-a580-5f5b2ac257a7",
    "prId" : 41282,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41282#pullrequestreview-446497566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9ba383e-b870-4169-b55a-832e3e33c421",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "This loop runs at most only one time. Is this intended?",
        "createdAt" : "2020-07-10T15:20:37Z",
        "updatedAt" : "2020-07-10T15:21:32Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "563ffc26-01e2-4b7c-95bf-f29e0e248e71",
        "parentId" : "f9ba383e-b870-4169-b55a-832e3e33c421",
        "authorId" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "body" : "Yes. As I comment, if there is at least one object satisfies the requirement, the path exists.",
        "createdAt" : "2020-07-10T15:25:27Z",
        "updatedAt" : "2020-07-10T15:25:42Z",
        "lastEditedBy" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "tags" : [
        ]
      },
      {
        "id" : "4d44e62b-e04f-4d53-94e3-f2e592b33e51",
        "parentId" : "f9ba383e-b870-4169-b55a-832e3e33c421",
        "authorId" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "body" : "In fact, if `path = \"/path/to/dir/\"` and there is an object `\"path/to/dir/file\"`, we consider that this path exists. `gcs::Prefix` will return the prefix equal to that path ( i.e object name is `path+name` )",
        "createdAt" : "2020-07-10T15:31:52Z",
        "updatedAt" : "2020-07-10T15:31:52Z",
        "lastEditedBy" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "67323782413704ac44923de99b3ceb3229e971fa",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +577,581 @@    // contains the path.\n    return TF_SetStatus(status, TF_OK, \"\");\n  }\n  return TF_SetStatus(\n      status, TF_NOT_FOUND,"
  },
  {
    "id" : "c5f420a4-f19d-43d7-8889-47b179fb32b8",
    "prId" : 41082,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41082#pullrequestreview-444035111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "811ae48f-e261-42f2-b2ed-c1c0591d7dca",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "Nit: Can we ensure that `object` always ends with a `/`?",
        "createdAt" : "2020-07-06T18:22:15Z",
        "updatedAt" : "2020-07-06T18:24:31Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "99cedfcf-554d-49d3-8b2d-61f8339c2340",
        "parentId" : "811ae48f-e261-42f2-b2ed-c1c0591d7dca",
        "authorId" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "body" : "Sorry I dont understand what you mean. `MaybeAppendSlach` will ensure object will end with a '/'",
        "createdAt" : "2020-07-07T01:44:06Z",
        "updatedAt" : "2020-07-07T01:44:15Z",
        "lastEditedBy" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "tags" : [
        ]
      },
      {
        "id" : "682e43fb-b299-44f6-bbc7-4e9910006df7",
        "parentId" : "811ae48f-e261-42f2-b2ed-c1c0591d7dca",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "I meant `object` is always produced by other functions. Can we ensure that those functions add the trailing slash?\r\n\r\nBasically, from the point of view of a caller to `ParseGCSPath`, `object` either always has the trailing `/` or not but not something in between. Otherwise, you always have to write code that uses both `ParseGCSPath` and `MaybeAppendSlash`.",
        "createdAt" : "2020-07-07T15:24:32Z",
        "updatedAt" : "2020-07-07T15:24:32Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "094743fa-47c7-4dc3-81bc-b7d2e98aba5d",
        "parentId" : "811ae48f-e261-42f2-b2ed-c1c0591d7dca",
        "authorId" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "body" : "I think we could force `object` always has the trailing `/` or not in `ParseGCSPath` but it causes many unwanted behaviors.\r\n\r\nIn the local filesystem, we have a function `mkdir` to create directory and the directory name can have `/` or not, it does not matter.\r\n\r\nBut with `gcs` filesystem, we have to create an empty object with the name ends with `/` so Google Cloud Console could display it as a directory.\r\n\r\nIf we force `object` does not have `/` at the end, Google Cloud Console will display that object as a empty object.\r\nIf we force `object` has `/` at the end, Google Cloud Console will display everything as a directory ( even the object's size is bigger than 0 ).",
        "createdAt" : "2020-07-07T16:00:04Z",
        "updatedAt" : "2020-07-07T16:00:05Z",
        "lastEditedBy" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "tags" : [
        ]
      },
      {
        "id" : "f2a56725-f96a-481c-98a4-6ca90354c347",
        "parentId" : "811ae48f-e261-42f2-b2ed-c1c0591d7dca",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "Ok, then let's leave it as it is",
        "createdAt" : "2020-07-07T16:01:26Z",
        "updatedAt" : "2020-07-07T16:01:26Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "90c65333e4091aa78fa069350ac0b999c1d11df1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +431,435 @@  }\n\n  MaybeAppendSlash(&object);\n  auto object_metadata = gcs_file->gcs_client.GetObjectMetadata(bucket, object);\n  TF_SetStatusFromGCSStatus(object_metadata.status(), status);"
  },
  {
    "id" : "40da063e-4053-4af9-9eff-24c57965d959",
    "prId" : 40710,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/40710#pullrequestreview-437599835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "320a1eed-b21d-4dc7-bd96-c987c090f159",
        "parentId" : null,
        "authorId" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "body" : "I dont know if we should use `absl::SimpleAtoi` or `std::stoll`. `std::stoll` throw an exception when no conversion could be performed. `absl::SimpleAtoi` is more convenient but I really do not want to use it because we have to add a dependecy `absl::strings` ( we don't use `absl::string_view` anymore)",
        "createdAt" : "2020-06-25T05:27:24Z",
        "updatedAt" : "2020-06-29T17:13:46Z",
        "lastEditedBy" : "702bb900-8991-4c2e-8fcb-419ec6a2d5ad",
        "tags" : [
        ]
      },
      {
        "id" : "996de6ec-e805-4cee-87e3-a5bd6a91b3a8",
        "parentId" : "320a1eed-b21d-4dc7-bd96-c987c090f159",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "Google coding style enforces avoidance of exceptions.\r\n\r\nIt's ok to depend on `absl::strings`.",
        "createdAt" : "2020-06-25T15:17:49Z",
        "updatedAt" : "2020-06-29T17:13:46Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1382c3bf0cc5211e1725a8d03e0158d8c91a92c3",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +102,106 @@  }\n  int64_t read;\n  if (!absl::SimpleAtoi(stream.headers().find(\"content-length\")->second,\n                        &read)) {\n    TF_SetStatus(status, TF_UNKNOWN, \"Could not get content-length header\");"
  }
]