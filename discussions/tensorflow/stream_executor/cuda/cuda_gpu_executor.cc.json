[
  {
    "id" : "50257ce6-6cc2-4caa-b063-b5f00dc1c8aa",
    "prId" : 24944,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24944#pullrequestreview-203521947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "051a2d65-5f2b-4976-9708-9398fbe11bf9",
        "parentId" : null,
        "authorId" : "53c3ad32-5f8d-4187-bb81-3faeb47b61f3",
        "body" : "Is this too clunky, or does it solve the problem? (We could have separate messages depending on the level of failure, if that's desirable)",
        "createdAt" : "2019-01-17T23:24:49Z",
        "updatedAt" : "2019-01-17T23:24:49Z",
        "lastEditedBy" : "53c3ad32-5f8d-4187-bb81-3faeb47b61f3",
        "tags" : [
        ]
      },
      {
        "id" : "c2f5070b-6ad3-462f-995a-9be5cbde0577",
        "parentId" : "051a2d65-5f2b-4976-9708-9398fbe11bf9",
        "authorId" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "body" : "I believe the review I'd left was about a way to make this a little less clunky, but it's nbd.  Let's just take this patch, it's sat for long enough.\r\n\r\nThank you!",
        "createdAt" : "2019-02-13T20:08:28Z",
        "updatedAt" : "2019-02-13T20:08:28Z",
        "lastEditedBy" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "tags" : [
        ]
      },
      {
        "id" : "008fdfb7-15ec-43bc-9cc1-ac2b275c577f",
        "parentId" : "051a2d65-5f2b-4976-9708-9398fbe11bf9",
        "authorId" : "53c3ad32-5f8d-4187-bb81-3faeb47b61f3",
        "body" : "Gotcha, glad to help.\r\nThanks!",
        "createdAt" : "2019-02-14T00:44:23Z",
        "updatedAt" : "2019-02-14T00:44:23Z",
        "lastEditedBy" : "53c3ad32-5f8d-4187-bb81-3faeb47b61f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7428e058eb3d69d801bc3ed84822ae33b4c37fab",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1162,1166 @@    CUDADriver::UnloadModule(context_, blank_module);\n  }\n  if (!ptx_success) {\n    LOG(ERROR) << \"Failed to calculate max blocks per SM using dummy kernel.\";\n  }"
  },
  {
    "id" : "02a61afb-64f9-4812-8f72-d0903ae9f191",
    "prId" : 24878,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24878#pullrequestreview-192324716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c682fe2-41d4-44e1-a97e-a59d6c5b7b0a",
        "parentId" : null,
        "authorId" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "body" : "(OK, I see the ValueOrDie()'ing below, so this is fine.)",
        "createdAt" : "2019-01-14T19:40:03Z",
        "updatedAt" : "2019-01-14T20:53:31Z",
        "lastEditedBy" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "36af98052e0f92c303a85244eebdf7876e5cce19",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1060,1064 @@\n    int clock_rate = CUDADriver::GetDeviceAttribute(\n        CU_DEVICE_ATTRIBUTE_CLOCK_RATE, device_).ValueOrDie();\n    builder.set_clock_rate_ghz(static_cast<float>(clock_rate) / 1e6);\n  }"
  },
  {
    "id" : "0d228812-6915-47e2-9733-3a319fdcb562",
    "prId" : 5991,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/5991#pullrequestreview-10846392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fe6c7a5-95e5-4b1b-9618-c04c242bd59a",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Don't we need an `#endif` at the end of the file for this?",
        "createdAt" : "2016-11-30T20:53:14Z",
        "updatedAt" : "2016-11-30T22:01:00Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "fc443a78-93e1-4fe8-800d-6d7d68bd1af5",
        "parentId" : "1fe6c7a5-95e5-4b1b-9618-c04c242bd59a",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Nevermind, I finally found it :)",
        "createdAt" : "2016-11-30T20:53:47Z",
        "updatedAt" : "2016-11-30T22:01:00Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f8f2eefbf8d5487bf918ef6cc9d083288db160",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +904,908 @@  // Windows support for NUMA is not currently implemented. Return node 0.\n  return 0;\n#else\n  VLOG(2) << \"trying to read NUMA node for device ordinal: \" << device_ordinal;\n  static const int kUnknownNumaNode = -1;"
  }
]