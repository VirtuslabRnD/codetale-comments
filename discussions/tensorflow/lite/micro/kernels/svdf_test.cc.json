[
  {
    "id" : "cc358ea5-db96-46fb-9a8e-534f3a82d83e",
    "prId" : 45052,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/45052#pullrequestreview-538180688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "435c95ca-3374-4472-b96c-617bc2d7a168",
        "parentId" : null,
        "authorId" : "9eb70629-c9ec-4247-97de-8f2fed53eb30",
        "body" : "I see one potential difficulty with this approach.  The float variants are not supported on HiFi mini. But they can be supported on other cores like HiFi 4 or HiFi 5, for these we would like these tests to be enabled.\r\nInstead of a platform specific check like #if !defined(XTENSA), can we add a 'test specific' check like #if !defined(DISABLE_SVDF_FLOAT_TESTS) ? We could then selectively disable the tests based on TARGET_ARCH in xtensa_makefile.inc.",
        "createdAt" : "2020-11-24T17:46:44Z",
        "updatedAt" : "2020-11-24T17:46:44Z",
        "lastEditedBy" : "9eb70629-c9ec-4247-97de-8f2fed53eb30",
        "tags" : [
        ]
      },
      {
        "id" : "54c0485c-07ab-49e7-8ce6-0b1e6982734f",
        "parentId" : "435c95ca-3374-4472-b96c-617bc2d7a168",
        "authorId" : "5729d906-4981-47d8-8a16-0c5af0b868d2",
        "body" : "That's a good point. We can incrementally make this check more specific (i.e. `#if !defined(XTENSA_HIFIMINI)` as needed).\r\n\r\nWhat I'd like to have is a consistent way to determine which cases are supported for a particular target while reading the test code. With `DISABLE_SVDF_FLOAT_TESTS`, someone reading the code would have to then look through the makefiles to see which targets define this. And there would be a separate define for `DISABLE_CONV_FLOAT_TESTS` etc.\r\n\r\nAnd the medium-term goal is to hopefully have all test cases pass on all targets with hifimini being the exception rather than the norm.\r\n\r\nDoes that seem ok to you?",
        "createdAt" : "2020-11-24T18:04:37Z",
        "updatedAt" : "2020-11-24T18:04:37Z",
        "lastEditedBy" : "5729d906-4981-47d8-8a16-0c5af0b868d2",
        "tags" : [
        ]
      },
      {
        "id" : "fdb9f974-63f8-4e1e-975b-9a9016c5f9ca",
        "parentId" : "435c95ca-3374-4472-b96c-617bc2d7a168",
        "authorId" : "9eb70629-c9ec-4247-97de-8f2fed53eb30",
        "body" : "Yes, sounds good.\r\n`#if !defined(XTENSA_HIFIMINI)` will take care of unsupported hifimini testcases. For other cores we will have most of the tests passing, either as optimized implementation or the reference implementation.",
        "createdAt" : "2020-11-25T06:07:29Z",
        "updatedAt" : "2020-11-25T06:07:29Z",
        "lastEditedBy" : "9eb70629-c9ec-4247-97de-8f2fed53eb30",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc681e556a469af74e000455f28ec46bb13c8c74",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +662,666 @@#if !defined(XTENSA)  // TODO(b/170332589): xtensa kernels are less general than\n                      // reference kernels and we ifdef out test cases that are\n                      // currently known to fail.\nTF_LITE_MICRO_TEST(SvdfFloat2x2Input2x4OutputShouldMatchGolden) {\n  constexpr int batch_size = 2;"
  }
]