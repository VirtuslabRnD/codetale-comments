[
  {
    "id" : "88472bd7-f7e1-4e0b-b1cf-268deab2f2a7",
    "prId" : 47159,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/47159#pullrequestreview-592288094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d61b45ef-f953-46d5-9bc6-cba337ff469d",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "Probably worth a brief comment here as to why we need/want stable_sort.",
        "createdAt" : "2021-02-16T19:49:52Z",
        "updatedAt" : "2021-02-17T15:00:37Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "fa823435-0f93-4e6c-b684-2d3176c123a1",
        "parentId" : "d61b45ef-f953-46d5-9bc6-cba337ff469d",
        "authorId" : "6d042354-7ccf-45bf-9ecc-ef107262dfd2",
        "body" : "Done",
        "createdAt" : "2021-02-17T15:01:18Z",
        "updatedAt" : "2021-02-17T15:01:18Z",
        "lastEditedBy" : "6d042354-7ccf-45bf-9ecc-ef107262dfd2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4acfe34918a294f7a251ddffaa804ce767132d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +373,377 @@  // We want here a stable sort, in order to get completely defined output.\n  // In this way TFL and TFLM can be bit-exact.\n  std::stable_sort(\n      indices, indices + num_values,\n      [&values](const int i, const int j) { return values[i] > values[j]; });"
  },
  {
    "id" : "624913a1-1a89-4942-8a6a-878ef427152d",
    "prId" : 29939,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/29939#pullrequestreview-262135137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37e9d02f-0d1c-4e95-a1e4-8fbbf8dd5211",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "What about sorted_values? Wouldn't it have the same issue?",
        "createdAt" : "2019-07-12T18:12:26Z",
        "updatedAt" : "2019-07-12T18:12:30Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "311f850f-690b-4585-85c0-dbb89a6fd50b",
        "parentId" : "37e9d02f-0d1c-4e95-a1e4-8fbbf8dd5211",
        "authorId" : "b07588d2-4c14-4b0e-94c5-de65c4d0aef2",
        "body" : "@jdduke Thank you for your reviewing.\r\n\r\nI don't think sorted_values has the same issue.\r\n\r\nThe access range of sorted_values is [0, **num_indices_to_sort**).\r\n```\r\nfor (int row = 0; row < num_indices_to_sort; row++) {\r\n  sorted_values[row] = ....\r\n}\r\n```\r\n\r\nWhere **num_indices_to_sort** is guaranteed to be less than max_detections.\r\n\r\n```\r\nint num_indices_to_sort = std::min(output_index, max_detections);\r\n```\r\n\r\nSo, I'm  thinking my first patch is fine, what do you think ?\r\n",
        "createdAt" : "2019-07-13T01:53:29Z",
        "updatedAt" : "2019-07-13T02:50:24Z",
        "lastEditedBy" : "b07588d2-4c14-4b0e-94c5-de65c4d0aef2",
        "tags" : [
        ]
      },
      {
        "id" : "7530b22d-e450-4550-9486-4d754531451e",
        "parentId" : "37e9d02f-0d1c-4e95-a1e4-8fbbf8dd5211",
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "That sounds right. I wonder if there's a simple test case we can add which exercises this? If not, no worries.",
        "createdAt" : "2019-07-15T16:35:15Z",
        "updatedAt" : "2019-07-15T16:35:15Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "2dc86ad3-cbc1-459d-8884-5d0e1c1be8fb",
        "parentId" : "37e9d02f-0d1c-4e95-a1e4-8fbbf8dd5211",
        "authorId" : "b07588d2-4c14-4b0e-94c5-de65c4d0aef2",
        "body" : "@jdduke Thank you for your reviewing.\r\n\r\nI also think it would be better if there is a test.\r\nBut, I'm afraid that I can't add the test case because I'm not familiar with the test framework.",
        "createdAt" : "2019-07-16T00:15:33Z",
        "updatedAt" : "2019-07-16T00:15:33Z",
        "lastEditedBy" : "b07588d2-4c14-4b0e-94c5-de65c4d0aef2",
        "tags" : [
        ]
      }
    ],
    "commit" : "769d2a531b9b685b97f20395b2333c0416503e16",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +501,505 @@  sorted_indices.resize(num_boxes + max_detections);\n  std::vector<float> sorted_values;\n  sorted_values.resize(max_detections);\n\n  for (int col = 0; col < num_classes; col++) {"
  }
]