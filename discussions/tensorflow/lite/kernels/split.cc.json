[
  {
    "id" : "20383e96-67c9-469a-9f16-f925e219c4b3",
    "prId" : 26663,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26663#pullrequestreview-214314423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41523583-2440-4176-aa74-c55e9ba26a6a",
        "parentId" : null,
        "authorId" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "body" : "I think it's still useful to keep the \"Only float32....supported\" part.",
        "createdAt" : "2019-03-14T01:32:16Z",
        "updatedAt" : "2019-03-14T01:32:16Z",
        "lastEditedBy" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "tags" : [
        ]
      },
      {
        "id" : "7ca0649e-da96-4c6e-8796-1e8f2631717d",
        "parentId" : "41523583-2440-4176-aa74-c55e9ba26a6a",
        "authorId" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "body" : "@haozha111 : Yes it is useful and there is no issue in it currently, but it is kind of static message, so modified it, so that later if some new type support added, no need to worry to update the error message.",
        "createdAt" : "2019-03-14T04:22:02Z",
        "updatedAt" : "2019-03-14T04:22:02Z",
        "lastEditedBy" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7873f5718ae576fe4f2e6871b2ecbe359b6990b",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +153,157 @@    }\n    default:\n      context->ReportError(context, \"Type %s currently not supported.\",\n                           TfLiteTypeGetName(op_context.input->type));\n      return kTfLiteError;"
  },
  {
    "id" : "08e882ab-03e1-4e23-821b-3608f2073009",
    "prId" : 26663,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26663#pullrequestreview-216837700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "688eb50a-a778-412c-90c7-6305257f5fe4",
        "parentId" : null,
        "authorId" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "body" : "It seems that optimized_ops and reference_ops share the same Split implementation(https://github.com/tensorflow/tensorflow/blob/fe9d5075d4c71e701f1acbe2cc267b1165d8cedd/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L88). I'm not sure why we call them separately here, Jared, is there any background knowledge that I might not be aware of?",
        "createdAt" : "2019-03-14T01:40:38Z",
        "updatedAt" : "2019-03-14T01:40:38Z",
        "lastEditedBy" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "tags" : [
        ]
      },
      {
        "id" : "e353d734-56f6-43d8-ae0b-8133f2c7578e",
        "parentId" : "688eb50a-a778-412c-90c7-6305257f5fe4",
        "authorId" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "body" : "I think it's fine to just use reference_ops::Split now.",
        "createdAt" : "2019-03-20T16:29:15Z",
        "updatedAt" : "2019-03-20T16:29:15Z",
        "lastEditedBy" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7873f5718ae576fe4f2e6871b2ecbe359b6990b",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +127,131 @@  op_params.num_split = NumOutputs(node);                           \\\n  op_params.axis = axis_value;                                      \\\n  reference_ops::Split(op_params, GetTensorShape(op_context.input), \\\n                       GetTensorData<scalar>(op_context.input),     \\\n                       all_outputs.shapes(), all_outputs.data());"
  },
  {
    "id" : "3983645e-c4a1-44ae-9e30-3b0ec788f087",
    "prId" : 26663,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26663#pullrequestreview-216886270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e50c7260-48a9-4fa2-81ec-c7277c3952e8",
        "parentId" : null,
        "authorId" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "body" : "I think the axis value can be in the range of [-rank(value), rank(value)) ? Can you add code to handle in this case, or is it already handled elsewhere?",
        "createdAt" : "2019-03-20T16:28:14Z",
        "updatedAt" : "2019-03-20T16:28:14Z",
        "lastEditedBy" : "a86ca72a-4d56-4644-9f50-5d1e5a70e8d7",
        "tags" : [
        ]
      },
      {
        "id" : "1a206cff-b993-499c-ae0c-ef95c017e73b",
        "parentId" : "e50c7260-48a9-4fa2-81ec-c7277c3952e8",
        "authorId" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "body" : "@haozha111: as the axis is converted to positive in code above, so the negative bounds are eliminated.",
        "createdAt" : "2019-03-20T17:51:22Z",
        "updatedAt" : "2019-03-20T17:51:22Z",
        "lastEditedBy" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7873f5718ae576fe4f2e6871b2ecbe359b6990b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@\n  TF_LITE_ENSURE(context, axis_value >= 0);\n  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\n\n  const int input_size = SizeOfDimension(input, axis_value);"
  }
]