[
  {
    "id" : "11b3dadb-e511-4602-88b6-37807184751d",
    "prId" : 27506,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27506#pullrequestreview-223088088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c4ef9fc-cb8c-4087-af44-4301fd4455fc",
        "parentId" : null,
        "authorId" : "0a35de17-09bf-47a1-9bfa-84c0a8c63acb",
        "body" : "the problem is this compare prepare is shared among (== , !=, >=, <=, >, <), and it seems bool can only support == & !=",
        "createdAt" : "2019-04-04T23:49:51Z",
        "updatedAt" : "2019-04-04T23:49:57Z",
        "lastEditedBy" : "0a35de17-09bf-47a1-9bfa-84c0a8c63acb",
        "tags" : [
        ]
      },
      {
        "id" : "b5aa86fe-ebfc-440a-871b-82dfb725ded7",
        "parentId" : "0c4ef9fc-cb8c-4087-af44-4301fd4455fc",
        "authorId" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "body" : "> the problem is this compare prepare is shared among (== , !=, >=, <=, >, <), and it seems bool can only support == & !=\r\n\r\n@renjie-liu : Yes, you are right, i also observed that. But i think as the wrong datatype can also be captured in Eval() stage and it is not a costly operation, so i felt, lets keep the Prepare() more generic and excluded any specific case check in Prepare().\r\n\r\nWelcome for any suggestions you have, Thanks!",
        "createdAt" : "2019-04-05T03:39:59Z",
        "updatedAt" : "2019-04-05T03:39:59Z",
        "lastEditedBy" : "dceb08d3-f8d0-445c-986b-7b52770065bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "01042658f562530f5d32eb16f908b9d178e9311a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +39,43 @@\n  // Don't support string.\n  TF_LITE_ENSURE(context, input1->type != kTfLiteString);\n  // Currently only support tensors have the same type.\n  TF_LITE_ENSURE_TYPES_EQ(context, input1->type, input2->type);"
  }
]