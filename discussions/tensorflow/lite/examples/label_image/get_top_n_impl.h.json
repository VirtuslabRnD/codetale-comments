[
  {
    "id" : "19842f6b-a371-4fc8-8dfc-c2a76e1a2aee",
    "prId" : 34537,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34537#pullrequestreview-324101565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cc70fbd-1720-49de-92f9-da7c9084fcfe",
        "parentId" : null,
        "authorId" : "c14be44a-1748-4d93-a075-2bb17587c151",
        "body" : "Why is this 256 while the uint8 case is 255?",
        "createdAt" : "2019-11-28T00:01:31Z",
        "updatedAt" : "2020-02-10T22:17:46Z",
        "lastEditedBy" : "c14be44a-1748-4d93-a075-2bb17587c151",
        "tags" : [
        ]
      },
      {
        "id" : "9db18159-f53c-49ad-ac5d-ed48867087b3",
        "parentId" : "5cc70fbd-1720-49de-92f9-da7c9084fcfe",
        "authorId" : "15fbfdc4-23b1-4ed3-9c13-a4cc1dffc6de",
        "body" : "This is to dequantize values in the final op. For uint8 cases, as far as I can tell, most models generated with quantized-aware training have value between 0 and 255.  \r\n\r\nThe last layer of the int8 [Mobilenet V3 EdgeTPU model](https://storage.cloud.google.com/mobilenet_edgetpu/checkpoints/mobilenet_edgetpu_224_1.0.tgz) I used to test this, has scale = 0.00390625 = 1 / 256.",
        "createdAt" : "2019-11-28T07:47:11Z",
        "updatedAt" : "2020-02-10T22:17:46Z",
        "lastEditedBy" : "15fbfdc4-23b1-4ed3-9c13-a4cc1dffc6de",
        "tags" : [
        ]
      }
    ],
    "commit" : "20e81252b396643ab8f6474508dcb21258022110",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +48,52 @@        break;\n      case kTfLiteInt8:\n        value = (prediction[i] + 128) / 256.0;\n        break;\n      case kTfLiteUInt8:"
  },
  {
    "id" : "7d72da56-1b8f-4f96-b575-e8c158a8601f",
    "prId" : 34537,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34537#pullrequestreview-356306195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "859f60ac-6317-4b2a-9991-10a4d3fd58a2",
        "parentId" : null,
        "authorId" : "203062e3-cc6c-4775-baa1-b30b3a85ba23",
        "body" : "This is causing issues in `label_image_test.cc`, where some tests pass in a bool at parameter no. 6. So you will probably have to modify that file.",
        "createdAt" : "2020-02-10T17:10:39Z",
        "updatedAt" : "2020-02-10T22:17:46Z",
        "lastEditedBy" : "203062e3-cc6c-4775-baa1-b30b3a85ba23",
        "tags" : [
        ]
      },
      {
        "id" : "05fd9afa-f1cd-43af-8a4d-340d2043afd1",
        "parentId" : "859f60ac-6317-4b2a-9991-10a4d3fd58a2",
        "authorId" : "15fbfdc4-23b1-4ed3-9c13-a4cc1dffc6de",
        "body" : "Thanks. Fixed.",
        "createdAt" : "2020-02-10T22:17:55Z",
        "updatedAt" : "2020-02-10T22:17:55Z",
        "lastEditedBy" : "15fbfdc4-23b1-4ed3-9c13-a4cc1dffc6de",
        "tags" : [
        ]
      }
    ],
    "commit" : "20e81252b396643ab8f6474508dcb21258022110",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +33,37 @@void get_top_n(T* prediction, int prediction_size, size_t num_results,\n               float threshold, std::vector<std::pair<float, int>>* top_results,\n               TfLiteType input_type) {\n  // Will contain top N results in ascending order.\n  std::priority_queue<std::pair<float, int>, std::vector<std::pair<float, int>>,"
  }
]