[
  {
    "id" : "6d11500a-6b08-4592-b57f-951947a20b9e",
    "prId" : 39988,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/39988#pullrequestreview-449453228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05025edd-36c5-4aff-b52c-76fa9ffe1742",
        "parentId" : null,
        "authorId" : "0a35de17-09bf-47a1-9bfa-84c0a8c63acb",
        "body" : "can you update the test as well? \r\n\r\nalso the runtime version?\r\n\r\nthanks!",
        "createdAt" : "2020-07-16T01:50:01Z",
        "updatedAt" : "2020-07-17T09:38:14Z",
        "lastEditedBy" : "0a35de17-09bf-47a1-9bfa-84c0a8c63acb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c5d55b335e37d893345c44e9ed8c851057c6f70",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +515,519 @@    case BuiltinOperator_CONCATENATION:\n    case BuiltinOperator_SOFTMAX:\n    case BuiltinOperator_MEAN:\n    case BuiltinOperator_PAD:\n    case BuiltinOperator_PADV2:"
  },
  {
    "id" : "27d4edac-da94-45ed-9751-73330339baed",
    "prId" : 36060,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36060#pullrequestreview-361296305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aea8daec-fe99-477d-9243-364c2e09c412",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "I would avoid grouping pack w/ MAX/MIN, OK to have 2 separate case branches.",
        "createdAt" : "2020-02-19T17:30:42Z",
        "updatedAt" : "2020-02-21T10:11:16Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "7ed4be00-e83e-4802-a0d3-6390f41f6512",
        "parentId" : "aea8daec-fe99-477d-9243-364c2e09c412",
        "authorId" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "body" : "@jdduke done",
        "createdAt" : "2020-02-19T17:38:06Z",
        "updatedAt" : "2020-02-21T10:11:16Z",
        "lastEditedBy" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "tags" : [
        ]
      }
    ],
    "commit" : "11c9c470e0cb194b8fce21c84b2f8dcb74812c74",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +305,309 @@\n    case BuiltinOperator_PACK:\n      if (op_sig.input_types.at(0) == TensorType_INT8) {\n        return 2;\n      }"
  },
  {
    "id" : "9045b07e-248f-4d14-b54e-7e84941f1903",
    "prId" : 35985,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35985#pullrequestreview-425494176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c0a30a1-d62e-417a-a13c-6c5fe8d13f12",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "We should unconditionally initialize op_sig.options.addsub.pot_scale_int16. That is, it should be set to false, then we do the if() assignment.\r\n\r\nSame below for sub. ",
        "createdAt" : "2020-06-05T17:35:34Z",
        "updatedAt" : "2020-06-29T13:02:23Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a9ce94e5e19861a536507bbe7c9bcedea8a4491",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +691,695 @@      op_sig.options.addsub.pot_scale_int16 = true;\n      if (add_option) {\n        op_sig.options.addsub.pot_scale_int16 = add_option->pot_scale_int16();\n      }\n    } break;"
  },
  {
    "id" : "4b371abe-3dd5-4c5c-8384-98f5a2856c9c",
    "prId" : 35985,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35985#pullrequestreview-453278475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "This CL got rolled back for an unrelated reason, but shouldn't the \"default\" case use the existing version? Don't we only need version 5 for the non-pot case?",
        "createdAt" : "2020-07-09T19:34:38Z",
        "updatedAt" : "2020-07-09T19:34:45Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "386b56e6-788c-48ea-883c-ff490ba65efa",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "I ask because this broke some internal conversion test cases, as the converter seems to be eagerly setting the version to 5, despite nothing having changed in the model (because pot_scale_int16 is getting set to true by default).",
        "createdAt" : "2020-07-09T19:35:43Z",
        "updatedAt" : "2020-07-09T19:35:43Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "b999c486-3188-4bb1-8edc-c14669515503",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "body" : "Hi @jdduke I set it to 5 here, because INT16 and pot case was not versioned before - maybe, this is wrong. Please let me know if I need to correct this  - Should it be a separate PR ?\r\nThanks",
        "createdAt" : "2020-07-10T09:23:17Z",
        "updatedAt" : "2020-07-10T09:23:18Z",
        "lastEditedBy" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "tags" : [
        ]
      },
      {
        "id" : "c5cd022d-38d9-4837-9932-644e28aef515",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "Probably an oversight on our part, as we had some internal tooling using the existing int16 kernels. But even then, this condition seems odd, shouldn't the *new* behavior (non-pot-scale) get the highest op version?",
        "createdAt" : "2020-07-10T16:30:22Z",
        "updatedAt" : "2020-07-10T16:30:23Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "c72e2c3b-4c16-48df-820e-b5f5e0be929e",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "body" : "Yes, you are right @jdduke. I will correct. Should it be a separate PR ?\r\nI have a task to write versioning tests for ADD/SUB. I will include this change into this new PR. Is it okay ?",
        "createdAt" : "2020-07-10T19:10:30Z",
        "updatedAt" : "2020-07-10T19:10:31Z",
        "lastEditedBy" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "tags" : [
        ]
      },
      {
        "id" : "c298e534-d563-43cd-b931-d7294c5da159",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "Nah, that's OK. I'll fix it in the internal CL, just wanted to confirm. Thanks!",
        "createdAt" : "2020-07-10T19:19:24Z",
        "updatedAt" : "2020-07-10T19:19:24Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "157041c5-cf0f-4c90-9fdc-438fd845e545",
        "parentId" : "996c0c8d-6b7b-4cc3-bbe9-d7157b61ea81",
        "authorId" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "body" : "Hi @jdduke I noticed that these changes are still rolled back. Is there anything I can help with to get it merged ? Thanks",
        "createdAt" : "2020-07-22T12:43:03Z",
        "updatedAt" : "2020-07-22T12:43:03Z",
        "lastEditedBy" : "44d28fc5-28b1-4fbb-b2f4-273674b18507",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a9ce94e5e19861a536507bbe7c9bcedea8a4491",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +466,470 @@          op_sig.output_types.at(0) == TensorType_INT16) {\n        if (op_sig.options.addsub.pot_scale_int16) {\n          return 5;\n        } \n      }"
  }
]