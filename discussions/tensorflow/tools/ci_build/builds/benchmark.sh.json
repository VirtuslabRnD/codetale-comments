[
  {
    "id" : "cc35bdea-e218-4705-a55c-c85b4a01db16",
    "prId" : 1603,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcc0edcd-f39a-4cc0-a6ca-41cc20663674",
        "parentId" : null,
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "Do you need to set up bazel in any special way here?  Or do you expect there to be a properly configured ~/.bazelrc?\n",
        "createdAt" : "2016-03-24T14:49:11Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddbdc3a1d5638e4e012ad28ff709e7b8ba06a5d8",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@  echo \"Running benchmark test (${COUNTER} / ${N_TESTS}): ${BENCHMARK_TEST}\"\n\n  bazel test ${OPT_FLAG} --cache_test_results=no \"${BENCHMARK_TEST}\"\n  TEST_RESULT=$?\n"
  },
  {
    "id" : "42da4a79-ce06-488f-8839-486c61f9d931",
    "prId" : 1603,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b5b6ba8-71c0-4200-97b1-76f46ad1aad8",
        "parentId" : null,
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "set -u\n",
        "createdAt" : "2016-03-24T14:49:48Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "dc6f2034-a3bf-4a4c-bba9-1dd9989d2def",
        "parentId" : "9b5b6ba8-71c0-4200-97b1-76f46ad1aad8",
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "Do you mean set -e? If so, we've decided not use 'set -e', but check for errors explicitly. See: http://mywiki.wooledge.org/BashFAQ/105\n",
        "createdAt" : "2016-03-24T15:11:29Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "632a2270-d31e-4e5c-a7ec-91ee866cd60a",
        "parentId" : "9b5b6ba8-71c0-4200-97b1-76f46ad1aad8",
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "Nope, \"set -u\" causes the script to fail if you try to access a variable that is undefined.  Different type of strictness.  You can then use \"${VAR:blah}\" for \"blah if $VAR is undefined\".\n",
        "createdAt" : "2016-03-24T16:46:46Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "5df454fa-b5b1-4bd3-9686-3e8c8241c5d2",
        "parentId" : "9b5b6ba8-71c0-4200-97b1-76f46ad1aad8",
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "OK. Added it. Thanks.\n",
        "createdAt" : "2016-03-24T17:29:26Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddbdc3a1d5638e4e012ad28ff709e7b8ba06a5d8",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@#     Path to a binary / script that will handle the test log and other related\n#     info after the completion of each benchmark test.\n\nset -u\n"
  },
  {
    "id" : "6fa8f75d-cdb3-45cc-aed1-086eabe709a5",
    "prId" : 1603,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc10b345-6ffa-4995-a3d6-8cd64b2b9b96",
        "parentId" : null,
        "authorId" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "body" : "This should probably exit hard?  also echo >&2 -- after youve printed out the error's test_log?\n",
        "createdAt" : "2016-03-24T14:54:23Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "47966c70-ca9e-4f42-9f8b-165f9cd3ebaa",
        "tags" : [
        ]
      },
      {
        "id" : "e3480e84-2f0b-4f03-af77-bd08cfe7fb00",
        "parentId" : "fc10b345-6ffa-4995-a3d6-8cd64b2b9b96",
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "I think it's better to finish running all the benchmark tests even if there are some test failures. This is how other tests (e.g., bazel tests, pip test-on-install) are done. \n",
        "createdAt" : "2016-03-24T15:19:56Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "2047ee72-ca19-475c-b4d4-75ebae828c3d",
        "parentId" : "fc10b345-6ffa-4995-a3d6-8cd64b2b9b96",
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "Added >&2 to \"cat ${TEST_LOG}\"\n",
        "createdAt" : "2016-03-24T15:22:44Z",
        "updatedAt" : "2016-03-24T21:17:33Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddbdc3a1d5638e4e012ad28ff709e7b8ba06a5d8",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +105,109 @@    TEST_RESULT=2\n\n    echo \"ERROR: Cannot find log file from benchmark ${BENCHMARK_TEST} @ \"\\\n\"${TEST_LOG}\"\n  fi"
  }
]