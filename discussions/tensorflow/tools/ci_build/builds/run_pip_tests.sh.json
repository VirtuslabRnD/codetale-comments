[
  {
    "id" : "04c79f74-08cb-4ac1-9772-d29ca86316d5",
    "prId" : 45161,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/45161#pullrequestreview-562994977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Why is \"yes\" needed here? That doesn't look ROCM-specific",
        "createdAt" : "2020-12-18T02:24:08Z",
        "updatedAt" : "2020-12-18T02:24:15Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "f29b8255-78a8-470d-b851-11c321d871ae",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "The `configure.py` script requires user input...not having the `yes \"\" | ` preceding it, will make the `run_pip_tests.sh` hang at that command\r\n\r\n```\r\n...\r\nroot@ixt-rack-04:/root/tensorflow# /usr/bin/python3 configure.py \r\nYou have bazel 3.1.0 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python3]: \r\n...\r\n```\r\n\r\nThe `yes \"\"` command simply picks the default options for all user input\r\n\r\n\r\n",
        "createdAt" : "2020-12-18T20:36:48Z",
        "updatedAt" : "2020-12-18T20:40:27Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      },
      {
        "id" : "2e0bd656-2572-4c64-9353-e03e3e2f553a",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Can we instead populate `.tf_configure.bazelrc` and not run `configure.py` at all?",
        "createdAt" : "2021-01-05T18:03:25Z",
        "updatedAt" : "2021-01-05T18:03:25Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "6abe45ad-6c03-47ea-9361-b4a8614c3cf4",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "hmm....think we are not in sync.\r\n\r\nI thought `.tf_configure.bazelrc` is file created+written to, when we run the `configure.py` script.  \r\n\r\nIf the end result is updating the `.tf_configure.bazelrc` file, does it matter whether we modify it directly or via the `configure.py` script?",
        "createdAt" : "2021-01-05T18:11:07Z",
        "updatedAt" : "2021-01-05T18:11:07Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      },
      {
        "id" : "a9d89e45-f1f6-4d84-9e81-6d921b7d28bc",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "> I thought .tf_configure.bazelrc is file created+written to, when we run the configure.py script.\r\n\r\nYes.\r\n\r\n> If the end result is updating the .tf_configure.bazelrc file, does it matter whether we modify it directly or via the configure.py script?\r\n\r\nPiping `yes` to a configuration script might have unexpected results: it's really not clear what is it doing, and it's subject to changes if `configure.py` changes. I think it's better to explicitly provide a configuration file instead.",
        "createdAt" : "2021-01-05T18:24:32Z",
        "updatedAt" : "2021-01-05T18:24:32Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "1005c7f6-10ae-4c65-b18b-a7e173437d04",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "@sanjoy ",
        "createdAt" : "2021-01-05T18:24:58Z",
        "updatedAt" : "2021-01-05T18:24:58Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "7212d683-a343-442e-a518-af7137418673",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "I agree that checking in a pre-populated `.tf_configure.bazelrc` is better.  I believe @av8ramit tried fixing this for the other build scripts we have, which had to be rolled back.  Amit, do you remember why it had to be rolled back?",
        "createdAt" : "2021-01-05T23:43:21Z",
        "updatedAt" : "2021-01-05T23:43:21Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "5fa325bb-23da-4c00-be23-139667ea7770",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "@pak-laura tried to remove the yes pipe logic, but it was deemed infeasible due to issues with bazel. Laura, any chance you can reply here with a summary of the issues you faced. ",
        "createdAt" : "2021-01-05T23:52:30Z",
        "updatedAt" : "2021-01-05T23:52:30Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      },
      {
        "id" : "987489e8-e2bc-4023-9e0a-ded7e2388d7b",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "+1 to having configuration checked in. We were recently hit by `--march-native` being written by default in `.tf_configure.bazelrc` which made TF 2.4 wheels require AVX2.",
        "createdAt" : "2021-01-06T16:53:17Z",
        "updatedAt" : "2021-01-06T16:53:17Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "14b3726a-9065-4c22-8cb1-0bf1905f5d67",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "I am not quite sure I understand what the  \"pre-populated `.tf_configure.bazelrc` file\" solution should look like.\r\n\r\nCurrently the generated `.tf_configure.bazelrc` file looks like\r\n```\r\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3\"                                \r\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/dist-packages\"          \r\nbuild --python_path=\"/usr/bin/python3\"                                               \r\nbuild --config=xla                                                                   \r\nbuild --config=rocm                                                                  \r\nbuild --action_env ROCM_PATH=\"/opt/rocm-4.0.0\"                                       \r\nbuild:opt --copt=-march=native                                                       \r\nbuild:opt --copt=-Wno-sign-compare                                                   \r\nbuild:opt --host_copt=-march=native                                                  \r\nbuild:opt --define with_default_optimizations=true                                   \r\ntest --flaky_test_attempts=3                                                         \r\ntest --test_size_filters=small,medium                                                \r\ntest --test_env=LD_LIBRARY_PATH                                                      \r\ntest:v1 --test_tag_filters=-benchmark-test,-no_oss,-no_gpu,-oss_serial               \r\ntest:v1 --build_tag_filters=-benchmark-test,-no_oss,-no_gpu                          \r\ntest:v2 --test_tag_filters=-benchmark-test,-no_oss,-no_gpu,-oss_serial,-v1only       \r\ntest:v2 --build_tag_filters=-benchmark-test,-no_oss,-no_gpu,-v1only                  \r\nbuild --action_env TF_CONFIGURE_IOS=\"0\"                                              \r\n```\r\n\r\nIt contains options within it that are\r\n* applicable to all (for eg.  `--config=xla` )\r\n* GPU specific (for eg. `--test_tag_filters`)\r\n* ROCm specific (for eg `--config=rocm` )\r\n* env specific (for eg `--action_env PYTHON_BIN_PATH=...`)\r\n\r\n\r\nWhat would a \"checked-in\" version of `.tf_configure.bazelrc` file look like? \r\n\r\nMy understanding was that options that are not specific to a given \"configuration\" are already a part of the `.bazelrc` file in the TF repo, and that most (if not all of) the contents of the `.tf_configure.bazelrc` are dependent on the user specified build parameters (python location, ROCm platform, etc). Given this, \r\n* how would one determine what should go into a checked-in / pre-populated version of the `.tf_configure.bazelrc` file?\r\n* we will still need to modify that file at \"runtime\" because some options like the ROCM_PATH are user env specific\r\n                                                   ",
        "createdAt" : "2021-01-06T17:18:43Z",
        "updatedAt" : "2021-01-06T17:18:43Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      },
      {
        "id" : "3ea22bd7-2f34-4e23-8120-2752e92d2117",
        "parentId" : "857db00e-2f5e-40f5-9e5f-6623ffe8f681",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "@deven-amd Good point, I didn't consider that `configure.py` needs to find some paths. Considering we already have yes-piping in the repo in a few places, this should be OK (or a separate effort needs to be made to remove them all)",
        "createdAt" : "2021-01-06T19:48:06Z",
        "updatedAt" : "2021-01-06T19:48:07Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      }
    ],
    "commit" : "89ef24d67ad20048d9afbdea8587bc2bc325fa41",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +142,146 @@export TF_NEED_CUDA=$IS_GPU\nexport TF_NEED_ROCM=$IS_ROCM\nyes \"\" | ${PYTHON_BIN_PATH} configure.py\n\n# Figure out how many concurrent tests we can run and do run the tests."
  }
]