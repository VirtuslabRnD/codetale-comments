[
  {
    "id" : "18d8b278-083e-4a98-b738-28a7ccbfa534",
    "prId" : 41733,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41733#pullrequestreview-521922029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "054bf368-4a97-4696-bbc1-7f657dd5a15c",
        "parentId" : null,
        "authorId" : "2561fcb0-e706-401c-9b70-ae56e2e5c0f7",
        "body" : "Let's divide this to 2 tests\r\n\r\n1. Default sink, guarded with `#if defined(__linux__) && !defined(PLATFORM_POSIX_ANDROID)` )\r\n2. TestSink, all platforms.",
        "createdAt" : "2020-11-02T10:39:07Z",
        "updatedAt" : "2020-11-02T19:31:20Z",
        "lastEditedBy" : "2561fcb0-e706-401c-9b70-ae56e2e5c0f7",
        "tags" : [
        ]
      },
      {
        "id" : "c678e127-fef3-4722-a0e4-41f4c1679d8a",
        "parentId" : "054bf368-4a97-4696-bbc1-7f657dd5a15c",
        "authorId" : "f3620dcd-5b8a-4e86-9a0d-9464f44720b3",
        "body" : "I won't be able to test the default sink. What I can do is add another test that simply adds a sink and tests that things get redirected to it, but I won't be able to intercept `stdout`. I guess that's better than nothing.",
        "createdAt" : "2020-11-02T18:41:25Z",
        "updatedAt" : "2020-11-02T19:31:20Z",
        "lastEditedBy" : "f3620dcd-5b8a-4e86-9a0d-9464f44720b3",
        "tags" : [
        ]
      },
      {
        "id" : "0bda1043-fc25-490f-a141-3694eedca672",
        "parentId" : "054bf368-4a97-4696-bbc1-7f657dd5a15c",
        "authorId" : "f3620dcd-5b8a-4e86-9a0d-9464f44720b3",
        "body" : "@kkimdev, it's done.",
        "createdAt" : "2020-11-02T19:13:57Z",
        "updatedAt" : "2020-11-02T19:31:20Z",
        "lastEditedBy" : "f3620dcd-5b8a-4e86-9a0d-9464f44720b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbb3cb142ef9c105816ab42ef70617396c7c7d5c",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +193,197 @@TFDefaultLogSink LogSinkTest::default_sink_;\n\nTEST_F(LogSinkTest, testLogSinks) {\n  // First log into the default log sink\n  LOG(INFO) << \"Foo\";"
  }
]