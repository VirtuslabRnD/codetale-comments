[
  {
    "id" : "f1598b3d-472a-4344-ae9c-7f50c2566575",
    "prId" : 21000,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21000#pullrequestreview-146516889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9c51bd2-325e-4472-ab69-d8782256296f",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "A high level question: does ROCm plan to reuse BaseGPUDevice? Or what's the plan of the integration? Any design doc available?",
        "createdAt" : "2018-08-15T16:06:02Z",
        "updatedAt" : "2018-08-31T16:34:59Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "bc048f6e-946e-489f-bc26-35c45ed253fa",
        "parentId" : "c9c51bd2-325e-4472-ab69-d8782256296f",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "ROCm uses `BaseGPUDevice`. Please refer to the working version for ROCm at:\r\nhttps://github.com/ROCmSoftwarePlatform/tensorflow-upstream/blob/develop-upstream/tensorflow/core/common_runtime/gpu/gpu_device.cc#L134\r\n\r\nWe are going to upstream this portion once #20277 lands.\r\n\r\nDue to the nature of how GPU common runtime uses `Eigen`, right now we have to use a compile-time flag `TENSORFLOW_USE_ROCM` to guard ROCm/HIP-specific logic, while leaving CUDA-specific logic be guarded by `GOOGLE_CUDA`. #20277 introduces `TENSORFLOW_USE_ROCM` macro to TensorFlow configure and build system.",
        "createdAt" : "2018-08-15T16:25:49Z",
        "updatedAt" : "2018-08-31T16:34:59Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b166c7e6f30bf7179f31764b3615e63025a7472",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +106,110 @@    stream_ = cuda_stream;\n    allocator_ = alloc;\n    PlatformGpuId platform_gpu_id;\n    TF_CHECK_OK(GpuIdManager::TfToPlatformGpuId(tf_gpu_id, &platform_gpu_id));\n    device_prop_ = &Eigen::m_deviceProperties[platform_gpu_id.value()];"
  }
]