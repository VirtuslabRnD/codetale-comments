[
  {
    "id" : "4b63944f-7a36-4555-98b3-dcb18c446a75",
    "prId" : 19136,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19136#pullrequestreview-122019863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f7fe8c2-52ef-4845-ae19-4be1ec52a6fb",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "From @jktomer: can num_logical_cores not be divisible by num_hyper_threads? In other words, can each physical core have different number of hyper-threads?",
        "createdAt" : "2018-05-18T18:42:12Z",
        "updatedAt" : "2018-05-21T16:53:34Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "b2e6fae4-c180-4c53-8194-6353594a5070",
        "parentId" : "0f7fe8c2-52ef-4845-ae19-4be1ec52a6fb",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "In hardware, no but the user can choose to explicitly disable some hyperthreads and not others using OS controls.",
        "createdAt" : "2018-05-21T16:56:25Z",
        "updatedAt" : "2018-05-21T16:56:25Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      },
      {
        "id" : "f6286f10-e43e-4f14-95ed-2982912a9a1b",
        "parentId" : "0f7fe8c2-52ef-4845-ae19-4be1ec52a6fb",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you!",
        "createdAt" : "2018-05-22T04:51:39Z",
        "updatedAt" : "2018-05-22T06:08:30Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7f096a05f36d34462df77ed467577254f594ab1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +57,61 @@    const int mkl_intra_op = port::NumSchedulableCPUs();\n    const int ht = port::NumHyperthreadsPerCore();\n    omp_set_num_threads((mkl_intra_op + ht - 1) / ht);\n  } else {\n    uint64 user_val = 0;"
  },
  {
    "id" : "de02bb21-6c20-4e46-a5f9-053f9ac74a23",
    "prId" : 19136,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19136#pullrequestreview-122315272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "960c7e93-0445-4575-acb7-2620b6a8f06c",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "std::getenv is only thread-safe with other getenv but not setenv and unsetenv. Some other parts of TensorFlow use setenv and unsetenv, like Jayaram said. Just a note that we might want to look into this in the future.",
        "createdAt" : "2018-05-22T06:05:13Z",
        "updatedAt" : "2018-05-22T06:08:30Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "65fa15db-50a7-4eb4-9842-222fdbc3da62",
        "parentId" : "960c7e93-0445-4575-acb7-2620b6a8f06c",
        "authorId" : "fe73ffac-a5a4-40e3-9b0f-92dec39beb6d",
        "body" : "As long as {set,unset,put,clear}env only happen in tests, I think this is fine: even if the tests are not single-threaded, the only damage that can be done is to the tests themselves.",
        "createdAt" : "2018-05-22T17:39:14Z",
        "updatedAt" : "2018-05-22T17:39:14Z",
        "lastEditedBy" : "fe73ffac-a5a4-40e3-9b0f-92dec39beb6d",
        "tags" : [
        ]
      },
      {
        "id" : "463297ae-d998-4bf5-8339-43cf28a227e5",
        "parentId" : "960c7e93-0445-4575-acb7-2620b6a8f06c",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Oops. Sorry. For some reason I thought core/platform/posix/subprocess.cc is using setenv, but it actually just mentions setenv. Just confirmed that there aren't any {set,unset,put,clear}env calls outside of tests. That's great! :)",
        "createdAt" : "2018-05-22T19:20:25Z",
        "updatedAt" : "2018-05-22T19:20:25Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7f096a05f36d34462df77ed467577254f594ab1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +51,55 @@#ifdef INTEL_MKL\n#ifdef _OPENMP\n  const char* user_omp_threads = getenv(\"OMP_NUM_THREADS\");\n  if (user_omp_threads == nullptr) {\n    // OMP_NUM_THREADS controls MKL's intra-op parallelization"
  }
]