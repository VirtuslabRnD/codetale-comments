[
  {
    "id" : "3c27f57d-db8d-416f-90c8-d8d3169c22b4",
    "prId" : 36777,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36777#pullrequestreview-363809878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e03684c-a634-4c53-b0c3-8dba3fe25b47",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "These gave unused variables errors. Please capture them in `shard_nms` and delete lines 468-469. Thank you very much!",
        "createdAt" : "2020-02-25T01:01:23Z",
        "updatedAt" : "2020-02-25T01:06:59Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "2829e25a-6cdf-433f-9fa4-296bd56dca6e",
        "parentId" : "7e03684c-a634-4c53-b0c3-8dba3fe25b47",
        "authorId" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "body" : "@penpornk Done, thanks.",
        "createdAt" : "2020-02-25T01:07:23Z",
        "updatedAt" : "2020-02-25T01:07:23Z",
        "lastEditedBy" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ac5c66c02605b212e94e94415808d21c10483fe",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +449,453 @@\n  int boxes_per_batch = num_boxes * q * 4;\n  int scores_per_batch = num_boxes * num_classes;\n  const int size_per_class = std::min(max_size_per_class, num_boxes);\n  std::vector<std::vector<ResultCandidate>> result_candidate_vec("
  },
  {
    "id" : "bd62b04e-de81-4799-b419-e98825f7903a",
    "prId" : 23567,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23567#pullrequestreview-182032233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e7d6645-cc74-4988-8ae1-78b7648e8971",
        "parentId" : null,
        "authorId" : "0ef5de33-9a2c-4376-972d-d9d2d7a02104",
        "body" : "would it make sense to have an auxiliary function to handle each batch",
        "createdAt" : "2018-12-06T00:02:03Z",
        "updatedAt" : "2019-01-29T22:33:26Z",
        "lastEditedBy" : "0ef5de33-9a2c-4376-972d-d9d2d7a02104",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d3fa90c47af1fd0d893a837f6c50d311060cd58",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +248,252 @@\n  // perform non_max_suppression operation for each batch independently\n  for (int batch = 0; batch < num_batches; ++batch) {\n    // dims of per_batch_boxes [num_boxes, q, 4]\n    Tensor per_batch_boxes = inp_boxes.Slice(batch, batch + 1);"
  },
  {
    "id" : "6be5760a-cef7-4e1d-a684-f1b617f37927",
    "prId" : 23567,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23567#pullrequestreview-197865738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "917c1ad4-aa72-4010-9be2-70cd8a82dcaf",
        "parentId" : null,
        "authorId" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "body" : "Before going in this for-loop make sure to \r\n1) ```class_scores_data.reserve(num_boxes);```\r\n2) ```class_boxes_data.reserve(num_boxes*4);```\r\n\r\nReasoning:\r\n1)Because we know the size, so prefer to reserve in-order to save on reallocation costs.\r\n2)Similar to (1) but note, the way the code flows: it will always push ```num_boxes * 4``` elements into the vector ```class_boxes_data```.",
        "createdAt" : "2019-01-22T00:39:09Z",
        "updatedAt" : "2019-01-29T22:33:26Z",
        "lastEditedBy" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "tags" : [
        ]
      },
      {
        "id" : "d4a696bd-848c-47ff-abb0-0d5778651bd1",
        "parentId" : "917c1ad4-aa72-4010-9be2-70cd8a82dcaf",
        "authorId" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "body" : "Thanks for the comment. I just pushed a commit that exactly does this.",
        "createdAt" : "2019-01-24T21:40:42Z",
        "updatedAt" : "2019-01-29T22:33:26Z",
        "lastEditedBy" : "d8ccd123-f416-49e8-8333-df30e2a1eb20",
        "tags" : [
        ]
      },
      {
        "id" : "7ecf0255-8bad-4388-ba1a-1b7016c7cc75",
        "parentId" : "917c1ad4-aa72-4010-9be2-70cd8a82dcaf",
        "authorId" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "body" : "Perfect :)",
        "createdAt" : "2019-01-30T01:18:38Z",
        "updatedAt" : "2019-01-30T01:18:42Z",
        "lastEditedBy" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d3fa90c47af1fd0d893a837f6c50d311060cd58",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +273,277 @@      class_boxes_data.reserve(num_boxes * 4);\n\n      for (int box = 0; box < num_boxes; ++box) {\n        // Get the scores per class\n        // class_scores_data dim is [num_boxes]."
  },
  {
    "id" : "b568b498-bfe8-4668-a2cc-e4e1907b5723",
    "prId" : 23567,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23567#pullrequestreview-197868525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4c0b974-7cc6-4c79-a745-9f8de8243d24",
        "parentId" : null,
        "authorId" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "body" : "Maybe reserve this if haven't before: \r\n1) nmsed_boxes[batch] to be of size (4 * (predicted #iterations of the loop )).\r\n2) nmsed_scores[batch] to be of size (predicted #iterations of the loop ).\r\n3) nmsed_classes[batch] to be of size (predicted #iterations of the loop ).\r\n\r\nWhere size of iteration will be the minimum between min(curr_total_size, result_candidate_vec.size())",
        "createdAt" : "2019-01-30T01:30:58Z",
        "updatedAt" : "2019-01-30T01:31:32Z",
        "lastEditedBy" : "c02b6806-c89c-4249-b10e-ef3335355570",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d3fa90c47af1fd0d893a837f6c50d311060cd58",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +376,380 @@      ResultCandidate next_candidate = result_candidate_vec[result_idx++];\n      // Add to final output vectors\n      nmsed_boxes[batch].push_back(\n          std::max(std::min(next_candidate.box_coord[0], clip_window[2]),\n                   clip_window[0]));"
  }
]