[
  {
    "id" : "9d88bcee-6320-41d8-b0f5-17e6e9c7a42e",
    "prId" : 32931,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32931#pullrequestreview-300281608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33488c38-8d66-485b-a6ed-0bcb2bbc3adc",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Nit: Could you please add one blank line before this line?",
        "createdAt" : "2019-10-04T23:48:50Z",
        "updatedAt" : "2019-10-15T02:03:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "c689925d-4bb1-4851-8aab-4076e740475f",
        "parentId" : "33488c38-8d66-485b-a6ed-0bcb2bbc3adc",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "Done.",
        "createdAt" : "2019-10-10T18:52:49Z",
        "updatedAt" : "2019-10-15T02:03:11Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e09071d9f83bb210e19c70de94f4c167db977c",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@#undef REGISTER_CPU\n\n}\n\n#endif  // ENABLE_INTEL_MKL_BFLOAT16"
  },
  {
    "id" : "123fc474-07ad-4045-bbab-8de13ff9141f",
    "prId" : 32931,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32931#pullrequestreview-697435913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "parentId" : null,
        "authorId" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "body" : "Note that these registrations cause TF to think we actually DO have a bf16 Conv2D (etc...) on CPU, and tries to execute it since there is no Eigen version to override it.  For example,\r\n```\r\nimport tensorflow as tf\r\ndtype = tf.bfloat16\r\nx = tf.constant(1, dtype=dtype, shape=(3, 3, 3, 3))\r\nkernel = tf.constant(1, dtype=dtype, shape=(1, 1, 1, 3))\r\nz = tf.nn.conv2d(x, kernel, strides=[1, 1, 1, 1], padding='VALID')\r\nprint(z)\r\n```\r\nReturns the empty tensor:\r\n```\r\ntf.Tensor([], shape=(0,), dtype=float32)\r\n```\r\nThis is causing crashes further down-the-line.\r\n\r\nThis even fails in graph mode:\r\n```\r\n@tf.function\r\ndef conv2d(x, kernel):\r\n  return tf.nn.conv2d(x, kernel, strides=[1, 1, 1, 1], padding='VALID')\r\n\r\nz = conv2d(x, kernel)\r\n```\r\nfails with\r\n```\r\nInternalError:  Missing 0-th output from node Conv2D (defined at <ipython-input-12-9e046227cc36>:3)  [Op:__inference_conv2d_70]\r\n```\r\n",
        "createdAt" : "2021-05-27T16:06:15Z",
        "updatedAt" : "2021-05-27T16:06:15Z",
        "lastEditedBy" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "tags" : [
        ]
      },
      {
        "id" : "a3d925e7-2e65-415b-be53-a04fb8fcc473",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "cc: @agramesh1 @TensorFlow-MKL ",
        "createdAt" : "2021-06-07T23:23:20Z",
        "updatedAt" : "2021-06-07T23:23:20Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "8ae97163-a309-4964-8c47-f4186e4d0c11",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "body" : "hi, `kernel = tf.constant(1, dtype=dtype, shape=(1, 1, 1, 3)) should be  tf.constant(1, dtype=dtype, shape=(1, 1, 3, 3)`\r\n```\r\nimport tensorflow as tf\r\nx = tf.constant(1, dtype=tf.bfloat16, shape=(3, 3, 3, 3))\r\nkernel = tf.constant(1, dtype=tf.bfloat16, shape=(1, 1, 3, 3))\r\nz = tf.nn.conv2d(x, kernel, strides=[1, 1, 1, 1], padding='VALID')\r\n```\r\n```\r\nprint(z)\r\n<tf.Tensor: shape=(3, 3, 3, 3), dtype=bfloat16, numpy=\r\narray([[[[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]]],\r\n\r\n\r\n       [[[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]]],\r\n\r\n\r\n       [[[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]],\r\n\r\n        [[3, 3, 3],\r\n         [3, 3, 3],\r\n         [3, 3, 3]]]], dtype=bfloat16)>\r\n```\r\n\r\nit is ok, what is your tf version? @cancan101 @penpornk  my tf version is latest master branch tf2.6",
        "createdAt" : "2021-06-08T01:16:09Z",
        "updatedAt" : "2021-06-08T01:16:10Z",
        "lastEditedBy" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "tags" : [
        ]
      },
      {
        "id" : "558889fa-39e0-4d9a-baef-0997111a41e1",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "body" : "Starts at 2.5, still fails with nightly:\r\n\r\nhttps://colab.research.google.com/drive/1DXlD9u1yWr-b0VChJbGCPtw_G7kp6HKi?usp=sharing",
        "createdAt" : "2021-06-11T17:50:44Z",
        "updatedAt" : "2021-06-11T17:50:44Z",
        "lastEditedBy" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "tags" : [
        ]
      },
      {
        "id" : "3c17d366-8fba-466b-bf7d-cac2f0e8532e",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "body" : "bazel build  --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0 --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mavx512f --copt=-mavx512pf --copt=-mavx512cd --copt=-mavx512dq  --config=opt -s -c opt //tensorflow/tools/pip_package:build_pip_package\r\n\r\n\r\nyou could build tensorflow from source.  use --config=mkl, ",
        "createdAt" : "2021-07-01T05:08:06Z",
        "updatedAt" : "2021-07-01T05:08:06Z",
        "lastEditedBy" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "tags" : [
        ]
      },
      {
        "id" : "a8c7286b-a350-4572-95c3-2af183e97198",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "body" : "@cantonios ",
        "createdAt" : "2021-07-01T05:17:01Z",
        "updatedAt" : "2021-07-01T05:17:01Z",
        "lastEditedBy" : "ce109ad2-5a52-4cf5-8922-e99b83e53fe2",
        "tags" : [
        ]
      },
      {
        "id" : "9dece6d9-83fe-48a4-8f80-4074be1f02a0",
        "parentId" : "32bad6b8-3423-4b60-ba3b-48eae132d410",
        "authorId" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "body" : "@gyshi I'm not trying to run these kernels.  I'm flagging that these are currently breaking real-world models in the wild, ever since OSS TF started building with mkl by default.  They should not exist in the pre-built pip packages.\r\n\r\nThese NoOp registrations need to be either protected so they are built conditionally, or removed and replaced with functioning default kernels.  As is, these NoOps are sometimes conditionally called, returning empty tensors (e.g. when trying to enable mixed precision), resulting in crashes and difficult-to-trace error messages.  We can't ask all users to \"build the pip package from scratch if your model happens to crash because it's trying to run one of MKL's registered NoOps\".",
        "createdAt" : "2021-07-01T16:19:08Z",
        "updatedAt" : "2021-07-01T16:19:08Z",
        "lastEditedBy" : "13a5f24f-8d36-4e67-8a38-dc0691eeaf45",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e09071d9f83bb210e19c70de94f4c167db977c",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@                          NoOp);\n\nTF_CALL_bfloat16(REGISTER_CPU);\n#undef REGISTER_CPU\n"
  }
]