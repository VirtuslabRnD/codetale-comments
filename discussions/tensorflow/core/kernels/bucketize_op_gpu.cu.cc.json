[
  {
    "id" : "132a07c2-bca4-42f2-b306-825b44badf68",
    "prId" : 13922,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/13922#pullrequestreview-75646428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ad95c6f-3de9-468d-b672-d2adaa08844f",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "It would probably be a big performance improvement, if boundaries array was loaded into shared memory before each thread does its binary search using that copy, but we can do that as a follow up, if you prefer.",
        "createdAt" : "2017-11-09T19:10:47Z",
        "updatedAt" : "2017-11-09T19:10:47Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "c7327927-dc94-46c8-903c-716916d8bc8b",
        "parentId" : "4ad95c6f-3de9-468d-b672-d2adaa08844f",
        "authorId" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "body" : "Thanks @rmlarsen. I will take a look and see if I could come up with a PR. I am still fairly new in CUDA programming but will try to improve.",
        "createdAt" : "2017-11-10T01:59:42Z",
        "updatedAt" : "2017-11-10T01:59:42Z",
        "lastEditedBy" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9d32545cdc65a4be0c043a9313bd1e71cd2da03",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@    const int32 size_in, const T* in, const int32 size_boundaries,\n    CudaDeviceArrayStruct<float> boundaries_array, int32* out) {\n  const float* boundaries = GetCudaDeviceArrayOnDevice(&boundaries_array);\n  CUDA_1D_KERNEL_LOOP(i, size_in) {\n    T value = in[i];"
  }
]