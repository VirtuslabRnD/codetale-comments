[
  {
    "id" : "c8f5a9c9-ad5d-410d-acd0-d1f734f62d06",
    "prId" : 41259,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41259#pullrequestreview-453875438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8807ffee-3cb3-43b8-ad7a-3e6b2b651ed2",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Can you explain why we need these? Does the code rely on 1k threads per block as the upper limit, which only holds for CUDA but not HIP?",
        "createdAt" : "2020-07-10T08:18:22Z",
        "updatedAt" : "2020-07-15T14:06:35Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      },
      {
        "id" : "d18bf5f6-19f0-490f-b519-c6906b133702",
        "parentId" : "8807ffee-3cb3-43b8-ad7a-3e6b2b651ed2",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "ROCm 3.5+ (more specifically the hip-clang compiler) assumes a default value of 256 (for max threads per block) for GPU kernels, in case where that value is not explicitly specified via the `__launch_bounds__ `attribute. \r\n\r\nIf such a kernel (which has no `__launch_bounds__ `attribute specified) is called at runtime with a threads_per_block value greater than 256, it is possible to run into some undetermined behaviour. This will be changed to become a runtime error instead (in a forthcoming ROCm release).",
        "createdAt" : "2020-07-15T02:22:28Z",
        "updatedAt" : "2020-07-15T14:06:35Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      },
      {
        "id" : "7fc4eee6-c1dc-4a2b-96e2-8916d0d89e8b",
        "parentId" : "8807ffee-3cb3-43b8-ad7a-3e6b2b651ed2",
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "I see. Thanks for the explanation.",
        "createdAt" : "2020-07-23T06:58:27Z",
        "updatedAt" : "2020-07-23T06:58:28Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdbfaaf389111fdd9332a643315e2d4e1a9ae361",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +509,513 @@\ntemplate <typename T, typename OUT_T, typename Op>\n__global__ __launch_bounds__(1024) void ColumnReduceTempToOutKernel(\n    void* __restrict__ temp, int temp_in_offset, T in, OUT_T out,\n    int num_planes, int num_rows, int num_cols, Op op) {"
  },
  {
    "id" : "ed40cade-6a2f-4986-b1e7-703304a4aa83",
    "prId" : 29224,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/29224#pullrequestreview-260487130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15998c6d-75ff-4d2e-b246-2671e9415835",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Change 'T' to 'IN_T' to make things consistent, here and below",
        "createdAt" : "2019-07-11T06:38:13Z",
        "updatedAt" : "2019-07-11T17:10:55Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "145f8ea77e8393150cc7e40928996cf5392c4e44",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +491,495 @@\ntemplate <int unroll, typename IN_T, typename Op>\n__global__ void ColumnReduceInToTempKernel(void* temp, int temp_in_offset,\n                                           int temp_out_offset,\n                                           IN_T in, int num_planes,"
  },
  {
    "id" : "cafb1415-ad20-49e3-a6e6-7c492dcf97ba",
    "prId" : 17027,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17027#pullrequestreview-108737831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "098de52a-3e28-4450-9c05-ae58256468df",
        "parentId" : null,
        "authorId" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "body" : "A comment on why we have this specialization for std::complex",
        "createdAt" : "2018-04-02T20:49:14Z",
        "updatedAt" : "2018-04-02T20:50:51Z",
        "lastEditedBy" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "tags" : [
        ]
      }
    ],
    "commit" : "15f3b920ad7eb7fcca3afee14d16049db2046d4b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +257,261 @@\ntemplate <typename T2>\nstruct storage_type<std::complex<T2>> {\n  T2 real;\n  T2 imag;"
  },
  {
    "id" : "3ededc94-0f69-4b6a-9d8e-2e2b65b90f4f",
    "prId" : 17027,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17027#pullrequestreview-108737831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af91f8a7-bb13-4860-9ba3-365f321e4b95",
        "parentId" : null,
        "authorId" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "body" : "Is this change only relevant to shared memory? If so, maybe shared_mem_storage_type?",
        "createdAt" : "2018-04-02T20:50:21Z",
        "updatedAt" : "2018-04-02T20:50:51Z",
        "lastEditedBy" : "17de39de-cc9c-45a3-95c0-7f6d00026c06",
        "tags" : [
        ]
      }
    ],
    "commit" : "15f3b920ad7eb7fcca3afee14d16049db2046d4b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +257,261 @@\ntemplate <typename T2>\nstruct storage_type<std::complex<T2>> {\n  T2 real;\n  T2 imag;"
  }
]