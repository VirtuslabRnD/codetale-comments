[
  {
    "id" : "27ef6844-f1af-43bc-9a35-7d86fec31254",
    "prId" : 38094,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/38094#pullrequestreview-391040884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c644b6a-52a2-4013-8e9a-b47250d47457",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Nit: Do you expect to need other unroll values than 4 and 8? If no, we could replace the kUnroll parameter with a boolean \"aligned\" and just specialize on T = Eigen::half and aligned=true. It would save having two separate calls in the launcher below. I don't insist.",
        "createdAt" : "2020-04-09T18:40:57Z",
        "updatedAt" : "2020-04-09T18:55:43Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbd15af8702aad5d219318116c305222a06186e7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@};\n\ntemplate <typename T, typename U, int kUnroll>\n__global__ void GenerateNormalizedProb(const T* logits, const U* sum_probs,\n                                       const T* max_logits, T* output,"
  },
  {
    "id" : "8dadda1b-f612-4101-9261-5e5541503233",
    "prId" : 38094,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/38094#pullrequestreview-391056848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dab9f7b-7717-4b0b-b87e-cc2968f49899",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Would it be better to make logits_d a local variable and explicitly load kUnroll logits via logits_d instead of accessing logits_h[i] in the loop (like you do for the writes)? Or does  the compiler figure out how to coalesce those reads automatically?",
        "createdAt" : "2020-04-09T18:46:50Z",
        "updatedAt" : "2020-04-09T18:55:43Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "f14c8e95-ba07-4021-b75f-d26c9afe8530",
        "parentId" : "8dab9f7b-7717-4b0b-b87e-cc2968f49899",
        "authorId" : "8df6b2a7-a5b8-4771-8241-49fd7ff5a2aa",
        "body" : "Thanks for your comments.\r\nI think we already load the kUnroll logits via logits_d (line 129). What inside the loop (line 134) is accessing each half value (via logits_h[i]) to do the actual computation.",
        "createdAt" : "2020-04-09T19:04:57Z",
        "updatedAt" : "2020-04-09T19:04:57Z",
        "lastEditedBy" : "8df6b2a7-a5b8-4771-8241-49fd7ff5a2aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbd15af8702aad5d219318116c305222a06186e7",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +132,136 @@    Eigen::half* output_h = reinterpret_cast<Eigen::half*>(&output_d);\n\n    for (int i = 0; i < kUnroll; i++) {\n      idx[i] = tid * kUnroll + i;\n      row[i] = idx[i] / num_cols;"
  }
]