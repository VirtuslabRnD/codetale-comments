[
  {
    "id" : "0b157d0c-7f63-4a6a-b8f0-a8f2a4a86c51",
    "prId" : 50550,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50550#pullrequestreview-702264286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb23ace2-89d8-4ea1-9846-b52540beac32",
        "parentId" : null,
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "This line repeats line 46. Could you confirm?",
        "createdAt" : "2021-07-08T16:16:14Z",
        "updatedAt" : "2021-07-08T16:16:14Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      },
      {
        "id" : "450d0332-8ba9-4533-9500-892bbd516d6f",
        "parentId" : "eb23ace2-89d8-4ea1-9846-b52540beac32",
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "Sorry this should be correct. I didn't notice the \"V2\".",
        "createdAt" : "2021-07-08T16:19:05Z",
        "updatedAt" : "2021-07-08T16:19:05Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      }
    ],
    "commit" : "be07e04bbeab2a8e6c4ed11f1e4b50fc3ebaf610",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +55,59 @@/* static */ constexpr const char* const SaveDatasetV2Op::kUseShardFunc;\n/* static */ constexpr const char* const SaveDatasetV2Op::kShardFuncTarguments;\n/* static */ constexpr const int SaveDatasetV2Op::kFileFormatVersion;\n/* static */ constexpr const char* const LoadDatasetOp::kCompression;\n/* static */ constexpr const char* const LoadDatasetOp::kDatasetType;"
  },
  {
    "id" : "c47afad1-152f-4885-8671-255c26da5b25",
    "prId" : 49166,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/49166#pullrequestreview-659478594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "parentId" : null,
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "Thanks for the change. Do you know why we need this? I don't see this class calls `Ref()`. There is a `Unref` call in the base iterator.\r\nhttps://github.com/tensorflow/tensorflow/blob/a9cf3a0e4b419630f0183b0cc4e48e0641a62721/tensorflow/core/framework/dataset.cc#L701",
        "createdAt" : "2021-05-13T17:13:34Z",
        "updatedAt" : "2021-05-13T17:13:50Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      },
      {
        "id" : "d948a2b5-e0a0-44b2-a7a9-c74c001658e7",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "body" : "@yangustc07  thank you for the review.\r\nThis is the corresponding call to Ref(): https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/data/experimental/io_ops.cc#L338",
        "createdAt" : "2021-05-13T18:34:06Z",
        "updatedAt" : "2021-05-13T18:34:06Z",
        "lastEditedBy" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "tags" : [
        ]
      },
      {
        "id" : "851dd1dc-ef7d-46df-9e3f-e2c03a75cc8d",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "body" : "And this Ref() and the input_ initialization does not happen because of a cancelled prefetch, which leaves input_ as null:\r\n```bash\r\ntensorflow/core/kernels/data/experimental/io_ops.cc:282] Status Cancelled:\r\n        For thread id 1397804166 thread name: tf_data_iterator_resource/1397804166*** Begin stack trace ***\r\n        tensorflow::CurrentStackTrace()\r\n        tensorflow::data::experimental::LoadDatasetOp::Dataset::Iterator::Initialize(tensorflow::data::IteratorContext*)\r\n        tensorflow::data::DatasetBase::MakeIterator(tensorflow::data::IteratorContext*, tensorflow::data::IteratorBase const*, std::string const&, std::unique_ptr<tensorflow::data::IteratorBase, std::default_delete<tensorflow::data::IteratorBase> >*) const\r\n        tensorflow::data::ShuffleDatasetOpBase::ShuffleDatasetBase::Iterator::GetNextInternal(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::DatasetBaseIterator::GetNext(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::BatchDatasetOp::Dataset::Iterator::GetNextInternal(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::DatasetBaseIterator::GetNext(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::RepeatDatasetOp::Dataset::ForeverIterator::GetNextInternal(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::DatasetBaseIterator::GetNext(tensorflow::data::IteratorContext*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, bool*)\r\n        tensorflow::data::PrefetchDatasetOp::Dataset::Iterator::PrefetchThread(std::shared_ptr<tensorflow::data::IteratorContext> const&)\r\n\r\n        std::_Function_handler<void (), std::_Bind<void (*(std::function<void ()>, std::shared_ptr<tensorflow::Notification>))(std::function<void ()> const&, std::shared_ptr<tensorflow::Notification>)> >::_M_invoke(std::_Any_data const&)\r\n        tensorflow::UnboundedWorkQueue::PooledThreadFunc()\r\n```",
        "createdAt" : "2021-05-13T18:35:38Z",
        "updatedAt" : "2021-05-13T19:58:33Z",
        "lastEditedBy" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "tags" : [
        ]
      },
      {
        "id" : "b7c2a4e4-5646-4a3f-8b9c-6be7466e8e02",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "I see, it seems this `Ref` is not needed for the same reason mentioned in https://github.com/tensorflow/tensorflow/commit/858a5698a7b4ee95befa2e9c3d7aaa0a8170ec54. What do you think?",
        "createdAt" : "2021-05-13T20:52:03Z",
        "updatedAt" : "2021-05-13T20:52:03Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      },
      {
        "id" : "514392b4-3a74-46ae-a16a-4d0b1bb014db",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "body" : "Actually removing Ref results in a segfault without a stracktrace in this case. I'm still investigating that.",
        "createdAt" : "2021-05-13T21:09:57Z",
        "updatedAt" : "2021-05-13T21:09:58Z",
        "lastEditedBy" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "tags" : [
        ]
      },
      {
        "id" : "2b29d85c-b6fe-41a3-90aa-e3f33c7bb63b",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "body" : "@yangustc07 Did you have any other feedback?",
        "createdAt" : "2021-05-13T23:53:07Z",
        "updatedAt" : "2021-05-13T23:53:07Z",
        "lastEditedBy" : "c6fff3f2-edd0-4483-89e7-668b7fd5f044",
        "tags" : [
        ]
      },
      {
        "id" : "33fbe02a-20f9-48e0-8f0b-86ab67dc70fb",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "I'm trying this test on my machine. I can produce the same segfault. I'll update you soon. I'm sorry for the inconvenience.",
        "createdAt" : "2021-05-14T01:14:23Z",
        "updatedAt" : "2021-05-14T01:14:23Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      },
      {
        "id" : "aefebf9f-87e8-49fb-9780-3daecb1b7f20",
        "parentId" : "449f169e-dff1-4605-a29e-831e3c0ba966",
        "authorId" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "body" : "Yes, I agree with you. `Ref()` is needed here because `reader_output` is destroyed in `InitializeInput`.\r\n\r\nThanks for the fix!",
        "createdAt" : "2021-05-14T03:28:52Z",
        "updatedAt" : "2021-05-14T03:30:56Z",
        "lastEditedBy" : "2478bf1e-5175-4a1c-817e-f52b2faca927",
        "tags" : [
        ]
      }
    ],
    "commit" : "f862ede4402cedad052bb72e6a7a025f00a5188e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +265,269 @@    ~Iterator() override {\n      if (input_) {\n        input_->Unref();\n      }\n    }"
  }
]