[
  {
    "id" : "a46dfe99-b5a6-482a-81f5-070ddaf989f0",
    "prId" : 24691,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24691#pullrequestreview-194311683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4355d279-8812-48e0-af8f-eaf346e47d1f",
        "parentId" : null,
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "I think should should be TF_EXPECT_OK",
        "createdAt" : "2019-01-18T22:07:24Z",
        "updatedAt" : "2019-01-18T22:07:24Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "d013b0c4-fbab-4ff2-b4d5-a5db7036508c",
        "parentId" : "4355d279-8812-48e0-af8f-eaf346e47d1f",
        "authorId" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "body" : "@jsimsa This reminds me  that the current implementation will not update `status_` any more. Could we just remove the class member `status_` and the function `Status status() const;`? ",
        "createdAt" : "2019-01-18T22:28:26Z",
        "updatedAt" : "2019-01-18T22:41:23Z",
        "lastEditedBy" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "tags" : [
        ]
      },
      {
        "id" : "74818e0c-76f8-40ff-acf3-ebd2db0fdef6",
        "parentId" : "4355d279-8812-48e0-af8f-eaf346e47d1f",
        "authorId" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "body" : "@jsimsa There is a related item in [RELEASE.md]() as following. Will avoid the use of `EXPECT_OK` in the future.\r\n\r\n`\r\nASSERT_OK / EXPECT_OK macros conflicted with external projects, so they were renamed TF_ASSERT_OK, TF_EXPECT_OK. The existing macros are currently maintained for short-term compatibility but will be removed.\r\n`",
        "createdAt" : "2019-01-18T22:38:40Z",
        "updatedAt" : "2019-01-18T22:38:40Z",
        "lastEditedBy" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "tags" : [
        ]
      },
      {
        "id" : "523d0fc9-b784-4e8e-aff7-f487b06c8506",
        "parentId" : "4355d279-8812-48e0-af8f-eaf346e47d1f",
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "Good catch, I took care of fixing this during the internal review. The PR should be merged soon with my fix.",
        "createdAt" : "2019-01-18T22:39:17Z",
        "updatedAt" : "2019-01-18T22:39:17Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "66c76832-06fe-45f8-850e-7e297a7085b9",
        "parentId" : "4355d279-8812-48e0-af8f-eaf346e47d1f",
        "authorId" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "body" : "Great, thanks!",
        "createdAt" : "2019-01-18T22:45:05Z",
        "updatedAt" : "2019-01-18T22:45:05Z",
        "lastEditedBy" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "tags" : [
        ]
      }
    ],
    "commit" : "06444e2c956f1aa6265bf467ebb8b3072a280b7f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +53,57 @@\n  VariantTensorDataReader reader(&data);\n  EXPECT_OK(reader.status());\n  int64 val_int64;\n  TF_ASSERT_OK(reader.ReadScalar(\"Int64\", &val_int64));"
  },
  {
    "id" : "58f6a6f7-cb0c-4966-b730-799a0e2176fc",
    "prId" : 24691,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24691#pullrequestreview-194313132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "105f759d-7736-40e1-8ef8-c316bb9c71b5",
        "parentId" : null,
        "authorId" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "body" : "@jsimsa Just a reminder that this line also needs to be removed if we delete the function `Status status() const;`.",
        "createdAt" : "2019-01-18T22:51:25Z",
        "updatedAt" : "2019-01-18T22:51:25Z",
        "lastEditedBy" : "2a8db88d-c925-4270-871e-79c6b27c2fdb",
        "tags" : [
        ]
      }
    ],
    "commit" : "06444e2c956f1aa6265bf467ebb8b3072a280b7f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +68,72 @@  data.tensors_.push_back(Tensor(DT_INT64, {1}));\n  VariantTensorDataReader reader(&data);\n  TF_ASSERT_OK(reader.status());\n  int64 val_int64;\n  string val_string;"
  }
]