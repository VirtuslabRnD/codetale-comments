[
  {
    "id" : "655d9a61-f1bd-43af-bcfb-4efb005305ba",
    "prId" : 46736,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46736#pullrequestreview-595899447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ec25601-2ecb-49d5-a848-21e94cfa6005",
        "parentId" : null,
        "authorId" : "e08938af-f8a8-460f-881b-a60c1ee311f5",
        "body" : "Is this necessary for correctness? Would we run into similar issues with complex\\<float16\\> and TransposeElemType<4>?",
        "createdAt" : "2021-02-22T22:35:18Z",
        "updatedAt" : "2021-02-28T10:59:45Z",
        "lastEditedBy" : "e08938af-f8a8-460f-881b-a60c1ee311f5",
        "tags" : [
        ]
      },
      {
        "id" : "323fd045-cf39-4fda-8a02-7d7358c3973c",
        "parentId" : "7ec25601-2ecb-49d5-a848-21e94cfa6005",
        "authorId" : "0dd70342-22b2-4738-94bc-31f7bcb25826",
        "body" : "Yes, this is necessary. Instead of simply conjugating, we call `maybe_conj`, which is specialized for complex types in GPU (float2 and double2).\r\n\r\nI thought about `TransposeElemType<4>` when fixing this, and came to the conclusion that tensorflow doesn't have a complex type which uses float16. `std::complex<float16>` doesn't exist, as far as I can tell.\r\n\r\nTo be honest, I'm not entirely sure why `TransposeElemType` is there in the first place. If I had to make a guess, I would say that it's in order to make this code work for non-basic types (i.e not tensorflow builtin numeric types). However, this is only used in a very specific place, so it would fail to achieve that.\r\n\r\nThanks for the comment, I found out I didn't fix the issue for complex128, but it's sorted now.",
        "createdAt" : "2021-02-22T23:44:17Z",
        "updatedAt" : "2021-02-28T10:59:45Z",
        "lastEditedBy" : "0dd70342-22b2-4738-94bc-31f7bcb25826",
        "tags" : [
        ]
      },
      {
        "id" : "a89028a1-f4cb-4bd6-9f36-12aa60be0b63",
        "parentId" : "7ec25601-2ecb-49d5-a848-21e94cfa6005",
        "authorId" : "e08938af-f8a8-460f-881b-a60c1ee311f5",
        "body" : "Oh, right, we just have DT_COMPLEX64 and DT_COMPLEX128. Sounds OK then. If you want to get rid of TransposeElemType that's fine too (we might find a failing test).\r\n\r\nI do think it's another good reason to have a unit test. If someone comes along and adds a smaller complex type it'd make it at least possible to find and fix this issue.",
        "createdAt" : "2021-02-23T00:13:52Z",
        "updatedAt" : "2021-02-28T10:59:45Z",
        "lastEditedBy" : "e08938af-f8a8-460f-881b-a60c1ee311f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a69db8ad95b6e2811c797c3c1de7c5e8ba013b66",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +900,904 @@template <>\nstruct TransposeElemType<8> {\n  using type = float2;\n};\ntemplate <>"
  }
]