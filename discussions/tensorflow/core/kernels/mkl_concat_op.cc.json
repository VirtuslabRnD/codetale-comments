[
  {
    "id" : "8929e22c-1d1a-48c0-9556-0ec3542e3a0b",
    "prId" : 37081,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37081#pullrequestreview-365187973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85bedeb-78db-465d-882a-a01ee9b5235d",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Nice catch. Thank you!",
        "createdAt" : "2020-02-26T19:41:38Z",
        "updatedAt" : "2020-02-26T23:02:48Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07c125b4da39aab95a79bd24d94a52fc836561a0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +294,298 @@#ifdef ENABLE_MKLDNN_V1\n    execute_primitives(context_.fwd_primitives, context_.fwd_stream,\n                       context_.fwd_primitives_args);\n#else\n    context_.fwd_stream->submit(context_.fwd_primitives);"
  },
  {
    "id" : "c0767657-9123-4d47-8860-b31efadcf1fa",
    "prId" : 36744,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36744#pullrequestreview-359473475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aeb9aea-0b6b-4db8-8cfb-43d01ea57d09",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Nit, since this is `#ifndef`\r\n```suggestion\r\n#endif  // !ENABLE_MKLDNN_V1\r\n```",
        "createdAt" : "2020-02-14T21:15:44Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "cd6a9bde-7e02-4040-9a42-6a5c95571b71",
        "parentId" : "6aeb9aea-0b6b-4db8-8cfb-43d01ea57d09",
        "authorId" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "body" : "thanks. will do",
        "createdAt" : "2020-02-17T03:35:03Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed4ca062fd0333cd55f109a4767cd101a3131f7a",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +324,328 @@#else\n    std::vector<mkldnn::primitive::at> data_mem;\n#endif  // ENABLE_MKLDNN_V1\n    std::vector<std::shared_ptr<mkldnn::memory>> data_mem_shdptr;\n    std::shared_ptr<mkldnn::memory> dst_mem;"
  },
  {
    "id" : "99d2c4ff-0aec-4067-908d-9ea7ca55e4d6",
    "prId" : 36744,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36744#pullrequestreview-360611765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e251ef5b-8655-446d-9826-9ad157a4dcfd",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "I think we can do \r\n```c++\r\n#ifndef ENABLE_MKLDNN_V1\r\n    context_.dst_pd.reset(\r\n        new memory::primitive_desc(*context_.dst_md, cpu_engine_));\t        new memory::primitive_desc(*context_.dst_md, cpu_engine_));\r\n#endif  // !ENABLE_MKLDNN_V1\r\n    // Create memory primitive based on dummy data\r\n    context_.dst_mem.reset(\r\n        MEMORY_CONSTRUCTOR(*context_.dst_md, cpu_engine_, DummyData));\r\n```",
        "createdAt" : "2020-02-14T21:22:12Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "db47b126-151b-4358-b0c0-cb7312359ce4",
        "parentId" : "e251ef5b-8655-446d-9826-9ad157a4dcfd",
        "authorId" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "body" : "i will check and do",
        "createdAt" : "2020-02-17T03:35:21Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "tags" : [
        ]
      },
      {
        "id" : "8d2d1a3b-b740-4381-8fb9-435f82dff935",
        "parentId" : "e251ef5b-8655-446d-9826-9ad157a4dcfd",
        "authorId" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "body" : "The memory primitive descriptor is required to create the memory primitive in !ENABLE_MKLDNN_V1 case. Here we are caching both the memory primitive and primitive descriptor in different class variables so the above suggestion is not possible.",
        "createdAt" : "2020-02-18T04:11:37Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "89ad3cff-43a3-4ca8-b4c2-8de24e6e0e24",
        "tags" : [
        ]
      },
      {
        "id" : "5898aac1-82fd-4344-8d4d-a900fbe239a2",
        "parentId" : "e251ef5b-8655-446d-9826-9ad157a4dcfd",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for the explanation!",
        "createdAt" : "2020-02-18T19:30:32Z",
        "updatedAt" : "2020-02-20T03:34:13Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed4ca062fd0333cd55f109a4767cd101a3131f7a",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +397,401 @@    // Create memory primitive based on dummy data\n    context_.dst_mem.reset(new memory(*context_.dst_pd, DummyData));\n#endif  // ENABLE_MKLDNN_V1\n\n#ifdef ENABLE_MKLDNN_V1"
  },
  {
    "id" : "cd53ba2c-73b1-401b-bc33-8632102f82a4",
    "prId" : 26585,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26585#pullrequestreview-221727253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6443519-9365-42d3-8c98-d46d1394570f",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Do you have to set the shape (dimension) to 1?",
        "createdAt" : "2019-04-01T11:02:03Z",
        "updatedAt" : "2019-04-02T00:11:51Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "4811e49b-5f70-4fe2-a3c0-4a8a6272f2ff",
        "parentId" : "f6443519-9365-42d3-8c98-d46d1394570f",
        "authorId" : "25745d2d-fe01-49de-975c-879c043e0b34",
        "body" : "No need since this is not an MKL tensor and the layout won't be used in other ops.",
        "createdAt" : "2019-04-02T00:17:19Z",
        "updatedAt" : "2019-04-02T00:17:19Z",
        "lastEditedBy" : "25745d2d-fe01-49de-975c-879c043e0b34",
        "tags" : [
        ]
      },
      {
        "id" : "bfd24769-b594-4dd0-a5eb-54b7752802ea",
        "parentId" : "f6443519-9365-42d3-8c98-d46d1394570f",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for your clarification!",
        "createdAt" : "2019-04-02T15:16:32Z",
        "updatedAt" : "2019-04-02T15:17:41Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d4815e72ed66714c1ed918b2da96cc941400850",
    "line" : 320,
    "diffHunk" : "@@ -1,1 +594,598 @@    if (quantized_input) {\n      MklDnnShape output_min_max_mkl_shape;\n      output_min_max_mkl_shape.SetMklTensor(false);\n      AllocateOutputSetMklShape(context, 1, output_min_max_mkl_shape);\n      AllocateOutputSetMklShape(context, 2, output_min_max_mkl_shape);"
  },
  {
    "id" : "093caeb4-0cc3-467c-9487-3c5316acb5ba",
    "prId" : 19065,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19065#pullrequestreview-120754685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a65745e3-377f-4c62-b099-833e31be2eab",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "If I understand your comment correctly: For clarity, should we copy the format from the input rather than hardcoding it to NCHW here?  ",
        "createdAt" : "2018-05-15T21:36:10Z",
        "updatedAt" : "2018-05-16T17:52:25Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "644512d9-df0e-41c7-b87c-3ba54cddb135",
        "parentId" : "a65745e3-377f-4c62-b099-833e31be2eab",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Currently there is no \"data_format\" attribute for Tensorflow tensors. \r\nSo it is not possible to copy format from them. \r\nOnly Mkl tensors tracks the formats (NHWC, NCHW, or MKL block format etc). ",
        "createdAt" : "2018-05-16T18:01:19Z",
        "updatedAt" : "2018-05-16T18:01:19Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef2e9db5feec86433018506a3fbccd05f13d096a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +726,730 @@          // It does not matter what data format to be used (NHWC versus NCHW).\n          // We just need to ensure that output uses same data format as inputs.\n          auto src_md =\n              memory::desc(src_dims, MklDnnType<T>(), memory::format::nchw);\n"
  },
  {
    "id" : "198b8057-3fb2-432f-9b59-242e1349e3f4",
    "prId" : 8968,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/8968#pullrequestreview-31622460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bc34eb3-df36-4a3f-8b9f-0bacc9124b44",
        "parentId" : null,
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "Add tests?",
        "createdAt" : "2017-04-06T06:06:26Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "6a652d45-91ed-4d8a-aae0-55cce4ea3868",
        "parentId" : "7bc34eb3-df36-4a3f-8b9f-0bacc9124b44",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "We used concat python test for this kernel.",
        "createdAt" : "2017-04-07T17:47:00Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");"
  },
  {
    "id" : "8bdea837-a9cd-4c78-8f95-4fd8e566e1cc",
    "prId" : 8968,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/8968#pullrequestreview-32507437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1279539e-bd33-44fa-9fbc-ce55fb83369e",
        "parentId" : null,
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "Is this code same with the one in core/kernels/concat_op.cc? Are you able to make concat_op.h for concat_op.cc and use the existing ConcatBaseOp?",
        "createdAt" : "2017-04-12T20:47:59Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "7b929597-eccc-4693-ae84-2a7d0467e21f",
        "parentId" : "1279539e-bd33-44fa-9fbc-ce55fb83369e",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "No, the code is not exactly same. EigenConcatBaseOp takes input tensors differently than original Eigen version.",
        "createdAt" : "2017-04-12T20:59:07Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      },
      {
        "id" : "f8d4a579-7c96-46cd-be18-7f0e6ed96b18",
        "parentId" : "1279539e-bd33-44fa-9fbc-ce55fb83369e",
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "Could you modify the input with OpKernelContext::mutable_input, so that ConcatBaseOp could be reused? https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/op_kernel.h#L632",
        "createdAt" : "2017-04-12T22:15:00Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@      ConstMatrixVector;\n\n  explicit EigenConcatBaseOp(OpKernelConstruction* c) : OpKernel(c) {}\n\n  // Although, we modify Compute for this call to accept one extra param,"
  },
  {
    "id" : "16c05f87-bef2-4dfd-bce8-c4ea4815bd1e",
    "prId" : 8968,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/8968#pullrequestreview-32493716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c299d93-576d-4140-ae65-e7c63c94c1e5",
        "parentId" : null,
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "Could/Should this decision be made during graph rewrite, instead of inside the kernel?",
        "createdAt" : "2017-04-12T20:48:35Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "18e6d12a-9e9e-4c5d-b3b9-ff3711f10d48",
        "parentId" : "9c299d93-576d-4140-ae65-e7c63c94c1e5",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "No, the decision cannot be made in graph rewrite pass. We cannot find out concat_dim in graph rewrite. Also, we do not know if input tensors are in Mkl layout or Tensorflow layout in graph rewrite.",
        "createdAt" : "2017-04-12T21:04:40Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +194,198 @@\n    // Check that total number of dimensions is 4, if not call Eigen.\n    if (!invoke_eigen) {\n      for (auto& s : input_shapes) {\n        if (s.GetDimension() != 4) {"
  }
]