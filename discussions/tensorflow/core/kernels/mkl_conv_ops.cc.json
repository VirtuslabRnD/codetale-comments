[
  {
    "id" : "f7f61131-c6cb-4151-aa24-be08da89f485",
    "prId" : 38259,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/38259#pullrequestreview-392391578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ed5fec-f4a8-4ab4-b103-799c8bcb0184",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Could you please explain why we are refactoring `fwd_stream` out of `context`?",
        "createdAt" : "2020-04-08T01:33:12Z",
        "updatedAt" : "2020-04-22T01:47:56Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "12317bd8-ddaf-4a24-8431-0231947ed654",
        "parentId" : "a8ed5fec-f4a8-4ab4-b103-799c8bcb0184",
        "authorId" : "dc01c536-f8d1-421c-86af-6ae72825c430",
        "body" : "we are planning to move engine and primitive to the base class since they are common features of all primitives. I have already moved the engine. Moving stream is slightly more complex. Besides, with the DNNL threadpool , stream creation needs OpKernelContext and passing this through primitive cache is cumbersome.",
        "createdAt" : "2020-04-10T23:36:01Z",
        "updatedAt" : "2020-04-22T01:47:56Z",
        "lastEditedBy" : "dc01c536-f8d1-421c-86af-6ae72825c430",
        "tags" : [
        ]
      },
      {
        "id" : "1d21e54f-b412-4613-9c6b-b0f72a83dcc5",
        "parentId" : "a8ed5fec-f4a8-4ab4-b103-799c8bcb0184",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for the explanation!",
        "createdAt" : "2020-04-13T19:55:23Z",
        "updatedAt" : "2020-04-22T01:47:56Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7d394a062a7880815cffb56b8041b3c9ef1a851",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +210,214 @@          bias_md(nullptr),\n          fwd_pd(nullptr),\n          conv_fwd(nullptr) {\n    }\n  };"
  },
  {
    "id" : "c0f2f884-b815-4842-b4a8-c1f931ef80d2",
    "prId" : 37081,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37081#pullrequestreview-365187973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47f548b0-fabe-468b-8371-64d2249c4b92",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for the explanation!",
        "createdAt" : "2020-02-26T19:56:25Z",
        "updatedAt" : "2020-02-26T23:02:48Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07c125b4da39aab95a79bd24d94a52fc836561a0",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +1055,1059 @@    // required to store primitive's input memory. It is much more than size of\n    // memory::desc itself.\n    cached_filter_md_shape.AddDim(sizeof(weights_desc) / sizeof(uint8));\n    OP_REQUIRES_OK(context, context->allocate_persistent(\n                                DT_UINT8, cached_filter_md_shape,"
  },
  {
    "id" : "c5da9a9f-baaa-4c1f-9ded-cc4e536fc8dd",
    "prId" : 35297,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35297#pullrequestreview-338567763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba449e47-f876-4656-9103-4b79d9aa7859",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Can this loop be pulled up to before the `if`/`else` (i.e., before line 493)? `AddAsKey` wouldn't be called if `post_op_param.param` is empty anyway.",
        "createdAt" : "2020-01-06T05:00:35Z",
        "updatedAt" : "2020-01-06T09:48:55Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "5e47bf27-1e97-42f8-b269-1ed2dd335081",
        "parentId" : "ba449e47-f876-4656-9103-4b79d9aa7859",
        "authorId" : "b290c238-d054-4554-ad7a-c1f31856dbbc",
        "body" : "NO. If `post_op_param.name == \"output_scale\"`, `post_op_param.param` is not empty and we shouldn't call `AddAsKey`.\r\nActually, `post_op_param.param` is used to generate op_scale and partial key. When it is `output_scale`, we use `post_op_param.param` only for op_scale and use `post_op_param.partial_key` as a partial key.",
        "createdAt" : "2020-01-06T09:56:25Z",
        "updatedAt" : "2020-01-06T09:56:25Z",
        "lastEditedBy" : "b290c238-d054-4554-ad7a-c1f31856dbbc",
        "tags" : [
        ]
      },
      {
        "id" : "6f76c74a-6d87-40be-99fa-ed01f746d110",
        "parentId" : "ba449e47-f876-4656-9103-4b79d9aa7859",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Got it. Thank you for the explanation!",
        "createdAt" : "2020-01-06T10:24:50Z",
        "updatedAt" : "2020-01-06T10:25:00Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7a5027e3e595ebefa8c6969ee35617acd2f34d1",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +493,497 @@      if (post_op_param.name == \"activation\") {\n        DCHECK_EQ(post_op_param.param.size(), 3);\n        for (auto& param : post_op_param.param) {\n          key_creator.AddAsKey(param);\n        }"
  },
  {
    "id" : "2eacbf47-866a-465a-8cd4-2a3ce795d378",
    "prId" : 32148,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32148#pullrequestreview-286481567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edff1955-deba-48ea-ada6-f6fd1097b555",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "You can check `if (!bias_enabled) return nullptr;` since the beginning of the function to avoid extra computations.",
        "createdAt" : "2019-09-10T23:20:51Z",
        "updatedAt" : "2019-09-19T09:25:30Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bdf09cd2e96b96c0572ab388bdd38f9f65f4380",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1579,1583 @@\n    std::vector<mkldnn::primitive> net;\n    if (bias_enabled) {\n      if (std::is_same<Tbias, qint32>::value) {\n        return static_cast<Tbias*>("
  },
  {
    "id" : "5751bdf3-b706-49d3-912d-e8344d3ef703",
    "prId" : 32148,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32148#pullrequestreview-286481567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d81e7d4d-5d57-4ef3-8972-b4feeff8379f",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "If you don't want to guard the above code (the re-scaling) in if, you can do another early return:\r\n```\r\nif (is_bias_const_ && !IsBiasCacheEmpty(context)) return GetCachedBias(context);\r\n```\r\nThen we can re-scale outside of if. (Up to you.)",
        "createdAt" : "2019-09-10T23:27:53Z",
        "updatedAt" : "2019-09-19T09:25:30Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bdf09cd2e96b96c0572ab388bdd38f9f65f4380",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +1624,1628 @@        return bias_data;\n      }\n      return GetCachedBias(context);\n    } else {\n      return nullptr;"
  },
  {
    "id" : "ef90e8bc-aeb3-4784-98a4-28aa9242adc9",
    "prId" : 28098,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/28098#pullrequestreview-237073630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42525bf0-3ade-48d2-85f0-c4b2b627a0e0",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Shouldn't `num_args` be 3? Please also fix the error string below.",
        "createdAt" : "2019-04-26T22:38:57Z",
        "updatedAt" : "2019-05-21T07:43:18Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "d5090223-e378-4d24-8625-f0dd9b12a00c",
        "parentId" : "42525bf0-3ade-48d2-85f0-c4b2b627a0e0",
        "authorId" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "body" : "@penpornk the num_args count the fused op that have additional input, relu did not have additional input, so the num_args is 2 for biasadd and add.",
        "createdAt" : "2019-05-15T00:50:13Z",
        "updatedAt" : "2019-05-21T07:43:18Z",
        "lastEditedBy" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a988b70392dc0759bca45b2e325b096d37c33808",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +1072,1076 @@      this->set_fuse_relu(true);\n      OP_REQUIRES(\n          context, num_args == 2,\n          errors::InvalidArgument(\n              \"Fused Conv2D must have two extra arguments: bias and add.\"));"
  },
  {
    "id" : "099e44b0-1aa6-4dd0-a9e1-7c5418089a01",
    "prId" : 27698,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27698#pullrequestreview-225833972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ac6f75f-0aaf-4332-8f80-0af06fb957df",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Nice. Thank you! Looking forward to the clean-up PR. :)",
        "createdAt" : "2019-04-11T22:58:02Z",
        "updatedAt" : "2019-04-12T17:25:51Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd3794e9c34a0839219205bbbb3cd18b30a3cc59",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +319,323 @@// TODO(nhasabni): We should not require passing a type to MklPrimitiveFactory.\n// But removing the need for type in MklPrimitiveFactory is going to require\n// change to every MKL op. So not doing it now. Instead passing float.\ntemplate <typename Tinput, typename Tfilter, typename Tbias, typename Toutput>\nclass MklConvFwdPrimitiveFactory : public MklPrimitiveFactory<float> {"
  },
  {
    "id" : "dadb6afe-4cd3-4830-ab32-2950c6264ab6",
    "prId" : 27388,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27388#pullrequestreview-221281434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fad3a3ca-b633-411c-922e-f7db71405552",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "I'm curious. Why does this have to be `ptrdiff_t`?",
        "createdAt" : "2019-04-01T18:17:53Z",
        "updatedAt" : "2019-04-01T18:19:19Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "2a875767-44c4-4b19-b837-eb12c212c22d",
        "parentId" : "fad3a3ca-b633-411c-922e-f7db71405552",
        "authorId" : "25745d2d-fe01-49de-975c-879c043e0b34",
        "body" : "error C2398: Element '1': conversion from 'std::size_t' to 'std::ptrdiff_t' requires a narrowing conversion",
        "createdAt" : "2019-04-01T18:32:18Z",
        "updatedAt" : "2019-04-01T18:32:18Z",
        "lastEditedBy" : "25745d2d-fe01-49de-975c-879c043e0b34",
        "tags" : [
        ]
      },
      {
        "id" : "b6c11cbd-7499-4716-9d11-9f2bc520cec3",
        "parentId" : "fad3a3ca-b633-411c-922e-f7db71405552",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you! ",
        "createdAt" : "2019-04-01T18:43:31Z",
        "updatedAt" : "2019-04-01T18:43:31Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f8ab2d5f7af7f8976fb5ee63fcc7293408de9c",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +1567,1571 @@        size_t depth = min_filter.NumElements();\n        AllocateOutputSetMklShape(context, 1, &output_min,\n                                  {static_cast<ptrdiff_t>(depth)},\n                                  output_min_mkl_shape);\n        AllocateOutputSetMklShape(context, 2, &output_max,"
  },
  {
    "id" : "c2b31235-45d2-4464-b6a9-03fb05e3514c",
    "prId" : 27001,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27001#pullrequestreview-219811827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd3ac6cb-7087-4741-b569-dd4fbb07ca3d",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "So the bug fix is removing the check if `summand` is an MKL tensor? Are the following code okay when `summand` is a TF tensor?",
        "createdAt" : "2019-03-22T06:35:37Z",
        "updatedAt" : "2019-03-22T06:36:01Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "8a0ba1b5-a1b6-42da-a9c4-6ec9f151e396",
        "parentId" : "bd3ac6cb-7087-4741-b569-dd4fbb07ca3d",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Yes. \r\nActually the fixed code has been working since Q3 2018, in a private branch (Intel) for all our INT8 work. ",
        "createdAt" : "2019-03-27T17:43:35Z",
        "updatedAt" : "2019-03-27T17:43:35Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      },
      {
        "id" : "a78ba621-9f36-44ea-b716-f520b3328972",
        "parentId" : "bd3ac6cb-7087-4741-b569-dd4fbb07ca3d",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "The private branch is called \"int8-master\". However, when people of my team submitted public PR's, they mostly did from other private branches.  That is why this fix was never included. ",
        "createdAt" : "2019-03-27T17:46:55Z",
        "updatedAt" : "2019-03-27T17:46:55Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      },
      {
        "id" : "048e286c-5007-4d57-8fc5-34fb60e2a84f",
        "parentId" : "bd3ac6cb-7087-4741-b569-dd4fbb07ca3d",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thanks for your clarifications!",
        "createdAt" : "2019-03-28T02:45:46Z",
        "updatedAt" : "2019-03-28T02:45:58Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "30680d81c748c43c88f68dd49801680423545fff",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +1788,1792 @@\n      // TODO(mdfaijul): handle both non-MKL and MKL tensors\n      if (summand_type == DT_QINT8) {\n        OP_REQUIRES_OK(\n            context, summand.BitcastFrom(summand, DT_QUINT8, summand.shape()));"
  },
  {
    "id" : "c5cc1faa-742c-4016-a00b-e5d41d8a0ada",
    "prId" : 24086,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24086#pullrequestreview-182480707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7093a9d9-818d-4f2a-9b80-f0053b752c9e",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Please add an additional comment line saying that for `fuse_biasadd_`, `biasadd` is handled directly inside the convolution op by checking the `fuse_biasadd_` flag.",
        "createdAt" : "2018-12-07T01:25:54Z",
        "updatedAt" : "2018-12-10T18:26:05Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7250f8531a1f35cd22899fa3b124bcbe252281c5",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +1163,1167 @@    params.dtypes.append(typeid(Toutput).name());\n\n    // Add fusions as post ops\n    // Note: Fusion of BiasAdd is handled directly inside MklConvOp by\n    // checking fuse_biasadd_ flag."
  },
  {
    "id" : "568662a3-1134-46db-864a-fa324424ce6d",
    "prId" : 24086,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24086#pullrequestreview-183333608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38cc3753-b482-40d5-9a2e-106cc17f49d6",
        "parentId" : null,
        "authorId" : "cc3a9462-2410-463b-a9e3-7b2b39d1f5bd",
        "body" : "We are trying to migrate to `absl` going forward, and you can use `absl::StrJoin` instead of `str_util` (see https://abseil.io/docs/cpp/guides/strings). I'm fine with keeping `str_util` for now, anyway it's already used in too many other places.",
        "createdAt" : "2018-12-09T06:50:52Z",
        "updatedAt" : "2018-12-10T18:26:05Z",
        "lastEditedBy" : "cc3a9462-2410-463b-a9e3-7b2b39d1f5bd",
        "tags" : [
        ]
      },
      {
        "id" : "b11568fb-70c7-4615-bf4b-7b9d27446ed6",
        "parentId" : "38cc3753-b482-40d5-9a2e-106cc17f49d6",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "Thanks @ezhulenev for feedback. We will keep note of it.",
        "createdAt" : "2018-12-10T18:30:47Z",
        "updatedAt" : "2018-12-10T18:30:47Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "7250f8531a1f35cd22899fa3b124bcbe252281c5",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +1329,1333 @@      OP_REQUIRES(context, false,\n                  errors::Unimplemented(\"Fusion is not implemented: [\",\n                                        str_util::Join(fused_ops, \",\"), \"]\"));\n    }\n  }"
  },
  {
    "id" : "2f2d7c80-8fbb-435f-a834-00d7b8148092",
    "prId" : 24021,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24021#pullrequestreview-179561138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76882bea-e137-4073-a989-be996470de4c",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Is this the only place for the bug fix? Just wanted to make sure.",
        "createdAt" : "2018-11-28T23:10:14Z",
        "updatedAt" : "2018-11-29T00:27:30Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7418be7bff57803de971336dda25cd3d844ac79",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +1069,1073 @@              conv_fwd_pd.get()->weights_primitive_desc(),\n              filter.GetTensorBuffer(filter_out_tensor));\n        }\n        filter_data =\n            static_cast<Tfilter*>(filter.GetOpMem().get_data_handle());"
  },
  {
    "id" : "f77c69af-2912-49b1-941b-540c1f7e2c19",
    "prId" : 21324,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/21324#pullrequestreview-143431631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee2f7471-4384-4881-b3c5-6d15bf4483aa",
        "parentId" : null,
        "authorId" : "cc3a9462-2410-463b-a9e3-7b2b39d1f5bd",
        "body" : "Please also update the corresponding error message.",
        "createdAt" : "2018-08-04T19:28:16Z",
        "updatedAt" : "2018-08-11T21:10:08Z",
        "lastEditedBy" : "cc3a9462-2410-463b-a9e3-7b2b39d1f5bd",
        "tags" : [
        ]
      },
      {
        "id" : "55f51fb1-5213-4bb3-96b4-fe2d7980daa4",
        "parentId" : "ee2f7471-4384-4881-b3c5-6d15bf4483aa",
        "authorId" : "0fa85d2b-d37c-423a-902d-562beed7cb04",
        "body" : "fixed it",
        "createdAt" : "2018-08-06T01:10:11Z",
        "updatedAt" : "2018-08-11T21:10:08Z",
        "lastEditedBy" : "0fa85d2b-d37c-423a-902d-562beed7cb04",
        "tags" : [
        ]
      }
    ],
    "commit" : "62191da0819b25906c1b2ed96159cfe36ba00383",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +770,774 @@                errors::InvalidArgument(\"Invalid data format\"));\n    OP_REQUIRES(context, (strides_.size() == 4 || strides_.size() == 5),\n                errors::InvalidArgument(\"Sliding window strides field must \"\n                                        \"specify 4 or 5 dimensions\"));\n"
  },
  {
    "id" : "6e055fbc-eb55-4036-9e1d-621efa103a2a",
    "prId" : 19754,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19754#pullrequestreview-128151900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1845f15c-c193-4379-8903-0ec7dd75de77",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Data members should be declared last. So just leave the type definition of ConvFwdContext here, and more the declaration of context_ and engine_ to the bottom of the class.",
        "createdAt" : "2018-06-12T19:57:28Z",
        "updatedAt" : "2018-06-12T21:24:19Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "74fff3d5-eada-4bb4-b49d-0bd548bc5a78",
        "parentId" : "1845f15c-c193-4379-8903-0ec7dd75de77",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Done with code refactoring - move both \"context_\" and \"cpu_engine_\" data members to \r\nthe bottom of class declaration. ",
        "createdAt" : "2018-06-12T21:15:24Z",
        "updatedAt" : "2018-06-12T21:24:19Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      }
    ],
    "commit" : "93413976b69c4cc92a8447abd198b2db60302376",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +158,162 @@ private:\n  // Primitive reuse context for Conv2D Fwd op\n  struct ConvFwdContext {\n    // expected memory format for this primitive instance\n    memory::format src_fmt;"
  },
  {
    "id" : "824022cc-a996-493e-bab7-b9cdabd5d068",
    "prId" : 17943,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/17943#pullrequestreview-114065174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d2593a1-a136-4775-a636-bea2faf6487e",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "s/md/mem_desc/g ?",
        "createdAt" : "2018-04-18T01:07:54Z",
        "updatedAt" : "2018-04-18T17:12:04Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "5d5b278d-ae7d-48b1-8346-a6020549139e",
        "parentId" : "3d2593a1-a136-4775-a636-bea2faf6487e",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Yes, md == memory::desc.\r\n\r\nI would prefer to sticking to src_md_ for conciseness reason, instead of ugly \"src_mem_desc_\".\r\nBy the way, these are private members. Their meaning are obvious according to their declarations.",
        "createdAt" : "2018-04-18T16:43:44Z",
        "updatedAt" : "2018-04-18T17:12:04Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      },
      {
        "id" : "0f1990e5-a804-4237-b856-68201d24f8db",
        "parentId" : "3d2593a1-a136-4775-a636-bea2faf6487e",
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "OK, this is a violation of the style guide, but we can address it in a general cleanup in the future.",
        "createdAt" : "2018-04-20T17:37:27Z",
        "updatedAt" : "2018-04-20T17:37:27Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      }
    ],
    "commit" : "147a783408be86865ebcec3f3684a2df21d094c2",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +215,219 @@\n  // memory desc\n  std::shared_ptr<mkldnn::memory::desc> src_md_;\n  std::shared_ptr<mkldnn::memory::desc> filter_md_;\n  std::shared_ptr<mkldnn::memory::desc> bias_md_;"
  },
  {
    "id" : "8d282350-cc96-4a4c-bcdc-f61ebb9b9b63",
    "prId" : 7937,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/7937#pullrequestreview-28466378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10511248-c574-4431-8010-1873391a8eb2",
        "parentId" : null,
        "authorId" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "body" : "This function is kind of long. Any chance of breaking it up into 3 or 4 member function calls that focus on particular things: format conversion sub-routine, resource clean-up sub-routine, etc...",
        "createdAt" : "2017-03-01T23:09:41Z",
        "updatedAt" : "2017-03-09T00:23:24Z",
        "lastEditedBy" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "tags" : [
        ]
      },
      {
        "id" : "bbdf41b6-3ddc-455a-bdcb-e2f0ec1ed7c4",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "We could. Are you OK with us promoting the MKL variables to class variables? That will help us keep the argument lists short.",
        "createdAt" : "2017-03-02T01:22:55Z",
        "updatedAt" : "2017-03-09T00:23:24Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      },
      {
        "id" : "c36209a2-2b58-4d26-97a4-490eac70a568",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "body" : "Class variables for the MklConv2DOp class? That seems fine.",
        "createdAt" : "2017-03-02T18:57:53Z",
        "updatedAt" : "2017-03-09T00:23:24Z",
        "lastEditedBy" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "tags" : [
        ]
      },
      {
        "id" : "1a209f87-f719-47b3-943c-dbf5c360fb75",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "Yes. We'll break it up then. ",
        "createdAt" : "2017-03-02T19:10:39Z",
        "updatedAt" : "2017-03-09T00:23:24Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      },
      {
        "id" : "3a9b5249-7421-424c-837e-ad70b29658bf",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "@andydavis1 @zhangyaobit  @tfboyd Promoting MKL state to class members seems to conflict with this advice. https://www.tensorflow.org/extend/adding_an_op \"Important: Instances of your OpKernel may be accessed concurrently. Your Compute method must be thread-safe. Guard any access to class members with a mutex. Or better yet, don't share state via class members! Consider using a ResourceMgr to keep track of op state.\" We are thinking of moving this back into the Compute function and explicitly pass state between MKL sub-routines. thoughts?",
        "createdAt" : "2017-03-20T23:44:31Z",
        "updatedAt" : "2017-03-20T23:46:42Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      },
      {
        "id" : "9648a2d3-f60f-4f56-811a-f55604ada61a",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "Which variables are you considering making to class members? If they are static (don't change across training/inference runs), I think it is ok to make them class members, just like what you already have for strides_, padding_, data_format_. My understanding is that each node will have its own instance of OpKernel, but this instance is shared across different runs.",
        "createdAt" : "2017-03-21T17:51:20Z",
        "updatedAt" : "2017-03-21T17:51:21Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "a01799fe-d81c-468e-86a5-c01bdfb80738",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "body" : "If the variables can change per-invocation of the Compute method, then you'll need to pass them into the sub-routines (instead of keep them as class variables). Sorry about that, I assumed the state you were adding as class variables was thread safe.",
        "createdAt" : "2017-03-21T17:52:02Z",
        "updatedAt" : "2017-03-21T17:52:02Z",
        "lastEditedBy" : "711b9ad2-1118-41b4-bbcb-e363bd57c690",
        "tags" : [
        ]
      },
      {
        "id" : "e5044849-bcf8-459d-acca-e9d411e54b20",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "Thanks for the feedback. The MKL variables are not all thread-safe. So we will have to either pass them through sub-routines or revert to a single monolithic function. Do you have a preference? ",
        "createdAt" : "2017-03-22T15:07:43Z",
        "updatedAt" : "2017-03-22T15:07:43Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      },
      {
        "id" : "9c47c4fd-da62-49a3-aa97-58267f5203af",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "I think Andy suggested to \"then you'll need to pass them into the sub-routines\". Please let us know if this is too cumbersome to do or if you prefer a monolithic function.",
        "createdAt" : "2017-03-22T17:37:22Z",
        "updatedAt" : "2017-03-22T17:37:22Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "e9d57fc2-21f1-42e7-922a-058baa32f547",
        "parentId" : "10511248-c574-4431-8010-1873391a8eb2",
        "authorId" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "body" : "Its more of a style issue. Monolithic makes the function too long while sub-routines have some ugliness in that they dont always localize Mkl state. Effort is minimal in either case. We will go with your preference.",
        "createdAt" : "2017-03-22T18:08:12Z",
        "updatedAt" : "2017-03-22T18:08:12Z",
        "lastEditedBy" : "6699b080-3d91-4335-aff4-60d8e8393b11",
        "tags" : [
        ]
      }
    ],
    "commit" : "25290780329e3e95d76357d12fafc9cf54b1f7ba",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@  }\n\n  void Compute(OpKernelContext* context) override {\n    const Tensor& input = MklGetInput(context, 0);\n    GetMklShape(context, 0, &(mkl_params_.input_shape));"
  }
]