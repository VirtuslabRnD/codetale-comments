[
  {
    "id" : "dd92c6d6-01ca-4c14-8379-f8833e84aaea",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96092814-258b-40bc-94ec-85bd530c88ef",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "You could accumulate the shifts first and then do the modulo, right? Just checking, I think the current approach is fine.",
        "createdAt" : "2019-06-18T08:27:37Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +75,79 @@      const int sum = shift_mod_sum[axis] + static_cast<int>(shift_flat(i));\n      // modulo that works with negatives: ((x % y) + y) % y\n      shift_mod_sum[axis] = (sum % ds + ds) % ds;\n    }\n    // the size of each dimension"
  },
  {
    "id" : "2e01ff03-c8d4-4d01-93dd-515edb9c53a5",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54785af1-d3a5-4d12-abf7-54dc70542ee4",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Nit: capitalize comments and end them with a '.'.",
        "createdAt" : "2019-06-18T08:28:21Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +77,81 @@      shift_mod_sum[axis] = (sum % ds + ds) % ds;\n    }\n    // the size of each dimension\n    gtl::InlinedVector<int32, 4> dim_size(num_dims);\n    // threshold[i] is the index that the roll starts to wrap back to the front"
  },
  {
    "id" : "8ee30128-89c9-4d7e-a077-2566059ed17b",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6801e394-82a5-4478-a218-05c221832e82",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "I had to read this a couple of times, which makes me think it could be improved.\r\n\r\nHow about initializing `isd` to `num_dims`, use `if (shift_mod_sum[i] != 0) isd = i;` and exit if `isd` is still `num_dims` after the loop?",
        "createdAt" : "2019-06-18T08:35:04Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +89,93 @@    int64 isd = 0;\n    for (int i = num_dims - 1; i >= 0; i--) {\n      if (isd == 0 && shift_mod_sum[i] != 0) isd = i;\n      const int ds = std::max<int>(static_cast<int>(input.dim_size(i)), 1);\n      dim_size[i] = ds;"
  },
  {
    "id" : "b77af680-b8d3-4e1c-b999-6d1c8b86191f",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac5acc86-707a-492c-906a-fc38e39cb6a0",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Is this any different than 'stride'? Do we need to consider tensor layout?",
        "createdAt" : "2019-06-18T08:37:37Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +84,88 @@    // you need to skip in order to make it over from one side of a dimension\n    // to the other. Used to make the shifts wrap around after a threshold.\n    gtl::InlinedVector<int64, 4> dim_range(num_dims);\n    int64 dim_size_prod = 1;  // dimension size product\n    // inner shift dimension (inner most shifted dimension)"
  },
  {
    "id" : "37a8b63c-c1bc-4eb6-a465-c02d3c041dc5",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93c6ca06-51c5-4994-86e3-5a533951e6cb",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Nit: 'In case'",
        "createdAt" : "2019-06-18T08:38:17Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +316,320 @@                          input, output, threshold, dim_range, isd);\n    } else {\n      // incase memcpy does not work for current data type\n      DoRoll<T>(context, num_elements, num_dims, dim_size, input,\n                output, threshold, dim_range);"
  },
  {
    "id" : "593e277d-8c05-43a9-a143-79ddaba50c9c",
    "prId" : 27389,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/27389#pullrequestreview-250933881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cb5ea66-1d73-4f87-aba8-450900779bf7",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Ugh, now I see you just copied this code. Feel free to ignore my comments above.",
        "createdAt" : "2019-06-18T08:39:38Z",
        "updatedAt" : "2019-06-24T11:15:32Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a8a68695339e5ff191a81f04ff4f179e357711d",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +106,110 @@            input_flat, output_flat, threshold, dim_range, isd);\n  }\n};\n\nnamespace functor {"
  }
]