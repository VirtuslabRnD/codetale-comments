[
  {
    "id" : "1db29130-ceb1-4acf-9316-df8eb5db3bff",
    "prId" : 36497,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36497#pullrequestreview-358120207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0ce423a-7561-47fc-a206-c409e5dba24d",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "I mentioned in #36496 that we should refactor this part (lines 193-203) out (either to a real function or just a macro). If #36496 does that, please call the new refactored function/macro here.",
        "createdAt" : "2020-02-10T23:47:57Z",
        "updatedAt" : "2020-02-13T22:01:02Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "f734e248-00f9-49ed-93aa-79c6a882f98b",
        "parentId" : "a0ce423a-7561-47fc-a206-c409e5dba24d",
        "authorId" : "3cbb7033-4fd4-4c54-9671-d4408e7451f4",
        "body" : "@penpornk That specific change is not addressable in near term. So No refactor is attempted. See the PR #36496  for comments.",
        "createdAt" : "2020-02-12T01:56:52Z",
        "updatedAt" : "2020-02-13T22:01:02Z",
        "lastEditedBy" : "3cbb7033-4fd4-4c54-9671-d4408e7451f4",
        "tags" : [
        ]
      },
      {
        "id" : "7bda1c0f-db86-4da7-a72f-036e0a5b3ace",
        "parentId" : "a0ce423a-7561-47fc-a206-c409e5dba24d",
        "authorId" : "3cbb7033-4fd4-4c54-9671-d4408e7451f4",
        "body" : "@penpornk @mdfaijul Changes Done in the other PR. FYI",
        "createdAt" : "2020-02-12T20:10:26Z",
        "updatedAt" : "2020-02-13T22:01:02Z",
        "lastEditedBy" : "3cbb7033-4fd4-4c54-9671-d4408e7451f4",
        "tags" : [
        ]
      },
      {
        "id" : "de955510-fef9-46e8-8d6a-359762a406f0",
        "parentId" : "a0ce423a-7561-47fc-a206-c409e5dba24d",
        "authorId" : "2f37d57c-3887-4235-87c2-9c3d11e0c22b",
        "body" : "@penpornk Addressed the comments.",
        "createdAt" : "2020-02-13T10:49:06Z",
        "updatedAt" : "2020-02-13T22:01:02Z",
        "lastEditedBy" : "2f37d57c-3887-4235-87c2-9c3d11e0c22b",
        "tags" : [
        ]
      }
    ],
    "commit" : "371fc9e463a9cfdeddef0fb74c50cdde11c5f51f",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +193,197 @@    context_.dst_mem->set_data_handle(sliceParams.to->get_data_handle());\n\n#ifdef ENABLE_MKLDNN_V1\n    execute_primitives(context_.slice_primitives, context_.slice_stream,\n                       context_.slice_primitives_args);"
  },
  {
    "id" : "916bb6be-6e49-4888-a2c9-2928d22bc1b6",
    "prId" : 31677,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/31677#pullrequestreview-276700108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46b254c3-f073-405e-a28e-e8bd59161bcb",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "`input_strides` calculation can be refactored out if the `if`-`else`.",
        "createdAt" : "2019-08-16T18:05:34Z",
        "updatedAt" : "2019-08-16T18:08:12Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "d6a0288c-e88e-4153-bd57-e390e1219528",
        "parentId" : "46b254c3-f073-405e-a28e-e8bd59161bcb",
        "authorId" : "088e7b61-2a32-44a5-a5ae-a4e4ae2305a4",
        "body" : "I don't quite know how to move out the `input_strides`. \r\n1. If we move `input_strides` forward, before `if`: obviously this can not be done, because it relies on `input_dims` which is decided in `if`-`else`;\r\n2. Otherwise if we move 'input_strides' backward, after `else`: also can not be done, since in the `else` clause `input_strides` is required to calculate `input_md`.\r\n\r\nAny suggestions?",
        "createdAt" : "2019-08-19T02:26:31Z",
        "updatedAt" : "2019-08-19T02:26:57Z",
        "lastEditedBy" : "088e7b61-2a32-44a5-a5ae-a4e4ae2305a4",
        "tags" : [
        ]
      },
      {
        "id" : "92633401-ea6c-4ea9-8b5b-97c7a7966327",
        "parentId" : "46b254c3-f073-405e-a28e-e8bd59161bcb",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "My bad! The PR only shows two lines before and after each change. The two lines calculating `input_md` happen to be hidden and I overlooked. This is fine then. Sorry for the inconvenience!",
        "createdAt" : "2019-08-19T17:19:24Z",
        "updatedAt" : "2019-08-19T17:19:46Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e25bfcaf2e481b5d25b1c681668bd4c28b631300",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +403,407 @@        // Compute parameters of reorder primitive first.\n        input_dims = input_mkl_shape.GetSizesAsMklDnnDims();\n        input_strides = CalculateTFStrides(input_dims);\n      } else {\n        // Initialize input dimensions and strides to be used when input is not"
  },
  {
    "id" : "f5620852-66b4-4807-af67-a2556e2bbf26",
    "prId" : 24056,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24056#pullrequestreview-183337144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fc23f93-3ed1-42a3-94d2-e219e22f6fc5",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Why do you need to set `src_mem` and `dst_mem` to `DummyData`? Please also add a comment (in the file) saying so.",
        "createdAt" : "2018-12-05T05:03:05Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "e3a003bd-b8b8-437b-98b8-bdfb1e405bbe",
        "parentId" : "1fc23f93-3ed1-42a3-94d2-e219e22f6fc5",
        "authorId" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "body" : "For safety guard, so that data_handle wouldn't be rewritten.",
        "createdAt" : "2018-12-10T02:04:19Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "tags" : [
        ]
      },
      {
        "id" : "0dfc05cd-ce73-443d-b773-a3a4f7c5a505",
        "parentId" : "1fc23f93-3ed1-42a3-94d2-e219e22f6fc5",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Rewritten by whom? And why does it matter if it gets rewritten or not? The operation is already executed.",
        "createdAt" : "2018-12-10T18:39:06Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b21247408beba5325aeaf11e906f4a5e879ec12",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +195,199 @@    // iteration is kept, problems of current iteration won't be\n    // thrown immediately, and wrong data would be reused.\n    context_.src_mem->set_data_handle(DummyData);\n    context_.dst_mem->set_data_handle(DummyData);\n    return;"
  },
  {
    "id" : "414c6079-2a8d-427b-b0ee-2e1a336fadea",
    "prId" : 24056,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24056#pullrequestreview-183337144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b535781-e229-40d5-95f3-dbe839f350bd",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Why do you have to set the handle to `DummyData` first? Please add a comment saying so (in the file) too.",
        "createdAt" : "2018-12-05T05:18:01Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "2508f3ce-e970-4442-8ef8-8df9ceb2927c",
        "parentId" : "0b535781-e229-40d5-95f3-dbe839f350bd",
        "authorId" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "body" : "Just create the memory primitive, fill with dummy.",
        "createdAt" : "2018-12-10T02:04:37Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "tags" : [
        ]
      },
      {
        "id" : "ad00d0b0-97e1-4e4f-8970-baedd1fb34dd",
        "parentId" : "0b535781-e229-40d5-95f3-dbe839f350bd",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "I understand what the command does. My question was, why do we need to fill it with `DummyData`? Can't we just fill it with the actual data handle that we will use, i.e., `sliceParams.from->get_data_handle()`?",
        "createdAt" : "2018-12-10T18:40:35Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b21247408beba5325aeaf11e906f4a5e879ec12",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +222,226 @@    context_.src_mem.reset(\n        new memory({sliceParams.from->get_primitive_desc().desc(), cpu_engine_},\n                   DummyData));\n    context_.dst_mem.reset(new memory(\n        {sliceParams.to->get_primitive_desc().desc(), cpu_engine_}, DummyData));"
  },
  {
    "id" : "19cf4986-360d-47d0-a695-58b315edea66",
    "prId" : 24056,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24056#pullrequestreview-182474836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f6608f4-81c4-4963-9698-3ca591790853",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Do we need to store `view_pd`, `reorder_pd`, and `reorder_prim` in `context_`? They seem to be just intermediate variables and the values aren't used anywhere else.",
        "createdAt" : "2018-12-06T01:42:29Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "755969de-59a8-4d61-809b-07e8b6d4024d",
        "parentId" : "9f6608f4-81c4-4963-9698-3ca591790853",
        "authorId" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "body" : "I think we should store. I have tried that if not, reuse primitive would have some problems. So I think some of them may pass by reference.",
        "createdAt" : "2018-12-06T03:36:26Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "tags" : [
        ]
      },
      {
        "id" : "7f62f923-2afc-49c1-b6c1-5f26925cbd71",
        "parentId" : "9f6608f4-81c4-4963-9698-3ca591790853",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for the explanation!",
        "createdAt" : "2018-12-06T22:17:08Z",
        "updatedAt" : "2018-12-12T02:04:37Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b21247408beba5325aeaf11e906f4a5e879ec12",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +227,231 @@    auto src_pd = context_.src_mem->get_primitive_desc();\n    auto dst_pd = context_.dst_mem->get_primitive_desc();\n    context_.view_pd =\n        std::make_shared<view::primitive_desc>(view::primitive_desc(\n            src_pd, sliceParams.size_dims, sliceParams.begin_dims));"
  },
  {
    "id" : "18d26d56-c863-4837-b337-3e9a7abec230",
    "prId" : 22076,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22076#pullrequestreview-155785663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba17f917-1db7-451b-8de9-91c5de7f1cd9",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "[No action required. Just a note for future reference.]\r\nI think `b <= input_tf_shape.dim_size(i)` should be `b < input_tf_shape.dim_size(i)`. But TF slice also uses `<=`  and changing to `<` actually broke some tests. So let's keep it like this for this PR.",
        "createdAt" : "2018-09-10T23:10:53Z",
        "updatedAt" : "2018-09-25T03:16:24Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "9a8d8541-f6ce-4de2-8a81-75d954005f5d",
        "parentId" : "ba17f917-1db7-451b-8de9-91c5de7f1cd9",
        "authorId" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "body" : "Ok.",
        "createdAt" : "2018-09-17T05:44:40Z",
        "updatedAt" : "2018-09-25T03:16:24Z",
        "lastEditedBy" : "29850b84-a6d7-4394-9bd7-93fe845f687f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ab8b71c2115caacfec19d849ddabf7f1f4287b",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@                                  \") when \", \"input.dim_size(\", i, \") == 0\"));\n    } else {\n      OP_REQUIRES(context, 0 <= b && b <= input_tf_shape.dim_size(i),\n                  errors::InvalidArgument(\"Expected begin[\", i, \"] in [0, \",\n                                          input_tf_shape.dim_size(i),"
  },
  {
    "id" : "63341fea-3f0e-40f8-a595-d5151b565460",
    "prId" : 22076,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22076#pullrequestreview-153971420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3fe2987-24e0-4c75-95df-eece1ab9dac9",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "It would be great to make the comment self-contained. Could you please add something like `A shared code to validate input shapes and check for identity`? Thank you! (Referring to `SharedValidation` is also good so please keep it.) ",
        "createdAt" : "2018-09-11T17:45:19Z",
        "updatedAt" : "2018-09-25T03:16:24Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ab8b71c2115caacfec19d849ddabf7f1f4287b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// A version of SharedValidation (slice_op.h) written for input that is in\n// either Mkl layout or Tensorflow layout.\n// A shared code to validate input shapes and check for identity, which is not dependent on the type of T.\n// We do this to reduce code size by not duplicating all this for all T (float, double, int32, etc.)"
  }
]