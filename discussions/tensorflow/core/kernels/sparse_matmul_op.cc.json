[
  {
    "id" : "75f467e8-3954-4ef1-a84e-10167c9d974e",
    "prId" : 24706,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24706#pullrequestreview-229859944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6615fbe4-54c1-4df3-9480-7167445e7839",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "```suggestion\r\n#endif  // 0\r\n```",
        "createdAt" : "2019-04-24T00:58:26Z",
        "updatedAt" : "2019-11-18T18:20:52Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcbfb65b9496354c1788085c85dc9f95d241b041",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1446,1450 @@    return;\n  }\n#endif\n  auto left_data = left.data();\n  auto right_data = right.data();"
  },
  {
    "id" : "d0a06878-3605-463a-a214-a3ea18b131dd",
    "prId" : 24706,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24706#pullrequestreview-229859944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1919ec5f-5a4b-4012-bcd3-7909009012c4",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "```suggestion\r\n#endif  // TENSORFLOW_USE_LIBXSMM\r\n```",
        "createdAt" : "2019-04-24T01:01:36Z",
        "updatedAt" : "2019-11-18T18:20:52Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcbfb65b9496354c1788085c85dc9f95d241b041",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +1634,1638 @@                              .TypeConstraint<TB>(\"Tb\"), \\\n                          SparseMatMulOp<TA, TB, LibxsmmSparseMatMul>);\n#endif\n\nREGISTER_SPARSE_MATMUL(float, bfloat16);"
  },
  {
    "id" : "49bdc714-a390-464c-a946-8123774303a5",
    "prId" : 24706,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/24706#pullrequestreview-229859944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "886e734f-b6eb-4025-8445-923c4dbe7a90",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "```suggestion\r\n#endif  // TENSORFLOW_USE_LIBXSMM\r\n```",
        "createdAt" : "2019-04-24T01:01:55Z",
        "updatedAt" : "2019-11-18T18:20:52Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcbfb65b9496354c1788085c85dc9f95d241b041",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +1645,1649 @@REGISTER_SPARSE_MATMUL(bfloat16, bfloat16);\nREGISTER_SPARSE_MATMUL(float, float);\n#endif\n\n#undef REGISTER_SPARSE_MATMUL"
  },
  {
    "id" : "73544bf2-009a-468e-b1a4-9ef4694bd293",
    "prId" : 7113,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/7113#pullrequestreview-19652499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e747c26a-c0af-478d-ab82-6c8fd1176677",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "I'm sure I'm missing something, but possibly unused variable?",
        "createdAt" : "2017-02-01T20:42:39Z",
        "updatedAt" : "2017-02-01T20:51:17Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "3b71764f-d7ad-4e54-b034-9991bff05716",
        "parentId" : "e747c26a-c0af-478d-ab82-6c8fd1176677",
        "authorId" : "c88af626-95c4-44a1-a457-e22900d07eda",
        "body" : "As far as I can tell, this ensures that all the calls that libxsmm makes to malloc use the tf_allocator at least for the duration of the tf_allocator variable.",
        "createdAt" : "2017-02-01T20:53:03Z",
        "updatedAt" : "2017-02-01T20:53:03Z",
        "lastEditedBy" : "c88af626-95c4-44a1-a457-e22900d07eda",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e35e4c1f48cab3ed415bf1343414cb55d47acd4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +899,903 @@            new TensorInfoCacheEntry{M, K, N, max_threads, {}, nullptr}};\n        // setup scoped allocator, which uses cpu_allocator() for this scope\n        const libxsmm_tf_allocator<libxsmm_scratch_allocator> tf_allocator;\n        libxsmm_spmdm_init(M, N, K, max_threads, &e->handle, &e->output_csr);\n        return e;"
  }
]