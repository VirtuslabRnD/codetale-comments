[
  {
    "id" : "c4d2ee1c-91c8-4660-a255-0f3c115f6c25",
    "prId" : 39471,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/39471#pullrequestreview-419494448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9508ba58-11f0-4204-9110-8962cc625c2e",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Just curious, why do we put `fwd_stream` in front of `workspace_data`? (`BwdPrimitive` and other PRs have `stream` last.)",
        "createdAt" : "2020-05-27T01:32:05Z",
        "updatedAt" : "2020-05-27T01:37:23Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "8977a661-1f1a-4503-9db6-e040004797f7",
        "parentId" : "9508ba58-11f0-4204-9110-8962cc625c2e",
        "authorId" : "dc01c536-f8d1-421c-86af-6ae72825c430",
        "body" : "Right. This conflicted with another PR that introduced `workspace_data` recently for fwd primitive. So I decided to put it this way. Originally fwd_stream was the last.",
        "createdAt" : "2020-05-27T18:22:22Z",
        "updatedAt" : "2020-05-27T18:23:19Z",
        "lastEditedBy" : "dc01c536-f8d1-421c-86af-6ae72825c430",
        "tags" : [
        ]
      }
    ],
    "commit" : "17f2cb148e34c4249031b07844b88487e64dbedb",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +94,98 @@  void Execute(const T* src_data, const U* weights_data, T* dst_data,\n               U* mean_data, U* variance_data,\n               std::shared_ptr<stream> fwd_stream, U* workspace_data) {\n    context_.src_mem->set_data_handle(\n        static_cast<void*>(const_cast<T*>(src_data)));"
  },
  {
    "id" : "e50ad8c5-049c-435a-ab0f-06a020f8d48d",
    "prId" : 37176,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37176#pullrequestreview-366757072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "875c1db4-990d-491e-a90b-8cb426d3efde",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Can this be simplified to\r\n```c++\r\n      if (is_training_ && exponential_avg_factor_ != U(1.0)) {\r\n        U one_minus_factor = U(1.0) - exponential_avg_factor_;\r\n        for (int k = 0; k < depth_; k++) {\r\n          batch_mean_data[k] = one_minus_factor * est_mean_data[k] +\r\n                               exponential_avg_factor_ * mean_data[k];\r\n          batch_variance_data[k] = one_minus_factor * est_variance_data[k] +\r\n                                   exponential_avg_factor_ *\r\n                                       static_cast<U>(adjust_factor) *\r\n                                       variance_data[k];\r\n        }\r\n      } else {\r\n        std::memcpy(batch_mean_data, mean_data, depth_ * sizeof(U));\r\n        std::memcpy(batch_variance_data, variance_data, depth_ * sizeof(U));\r\n      }\r\n```\r\n?\r\n\r\nIf it can, but you'd rather use the original code to save testing time, please add a TODO.",
        "createdAt" : "2020-02-29T00:32:54Z",
        "updatedAt" : "2020-03-01T05:12:24Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d8b015d41509341e66e4e7633f51ecd92a255c0",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +903,907 @@        std::memcpy(batch_mean_data, mean_data, depth_ * sizeof(U));\n        std::memcpy(batch_variance_data, variance_data, depth_ * sizeof(U));\n      }\n    } catch (mkldnn::error& e) {\n      string error_msg = \"Status: \" + std::to_string(e.status) +"
  },
  {
    "id" : "77cbcd77-5ef5-43b3-94c7-16e06b1c6c88",
    "prId" : 37081,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37081#pullrequestreview-365283755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd73144d-450a-4eb1-acb6-b7beea110840",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you for the clean-up!",
        "createdAt" : "2020-02-26T22:22:35Z",
        "updatedAt" : "2020-02-26T23:02:48Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07c125b4da39aab95a79bd24d94a52fc836561a0",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +469,473 @@    DCHECK_EQ(context_.bwd_primitives.size(), context_.net_args.size());\n    execute_primitives(context_.bwd_primitives, context_.bwd_stream,\n                       context_.net_args);\n#else\n    context_.bwd_stream->submit(context_.bwd_primitives);"
  },
  {
    "id" : "d8026e60-e776-4ac2-8b47-e28803b11c7a",
    "prId" : 36767,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36767#pullrequestreview-365031004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9de110e-8f27-4c0b-9034-a8c437c07bdf",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Please call `execute_primitives` in `mkl_util.h`.",
        "createdAt" : "2020-02-19T00:20:05Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "c5f9006d-f497-46d1-84d3-7719841494fe",
        "parentId" : "e9de110e-8f27-4c0b-9034-a8c437c07bdf",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "This hasn't been addressed yet.",
        "createdAt" : "2020-02-25T21:48:30Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "cb45bd8c-929f-44c5-a949-cbc82ad9212a",
        "parentId" : "e9de110e-8f27-4c0b-9034-a8c437c07bdf",
        "authorId" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "body" : "Will address this later",
        "createdAt" : "2020-02-26T16:07:30Z",
        "updatedAt" : "2020-02-26T16:07:30Z",
        "lastEditedBy" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "tags" : [
        ]
      }
    ],
    "commit" : "107a137a902c2e7c6f18dea6ac45b0f79969207c",
    "line" : 393,
    "diffHunk" : "@@ -1,1 +438,442 @@      context_.bwd_primitives.at(i).execute(*context_.bwd_stream,\n                                            context_.net_args.at(i));\n    }\n#else\n    context_.bwd_stream->submit(context_.bwd_primitives);"
  },
  {
    "id" : "8d5a3965-fedc-4326-b657-c2797fad4a45",
    "prId" : 36767,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36767#pullrequestreview-361633498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "227f6452-92f9-474e-8da3-5e42301762b4",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "How is this different from `context_.flags`?",
        "createdAt" : "2020-02-19T00:22:45Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "7b1dea20-9d80-46ba-9e4a-8bdfb1560662",
        "parentId" : "227f6452-92f9-474e-8da3-5e42301762b4",
        "authorId" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "body" : "Changed code to use context_.flags. Removed the redundant code",
        "createdAt" : "2020-02-20T04:58:21Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "tags" : [
        ]
      }
    ],
    "commit" : "107a137a902c2e7c6f18dea6ac45b0f79969207c",
    "line" : 500,
    "diffHunk" : "@@ -1,1 +534,538 @@        bwdParams.training\n            ? BN_FLAGS::use_scale_shift\n            : (BN_FLAGS::use_scale_shift | BN_FLAGS::use_global_stats);\n    auto fwd_desc = batch_normalization_forward::desc(\n        prop_kind::forward_training, src_md, bwdParams.eps, bn_flags);"
  },
  {
    "id" : "6a6bf3b5-5efa-47cf-89b4-ed13bf9f75ab",
    "prId" : 36767,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/36767#pullrequestreview-364599727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cefbde85-6946-48aa-a9bd-bc9259af5b3b",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "What is the meaning of `&& GET_FLAG(use_scale_shift)` though? `&` makes more sense to me than `&&`, but both cases still make adding `GET_FLAG(use_scale_shift)` at the end unnecessary.\r\nCase `&&`: `(content & flag) && flag` = `content & flag && true` (because `flag` is never 0) = `content & flag` .\r\nCase `&`:  `(content & flag) & flag` = `content & flag`.\r\n```suggestion\r\n      if (IS_SET(use_scale_shift)) {\r\n```\r\nSame for lines 242 and 255.",
        "createdAt" : "2020-02-25T21:45:12Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "cffe137d-c3f7-43d8-9638-47a215e34686",
        "parentId" : "cefbde85-6946-48aa-a9bd-bc9259af5b3b",
        "authorId" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "body" : "The team advised me to keep the original code as we are debugging some issues. I will rewrite/cleanup the code in a later PR.",
        "createdAt" : "2020-02-26T01:11:17Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "tags" : [
        ]
      },
      {
        "id" : "6947466e-a85e-4e8e-a868-2ed4e0affc24",
        "parentId" : "cefbde85-6946-48aa-a9bd-bc9259af5b3b",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "I understand. Please keep the original code for now. :)",
        "createdAt" : "2020-02-26T01:13:29Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "f13effeb-15e4-4b55-8502-07e35b508dad",
        "parentId" : "cefbde85-6946-48aa-a9bd-bc9259af5b3b",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Btw, please add a todo in the code so it's easy to keep track.",
        "createdAt" : "2020-02-26T01:15:14Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "c11711a9-e7ef-4a5c-94ce-c80e9731d156",
        "parentId" : "cefbde85-6946-48aa-a9bd-bc9259af5b3b",
        "authorId" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "body" : "Added",
        "createdAt" : "2020-02-26T03:17:37Z",
        "updatedAt" : "2020-02-26T06:40:11Z",
        "lastEditedBy" : "df3cc7a5-fcf9-427c-a296-5dc1caea9913",
        "tags" : [
        ]
      }
    ],
    "commit" : "107a137a902c2e7c6f18dea6ac45b0f79969207c",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +232,236 @@      context_.bn_fwd.reset(new batch_normalization_forward(*context_.fwd_pd));\n#else\n      if ((IS_SET(use_scale_shift)) && GET_FLAG(use_scale_shift)) {\n        context_.bn_fwd.reset(new batch_normalization_forward(\n            *context_.fwd_pd, *context_.src_mem, *context_.weights_mem,"
  },
  {
    "id" : "01285429-098c-4a74-bd5d-1805d7f7639e",
    "prId" : 33444,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/33444#pullrequestreview-303712001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd6a4140-1c05-4927-9a6c-b94430645232",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "There's a mention of NANs in line 839 too. (Clicking this line instead because github doesn't allow me to click line 839.)",
        "createdAt" : "2019-10-18T07:15:11Z",
        "updatedAt" : "2019-10-18T07:37:20Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "cbb283da-f2c2-4c12-ab62-1ef5a9a172fa",
        "parentId" : "fd6a4140-1c05-4927-9a6c-b94430645232",
        "authorId" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "body" : "@penpornk updated, Thanks for correcting me this, thanks.",
        "createdAt" : "2019-10-18T07:39:21Z",
        "updatedAt" : "2019-10-18T07:39:21Z",
        "lastEditedBy" : "d0453c6a-6b64-4afc-a593-32455acfcf5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b16502f6d1c01a6100bc056884a4efbe58178fd8",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +835,839 @@\n    // Changes to support reserved_space_3 parameter in FusedBatchNormV3.\n    // TODO: This parameter functionality is not implemented on CPU.\n    //       It is used to hold intermediate results. So the allocated\n    //       memory is filled with 0."
  },
  {
    "id" : "59129031-83d4-4383-83de-ae02c33c009a",
    "prId" : 19402,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19402#pullrequestreview-144168886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd8cc2af-75b4-4720-aa89-96b74250d19c",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Just curious, why do we have this line? This local variable isn't used anywhere in the function.",
        "createdAt" : "2018-08-07T18:23:39Z",
        "updatedAt" : "2018-08-07T18:25:27Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "53756011-e4f9-4f68-bd63-60d5e11ce094",
        "parentId" : "dd8cc2af-75b4-4720-aa89-96b74250d19c",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Should not be there. See more comment below.",
        "createdAt" : "2018-08-07T18:43:53Z",
        "updatedAt" : "2018-08-07T18:43:53Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      },
      {
        "id" : "f7f4908f-f949-4995-966b-d5178471ac74",
        "parentId" : "dd8cc2af-75b4-4720-aa89-96b74250d19c",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thank you!",
        "createdAt" : "2018-08-07T20:23:22Z",
        "updatedAt" : "2018-08-07T20:23:22Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e2f587b95cda1f67deaa4ae315c7540444919f5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +263,267 @@\n    void MklCreateInputLayout(OpKernelContext* context) {\n      const Tensor& input = MklGetInput(context, 0);\n      bool input_in_mkl_format = mkl_shape_input_shape.IsMklTensor();\n      if (input_in_mkl_format) {"
  },
  {
    "id" : "2c3c3007-0336-416f-98e1-067c777c8679",
    "prId" : 19402,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19402#pullrequestreview-144168860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae4d9ff8-2d46-4824-b2db-c83f1246043e",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "This local variable also isn't used anywhere in this function.",
        "createdAt" : "2018-08-07T18:24:37Z",
        "updatedAt" : "2018-08-07T18:25:27Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "88cc5679-c861-474b-bdd5-3566955cfdf7",
        "parentId" : "ae4d9ff8-2d46-4824-b2db-c83f1246043e",
        "authorId" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "body" : "Good catch!  \r\n\r\nYes, this line of code should be there. And it was in a function with MKL-ML integration which will be removed in the long run since we have MKL-DNN integration.\r\n\r\nI will clean up this code, after all primitive reuse PRs have been done (only Relu one remains). I have a TODO list based on Rasmus's suggestions, which were applied only to individual PRs  (thus\r\nonly on related changed files), and will have a \"clean-up\" PR. \r\n\r\nThanks!",
        "createdAt" : "2018-08-07T18:43:26Z",
        "updatedAt" : "2018-08-07T18:43:26Z",
        "lastEditedBy" : "bd0099d1-d419-490b-9eec-ebb5c3552393",
        "tags" : [
        ]
      },
      {
        "id" : "f976922c-5afd-4c33-bc3d-391582d12891",
        "parentId" : "ae4d9ff8-2d46-4824-b2db-c83f1246043e",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Thanks for your clarification!",
        "createdAt" : "2018-08-07T20:23:17Z",
        "updatedAt" : "2018-08-07T20:23:17Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e2f587b95cda1f67deaa4ae315c7540444919f5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +546,550 @@\n    void MklCreateInputLayout(OpKernelContext* context) {\n      const Tensor& input = MklGetInput(context, 0);\n      bool input_in_mkl_format = mkl_shape_input_shape.IsMklTensor();\n      if (input_in_mkl_format) {"
  },
  {
    "id" : "ee43788a-b16a-40cf-8e38-dc9a4bf53e04",
    "prId" : 16090,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/16090#pullrequestreview-89328015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8c2a12f-b8d5-40a5-883d-4b80a4b6d2f6",
        "parentId" : null,
        "authorId" : "61dfae4c-e1a4-4507-8ef1-b7f48493d1b1",
        "body" : "Just curious, why rename the constants of type `size_t` while keeping Tensors unchanged? In the code guideline, such naming convention is optional for local non-static variables.",
        "createdAt" : "2018-01-14T11:51:07Z",
        "updatedAt" : "2018-01-14T11:51:08Z",
        "lastEditedBy" : "61dfae4c-e1a4-4507-8ef1-b7f48493d1b1",
        "tags" : [
        ]
      },
      {
        "id" : "db72429b-61e3-47a9-a807-c7ecbd9e02fe",
        "parentId" : "b8c2a12f-b8d5-40a5-883d-4b80a4b6d2f6",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "To me this makes sense, as any variable that starts with \"k\" is a constant. And here, they are really constants, their values will never ever change. Almost like macros.\r\nWhen I look at the tensors below, they are constants but their values will be set at runtime.\r\n\r\nSo IMHO this makes the code more readable for me.",
        "createdAt" : "2018-01-17T04:52:08Z",
        "updatedAt" : "2018-01-17T04:52:08Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "0db81ae0dc773d69c6922be351b9ebbec0ad84b5",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +704,708 @@    try {\n      auto cpu_engine = engine(engine::cpu, 0);\n      const size_t kSrcIndex = 0;       // index of src input tensor\n      const size_t kScaleIndex = 1;     // index of scale tensor\n      const size_t kShiftIndex = 2;     // index of shift tensor"
  },
  {
    "id" : "17eaf45a-5ed5-467e-b61c-8d60e2fa28c2",
    "prId" : 8968,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/8968#pullrequestreview-31621858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb67510b-9b25-46d9-93cc-86656c04e7eb",
        "parentId" : null,
        "authorId" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "body" : "How is this tested? Is it possible to reuse the tests here? tensorflow/python/ops/nn_fused_batchnorm_test.py",
        "createdAt" : "2017-04-06T06:02:34Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "6bc97f28-dad4-4ccf-a190-5a69645348d5",
        "tags" : [
        ]
      },
      {
        "id" : "e551cde1-507d-4984-b4b5-3103afc8ed9d",
        "parentId" : "fb67510b-9b25-46d9-93cc-86656c04e7eb",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "Yes, we used the same test for testing our kernel.",
        "createdAt" : "2017-04-07T17:44:31Z",
        "updatedAt" : "2017-04-13T23:37:54Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");"
  }
]