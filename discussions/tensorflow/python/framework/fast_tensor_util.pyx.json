[
  {
    "id" : "27012e21-9e29-4475-9cfa-1c9da59feef9",
    "prId" : 19212,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19212#pullrequestreview-119642583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2737d66e-526a-42bb-ab5a-f41b24673537",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Can you run pyformat on this?",
        "createdAt" : "2018-05-11T16:42:42Z",
        "updatedAt" : "2018-05-13T04:17:10Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "77f0dde6-13a1-433d-be53-c554c06e1490",
        "parentId" : "2737d66e-526a-42bb-ab5a-f41b24673537",
        "authorId" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "body" : "Do you mean to use `def i, n` instead? I think `cdef` should be more efficient. \r\nBy the way, in the file, all `AppendXXXXArrayToTensorProto` methods use `cdef` with `append` route, which might be designed on purpose.",
        "createdAt" : "2018-05-13T04:27:33Z",
        "updatedAt" : "2018-05-13T04:27:33Z",
        "lastEditedBy" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c4e88e18a9fdc694c07794f94f4f87e2cd5cb95",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +14,18 @@    # TODO: Use np.float16_t when cython supports it.\n    tensor_proto, np.ndarray[np.uint16_t, ndim=1] nparray):\n  cdef long i, n\n  n = nparray.size\n  for i in range(n):"
  },
  {
    "id" : "9da7a73b-ad64-4af7-8366-d17b574d65c8",
    "prId" : 19212,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/19212#pullrequestreview-119946921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "911c5f4e-5e35-49a5-8d9c-dc5ef89b8bc0",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Instead of calling .append in a loop, try using the .extend method on tensor_proto.half_val, which can append an entire list with one call.",
        "createdAt" : "2018-05-11T16:45:04Z",
        "updatedAt" : "2018-05-13T04:17:10Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "5ab39542-0ddd-420e-a97c-fa05096d7e78",
        "parentId" : "911c5f4e-5e35-49a5-8d9c-dc5ef89b8bc0",
        "authorId" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "body" : "I compare the performance, and find that `append` is better than `extend`. (Also note that float32 became slow, I run the same test on the same working machine):\r\n\r\n\r\n```bash\r\noriginal:\r\nfloat32: 0.4189 sec\r\nfloat16: 13.7551 sec\r\n\r\n\r\nappend:\r\n1st experiment:\r\nfloat32: 0.4094 sec\r\nfloat16: 1.5520 sec\r\n\r\n2nd experiment:\r\nfloat32: 0.4123 sec\r\nfloat16: 1.5605 sec\r\n\r\n\r\nextend:\r\n1st experiment:\r\nfloat32: 0.4117 sec\r\nfloat16: 1.8706 sec\r\n\r\n2nd experiment:\r\nfloat32: 0.4648 sec\r\nfloat16: 1.9272 sec\r\n```",
        "createdAt" : "2018-05-13T04:14:19Z",
        "updatedAt" : "2018-05-13T04:17:10Z",
        "lastEditedBy" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "tags" : [
        ]
      },
      {
        "id" : "216da488-19ab-47be-875e-20884495c696",
        "parentId" : "911c5f4e-5e35-49a5-8d9c-dc5ef89b8bc0",
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Thanks for testing.",
        "createdAt" : "2018-05-14T18:07:04Z",
        "updatedAt" : "2018-05-14T18:07:08Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c4e88e18a9fdc694c07794f94f4f87e2cd5cb95",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +17,21 @@  n = nparray.size\n  for i in range(n):\n    tensor_proto.half_val.append(nparray[i])\n\n"
  }
]