[
  {
    "id" : "16c8e261-fd1b-4fa5-8fde-940b5f289318",
    "prId" : 46283,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46283#pullrequestreview-573756414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "573cd607-bd93-4a02-9c25-9fe55e54218c",
        "parentId" : null,
        "authorId" : "ca6b829a-1c41-48a7-bff7-3eb6436e486b",
        "body" : "This is a good example of a place that prevents Keras from supporting CompositeTensor losses in general right now (regardless of what behavior that loss should have)\r\n\r\nRather than hard-coding `RaggedTensor` here could you try using `composite_tensor.CompositeTensor`? That'll increase the chance that this will generalize to other extension types beyond just RaggedTensors.",
        "createdAt" : "2021-01-21T21:37:08Z",
        "updatedAt" : "2021-02-01T17:32:41Z",
        "lastEditedBy" : "ca6b829a-1c41-48a7-bff7-3eb6436e486b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc4d383b5c3259380d8c9a2425f2077567b49842",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +300,304 @@    ops.get_default_graph()._last_loss_reduction = reduction  # pylint: disable=protected-access\n\n    if not isinstance(\n        losses, (keras_tensor.KerasTensor, ragged_tensor.RaggedTensor)):\n      losses = ops.convert_to_tensor_v2_with_dispatch(losses)"
  }
]