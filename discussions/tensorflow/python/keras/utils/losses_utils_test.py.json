[
  {
    "id" : "8003260a-0e14-4ff0-bcb3-f68c38e8b76e",
    "prId" : 45060,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/45060#pullrequestreview-564169130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "808e3142-545f-4d0b-8cce-78ad007eca5f",
        "parentId" : null,
        "authorId" : "25d9ca1a-eec3-4905-a140-d1d6a3a2fde2",
        "body" : "`x.shape` and `y_p.shape` will both be `None` here, so this will be trivially true.  It would be good to check that the shapes when you actually feed values into the graph are the same as well.  You could create a session and then feed in values for the placeholders, and check that the resulting numpy arrays have equal shapes.  Or alternatively, you could do something like:\r\n\r\n```\r\n      x = array_ops.placeholder_with_default([1., 2., 3.], shape=None)\r\n      y = array_ops.placeholder_with_default([[1.], [2.], [3.]], shape=None)\r\n      _, y_p = losses_utils.remove_squeezable_dimensions(x, y)\r\n      self.assertAllEqual(array_ops.shape(x), array_ops.shape(y_p))\r\n```",
        "createdAt" : "2021-01-07T14:36:31Z",
        "updatedAt" : "2021-01-22T09:53:48Z",
        "lastEditedBy" : "25d9ca1a-eec3-4905-a140-d1d6a3a2fde2",
        "tags" : [
        ]
      },
      {
        "id" : "b8e6b48c-897e-465e-9f50-ee51229fa41f",
        "parentId" : "808e3142-545f-4d0b-8cce-78ad007eca5f",
        "authorId" : "912db51f-98cd-469d-a200-317a3c2ea970",
        "body" : "Done.",
        "createdAt" : "2021-01-08T10:50:23Z",
        "updatedAt" : "2021-01-22T09:53:49Z",
        "lastEditedBy" : "912db51f-98cd-469d-a200-317a3c2ea970",
        "tags" : [
        ]
      }
    ],
    "commit" : "84f9b523f6cf3cc9544951268761a9840ac59f00",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@      y = array_ops.placeholder_with_default([[1.], [2.], [3.]], shape=None)\n      _, y_p = losses_utils.remove_squeezable_dimensions(x, y)\n      y_p.shape.assert_is_compatible_with(x.shape)\n      self.assertAllEqual(array_ops.shape(x), array_ops.shape(y_p))\n      x_p, _ = losses_utils.remove_squeezable_dimensions(y, x)"
  }
]