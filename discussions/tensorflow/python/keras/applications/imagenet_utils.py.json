[
  {
    "id" : "b9f7b889-a430-430f-84dc-9c22bff06a7c",
    "prId" : 37438,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37438#pullrequestreview-371362361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9c090cb-dbcf-4938-a42f-2d838914501c",
        "parentId" : null,
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "+ space",
        "createdAt" : "2020-03-09T17:01:40Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa37eea584f6364c5e1bb97c40db53d529aa7e36",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +106,110 @@  if mode not in {'caffe', 'tf', 'torch'}:\n    raise ValueError('Unknown mode ' + str(mode))\n\n  if data_format is None:\n    data_format = backend.image_data_format()"
  },
  {
    "id" : "762b15a9-5003-404e-9851-91bfdd28b27e",
    "prId" : 37438,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37438#pullrequestreview-371395165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4377559c-940e-48c9-b900-1276ad15424a",
        "parentId" : null,
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Why do you want to change this to a dict?",
        "createdAt" : "2020-03-09T17:04:21Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      },
      {
        "id" : "2a915250-5cce-4bb0-8aab-f9c54527b7cd",
        "parentId" : "4377559c-940e-48c9-b900-1276ad15424a",
        "authorId" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "body" : "AFAIK, the `in` operator works faster on sets (not dict) than lists. I can write a `timeit` test if you want, but this is already discussed in many places such as this [stackoverflow post](https://stackoverflow.com/questions/2831212/python-sets-vs-lists). Honestly, because the list is so short, the performance boost would be small, but I figured it wouldn't hurt to make this edit. Thanks!",
        "createdAt" : "2020-03-09T17:37:00Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "tags" : [
        ]
      },
      {
        "id" : "b3dc6052-5a61-404b-b21b-2adcd2ae7bbc",
        "parentId" : "4377559c-940e-48c9-b900-1276ad15424a",
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Thanks for the note! We don't need tests for this.",
        "createdAt" : "2020-03-09T17:43:20Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa37eea584f6364c5e1bb97c40db53d529aa7e36",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +423,427 @@\n  classifier_activation = activations.get(classifier_activation)\n  if classifier_activation not in {\n      activations.get('softmax'),\n      activations.get(None)"
  },
  {
    "id" : "5c284103-902a-4d18-b961-ce2067ec2f89",
    "prId" : 37438,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37438#pullrequestreview-372181535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "parentId" : null,
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Can you add a test for this?",
        "createdAt" : "2020-03-09T17:04:46Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      },
      {
        "id" : "eca32195-0899-487a-b611-59c64291c834",
        "parentId" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "authorId" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "body" : "Can you give me a little guidance as to what kind of test I should be writing? I'm new to contributing, a little pointer would help me a lot. Thank you!",
        "createdAt" : "2020-03-09T18:06:24Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "tags" : [
        ]
      },
      {
        "id" : "d4100277-a064-4a34-bdca-6a3e0ccedde0",
        "parentId" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Please take a look at https://github.com/tensorflow/tensorflow/blob/aa070f5be6bfc55c25802540da149138696f965f/tensorflow/python/keras/applications/imagenet_utils_test.py#L29\r\n\r\nWe can add a simple test case for invalid mode here.",
        "createdAt" : "2020-03-09T18:09:38Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      },
      {
        "id" : "d62ebd8c-9c0c-497d-80de-e60c8f830cfc",
        "parentId" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "authorId" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "body" : "@pavithrasv Thank you for the heads up. Before I make a new PR for imagenet_utils_test.py, is this similar to what you had in mind?\r\n```python\r\nwith self.assertRaises(ValueError):\r\n    utils.preprocess_input(x, mode='some_unknown_mode')\r\n```",
        "createdAt" : "2020-03-09T18:34:02Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "f545a132-b3ed-4ff1-a2b7-139488ededb1",
        "tags" : [
        ]
      },
      {
        "id" : "04a068b3-5c78-4b1e-a363-a7e4035befa8",
        "parentId" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Yes",
        "createdAt" : "2020-03-10T17:42:13Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      },
      {
        "id" : "87ef7e91-7d55-4db0-8e6e-18ed88c978cb",
        "parentId" : "4535fac3-c470-40d4-a6e3-213c8835b526",
        "authorId" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "body" : "Yes.",
        "createdAt" : "2020-03-10T17:43:24Z",
        "updatedAt" : "2020-05-27T13:12:24Z",
        "lastEditedBy" : "3adc4f6e-8b58-4d7a-bd46-6c24e7f6ade0",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa37eea584f6364c5e1bb97c40db53d529aa7e36",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +105,109 @@  \"\"\"Preprocesses a tensor or Numpy array encoding a batch of images.\"\"\"\n  if mode not in {'caffe', 'tf', 'torch'}:\n    raise ValueError('Unknown mode ' + str(mode))\n\n  if data_format is None:"
  }
]