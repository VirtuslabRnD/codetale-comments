[
  {
    "id" : "cb90fb43-e878-4c4d-b349-6d5ef1df200e",
    "prId" : 40093,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/40093#pullrequestreview-424520821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0832ea34-37bc-4bb6-bf2f-b977b1ccbf97",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Is this an accidental revert of a previous change?",
        "createdAt" : "2020-06-04T14:16:52Z",
        "updatedAt" : "2020-06-04T14:17:01Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      },
      {
        "id" : "0487d158-d6c6-4aca-b3f1-0a702d7d7c51",
        "parentId" : "0832ea34-37bc-4bb6-bf2f-b977b1ccbf97",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "that is intentional, as that fix does not seem to work 100% of time.  We are working on debugging it, but in the meantime wanted to remove the previous fix, and put a no_rocm tag on that test instead",
        "createdAt" : "2020-06-04T14:40:36Z",
        "updatedAt" : "2020-06-04T14:40:36Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "b68ee7ad8a2ef79da62faaad6b2291337da171a3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +76,80 @@    tf.config.experimental.set_virtual_device_configuration(\n        gpus[0],\n        [tf.config.experimental.VirtualDeviceConfiguration(memory_limit=1024)])\n    return True\n  return False"
  },
  {
    "id" : "3f731f95-dd30-43b9-97ee-6d93d870436d",
    "prId" : 39042,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/39042#pullrequestreview-407808287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "160bf172-08ef-49eb-9070-dc01ac7898b4",
        "parentId" : null,
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "I am scared of tests that check for actual OOMs as they are sensitive to things like what specific device it's run on, etc.\r\n\r\nI see two options here:\r\n 1. use a virtual GPU device with fixed limited memory\r\n 2. (my preferred alternative) use side effects to detect whether things are recomputed. For example if the forward pass does variable.assign_add(1) we can count how many times it ran",
        "createdAt" : "2020-05-07T15:17:59Z",
        "updatedAt" : "2020-05-20T22:59:30Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      },
      {
        "id" : "35215c59-4c7c-46eb-8e02-3c5ef89e23df",
        "parentId" : "160bf172-08ef-49eb-9070-dc01ac7898b4",
        "authorId" : "4d44e2f5-e1e2-473e-9b67-ac8e4667f6c2",
        "body" : "I am using a virtual GPU if you look at line 76 inside the _limit_gpu_memory() function. Maybe I should bazel tag these tests to run only on a virtual GPU? I actually like the OOM test since it demonstrates and confirms that the grad checkpointing is functional. Otherwise it might remain silent and broken like it has been in TF 2.x all along. But happy to roll it back and add your preferred option 2 if you feel this is risky. ",
        "createdAt" : "2020-05-07T19:05:49Z",
        "updatedAt" : "2020-05-20T22:59:30Z",
        "lastEditedBy" : "4d44e2f5-e1e2-473e-9b67-ac8e4667f6c2",
        "tags" : [
        ]
      },
      {
        "id" : "75ca89f8-5126-45d5-9f15-affae33158e4",
        "parentId" : "160bf172-08ef-49eb-9070-dc01ac7898b4",
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "Ah I missed it. This is good then. Thanks!",
        "createdAt" : "2020-05-07T20:23:13Z",
        "updatedAt" : "2020-05-20T22:59:30Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f2bc445e2dbb0b4dd9870fcaa5a4036a55af336",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@      _train_no_recompute(1)\n    self.assertTrue(\n        context.exception.__class__.__name__ == 'ResourceExhaustedError')\n\n  def test_does_not_raise_oom_exception(self):"
  }
]