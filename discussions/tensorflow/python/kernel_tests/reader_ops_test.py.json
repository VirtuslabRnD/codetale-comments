[
  {
    "id" : "aeb0a79e-ab9b-4334-8658-4bcb4a9b8c21",
    "prId" : 9950,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/9950#pullrequestreview-60569789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fba4315-94c5-4ccc-ad56-3df4c8f51c4c",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Can you add a test with multiple epochs, i.e. where enqueue is called multiple times, e.g. as in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/reader_ops_test.py#L258 ?",
        "createdAt" : "2017-05-17T16:58:38Z",
        "updatedAt" : "2017-05-31T21:25:11Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "3c3ff3dd-3c21-481b-86f5-a7851e6e130e",
        "parentId" : "0fba4315-94c5-4ccc-ad56-3df4c8f51c4c",
        "authorId" : "dedd0a06-270a-4b24-981a-a4f9101a00e9",
        "body" : "When opening a database file, LMDB creates a lock file `lock.mdb` in the same folder to prevent that database being opened more than once. This unfortunately prevents us to enqueue the database file multiple times.",
        "createdAt" : "2017-05-17T23:33:11Z",
        "updatedAt" : "2017-05-31T21:25:11Z",
        "lastEditedBy" : "dedd0a06-270a-4b24-981a-a4f9101a00e9",
        "tags" : [
        ]
      },
      {
        "id" : "f9bdb1e0-efd5-476e-988d-68cea69943db",
        "parentId" : "0fba4315-94c5-4ccc-ad56-3df4c8f51c4c",
        "authorId" : "2d7bda17-ed54-4a80-ad2d-b7ba6183dda0",
        "body" : "If we cannot enqueue the database file multiple times, how we can read data over one epoch using LMDB in tensorflow?",
        "createdAt" : "2017-09-05T11:37:37Z",
        "updatedAt" : "2017-09-05T11:37:37Z",
        "lastEditedBy" : "2d7bda17-ed54-4a80-ad2d-b7ba6183dda0",
        "tags" : [
        ]
      }
    ],
    "commit" : "18bcada8638dfc246b42a7e7845172c3ee7a7d48",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +900,904 @@                                    \"\\\\(requested 1, current size 0\\\\)\"):\n        k, v = sess.run([key, value])\n\n\nif __name__ == \"__main__\":"
  },
  {
    "id" : "3bb8a032-5a12-4550-be0c-d990d67f04eb",
    "prId" : 3783,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5ebfae4-91c0-4497-8667-a912dae6d0fe",
        "parentId" : null,
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "if this doesn't work, another module to look into is the tf.compat, which has a lot of functions used to deal with python2 vs. python3 compatibility.  Since this is a test, it's not a big deal, but might make things easier.\n",
        "createdAt" : "2016-08-14T23:39:15Z",
        "updatedAt" : "2016-08-15T20:29:42Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9f7db6cefb09ad05ad6d31286c8902b534b44c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +463,467 @@\n    writer = tf.python_io.TFRecordWriter(fn, options=None)\n    writer.write(b\"small record\")\n    writer.close()\n    del writer"
  }
]