[
  {
    "id" : "62ceb6eb-9745-4498-99e8-fc24dff6cc42",
    "prId" : 14390,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/14390#pullrequestreview-75927586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7786aed0-e175-4300-bd93-d64caad66125",
        "parentId" : null,
        "authorId" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "body" : "I think the `original_name_scope` is reasonable (but counterintuitive?) behavior. We almost never create `variable_scope` like this case. I'm afraid that user may misuse the argument and get lost in name scope.",
        "createdAt" : "2017-11-11T09:00:05Z",
        "updatedAt" : "2017-11-18T06:36:30Z",
        "lastEditedBy" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "tags" : [
        ]
      },
      {
        "id" : "8bc4359b-def9-49a2-99fb-c0ef973ecdeb",
        "parentId" : "7786aed0-e175-4300-bd93-d64caad66125",
        "authorId" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "body" : "Perhaps it's better to restrict `auxiliary_name_scope` for reentering case.  Namely, `auxiliary_name_scope` only takes effect when VariableScope is passed. ",
        "createdAt" : "2017-11-11T09:13:27Z",
        "updatedAt" : "2017-11-18T06:36:30Z",
        "lastEditedBy" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2362901e9f63caa23e9390faf424855430d67c9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +749,753 @@      with variable_scope.variable_scope(\"scope\",\n                                         auxiliary_name_scope=False) as scope:\n        self.assertEqual(scope.original_name_scope, \"\")\n        self.assertEqual(variable_scope.get_variable(\"w\", []).name, \"scope/w:0\")\n        self.assertEqual(constant_op.constant([], name=\"c\").name, \"c:0\")"
  },
  {
    "id" : "766e926e-12d0-472f-8735-9405666fe98e",
    "prId" : 7977,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/7977#pullrequestreview-24922174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f9edd86-b4c2-46ee-abd5-a4b7c8896ee2",
        "parentId" : null,
        "authorId" : "d73554f3-2bf7-40ff-aaa3-bf5fc17bcf26",
        "body" : "Please first add a variable (say \"a\"), then make a scope(\"foo\") as scope, add \"b\" and non-trainable \"c\", and get trainable variables from scope and check that it's only b.",
        "createdAt" : "2017-03-03T08:16:46Z",
        "updatedAt" : "2017-03-03T08:43:31Z",
        "lastEditedBy" : "d73554f3-2bf7-40ff-aaa3-bf5fc17bcf26",
        "tags" : [
        ]
      }
    ],
    "commit" : "08e621e64575772855d1a65985d219a0583d4c85",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +760,764 @@  def testGetTrainableVariables(self):\n    with self.test_session():\n      a = variable_scope.get_variable(\"a\", [])\n      with variable_scope.variable_scope(\"foo\") as scope:\n        b = variable_scope.get_variable(\"b\", [])"
  },
  {
    "id" : "487d1639-2724-4b89-8cfe-35d86fe7a899",
    "prId" : 4826,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4826#pullrequestreview-4993886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dfd376d-6e80-43b5-a197-57f5d66c44de",
        "parentId" : null,
        "authorId" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "body" : "Replace private function `_get_variable_list()` with `list()`\n",
        "createdAt" : "2016-10-20T02:07:45Z",
        "updatedAt" : "2016-12-01T14:37:54Z",
        "lastEditedBy" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "41d85ee1f58332c076ffc0e8b28d8015de9f4a23",
    "line" : null,
    "diffHunk" : "@@ -1,1 +707,711 @@        val_x = sess.run(list(x))\n        val_y = sess.run(list(y))\n\n        self.assertAllEqual(val_x, val_y)\n"
  },
  {
    "id" : "043b4826-91e3-4f66-a2e8-139a1abc6e9e",
    "prId" : 4826,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4826#pullrequestreview-4993886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "318bdc91-90fa-4ff1-9649-23038c1fc279",
        "parentId" : null,
        "authorId" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "body" : "Set string format as `'x%d' % i` \n",
        "createdAt" : "2016-10-20T02:08:57Z",
        "updatedAt" : "2016-12-01T14:37:54Z",
        "lastEditedBy" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "41d85ee1f58332c076ffc0e8b28d8015de9f4a23",
    "line" : null,
    "diffHunk" : "@@ -1,1 +699,703 @@        x = tf.get_variable(name='x%d' % i, shape=(3, 4), dtype=dtype,\n            partitioner=axis0_into2_partitioner)\n        y = tf.get_variable(name='y%d' % i, dtype=dtype, \n            partitioner=axis0_into2_partitioner,\n            initializer=init_ops.zeros_initializer(shape=(6, 4), dtype=dtype))"
  },
  {
    "id" : "26353401-699b-4e2d-9227-2ac40e61ef00",
    "prId" : 4826,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4826#pullrequestreview-5359581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6d1f88a-523d-427a-8866-6c4767526cbe",
        "parentId" : null,
        "authorId" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "body" : "Fix capital here and eleswhere.\n",
        "createdAt" : "2016-10-23T03:08:51Z",
        "updatedAt" : "2016-12-01T14:37:54Z",
        "lastEditedBy" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "41d85ee1f58332c076ffc0e8b28d8015de9f4a23",
    "line" : null,
    "diffHunk" : "@@ -1,1 +100,104 @@    with self.test_session() as sess:\n      # Test various dtypes with zeros initializer as following:\n      types = [tf.int8, tf.uint8, tf.int16, tf.uint16, tf.int32, tf.int64, \n              tf.bool]\n"
  },
  {
    "id" : "6ff74aa7-03c1-409a-a34d-c2f7512a9275",
    "prId" : 4826,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/4826#pullrequestreview-6288214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f8187c6-5b33-4772-8cc9-3e2f43abf070",
        "parentId" : null,
        "authorId" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "body" : "fixed typesetting here and elsewhere\n",
        "createdAt" : "2016-10-28T17:47:34Z",
        "updatedAt" : "2016-12-01T14:37:54Z",
        "lastEditedBy" : "8a0c7fb9-7e9e-4fb9-912b-3dda65aff0ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "41d85ee1f58332c076ffc0e8b28d8015de9f4a23",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +105,109 @@      # Use different varibale_name to distinguish various dtypes\n      for (i, dtype) in enumerate(types):\n        x = tf.get_variable(name='x%d' % i, shape=(3, 4), dtype=dtype)\n        y = tf.get_variable(name='y%d' % i, dtype=dtype, \n            initializer=init_ops.zeros_initializer(shape=(3, 4), dtype=dtype))"
  }
]