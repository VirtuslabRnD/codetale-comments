[
  {
    "id" : "7a45f7f2-96c5-4aa0-af0b-2c26c406192d",
    "prId" : 47015,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/47015#pullrequestreview-586458104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7a0ea1f-2505-4958-8aec-24e3ca662106",
        "parentId" : null,
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "You are introducing duplicate code between `run_benchmark` and `run_op_benchmark`. Instead, factor out the common functionality into helper functions (e.g. a function that runs the eager mode benchmark and a function that runs the graph mode benchmark). Makes sense?",
        "createdAt" : "2021-02-08T21:21:11Z",
        "updatedAt" : "2021-02-09T19:22:56Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "d17b9948-f784-4788-9b3d-4edf7ae8616a",
        "parentId" : "d7a0ea1f-2505-4958-8aec-24e3ca662106",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "Yes, it makes sense. I have made an attempt to refactor the common code into `_run_graph_benchmark` and `_run_eager_benchmark` in `benchmark_base.py` as there is a need for benchmarking `tf.data.Datasets` as well as few `ops` such as `map_defun` from `tensorflow.python.data.experimental.ops.map_defun`. \r\n\r\nReference: `MapDefunBenchmark` from `tensorflow/python/data/experimental/benchmarks/map_defun_benchmark.py`\r\n\r\nPlease check and let me know. Thanks!",
        "createdAt" : "2021-02-09T11:41:13Z",
        "updatedAt" : "2021-02-09T19:22:56Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      },
      {
        "id" : "c140e1dd-6e95-4d13-b37b-38aae571abca",
        "parentId" : "d7a0ea1f-2505-4958-8aec-24e3ca662106",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "updated the PR description as well.",
        "createdAt" : "2021-02-09T11:45:23Z",
        "updatedAt" : "2021-02-09T19:22:56Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a3d5de03e3b98765177a154de0f52cabf9b8fa6",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +134,138 @@    \"\"\"\n\n    if context.executing_eagerly():\n      return self._run_eager_benchmark(\n          iterable=op,"
  },
  {
    "id" : "76ad8e77-fc39-443d-b32e-8187dbab3390",
    "prId" : 46761,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46761#pullrequestreview-579566631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dff8f71-1608-4e10-88aa-3b1ad6f3ee5d",
        "parentId" : null,
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "It would be great if you add a docstring for this method that documents the behavior (including the new behavior of returning the wall time).",
        "createdAt" : "2021-01-29T05:13:51Z",
        "updatedAt" : "2021-01-30T06:11:41Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "d1884546-2eb5-47d2-9689-baa61b45aae3",
        "parentId" : "2dff8f71-1608-4e10-88aa-3b1ad6f3ee5d",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "addressed in the commit.",
        "createdAt" : "2021-01-29T19:43:35Z",
        "updatedAt" : "2021-01-30T06:11:41Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "dae2088a7c65c51d681506f326bbdd3cdddd65ae",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +134,138 @@      to go through `num_elements` elements, divided by `num_elements.`\n    \"\"\"\n    wall_time = self.run_benchmark(\n        dataset=dataset, num_elements=num_elements, iters=iters, warmup=warmup,\n        apply_default_optimizations=apply_default_optimizations"
  },
  {
    "id" : "3da7ebea-52c2-4c0e-96eb-047ba43b540e",
    "prId" : 46320,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46320#pullrequestreview-574055290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46571852-a842-4a8a-9706-1aa248ed00d1",
        "parentId" : null,
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "lines 78-82 should be moved here",
        "createdAt" : "2021-01-22T00:31:45Z",
        "updatedAt" : "2021-01-22T21:37:12Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "d556aa77-d0cb-42d3-970a-82f0cee5cffc",
        "parentId" : "46571852-a842-4a8a-9706-1aa248ed00d1",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "addressed in the commit.",
        "createdAt" : "2021-01-22T08:48:05Z",
        "updatedAt" : "2021-01-22T21:37:12Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc57176521d3b37781223d64a9e542cae3392d39",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +64,68 @@        apply_default_optimizations)\n    dataset = dataset.with_options(options)\n\n    # NOTE: We use `dataset.skip()` to perform the iterations in C++, avoiding\n    # the overhead of having to execute a TensorFlow op for each step of the input"
  },
  {
    "id" : "b44a9b32-b526-4a77-b349-b57552eac2cf",
    "prId" : 46320,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46320#pullrequestreview-574522965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df1d11db-cff7-4265-ace9-7a6ebd4d8fe8",
        "parentId" : null,
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : " @jsimsa  Is the nest.flatten() transformation necessary? I have not added this in the eager case.",
        "createdAt" : "2021-01-22T08:59:50Z",
        "updatedAt" : "2021-01-22T21:37:12Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      },
      {
        "id" : "4382b82d-48c1-4992-88cf-8fd6334c870a",
        "parentId" : "df1d11db-cff7-4265-ace9-7a6ebd4d8fe8",
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "I am not sure. You should try executing one of the benchmarks both in eager mode and graph mode to see whether the benchmark runs successfully (and add its output the description of the PR).\r\n\r\nYou should be able to run an individual benchmark using:\r\n\r\n```\r\nbazel run -c opt //third_party/tensorflow/python/data/benchmarks:range_benchmark -- --benchmarks=all\r\n```\r\n\r\nYou can control the execution mode of the benchmark through the TF2_BEHAVIOR environment variable. When this variable is set, the default execution mode will be eager and when unset, the mode will be graph.\r\n\r\nPS: I have only tried this using the internal version of TF so the above instructions might not work. If that's the case, let me know what issues you encounter.",
        "createdAt" : "2021-01-22T17:30:25Z",
        "updatedAt" : "2021-01-22T21:37:12Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "14ecff90-14b4-4033-ad6c-c8e2ebd8ae57",
        "parentId" : "df1d11db-cff7-4265-ace9-7a6ebd4d8fe8",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "@jsimsa setting/unsetting the `TF2_BEHAVIOR` env var didn't make a difference. I had to change the .bazelrc file and modify the config from:\r\n```\r\nbuild --config=v2\r\ntest --config=v2\r\n```\r\nto:\r\n```\r\nbuild --config=v1\r\ntest --config=v1\r\n```\r\nThen it picked up the config saying:\r\n```\r\nFound applicable config definition build:v1 in file /home/vikoth18/tensorflow/.bazelrc: --define=tf_api_version=1 --action_env=TF2_BEHAVIOR=0\r\n```\r\nIf there is an alternative or a better approach please let me know. I am currently running the benchmarks and will post the outputs soon.",
        "createdAt" : "2021-01-22T18:41:35Z",
        "updatedAt" : "2021-01-22T21:37:12Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc57176521d3b37781223d64a9e542cae3392d39",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +88,92 @@    iterator = dataset_ops.make_initializable_iterator(dataset)\n    next_element = iterator.get_next()\n    next_element = nest.flatten(next_element)[0]\n\n    deltas = []"
  }
]