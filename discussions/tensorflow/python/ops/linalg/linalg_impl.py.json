[
  {
    "id" : "de7ab173-4a8f-4adb-b763-70e0d9248157",
    "prId" : 35530,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35530#pullrequestreview-337862696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dae8f3c-25a1-44c3-a950-418e93ba81b5",
        "parentId" : null,
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "I think expand_dims will read a little better than newaxis here, but up to you.",
        "createdAt" : "2020-01-02T16:53:49Z",
        "updatedAt" : "2020-01-02T16:53:53Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      },
      {
        "id" : "b3b457eb-0e1c-4733-9ad1-37be986420b9",
        "parentId" : "2dae8f3c-25a1-44c3-a950-418e93ba81b5",
        "authorId" : "165d83bf-084b-4847-a57f-fba5781db781",
        "body" : "Unless I'm missing a nicer way to do it, I think newaxis is a little cleaner (because multiple expan_dims would be necessary). With expand_dims I think it would be:\r\n```\r\nl1_norm = array_ops.expand_dims(array_ops.expand_dims(math_ops.reduce_max(\r\n        math_ops.reduce_sum(\r\n            math_ops.abs(matrix),\r\n            axis=array_ops.size(array_ops.shape(matrix)) - 2),\r\n        axis=-1), -1), -1)\r\n```\r\nI suppose there'd also be:\r\n```\r\nl1_norm_flat = ...\r\nl1_norm = array_ops.expand_dims(array_ops.expand_dims(l1_norm_flat, -1), -1)\r\n```\r\n\r\nTo me both of those are a bit less intuitive than using newaxis, although that might just be because I'm more familiar with newaxis.",
        "createdAt" : "2020-01-02T21:17:04Z",
        "updatedAt" : "2020-01-02T21:17:05Z",
        "lastEditedBy" : "165d83bf-084b-4847-a57f-fba5781db781",
        "tags" : [
        ]
      }
    ],
    "commit" : "66fbe49c0747fb4fa626e127d34b9baf73fa287b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +277,281 @@            math_ops.abs(matrix),\n            axis=array_ops.size(array_ops.shape(matrix)) - 2),\n        axis=-1)[..., array_ops.newaxis, array_ops.newaxis]\n    const = lambda x: constant_op.constant(x, l1_norm.dtype)\n"
  }
]