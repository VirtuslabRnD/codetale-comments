[
  {
    "id" : "87ca3d70-cb36-4d5f-b02a-6c8d02e5ebc6",
    "prId" : 32893,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32893#pullrequestreview-295161174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59a3a5b7-85e6-4633-8ac8-40f23abf2242",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "This is `keepdims` in `master`, thank you for fixing the documentation to have this correct.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/8569d12747c13ac16e864db1482b6754904371c8/tensorflow/python/ops/nn_impl.py#L1241",
        "createdAt" : "2019-09-30T18:18:12Z",
        "updatedAt" : "2019-10-01T16:53:43Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a8c1668af192fc72f1e6a7f517c10a29b97f3a8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1395,1399 @@      others which are being normalized over.\n      `mean` and `variance` in this case would typically be the outputs of\n      `tf.nn.moments(..., keepdims=True)` during training, or running averages\n      thereof during inference.\n    * In the common case where the 'depth' dimension is the last dimension in"
  },
  {
    "id" : "dcb708e4-b2f1-4f55-a79f-1c24da424937",
    "prId" : 6031,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/6031#pullrequestreview-11212606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8da0fe73-054a-4139-8882-446935f08163",
        "parentId" : null,
        "authorId" : "5f311952-9020-4294-a943-21cbd17dde41",
        "body" : "Not sure if it would help with the original issue, but it might also be worth making L466 more permissive. e.g. Instead of:\r\n\r\n```\r\nif x_shape.is_fully_defined():\r\n```\r\n\r\n...we could instead have:\r\n\r\n```\r\nif all(x_shape[d].value is not None for d in axes):\r\n```",
        "createdAt" : "2016-12-02T18:10:46Z",
        "updatedAt" : "2016-12-02T18:20:53Z",
        "lastEditedBy" : "5f311952-9020-4294-a943-21cbd17dde41",
        "tags" : [
        ]
      },
      {
        "id" : "5e9facce-d2c8-41d9-b76c-f6efbb14a6b5",
        "parentId" : "8da0fe73-054a-4139-8882-446935f08163",
        "authorId" : "af0fdc99-b5ef-42c4-aba6-2a8cce7bd40c",
        "body" : "Seems like a no brainer. Done",
        "createdAt" : "2016-12-02T18:21:09Z",
        "updatedAt" : "2016-12-02T18:21:09Z",
        "lastEditedBy" : "af0fdc99-b5ef-42c4-aba6-2a8cce7bd40c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5b8d6c4694e4cd3e3cc4a162053ab0dfa6e174f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +469,473 @@        counts *= x_shape[d].value\n      counts = constant_op.constant(counts, dtype=x.dtype)\n    else:  # shape needs to be inferred at runtime.\n      x_dims = array_ops.gather(\n          math_ops.cast(array_ops.shape(x), x.dtype), axes)"
  }
]