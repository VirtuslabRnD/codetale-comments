[
  {
    "id" : "f885a34a-bf54-4d66-896a-42542f50e73a",
    "prId" : 35481,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35481#pullrequestreview-338204473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abd4ee37-dfa7-49bc-9242-9f8c4c2af073",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "Add an empty line after `Usage Example:` to make the doctest show properly on the documentation website.",
        "createdAt" : "2020-01-03T17:56:22Z",
        "updatedAt" : "2020-01-03T18:16:34Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "985c63f3-a557-457a-8cd9-3e88e62133f1",
        "parentId" : "abd4ee37-dfa7-49bc-9242-9f8c4c2af073",
        "authorId" : "874c1160-ae4c-4d2e-b480-380c7da7ae59",
        "body" : "I noticed the test fails after the first empty line in the doctest output. Does adding `<BLANKLINE>` in the empty lines fix that? \r\n```python\r\n  <tf.Tensor: shape=(1, 3, 3, 3), dtype=float32, numpy=\r\n  array([[[[1., 0., 0.],\r\n          [1., 0., 0.],\r\n          [1., 0., 0.]],\r\n\r\n          [[1., 0., 0.],\r\n          [0., 0., 0.],\r\n          [1., 0., 0.]],\r\n\r\n          [[1., 0., 0.],\r\n          [1., 0., 0.],\r\n          [1., 0., 0.]]]], dtype=float32)>\r\n```",
        "createdAt" : "2020-01-03T18:04:52Z",
        "updatedAt" : "2020-01-03T18:16:34Z",
        "lastEditedBy" : "874c1160-ae4c-4d2e-b480-380c7da7ae59",
        "tags" : [
        ]
      },
      {
        "id" : "4e936934-2d4a-44a4-b07d-2832def24d48",
        "parentId" : "abd4ee37-dfa7-49bc-9242-9f8c4c2af073",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "I think you don't need the empty lines in the output. At least I know that removing the empty lines fixed other PRs",
        "createdAt" : "2020-01-03T18:07:09Z",
        "updatedAt" : "2020-01-03T18:16:34Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      },
      {
        "id" : "d9606be3-6e25-4ca0-8ede-3b6514df352c",
        "parentId" : "abd4ee37-dfa7-49bc-9242-9f8c4c2af073",
        "authorId" : "874c1160-ae4c-4d2e-b480-380c7da7ae59",
        "body" : "OK, I will remove those empty lines. Thanks!",
        "createdAt" : "2020-01-03T18:09:52Z",
        "updatedAt" : "2020-01-03T18:16:34Z",
        "lastEditedBy" : "874c1160-ae4c-4d2e-b480-380c7da7ae59",
        "tags" : [
        ]
      }
    ],
    "commit" : "173eb75cc6c921324bb4381dfe30f4e6ef06adee",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4046,4050 @@    A `Tensor`. Has the same type as `images`.\n\n  Usage Example:\n\n  >>> # create an empty image"
  },
  {
    "id" : "65933eb4-7270-4cbc-aca9-89a69ef2104e",
    "prId" : 28754,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/28754#pullrequestreview-262618090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e18be25-02a4-4d7e-8568-019c9d000f07",
        "parentId" : null,
        "authorId" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "body" : "@alextp could you help to review this change?",
        "createdAt" : "2019-07-16T16:59:35Z",
        "updatedAt" : "2019-11-07T15:44:48Z",
        "lastEditedBy" : "1c0d3996-f30e-4521-a42e-7a5cdc08f5b5",
        "tags" : [
        ]
      },
      {
        "id" : "1ec5f9cb-328c-459d-b225-4b99154024ef",
        "parentId" : "5e18be25-02a4-4d7e-8568-019c9d000f07",
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "I'm a little swamped; can you find someone else? Or I can look at it on friday.",
        "createdAt" : "2019-07-16T18:55:11Z",
        "updatedAt" : "2019-11-07T15:44:48Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0f61d8fbbc28a09de0017b93171ad99fb3a30be",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +4003,4007 @@\n@tf_export(\"image.generate_bounding_box_proposals\")\ndef generate_bounding_box_proposals(scores,\n                                    bbox_deltas,\n                                    image_info,"
  },
  {
    "id" : "a87cae75-5c1b-432e-b312-0d5df38b53e8",
    "prId" : 26529,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26529#pullrequestreview-225222766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83c3105-b005-4c8f-ac28-3d5d6acf732d",
        "parentId" : null,
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "I can't tell when reading this code whether this is a new requirement or not.\r\n\r\nIf it's not, then we cannot make this change as it'll break backward compatibility.",
        "createdAt" : "2019-04-10T21:06:03Z",
        "updatedAt" : "2019-04-11T09:13:26Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      },
      {
        "id" : "246bea78-3f57-4563-b496-0198206f7aad",
        "parentId" : "d83c3105-b005-4c8f-ac28-3d5d6acf732d",
        "authorId" : "a57cdedf-834b-48d5-b15a-701e9b523f2b",
        "body" : "This is not a new requirement (see [the current version](https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/ops/image_ops_impl.py#L1543)). Currently, the function crashes whenever the last dimension does not have size 1 (see [issue 26324](https://github.com/tensorflow/tensorflow/issues/26324))",
        "createdAt" : "2019-04-10T21:16:56Z",
        "updatedAt" : "2019-04-11T09:13:26Z",
        "lastEditedBy" : "a57cdedf-834b-48d5-b15a-701e9b523f2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "180f80941b1183a3cb2a8fa3d3bb48c30d7a83ea",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +1817,1821 @@  Outputs a tensor of the same `DType` and rank as `images`.  The size of the\n  last dimension of the output is 3, containing the RGB value of the pixels.\n  The input images' last dimension must be size 1.\n\n  Args:"
  },
  {
    "id" : "c6ca0a2e-5912-4ed2-b85a-e1c71e5f9d83",
    "prId" : 18628,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/18628#pullrequestreview-118892719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaaf3632-a78a-45a7-a397-cb5dc8975258",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "We can probably remove `convert_image_dtype` calls from each of these helper functions and instead do it once at the end so that this function will now support types other than `uint8` and `uint16` for all image formats.",
        "createdAt" : "2018-05-09T20:29:31Z",
        "updatedAt" : "2018-06-05T01:46:14Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee0aebe1bb0313e1bc5a841aded31d65123ca59",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1543,1547 @@      assert_channels = control_flow_ops.Assert(good_channels, [channels_msg])\n      with ops.control_dependencies([assert_channels]):\n        return convert_image_dtype(gen_image_ops.decode_gif(contents), dtype)\n\n    def check_gif():"
  },
  {
    "id" : "10539299-e62c-465e-b5cb-f106d5383422",
    "prId" : 15726,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/15726#pullrequestreview-96356517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df37d492-a4d4-4541-8efa-fd8bf3c47ad7",
        "parentId" : null,
        "authorId" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "body" : "Introducing two methods for `_rot90_3D` and `_rot90_4D` is unfortunate. I'd definitely welcome a better suggestion. The other alternative was to stagger `if shape.ndims == 3` checks throughout the method which didn't really help readability either.",
        "createdAt" : "2018-02-13T18:22:58Z",
        "updatedAt" : "2018-02-14T16:18:11Z",
        "lastEditedBy" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "tags" : [
        ]
      },
      {
        "id" : "625d84e6-8e2e-4a94-b6e2-17ccfef66de4",
        "parentId" : "df37d492-a4d4-4541-8efa-fd8bf3c47ad7",
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "I think this is fine.",
        "createdAt" : "2018-02-14T00:55:56Z",
        "updatedAt" : "2018-02-14T16:18:11Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f689f8a18458b265d7290a496bf3e400332f247",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +396,400 @@      return _rot90_3D(image, k, scope)\n    elif shape.ndims == 4:\n      return _rot90_4D(image, k, scope)\n    else:\n      raise ValueError('\\'image\\' must have either 3 or 4 dimensions.')"
  },
  {
    "id" : "de45e73d-0d80-48c0-a510-175263ab937c",
    "prId" : 14854,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/14854#pullrequestreview-81615773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0971c801-d76e-4fb6-8ae9-2ec8f6e5725a",
        "parentId" : null,
        "authorId" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "body" : "As mentioned [here](https://github.com/tensorflow/tensorflow/pull/14854#discussion_r155128239):\r\n\r\nOne strange thing about this refactor is that it forces the caller to provide an axis relative to a 4-D Tensor, even if they've passed in a 3-D image.\r\n\r\nFor example `random_flip_up_down()` needs to provide an axis, but doesn't know whether or not the image it's working with is 3-D or a 4-D batch of images. Currently I just pass in `1` with the knowledge that a single image will be extended to 4 dimensions.",
        "createdAt" : "2017-12-06T01:59:57Z",
        "updatedAt" : "2017-12-06T01:59:57Z",
        "lastEditedBy" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "tags" : [
        ]
      },
      {
        "id" : "8468efd9-8f95-48ba-a7bd-fb42f8f1e2b1",
        "parentId" : "0971c801-d76e-4fb6-8ae9-2ec8f6e5725a",
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "That's a good point -- but I think that's ok. It's made clear in the argument description, and in the end, this is a private utility function, so I'm not too worried about it.",
        "createdAt" : "2017-12-06T18:01:58Z",
        "updatedAt" : "2017-12-06T18:01:59Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "3a2367eb-5595-4a6d-a231-d973e30e45c5",
        "parentId" : "0971c801-d76e-4fb6-8ae9-2ec8f6e5725a",
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "I guess if you wanted to, you could make a symbolic argument: direction='UP_DOWN' or 'LEFT_RIGHT' and interpret that. But again, the function is private, I don't think it's worth it.",
        "createdAt" : "2017-12-06T18:04:33Z",
        "updatedAt" : "2017-12-06T18:04:33Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "e309b86f-93a9-40ab-83a5-8589c449737b",
        "parentId" : "0971c801-d76e-4fb6-8ae9-2ec8f6e5725a",
        "authorId" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "body" : "👍 ",
        "createdAt" : "2017-12-06T18:10:32Z",
        "updatedAt" : "2017-12-06T18:10:32Z",
        "lastEditedBy" : "ce8ed46c-c69b-4bd8-91f8-9afbbbbf4b66",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18ba89bc15fe5ad2a9dca3ec034ac10225dd1da",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +219,223 @@    image:  4-D Tensor of shape `[batch, height, width, channels]` or\n            3-D Tensor of shape `[height, width, channels]`.\n    axis:   A Python integer representing the axis on which the image(s)\n            will be flipped. Note: The provided axis must be specified relative\n            to the shape `[batch, height, width, channels]` as 3-D images will"
  }
]