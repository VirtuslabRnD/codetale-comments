[
  {
    "id" : "8bf91c1e-a464-4b0d-a51b-7515f1411433",
    "prId" : 41178,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41178#pullrequestreview-447566616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b055ef0a-8a0a-4e9b-9ad0-0e0313367ba6",
        "parentId" : null,
        "authorId" : "5ecedb81-855e-4953-85e9-be787282dde1",
        "body" : "Can we add doc tests with examples showing how to use this? https://www.tensorflow.org/community/contribute/docs_ref\r\n\r\nAlso, it would be helpful to add a brief description of GELUs in addition to the existing paper link.",
        "createdAt" : "2020-07-13T20:13:06Z",
        "updatedAt" : "2020-07-15T21:09:08Z",
        "lastEditedBy" : "5ecedb81-855e-4953-85e9-be787282dde1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a85ea8b4316984b9c6581d81faa002a34f5b8af",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +3525,3529 @@\n  References:\n    [Gaussian Error Linear Units (GELUs)](https://arxiv.org/abs/1606.08415).\n  \"\"\"\n  with ops.name_scope(name, \"Gelu\", [features]):"
  },
  {
    "id" : "b11c778e-29c3-4cfc-8385-d13ad36e97ca",
    "prId" : 35644,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/35644#pullrequestreview-340196326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed64a4c1-e65a-45ee-998e-663ef671ab68",
        "parentId" : null,
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "Empty space above this line please.",
        "createdAt" : "2020-01-08T22:50:34Z",
        "updatedAt" : "2020-01-10T18:42:37Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdad31831e108d4626a960b5862e85f78c61c4ff",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1859,1863 @@  ...   [[2], [2], [0], [1], [1]],\n  ...   [[0], [0], [3], [1], [2]], ]])  \n  >>> kernel_in = np.array([\n  ...  [ [[2, 0.1]], [[3, 0.2]] ],\n  ...  [ [[0, 0.3]],[[1, 0.4]] ], ])"
  },
  {
    "id" : "e9b4cc2b-c553-4374-8215-43252dd870c1",
    "prId" : 25241,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/25241#pullrequestreview-198200670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1f9e543-695b-4bec-94c5-c50af5043624",
        "parentId" : null,
        "authorId" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "body" : "@alextp @reedwm  we don't need to add the argument to V1 function below: max_pool_with_argmax_v1, right?",
        "createdAt" : "2019-01-30T22:17:39Z",
        "updatedAt" : "2019-02-22T02:50:36Z",
        "lastEditedBy" : "576d94d0-8049-4273-a3d0-f373713532c5",
        "tags" : [
        ]
      },
      {
        "id" : "ff65f407-ba89-4d6e-bfb8-4fff6e982b75",
        "parentId" : "c1f9e543-695b-4bec-94c5-c50af5043624",
        "authorId" : "05c2b6c1-8a55-4dc9-ae76-02172416ea90",
        "body" : "I think it should be added. But @alextp just added the V1 function so he would know better.",
        "createdAt" : "2019-02-01T01:19:18Z",
        "updatedAt" : "2019-02-22T02:50:36Z",
        "lastEditedBy" : "05c2b6c1-8a55-4dc9-ae76-02172416ea90",
        "tags" : [
        ]
      }
    ],
    "commit" : "be7970f3b4d729e618ea95265da3a7427153e19c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +3885,3889 @@      padding=padding,\n      Targmax=output_dtype,\n      include_batch_in_index=include_batch_in_index,\n      name=name)\n"
  },
  {
    "id" : "819d711c-71fd-4c9f-9382-c238bb0b3395",
    "prId" : 22849,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22849#pullrequestreview-163527208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec5dc34-87fb-4dba-acff-1df0b256051b",
        "parentId" : null,
        "authorId" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "body" : "Thanks for the PR! But can't we do something even more direct here?\r\n\r\nThis code already assumes that shape.ndims is not None, and that dim is a Python integer. So I don't think we need to do this test as part of the graph — we can do it in Python instead, which is simpler and easier to understand. i.e., I think you can just write:\r\n\r\n```python\r\nif dim < -shape.ndims or dim >= shape.ndims:\r\n  raise ... etc.\r\n```\r\n\r\nThis would also give the caller a more usable backtrace from Python, rather than a somewhat more cryptic error when running the graph.",
        "createdAt" : "2018-10-10T19:38:27Z",
        "updatedAt" : "2018-10-13T17:20:54Z",
        "lastEditedBy" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9d2b0cb61b61ef8cf7e5b8459f20bfdfea127c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1689,1693 @@        (dim_val, -shape.ndims, shape.ndims, shape.ndims))\n\n  # If dim is not the last dimension, we have to do a transpose so that we can\n  # still perform softmax on its last dimension.\n"
  },
  {
    "id" : "fb365b11-268c-4d66-9cef-8d29fe0307b2",
    "prId" : 16085,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/16085#pullrequestreview-92401392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c05e4459-37b5-4a9f-a894-6fabcf85b70a",
        "parentId" : null,
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "Is it possible to add this to https://github.com/tensorflow/tensorflow/blob/8c1f3b3fcdc5f897dbce3b7315c1b7000069f9c4/tensorflow/python/layers/core.py#L302 too?",
        "createdAt" : "2018-01-29T23:42:21Z",
        "updatedAt" : "2018-01-30T00:10:51Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      },
      {
        "id" : "4bfb7ec2-5463-4cb5-b37a-c31596dd8520",
        "parentId" : "c05e4459-37b5-4a9f-a894-6fabcf85b70a",
        "authorId" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "body" : "Thanks @vrv. The `tensorflow/python/layers/core.py` has been updated.",
        "createdAt" : "2018-01-29T23:57:32Z",
        "updatedAt" : "2018-01-30T00:10:51Z",
        "lastEditedBy" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a67c529db09fd37d200638a5b8a72176359d73b",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +2218,2222 @@      return x\n\n    noise_shape = _get_noise_shape(x, noise_shape)\n\n    # uniform [keep_prob, 1.0 + keep_prob)"
  },
  {
    "id" : "29556b2e-06d4-42fd-8545-8d1da75a37d9",
    "prId" : 14370,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/14370#pullrequestreview-83260195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7143e7b-bc7e-4b60-8b8e-9fd1012613cf",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "We cannot change the signature this way, as @jhseu said, this is a backwards incompatible change. Instead, you could accept both NHWC and NWC. You can even only document NWC to push users away from NHWC. Optionally, you can use @deprecated_arg_values to mark NWHC explicitly deprecated (will trigger a warning if used).",
        "createdAt" : "2017-12-13T17:42:19Z",
        "updatedAt" : "2017-12-13T19:20:31Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "d90ca132-ff33-4e88-b602-e8cbe510f5f7",
        "parentId" : "c7143e7b-bc7e-4b60-8b8e-9fd1012613cf",
        "authorId" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "body" : "Thanks @martinwicke @jhseu for the review. The current PR actually accept both `NWC` and `NHWC`, (see Ln 2219):\r\n```\r\n    if data_format is None or data_format == \"NHWC\" or data_format == \"NWC\":\r\n      data_format = \"NHWC\"\r\n      spatial_start_dim = 1\r\n      strides = [1, 1, stride, 1]\r\n    elif data_format == \"NCHW\" or data_format == \"NCW\":\r\n      data_format = \"NCHW\"\r\n      spatial_start_dim = 2\r\n      strides = [1, 1, 1, stride]\r\n    else:\r\n```\r\n\r\nI think `@deprecated_arg_values` is good. Will update the PR to add it.",
        "createdAt" : "2017-12-13T17:51:04Z",
        "updatedAt" : "2017-12-13T19:20:31Z",
        "lastEditedBy" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f699bfac94360fdf4cedfee0c823bffd352d94d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +2294,2298 @@    padding: 'SAME' or 'VALID'\n    use_cudnn_on_gpu: An optional `bool`.  Defaults to `True`.\n    data_format: An optional `string` from `\"NWC\", \"NCW\"`.  Defaults\n      to `\"NWC\"`, the data is stored in the order of\n      [batch, in_width, in_channels].  The `\"NCW\"` format stores"
  },
  {
    "id" : "550d4125-1053-43c4-b299-f8e00726aba8",
    "prId" : 13720,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/13720#pullrequestreview-69950524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d00ebd95-cc96-41fa-8195-b1e73b9e0ccc",
        "parentId" : null,
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "Can we add this symbol to contrib.nn now, so it's accessible?",
        "createdAt" : "2017-10-17T16:44:59Z",
        "updatedAt" : "2017-10-17T17:38:12Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99af7855abf6ac00398fbe789c3f4d87dbaeb9e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2141,2145 @@\n\ndef nth_element(input, n, reverse=False, name=None):\n  r\"\"\"Finds values of the `n`-th order statistic for the last dmension.\n"
  },
  {
    "id" : "9bcc0cc5-e6cd-4dd6-90fc-ef8cf0c6f89d",
    "prId" : 4015,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "162e6748-d4ba-48b0-a6ed-dc908865b8c4",
        "parentId" : null,
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "Update error message?\n",
        "createdAt" : "2016-08-24T21:39:46Z",
        "updatedAt" : "2016-08-26T06:47:41Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      },
      {
        "id" : "fa867eb8-c4f4-4609-91ca-9e7b5b4d415f",
        "parentId" : "162e6748-d4ba-48b0-a6ed-dc908865b8c4",
        "authorId" : "5f311952-9020-4294-a943-21cbd17dde41",
        "body" : "Sorry for the drive-by, but `isinstance(keep_prob, (float, int))` would be more idiomatic (and compact!) here.\n",
        "createdAt" : "2016-08-25T04:42:42Z",
        "updatedAt" : "2016-08-26T06:47:41Z",
        "lastEditedBy" : "5f311952-9020-4294-a943-21cbd17dde41",
        "tags" : [
        ]
      },
      {
        "id" : "5417faae-f115-4db6-9425-3e1158b9fb89",
        "parentId" : "162e6748-d4ba-48b0-a6ed-dc908865b8c4",
        "authorId" : "546a8ed3-4e40-4b79-b533-60f0fcb5e014",
        "body" : "It seems that the problem prevails when long ints are passed, e.g. 0L.\n\nIf you can afford an additional import,\n\nimport numbers\nisinstance(keep_prob, numbers.Real)\n\nappears to be the proper solution.\n\nhttp://stackoverflow.com/questions/4541155/check-if-a-number-is-int-or-float\n\nOn 25 August 2016 at 06:44, Derek Murray notifications@github.com wrote:\n\n> In tensorflow/python/ops/nn_ops.py\n> https://github.com/tensorflow/tensorflow/pull/4015#discussion_r76179387:\n> \n> > @@ -1109,7 +1109,7 @@ def dropout(x, keep_prob, noise_shape=None, seed=None, name=None):\n> >    \"\"\"\n> >    with ops.name_scope(name, \"dropout\", [x]) as name:\n> >      x = ops.convert_to_tensor(x, name=\"x\")\n> > -    if isinstance(keep_prob, float) and not 0 < keep_prob <= 1:\n> > -    if (isinstance(keep_prob, int) or isinstance(keep_prob, float)) and not 0 < keep_prob <= 1:\n> >      raise ValueError(\"keep_prob must be a scalar tensor or a float in the \"\n> \n> Sorry for the drive-by, but isinstance(keep_prob, (float, int)) would be\n> more idiomatic (and compact!) here.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/4015/files/1028c83d9fd338149c305604c1a89e93ff02812b#r76179387,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AAuK0fLQLW9PtD5QkyQjYkFDJk5Mop3Kks5qjR2xgaJpZM4Jr7f_\n> .\n",
        "createdAt" : "2016-08-25T07:02:21Z",
        "updatedAt" : "2016-08-26T06:47:41Z",
        "lastEditedBy" : "546a8ed3-4e40-4b79-b533-60f0fcb5e014",
        "tags" : [
        ]
      },
      {
        "id" : "9a2a0a63-56b5-4432-9f0f-67d8d692fb40",
        "parentId" : "162e6748-d4ba-48b0-a6ed-dc908865b8c4",
        "authorId" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "body" : "SGTM, please go ahead and make that change.\n",
        "createdAt" : "2016-08-25T17:12:42Z",
        "updatedAt" : "2016-08-26T06:47:41Z",
        "lastEditedBy" : "0ba8fb18-637a-4ab3-a7c8-cd971823fe45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8945adf2fd8806b36d42a15b5fca70b7726a3c39",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1113,1117 @@    x = ops.convert_to_tensor(x, name=\"x\")\n    if isinstance(keep_prob, numbers.Real) and not 0 < keep_prob <= 1:\n      raise ValueError(\"keep_prob must be a scalar tensor or a float in the \"\n                       \"range (0, 1], got %g\" % keep_prob)\n    keep_prob = ops.convert_to_tensor(keep_prob,"
  },
  {
    "id" : "295e864f-efdf-4279-931c-8e915224f61c",
    "prId" : 3049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17801aba-9861-47e7-8c6d-0c223af759dd",
        "parentId" : null,
        "authorId" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "body" : "Add a comment like with conv2d_transpose that this is sometimes referred to in neural network literature as 'deconvolution'.\n",
        "createdAt" : "2016-06-27T17:10:16Z",
        "updatedAt" : "2016-06-28T00:04:14Z",
        "lastEditedBy" : "1836b116-1c54-4d2e-8c7f-d83e825237ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7055b60dfa87bf3f270f71c68a4bc7575e6bea3",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +304,308 @@                     padding=\"SAME\",\n                     name=None):\n  \"\"\"The transpose of `conv3d`.\n\n  This operation is sometimes called \"deconvolution\" after [Deconvolutional"
  }
]