[
  {
    "id" : "86e1c22f-c175-4879-bbcc-4168a0f915af",
    "prId" : 48193,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48193#pullrequestreview-636105210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "137a1ff0-fce7-4094-babd-a4fa5d523ccf",
        "parentId" : null,
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "Value is unused.",
        "createdAt" : "2021-04-14T21:24:30Z",
        "updatedAt" : "2021-04-14T21:29:25Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      },
      {
        "id" : "6fd69883-fea5-47c3-ace0-c5045e1991e1",
        "parentId" : "137a1ff0-fce7-4094-babd-a4fa5d523ccf",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "done",
        "createdAt" : "2021-04-14T21:43:24Z",
        "updatedAt" : "2021-04-14T21:43:24Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c29763e8b9790e117049595f61c71d61b20117c",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +2732,2736 @@  if (!input_type || !output_type) return failure();\n\n  bool input_is_qtype =\n      input_type.getElementType().isa<mlir::quant::UniformQuantizedType>();\n"
  },
  {
    "id" : "9ec03e9a-2988-4588-b84e-372a5954705d",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-532911250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "492a26ff-6865-4a0e-9f49-4d82353c1b7e",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Hoist out of condition and then if() on them.",
        "createdAt" : "2020-11-17T23:01:59Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "9326ef70-2b2d-4a07-bd32-5bd13773efa9",
        "parentId" : "492a26ff-6865-4a0e-9f49-4d82353c1b7e",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "Given that we check whether input_is_qtype matches output_is_qtype above this code, and the two *_is_qtype perform the check, it seems the simpler option is to change the if condition to if(output_is_qtype && input_is_qtype). ",
        "createdAt" : "2020-11-18T00:00:45Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +273,277 @@        RankedTensorType::get(output_type.getShape(), rewriter.getI32Type());\n    auto input_qtype = input_type.getElementType()\n                           .dyn_cast<mlir::quant::UniformQuantizedType>();\n    auto output_qtype = output_type.getElementType()\n                            .dyn_cast<mlir::quant::UniformQuantizedType>();"
  },
  {
    "id" : "3138d769-bde0-4f81-9830-ec6ad512d21c",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-532914081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8284041-e5d9-4313-84db-391c9cf26a43",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Hoist out and condition on.",
        "createdAt" : "2020-11-17T23:02:36Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "3e913e43-4cc0-4279-aa1e-caf730672cf3",
        "parentId" : "f8284041-e5d9-4313-84db-391c9cf26a43",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "Same suggested alternative above for use here and in following instances. ",
        "createdAt" : "2020-11-18T00:07:33Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 334,
    "diffHunk" : "@@ -1,1 +332,336 @@        RankedTensorType::get(output_type.getShape(), rewriter.getI32Type());\n    auto input_x_qtype = input_x_type.getElementType()\n                             .dyn_cast<mlir::quant::UniformQuantizedType>();\n    auto input_y_qtype = input_y_type.getElementType()\n                             .dyn_cast<mlir::quant::UniformQuantizedType>();"
  },
  {
    "id" : "e49a3221-f1f7-4d14-bd14-09e3f674b70a",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-530421967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5d0d087-b50a-4571-9766-a0a890f7b38d",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Hoist out of the condition and then check them.",
        "createdAt" : "2020-11-17T23:09:28Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 535,
    "diffHunk" : "@@ -1,1 +533,537 @@        RankedTensorType::get(output_type.getShape(), rewriter.getI32Type());\n    auto input_lhs_qtype = input_lhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();\n    auto input_rhs_qtype = input_rhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();"
  },
  {
    "id" : "c8c2ee41-008a-4449-a563-7a2304f2e635",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-532915127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f04dbea-e4c9-45fc-8e57-29ec0f2b413e",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Nit: I feel that for the quantized case, a utility function could handle most of these with just a switch on the actual comparison. Maybe a TODO",
        "createdAt" : "2020-11-17T23:10:20Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "908ae113-d481-4fcf-9910-081745f10cc0",
        "parentId" : "9f04dbea-e4c9-45fc-8e57-29ec0f2b413e",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "Yes we'll address the duplication using a utility function. Marking as TODO.",
        "createdAt" : "2020-11-18T00:10:13Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 503,
    "diffHunk" : "@@ -1,1 +501,505 @@}\n\nLogicalResult ConvertTFLGreaterEqualOp::matchAndRewrite(\n    Operation* op, PatternRewriter& rewriter) const {\n  auto tfl_greater_equal_op = cast<TFL::GreaterEqualOp>(op);"
  },
  {
    "id" : "a1f2a523-12b5-4dba-8ee6-b63c43ac48e0",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-530421967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "881437f6-a289-463f-80af-9b7be065a5f4",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Hoist out of condition.",
        "createdAt" : "2020-11-17T23:10:39Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 601,
    "diffHunk" : "@@ -1,1 +599,603 @@        RankedTensorType::get(output_type.getShape(), rewriter.getI32Type());\n    auto input_lhs_qtype = input_lhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();\n    auto input_rhs_qtype = input_rhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();"
  },
  {
    "id" : "6577992e-ff6c-42a8-897e-ebe4c553e811",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-530421967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39748bce-3612-4d5a-88d4-ef79f7f6a5b4",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Can you please document these factors (max_scale_2x and input_shift) and any constraints that this puts on things? The computation looks right, just reacting to the magic numbers.",
        "createdAt" : "2020-11-17T23:11:59Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 617,
    "diffHunk" : "@@ -1,1 +615,619 @@    double in_rhs_scale = input_rhs_qtype.getScale();\n    double output_scale = output_qtype.getScale();\n    double max_scale_2x = 2.0 * std::max(in_lhs_scale, in_rhs_scale);\n\n    const int32_t SHIFT_8_BIT = 20;"
  },
  {
    "id" : "68aa64b6-663e-46af-8a80-a0a47c0ac66d",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-530421967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de8e5510-a016-4ae1-8a29-aa56307085a0",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "Ditto on magic numbers.",
        "createdAt" : "2020-11-17T23:12:51Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 709,
    "diffHunk" : "@@ -1,1 +707,711 @@    double in_rhs_scale = input_rhs_qtype.getScale();\n    double output_scale = output_qtype.getScale();\n    double max_scale_2x = 2.0 * std::max(in_lhs_scale, in_rhs_scale);\n\n    const int32_t SHIFT_8_BIT = 20;"
  },
  {
    "id" : "71d40b72-9d8f-4f14-80d9-865ac12fcb18",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-533677427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ea8dd7-633a-4cd1-9708-cdd7bbb42805",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "I don't think you need makeArrayRef (should implicit cast)",
        "createdAt" : "2020-11-17T23:21:53Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "5cf09fdd-cc4c-4ce1-aac0-d0e6f10a8e4b",
        "parentId" : "25ea8dd7-633a-4cd1-9708-cdd7bbb42805",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "Using bias_arr directly generates build error. ",
        "createdAt" : "2020-11-18T17:16:09Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 1524,
    "diffHunk" : "@@ -1,1 +1522,1526 @@      // build error.\n      bias_attr = DenseElementsAttr::get(bias_type,\n                                         llvm::makeArrayRef<float>(bias_arr));\n    } else {\n      SmallVector<int32_t, 2> bias_arr(bias_shape[0]);"
  },
  {
    "id" : "7fba69f7-d59e-44b8-8d96-2d61067d5e03",
    "prId" : 44851,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44851#pullrequestreview-530421967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b8eccef-e443-4090-abb6-4e84155babbf",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "cast or hoist",
        "createdAt" : "2020-11-17T23:25:12Z",
        "updatedAt" : "2020-11-20T16:22:47Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2631ad5eb993325fcb239357f7be18f8e56a8b5",
    "line" : 2102,
    "diffHunk" : "@@ -1,1 +2100,2104 @@        RankedTensorType::get(output_type.getShape(), rewriter.getI32Type());\n    auto input_lhs_qtype = input_lhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();\n    auto input_rhs_qtype = input_rhs_type.getElementType()\n                               .dyn_cast<mlir::quant::UniformQuantizedType>();"
  }
]