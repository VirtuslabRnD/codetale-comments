[
  {
    "id" : "8a48be56-0a12-447b-81a5-9a6a256a7832",
    "prId" : 48573,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48573#pullrequestreview-639377830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2f658dc-e7fa-4027-b063-2fd05970f769",
        "parentId" : null,
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "Comment regard CHECK vs CHECK-DAG. CHECK-DAG allows different ordering of operations, so it should be preferred in most cases, though the root nodes on the compute graph need to be CHECK statements. In this case, only the \"tosa.select\" should be a CHECK, the rest should be CHECK-DAGs.\r\n\r\nThis is needed a many of the checks below. ",
        "createdAt" : "2021-04-19T21:50:55Z",
        "updatedAt" : "2021-04-19T23:05:03Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      },
      {
        "id" : "c0e6be1b-c881-4b5d-9a66-7cb612c3a7e0",
        "parentId" : "d2f658dc-e7fa-4027-b063-2fd05970f769",
        "authorId" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "body" : "Thanks. Just apply the fix to all other tests in commit#2",
        "createdAt" : "2021-04-19T23:07:19Z",
        "updatedAt" : "2021-04-19T23:07:19Z",
        "lastEditedBy" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aebfd0647f45013a45dd69935df679ead6ab10",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +112,116 @@// CHECK-DAG: %[[VAR4:.*]] = \"tosa.reshape\"(%[[VAR0]]) {new_shape = [1, 1]}\n// CHECK-DAG: %[[VAR5:.*]] = \"tosa.greater_equal\"(%arg0, %[[VAR4]])\n// CHECK: %[[VAR6:.*]] = \"tosa.select\"(%[[VAR5]], %arg0, %[[VAR3]])\nfunc @test_leaky_relu(%arg0: tensor<4x4xf32>) -> tensor<4x4xf32> {\n  %0 = \"tf.LeakyRelu\"(%arg0) {alpha = 0.5 : f32} : (tensor<4x4xf32>) -> tensor<4x4xf32>"
  },
  {
    "id" : "162dd982-8f14-4124-ac58-a7b5b6993fad",
    "prId" : 48193,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48193#pullrequestreview-634970020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76d2b79a-c223-4cb1-9a7e-1fbe7a6014bf",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "General note on tests (and specific note on this): These are non trivial lowerings and we should have more explicit tests. The tests do not need to verify every detail of the patterns but should minimally capture SSA values and constants. Getting the testing granularity right is a bit of an art, so if you want help on this, we can bust some examples out to a doc or gist or something and work on it together if that is helpful (been meaning to ask for test upgrades for some time and realize there may be some education here).",
        "createdAt" : "2021-04-01T04:48:08Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "dc8b5fd3-5285-46f0-a552-1e2d5f118c38",
        "parentId" : "76d2b79a-c223-4cb1-9a7e-1fbe7a6014bf",
        "authorId" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "body" : "Ah so we can check the SSA values as well. Didn't realize we can do that.\r\nI'd assume all we need to do is append that to \"// CHECK: tosa.XXX\", for example like \"// CHECK: tosa.XXX(%0)\"?\r\nor it's not that simple as I expect?",
        "createdAt" : "2021-04-06T17:29:27Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "tags" : [
        ]
      },
      {
        "id" : "fca242f1-0dda-40f8-a395-2a5a9a885033",
        "parentId" : "76d2b79a-c223-4cb1-9a7e-1fbe7a6014bf",
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "You can see similar examples in the tensorflow to hlo lowering tests:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/mlir/xla/tests/legalize-tf.mlir#L64\r\n\r\nThe problem with not validating the large sequences is incorrect constants or changing which values are passed to which ops. ",
        "createdAt" : "2021-04-12T18:03:33Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      },
      {
        "id" : "75b0413a-f9b4-4347-b5d7-3703d77d750f",
        "parentId" : "76d2b79a-c223-4cb1-9a7e-1fbe7a6014bf",
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "Nit: You can drop all the shape information in the line to make things more succinct.\r\n\r\nI.e. The following line:\r\n\r\n// CHECK: %[[VAR0:.*]] = \"tosa.const\"() {value = dense<[0, 2, 1]> : tensor<3xi32>} : () -> tensor<3xi32>\r\n\r\nCan be simplified to\r\n\r\n// CHECK: %[[VAR0:.*]] = \"tosa.const\"() {value = dense<[0, 2, 1]> : tensor<3xi32>}\r\n\r\nGenerally we want to make sure check tests are mostly a sequence of correct values.",
        "createdAt" : "2021-04-13T19:52:37Z",
        "updatedAt" : "2021-04-13T19:55:48Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c29763e8b9790e117049595f61c71d61b20117c",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +801,805 @@// CHECK: %[[VAR8:.*]] = \"tosa.transpose\"(%[[VAR7]], %[[VAR0]]) : (tensor<16x1x2xf32>, tensor<3xi32>) -> tensor<16x2x1xf32>\n// CHECK: %[[VAR9:.*]] = \"tosa.reshape\"(%[[VAR8]]) {new_shape = [4, 4, 2]} : (tensor<16x2x1xf32>) -> tensor<4x4x2xf32>\nfunc @test_one_hot(%arg0: tensor<4x4xi32>, %arg1: tensor<f32>, %arg2: tensor<f32>) -> tensor<4x4x2xf32> {\n  %0 = \"tf.Const\"()  {value = dense<2> : tensor<i32>}  : () -> tensor<i32>\n  %1 = \"tf.OneHot\"(%arg0, %0, %arg1, %arg2) {axis = -1 : i64} : (tensor<4x4xi32>, tensor<i32>, tensor<f32>, tensor<f32>) -> tensor<4x4x2xf32>"
  },
  {
    "id" : "275645bd-3995-45d4-ba6c-b32b1e8119da",
    "prId" : 48193,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48193#pullrequestreview-633825517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc1dda15-21a3-48e4-b9e7-1464f86a5d46",
        "parentId" : null,
        "authorId" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "body" : "I didn't double check, but I think that some of the op conversions added are missing tests (gather?). Please audit test coverage for both ops and critical branches in the patterns.",
        "createdAt" : "2021-04-01T04:49:06Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "b534dd2f-ff29-4848-b22b-6d156debdac0",
        "tags" : [
        ]
      },
      {
        "id" : "d17ee9c2-ab2e-4196-9357-29da2c03ec39",
        "parentId" : "dc1dda15-21a3-48e4-b9e7-1464f86a5d46",
        "authorId" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "body" : "Thanks. Will fix in next round.",
        "createdAt" : "2021-04-06T17:26:16Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "f31d0583-2480-4fc3-9503-1351afc6cb97",
        "tags" : [
        ]
      },
      {
        "id" : "9c0ec419-6b26-41fa-80ae-70f2dc37b59a",
        "parentId" : "dc1dda15-21a3-48e4-b9e7-1464f86a5d46",
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "Still missing tests for gather support. Because we are adding functionality for a gather lowering we will need a test to validate the lowering is working correctly.",
        "createdAt" : "2021-04-12T18:04:32Z",
        "updatedAt" : "2021-04-12T22:09:56Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c29763e8b9790e117049595f61c71d61b20117c",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +104,108 @@\n// -----\n\n// CHECK-LABEL: test_leaky_relu\n// CHECK: tosa.const"
  },
  {
    "id" : "2f95423a-4848-40ad-add3-b0d3a46ddb28",
    "prId" : 48193,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48193#pullrequestreview-634977985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b69bc6-ce0c-425f-8fed-3bf1b1e165b0",
        "parentId" : null,
        "authorId" : "2b360356-8486-433a-8b78-303484004dfe",
        "body" : "Perform the same value validation on the rest of the added tests. If they are short (e.g. less than 3-4 ops) its fine without them but most of these tests are pretty complex and we want to avoid future errors.",
        "createdAt" : "2021-04-13T19:54:46Z",
        "updatedAt" : "2021-04-13T19:55:48Z",
        "lastEditedBy" : "2b360356-8486-433a-8b78-303484004dfe",
        "tags" : [
        ]
      },
      {
        "id" : "44e98bd6-e18c-450d-b939-c337afa29f87",
        "parentId" : "72b69bc6-ce0c-425f-8fed-3bf1b1e165b0",
        "authorId" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "body" : "The plan is to clean up all the tests in a separate PR. Is that a workable option ? We tried the test_one_hot to get feedback on the right way to go about it, rather than change everything, then potentially have to do a second pass at everything. ",
        "createdAt" : "2021-04-13T20:02:50Z",
        "updatedAt" : "2021-04-13T20:02:50Z",
        "lastEditedBy" : "8de71123-74d5-4bf9-8fdf-4c7804212b1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c29763e8b9790e117049595f61c71d61b20117c",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +830,834 @@// CHECK: tosa.reshape\n// CHECK: tosa.add\nfunc @test_fakequant_with_min_max_args(%arg0: tensor<13x21x3xf32>) -> tensor<13x21x3xf32> {\n  %2 = \"tf.FakeQuantWithMinMaxArgs\"(%arg0)  {max = 2.000000e+00 : f32, min = -2.000000e+00 : f32, narrow_range = false, num_bits = 16 : i64}  : (tensor<13x21x3xf32>) -> tensor<13x21x3xf32>\n  return %2 : tensor<13x21x3xf32>"
  }
]