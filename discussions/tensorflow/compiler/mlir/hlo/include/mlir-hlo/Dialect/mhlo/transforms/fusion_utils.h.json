[
  {
    "id" : "9ca3a6f1-67ec-4d75-b3d2-cb0bb1e0c24e",
    "prId" : 50020,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50020#pullrequestreview-682145669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a92324e1-22a1-4a12-8bc0-ff6e34dfd398",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Y",
        "createdAt" : "2021-06-10T16:59:17Z",
        "updatedAt" : "2021-06-10T19:22:56Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "6b4d2888-4713-462b-b65e-9ba4c867e42b",
        "parentId" : "a92324e1-22a1-4a12-8bc0-ff6e34dfd398",
        "authorId" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "body" : "Could you please elaborate the meaning of `Y`? Thanks!",
        "createdAt" : "2021-06-11T09:45:30Z",
        "updatedAt" : "2021-06-11T09:45:30Z",
        "lastEditedBy" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "tags" : [
        ]
      },
      {
        "id" : "58a78c1f-e13a-4d8d-a492-d036b3de1592",
        "parentId" : "a92324e1-22a1-4a12-8bc0-ff6e34dfd398",
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "\"Fat-finger\" :)\r\n(it wasn't intended to have this comment, ignore)",
        "createdAt" : "2021-06-11T19:10:48Z",
        "updatedAt" : "2021-06-12T02:29:17Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "923c8d61f7fe00a2a0df22d5be396508f0667964",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@//   - any op in the fusion pattern is either element-wise or a reduction.\n//   - if a op is a reduction, its output cannot be consumed by other\n//     ops in the same fusion pattern.\n//   - all the effective shapes of outputs of fusion pattern are same.\n//     - For element-wise op, its effective shape is its output shape."
  },
  {
    "id" : "67961650-2a03-4d47-ae10-7a883efe11a7",
    "prId" : 50020,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50020#pullrequestreview-681035253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e101be6-6e73-446f-b639-ca676caacc85",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Can you explain above the Row/col reduction as well?\r\nIn particular the rank-2 limitation.",
        "createdAt" : "2021-06-10T16:59:34Z",
        "updatedAt" : "2021-06-10T19:22:56Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "923c8d61f7fe00a2a0df22d5be396508f0667964",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@//   - all the effective shapes of outputs of fusion pattern are same.\n//     - For element-wise op, its effective shape is its output shape.\n//     - For reduction op, its effective shape is its operand shape.\n//   - currently our downstreaming codegen engine only support 2d -> 1d tensor\n//   reduction. TODO: lift this limitation."
  },
  {
    "id" : "bb905b9c-1fac-4be1-978b-2ec7fe47bf70",
    "prId" : 50020,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50020#pullrequestreview-681695100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d66ff80-2dde-4c3a-9aeb-4358750d9242",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Don't we have this information already from the MemoryEffect interface? Each operand is supposed to be annotated I think.",
        "createdAt" : "2021-06-10T17:03:14Z",
        "updatedAt" : "2021-06-10T19:22:56Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "fbf033b2-5bff-40cb-b0ff-234c317e6d06",
        "parentId" : "5d66ff80-2dde-4c3a-9aeb-4358750d9242",
        "authorId" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "body" : "Thanks! We need this since different lmhlo ops may have different number of output operands. This is a helper function to query the number of output operands. I'll change the implementation of this function to use MemoryEffect interface.",
        "createdAt" : "2021-06-11T10:42:02Z",
        "updatedAt" : "2021-06-11T10:42:02Z",
        "lastEditedBy" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "tags" : [
        ]
      }
    ],
    "commit" : "923c8d61f7fe00a2a0df22d5be396508f0667964",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@// For some ops (e.g. lmhlo ops), some operands are the output memrefs\n// Thus these operands are supposed to be updated.\nint getNumResultOperands(Operation* op);\n\n// Returns data users of the value and its aliases (e.g. memref.cast)."
  }
]