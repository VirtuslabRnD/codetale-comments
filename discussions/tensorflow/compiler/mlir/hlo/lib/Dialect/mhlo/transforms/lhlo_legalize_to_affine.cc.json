[
  {
    "id" : "44ef5038-7adf-4803-b0ab-84b49bafb02e",
    "prId" : 50342,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50342#pullrequestreview-688862530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4ea825a-484c-4064-bbdd-8493dcb33092",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "What is the MathDialect used for in this patch?",
        "createdAt" : "2021-06-21T21:06:55Z",
        "updatedAt" : "2021-06-21T21:06:55Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "b6adf5d7-ffab-4e5f-91aa-febef271c13e",
        "parentId" : "e4ea825a-484c-4064-bbdd-8493dcb33092",
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Ah I think nothing new here, it was a missing dependency before.",
        "createdAt" : "2021-06-21T21:08:20Z",
        "updatedAt" : "2021-06-21T21:08:20Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff82f93bf7543ddb5eb6da718b0563a94326b1fb",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +570,574 @@    : public LhloLegalizeToAffinePassBase<LhloLegalizeToAffinePass> {\n  void getDependentDialects(DialectRegistry& registry) const override {\n    registry.insert<AffineDialect, math::MathDialect>();\n  }\n  void runOnFunction() override {"
  },
  {
    "id" : "f573f06c-6918-4ec3-b9a5-a6244be0a9e1",
    "prId" : 50073,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50073#pullrequestreview-681422824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51637f7c-df0b-4d7a-870a-d8e766cab7a4",
        "parentId" : null,
        "authorId" : "4358d2f3-5ce2-4ab5-98bc-229a6695f26a",
        "body" : "An overall high-level comment on the lowering to affine nest approach.",
        "createdAt" : "2021-06-11T03:55:57Z",
        "updatedAt" : "2021-06-11T03:57:00Z",
        "lastEditedBy" : "4358d2f3-5ce2-4ab5-98bc-229a6695f26a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3dcd4ab31a69f305cd079b869ee35ba6dc8bf5",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +236,240 @@///             'prev_val' = 'prev_val' + 'operand_val'\n///        6. Store 'prev_val' back to the temporary output.\nclass GatherOpConverter : public OpRewritePattern<GatherOp> {\n public:\n  using OpRewritePattern<GatherOp>::OpRewritePattern;"
  },
  {
    "id" : "238a9ed4-dd79-411c-ac85-100cbd0c48f4",
    "prId" : 50073,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50073#pullrequestreview-685985024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3a5136b-28a9-4b2f-8f99-1144a363a935",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "eltType is not declared",
        "createdAt" : "2021-06-17T04:46:48Z",
        "updatedAt" : "2021-06-17T04:46:49Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "dccc625a-22f3-4807-a735-a50dcdb63051",
        "parentId" : "f3a5136b-28a9-4b2f-8f99-1144a363a935",
        "authorId" : "4358d2f3-5ce2-4ab5-98bc-229a6695f26a",
        "body" : "This should have been `type` - I guess the CI runs with assertions disabled. ",
        "createdAt" : "2021-06-17T07:57:05Z",
        "updatedAt" : "2021-06-17T07:57:06Z",
        "lastEditedBy" : "4358d2f3-5ce2-4ab5-98bc-229a6695f26a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3dcd4ab31a69f305cd079b869ee35ba6dc8bf5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +181,185 @@static Value getZeroValue(Type type, Location loc,\n                          PatternRewriter& rewriter) {\n  assert(eltType.isIntOrFloat() && \"Expected int or float\");\n\n  if (IntegerType intType = type.dyn_cast<IntegerType>())"
  },
  {
    "id" : "c22eee39-7799-4f4d-ab7c-47b4b0301449",
    "prId" : 50073,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50073#pullrequestreview-685861274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfaa447c-231e-4551-9cc1-6bcfb9be04b3",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "```\r\nlhlo_legalize_to_affine.cc:305:5: error: ignoring return value of function declared with 'nodiscard' attribute [-Werror,-Wunused-result]\r\n    fillBuffer(loc, output, zero_load_value, rewriter);\r\n    ^~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```",
        "createdAt" : "2021-06-17T04:47:15Z",
        "updatedAt" : "2021-06-17T04:47:15Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3dcd4ab31a69f305cd079b869ee35ba6dc8bf5",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +304,308 @@    Value zero_load_value = getZeroValue(element_type, loc, rewriter);\n    // Initializing the output buffer with 0.\n    fillBuffer(loc, output, zero_load_value, rewriter);\n\n    // We fetch the shape of start_indices at index_vector_dim. In case"
  },
  {
    "id" : "66b62703-f472-43d9-801c-e5f7ce286726",
    "prId" : 50073,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50073#pullrequestreview-685861595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7de4756d-c74f-4a43-b803-66ee58245615",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "```\r\nlhlo_legalize_to_affine.cc:260:14: error: unused variable 'output_rank' [-Werror,-Wunused-variable]\r\n    unsigned output_rank = output_type.getRank();\r\n             ^\r\n```",
        "createdAt" : "2021-06-17T04:48:05Z",
        "updatedAt" : "2021-06-17T04:48:22Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3dcd4ab31a69f305cd079b869ee35ba6dc8bf5",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +259,263 @@    Value output = op.output();\n    MemRefType output_type = output.getType().cast<MemRefType>();\n    unsigned output_rank = output_type.getRank();\n    ArrayRef<int64_t> output_shape = output_type.getShape();\n"
  },
  {
    "id" : "62ed3b79-b760-41dc-963a-a3b26274ce70",
    "prId" : 47315,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/47315#pullrequestreview-603246837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8abf794a-98e3-4ff6-9231-cba69c152387",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Can you document the pattern here?",
        "createdAt" : "2021-02-22T22:08:45Z",
        "updatedAt" : "2021-04-08T08:05:20Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "a2c024b4-5fca-429f-9e57-19f63677beb9",
        "parentId" : "8abf794a-98e3-4ff6-9231-cba69c152387",
        "authorId" : "42d2dc99-41e6-4e5b-b96d-bf3a05c98a65",
        "body" : "Added, Please review, If you feel I am missing anything.",
        "createdAt" : "2021-03-03T19:07:43Z",
        "updatedAt" : "2021-04-08T08:05:20Z",
        "lastEditedBy" : "42d2dc99-41e6-4e5b-b96d-bf3a05c98a65",
        "tags" : [
        ]
      }
    ],
    "commit" : "15314e4579f7a6901cf3475eff25962a34772eaf",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +116,120 @@/// rank as each other) and contains the arguments in the order that they were\n/// specified.\nstruct ConcatOpConverter : public OpRewritePattern<ConcatenateOp> {\n  using OpRewritePattern<ConcatenateOp>::OpRewritePattern;\n"
  }
]