[
  {
    "id" : "0fe600c2-6401-4617-8c29-fad5588ef9e6",
    "prId" : 50434,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50434#pullrequestreview-692595885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e7cce8c-fbbb-42c7-9671-f0ebf17f2d2d",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "Should we check that if there is an existing globalOp it also matches the provided `value`?",
        "createdAt" : "2021-06-24T03:19:57Z",
        "updatedAt" : "2021-06-24T03:59:43Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "d1aa15df-4fbf-41ec-b684-37a96758d89b",
        "parentId" : "7e7cce8c-fbbb-42c7-9671-f0ebf17f2d2d",
        "authorId" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "body" : "Thanks! I'll add an assert here.",
        "createdAt" : "2021-06-25T08:41:22Z",
        "updatedAt" : "2021-06-25T08:41:31Z",
        "lastEditedBy" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9e6891cfdfd317e0e7ec7001287ad87316f987d",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +175,179 @@  } else {\n    assert(checkGlobalOpContent(globalOp, value));\n  }\n\n  return loadGlobalString(rewriter, op->getLoc(), globalOp);"
  },
  {
    "id" : "3cc326cc-8c5b-4bc2-b9dc-9651ef75ab5a",
    "prId" : 50434,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50434#pullrequestreview-692393138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d77f446-b992-4b22-91ec-dc2535ee12a5",
        "parentId" : null,
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "You can put this information in the `.td` file and it won't be needed here.",
        "createdAt" : "2021-06-24T03:53:18Z",
        "updatedAt" : "2021-06-24T03:59:43Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      },
      {
        "id" : "2deba6cf-469c-4562-8d51-025522cdc458",
        "parentId" : "9d77f446-b992-4b22-91ec-dc2535ee12a5",
        "authorId" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "body" : "Thanks! It will introduce `llvm dialect` dependency into header file (e.g. `PassDetail.h`) if we put this dialect dependency in `td` file since some passes may shared one `.td` file.",
        "createdAt" : "2021-06-25T01:57:47Z",
        "updatedAt" : "2021-06-25T01:57:47Z",
        "lastEditedBy" : "b4bcfac1-e2f9-43bc-ad99-b3b766a1a316",
        "tags" : [
        ]
      },
      {
        "id" : "9eba1672-38f8-47b5-baaf-5fe06feec750",
        "parentId" : "9d77f446-b992-4b22-91ec-dc2535ee12a5",
        "authorId" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "body" : "OK, looks fine to leave it there.",
        "createdAt" : "2021-06-25T02:20:29Z",
        "updatedAt" : "2021-06-25T02:20:29Z",
        "lastEditedBy" : "79b78984-b8e9-4fc7-aa98-92198b35ecca",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9e6891cfdfd317e0e7ec7001287ad87316f987d",
    "line" : 525,
    "diffHunk" : "@@ -1,1 +523,527 @@  void getDependentDialects(DialectRegistry& registry) const override {\n    registry.insert<LLVM::LLVMDialect>();\n  }\n\n public:"
  }
]