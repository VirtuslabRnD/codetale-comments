[
  {
    "id" : "26560166-c255-4e0d-9d43-aa7c319efdee",
    "prId" : 41916,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41916#pullrequestreview-463459838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f73e1e-89e5-4845-ac8b-bd6be5ed2906",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Is it a good idea to do that? Reduction in floating point numbers might yield different numbers.\r\n@sanjoy WDYT?",
        "createdAt" : "2020-08-06T23:45:27Z",
        "updatedAt" : "2020-08-07T21:08:24Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "2452ca3e-c989-43a2-a908-1d7db4ba4664",
        "parentId" : "d1f73e1e-89e5-4845-ac8b-bd6be5ed2906",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "I don't think this is reducing in floating point, it is just doing the final sqrt in floating point.",
        "createdAt" : "2020-08-07T00:19:26Z",
        "updatedAt" : "2020-08-07T21:08:24Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "475a9b45-9aaf-4371-9f7e-77efd735633c",
        "parentId" : "d1f73e1e-89e5-4845-ac8b-bd6be5ed2906",
        "authorId" : "46ee1aa2-6cc0-4d18-ba46-b2b3ce5fd5a6",
        "body" : "@sanjoy is right, it's the finalizer that processes output of reduction.",
        "createdAt" : "2020-08-07T16:51:16Z",
        "updatedAt" : "2020-08-07T21:08:24Z",
        "lastEditedBy" : "46ee1aa2-6cc0-4d18-ba46-b2b3ce5fd5a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e9d0b23aad82817527167cdfd8613567ca64d9c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +211,215 @@      const xla::XlaOp& reduce_output,\n      const std::vector<int64>& dimensions_to_reduce) override {\n    if (xla::primitive_util::IsIntegralType(xla_reduction_type_)) {\n      // XLA only supports float and complex sqrt.\n      // Thus, cast integral type to F32 for computation."
  }
]