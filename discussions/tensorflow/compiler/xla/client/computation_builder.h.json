[
  {
    "id" : "cb565271-46f4-482f-9e01-ae461a7d13a3",
    "prId" : 10217,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/10217#pullrequestreview-41827069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6245d105-636b-406e-955a-ea90a22d3834",
        "parentId" : null,
        "authorId" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "body" : "Can strides be negative? Elaborate.",
        "createdAt" : "2017-05-30T18:36:23Z",
        "updatedAt" : "2017-06-14T13:26:27Z",
        "lastEditedBy" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "tags" : [
        ]
      },
      {
        "id" : "3a8165c1-3b3b-4b51-b959-d5819123d08a",
        "parentId" : "6245d105-636b-406e-955a-ea90a22d3834",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "Personally I would rather stick to positive only strides (on the grounds of similarity with our backend API).   I suppose that if the 'rev plus slice from end+1 -> begin+1'  code goes into tf2xla then that makes for simpler code in all backends.\r\n\r\nI put in negative strides because that's what TF core does.  It does it (probably) because of numpy.",
        "createdAt" : "2017-05-30T21:47:10Z",
        "updatedAt" : "2017-06-14T13:26:27Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      },
      {
        "id" : "9a549c56-b007-45a3-a770-f988d55905ee",
        "parentId" : "6245d105-636b-406e-955a-ea90a22d3834",
        "authorId" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "body" : "I talked about it with some folks and the consensus seemed to be to prefer positive strides only for now. The reasoning is:\r\na) we want to keep XLA minimal where possible, since it makes life easier for backend authors --- fewer cases to implement,\r\nb) it doesn't add any expressive power, since you can use Rev() to reverse dimensions, and it doesn't add any efficiency because we can fuse Rev() and Slice().\r\nc) it's easier to add features later rather than to remove them, so we can always add support for negative strides if we think of a good reason why.\r\n\r\n",
        "createdAt" : "2017-06-02T16:28:45Z",
        "updatedAt" : "2017-06-14T13:26:27Z",
        "lastEditedBy" : "78fc1397-310a-46f3-bd85-a5cb287b6ff6",
        "tags" : [
        ]
      },
      {
        "id" : "27c70ed9-72ba-4d24-b1ac-a26c44d2f188",
        "parentId" : "6245d105-636b-406e-955a-ea90a22d3834",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "ok.  i'm on holiday next week, but I will try to get it sorted out this weekend.  shouldn't be hard to add the rev+offset to the tf2xla and remove from the elemental emitter.",
        "createdAt" : "2017-06-02T16:49:27Z",
        "updatedAt" : "2017-06-14T13:26:27Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      }
    ],
    "commit" : "234d0f2861c9dc992b314821b7f38e5c998a3a4a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +212,216 @@  // Note that \"limit\" means up-to-but-not-including; i.e. [start, limit) in 1D\n  // range notation.\n  // The stride parameter determines the stride over the slice\n  ComputationDataHandle Slice(const ComputationDataHandle& operand,\n                              tensorflow::gtl::ArraySlice<int64> start_indices,"
  }
]