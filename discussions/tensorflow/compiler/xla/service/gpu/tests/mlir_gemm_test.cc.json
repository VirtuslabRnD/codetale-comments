[
  {
    "id" : "40067333-9c95-4f88-b73b-9b60dd0ba6b8",
    "prId" : 48530,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48530#pullrequestreview-663441586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcfe7d9e-f5ac-41e8-8160-47e33f06f711",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Should this diff be here?",
        "createdAt" : "2021-05-14T22:20:42Z",
        "updatedAt" : "2021-05-14T22:20:42Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "39b34055-3e4a-4569-9b6f-c6118db71fef",
        "parentId" : "fcfe7d9e-f5ac-41e8-8160-47e33f06f711",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "yes...thought you said\r\n\r\n>  Fixing unit test indeed seems preferable, since it's wrong to select an algorithm for the ROCm platform.\r\n\r\nand hence the change above",
        "createdAt" : "2021-05-18T11:55:36Z",
        "updatedAt" : "2021-05-18T11:55:36Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      },
      {
        "id" : "c688ce66-a365-431b-a3a4-0b32da138207",
        "parentId" : "fcfe7d9e-f5ac-41e8-8160-47e33f06f711",
        "authorId" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "body" : "@cheshire gentle ping",
        "createdAt" : "2021-05-19T16:45:21Z",
        "updatedAt" : "2021-05-19T16:45:22Z",
        "lastEditedBy" : "80b3505d-f76d-48ab-b8fe-fe7925204b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffb210ff9e35c66c3b305f0b0a9470ea6a58a791",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@                       result_xla_shape = \"(f32[4]) \"\n                   } {\n          \"lmhlo_gpu.gemm\"(%arg0, %arg1, %arg2) {alpha_imag = 0.000000e+00 : f64, alpha_real = 1.000000e+00 : f64, batch_size = 1 : i64, dot_dimension_numbers = {lhs_batching_dimensions = dense<> : tensor<0xi64>, lhs_contracting_dimensions = dense<1> : tensor<1xi64>, rhs_batching_dimensions = dense<> : tensor<0xi64>, rhs_contracting_dimensions = dense<0> : tensor<1xi64>}} : (memref<2x2xf32>, memref<2x2xf32>, memref<2x2xf32>) -> ()\n          \"lmhlo.terminator\"() : () -> ()\n        }"
  }
]