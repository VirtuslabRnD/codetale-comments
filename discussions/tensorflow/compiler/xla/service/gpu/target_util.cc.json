[
  {
    "id" : "6e6ff383-0ae5-46d3-bcd1-2ad96bc2ba2f",
    "prId" : 30936,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/30936#pullrequestreview-267811123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80971b62-81f4-49b9-996c-0a8d1beca918",
        "parentId" : null,
        "authorId" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "body" : "Extract a constant?",
        "createdAt" : "2019-07-29T11:52:50Z",
        "updatedAt" : "2019-07-29T15:16:55Z",
        "lastEditedBy" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "tags" : [
        ]
      },
      {
        "id" : "2b740c11-7b38-4243-9b16-2192c57edf9a",
        "parentId" : "80971b62-81f4-49b9-996c-0a8d1beca918",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "I'm not quite following you on this question.\r\n\r\nThis is to invoke:\r\nhttps://github.com/RadeonOpenCompute/ROCm-Device-Libs/blob/master/ockl/inc/ockl.h#L438",
        "createdAt" : "2019-07-29T14:13:27Z",
        "updatedAt" : "2019-07-29T15:16:55Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "5537be33845e502b8a7b94ca465a9b222414328f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +75,79 @@      return {llvm::Intrinsic::nvvm_read_ptx_sreg_ntid_x,\n              [](llvm::IRBuilder<>* b_) -> llvm::CallInst* {\n                return EmitDeviceFunctionCall(\"__ockl_get_local_size\",\n                                              {b_->getInt32(0)}, {U32}, U64, {},\n                                              b_);"
  },
  {
    "id" : "a6e739a8-7baa-4365-baaa-2458ab2a448a",
    "prId" : 29093,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/29093#pullrequestreview-243387267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d52cacbf-0199-4793-9631-674a52c711bc",
        "parentId" : null,
        "authorId" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "body" : "Please raise an error when the target triple is neither nvptx nor amdgcn. You can either LOG(FATAL) as done above or return a Status and wrap the call in ir_emitter_unnested.cc into a TF_CHECK _OK.",
        "createdAt" : "2019-05-29T11:50:16Z",
        "updatedAt" : "2019-05-29T16:38:37Z",
        "lastEditedBy" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "tags" : [
        ]
      },
      {
        "id" : "edb6021a-436d-4778-9bcd-87a2d92db0d4",
        "parentId" : "d52cacbf-0199-4793-9631-674a52c711bc",
        "authorId" : "79b4f3bf-60d8-414b-bee9-0fa88b73bba3",
        "body" : "I have added LOG(FATAL)  since thats likely more consistent with the other usages in the file. ",
        "createdAt" : "2019-05-29T16:47:07Z",
        "updatedAt" : "2019-05-29T16:47:07Z",
        "lastEditedBy" : "79b4f3bf-60d8-414b-bee9-0fa88b73bba3",
        "tags" : [
        ]
      }
    ],
    "commit" : "e95812a9dd07ef06c41e6e155900a7c0aa56e7e6",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +108,112 @@    func->setCallingConv(llvm::CallingConv::AMDGPU_KERNEL);\n    func->addFnAttr(\"amdgpu-flat-work-group-size\", \"1, 1024\");\n  }\n  else {\n    LOG(FATAL) << \"Invalid triple \" << target_triple.str();"
  }
]