[
  {
    "id" : "a6b72cc9-92e3-48fa-b2a7-2c826a439617",
    "prId" : 50153,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50153#pullrequestreview-681841850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d4af592-4888-4a71-a6e1-1e08205acff6",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Prefer absl::c_any_of",
        "createdAt" : "2021-06-08T23:36:21Z",
        "updatedAt" : "2021-06-09T19:55:52Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "360df765-b295-4596-bb50-bb189426c1e5",
        "parentId" : "7d4af592-4888-4a71-a6e1-1e08205acff6",
        "authorId" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "body" : "I tried. I didn't found a better way to do this. If you have an idea, tell me.\r\nThe problem is that fusion->fused_instructions() isn't an std::vector. Here is its signature:\r\n```\r\n  const tensorflow::gtl::iterator_range<\r\n      UnwrappingIterator<std::list<std::unique_ptr<HloInstruction>>::iterator>>\r\n  fused_instructions();\r\n```\r\nAnd `absl::c_any_of` doesn't work on that.\r\nI still do not understand why such a complicated object is returned. From the comment, it is to enable \"for (auto* var:)\" syntax. Maybe it was needed for older C++ version and isn't needed anymore?",
        "createdAt" : "2021-06-11T13:44:29Z",
        "updatedAt" : "2021-06-11T14:28:13Z",
        "lastEditedBy" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "250bced1fae220caa31efc9e64537aeed042bbf2",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@        // 1.2) Check if there is a bitcast that we lift. Currently\n        //      we do not lift(merge) bitcast above(with) broadcast.\n        if (!std::any_of(fusion->fused_instructions().begin(),\n                         fusion->fused_instructions().end(),\n                         [](HloInstruction* inner) {"
  },
  {
    "id" : "53bc5abb-35ec-4b44-b85b-411fd49e0445",
    "prId" : 50153,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/50153#pullrequestreview-705157637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e1e4990-194c-4981-9df4-7bab228458e5",
        "parentId" : null,
        "authorId" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "body" : "@akuegel  Thanks for the update.\r\nDoes adding this line here fix the internal CI error?\r\n`clone_changed = true;`\r\nHere, we changed something.",
        "createdAt" : "2021-07-13T12:44:03Z",
        "updatedAt" : "2021-07-13T12:44:04Z",
        "lastEditedBy" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "tags" : [
        ]
      },
      {
        "id" : "9a8708f2-a3d7-4f6c-ba57-835c07a35cbd",
        "parentId" : "6e1e4990-194c-4981-9df4-7bab228458e5",
        "authorId" : "68fac570-a499-4a66-bf20-f8f2cbebf597",
        "body" : "Yes, I have added this, and also changed = true, and it has already landed.",
        "createdAt" : "2021-07-13T13:03:57Z",
        "updatedAt" : "2021-07-13T13:03:57Z",
        "lastEditedBy" : "68fac570-a499-4a66-bf20-f8f2cbebf597",
        "tags" : [
        ]
      }
    ],
    "commit" : "250bced1fae220caa31efc9e64537aeed042bbf2",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@            Shape new_shape = i->users()[0]->shape();\n            TF_RETURN_IF_ERROR(i->parent()->ReplaceWithNewInstruction(\n                i, i->CloneWithNewOperands(new_shape, {})));\n          } else if (!i->users().empty() &&\n                     // If 0 operands, we can't lift the bitcast.  It"
  }
]