[
  {
    "id" : "de9807be-e0e1-4b2d-aae9-ff7aef233f0f",
    "prId" : 45022,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/45022#pullrequestreview-561116379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a79ce7e-c70b-4152-8678-1e852cfd077e",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "This depends on whether you need the argument to be non-const. If you can make it `absl::Span<ExecutionInput const>`, you won't need `absl::MakeSpan`",
        "createdAt" : "2020-12-19T00:00:28Z",
        "updatedAt" : "2021-01-07T15:06:35Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "fd8b4c5e-d5ca-432b-91f6-0fb2f99dbfd9",
        "parentId" : "3a79ce7e-c70b-4152-8678-1e852cfd077e",
        "authorId" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "body" : "I already tried. But we can't make it const. MarkToBeReleasedArguments change the values.",
        "createdAt" : "2021-01-04T15:25:47Z",
        "updatedAt" : "2021-01-07T15:06:35Z",
        "lastEditedBy" : "f5c553cb-d123-4eb4-9f6d-9a715871f6eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "26ec7a449054fbd604653b8aafd4783174e089ac",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +404,408 @@    std::vector<ExecutionInput> arguments,\n    HloExecutionProfile* hlo_execution_profile) {\n  return ExecuteAsyncOnStreamImpl(run_options, absl::MakeSpan(arguments),\n                                  hlo_execution_profile);\n}"
  },
  {
    "id" : "41055dd1-f558-4126-99a6-2d491b4e34b6",
    "prId" : 30238,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/30238#pullrequestreview-258170157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e7a91ca-979c-4809-95e5-2f1f20319df8",
        "parentId" : null,
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "@jerryyin need to revise all places where these fields are accessed",
        "createdAt" : "2019-07-03T16:48:12Z",
        "updatedAt" : "2019-07-18T19:07:43Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      },
      {
        "id" : "65a91fdb-8805-4624-959d-5bb3aa0eb37b",
        "parentId" : "3e7a91ca-979c-4809-95e5-2f1f20319df8",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "Check test results on `Linux GPU`.",
        "createdAt" : "2019-07-03T16:48:33Z",
        "updatedAt" : "2019-07-18T19:07:43Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      },
      {
        "id" : "c07677ff-e08f-41ef-829c-a2d9758c7b5d",
        "parentId" : "3e7a91ca-979c-4809-95e5-2f1f20319df8",
        "authorId" : "643592c3-1a8a-4682-9417-fdccde36f4c1",
        "body" : "Thanks for reminding. Done",
        "createdAt" : "2019-07-04T21:06:14Z",
        "updatedAt" : "2019-07-18T19:07:43Z",
        "lastEditedBy" : "643592c3-1a8a-4682-9417-fdccde36f4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1fab6dac20a485a52f9c98226bd411a60520521",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +61,65 @@                 std::move(hlo_profile_index_map)),\n      text_(text),\n      binary_(binary),\n      gpu_version_(gpu_version),\n      thunk_schedule_(std::move(thunk_schedule)),"
  },
  {
    "id" : "b3db5c01-bfed-4a30-9165-bde3863eb427",
    "prId" : 30238,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/30238#pullrequestreview-263668199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "parentId" : null,
        "authorId" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "body" : "Can we use two factory functions `GpuExecutable::CreateForNvidia` and `GpuExecutable::CreateForAmd`, and let them take different version parameters?",
        "createdAt" : "2019-07-17T21:39:42Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "tags" : [
        ]
      },
      {
        "id" : "1f02ecef-e6ff-43e0-ba62-caa9a5d13ba3",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "@timshen91 This would create additional bifurcations later on so I'm not a fan of this idea.\r\n\r\nIn another PR https://github.com/tensorflow/tensorflow/pull/30660 I'm attempting to unify logic between `nvptx_compiler.cc` and its AMDGPU-equivalent by forming a base class `GpuCompiler` which extracts common HLO lowering logic. Having two separate factory functions would mean the construction of `GpuExecutable` instances would then fall on the concrete subclasses of `GpuCompiler`, `NVPTXCompiler` / `AMDGPUCompiler` (and `MlirCompiler`).",
        "createdAt" : "2019-07-17T21:47:57Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      },
      {
        "id" : "d80b9db4-ebfd-44e5-852e-897819529fa6",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "@timshen91 Also please refer to #30326 to see how `GpuVersion` is used to drive different LLVM backends.",
        "createdAt" : "2019-07-17T22:22:54Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      },
      {
        "id" : "4deb2598-020c-4609-8dd9-8997b2259a85",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "body" : "Agreed. Then I think it should be a complete custom type (e.g. a class) instead of a std::variant. The underlying data member can be a variant, though.",
        "createdAt" : "2019-07-17T22:24:14Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "tags" : [
        ]
      },
      {
        "id" : "3a47dafb-ecf3-4595-b599-40727e9756b5",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "body" : "Based on actual use cases in #30660 and #30326 `GpuVersion` is really an `std::variant/absl::variant` with no extra additional use cases. Would it be fine to let be a type alias for now, and evolve to a full custom type later on when new use cases arise?",
        "createdAt" : "2019-07-17T23:10:41Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "0d1f2cd3-123c-44ec-b1f1-cbab0f4281ac",
        "tags" : [
        ]
      },
      {
        "id" : "17189698-7011-4734-97a0-20e4dee55088",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "body" : "Sure.",
        "createdAt" : "2019-07-18T00:06:36Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "db119d71-0485-413b-9ea8-fd044b814e31",
        "tags" : [
        ]
      },
      {
        "id" : "d42a2704-6603-4483-8603-531ae65591ad",
        "parentId" : "cee836eb-7ca7-4769-8385-26b9bcd89215",
        "authorId" : "643592c3-1a8a-4682-9417-fdccde36f4c1",
        "body" : "Looks like we are resolved on the data members in `GpuExecutable` for now. Marking this as resolved.",
        "createdAt" : "2019-07-18T13:50:57Z",
        "updatedAt" : "2019-07-18T19:07:44Z",
        "lastEditedBy" : "643592c3-1a8a-4682-9417-fdccde36f4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1fab6dac20a485a52f9c98226bd411a60520521",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +53,57 @@GpuExecutable::GpuExecutable(\n    const string& text, const std::vector<uint8>& binary,\n    GpuVersion gpu_version, std::unique_ptr<const ThunkSchedule> thunk_schedule,\n    std::shared_ptr<HloModule> hlo_module,\n    std::shared_ptr<const BufferAssignment> assignment,"
  }
]