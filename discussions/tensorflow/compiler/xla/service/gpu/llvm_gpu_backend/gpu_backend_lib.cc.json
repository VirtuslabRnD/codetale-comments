[
  {
    "id" : "4070dd92-cb9e-44ed-8d34-a54b2850ab32",
    "prId" : 41936,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41936#pullrequestreview-459335520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "349172a7-e32c-4396-be62-59dee77d58e9",
        "parentId" : null,
        "authorId" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "body" : "Can we please add that \"Code compiled for SM75 will run on SM80 too\".",
        "createdAt" : "2020-07-31T15:00:43Z",
        "updatedAt" : "2020-08-19T14:28:11Z",
        "lastEditedBy" : "3c76b64e-5fbc-43db-843d-8c0f62dadcab",
        "tags" : [
        ]
      },
      {
        "id" : "d55c2d0b-eeba-490a-a4f7-5b8cc015e409",
        "parentId" : "349172a7-e32c-4396-be62-59dee77d58e9",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "+1, though I'd s/Code/PTX/",
        "createdAt" : "2020-07-31T17:19:28Z",
        "updatedAt" : "2020-08-19T14:28:11Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1abd3843cb53e650131f1d7c30a4445d8ce5a9f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +96,100 @@\n  // If the current CC isn't supported by LLVM and it is newer then\n  // the max supported LLVM version, do not warn about it. The end\n  // user can't do anything about this. PTX compiled for SM75 will\n  // run on SM80 too."
  },
  {
    "id" : "4fc2463f-ce86-4b1e-a659-357852614b7b",
    "prId" : 41641,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41641#pullrequestreview-462944093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2c18500-55c9-441c-a64c-55cade23d6fe",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Would it be possible (and better?) to pick a new sub-directory each time, instead of different file names?",
        "createdAt" : "2020-08-06T20:21:27Z",
        "updatedAt" : "2020-08-07T01:00:36Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      },
      {
        "id" : "224b6921-af55-4f63-8dee-7d4540ba0499",
        "parentId" : "f2c18500-55c9-441c-a64c-55cade23d6fe",
        "authorId" : "7a9282b7-3e11-46b6-8705-5665bbb9dabe",
        "body" : "Not sure what's the benefit in that. More library calls, and all the files are going to be deleted anyway. Also, there's a theoretical possibility that we won't be able to delete the subdirectory if it is still open in some subprocess when we get to the end of the function. \r\nIn any event, that is an additional feature and shouldn't go into this PR, I think.",
        "createdAt" : "2020-08-06T23:31:52Z",
        "updatedAt" : "2020-08-07T01:00:36Z",
        "lastEditedBy" : "7a9282b7-3e11-46b6-8705-5665bbb9dabe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a190fee2a5d696065c618fe014445b244d07bde2",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +638,642 @@        \"Unable to locate a temporary directory for compile-time artifacts.\");\n  }\n  std::string tempdir_name = tempdir_vector.front();\n  VLOG(1) << \"Compile-time artifacts located at: \" << tempdir_name;\n"
  },
  {
    "id" : "f5c1a8e7-af54-49eb-8fd7-4648791ac319",
    "prId" : 41641,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/41641#pullrequestreview-462944831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ad5896b-0495-4f95-8cb4-863a6e4398a1",
        "parentId" : null,
        "authorId" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "body" : "Would it make sense to use llvm string processing helpers here, or even llvm::Regex?\r\n",
        "createdAt" : "2020-08-06T20:37:08Z",
        "updatedAt" : "2020-08-07T01:00:36Z",
        "lastEditedBy" : "1223b96d-efd5-4254-9e4f-f359308f8df2",
        "tags" : [
        ]
      },
      {
        "id" : "b85526b3-d897-4ef7-a198-08d4ec5ca54b",
        "parentId" : "2ad5896b-0495-4f95-8cb4-863a6e4398a1",
        "authorId" : "7a9282b7-3e11-46b6-8705-5665bbb9dabe",
        "body" : "The code does the job as written. Why bring in nonstandard APIs and add more complexity?",
        "createdAt" : "2020-08-06T23:34:13Z",
        "updatedAt" : "2020-08-07T01:00:36Z",
        "lastEditedBy" : "7a9282b7-3e11-46b6-8705-5665bbb9dabe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a190fee2a5d696065c618fe014445b244d07bde2",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +810,814 @@  // Delete the first two lines, since they usually vary even when the rest of\n  // the code is the same (but verify that they are what we expect).\n  if (str.size() >= 13 && str.substr(0, 13) == \"; ModuleID = \") {\n    auto pos = str.find(\"\\n\");\n    if (pos != std::string::npos) str = str.substr(pos + 1);"
  }
]