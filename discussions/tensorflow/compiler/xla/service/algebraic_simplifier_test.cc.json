[
  {
    "id" : "2dbd4b99-69ba-4731-8957-a66f623afd7d",
    "prId" : 34284,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34284#pullrequestreview-323950966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0808f29a-2769-4b1d-9d86-c6745e64a9e6",
        "parentId" : null,
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "Would you please simplify the names used in the HLO instructions for the tests you added, to make it more readable? See CopyReshape for an example.",
        "createdAt" : "2019-11-26T17:13:17Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "aee876e0-67a1-4319-b1d2-43219920b3c6",
        "parentId" : "0808f29a-2769-4b1d-9d86-c6745e64a9e6",
        "authorId" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "body" : "Done",
        "createdAt" : "2019-11-27T21:22:20Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a26afaa73334e0b2cb0f324ae2f11b575fec22ce",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +5811,5815 @@}\n\nTEST_F(AlgebraicSimplifierTest, SqrtOfSelfMultiply) {\n  const char* kModuleStr = R\"(\n    HloModule m"
  },
  {
    "id" : "cb59574d-8c55-4664-9ed7-3205a4115c71",
    "prId" : 34284,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34284#pullrequestreview-323957537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "parentId" : null,
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "For a few tests you added that use the meta data, I think we need to add corresponding negative tests. The negative tests may not set the meta data, it may also just use a non-batch-norm related HLO value.",
        "createdAt" : "2019-11-26T17:14:57Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "052edb5d-9ed3-4921-858e-1683de560721",
        "parentId" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "authorId" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "body" : "I agree. Will do that.",
        "createdAt" : "2019-11-26T20:54:10Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "tags" : [
        ]
      },
      {
        "id" : "b32459a1-0142-45b4-b2db-a37c09ae14b9",
        "parentId" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "authorId" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "body" : "Btw do you want negative tests for all these tests? or would adding one or two cases suffice?",
        "createdAt" : "2019-11-27T19:14:50Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "tags" : [
        ]
      },
      {
        "id" : "f7d6a2cf-952b-4db8-983b-7f47a39239a9",
        "parentId" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "I think two is good enough.",
        "createdAt" : "2019-11-27T20:35:14Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "5908bdee-4b8e-4074-bbac-1ebb1e6fc248",
        "parentId" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "authorId" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "body" : "The negative tests I added may a too detailed. Please let me know if this is what you expect or would just asserting that AlgebraicSimplifier change hasn't kicked in is enough?(`ASSERT_FALSE(AlgebraicSimplifier(default_options_).Run(m.get()).ValueOrDie());`)",
        "createdAt" : "2019-11-27T21:24:38Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "f5ab3aa4-6485-4b22-bd3b-5e0b0fefe39b",
        "tags" : [
        ]
      },
      {
        "id" : "3a6af337-369c-4d4c-a460-b179b83ca2f2",
        "parentId" : "b9c6de62-f8fb-48b1-a7d8-d2bb54a1133c",
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "Checking the pass return false is good enough here.",
        "createdAt" : "2019-11-27T21:45:47Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a26afaa73334e0b2cb0f324ae2f11b575fec22ce",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +5826,5830 @@}\n\nTEST_F(AlgebraicSimplifierTest, RsqrtOfRPower) {\n  const char* kModuleStr = R\"(\n    HloModule m"
  },
  {
    "id" : "f34a34eb-7ba8-4e19-b592-91cced28ce59",
    "prId" : 34284,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34284#pullrequestreview-323957537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f23dc160-0add-4498-94f5-49f9b2dcc3c9",
        "parentId" : null,
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "I think ASSERT_FALSE is enough, no need to check for abs.",
        "createdAt" : "2019-11-27T21:39:16Z",
        "updatedAt" : "2019-12-12T04:54:38Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a26afaa73334e0b2cb0f324ae2f11b575fec22ce",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +6011,6015 @@  default_options_.set_cudnn_batchnorm_forward_training_metadata(\n      \"__cudnn$batchNormalizationForwardInference\");\n  ASSERT_FALSE(AlgebraicSimplifier(default_options_).Run(m.get()).ValueOrDie());\n  EXPECT_NE(FindInstruction(m.get(), HloOpcode::kAbs), nullptr);\n}"
  },
  {
    "id" : "cd303123-dbdc-47bd-a33e-ce7b53131493",
    "prId" : 30170,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/30170#pullrequestreview-261208288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc63c04b-98f6-46fd-9f31-f7a0656418e6",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Could we use a FileCheck (https://llvm.org/docs/CommandGuide/FileCheck.html) style-test here, cf. gemm_rewriter_test for example?",
        "createdAt" : "2019-06-26T17:41:10Z",
        "updatedAt" : "2019-07-09T06:22:47Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "02f98c24-a343-417c-8eeb-15d6c4bd7ef2",
        "parentId" : "bc63c04b-98f6-46fd-9f31-f7a0656418e6",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "ok",
        "createdAt" : "2019-07-11T10:29:47Z",
        "updatedAt" : "2019-07-11T10:29:47Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      },
      {
        "id" : "80484022-6454-43ff-9eb7-cbae37406bb8",
        "parentId" : "bc63c04b-98f6-46fd-9f31-f7a0656418e6",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "in retrospect i don't agree with your request.  there are no other examples where this is done, including in tests which have been added to this file since this pull request was opened.  See `RemainderOfNPlusIotaOverflow` or `RepeatedRemainder` for examples.",
        "createdAt" : "2019-07-12T11:39:42Z",
        "updatedAt" : "2019-07-12T11:40:40Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      }
    ],
    "commit" : "5da31a1a7602a468367c539e6bf05038c9df2831",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +5471,5475 @@\n  // Verify that the default is to re-write\n  TF_ASSERT_OK_AND_ASSIGN(auto m1, ParseAndReturnVerifiedModule(kModuleStr));\n  ASSERT_TRUE(AlgebraicSimplifier(default_options_).Run(m1.get()).ValueOrDie());\n  EXPECT_THAT(m1->entry_computation()->root_instruction(),"
  },
  {
    "id" : "d0e613c3-8af5-41e4-97af-51e15aeebcbf",
    "prId" : 30170,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/30170#pullrequestreview-261208288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4f32a4-259e-4f51-97c9-9ca913dbed3a",
        "parentId" : null,
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "I would also add a FileCheck-style test here, to compare and contrast the resulting HLO with an without rewriting",
        "createdAt" : "2019-06-26T17:42:44Z",
        "updatedAt" : "2019-07-09T06:22:47Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "ed98f740-eaab-4768-af14-bcc341b75a7a",
        "parentId" : "dc4f32a4-259e-4f51-97c9-9ca913dbed3a",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "will do",
        "createdAt" : "2019-07-11T10:29:33Z",
        "updatedAt" : "2019-07-11T10:29:33Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      },
      {
        "id" : "bd9074e9-4c1d-4301-928c-87e8a405ce59",
        "parentId" : "dc4f32a4-259e-4f51-97c9-9ca913dbed3a",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "are you suggesting that it does more than verify that the protobuf strings are different?  there is no precedent for doing checks of the sort that you are asking for in the XLA tests.  however - it would be easy to check that the 'ToString' versions of the module are different.",
        "createdAt" : "2019-07-12T11:16:03Z",
        "updatedAt" : "2019-07-12T11:16:03Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      },
      {
        "id" : "b851ba61-97c0-4c24-a082-07e186b98b93",
        "parentId" : "dc4f32a4-259e-4f51-97c9-9ca913dbed3a",
        "authorId" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "body" : "see comment above.  i don't think that adding an Hlo string check makes sense when all of the other tests don't follow the same pattern.",
        "createdAt" : "2019-07-12T11:40:26Z",
        "updatedAt" : "2019-07-12T11:40:40Z",
        "lastEditedBy" : "8b6d0937-a9aa-4efc-8d2e-f3224f679760",
        "tags" : [
        ]
      }
    ],
    "commit" : "5da31a1a7602a468367c539e6bf05038c9df2831",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +5477,5481 @@\n  // Verify that we can disable the re-write\n  AlgebraicSimplifierOptions opts = default_options_;\n  opts.set_enable_dot_to_multiply_rewrite(false);\n  TF_ASSERT_OK_AND_ASSIGN(auto m2, ParseAndReturnVerifiedModule(kModuleStr));"
  }
]