[
  {
    "id" : "627c0ed6-387a-421b-ac62-ce5fa1bc785c",
    "prId" : 23268,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23268#pullrequestreview-168622968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f90d856-4996-4d4a-90d1-7a56d0d9febf",
        "parentId" : null,
        "authorId" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "body" : "How about\r\n\r\n```\r\nbool reversed = window.dimensions()[0].window_reversal();\r\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal() == reversed; }));\r\n```\r\n\r\nOr less efficient but perhaps simpler and without a crash on a window with 0 dimensions\r\n\r\n```\r\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal(); }) ||\r\n       absl::c_none_of(...);\r\n```",
        "createdAt" : "2018-10-25T23:13:50Z",
        "updatedAt" : "2018-10-25T23:52:11Z",
        "lastEditedBy" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "013d74dd7e96b96decccc059f9bdf2f2b01348c5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +190,194 @@    return true;\n  }\n  bool reversed = window.dimensions()[0].window_reversal();\n  return std::all_of(window.dimensions().begin(), window.dimensions().end(),\n                     [&](const WindowDimension& dim) {"
  },
  {
    "id" : "0e877be7-c220-4c2e-a19c-c6b220eee9ab",
    "prId" : 23268,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/23268#pullrequestreview-168637770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b076156-5122-4768-ae09-b56687e1c38f",
        "parentId" : null,
        "authorId" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "body" : "Nit, would prefer `absl::c_all_of` if that's possible?  Lives in `absl/algorithm/container.h`.  Otherwise LGTM.",
        "createdAt" : "2018-10-26T00:17:07Z",
        "updatedAt" : "2018-10-26T00:17:07Z",
        "lastEditedBy" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "tags" : [
        ]
      },
      {
        "id" : "44892b68-a7fb-4ce3-aa8c-1713d10b479d",
        "parentId" : "3b076156-5122-4768-ae09-b56687e1c38f",
        "authorId" : "580dea2d-1ca5-4d1c-a16a-a712c6a14b61",
        "body" : "Sure, I just figured I'd align it with the rest of this file, which all use `std::all_of`. Alternative, I can push a prep commit to this PR that switches those over also.",
        "createdAt" : "2018-10-26T00:19:41Z",
        "updatedAt" : "2018-10-26T00:19:41Z",
        "lastEditedBy" : "580dea2d-1ca5-4d1c-a16a-a712c6a14b61",
        "tags" : [
        ]
      },
      {
        "id" : "22f8d61a-f944-41ef-a331-7cdfa2c1e7a6",
        "parentId" : "3b076156-5122-4768-ae09-b56687e1c38f",
        "authorId" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "body" : "Oh, I didn't look at the rest of the file!  As you have it is fine.  I thought I changed all of them to c_foo at one point, but maybe some new ones snuck in!\r\n\r\nI'd certainly take the cleanup patch, but it's also easy for me to do it internally.",
        "createdAt" : "2018-10-26T00:35:40Z",
        "updatedAt" : "2018-10-26T00:35:41Z",
        "lastEditedBy" : "845afb08-ba85-462c-92e8-305877b05a5d",
        "tags" : [
        ]
      },
      {
        "id" : "599dd896-2727-44ce-b84c-561e593accea",
        "parentId" : "3b076156-5122-4768-ae09-b56687e1c38f",
        "authorId" : "580dea2d-1ca5-4d1c-a16a-a712c6a14b61",
        "body" : "Yeah, why don't you do it internally. Getting PRs through always takes a few rounds through CI.",
        "createdAt" : "2018-10-26T00:37:11Z",
        "updatedAt" : "2018-10-26T00:37:11Z",
        "lastEditedBy" : "580dea2d-1ca5-4d1c-a16a-a712c6a14b61",
        "tags" : [
        ]
      }
    ],
    "commit" : "013d74dd7e96b96decccc059f9bdf2f2b01348c5",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +191,195 @@  }\n  bool reversed = window.dimensions()[0].window_reversal();\n  return std::all_of(window.dimensions().begin(), window.dimensions().end(),\n                     [&](const WindowDimension& dim) {\n                       return dim.window_reversal() == reversed;"
  }
]