[
  {
    "id" : "998a13a7-72f8-4555-b50b-99b22231a625",
    "prId" : 46675,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46675#pullrequestreview-577809726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c61e78c-cb95-42a4-877e-a8e1ada945e0",
        "parentId" : null,
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "Can you please document what this routine does?\r\nFrom what I can see in this PR, DebugString(const std::vector<CType>& vector) is use to print a vector of float or int, I don't quite understand why we need DebugString(const CType& el).",
        "createdAt" : "2021-01-26T17:28:18Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "5ca23906-6c01-478b-a4e5-883dd41df86a",
        "parentId" : "5c61e78c-cb95-42a4-877e-a8e1ada945e0",
        "authorId" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "body" : "> Can you please document what this routine does?\r\n\r\nDone\r\n\r\n> From what I can see in this PR, DebugString(const std::vector& vector) is use to print a vector of float or int, I don't quite understand why we need `DebugString(const CType& el)`.\r\n\r\nThese two functions can convert together a `vector<int/float>` to string you're right. But the reason I need these two function is because the recursion mechanism allow me to convert nested vectors: `vector<vector<vector<int/float>>>`. And since you can't really easily determine at runtime if X is of type numerical or vector in C++ (at least not any way I know of), I use recursion to basically go around that issue.",
        "createdAt" : "2021-01-27T22:50:42Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0048c816d03a87ef764cc978728546a67bf5902a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +88,92 @@    >::type\n>\nstring DebugString(const CType& el) {\n  string el_str = std::to_string(el);\n  // Prettify std::to_string which can sometimes returns 1.50000 instead of 1.5."
  },
  {
    "id" : "39ceba53-2411-4b80-b094-bf794db44a77",
    "prId" : 46675,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/46675#pullrequestreview-580964338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e13e3e61-a259-4c3a-b730-3e8395a62367",
        "parentId" : null,
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "Can you explain what does char '0' indicate? this line find the last not '0', and erase what goes after it.",
        "createdAt" : "2021-01-28T04:10:47Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "b0fca449-967f-4f52-8776-af92bea12355",
        "parentId" : "e13e3e61-a259-4c3a-b730-3e8395a62367",
        "authorId" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "body" : "basically this is line is here to \"prettify\" `std::to_string` which can sometimes returns : `1.50000000` instead of `1.5`.\r\nSo in short this line remove trailing `0s` in a number represented as string",
        "createdAt" : "2021-01-28T20:28:06Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "tags" : [
        ]
      },
      {
        "id" : "6e2360cd-2e49-416a-8caf-432486ed2168",
        "parentId" : "e13e3e61-a259-4c3a-b730-3e8395a62367",
        "authorId" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "body" : "Can you add this explanation as a comment here?",
        "createdAt" : "2021-01-28T20:44:04Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "90c49754-7917-45e3-8dd2-8e09527f3d4c",
        "tags" : [
        ]
      },
      {
        "id" : "ffa3f5ca-066f-45fe-89ca-e6d5ccaa02d4",
        "parentId" : "e13e3e61-a259-4c3a-b730-3e8395a62367",
        "authorId" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "body" : "Sure :) Fixed",
        "createdAt" : "2021-02-02T03:50:39Z",
        "updatedAt" : "2021-02-02T07:46:35Z",
        "lastEditedBy" : "7a011a45-bec1-4f51-b4ca-ba0fca447df9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0048c816d03a87ef764cc978728546a67bf5902a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +92,96 @@  // Prettify std::to_string which can sometimes returns 1.50000 instead of 1.5.\n  // In short it removes trailing 0s in a string-formatted number.\n  el_str.erase(el_str.find_last_not_of('0') + 1, std::string::npos);\n  return el_str;\n}"
  }
]