[
  {
    "id" : "f9c831ef-a013-4bc7-82ec-7a7583f52cba",
    "prId" : 9782,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21c8b62e-edd2-4c6b-aa65-4cd72a9b7d08",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "nit. can you fix indentation.\n",
        "createdAt" : "2016-06-23T17:02:25Z",
        "updatedAt" : "2016-06-23T17:02:25Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a81bf4083907e52f615cb3da8761db70342d3819",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +91,95 @@\t\tcredentials?: Credentials;\n\t\tregion?: string;\n        accessKeyId: string;\n        secretAccessKey: string;\n\t\tcomputeChecksums?: boolean;"
  },
  {
    "id" : "8fa29a5b-53cd-4de8-85a7-f623954f1774",
    "prId" : 9886,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddb5687e-94ec-4bae-b3d1-65e434700e04",
        "parentId" : null,
        "authorId" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "body" : "Same here\n",
        "createdAt" : "2016-06-30T15:26:42Z",
        "updatedAt" : "2016-06-30T15:48:19Z",
        "lastEditedBy" : "d6f4bc0a-728d-4289-8443-0dd8f532a636",
        "tags" : [
        ]
      }
    ],
    "commit" : "52378dd55aaa0d8538371fe27aedfebb6cb923c5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +155,159 @@\texport class S3 {\n        constructor(options?: any);\n        getObject(params: s3.GetObjectRequest, callback: (err: Error, data: any) => void): void;\n        putObject(params: s3.PutObjectRequest, callback: (err: Error, data: any) => void): void;\n        deleteObject(params: s3.DeleteObjectRequest, callback: (err: Error, data: any) => void): void;"
  },
  {
    "id" : "5f92db4c-5bfa-4f05-afa5-9eb31e0efe70",
    "prId" : 10468,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abba594e-ef31-4fb0-9a4e-fda59c87d045",
        "parentId" : null,
        "authorId" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "body" : "If `Exists` is false, the other attributes will not be specified.\n",
        "createdAt" : "2016-08-05T02:26:28Z",
        "updatedAt" : "2016-08-05T03:10:01Z",
        "lastEditedBy" : "ecd10855-cf57-4c50-96df-e9f98e5b83c8",
        "tags" : [
        ]
      },
      {
        "id" : "29eaf3d2-466c-409f-a0c5-4c81f9fcef7a",
        "parentId" : "abba594e-ef31-4fb0-9a4e-fda59c87d045",
        "authorId" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "body" : "It would be good to note that in a jsdoc comment.\n",
        "createdAt" : "2016-08-10T16:46:49Z",
        "updatedAt" : "2016-08-10T16:46:49Z",
        "lastEditedBy" : "ad9f05a4-d336-4549-96b0-f8a3b95c9764",
        "tags" : [
        ]
      }
    ],
    "commit" : "3aac49ea7ee2e6d15d3dcbc45f4e6bb0af544517",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +359,363 @@          AttributeValueList?: any[];\n          ComparisonOperator?: _DDBDC_ComparisonOperator;\n          Exists: boolean;\n          Value?: any;\n        }"
  },
  {
    "id" : "abf77b09-1ca6-406e-b8ec-881e5b3d41df",
    "prId" : 11923,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/11923#pullrequestreview-4136601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a46fbd05-fcce-4391-a068-bb0c8d13b6ad",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "Can we use overload?\nlike this.\n\n```\nputObject(params: s3.PutObjectRequest, callback: (err: Error, data: any) => void): void;\nputObject(params: s3.PutObjectRequest): {promise:Promise<any>;};\n```\n",
        "createdAt" : "2016-10-12T13:28:20Z",
        "updatedAt" : "2016-10-28T15:51:38Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      },
      {
        "id" : "05e8cdbf-cbcd-42c1-a4f4-7094248fc4dd",
        "parentId" : "a46fbd05-fcce-4391-a068-bb0c8d13b6ad",
        "authorId" : "1b31f8c7-130c-4d23-a72f-4b47a95c90d4",
        "body" : "I like overload, but was trying to be consistent with s3.GetObjectRequest. I suggest another PR that refactors out the use of any return type just as you have described. I have never committed here and do not know what would be preferred.\n",
        "createdAt" : "2016-10-13T18:31:13Z",
        "updatedAt" : "2016-10-28T15:51:38Z",
        "lastEditedBy" : "1b31f8c7-130c-4d23-a72f-4b47a95c90d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "200e2a243b6baa36ccb8113fc6664e1eec10f970",
    "line" : null,
    "diffHunk" : "@@ -1,1 +383,387 @@\n    getObject(params: s3.GetObjectRequest, callback?: (err: Error, data: any) => void): any;\n    putObject(params: s3.PutObjectRequest, callback?: (err: Error, data: any) => void): any;\n    copyObject(params: s3.CopyObjectRequest, callback?: (err: Error, data: any) => void): any;\n    deleteObject(params: s3.DeleteObjectRequest, callback: (err: Error, data: any) => void): void;"
  },
  {
    "id" : "88c05f13-4775-4f3a-9ee5-629454d967a1",
    "prId" : 12169,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12169#pullrequestreview-5748896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48f38c62-bc3f-4783-85a6-697c9adbc041",
        "parentId" : null,
        "authorId" : "63d3fa56-c450-43e6-898b-20971efefd6d",
        "body" : "@midknight41 I created a separate request interface for copy\n",
        "createdAt" : "2016-10-25T21:34:25Z",
        "updatedAt" : "2016-10-26T19:47:09Z",
        "lastEditedBy" : "63d3fa56-c450-43e6-898b-20971efefd6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "203702162f18de2375de93ab2f8e04860ec0870b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +383,387 @@\n    getObject(params: s3.GetObjectRequest, callback?: (err: Error, data: any) => void): any;\n    copyObject(params: s3.CopyObjectRequest, callback?: (err: Error, data: any) => void): any;\n    putObject(params: s3.PutObjectRequest, callback: (err: Error, data: any) => void): void;\n    deleteObject(params: s3.DeleteObjectRequest, callback: (err: Error, data: any) => void): void;"
  }
]