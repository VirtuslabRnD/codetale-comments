[
  {
    "id" : "ba6c4552-7869-44bb-a668-daeb28fec0ff",
    "prId" : 12197,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12197#pullrequestreview-644823741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1554d01-a592-4686-aa7a-7399e4408ba3",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Just curious: what is the purpose of `|| true`?",
        "createdAt" : "2021-04-26T15:04:35Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "0109fc5d-19b5-4732-a40a-e4677e7c3750",
        "parentId" : "e1554d01-a592-4686-aa7a-7399e4408ba3",
        "authorId" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "body" : "> Just curious: what is the purpose of `|| true`?\r\n\r\nTo manually verify no unintentional errors (typo's, etc), I temporarily add a couple of settings to the top of the file and manually exercise the script:\r\n```bash\r\nset -o errexit\r\nset -o nounset\r\n```\r\nWith `nounset`, it becomes necessary to deal with legitimately unset variables:\r\nAny variable that is validly unset changed from `\"$DEBUG\"` to `\"${DEBUG-}\"`, and\r\nunsetting of variables followed by `|| true`.\r\n\r\nWe could make the more strict temporary settings permanent, but there might be a risk of introducing a needless crash in some environment.\r\n",
        "createdAt" : "2021-04-26T15:37:42Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "tags" : [
        ]
      }
    ],
    "commit" : "48262d06a07c1e94c135812cdfbc90ae2389d618",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\nwith_compiler=false             # to add compiler jars to repl classpath\nlet class_path_count=0 || true  # count classpath args, warning if more than 1\nsave_compiled=false             # to save compiled script jar in script directory\nCLASS_PATH=\"\" || true           # scala classpath"
  },
  {
    "id" : "263b3442-24dd-40cd-8d4a-535a125cb6e9",
    "prId" : 12197,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12197#pullrequestreview-644837064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cbcd357-1827-4508-ba55-09de84674f0f",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Same question as above regarding `|| true`?",
        "createdAt" : "2021-04-26T15:04:59Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "63266a4c-d975-49b1-8e32-5aad6d13229d",
        "parentId" : "5cbcd357-1827-4508-ba55-09de84674f0f",
        "authorId" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "body" : "So we can temporarily do manual testing with these two settings:\r\n```bash\r\nset -o nounset\r\nset -o errexit\r\n```\r\nTo prevent unsetting of variables from being an error, they become `CLASS_PATH=\"\" || true`.\r\nChanging `\"$PROG_HOME\"` to `\"${PROG_HOME-}\" is for the same reason.\r\n\r\n",
        "createdAt" : "2021-04-26T15:48:59Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "tags" : [
        ]
      }
    ],
    "commit" : "48262d06a07c1e94c135812cdfbc90ae2389d618",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@let class_path_count=0 || true  # count classpath args, warning if more than 1\nsave_compiled=false             # to save compiled script jar in script directory\nCLASS_PATH=\"\" || true           # scala classpath\n\n# Little hack to check if all arguments are options"
  },
  {
    "id" : "55eccba2-edaa-4ae4-ab3b-35da4c2c12a4",
    "prId" : 12197,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12197#pullrequestreview-645131164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "283cdf39-7b84-480b-8972-498af5bdff74",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Thanks for the explanation above, @philwalk . I'm wondering do we need a `|| true` here and line 74?",
        "createdAt" : "2021-04-26T15:51:00Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "c845630e-cf74-459f-80ed-66d8bec143ba",
        "parentId" : "283cdf39-7b84-480b-8972-498af5bdff74",
        "authorId" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "body" : "line 74 is okay because `class_path_count` is only zero on line 50, and always > 0 on line 74.\r\nI did discover some other places that did need to be changed:\r\n\r\nreference to residual_args in line 160:\r\n```bash\r\n  if [[ $options_indicator -eq 0 && \"${residual_args[@]-}\" == \"\" ]]; then\r\n```\r\n\r\nchange `\"$DEBUG\"` to `${DEBUG-}\"` in line 227:\r\n```bash\r\n  eval \"\\\"$JAVACMD\\\"\" \"${DEBUG-}\"  \"-classpath \\\"$repl_cparg\\\"\" \"${java_args[@]}\" \"${residual_args[@]}\"\r\n```",
        "createdAt" : "2021-04-26T16:37:24Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "tags" : [
        ]
      },
      {
        "id" : "e2098b6a-c82a-4426-8404-6c730379e399",
        "parentId" : "283cdf39-7b84-480b-8972-498af5bdff74",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Thanks for the explanation, @philwalk. Once the two issues you mentioned are addressed, I think we can merge the PR.",
        "createdAt" : "2021-04-26T21:27:16Z",
        "updatedAt" : "2021-04-27T13:35:13Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "48262d06a07c1e94c135812cdfbc90ae2389d618",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +79,83 @@      # hashbang can combine args, e.g. \"-classpath 'lib/*'\"\n      CLASS_PATH=\"${1#* *}${PSEP}\"\n      let class_path_count+=1\n      shift\n      ;;"
  },
  {
    "id" : "c99363da-6742-42d3-9b70-219f75ac76db",
    "prId" : 11379,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11379#pullrequestreview-589456132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3667b22-4494-4c70-97a5-45efb1a04762",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "This conflicts with the definition of `isScript` in `SourceFile` which says that a script must not have an extension `*.scala`.",
        "createdAt" : "2021-02-12T12:01:37Z",
        "updatedAt" : "2021-02-14T23:52:54Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "f8c1f233-6453-4bc3-a61f-43ad6a138532",
        "parentId" : "c3667b22-4494-4c70-97a5-45efb1a04762",
        "authorId" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "body" : "good catch, that was intended for a possibly slight performance gain, but might not have actually provided one anyway.",
        "createdAt" : "2021-02-12T13:21:38Z",
        "updatedAt" : "2021-02-14T23:52:54Z",
        "lastEditedBy" : "d9be7a70-656f-4121-8f5a-8882cb67fa4c",
        "tags" : [
        ]
      }
    ],
    "commit" : "be1072fc5e186d9393d103983c2bc8c269fc806e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +95,99 @@    *)\n      if [ $execute_script == false ]; then\n        # is a script if extension .scala or .sc or if has scala hash bang\n        if [[ -e \"$1\" && (\"$1\" == *.scala || \"$1\" == *.sc || -f \"$1\" && `head -n 1 -- \"$1\" | grep '#!.*scala'`) ]]; then\n          execute_script=true"
  }
]