[
  {
    "id" : "5b5c3864-fad0-4455-b701-c58ed1a4de90",
    "prId" : 1550,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18ab7bca-a30e-4690-8a93-41026d36d3e8",
        "parentId" : null,
        "authorId" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "body" : "Looks like incorrect order of definitions.\n1. `onReject` will always be `(error: any) => void`. So order should be `Thanable<U>`, `U`, `void`.\n2. `onReject` parameter should be optional only on less-specific version (which returns `void`)\n3. `onFulfill` is also optional parameter\n4. Typings should work correctly even if `onFulfill` argument would be `undefined`.\n",
        "createdAt" : "2014-01-16T09:13:18Z",
        "updatedAt" : "2014-01-18T11:01:40Z",
        "lastEditedBy" : "1e1dcea1-00d3-4083-8360-099f29168ec2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b6ca433a2058cd3493ce2afeca2d87baeb71f2a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +11,15 @@    then<U>(onFulfill?: (value: R) => U, onReject?: (error: any) => U): Thenable<U>;\n\t\n}\n\ndeclare class Promise<R> implements Thenable<R> {"
  }
]