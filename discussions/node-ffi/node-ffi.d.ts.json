[
  {
    "id" : "2ce2bfad-92f8-4134-98dd-247b2d8a9fa4",
    "prId" : 1301,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d4900c5-b43e-4785-8fb2-149e3d359786",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Good to merge. As a code review it might be worthwhile to declare an interface if return type of all these functions is the same.\n",
        "createdAt" : "2013-11-20T20:48:40Z",
        "updatedAt" : "2013-11-20T20:48:40Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "dcb063aa-4b99-46d2-93d9-48e92ec52eef",
        "parentId" : "1d4900c5-b43e-4785-8fb2-149e3d359786",
        "authorId" : "99e495a3-a2ac-41b0-9a18-a5dbc71287fe",
        "body" : "Sadly, it's not possible w/o using global interface.\n",
        "createdAt" : "2013-11-20T21:37:12Z",
        "updatedAt" : "2013-11-20T21:37:12Z",
        "lastEditedBy" : "99e495a3-a2ac-41b0-9a18-a5dbc71287fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "438a67aac3c47d458bc76ac7e56c4524b8679f6c",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +449,453 @@         */\n        untilZeros(buffer: NodeBuffer): { [i: number]: T; length: number; toArray(): T[];\n            toJSON(): T[]; inspect(): string; buffer: NodeBuffer; ref(): NodeBuffer; };\n\n        new (length?: number): { [i: number]: T; length: number; toArray(): T[];"
  },
  {
    "id" : "a29741be-504e-44c2-9234-efacf0b4fbcf",
    "prId" : 1301,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84b82881-d87d-467f-b9d4-36251e05fdd5",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "In you declare it here it will not be global. It will be scoped by module \"ref-array\"\n",
        "createdAt" : "2013-11-20T21:55:47Z",
        "updatedAt" : "2013-11-20T21:55:47Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "1e51969d-48b0-424f-a2e0-ced38565863d",
        "parentId" : "84b82881-d87d-467f-b9d4-36251e05fdd5",
        "authorId" : "99e495a3-a2ac-41b0-9a18-a5dbc71287fe",
        "body" : "``` sh\ntsc test.ts --m commonjs\n/tmp/test.ts(4,15): error TS2057: Return type of method from exported interface has or is using private type 'Foo'.\n```\n\n`cat test.ts`:\n\n``` javascript\ndeclare module \"test\" {\n    interface Foo {}\n    interface Bar {\n        fn(): Foo;\n    }\n\n    export = Bar;\n}\n```\n",
        "createdAt" : "2013-11-21T12:06:30Z",
        "updatedAt" : "2013-11-21T12:06:30Z",
        "lastEditedBy" : "99e495a3-a2ac-41b0-9a18-a5dbc71287fe",
        "tags" : [
        ]
      },
      {
        "id" : "0a8de05c-f6b9-439f-91c7-04d9d5795165",
        "parentId" : "84b82881-d87d-467f-b9d4-36251e05fdd5",
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "yes, this isn't allowed when you have single export, in this case `export = Bar`\n",
        "createdAt" : "2013-11-22T01:37:17Z",
        "updatedAt" : "2013-11-22T01:37:17Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "438a67aac3c47d458bc76ac7e56c4524b8679f6c",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +436,440 @@declare module \"ref-array\" {\n    import ref = require('ref');\n\n    interface ArrayType<T> extends ref.Type {\n        BYTES_PER_ELEMENT: number;"
  }
]