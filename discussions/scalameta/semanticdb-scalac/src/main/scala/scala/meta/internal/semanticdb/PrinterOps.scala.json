[
  {
    "id" : "24944a8b-6595-42b1-b75f-792bfa52e77c",
    "prId" : 1102,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1102#pullrequestreview-60156940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9200024b-ff08-444d-90e1-12c04f2b7bf4",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Why's that? We can use Type.Bounds here, I think, wrapped in a Type.Lambda if necessary.",
        "createdAt" : "2017-09-01T14:27:06Z",
        "updatedAt" : "2017-09-01T14:31:20Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "adc6d508-4150-454c-b099-4ed188f13a7e",
        "parentId" : "9200024b-ff08-444d-90e1-12c04f2b7bf4",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I thought it would be best to skip these since I have no need for them at the moment, we can handle them later if they turn out to be useful.",
        "createdAt" : "2017-09-01T14:48:17Z",
        "updatedAt" : "2017-09-01T14:48:17Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b41e59222e3ba83cdca06666f60bde812162ff16",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +12,16 @@\n  def showSynthetic(tpe: g.Type): AttributedSynthetic = tpe match {\n    // Skip signature for abstract type members, e.g. type T <: Int\n    case g.TypeBounds(_, _) => AttributedSynthetic.empty\n    case _ => showSynthetic(g.TypeTree(tpe))"
  },
  {
    "id" : "6c61bc01-e61c-4055-9599-086713bcb89e",
    "prId" : 1102,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1102#pullrequestreview-60157262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89553687-2552-4296-a7bf-2ce59dfdca92",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "How about `: $result`?",
        "createdAt" : "2017-09-01T14:28:02Z",
        "updatedAt" : "2017-09-01T14:31:20Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "2781cc94-4e59-48d6-be63-bb3d4ec494eb",
        "parentId" : "89553687-2552-4296-a7bf-2ce59dfdca92",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Good idea, but it seems to trigger for `val`s too. I propose we keep it unchanged since this is enough to get ExplicitReturnTypes working for defs, but consider adding this later for `def`s.",
        "createdAt" : "2017-09-01T14:47:16Z",
        "updatedAt" : "2017-09-01T14:47:16Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "c87bca58-0399-4832-9fe7-bd9cd93ea466",
        "parentId" : "89553687-2552-4296-a7bf-2ce59dfdca92",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Should I open an issue for this? I agree the denotation.signature for nullary methods should be `Type.Method(Nil, _)`",
        "createdAt" : "2017-09-01T14:49:20Z",
        "updatedAt" : "2017-09-01T14:49:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b41e59222e3ba83cdca06666f60bde812162ff16",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +369,373 @@          this.printType(result)\n        case NullaryMethodType(result) =>\n          printType(result)\n        case PolyType(tparams, result) =>\n          wrapped(tparams, \"[\", \"] => \")(s => this.print(s.decodedName))"
  }
]