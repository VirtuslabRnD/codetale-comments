[
  {
    "id" : "ac7084b3-b6c9-4d6f-aa8a-fb73a5a53553",
    "prId" : 1145,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1145#pullrequestreview-74085417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59528d46-2de5-437b-a682-f391dbffadf3",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "@fikovnik Anything else you can recommend for future contributors? Or any other question you'd like to see addressed here? :) ",
        "createdAt" : "2017-11-03T11:55:00Z",
        "updatedAt" : "2017-11-06T13:15:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "9b63ee12-6e2e-452c-ab20-ef1df3a8be74",
        "parentId" : "59528d46-2de5-437b-a682-f391dbffadf3",
        "authorId" : "dae5ae43-4a0f-4274-9f25-c030649e038e",
        "body" : "You guys actually did really nice set up. I used did exactly that - started with a simple copy of `SemanticSuite` (added a `println` of the obtained variable in `synthetics`) and ran sbt with `-jvmdebug` with attached debuggr. It was very smooth!\r\n\r\nSorry, I did not realized the alphabetic naming of the test objects :-|",
        "createdAt" : "2017-11-03T13:54:26Z",
        "updatedAt" : "2017-11-06T13:15:24Z",
        "lastEditedBy" : "dae5ae43-4a0f-4274-9f25-c030649e038e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a56505f235f79dcfac5ed4dfde77e17b37f00263",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +4,8 @@import scala.meta.internal.semanticdb.SemanticdbMode\n\n// Contributing tips:\n// - Create another suite like YYY.scala that extends DatabaseSuite,\n//   add YYY.scala to your .gitignore, and run `> ~semanticdbScala/testOnly *YYY`."
  },
  {
    "id" : "50413759-8934-41e3-bdd3-d819038988b7",
    "prId" : 1145,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1145#pullrequestreview-74134115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e508d8d-14ed-4710-86fe-9ee6cee96bf9",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Great idea! 👍 ",
        "createdAt" : "2017-11-03T16:15:25Z",
        "updatedAt" : "2017-11-06T13:15:24Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a56505f235f79dcfac5ed4dfde77e17b37f00263",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +4,8 @@import scala.meta.internal.semanticdb.SemanticdbMode\n\n// Contributing tips:\n// - Create another suite like YYY.scala that extends DatabaseSuite,\n//   add YYY.scala to your .gitignore, and run `> ~semanticdbScala/testOnly *YYY`."
  },
  {
    "id" : "6b7118b8-fae2-41a2-8922-7822f1fe1bb0",
    "prId" : 1109,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1109#pullrequestreview-60829710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4856d9b-1f90-4163-ac36-4956cea5541e",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Kudos @xeno-by for `targeted`, it's incredibly powerful in cases like this.",
        "createdAt" : "2017-09-06T07:59:39Z",
        "updatedAt" : "2017-09-06T07:59:40Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a04a8f459e11b3f8de89b21d4553599240f4855",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +867,871 @@      |  trait Foo\n      |  val x = new Foo {\n      |    val <<y>> = 2\n      |    def <<z>>[T](e: T) = e\n      |  }"
  },
  {
    "id" : "5f436f1e-8e3d-480a-b324-6f28feebfef3",
    "prId" : 1094,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1094#pullrequestreview-58886108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ef2597e-696d-4683-82bf-a7e7de31660d",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I like this name very much. Thank you, @olafurpg, @ShaneDelmore and @gabro!",
        "createdAt" : "2017-08-25T17:34:58Z",
        "updatedAt" : "2017-08-28T08:30:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "cf6f4206-4648-499e-bbba-90be44096ddc",
        "parentId" : "3ef2597e-696d-4683-82bf-a7e7de31660d",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I agree, very nice :) ",
        "createdAt" : "2017-08-28T08:27:39Z",
        "updatedAt" : "2017-08-28T08:30:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "1f5c5940-892d-4341-997c-e9991fd32d63",
        "parentId" : "3ef2597e-696d-4683-82bf-a7e7de31660d",
        "authorId" : "ee435ce0-4e9b-4dad-b7cc-9ac4ab481429",
        "body" : "💯 \r\n\r\nBe careful with the dryer 🤓 ",
        "createdAt" : "2017-08-28T08:48:21Z",
        "updatedAt" : "2017-08-28T08:48:21Z",
        "lastEditedBy" : "ee435ce0-4e9b-4dad-b7cc-9ac4ab481429",
        "tags" : [
        ]
      }
    ],
    "commit" : "200894e1656e1855c673f442ce23857245f2241b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +593,597 @@  )\n\n  synthetics(\n    \"\"\"|object s {\n       |  def apply() = 2"
  }
]