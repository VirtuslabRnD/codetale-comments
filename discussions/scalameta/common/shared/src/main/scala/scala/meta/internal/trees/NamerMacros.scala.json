[
  {
    "id" : "620396b8-fc0b-4f3f-bc2c-ad2a7c876e98",
    "prId" : 2211,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2211#pullrequestreview-563570881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "088ef26d-80ac-46c5-abe5-7f66c28743f8",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Why is `stubbedMembers` needed? I see that it's never really read.",
        "createdAt" : "2021-01-07T10:01:33Z",
        "updatedAt" : "2021-01-07T10:04:12Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "12f2d320-c5f4-45b3-b3b8-cc030295e71c",
        "parentId" : "088ef26d-80ac-46c5-abe5-7f66c28743f8",
        "authorId" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "body" : "to make sure that, for instance, `value` is not defined twice, since `extraStubs` are hardcoded to contain it. \r\n\r\nin the original code, `distinct` was used to remove duplicates between class parameters and extra stubs. but we also need to apply the same to extra abstract definitions as well.",
        "createdAt" : "2021-01-07T15:18:22Z",
        "updatedAt" : "2021-01-07T15:18:22Z",
        "lastEditedBy" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "tags" : [
        ]
      }
    ],
    "commit" : "16d2dfb7706536dd5558e243ccad360fcc94186e",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +73,77 @@      q\"throw new $UnsupportedOperationException($message)\"\n    }\n    val stubbedMembers = new mutable.HashSet[String]\n    def markStubbedMemberName(name: TermName): Boolean = stubbedMembers.add(name.toString)\n    def addStubbedMemberWithName(name: TermName): Unit ="
  },
  {
    "id" : "6767a52b-4ec9-4163-ac2e-6501b4d4142b",
    "prId" : 2211,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2211#pullrequestreview-563572971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27542ab1-28a8-4d57-88ac-614041915c05",
        "parentId" : null,
        "authorId" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "body" : "this is where this structure is used: when the method returns true, it means the value hadn't been seen before and can be stubbed.",
        "createdAt" : "2021-01-07T15:20:44Z",
        "updatedAt" : "2021-01-07T15:20:45Z",
        "lastEditedBy" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "tags" : [
        ]
      }
    ],
    "commit" : "16d2dfb7706536dd5558e243ccad360fcc94186e",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +74,78 @@    }\n    val stubbedMembers = new mutable.HashSet[String]\n    def markStubbedMemberName(name: TermName): Boolean = stubbedMembers.add(name.toString)\n    def addStubbedMemberWithName(name: TermName): Unit =\n      if (markStubbedMemberName(name)) qstats += q\"def $name = $stub\""
  }
]