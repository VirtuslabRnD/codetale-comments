[
  {
    "id" : "77a0b9cc-6da5-4f8c-a982-d3c87c2df18b",
    "prId" : 2027,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2027#pullrequestreview-418096449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad1221a-36cd-413d-abe5-a74a8a7c53df",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "This will change the check to accept everything as top level irrelevent of whether the dialect is set. ",
        "createdAt" : "2020-05-25T15:14:23Z",
        "updatedAt" : "2020-06-22T15:02:28Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "8bed0e0c-097d-4d10-81b0-62780601a51d",
        "parentId" : "dad1221a-36cd-413d-abe5-a74a8a7c53df",
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "yes, we don't have dialect here available",
        "createdAt" : "2020-05-26T08:51:53Z",
        "updatedAt" : "2020-06-22T15:02:28Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7ada7f7baf3d65abfdbedc5968db4feb477ab7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +161,165 @@      case _: Defn.Trait => true\n      case _: Defn.Object => true\n      case _: Defn.Def => true\n      case _: Defn.Given => true\n      case _: Defn.GivenAlias => true"
  },
  {
    "id" : "c87e4a2b-0b84-4ecb-b7f7-1f94e0a55676",
    "prId" : 2008,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2008#pullrequestreview-398823070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed598ca0-d4b7-4bbb-9800-e0c377d79d2f",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Shouldn't we also have an iterator here in order not to allocate a new list?",
        "createdAt" : "2020-04-22T16:48:43Z",
        "updatedAt" : "2020-04-28T14:12:15Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "15fdd82f-47e8-4b5f-82f1-6ed0130d8150",
        "parentId" : "ed598ca0-d4b7-4bbb-9800-e0c377d79d2f",
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "correct, changed :+1:",
        "createdAt" : "2020-04-23T07:20:58Z",
        "updatedAt" : "2020-04-28T14:12:15Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1eedb4ba2ce047aa874b408f69db9d8c51054e90",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +219,223 @@  def onlyLastParamCanBeRepeated(params: List[Term.Param]): Boolean = {\n    params.iterator\n      .take(params.length - 1)\n      .forall(p => p.is[Term.Param.Quasi] || !p.decltpe.exists(_.is[Type.Repeated]))\n  }"
  }
]