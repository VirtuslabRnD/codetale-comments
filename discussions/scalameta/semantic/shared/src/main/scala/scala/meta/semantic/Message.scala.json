[
  {
    "id" : "3099a00e-794c-4123-b7cd-7dd47842e491",
    "prId" : 808,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/808#pullrequestreview-35496634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4e37e39-00fd-49f4-9135-234d32a9b2aa",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I approve s/CompilerMessage/Message/ üëç much cleaner.\r\n\r\nHowever, I'm still not sold on the anchor encoding. For example, if Anchor was a Position.Range, I could use `Message` in the reporter api in scalafix (see https://github.com/scalacenter/scalafix/pull/118) and profit from `.formatMessage`\r\n\r\n```scala\r\n/path/to/bar:10 error: bad name!\r\nobject a\r\n       ^\r\n```\r\n\r\nSince Anchor is hardcoded to an AbsolutePath, it's not exactly clear if I can read the underlying file contents to  to create that formatted message.",
        "createdAt" : "2017-04-21T08:56:53Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "313a966a-4b99-4b6c-8df5-805c382874f0",
        "parentId" : "c4e37e39-00fd-49f4-9135-234d32a9b2aa",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "The problem with `Position.Range` is that it is tied to an `Input`, and that's a bit more than just `AbsolutePath`.\r\n\r\nupd. Oh wow, actually `Input` fits perfectly here. It doesn't have to be `Input.File` that simply wraps an absolute path, but can also be `Input.LabeledString` in which case it will embed the contents. While the usefulness of the latter is debatable (see #777), the flexibility of `Position.Range` is clear.",
        "createdAt" : "2017-04-27T23:52:35Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "5180ce3d-d1eb-4f00-ae70-f8453559dc0f",
        "parentId" : "c4e37e39-00fd-49f4-9135-234d32a9b2aa",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The fact that it's tied to an `Input` is exactly why I think it's a good idea. For example, `Anchor` does not include the file encoding like `Input.File`, which could be problematic in some cases.\r\n\r\n`Input.LabeledString` would be a perfect fit for a `metadoc` tool I want to write, which generates a static site from a Mirror and uses Scala.js for interactive code browsing and symbol search.",
        "createdAt" : "2017-04-29T11:05:12Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "601d21a1-a19c-4477-b44f-164f2b60bba6",
        "parentId" : "c4e37e39-00fd-49f4-9135-234d32a9b2aa",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Agreed.",
        "createdAt" : "2017-04-29T13:34:32Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac448f5c9b3250ede75f1d0a84fb0a036943da36",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@import org.scalameta.unreachable\n\n@data class Message(anchor: Anchor, severity: Severity, message: String) {\n  override def toString = syntax\n  def syntax = s\"[${severity.toString.toLowerCase}] ${anchor.syntax}: $message\""
  },
  {
    "id" : "68496bd1-d991-47c5-bd89-8b12465cc716",
    "prId" : 808,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/808#pullrequestreview-35250745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85923d8e-521b-46cf-83b0-d2f99afb565a",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Side note. It would be nice to either\r\n\r\n1. port these macro annotations to meta https://github.com/scalameta/scalameta/issues/735\r\n2. document when and how these macro annotations should be used (more than showing the expanded output like here https://github.com/scalameta/scalameta/blob/master/notes/ast.md)",
        "createdAt" : "2017-04-21T08:59:29Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "c706aa78-9686-41e3-8ce6-d74075dd4a49",
        "parentId" : "85923d8e-521b-46cf-83b0-d2f99afb565a",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Agreed.",
        "createdAt" : "2017-04-27T23:55:51Z",
        "updatedAt" : "2017-04-30T04:14:02Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac448f5c9b3250ede75f1d0a84fb0a036943da36",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@}\n\n@root trait Severity {\n  import Severity._\n  def id: Int = this match {"
  }
]