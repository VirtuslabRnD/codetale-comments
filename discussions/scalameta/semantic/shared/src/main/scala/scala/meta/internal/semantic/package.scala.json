[
  {
    "id" : "b53e3ca7-8909-44f3-bc2e-17ebf26fd6c2",
    "prId" : 988,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/988#pullrequestreview-48512726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89e09821-4358-4afc-80f6-67fce3ef6814",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I think we should either consistently get rid of vfs or consistently use it in both directions.",
        "createdAt" : "2017-07-07T03:32:06Z",
        "updatedAt" : "2017-07-07T03:42:02Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "488ac646810a094fdfc3a6ffa580539a7c79780a",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +32,36 @@        }\n      }\n    }\n\n    def toMeta(sourcepath: Option[Sourcepath]): m.Database = {"
  },
  {
    "id" : "1bd3e64e-fc58-4ce0-b4ed-95bbc9c3aeb1",
    "prId" : 988,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/988#pullrequestreview-48539373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03bdc4e3-ae03-4712-a053-ea7c86b1bd6f",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Let's first discuss the idea behind merging `toVfs` and `save`. Is that to save memory spent on precaching arrays of bytes? If yes, why not make `bytes` lazy?",
        "createdAt" : "2017-07-07T03:33:28Z",
        "updatedAt" : "2017-07-07T03:42:02Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "62ef2eaa-7bde-400b-b0ab-077586fa418a",
        "parentId" : "03bdc4e3-ae03-4712-a053-ea7c86b1bd6f",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "With the previous vfs design, we had `Array[Byte]` + `s.Database` + `m.Database` loaded into memory for all .semanticdb files at some point. This is prohibitively expensive when running large-scale analysis. We want to avoid materializing an `Array[Byte]` entirely. Protos can be loaded in a streaming fashion, tag by tag, and that's what this refactoring did. ",
        "createdAt" : "2017-07-07T07:50:11Z",
        "updatedAt" : "2017-07-07T07:50:11Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "488ac646810a094fdfc3a6ffa580539a7c79780a",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +32,36 @@        }\n      }\n    }\n\n    def toMeta(sourcepath: Option[Sourcepath]): m.Database = {"
  },
  {
    "id" : "cb65dc29-7d40-4762-b4cf-d77242725da7",
    "prId" : 953,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/953#pullrequestreview-46133118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f40ee6f-5181-4408-b64d-39ec0d165af6",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "What will this return on Windows?",
        "createdAt" : "2017-06-24T02:36:53Z",
        "updatedAt" : "2017-06-24T07:25:00Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "1ddbabf4-f79c-43e6-b971-a49435319a62",
        "parentId" : "4f40ee6f-5181-4408-b64d-39ec0d165af6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "A unix filename would have forward slashes /",
        "createdAt" : "2017-06-24T06:41:58Z",
        "updatedAt" : "2017-06-24T07:25:00Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "fb2fb153-5451-4ecd-b78a-67adfcf1e538",
        "parentId" : "4f40ee6f-5181-4408-b64d-39ec0d165af6",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "How would `c:\\foo.scala` be translated? Can we really say that `c:/foo.scala` is a unix path?",
        "createdAt" : "2017-06-24T14:32:17Z",
        "updatedAt" : "2017-06-24T14:32:17Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "c39256bf-cc0c-46c7-8f11-1eb4fdba3ae2",
        "parentId" : "4f40ee6f-5181-4408-b64d-39ec0d165af6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The path is relative at this point so it should not be a problem.",
        "createdAt" : "2017-06-24T20:18:15Z",
        "updatedAt" : "2017-06-24T20:18:15Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9d67bc28e8ca3c2fe0a496efabb43eb02a663ff",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +51,55 @@              sys.error(s\"bad database: unsupported input $other\")\n          }\n          val spath = PathIO.toUnix(splatformpath)\n          assert(spath.nonEmpty, s\"'$spath'.nonEmpty\")\n          val sdialect = {"
  }
]