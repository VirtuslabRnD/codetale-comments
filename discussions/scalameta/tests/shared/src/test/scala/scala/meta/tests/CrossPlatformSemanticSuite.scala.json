[
  {
    "id" : "ea6b28d8-db42-4176-9cad-8f5e70e04be7",
    "prId" : 1005,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1005#pullrequestreview-48692725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94d4c48c-e29f-4a08-bdae-d8acb91419c1",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I admit this is a bit awkward, any suggestion that doesn't go back to `Paths`?",
        "createdAt" : "2017-07-07T08:34:45Z",
        "updatedAt" : "2017-07-10T13:22:49Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "903ce35c-9f67-4f27-acff-7950594ed3d1",
        "parentId" : "94d4c48c-e29f-4a08-bdae-d8acb91419c1",
        "authorId" : "05699173-a301-4e02-a831-0dc655609bf3",
        "body" : "These are always a little awkward due to the fact the meaning changes before and after the =>\r\nBefore the => this is a classpath, but after, if the check is correct, it is a semanticDbPath.  Even though it reads oddly, since the if is so close to the naming I tend to name it in the case that the off is correct, which makes readability of the code after the => better.\r\nHow about \r\n```\r\nCase semanticDbPath if v.SemanticdbPaths.isSemanticdb(semanticDbPath.name) =>\r\n```\r\nAt the point of checking in isSemanticdb(...) it is really candidatePath, it may or may not be true, but if the check succeeds this is definitely a semanticDbPath, not just any path so I prefer to at least carry that information along in the name since it is not in the type.",
        "createdAt" : "2017-07-07T19:05:35Z",
        "updatedAt" : "2017-07-10T13:22:49Z",
        "lastEditedBy" : "05699173-a301-4e02-a831-0dc655609bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "12e54689df442e582ad929548142512d36b6f244",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +11,15 @@\n  def semanticdbs: List[AbsolutePath] = classpath.deep.collect {\n    case path if v.SemanticdbPaths.isSemanticdb(path.name) =>\n      path.base.resolve(path.name)\n  }"
  }
]