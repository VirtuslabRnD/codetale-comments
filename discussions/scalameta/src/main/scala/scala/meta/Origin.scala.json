[
  {
    "id" : "b216fc4d-42fa-4d98-9b36-c5055da0f5a2",
    "prId" : 128,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f20623c5-5b2c-4c7c-9130-492cf014971d",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I think it'd be useful to also add these methods to https://github.com/xeno-by/scalameta/blob/master/scalameta/src/main/scala/scala/meta/syntactic/Api.scala#L48.\n",
        "createdAt" : "2015-04-05T07:27:13Z",
        "updatedAt" : "2015-04-05T13:14:05Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a51f0e26f8fbc5fd4214e12207575f7dff47ce85",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +12,16 @@  def end: Int\n  def startLine: Int\n  def endLine: Int\n  def tokens: Seq[Token]\n}"
  },
  {
    "id" : "6965d9ee-3750-4aac-aac9-daf0c19c17df",
    "prId" : 128,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a06500e-bb11-48f4-8aa0-35308c41649a",
        "parentId" : null,
        "authorId" : "4e52e00c-c2e5-4196-a7d7-c5d0305de028",
        "body" : "This looks like `O(n)` every time you call it where `n` is number of preceding tokens. And for all trees it's going to be `O(n!)`. Scary.\n",
        "createdAt" : "2015-04-07T10:11:23Z",
        "updatedAt" : "2015-04-07T10:11:29Z",
        "lastEditedBy" : "4e52e00c-c2e5-4196-a7d7-c5d0305de028",
        "tags" : [
        ]
      },
      {
        "id" : "17565acd-4dfd-4d9b-86cf-5bd43d1cd244",
        "parentId" : "3a06500e-bb11-48f4-8aa0-35308c41649a",
        "authorId" : "2c2cb248-dd76-4258-9c80-1a6cb352bbf8",
        "body" : "A simply way to avoid that would be to have `lazy vals`, since startLine and endLine might not be used much.\n",
        "createdAt" : "2015-04-07T10:15:47Z",
        "updatedAt" : "2015-04-07T10:15:47Z",
        "lastEditedBy" : "2c2cb248-dd76-4258-9c80-1a6cb352bbf8",
        "tags" : [
        ]
      },
      {
        "id" : "56a621b8-26bb-4410-a740-4a43f2df4a83",
        "parentId" : "3a06500e-bb11-48f4-8aa0-35308c41649a",
        "authorId" : "4e52e00c-c2e5-4196-a7d7-c5d0305de028",
        "body" : "I think making it a `lazy val` or even `def` should be an improvement. \n",
        "createdAt" : "2015-04-07T10:17:32Z",
        "updatedAt" : "2015-04-07T10:17:32Z",
        "lastEditedBy" : "4e52e00c-c2e5-4196-a7d7-c5d0305de028",
        "tags" : [
        ]
      },
      {
        "id" : "2464c05c-2083-4eee-9829-062991ff6229",
        "parentId" : "3a06500e-bb11-48f4-8aa0-35308c41649a",
        "authorId" : "2c2cb248-dd76-4258-9c80-1a6cb352bbf8",
        "body" : "Done in https://github.com/scalameta/scalameta/pull/129.\n",
        "createdAt" : "2015-04-07T10:34:59Z",
        "updatedAt" : "2015-04-07T10:34:59Z",
        "lastEditedBy" : "2c2cb248-dd76-4258-9c80-1a6cb352bbf8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a51f0e26f8fbc5fd4214e12207575f7dff47ce85",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +45,49 @@    }\n    val startLine = findLine(start, 0)\n    val endLine = findLine(end, -1)\n\n    def tokens: Seq[Token] = input.tokens(dialect).slice(startTokenPos, endTokenPos + 1)"
  }
]