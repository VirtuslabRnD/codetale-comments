[
  {
    "id" : "a653c879-4210-4874-a5d5-446082b6957a",
    "prId" : 832,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/832#pullrequestreview-36138570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1837d02-b470-4115-a21f-8c9d91e0fa8c",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "What does this code mean?",
        "createdAt" : "2017-05-03T20:53:19Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "f5f780c8-53be-43a9-bf39-323be704618e",
        "parentId" : "a1837d02-b470-4115-a21f-8c9d91e0fa8c",
        "authorId" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "body" : "scalac insert `()`: `<a>{(): Unit}</a>`. Same for string interpolation `s\"${}\"`",
        "createdAt" : "2017-05-03T21:02:29Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "tags" : [
        ]
      },
      {
        "id" : "7b11901b-ddca-492f-9c07-f9fddb8298ce",
        "parentId" : "a1837d02-b470-4115-a21f-8c9d91e0fa8c",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Wow this is crazy ðŸ˜® ",
        "createdAt" : "2017-05-03T21:04:59Z",
        "updatedAt" : "2017-05-08T13:39:10Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "51fbdba505079dfda70d8285ca569ec13b63c241",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +289,293 @@\n\n  checkOK(\"<a>{}</a>\")\n  checkError(\"e match { case <a>{}</a> => ??? }\")\n  //checkError(\"<a></b>\") // FIXME: Should not parse"
  },
  {
    "id" : "33fa0418-3a69-47b5-b5d0-53e40d907fb7",
    "prId" : 823,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/823#pullrequestreview-35851673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b59fae7-cac2-4f75-95e0-fe83771baff4",
        "parentId" : null,
        "authorId" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "body" : "```scala\r\n            BOF [0..0) ----> class scala.meta.tokens.Token$BOF\r\n                [0..0) ----> class scala.meta.tokens.Token$Xml$Start\r\n            <a> [0..3) ----> class scala.meta.tokens.Token$Xml$Part\r\n                [3..3) ----> class scala.meta.tokens.Token$Xml$SpliceStart\r\n              { [3..4) ----> class scala.meta.tokens.Token$LeftBrace\r\n              1 [4..5) ----> class scala.meta.tokens.Token$Constant$Int\r\n              } [5..6) ----> class scala.meta.tokens.Token$RightBrace\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$SpliceEnd\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$Part\r\n                [6..6) ----> class scala.meta.tokens.Token$Xml$SpliceStart\r\n              { [6..7) ----> class scala.meta.tokens.Token$LeftBrace\r\n              2 [7..8) ----> class scala.meta.tokens.Token$Constant$Int\r\n              } [8..9) ----> class scala.meta.tokens.Token$RightBrace\r\n                [9..9) ----> class scala.meta.tokens.Token$Xml$SpliceEnd\r\n          </a> [9..13) ----> class scala.meta.tokens.Token$Xml$Part\r\n              [13..13) ----> class scala.meta.tokens.Token$Xml$End\r\n          EOF [13..13) ----> class scala.meta.tokens.Token$EOF\r\n```\r\n@olafurpg Do we want the empty `Xml.Part` between `{1}` and `{2}`?",
        "createdAt" : "2017-05-02T15:26:48Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "tags" : [
        ]
      },
      {
        "id" : "399eeaa9-2322-4b21-8c30-245be971d1fb",
        "parentId" : "0b59fae7-cac2-4f75-95e0-fe83771baff4",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yes, please. This is what string interpolation tokenizer is doing.\r\n\r\nWould you prefer to do this differently?",
        "createdAt" : "2017-05-02T15:44:50Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "3a716c1c-4b0f-4f5e-9b36-a6767d1b985f",
        "parentId" : "0b59fae7-cac2-4f75-95e0-fe83771baff4",
        "authorId" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "body" : "I am fine with both solution",
        "createdAt" : "2017-05-02T18:21:33Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "tags" : [
        ]
      },
      {
        "id" : "853bacbf-ef2e-4369-b99b-f9c1d4c08ecf",
        "parentId" : "0b59fae7-cac2-4f75-95e0-fe83771baff4",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Let's emit the empty parts then. That'll be compatible with how things are done in production right now.",
        "createdAt" : "2017-05-02T18:23:50Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "d92df785-c077-4bd9-bbff-24f77907d50b",
        "parentId" : "0b59fae7-cac2-4f75-95e0-fe83771baff4",
        "authorId" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "body" : "That's the current behaviour. I'll add test case",
        "createdAt" : "2017-05-02T18:25:58Z",
        "updatedAt" : "2017-05-02T18:51:46Z",
        "lastEditedBy" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc6deadf596cfcafab3cf4911dd353eed05ca5b0",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +258,262 @@  checkOK(\"<foo a={<bar/><bat/>}/>\")\n  checkOK(\"<a>{ List(1, 2) }</a>\")\n  checkOK(\"<a>{1}{2}</a>\")\n  checkOK(\"<a>{1}{2}<b/>{3}</a>\")\n  checkOK(\"<a>{<b>{1}{2}</b>}</a>\")"
  }
]