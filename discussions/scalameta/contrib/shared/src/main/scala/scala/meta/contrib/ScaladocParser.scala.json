[
  {
    "id" : "6fa67720-03e9-4b35-92ba-4534cd02bd9a",
    "prId" : 2259,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2259#pullrequestreview-601985796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d569f897-9f12-4abe-a478-7a019909873c",
        "parentId" : null,
        "authorId" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "body" : "this approach is likely to apply every parser first. should we say instead\r\n`parsers.iterator.map { ... }` (so it's one at a time)?",
        "createdAt" : "2021-02-26T15:59:24Z",
        "updatedAt" : "2021-03-02T16:13:30Z",
        "lastEditedBy" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "tags" : [
        ]
      },
      {
        "id" : "c4c7e0a1-c0c6-43b1-8242-6b27615fc878",
        "parentId" : "d569f897-9f12-4abe-a478-7a019909873c",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "might be a good idea.",
        "createdAt" : "2021-03-01T10:29:13Z",
        "updatedAt" : "2021-03-02T16:13:30Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "47638947-701d-4055-92a7-a5e58bf13efa",
        "parentId" : "d569f897-9f12-4abe-a478-7a019909873c",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Fixed",
        "createdAt" : "2021-03-02T16:01:17Z",
        "updatedAt" : "2021-03-02T16:13:30Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "e772b2893885c31ddbf7bb5d77f0931ae4e38da9",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +18,22 @@    def parseRec(toParse: String): List[DocToken] = {\n      parsers.iterator\n        .map { p =>\n          parse(toParse, p(_))\n        }"
  },
  {
    "id" : "73be3af6-97f9-4598-82c5-da605509cc15",
    "prId" : 1009,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1009#pullrequestreview-48786569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8f38cc7-6db7-42c6-a157-baad45ad5944",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This is due to an off-by-one error getting fixed hehe ðŸ˜… ",
        "createdAt" : "2017-07-09T15:19:33Z",
        "updatedAt" : "2017-07-09T15:19:33Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "67a35a27-43b4-40b7-817b-50cab08aaee8",
        "parentId" : "a8f38cc7-6db7-42c6-a157-baad45ad5944",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Neat! So I'm longer gonna need this: https://github.com/xeno-by/scalamacros/blob/master/.scalafmt.conf#L6.",
        "createdAt" : "2017-07-09T20:42:29Z",
        "updatedAt" : "2017-07-09T20:42:29Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f311ca64c365724b8409f4bcb8c60324b2ccc34",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +30,34 @@            // Adds the parsed token to the list of tokens and parse the rest of the string recursively.\n            if (remainingScaladoc.take(2) == \"\\n\\n\") {\n              List(p.value, DocToken(Paragraph)) ++ parseRec(remainingScaladoc.dropWhile(_ == '\\n'))\n            } else {\n              List(p.value) ++ parseRec(remainingScaladoc.dropWhile(c => c == ' ' || c == '\\n'))"
  }
]