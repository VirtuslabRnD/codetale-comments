[
  {
    "id" : "390e70e6-3514-4afa-a60b-df3457ad9948",
    "prId" : 1723,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1723#pullrequestreview-142081140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a912a1dd-924f-4bdf-b981-48d1e5ae8702",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "üëç I already implemented this in Scalafix and I agree it should be in the public API. \r\n\r\nHowever, we should decide what to do when the column numbers exceed the column width in the actual input. This implementation is not LSP compliant, where `column=Int.MaxValue` will translate to the largest possible column for the corresponding line number. I opened https://github.com/scalameta/scalameta/issues/1728 to discuss this better.",
        "createdAt" : "2018-07-31T15:34:29Z",
        "updatedAt" : "2018-07-31T15:46:06Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "98c75a89-9e18-4e25-aef5-1ba003b09110",
        "parentId" : "a912a1dd-924f-4bdf-b981-48d1e5ae8702",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Great catch!! Thank you for following up!",
        "createdAt" : "2018-07-31T18:13:53Z",
        "updatedAt" : "2018-07-31T18:13:53Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd80713ff87258a06af69e91efb6fbdf8d21e80b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +50,54 @@        endLine: Int,\n        endColumn: Int): Position.Range = {\n      val start = input.lineToOffset(startLine) + startColumn\n      val end = input.lineToOffset(endLine) + endColumn\n      Range(input, start, end)"
  }
]