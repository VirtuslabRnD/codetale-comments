[
  {
    "id" : "d0594309-f29c-4ccc-b653-7c59f76c8912",
    "prId" : 10814,
    "prUrl" : "https://github.com/apache/kafka/pull/10814#pullrequestreview-684390013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c077ff38-9f78-4f1d-a403-cf63618029d9",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we define subclasses in their corresponding files instead of squeezing all of them into one file? Even better, we could get a sub-dir called `transaction` to contain all of them",
        "createdAt" : "2021-06-12T20:31:32Z",
        "updatedAt" : "2021-06-12T21:22:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "43876416-489b-4c47-9294-00aba72d15b7",
        "parentId" : "c077ff38-9f78-4f1d-a403-cf63618029d9",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Hmm, I understand where you're coming from, but I prefer to leave them here since they have no usage outside of `TransactionsCommand`. It's not really a similar situation to `KafkaApis` for example because there won't be an ever-growing set of sub-commands. The current size of the file around 600 lines does not seem crazy.",
        "createdAt" : "2021-06-15T19:07:24Z",
        "updatedAt" : "2021-06-15T19:07:24Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1eed815a3480a45ffd203938ef458372f234d80",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +242,246 @@    }\n\n    static class DescribeProducersCommand extends TransactionsCommand {\n        static final String[] HEADERS = new String[]{\n            \"ProducerId\","
  },
  {
    "id" : "61334ae8-ccae-46ac-b39c-f7217549381a",
    "prId" : 10814,
    "prUrl" : "https://github.com/apache/kafka/pull/10814#pullrequestreview-684548863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f46941df-8d05-4ba2-a009-911ca170b693",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "nit: `--topic` and `--partition` could be extracted as helper static functions",
        "createdAt" : "2021-06-12T20:34:37Z",
        "updatedAt" : "2021-06-12T21:22:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "246baefb-db7a-4388-954a-b1e1075d83d7",
        "parentId" : "f46941df-8d05-4ba2-a009-911ca170b693",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I considered doing this, but it felt like the benefit was small. Different tools have different requirements even if they use the same name. For example, `--partition` is not always a required argument in many commands. ",
        "createdAt" : "2021-06-15T22:37:21Z",
        "updatedAt" : "2021-06-15T22:37:21Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1eed815a3480a45ffd203938ef458372f234d80",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +272,276 @@                .required(false);\n\n            subparser.addArgument(\"--topic\")\n                .help(\"topic name\")\n                .action(store())"
  },
  {
    "id" : "2baf0d60-50da-4b5f-850d-ef1513ae0689",
    "prId" : 10814,
    "prUrl" : "https://github.com/apache/kafka/pull/10814#pullrequestreview-684538350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aae81f53-59d8-4c54-a2ab-bc0dbe53103c",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "What would happen if we don't do the verification? Is this extra round trip necessary?",
        "createdAt" : "2021-06-12T20:46:37Z",
        "updatedAt" : "2021-06-12T21:22:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "02d2398b-4e21-47d3-aef4-9f3dec006b47",
        "parentId" : "aae81f53-59d8-4c54-a2ab-bc0dbe53103c",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "The purpose here is to collect additional information about the transaction that needs to be aborted. We need this in order to build the `WriteTxnMarker` request.",
        "createdAt" : "2021-06-15T22:16:34Z",
        "updatedAt" : "2021-06-15T22:16:34Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1eed815a3480a45ffd203938ef458372f234d80",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@            long startOffset\n        ) throws Exception {\n            final DescribeProducersResult.PartitionProducerState result;\n            try {\n                result = admin.describeProducers(singleton(topicPartition))"
  },
  {
    "id" : "bc972c90-bd43-4ef5-a004-58d6e096d23f",
    "prId" : 10814,
    "prUrl" : "https://github.com/apache/kafka/pull/10814#pullrequestreview-684542052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5af1d47d-9604-4d0d-a672-f685d2abd651",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Does `-1` apply to only new hanging producers? It doesn't sound like we will not meet any other epoch loss scenario in the reply which causing setting epoch to 0 always mismatch to the state on broker. Should we consider using `-1` to skip the epoch check on broker, and proceed as a `force delete`?",
        "createdAt" : "2021-06-12T20:50:37Z",
        "updatedAt" : "2021-06-12T21:22:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "0f9d782f-9375-435f-a8a2-0bc3fbfc7203",
        "parentId" : "5af1d47d-9604-4d0d-a672-f685d2abd651",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "What would be the advantage of doing so? One nice thing about this implementation is that it is compatible with older brokers which require a non-negative coordinator epoch.",
        "createdAt" : "2021-06-15T22:23:35Z",
        "updatedAt" : "2021-06-15T22:23:35Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1eed815a3480a45ffd203938ef458372f234d80",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +224,228 @@                // use a coordinator epoch of 0, which is less than or equal to any possible\n                // leader epoch.\n                if (coordinatorEpoch < 0) {\n                    coordinatorEpoch = 0;\n                }"
  },
  {
    "id" : "b420dbff-4c87-4fa1-b59d-22e847b069a5",
    "prId" : 10814,
    "prUrl" : "https://github.com/apache/kafka/pull/10814#pullrequestreview-689176983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "173bdf9a-5545-4c3f-afec-9f34c2dddf3f",
        "parentId" : null,
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "Using commands is a really good idea. It makes the implementation so much clearer. One point to clarify is wether we want to prefix commands with `--` in order to remain consistent with the other command line tools. What is your take on this? It seems that we defined aliases for commands so we might be able to have both.",
        "createdAt" : "2021-06-18T14:43:30Z",
        "updatedAt" : "2021-06-18T14:53:07Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      },
      {
        "id" : "c392452f-7c03-454a-8a33-887a312c5fa8",
        "parentId" : "173bdf9a-5545-4c3f-afec-9f34c2dddf3f",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I don't have a strong opinion. I guess I can't object to being more consistent with other tools.",
        "createdAt" : "2021-06-18T17:53:43Z",
        "updatedAt" : "2021-06-18T17:53:43Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "2af559d6-d183-4f52-8f92-10a479228dd8",
        "parentId" : "173bdf9a-5545-4c3f-afec-9f34c2dddf3f",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I'm having some trouble getting this to work. The parser seems to get the commands confused with arguments if we precede them by `--`. I'll see if I can find a workaround.",
        "createdAt" : "2021-06-18T18:20:10Z",
        "updatedAt" : "2021-06-18T18:20:10Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "1857bc05-14cc-4d70-b806-d99265ccdd09",
        "parentId" : "173bdf9a-5545-4c3f-afec-9f34c2dddf3f",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I couldn't come up with a great way to do this. The best idea I thought of is to preprocess the arguments to strip off the `--` from the commands before passing them into argparse4j. That works, but then the help output is inconsistent. An alternative is to discard the use of subparsers so that the arguments are all in one flattened list. That would be kind of a shame since then we'd lose (or have to rewrite) the contextualized help. I guess I'm inclined to leave it as is, but let me know what you think.",
        "createdAt" : "2021-06-21T18:59:22Z",
        "updatedAt" : "2021-06-21T18:59:22Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "37594b4f-6e8a-4b87-9882-1ce72d7303de",
        "parentId" : "173bdf9a-5545-4c3f-afec-9f34c2dddf3f",
        "authorId" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "body" : "I had a look at this as well and I could not find a clean way to do this. Overall, I believe that using commands is a great move for the future so I am also fine with leaving it as is. I think that we should aim for reworking the other tools to use a similar pattern in the future. We could perhaps file a JIRA to not forget about it.",
        "createdAt" : "2021-06-22T07:55:09Z",
        "updatedAt" : "2021-06-22T07:55:09Z",
        "lastEditedBy" : "59ca7821-b29c-4f24-a9d5-cbd394145686",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1eed815a3480a45ffd203938ef458372f234d80",
    "line" : 591,
    "diffHunk" : "@@ -1,1 +589,593 @@            .title(\"commands\")\n            .metavar(\"COMMAND\");\n        commands.forEach(command -> command.addSubparser(subparsers));\n\n        final Namespace ns;"
  }
]