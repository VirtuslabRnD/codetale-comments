[
  {
    "id" : "ba51293e-e958-4806-a2a7-88b1c7123a0e",
    "prId" : 1877,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1877#pullrequestreview-472413948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97481fe2-88ee-46d4-8e84-e9929b2bc30a",
        "parentId" : null,
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "Why is it OK to use `j.l.Object` here?",
        "createdAt" : "2020-08-20T15:45:05Z",
        "updatedAt" : "2020-10-06T16:52:57Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      },
      {
        "id" : "6e585b21-7440-4f48-9875-0f9a5ab6cfb1",
        "parentId" : "97481fe2-88ee-46d4-8e84-e9929b2bc30a",
        "authorId" : "ec81b063-dc9d-4604-ae13-ab5cd6be1355",
        "body" : "Provided `j.l.Object` here as the superclass of all classes, i.e. the generic safe choice, since this call path did not cause any problems.",
        "createdAt" : "2020-08-21T11:06:54Z",
        "updatedAt" : "2020-10-06T16:52:57Z",
        "lastEditedBy" : "ec81b063-dc9d-4604-ae13-ab5cd6be1355",
        "tags" : [
        ]
      },
      {
        "id" : "bd3426c5-1784-4f1b-aae9-7cf48e1202c3",
        "parentId" : "97481fe2-88ee-46d4-8e84-e9929b2bc30a",
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "Same comment as for the other one, obviously.",
        "createdAt" : "2020-08-21T11:28:53Z",
        "updatedAt" : "2020-10-06T16:52:57Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      }
    ],
    "commit" : "fce1234368bb0af02f2e0a329da7a4054b4e52b9",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +122,126 @@    val result = Val.Local(\n      fresh(),\n      Sub.lub(rettys, Type.Ref(Global.Top(\"java.lang.Object\"))))\n    emit.label(mergeLabel, Seq(result))\n"
  }
]