[
  {
    "id" : "696dada1-691e-4931-a6bd-47f40d776021",
    "prId" : 2033,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2033#pullrequestreview-551649044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82839c26-671d-4b86-88a1-56343077429d",
        "parentId" : null,
        "authorId" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "body" : "maybe make it clear and split herer to `-body.ll` and `-herader.ll` and merge them into `id.ll`?",
        "createdAt" : "2020-11-26T01:38:22Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "tags" : [
        ]
      },
      {
        "id" : "958d404c-4e3b-463f-b747-47c0fffe170e",
        "parentId" : "82839c26-671d-4b86-88a1-56343077429d",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I really didn't want to mess with that because we really just need the path to avoid all the look ups.",
        "createdAt" : "2020-11-26T01:43:35Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "4925b5fc-2c27-4faf-8354-f8edf869df17",
        "parentId" : "82839c26-671d-4b86-88a1-56343077429d",
        "authorId" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "body" : "ok, it was just an idea.",
        "createdAt" : "2020-11-26T01:44:43Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "tags" : [
        ]
      },
      {
        "id" : "9dcbb140-270e-44ac-a548-82b847b91445",
        "parentId" : "82839c26-671d-4b86-88a1-56343077429d",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I think right now we are just improving and hardening the code so we are in good territory.",
        "createdAt" : "2020-11-26T01:46:08Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "ee113615-b6ad-41b1-bd23-4f36257dfcac",
        "parentId" : "82839c26-671d-4b86-88a1-56343077429d",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "@catap If you see improvements in the code there maybe you should add an issue.",
        "createdAt" : "2020-12-14T17:15:01Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c49190f35694592f75da289c49f874e0ac54ed6",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +107,111 @@\n      dir.merge(Seq(body), headers)\n      headers\n    }\n"
  },
  {
    "id" : "a8a4f777-0e54-4fdb-b292-34c11acb30ad",
    "prId" : 2033,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2033#pullrequestreview-551653005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aadc668b-ae90-4baf-a0ce-9ce7e90caa7b",
        "parentId" : null,
        "authorId" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "body" : "I feel that add `targetTripple` for a name isn't bad idea here. Am I wrong?",
        "createdAt" : "2020-11-26T01:38:55Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "ae07a374-5c7b-4f0c-a981-c4f03721cd63",
        "tags" : [
        ]
      },
      {
        "id" : "3c667029-80d9-4d65-848c-b275c11d49cb",
        "parentId" : "aadc668b-ae90-4baf-a0ce-9ce7e90caa7b",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "The `nativeTarget` in `sbt` gets set to `targetTriple` in the config. I think that is fine.",
        "createdAt" : "2020-11-26T01:58:53Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "39cdb3af-f718-42c0-b65b-98f0c4b545f5",
        "parentId" : "aadc668b-ae90-4baf-a0ce-9ce7e90caa7b",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "The sbt naming and use has been cleared up below - `nativeTarget` is not needed at all.",
        "createdAt" : "2020-12-14T17:17:03Z",
        "updatedAt" : "2020-12-23T20:12:37Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c49190f35694592f75da289c49f874e0ac54ed6",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +71,75 @@        Seq(\n          new Impl(targetTriple, env, sorted)\n            .gen(id = \"out\", workdir))\n      }\n"
  },
  {
    "id" : "71b95e73-84a6-436b-8bda-ebb2dfc75395",
    "prId" : 1746,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1746#pullrequestreview-476561205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7be33c2-9645-466c-a7a9-80a953e3d021",
        "parentId" : null,
        "authorId" : "7fb21642-3dce-4a48-bff0-74a660a4631f",
        "body" : "I rephrased a bit your comment @WojciechMazur, tell me if you like the new phrasing :)",
        "createdAt" : "2020-08-27T08:22:56Z",
        "updatedAt" : "2020-08-27T10:00:04Z",
        "lastEditedBy" : "7fb21642-3dce-4a48-bff0-74a660a4631f",
        "tags" : [
        ]
      },
      {
        "id" : "2e00e32a-2eb9-40dc-8d75-94dc047197b9",
        "parentId" : "d7be33c2-9645-466c-a7a9-80a953e3d021",
        "authorId" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "body" : "It's fine I guess",
        "createdAt" : "2020-08-27T09:51:09Z",
        "updatedAt" : "2020-08-27T10:00:04Z",
        "lastEditedBy" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a9c57fe44683f9365f533743bf9a19bfd18406c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +690,694 @@           * on function types, each extern method in deps is generated only once in IR file.\n           * In this case LLVM linking would otherwise result in call arguments type mismatch.\n           */\n          val callDef = call.ptr match {\n            case Val.Global(m @ Global.Member(_, sig), valty) if sig.isExtern =>"
  }
]