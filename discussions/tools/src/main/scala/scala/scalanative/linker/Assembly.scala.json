[
  {
    "id" : "75bd57bd-5219-4f9f-a10d-2662c33956db",
    "prId" : 94,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e537984-1c34-4949-ae37-1a1222c445f4",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Not sure if using arrays is a good idea for recursive construction of a sequence. Lists would probably be a better fit here. \n",
        "createdAt" : "2016-05-18T05:45:44Z",
        "updatedAt" : "2016-05-18T15:14:32Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "9804d571-942b-4664-88fc-b81e349adc9e",
        "parentId" : "7e537984-1c34-4949-ae37-1a1222c445f4",
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "A naive use of lists would also be quadratic. But the following is linear:\n\n``` scala\n    def matchFiles(f: File, tail: List[File] = Nil): List[File] = {\n      if (f.isDirectory) f.listFiles.foldRight(tail)(matchFiles)\n      else if (f.getName.endsWith(\".nir\")) f :: tail\n      else tail\n    }\n```\n\n\"Typical\" difference list. :p\n",
        "createdAt" : "2016-05-18T06:56:29Z",
        "updatedAt" : "2016-05-18T15:14:32Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      },
      {
        "id" : "cc3ea1e0-59d9-4d0e-9905-02efd047bb91",
        "parentId" : "7e537984-1c34-4949-ae37-1a1222c445f4",
        "authorId" : "5590c8e4-c5cf-4cce-a549-3b3f5d4d203a",
        "body" : "To be honest I didn't think too much at \"optimization\" at this stage, you guys are crazy :-)\n\nIf you really care probably best option is to use java8 File interface with something like:\nhttps://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#walk-java.nio.file.Path-java.nio.file.FileVisitOption...-\n\nToo me removing apache commons serves to speed up docker image creation :-) so pick your choice!\n",
        "createdAt" : "2016-05-18T08:15:12Z",
        "updatedAt" : "2016-05-18T15:14:32Z",
        "lastEditedBy" : "5590c8e4-c5cf-4cce-a549-3b3f5d4d203a",
        "tags" : [
        ]
      },
      {
        "id" : "10577b3e-eee5-430d-99a8-255fdf273c34",
        "parentId" : "7e537984-1c34-4949-ae37-1a1222c445f4",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Linker is actually a _very_ performance sensitive piece code. I used to have dumb non-lazy linker before and it would take minutes to link. I/O is expensive, even with SSDs. If you make a mistake there, it's amplified many times over proportionally to size of classpath / number of files / dependencies / etc. And those things often get pretty damn huge in practice.\n",
        "createdAt" : "2016-05-18T11:38:55Z",
        "updatedAt" : "2016-05-18T15:14:32Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "e16da3b7-8055-4a56-9c5c-3eeda4aca9b0",
        "parentId" : "7e537984-1c34-4949-ae37-1a1222c445f4",
        "authorId" : "5590c8e4-c5cf-4cce-a549-3b3f5d4d203a",
        "body" : "fair enough :-)\n",
        "createdAt" : "2016-05-18T11:59:19Z",
        "updatedAt" : "2016-05-18T15:14:32Z",
        "lastEditedBy" : "5590c8e4-c5cf-4cce-a549-3b3f5d4d203a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad1ebbed52160e8b7ea18a059e04a6fb57d82cb2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +22,26 @@      def test(path: Path, b: BasicFileAttributes) =\n        path.toString.endsWith(\".nir\")\n    }\n\n    def matchFiles(f: String): Iterator[Path] ="
  }
]