[
  {
    "id" : "77f629cc-0d4a-485e-9f94-073693eadb0b",
    "prId" : 335,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/335#pullrequestreview-5679439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc418865-50bf-42be-bb66-10de3692a3bd",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Do we really need this universal entry-point? This looks like ad-hoc overloading. \n",
        "createdAt" : "2016-10-25T08:48:18Z",
        "updatedAt" : "2016-10-25T16:52:22Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "9762034b-eac5-4455-a0df-69393132cc3e",
        "parentId" : "bc418865-50bf-42be-bb66-10de3692a3bd",
        "authorId" : "5a16c078-7d2a-476c-b1f6-f8a81f01ef48",
        "body" : "It was only to simplify the code for `hashOp`, but it is not strictly necessary. I am still unsure whether this or \"specializing\" `hashOp` is better. I would say the latter to be honest, so long and tedious code change ahead.\n",
        "createdAt" : "2016-10-25T15:39:04Z",
        "updatedAt" : "2016-10-25T16:52:22Z",
        "lastEditedBy" : "5a16c078-7d2a-476c-b1f6-f8a81f01ef48",
        "tags" : [
        ]
      },
      {
        "id" : "3ee8716c-9b74-4233-b34b-9ac83f2a054a",
        "parentId" : "bc418865-50bf-42be-bb66-10de3692a3bd",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Oh, I see now. Lets leave as is for now then. \n",
        "createdAt" : "2016-10-25T15:40:37Z",
        "updatedAt" : "2016-10-25T16:52:22Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "e698fb9a20672a909a9f1b6aa8d4a735821d8d18",
    "line" : null,
    "diffHunk" : "@@ -1,1 +15,19 @@    import HashFunction._\n\n    def apply(obj: Any): Hash = {\n      obj match {\n        case op: Op     => hashOp(op)"
  },
  {
    "id" : "6607ecf9-b7fc-4575-b44d-9060225ef6a5",
    "prId" : 335,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/335#pullrequestreview-5610224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03b020b0-a155-4616-8f2a-b78e3c9a2041",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "This is quite a naive way to combine hash codes. Better put all the intermediate hashes into one array and then call `java.util.Arrays.hashCode` on the contents. \n",
        "createdAt" : "2016-10-25T08:55:08Z",
        "updatedAt" : "2016-10-25T16:52:22Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "c9add7de-ea24-49e1-a13e-3c9637ba9e72",
        "parentId" : "03b020b0-a155-4616-8f2a-b78e3c9a2041",
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "`scala.util.hashing.MurmurHash3.orderedHash(hashes)`\n",
        "createdAt" : "2016-10-25T09:16:23Z",
        "updatedAt" : "2016-10-25T16:52:22Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      }
    ],
    "commit" : "e698fb9a20672a909a9f1b6aa8d4a735821d8d18",
    "line" : null,
    "diffHunk" : "@@ -1,1 +113,117 @@    def combineHashes(hashes: Seq[Hash]): Hash = {\n      MurmurHash3.orderedHash(hashes)\n    }\n\n    def rawLocal(local: Local): Hash = {"
  }
]