[
  {
    "id" : "8187d541-ee39-4c9e-8e45-ca13d42868fe",
    "prId" : 299,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/299#pullrequestreview-2915295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02504780-9af6-4983-ae08-51a5a844c03d",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Given that only a single annotation may be present, it might make sense to have a single field in the `Arg` class of type `PassConv` (i.e. passing convention) that has `sret` and `byval` variants. It will also make it impossible to accidentally have two at the same time by construction.\n",
        "createdAt" : "2016-10-05T13:57:36Z",
        "updatedAt" : "2016-10-07T15:13:44Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e51aaa66d4adda5a01656b8098d0a84be3b2ccb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +99,103 @@          (sh\"$pointee* sret %$pointer\",\n           Seq(sh\"%${value.name} = bitcast $pointee* %$pointer to i8*\"))\n        case x => unsupported(x)\n      }\n"
  },
  {
    "id" : "70d7714b-250d-47d4-8e5b-aee7f4ac120a",
    "prId" : 231,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7bfa6d4-4c17-48f5-b5ed-f6634e6eb6eb",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "@olafurpg Is this intentional? \n",
        "createdAt" : "2016-07-07T13:13:30Z",
        "updatedAt" : "2016-07-07T13:13:30Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "b8df8e4d-ee7c-4297-8e54-318788502a63",
        "parentId" : "d7bfa6d4-4c17-48f5-b5ed-f6634e6eb6eb",
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "I hope not ^^\n",
        "createdAt" : "2016-07-07T13:15:07Z",
        "updatedAt" : "2016-07-07T13:15:07Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      },
      {
        "id" : "33f1c0bf-148e-461a-8f0a-bd4b88244bad",
        "parentId" : "d7bfa6d4-4c17-48f5-b5ed-f6634e6eb6eb",
        "authorId" : "7cfb9c81-09fa-4bfa-bbb5-df5df4c4201d",
        "body" : "Not intentional. Will try to fix asap. \n",
        "createdAt" : "2016-07-07T13:34:04Z",
        "updatedAt" : "2016-07-07T13:34:05Z",
        "lastEditedBy" : "7cfb9c81-09fa-4bfa-bbb5-df5df4c4201d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fa3a883a770b3510e5d8d864db71d3a0a5b5967",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +263,267 @@\n        buf +=\n        sh\"${bind}invoke $ty @$pointee(${r(args, sep = \", \")}) to $succ unwind $fail\"\n\n      case Cf.Invoke(ty, ptr, args, succ, fail) =>"
  }
]