[
  {
    "id" : "07891cfb-09ba-4e0c-96fc-888dde8089b2",
    "prId" : 726,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/726#pullrequestreview-39435049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b21617d1-0ec6-4d48-936d-96a0726befca",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "This is correct for normal objects, but what about arrays? Arrays sidestep `classalloc` instruction by calling into GC code directly in https://github.com/scala-native/scala-native/blob/master/nativelib/src/main/scala/scala/scalanative/runtime/Arrays.scala.gyb#L123\r\n\r\nAllocation helpers defined in https://github.com/scala-native/scala-native/blob/master/nativelib/src/main/scala/scala/scalanative/runtime/package.scala#L71 have to be updated too.",
        "createdAt" : "2017-05-22T10:30:56Z",
        "updatedAt" : "2017-05-26T19:58:23Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "50e6fe3d-a4e3-427b-ac2e-69e423c16e2d",
        "parentId" : "b21617d1-0ec6-4d48-936d-96a0726befca",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Now that I think about it, allocation helpers are never used anywhere apart from the array implementation. We should get rid off them. ",
        "createdAt" : "2017-05-22T11:12:23Z",
        "updatedAt" : "2017-05-26T19:58:23Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "e178312c9ed14cff70f46cd7ef3ea62a9cf51246",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +32,36 @@                    allocMethod,\n                    Seq(cls.rtti.const, Val.Long(size)),\n                    Next.None))\n\n      case inst =>"
  },
  {
    "id" : "cc3ce976-94e5-4543-9e94-8e67413cb61f",
    "prId" : 726,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/726#pullrequestreview-39462868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c53e9d02-d3d1-4e5f-908c-9dbafc57a43c",
        "parentId" : null,
        "authorId" : "74865863-2a26-4e12-9b40-7c8011c54eb1",
        "body" : "@densh Here we need the check to take into account the header of the object in the GC. The total allocated size needs to be less than 8K. But the header size can change depending on the GC. Should we add GC specific properties in compiler ?\r\n\r\nIf the compiler would know about the GC, we could also adapt the injection passes.",
        "createdAt" : "2017-05-22T12:33:58Z",
        "updatedAt" : "2017-05-26T19:58:23Z",
        "lastEditedBy" : "74865863-2a26-4e12-9b40-7c8011c54eb1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e178312c9ed14cff70f46cd7ef3ea62a9cf51246",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +26,30 @@        val size = MemoryLayout.sizeOf(cls.layout.struct)\n        val allocMethod =\n          if (size < LARGE_OBJECT_MIN_SIZE) alloc else largeAlloc\n\n        let(n,"
  }
]