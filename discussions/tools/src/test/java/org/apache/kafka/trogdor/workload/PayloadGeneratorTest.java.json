[
  {
    "id" : "a508b6a7-a1c3-4849-afc4-23cb7abd2590",
    "prId" : 7103,
    "prUrl" : "https://github.com/apache/kafka/pull/7103#pullrequestreview-267289740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70da9769-8b46-4e04-b604-823cc992e27d",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "should we have a test of the constructor failing when someone tries to set up a configuration that doesn't sum to 100 ?",
        "createdAt" : "2019-07-26T16:38:23Z",
        "updatedAt" : "2019-07-30T22:32:08Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6292f4bbaee27755413707d297bc27d7072132b6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +33,37 @@import static org.junit.Assert.assertThrows;\n\npublic class PayloadGeneratorTest {\n    @Rule\n    final public Timeout globalTimeout = Timeout.millis(120000);"
  },
  {
    "id" : "0adedb32-fd14-460d-9a05-b5ed1260f5ee",
    "prId" : 7103,
    "prUrl" : "https://github.com/apache/kafka/pull/7103#pullrequestreview-268700280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d55c09a4-0ca7-4401-8ab0-5820e7f5cf6f",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "should this be `&&`?  As it is, this loop could terminate even if we always return null and never non-null",
        "createdAt" : "2019-07-30T17:23:50Z",
        "updatedAt" : "2019-07-30T22:32:08Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "4b1d42da-eaf0-4de9-a324-3a48b05b6353",
        "parentId" : "d55c09a4-0ca7-4401-8ab0-5820e7f5cf6f",
        "authorId" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "body" : "I think this should be || . If we used && had isNull=1000, and notNull = 0, we would terminate, since notNull is no longer less than 1000. When I ran, it only terminated when the values were 1000 and 1001.",
        "createdAt" : "2019-07-30T21:32:32Z",
        "updatedAt" : "2019-07-30T22:32:08Z",
        "lastEditedBy" : "a31dcef8-b459-4b48-bb49-44e910fa9f34",
        "tags" : [
        ]
      },
      {
        "id" : "883c89e6-464e-4f1a-bffe-4a2e398f1082",
        "parentId" : "d55c09a4-0ca7-4401-8ab0-5820e7f5cf6f",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "oh sorry, I forgot this is the condition for staying in the loop.  my mistake.",
        "createdAt" : "2019-07-30T22:22:28Z",
        "updatedAt" : "2019-07-30T22:32:08Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6292f4bbaee27755413707d297bc27d7072132b6",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +157,161 @@        int notNull = 0;\n        int isNull = 0;\n        while (notNull < 1000 || isNull < 1000) {\n            byte[] cur = iter.next();\n            if (cur == null) {"
  }
]