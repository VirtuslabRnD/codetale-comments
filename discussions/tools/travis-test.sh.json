[
  {
    "id" : "e6811479-06b1-408a-b1d2-cfdd2790d949",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8c81cd0-6440-4ed3-8ae0-52f1fc5fc617",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "My, this file has a lot of very long lines ;)\n",
        "createdAt" : "2014-04-27T23:12:53Z",
        "updatedAt" : "2014-05-01T13:40:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64af3fdd0fac08e01877a56faff5f3c6d4ac3a1b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@  sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n  # windows compilers have this requirement\n  CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull\" $PYTHON setup.py build_ext --inplace\nfi\n}"
  },
  {
    "id" : "a8813344-5e5c-4beb-b130-11d21d57edff",
    "prId" : 6036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1baa8b6d-9b7b-4932-80f2-d17971a9eb36",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Be nice to figure out how to  shorten these lines at some point.\n",
        "createdAt" : "2015-07-03T04:31:13Z",
        "updatedAt" : "2015-07-03T04:31:13Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b0952452-df22-4c50-a3cc-2f548ca3ba85",
        "parentId" : "1baa8b6d-9b7b-4932-80f2-d17971a9eb36",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe could do by concatenating shorter lines?\n",
        "createdAt" : "2015-07-03T04:31:51Z",
        "updatedAt" : "2015-07-03T04:31:51Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb4682a091e9652bfd886a686b3fa85a9636028d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +27,31 @@    $PIP install .\n  else\n    sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n    # windows compilers have this requirement\n    CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull -Wlogical-op\" $PIP install . 2>&1 | tee log"
  },
  {
    "id" : "b5fd93dd-3e5a-4d4c-8e89-e912ec38d453",
    "prId" : 6036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What is special about windows compilers here?\n",
        "createdAt" : "2015-07-03T04:36:43Z",
        "updatedAt" : "2015-07-03T04:36:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "abbdd100-1ae7-4b6b-9d89-d3c04ef2af41",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And which windows compilers?\n",
        "createdAt" : "2015-07-03T04:37:10Z",
        "updatedAt" : "2015-07-03T04:37:10Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "0a1f18e3-a3df-4a7a-8c29-a6cff841a6a6",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "MSVC, its a copy paste from a few lines below which we use to avoid these issues poping up at the last minute when someone bothers to compile with it.\n",
        "createdAt" : "2015-07-03T18:19:47Z",
        "updatedAt" : "2015-07-03T18:19:47Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "a8716c33-8b69-4751-a2ba-59d293b93d07",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "the comment relates to the -Werror=declaration-after-statement\n",
        "createdAt" : "2015-07-03T18:20:13Z",
        "updatedAt" : "2015-07-03T18:20:13Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb4682a091e9652bfd886a686b3fa85a9636028d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +28,32 @@  else\n    sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n    # windows compilers have this requirement\n    CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull -Wlogical-op\" $PIP install . 2>&1 | tee log\n    grep -v \"_configtest\" log | grep -vE \"ld returned 1|no previously-included files matching\" | grep -E \"warning\\>\";"
  },
  {
    "id" : "f322c018-0361-4bee-941a-59f2e0190344",
    "prId" : 6768,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6afd6fa3-1a37-4ba6-8593-32b6e2f90929",
        "parentId" : null,
        "authorId" : "f7082bc1-eeb4-4ec1-a138-c6937d6df333",
        "body" : "the `--use-wheel` option is actually not required but it does not hurt either. The `pip` command should be taken from the currently activate virtualenv instead of the `$PIP` env.\n",
        "createdAt" : "2015-12-04T17:07:13Z",
        "updatedAt" : "2015-12-10T23:02:46Z",
        "lastEditedBy" : "f7082bc1-eeb4-4ec1-a138-c6937d6df333",
        "tags" : [
        ]
      },
      {
        "id" : "1b1cdbfb-f534-48ca-8a51-f5c19f6a99d4",
        "parentId" : "6afd6fa3-1a37-4ba6-8593-32b6e2f90929",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "`--no-use-wheel` is deprecated in pip 8.0, and `--use-wheel` isn't even listed in the help text of `pip install` anymore. So I wouldn't add it.\n",
        "createdAt" : "2015-12-09T23:34:44Z",
        "updatedAt" : "2015-12-10T23:02:46Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "27abfb4923a3ff0433bb7f5dd08a42603641b519",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@  pushd dist\n  pip install --pre --no-index --upgrade --find-links=. numpy\n  pip install nose\n  popd\n  run_test"
  },
  {
    "id" : "f94a2425-8123-4a3b-bbee-74cc640442a9",
    "prId" : 8066,
    "prUrl" : "https://github.com/numpy/numpy/pull/8066#pullrequestreview-5747237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7cc6f9-9eac-4ac9-bb0a-84f3b85353d0",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Let's put this right next to where we create the venv.\n",
        "createdAt" : "2016-10-25T20:04:18Z",
        "updatedAt" : "2016-10-26T00:58:34Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "3b06fd63-9463-4996-ae26-4b3503cc1ff8",
        "parentId" : "db7cc6f9-9eac-4ac9-bb0a-84f3b85353d0",
        "authorId" : "11f18e00-52bd-4b68-b13d-17d0c3237df0",
        "body" : "Done.\n",
        "createdAt" : "2016-10-25T21:25:35Z",
        "updatedAt" : "2016-10-26T00:58:34Z",
        "lastEditedBy" : "11f18e00-52bd-4b68-b13d-17d0c3237df0",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f761d6ee094a8dde25ffc9e4c08dad51b61ae0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +13,17 @@\nsource builds/venv/bin/activate\n\n# travis venv tests override python\nPYTHON=${PYTHON:-python}"
  },
  {
    "id" : "216a213f-e02a-4171-b80d-2ed81465095d",
    "prId" : 8482,
    "prUrl" : "https://github.com/numpy/numpy/pull/8482#pullrequestreview-17204524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "404bd18c-56d3-41de-8cf9-6e3e7750a2b0",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "I don't understand what's going on here with `/usr/lib/*` versus `/usr/$LIB`?",
        "createdAt" : "2017-01-18T02:37:55Z",
        "updatedAt" : "2017-01-18T11:58:43Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "1e4b0e62-9a72-463d-9a8f-55f2cb73a126",
        "parentId" : "404bd18c-56d3-41de-8cf9-6e3e7750a2b0",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "preload understands the special LIB variable, but we have to only enable it if it is available as our build will fail if gcc emits stderr (a bug we should fix) so I use a wildcard in the check, a little clunky but works",
        "createdAt" : "2017-01-18T11:53:16Z",
        "updatedAt" : "2017-01-18T11:58:43Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "25147420e531172a8b2f40de32a6ba077fc89bac",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +12,16 @@elif [ -r /usr/lib/*/libeatmydata.so ]; then\n  # much faster package installation\n  export LD_PRELOAD='/usr/$LIB/libeatmydata.so'\nfi\n"
  },
  {
    "id" : "eee4b193-da11-4813-8b37-69e1b8a1d29e",
    "prId" : 9636,
    "prUrl" : "https://github.com/numpy/numpy/pull/9636#pullrequestreview-60159012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8ee54b6-3cfe-493f-84ca-68d63f6645d1",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think this would look better if indented to match the first quotation, also with `(...)` instead of line continuation, just use two strings.",
        "createdAt" : "2017-09-01T14:54:32Z",
        "updatedAt" : "2017-09-01T14:54:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ef372c82-78da-4797-971b-feec2abb7b65",
        "parentId" : "d8ee54b6-3cfe-493f-84ca-68d63f6645d1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "NVM, is shell script.",
        "createdAt" : "2017-09-01T14:55:15Z",
        "updatedAt" : "2017-09-01T14:55:15Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7697bf0c03742f2339ce96870d0a52e370a31daf",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +33,37 @@  # use default python flags but remoge sign-compare\n  sysflags=\"$($PYTHON -c \"from distutils import sysconfig; \\\n    print (sysconfig.get_config_var('CFLAGS'))\")\"\n  export CFLAGS=\"$sysflags $werrors -Wlogical-op -Wno-sign-compare\"\n  # We used to use 'setup.py install' here, but that has the terrible"
  },
  {
    "id" : "a404562a-c42e-4f9b-902c-b4bcf41dd741",
    "prId" : 11567,
    "prUrl" : "https://github.com/numpy/numpy/pull/11567#pullrequestreview-138763446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a695cfa4-ae9c-4b35-ad50-dd47c71a8d0e",
        "parentId" : null,
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "@tylerjereddy Is this preferred over installing `codecov` from pip?",
        "createdAt" : "2018-07-19T16:56:08Z",
        "updatedAt" : "2018-07-19T16:56:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eae3ece4d4cfddb3e72ac18bfc4059bdcc2f6bb",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +127,131 @@  if [ -n \"$RUN_COVERAGE\" ]; then\n    # Upload coverage files to codecov\n    bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy\n  fi\n"
  }
]