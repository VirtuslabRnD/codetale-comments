[
  {
    "id" : "e6811479-06b1-408a-b1d2-cfdd2790d949",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8c81cd0-6440-4ed3-8ae0-52f1fc5fc617",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "My, this file has a lot of very long lines ;)\n",
        "createdAt" : "2014-04-27T23:12:53Z",
        "updatedAt" : "2014-05-01T13:40:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64af3fdd0fac08e01877a56faff5f3c6d4ac3a1b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@  sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n  # windows compilers have this requirement\n  CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull\" $PYTHON setup.py build_ext --inplace\nfi\n}"
  },
  {
    "id" : "a8813344-5e5c-4beb-b130-11d21d57edff",
    "prId" : 6036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1baa8b6d-9b7b-4932-80f2-d17971a9eb36",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Be nice to figure out how to  shorten these lines at some point.\n",
        "createdAt" : "2015-07-03T04:31:13Z",
        "updatedAt" : "2015-07-03T04:31:13Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b0952452-df22-4c50-a3cc-2f548ca3ba85",
        "parentId" : "1baa8b6d-9b7b-4932-80f2-d17971a9eb36",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe could do by concatenating shorter lines?\n",
        "createdAt" : "2015-07-03T04:31:51Z",
        "updatedAt" : "2015-07-03T04:31:51Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb4682a091e9652bfd886a686b3fa85a9636028d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +27,31 @@    $PIP install .\n  else\n    sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n    # windows compilers have this requirement\n    CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull -Wlogical-op\" $PIP install . 2>&1 | tee log"
  },
  {
    "id" : "b5fd93dd-3e5a-4d4c-8e89-e912ec38d453",
    "prId" : 6036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What is special about windows compilers here?\n",
        "createdAt" : "2015-07-03T04:36:43Z",
        "updatedAt" : "2015-07-03T04:36:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "abbdd100-1ae7-4b6b-9d89-d3c04ef2af41",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And which windows compilers?\n",
        "createdAt" : "2015-07-03T04:37:10Z",
        "updatedAt" : "2015-07-03T04:37:10Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "0a1f18e3-a3df-4a7a-8c29-a6cff841a6a6",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "MSVC, its a copy paste from a few lines below which we use to avoid these issues poping up at the last minute when someone bothers to compile with it.\n",
        "createdAt" : "2015-07-03T18:19:47Z",
        "updatedAt" : "2015-07-03T18:19:47Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "a8716c33-8b69-4751-a2ba-59d293b93d07",
        "parentId" : "bb1478a5-6a61-4da1-8217-805cae584c8c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "the comment relates to the -Werror=declaration-after-statement\n",
        "createdAt" : "2015-07-03T18:20:13Z",
        "updatedAt" : "2015-07-03T18:20:13Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb4682a091e9652bfd886a686b3fa85a9636028d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +28,32 @@  else\n    sysflags=\"$($PYTHON -c \"from distutils import sysconfig; print (sysconfig.get_config_var('CFLAGS'))\")\"\n    # windows compilers have this requirement\n    CFLAGS=\"$sysflags -Werror=declaration-after-statement -Werror=nonnull -Wlogical-op\" $PIP install . 2>&1 | tee log\n    grep -v \"_configtest\" log | grep -vE \"ld returned 1|no previously-included files matching\" | grep -E \"warning\\>\";"
  },
  {
    "id" : "f322c018-0361-4bee-941a-59f2e0190344",
    "prId" : 6768,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6afd6fa3-1a37-4ba6-8593-32b6e2f90929",
        "parentId" : null,
        "authorId" : "f7082bc1-eeb4-4ec1-a138-c6937d6df333",
        "body" : "the `--use-wheel` option is actually not required but it does not hurt either. The `pip` command should be taken from the currently activate virtualenv instead of the `$PIP` env.\n",
        "createdAt" : "2015-12-04T17:07:13Z",
        "updatedAt" : "2015-12-10T23:02:46Z",
        "lastEditedBy" : "f7082bc1-eeb4-4ec1-a138-c6937d6df333",
        "tags" : [
        ]
      },
      {
        "id" : "1b1cdbfb-f534-48ca-8a51-f5c19f6a99d4",
        "parentId" : "6afd6fa3-1a37-4ba6-8593-32b6e2f90929",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "`--no-use-wheel` is deprecated in pip 8.0, and `--use-wheel` isn't even listed in the help text of `pip install` anymore. So I wouldn't add it.\n",
        "createdAt" : "2015-12-09T23:34:44Z",
        "updatedAt" : "2015-12-10T23:02:46Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "27abfb4923a3ff0433bb7f5dd08a42603641b519",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@  pushd dist\n  pip install --pre --no-index --upgrade --find-links=. numpy\n  pip install nose\n  popd\n  run_test"
  },
  {
    "id" : "f94a2425-8123-4a3b-bbee-74cc640442a9",
    "prId" : 8066,
    "prUrl" : "https://github.com/numpy/numpy/pull/8066#pullrequestreview-5747237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7cc6f9-9eac-4ac9-bb0a-84f3b85353d0",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Let's put this right next to where we create the venv.\n",
        "createdAt" : "2016-10-25T20:04:18Z",
        "updatedAt" : "2016-10-26T00:58:34Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "3b06fd63-9463-4996-ae26-4b3503cc1ff8",
        "parentId" : "db7cc6f9-9eac-4ac9-bb0a-84f3b85353d0",
        "authorId" : "11f18e00-52bd-4b68-b13d-17d0c3237df0",
        "body" : "Done.\n",
        "createdAt" : "2016-10-25T21:25:35Z",
        "updatedAt" : "2016-10-26T00:58:34Z",
        "lastEditedBy" : "11f18e00-52bd-4b68-b13d-17d0c3237df0",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f761d6ee094a8dde25ffc9e4c08dad51b61ae0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +13,17 @@\nsource builds/venv/bin/activate\n\n# travis venv tests override python\nPYTHON=${PYTHON:-python}"
  },
  {
    "id" : "216a213f-e02a-4171-b80d-2ed81465095d",
    "prId" : 8482,
    "prUrl" : "https://github.com/numpy/numpy/pull/8482#pullrequestreview-17204524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "404bd18c-56d3-41de-8cf9-6e3e7750a2b0",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "I don't understand what's going on here with `/usr/lib/*` versus `/usr/$LIB`?",
        "createdAt" : "2017-01-18T02:37:55Z",
        "updatedAt" : "2017-01-18T11:58:43Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "1e4b0e62-9a72-463d-9a8f-55f2cb73a126",
        "parentId" : "404bd18c-56d3-41de-8cf9-6e3e7750a2b0",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "preload understands the special LIB variable, but we have to only enable it if it is available as our build will fail if gcc emits stderr (a bug we should fix) so I use a wildcard in the check, a little clunky but works",
        "createdAt" : "2017-01-18T11:53:16Z",
        "updatedAt" : "2017-01-18T11:58:43Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "25147420e531172a8b2f40de32a6ba077fc89bac",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +12,16 @@elif [ -r /usr/lib/*/libeatmydata.so ]; then\n  # much faster package installation\n  export LD_PRELOAD='/usr/$LIB/libeatmydata.so'\nfi\n"
  },
  {
    "id" : "eee4b193-da11-4813-8b37-69e1b8a1d29e",
    "prId" : 9636,
    "prUrl" : "https://github.com/numpy/numpy/pull/9636#pullrequestreview-60159012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8ee54b6-3cfe-493f-84ca-68d63f6645d1",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think this would look better if indented to match the first quotation, also with `(...)` instead of line continuation, just use two strings.",
        "createdAt" : "2017-09-01T14:54:32Z",
        "updatedAt" : "2017-09-01T14:54:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ef372c82-78da-4797-971b-feec2abb7b65",
        "parentId" : "d8ee54b6-3cfe-493f-84ca-68d63f6645d1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "NVM, is shell script.",
        "createdAt" : "2017-09-01T14:55:15Z",
        "updatedAt" : "2017-09-01T14:55:15Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7697bf0c03742f2339ce96870d0a52e370a31daf",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +33,37 @@  # use default python flags but remoge sign-compare\n  sysflags=\"$($PYTHON -c \"from distutils import sysconfig; \\\n    print (sysconfig.get_config_var('CFLAGS'))\")\"\n  export CFLAGS=\"$sysflags $werrors -Wlogical-op -Wno-sign-compare\"\n  # We used to use 'setup.py install' here, but that has the terrible"
  },
  {
    "id" : "a404562a-c42e-4f9b-902c-b4bcf41dd741",
    "prId" : 11567,
    "prUrl" : "https://github.com/numpy/numpy/pull/11567#pullrequestreview-138763446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a695cfa4-ae9c-4b35-ad50-dd47c71a8d0e",
        "parentId" : null,
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "@tylerjereddy Is this preferred over installing `codecov` from pip?",
        "createdAt" : "2018-07-19T16:56:08Z",
        "updatedAt" : "2018-07-19T16:56:09Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eae3ece4d4cfddb3e72ac18bfc4059bdcc2f6bb",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +127,131 @@  if [ -n \"$RUN_COVERAGE\" ]; then\n    # Upload coverage files to codecov\n    bash <(curl -s https://codecov.io/bash) -X gcov -X coveragepy\n  fi\n"
  },
  {
    "id" : "66e8fb5f-94b6-485a-b027-9e5c7551717e",
    "prId" : 17791,
    "prUrl" : "https://github.com/numpy/numpy/pull/17791#pullrequestreview-540372872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can we fix this upstream? Where is this code coming from?\r\n",
        "createdAt" : "2020-11-17T11:41:12Z",
        "updatedAt" : "2020-11-17T22:04:15Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "127b9ea1-be6b-42c9-b31d-3877bef783d9",
        "parentId" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "I don't think so. from PIP.\r\n<details>\r\n<summary>Build log</summary>\r\n\r\n```Bash\r\n020-11-17T10:02:50.4635209Z Building wheels for collected packages: pickle5, cffi, coverage\r\n2020-11-17T10:02:50.4639748Z   Building wheel for pickle5 (setup.py): started\r\n2020-11-17T10:02:52.3399489Z   Building wheel for pickle5 (setup.py): finished with status 'done'\r\n2020-11-17T10:02:52.3430515Z   Created wheel for pickle5: filename=pickle5-0.0.11-cp36-cp36dm-linux_x86_64.whl size=238491 sha256=12d4ffecfd50f38265f849b1b9de8d7689b99bae242da58a3b0445dc6f9cc99c\r\n2020-11-17T10:02:52.3432447Z   Stored in directory: /home/runner/.cache/pip/wheels/f9/b7/be/bf9768ab0daa28fa4b386f3ad1bac5dd4d9c349c60e83b24e3\r\n2020-11-17T10:02:52.3443881Z   Building wheel for cffi (setup.py): started\r\n2020-11-17T10:02:54.1987594Z   Building wheel for cffi (setup.py): finished with status 'error'\r\n2020-11-17T10:02:54.2000450Z   ERROR: Command errored out with exit status 1:\r\n2020-11-17T10:02:54.2000814Z   Running setup.py clean for cffi\r\n2020-11-17T10:02:54.2002803Z    command: /home/runner/work/numpy/numpy/builds/venv/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-k9xhaw2w\r\n2020-11-17T10:02:54.2004316Z        cwd: /tmp/pip-install-eckmduhf/cffi/\r\n2020-11-17T10:02:54.2004802Z   Complete output (40 lines):\r\n2020-11-17T10:02:54.2005203Z   running bdist_wheel\r\n2020-11-17T10:02:54.2005765Z   running build\r\n2020-11-17T10:02:54.2006106Z   running build_py\r\n2020-11-17T10:02:54.2007022Z   creating build\r\n2020-11-17T10:02:54.2008497Z   creating build/lib.linux-x86_64-3.6-pydebug\r\n2020-11-17T10:02:54.2009644Z   creating build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2010867Z   copying cffi/api.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2012164Z   copying cffi/__init__.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2013467Z   copying cffi/verifier.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2014874Z   copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2016310Z   copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2017675Z   copying cffi/error.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2019049Z   copying cffi/commontypes.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2020487Z   copying cffi/recompiler.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2021874Z   copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2023228Z   copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2024535Z   copying cffi/lock.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2025851Z   copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2027147Z   copying cffi/model.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2029019Z   copying cffi/pkgconfig.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2030538Z   copying cffi/cparser.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2031214Z   copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2031897Z   copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2032862Z   copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2033524Z   copying cffi/_embedding.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2034188Z   copying cffi/_cffi_errors.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:54.2034576Z   running build_ext\r\n2020-11-17T10:02:54.2035008Z   building '_cffi_backend' extension\r\n2020-11-17T10:02:54.2035505Z   creating build/temp.linux-x86_64-3.6-pydebug\r\n2020-11-17T10:02:54.2036141Z   creating build/temp.linux-x86_64-3.6-pydebug/c\r\n2020-11-17T10:02:54.2038915Z   x86_64-linux-gnu-gcc -pthread -g -Og -Wall -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -Werror=vla -Werror=nonnull -Werror=pointer-arith -Werror=implicit-function-declaration -Werror=undef -Wlogical-op -Wno-sign-compare -Wno-maybe-uninitialized -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DUSE__THREAD -DHAVE_SYNC_SYNCHRONIZE -I/home/runner/work/numpy/numpy/builds/venv/include -I/usr/include/python3.6dm -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.6-pydebug/c/_cffi_backend.o\r\n2020-11-17T10:02:54.2041263Z   c/_cffi_backend.c: In function ‘fb_prepare_cif’:\r\n2020-11-17T10:02:54.2041941Z   c/_cffi_backend.c:5846:5: error: \"HAVE_FFI_PREP_CIF_VAR\" is not defined, evaluates to 0 [-Werror=undef]\r\n2020-11-17T10:02:54.2042371Z    #if HAVE_FFI_PREP_CIF_VAR\r\n2020-11-17T10:02:54.2042614Z        ^~~~~~~~~~~~~~~~~~~~~\r\n2020-11-17T10:02:54.2043184Z   c/_cffi_backend.c:5853:6: error: \"HAVE_FFI_PREP_CIF_VAR\" is not defined, evaluates to 0 [-Werror=undef]\r\n2020-11-17T10:02:54.2043698Z    #if !HAVE_FFI_PREP_CIF_VAR && defined(__arm64__) && defined(__APPLE__)\r\n2020-11-17T10:02:54.2044004Z         ^~~~~~~~~~~~~~~~~~~~~\r\n2020-11-17T10:02:54.2044285Z   cc1: some warnings being treated as errors\r\n2020-11-17T10:02:54.2044856Z   error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n2020-11-17T10:02:54.2045311Z   ----------------------------------------\r\n2020-11-17T10:02:54.2045711Z   ERROR: Failed building wheel for cffi\r\n2020-11-17T10:02:54.6126794Z   Building wheel for coverage (setup.py): started\r\n2020-11-17T10:02:55.3035313Z   Building wheel for coverage (setup.py): finished with status 'done'\r\n2020-11-17T10:02:55.3074665Z   Created wheel for coverage: filename=coverage-5.3-py3-none-any.whl size=198277 sha256=858ccb99f75c86dc1551937130a359763f58af357d1d854fe5fe1e1f526751f4\r\n2020-11-17T10:02:55.3076356Z   Stored in directory: /home/runner/.cache/pip/wheels/8f/13/79/fc07c17c9c60f93002139854095de6a2e49ccbbc4858b2004d\r\n2020-11-17T10:02:55.3081333Z Successfully built pickle5 coverage\r\n2020-11-17T10:02:55.3082756Z Failed to build cffi\r\n2020-11-17T10:02:55.5410706Z Installing collected packages: sortedcontainers, attrs, hypothesis, zipp, importlib-metadata, pluggy, toml, py, more-itertools, iniconfig, six, pyparsing, packaging, pytest, pytz, coverage, pytest-cov, pickle5, pycparser, cffi, typing-extensions\r\n2020-11-17T10:02:57.3873541Z     Running setup.py install for cffi: started\r\n2020-11-17T10:02:59.2400337Z     Running setup.py install for cffi: finished with status 'error'\r\n2020-11-17T10:02:59.2402994Z     ERROR: Command errored out with exit status 1:\r\n2020-11-17T10:02:59.2408281Z      command: /home/runner/work/numpy/numpy/builds/venv/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-9c28po83/install-record.txt --single-version-externally-managed --compile --install-headers /home/runner/work/numpy/numpy/builds/venv/include/site/python3.6/cffi\r\n2020-11-17T10:02:59.2411355Z          cwd: /tmp/pip-install-eckmduhf/cffi/\r\n2020-11-17T10:02:59.2411918Z     Complete output (40 lines):\r\n2020-11-17T10:02:59.2412332Z     running install\r\n2020-11-17T10:02:59.2413011Z     running build\r\n2020-11-17T10:02:59.2413373Z     running build_py\r\n2020-11-17T10:02:59.2413739Z     creating build\r\n2020-11-17T10:02:59.2414467Z     creating build/lib.linux-x86_64-3.6-pydebug\r\n2020-11-17T10:02:59.2415276Z     creating build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2416171Z     copying cffi/api.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2417106Z     copying cffi/__init__.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2418223Z     copying cffi/verifier.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2419275Z     copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2420333Z     copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2421340Z     copying cffi/error.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2422349Z     copying cffi/commontypes.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2423409Z     copying cffi/recompiler.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2424429Z     copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2425427Z     copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2426375Z     copying cffi/lock.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2427348Z     copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2428329Z     copying cffi/model.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2429326Z     copying cffi/pkgconfig.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2430329Z     copying cffi/cparser.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2431341Z     copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2432361Z     copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2433362Z     copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2434357Z     copying cffi/_embedding.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2435340Z     copying cffi/_cffi_errors.h -> build/lib.linux-x86_64-3.6-pydebug/cffi\r\n2020-11-17T10:02:59.2435906Z     running build_ext\r\n2020-11-17T10:02:59.2436555Z     building '_cffi_backend' extension\r\n2020-11-17T10:02:59.2437335Z     creating build/temp.linux-x86_64-3.6-pydebug\r\n2020-11-17T10:02:59.2438174Z     creating build/temp.linux-x86_64-3.6-pydebug/c\r\n2020-11-17T10:02:59.2440855Z     x86_64-linux-gnu-gcc -pthread -g -Og -Wall -Wno-unused-result -Wsign-compare -g -Og -Wall -g -Og -fstack-protector-strong -Wformat -Werror=format-security -g -Og -fstack-protector-strong -Wformat -Werror=format-security -Werror=vla -Werror=nonnull -Werror=pointer-arith -Werror=implicit-function-declaration -Werror=undef -Wlogical-op -Wno-sign-compare -Wno-maybe-uninitialized -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DUSE__THREAD -DHAVE_SYNC_SYNCHRONIZE -I/home/runner/work/numpy/numpy/builds/venv/include -I/usr/include/python3.6dm -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.6-pydebug/c/_cffi_backend.o\r\n2020-11-17T10:02:59.2442872Z     c/_cffi_backend.c: In function ‘fb_prepare_cif’:\r\n2020-11-17T10:02:59.2443478Z     c/_cffi_backend.c:5846:5: error: \"HAVE_FFI_PREP_CIF_VAR\" is not defined, evaluates to 0 [-Werror=undef]\r\n2020-11-17T10:02:59.2443866Z      #if HAVE_FFI_PREP_CIF_VAR\r\n2020-11-17T10:02:59.2444084Z          ^~~~~~~~~~~~~~~~~~~~~\r\n2020-11-17T10:02:59.2444597Z     c/_cffi_backend.c:5853:6: error: \"HAVE_FFI_PREP_CIF_VAR\" is not defined, evaluates to 0 [-Werror=undef]\r\n2020-11-17T10:02:59.2445046Z      #if !HAVE_FFI_PREP_CIF_VAR && defined(__arm64__) && defined(__APPLE__)\r\n2020-11-17T10:02:59.2445318Z           ^~~~~~~~~~~~~~~~~~~~~\r\n2020-11-17T10:02:59.2446552Z     cc1: some warnings being treated as errors\r\n2020-11-17T10:02:59.2447093Z     error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n2020-11-17T10:02:59.2447622Z     ----------------------------------------\r\n2020-11-17T10:02:59.2449936Z ERROR: Command errored out with exit status 1: /home/runner/work/numpy/numpy/builds/venv/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-eckmduhf/cffi/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-9c28po83/install-record.txt --single-version-externally-managed --compile --install-headers /home/runner/work/numpy/numpy/builds/venv/include/site/python3.6/cffi Check the logs for full command output.\r\n\r\n```\r\n</details>",
        "createdAt" : "2020-11-17T22:02:52Z",
        "updatedAt" : "2020-11-17T22:04:15Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      },
      {
        "id" : "d650a3f6-2ef8-444e-9fd6-101ff78495f6",
        "parentId" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "It is part of cffi 1.14.3. It has been [changed on HEAD](https://foss.heptapod.net/pypy/cffi/-/commit/f166536c3278101ecdf5ec5a2c52fdd0cd19ba52).",
        "createdAt" : "2020-11-19T07:33:11Z",
        "updatedAt" : "2020-11-19T07:33:11Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "5632140f-3b5d-48b0-90d6-3068a2dd94d4",
        "parentId" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'm confused - is this line even building cffi? It looks like we're exporting something that we should maybe just be setting for a single command.",
        "createdAt" : "2020-11-19T18:10:08Z",
        "updatedAt" : "2020-11-19T18:10:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0409d81d-5708-4a0d-ad90-f0a45190be8b",
        "parentId" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Yeah, we're messing with the warnings used to install all our test packages on this line:\r\n\r\nhttps://github.com/numpy/numpy/blob/cba1d6f1cab31b1dca0e7ec7e6ee40ead786ca08/tools/travis-test.sh#L81\r\n\r\nWe shouldn't be doing that, it just makes our CI fail if unrelated projects have compiler warnings.",
        "createdAt" : "2020-11-19T18:12:01Z",
        "updatedAt" : "2020-11-19T18:13:36Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "9a309fb0-f4bc-4e14-9421-99bbbfed7007",
        "parentId" : "8e65b9ad-5c9c-4692-b3d6-578d41372af8",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This last comment seems unrelated to the PR, and `PYTHONOPTIMIZE=\"\"` seems necessary? I don't have a problem with it - can always split out the `pip install` into more granular installs here is some new failure appears.",
        "createdAt" : "2020-11-28T12:39:23Z",
        "updatedAt" : "2020-11-28T12:39:24Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "cba1d6f1cab31b1dca0e7ec7e6ee40ead786ca08",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +52,56 @@    # error: \"HAVE_FFI_PREP_CIF_VAR\" is not defined, evaluates to 0 [-Werror=undef]\n    # #if !HAVE_FFI_PREP_CIF_VAR && defined(__arm64__) && defined(__APPLE__)\n    #\n    export CFLAGS=\"$CFLAGS -Werror=undef\"\n    $PIP install -v . 2>&1 | tee log"
  }
]