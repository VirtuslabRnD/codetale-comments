[
  {
    "id" : "dec39fd9-fc2c-49f1-bf05-a2c6cb573e73",
    "prId" : 2710,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6563d3e9-a166-46bc-ba8a-097f1192a26b",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "In the old code, if `fullname` is not a valid path, then it is returned as it is.\n",
        "createdAt" : "2015-09-06T18:33:14Z",
        "updatedAt" : "2015-09-06T21:17:59Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "81b1ac02-c4f6-4de6-a28f-ac29065cec7b",
        "parentId" : "6563d3e9-a166-46bc-ba8a-097f1192a26b",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "You mean the `os.path.exists(fullname)` check?  It's a bit bogus, IMO.  I don't think you can actually reach this code if the file doesn't exist.\n",
        "createdAt" : "2015-09-06T21:03:46Z",
        "updatedAt" : "2015-09-06T21:17:59Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "bd63a02f-a8b5-4982-a46f-522df2e98b78",
        "parentId" : "6563d3e9-a166-46bc-ba8a-097f1192a26b",
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "@bnoordhuis Ya, I totally agree. I was just pointing out the difference.\n",
        "createdAt" : "2015-09-06T21:06:56Z",
        "updatedAt" : "2015-09-06T21:17:59Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      }
    ],
    "commit" : "a493dab2e72d19ddd226cd2094463ddb2354af06",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +699,703 @@    toplevel = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\n    prefix = os.path.commonprefix([fullname, toplevel])\n    return fullname[len(prefix) + 1:]\n\n  def Split(self):"
  },
  {
    "id" : "bec43d93-9228-4913-8af3-81f5eec08b40",
    "prId" : 3448,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70c05ebe-f765-4bce-a5d6-cdef7aad02a7",
        "parentId" : null,
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "Not that I care much, but this wouldn't work on Arch Linux where `python` is python3.\n",
        "createdAt" : "2015-10-20T12:15:04Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      },
      {
        "id" : "0d516905-0544-483a-980a-56ac652d945e",
        "parentId" : "70c05ebe-f765-4bce-a5d6-cdef7aad02a7",
        "authorId" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "body" : "I don't think `python2.4` would work much better :) Just pulled the same convention as what we have in `configure` and `tools/test.py` -- would personally have gone with `python2` but +1 for consistency.\n",
        "createdAt" : "2015-10-20T12:45:32Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "tags" : [
        ]
      },
      {
        "id" : "6f4fff65-eba1-4ecd-befe-449a3cefccc4",
        "parentId" : "70c05ebe-f765-4bce-a5d6-cdef7aad02a7",
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "Oh, right. I have a `python2` and a `python2.7`. `python2` would also have been my choice, but whatever is consistent is fine.\n",
        "createdAt" : "2015-10-20T13:46:04Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b4516356a1c72b08d9c4eb7ad1d25a1804cbe62",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@#!/usr/bin/env python\n#\n# Copyright (c) 2009 Google Inc. All rights reserved."
  },
  {
    "id" : "4f0aab33-7040-4b42-85ad-5887f6e0ea7c",
    "prId" : 3448,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c0eaa64-7c9e-47f3-989c-63bc702b6716",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Any specific reason to use this instead of `if _cpplint_state.output_format != 'tap':`?\n",
        "createdAt" : "2015-10-26T11:40:56Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "282cc044-ed86-44d1-8672-670162f62360",
        "parentId" : "6c0eaa64-7c9e-47f3-989c-63bc702b6716",
        "authorId" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "body" : "nope\n",
        "createdAt" : "2015-10-26T14:35:14Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b4516356a1c72b08d9c4eb7ad1d25a1804cbe62",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +568,572 @@  def PrintErrorCounts(self):\n    \"\"\"Print a summary of errors by category, and the total.\"\"\"\n    if not _cpplint_state.output_format == 'tap':\n      for category, count in self.errors_by_category.iteritems():\n        sys.stderr.write('Category \\'%s\\' errors found: %d\\n' %"
  },
  {
    "id" : "ad0ac724-85b1-4afa-bca5-97977b79cdca",
    "prId" : 3448,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32604aad-635e-41f1-bb08-9baa0481d717",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Better way to write this would be `if val not in ...`\n",
        "createdAt" : "2015-10-26T11:42:02Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "85522d0f-d145-47e6-8678-ceb84fd18ed6",
        "parentId" : "32604aad-635e-41f1-bb08-9baa0481d717",
        "authorId" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "body" : "ok\n",
        "createdAt" : "2015-10-26T14:35:28Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "84d8313d-967d-406a-a787-70e7ddb43996",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b4516356a1c72b08d9c4eb7ad1d25a1804cbe62",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +3080,3084 @@      PrintUsage(None)\n    elif opt == '--output':\n      if not val in ('emacs', 'vs7', 'tap'):\n        PrintUsage('The only allowed output formats are emacs, vs7 and tap.')\n      output_format = val"
  },
  {
    "id" : "55a96541-5a94-482c-b2f4-04f3163b59e7",
    "prId" : 3448,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "435b17b6-d934-499f-8491-b6a787388385",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Shouldn't we set the log level here? By default, it will be printing only the warnings, right?\n\nEdit: NVM. I see that you have done this at line 3124\n",
        "createdAt" : "2015-11-11T00:48:50Z",
        "updatedAt" : "2015-11-12T01:13:38Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b4516356a1c72b08d9c4eb7ad1d25a1804cbe62",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +549,553 @@    \"\"\"attempts to create a file which we write output to.\"\"\"\n    fh = logging.FileHandler(filename, mode='wb')\n    logger.addHandler(fh)\n\n  def ResetErrorCounts(self):"
  }
]