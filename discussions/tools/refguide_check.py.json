[
  {
    "id" : "acc6fc70-9101-4048-bc63-0ee4ff1f72a6",
    "prId" : 12253,
    "prUrl" : "https://github.com/numpy/numpy/pull/12253#pullrequestreview-181465785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "196de1aa-509d-44a8-b073-eaad91846a7e",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "It is important to check that this list of public NumPy submodules is reasonably complete. I just noticed that `lib.recfunctions` was previously absent, so refguide_check wasn't executing docstrings in that module, some of which were the subject of reviewer comments (probably diffs originated from before refguide switch when I was using vanilla doctests).\r\n\r\nAlso, even if I add `lib.recfunctions`, not all function docstrings therein are executed -- it seems I also need to add functions to `__all__` in the module, but I'm hesitant do start doing that more broadly without reviewer approval first. Thoughts on this?",
        "createdAt" : "2018-12-05T23:31:16Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "f3f4bdaf-a122-4ef9-9af7-e04435c1bfb6",
        "parentId" : "196de1aa-509d-44a8-b073-eaad91846a7e",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think skipping private functions, which should be everything not in `__all__` with, or without the underscore, would probably be OK.  If they are not intended to be private then they should be added. That said, `lib.recfunctions` has always been an oddball, as it is not imported at the top level.\r\n\r\n@shoyer Not all functions in `lib.recfunctions` have dispatchers.",
        "createdAt" : "2018-12-05T23:42:24Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "12427f3f-8532-4a40-b573-3268ed8c9f8f",
        "parentId" : "196de1aa-509d-44a8-b073-eaad91846a7e",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "@charris looking through `lib.recfunctions` the functions without dispatchers seem to not take arrays as inputs (e.g., `get_fieldspec`). So these properly don't have dispatchers -- there's no array argument on which to call a dispatcher method (we don't have duck-typed dtypes). Let me know if there's anything in particular that you think I missed, though...",
        "createdAt" : "2018-12-06T00:33:15Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f8a85b9ece5773a8ac75ffcd2502fc93612eff",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@BASE_MODULE = \"numpy\"\n\nPUBLIC_SUBMODULES = [\n    'core',\n    'f2py',"
  },
  {
    "id" : "4cf389f3-0e52-48c4-ae67-dcf17f6256ef",
    "prId" : 14732,
    "prUrl" : "https://github.com/numpy/numpy/pull/14732#pullrequestreview-303355488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b79d6b6d-f2e2-45d5-b31e-3115dc20956b",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can you give an example of where we failed without this chaining?",
        "createdAt" : "2019-10-17T15:27:24Z",
        "updatedAt" : "2019-11-22T16:02:18Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "4ed4f284-0c36-4e23-8453-a93a582137f4",
        "parentId" : "b79d6b6d-f2e2-45d5-b31e-3115dc20956b",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "On [user.genfromtxt](https://numpy.org/devdocs/user/basics.io.genfromtxt.html?highlight=genfromtxt#tweaking-the-conversion), int the `Converted case ...` block which is a continuation of the block above without repeating the `data` and `convertfunc` definitions",
        "createdAt" : "2019-10-17T15:38:49Z",
        "updatedAt" : "2019-11-22T16:02:18Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "dff3c1f90af9053128e6e241e1b5f19d858670f4",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +691,695 @@            # namespace for each test chunk, so variables will be \"lost\" after\n            # a chunk. Chain the globals to avoid this\n            t.globs.update(ns)\n            t.filename = short_path(t.filename, cwd)\n            # Process our options"
  },
  {
    "id" : "bbe5a265-7966-4379-a804-eaae06c512c2",
    "prId" : 14732,
    "prUrl" : "https://github.com/numpy/numpy/pull/14732#pullrequestreview-317997712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac28f703-9dc2-423e-9170-95c7aa4fdcfa",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Needs docstring.",
        "createdAt" : "2019-11-17T01:00:14Z",
        "updatedAt" : "2019-11-22T16:02:18Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "15f8c86d-b0d8-43ab-8296-9774a8d110b0",
        "parentId" : "ac28f703-9dc2-423e-9170-95c7aa4fdcfa",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "added",
        "createdAt" : "2019-11-17T02:23:11Z",
        "updatedAt" : "2019-11-22T16:02:18Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "dff3c1f90af9053128e6e241e1b5f19d858670f4",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +867,871 @@    `suffixes`\n    \"\"\"\n    if os.path.exists(base_path) and os.path.isfile(base_path):\n        yield base_path\n    for dir_name, subdirs, files in os.walk(base_path, topdown=True):"
  }
]