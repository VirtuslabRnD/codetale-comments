[
  {
    "id" : "a1b7b6b9-ed9c-4e9f-9292-1939d5f6cc70",
    "prId" : 3111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dda2854a-773e-45b0-82dd-8a26bfd30b5e",
        "parentId" : null,
        "authorId" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "body" : "Is void the empty interface in TypeScript?\n",
        "createdAt" : "2014-11-22T21:08:41Z",
        "updatedAt" : "2014-11-22T21:08:41Z",
        "lastEditedBy" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "tags" : [
        ]
      },
      {
        "id" : "8f288e90-9c81-4bc8-b9c9-4abcb163de20",
        "parentId" : "dda2854a-773e-45b0-82dd-8a26bfd30b5e",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "no. http://goo.gl/9oMK9c\nit should be `{}` or `Object`. I recommend to `{}`.\n",
        "createdAt" : "2014-11-23T01:07:45Z",
        "updatedAt" : "2014-11-23T01:07:45Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "82e42f3d53015af41a3224795b929b46f72a05a1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@    export function createElement(type: string, props: SvgAttributes, ...children: any[]): ReactSVGElement;\n\n    export function render<P>(component: ReactComponentElement<P>, container: Element, callback?: () => void): Component<P, void>;\n\n    export function render(component: ReactHTMLElement, container: Element, callback?: () => void): ReactHTMLElement;"
  },
  {
    "id" : "6d2c6666-1ee7-4810-abee-66e96ac04bf3",
    "prId" : 3314,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "448a218d-493a-44e2-9c36-50f416337602",
        "parentId" : null,
        "authorId" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "body" : "I like the clarity\n",
        "createdAt" : "2014-12-13T01:11:48Z",
        "updatedAt" : "2014-12-13T01:11:48Z",
        "lastEditedBy" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "660d2635653956dc99125e94f18455d8330d2c46",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +52,56 @@    // ----------------------------------------------------------------------\n\n    interface ComponentFactory<P> {\n        (props?: P, ...children: any/*ReactNode*/[]): ReactElement<P>;\n    }"
  },
  {
    "id" : "0f8c23b5-96bc-45fe-9431-dc41f3c71996",
    "prId" : 3492,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e968bedc-28d0-4669-83d6-efb1cfd8bb20",
        "parentId" : null,
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "OK, so perhaps what you really wanted to do was to uncomment this line? Could you revert this PR and do that instead?\n",
        "createdAt" : "2015-01-21T02:49:06Z",
        "updatedAt" : "2015-01-21T02:49:06Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bb2b48cd26bf3c83ab63e038c4753b2137bc04b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +48,52 @@    interface ComponentClass<P> {\n        // Deprecated in 0.12. See http://fb.me/react-legacyfactory\n        // new(props: P): ReactElement<P>;\n        // (props: P): ReactElement<P>;\n    }"
  },
  {
    "id" : "027497f9-965d-477f-ae22-676c5e731b3f",
    "prId" : 5869,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11871fc-5cac-46cb-a76f-730a3779b9b0",
        "parentId" : null,
        "authorId" : "77a8dad4-997b-4b20-ae1a-46cd2ad250e1",
        "body" : "Shouldn't this just be `static defaultProps: P`?\n",
        "createdAt" : "2015-09-18T19:43:49Z",
        "updatedAt" : "2015-09-18T19:43:49Z",
        "lastEditedBy" : "77a8dad4-997b-4b20-ae1a-46cd2ad250e1",
        "tags" : [
        ]
      },
      {
        "id" : "686f0bdd-266b-4698-98c8-6abd3da33376",
        "parentId" : "d11871fc-5cac-46cb-a76f-730a3779b9b0",
        "authorId" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "body" : "It's a shameless copy-paste from ComponentClass, since there is no way (that I know of) to link it to Component.\n",
        "createdAt" : "2015-09-18T21:38:41Z",
        "updatedAt" : "2015-09-18T21:38:41Z",
        "lastEditedBy" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "tags" : [
        ]
      },
      {
        "id" : "461026a6-59ac-4e4a-90e1-c4bb46b0709e",
        "parentId" : "d11871fc-5cac-46cb-a76f-730a3779b9b0",
        "authorId" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "body" : "Also, it's not possible to reference type parameters, such as `P` in a static method definition :(\n",
        "createdAt" : "2015-09-18T22:04:25Z",
        "updatedAt" : "2015-09-18T22:04:25Z",
        "lastEditedBy" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "tags" : [
        ]
      },
      {
        "id" : "f52e498c-9fb1-4663-8b14-381d6561333b",
        "parentId" : "d11871fc-5cac-46cb-a76f-730a3779b9b0",
        "authorId" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "body" : "Yeah, I guess this is the best we can do for that then.\n",
        "createdAt" : "2015-09-27T16:26:47Z",
        "updatedAt" : "2015-09-27T16:26:47Z",
        "lastEditedBy" : "f8cc332b-a66e-442c-8a4a-388a74c3ed9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "64cd3d9c56336ffaf2c64ff5de95438c52cda656",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +136,140 @@        static contextTypes: ValidationMap<any>;\n        static childContextTypes: ValidationMap<any>;\n        static defaultProps: Props<any>;\n        \n        constructor(props?: P, context?: any);"
  },
  {
    "id" : "2e9e9ac5-5a8f-407c-9720-fc29748760d1",
    "prId" : 5892,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41626220-b53b-4d1f-8a2f-bfed79e86255",
        "parentId" : null,
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "rm trailing whitespace\n",
        "createdAt" : "2015-10-05T22:47:36Z",
        "updatedAt" : "2015-10-05T22:47:36Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      }
    ],
    "commit" : "f03129f8fa9c5f58a047f1585ce16dc325a95942",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1669,1673 @@    // Reat.addons.update\n    // ----------------------------------------------------------------------\n    \n    interface UpdateSpecCommand {\n        $set?: any;"
  },
  {
    "id" : "4fec5057-8312-43bd-9755-391fdf227365",
    "prId" : 6738,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "822c0c95-30ee-4bb0-bac2-11272117b27e",
        "parentId" : null,
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "`<T extends HTMLElement>`?\n",
        "createdAt" : "2015-11-13T00:52:43Z",
        "updatedAt" : "2015-12-01T22:27:07Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7465b3fbe8744e430e0c9909c176017be8d72c6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +324,328 @@    }\n\n    interface HTMLProps<T> extends HTMLAttributes, Props<T> {\n    }\n"
  },
  {
    "id" : "e292e9cb-5605-402e-8a38-983ebd0ee90f",
    "prId" : 8236,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5095b916-1ef6-4785-8e7a-b062514192dc",
        "parentId" : null,
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "How do you feel about `: string`?\n",
        "createdAt" : "2016-02-24T19:25:49Z",
        "updatedAt" : "2016-02-25T09:28:51Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      },
      {
        "id" : "69f44753-41a7-4923-8f03-e55274f77fa3",
        "parentId" : "5095b916-1ef6-4785-8e7a-b062514192dc",
        "authorId" : "e16e8a8d-c76a-435c-98ab-89c6e0c6cf00",
        "body" : "`: string` is not possible, since typescript understands, that we have an accessor here, which will be able to target any of the defined fields.\n\nNevertheless the smalles form I can find is `[key: string]: string | string[] | boolean | EventHandler<SyntheticEvent> | {__html: string};` and I will update the PR accordingly.\n",
        "createdAt" : "2016-02-25T08:39:32Z",
        "updatedAt" : "2016-02-25T09:28:51Z",
        "lastEditedBy" : "e16e8a8d-c76a-435c-98ab-89c6e0c6cf00",
        "tags" : [
        ]
      },
      {
        "id" : "87af421f-3a23-4d67-8541-c50d2114e72f",
        "parentId" : "5095b916-1ef6-4785-8e7a-b062514192dc",
        "authorId" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "body" : "ah, right. I'm not too fussed about this; I think `any` will do just fine.\n",
        "createdAt" : "2016-02-25T09:29:00Z",
        "updatedAt" : "2016-02-25T09:29:00Z",
        "lastEditedBy" : "ca24dbcf-4d3f-43c9-b883-2659edddde43",
        "tags" : [
        ]
      }
    ],
    "commit" : "744a89c4b12aa6537bcc39e7581d291dc74a4c3a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1846,1850 @@        \n        // Allows aria- and data- Attributes\n        [key: string]: any;\n    }\n"
  },
  {
    "id" : "2e2b1837-94cc-44cb-8109-4b140e24c1e2",
    "prId" : 8543,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a001d9f-3f5a-44ff-a156-91e9118be16c",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : ":+1: \n",
        "createdAt" : "2016-03-15T17:23:15Z",
        "updatedAt" : "2016-03-15T17:23:15Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b2cbaed753ae15a0e3132926c4ace8db18a342a",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +169,173 @@        // always pass children as variadic arguments to `createElement`.\n        // In the future, if we can define its call signature conditionallly\n        // on the existence of `children` in `P`, then we should remove this.\n        props: P & { children?: ReactNode };\n        state: S;"
  }
]