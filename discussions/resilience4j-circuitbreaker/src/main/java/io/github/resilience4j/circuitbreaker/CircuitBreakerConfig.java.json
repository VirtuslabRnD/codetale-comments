[
  {
    "id" : "3f290690-aa3e-4d64-9b32-3ea31e24505d",
    "prId" : 665,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/665#pullrequestreview-298377262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f30513-2105-42a5-97b2-bbfb3b1ab43f",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "We could remove `waitDurationInOpenState` and replace it by using a constant default `waitIntervalFunctionInOpenState`",
        "createdAt" : "2019-10-05T06:49:22Z",
        "updatedAt" : "2019-10-07T18:44:16Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "7e9bf405-5691-4a27-a57b-0282da4330de",
        "parentId" : "61f30513-2105-42a5-97b2-bbfb3b1ab43f",
        "authorId" : "67360ad9-7157-475a-9aea-bef6fd0ec00f",
        "body" : "That would be a breaking change to remove `getWaitDurationInOpenState()` from this class",
        "createdAt" : "2019-10-07T18:43:04Z",
        "updatedAt" : "2019-10-07T18:44:16Z",
        "lastEditedBy" : "67360ad9-7157-475a-9aea-bef6fd0ec00f",
        "tags" : [
        ]
      },
      {
        "id" : "9c8033fa-d9e0-4159-9d5f-09da7776f9ba",
        "parentId" : "61f30513-2105-42a5-97b2-bbfb3b1ab43f",
        "authorId" : "67360ad9-7157-475a-9aea-bef6fd0ec00f",
        "body" : "I can do that if you want, up to you",
        "createdAt" : "2019-10-07T18:43:20Z",
        "updatedAt" : "2019-10-07T18:44:16Z",
        "lastEditedBy" : "67360ad9-7157-475a-9aea-bef6fd0ec00f",
        "tags" : [
        ]
      },
      {
        "id" : "3ae78d11-ae4a-4e08-b72b-90408a596f3f",
        "parentId" : "61f30513-2105-42a5-97b2-bbfb3b1ab43f",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "No, its fine. I can adjust it.",
        "createdAt" : "2019-10-07T20:04:54Z",
        "updatedAt" : "2019-10-07T20:04:54Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "943c5daf770902c019fcc2010d67084ed5213187",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +60,64 @@    private int minimumNumberOfCalls = DEFAULT_MINIMUM_NUMBER_OF_CALLS;\n    private boolean writableStackTraceEnabled = DEFAULT_WRITABLE_STACK_TRACE_ENABLED;\n    private Duration waitDurationInOpenState = Duration.ofSeconds(DEFAULT_WAIT_DURATION_IN_OPEN_STATE);\n    private boolean automaticTransitionFromOpenToHalfOpenEnabled = false;\n    private IntervalFunction waitIntervalFunctionInOpenState = null;"
  },
  {
    "id" : "f4abfd02-f329-48db-ba1e-2482c1c7599f",
    "prId" : 428,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/428#pullrequestreview-229677417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b276c14c-f8d0-41c5-aed8-07e6618a6d69",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "I think a config should not have a name.\r\nWe should store configs in a Registry.\r\nSee comments for more details.",
        "createdAt" : "2019-04-22T08:05:09Z",
        "updatedAt" : "2019-04-24T10:04:20Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "f69a0fb3-5756-4f9a-97fa-a4bd81b9ce28",
        "parentId" : "b276c14c-f8d0-41c5-aed8-07e6618a6d69",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "As we discussed we will us the name here for spring config context relation to shared or customized default config",
        "createdAt" : "2019-04-23T16:59:22Z",
        "updatedAt" : "2019-04-24T10:04:20Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "325567814d800cd47ff01fa9b1aef560ff5ce53b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +45,49 @@    private Predicate<Throwable> recordFailurePredicate = DEFAULT_RECORD_FAILURE_PREDICATE;\n    private boolean automaticTransitionFromOpenToHalfOpenEnabled = false;\n    private String configurationName;\n\n    private CircuitBreakerConfig() {"
  },
  {
    "id" : "596dbc99-2584-4054-9f43-a527d1e4f1b1",
    "prId" : 289,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/289#pullrequestreview-178439607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "409c0bef-585f-4d1b-bc71-0f69b1234c00",
        "parentId" : null,
        "authorId" : "0d4b6643-4755-4dd4-b365-81d18b9cc553",
        "body" : "This is the only functional change in this PR. Previously a null `errorRecordingPredicate` would allow being used, but that seem undesired from what I could see in the code.",
        "createdAt" : "2018-11-26T18:37:45Z",
        "updatedAt" : "2019-04-03T16:53:03Z",
        "lastEditedBy" : "0d4b6643-4755-4dd4-b365-81d18b9cc553",
        "tags" : [
        ]
      }
    ],
    "commit" : "28d1d8cf3dc827af7e4997e3359f544e94ce995d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +251,255 @@            config.ringBufferSizeInClosedState = ringBufferSizeInClosedState;\n            config.ringBufferSizeInHalfOpenState = ringBufferSizeInHalfOpenState;\n            if(errorRecordingPredicate != null) {\n                config.recordFailurePredicate = errorRecordingPredicate;\n            }"
  }
]