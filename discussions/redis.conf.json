[
  {
    "id" : "aaab5e51-49da-4346-bd7a-8ebe90658d76",
    "prId" : 8644,
    "prUrl" : "https://github.com/redis/redis/pull/8644#pullrequestreview-612094821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67421d35-429a-4e30-a5ea-dcb7fc836a1c",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "do we wanna mention that it would be unsafe to pass this in the config file and advise stdin?",
        "createdAt" : "2021-03-15T10:30:43Z",
        "updatedAt" : "2021-03-15T10:30:47Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "9224b7ae-6863-47f3-870e-b4c2d3e51320",
        "parentId" : "67421d35-429a-4e30-a5ea-dcb7fc836a1c",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "I think `stdin` may add false sense of security, because it's still accessible through `CONFIG GET` and will get written by `CONFIG REWRITE`.\r\n\r\nWe should address this separately with an option to secure config parameters, but I see it as a separate issue as [described here](https://github.com/redis/redis/issues/8055#issuecomment-731266215).",
        "createdAt" : "2021-03-15T11:40:22Z",
        "updatedAt" : "2021-03-15T11:40:22Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b50a11f18c9c16d58fe2a1f01906d5a250709c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +155,159 @@# as well.\n#\n# tls-key-file-pass secret\n\n# Normally Redis uses the same certificate for both server functions (accepting"
  },
  {
    "id" : "70c26d34-8eb6-4eb6-8163-8b06618c37f5",
    "prId" : 8587,
    "prUrl" : "https://github.com/redis/redis/pull/8587#pullrequestreview-620337699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "parentId" : null,
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "This is according to @oranagra's idea. (I didn't mention \"historical reasons\"). What do you think?",
        "createdAt" : "2021-03-10T14:03:22Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "742113cb-f690-4f45-b3c3-fb63492a52d7",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "@zuiderkwast\r\nSo basically the cluster bus message should always specify `port` and an optional `secondary-port`, and we should always include both (if configured). Does that make sense?\r\n",
        "createdAt" : "2021-03-11T08:16:16Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "98569fe4-162c-4a45-9792-2fe176a68d26",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "@yossigo Yes, in the cluster bus, this is the backward compatible way.\r\n\r\nI haven't added TLS as a secondary port in a non-TLS cluster (non-TLS cluster bus). Are you OK with postponing that as future work? (My estimate is that it's easy to implement, but some more work is needed in the test framework.)",
        "createdAt" : "2021-03-11T08:32:07Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "7b1fa256-7fe4-435b-8210-64d5a602db0a",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "I don't think we really ever need to support the TLS as a secondary port. I know you asked for it, but this seems like a dubious production configuration to have.",
        "createdAt" : "2021-03-16T05:46:58Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "4fd3d3b7-5616-4bca-9766-3b08af1ec201",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "@madolson Why do you think so? The industry is moving towards TLS everywhere but the real security value is not always great, and in some cases the cost can be high.\r\n\r\nConsider this example:\r\n* A bunch of RaspberryPI physically interconnected through a small network switch\r\n* Serving different types of clients through a wireless network (some IoT deployment)\r\n\r\nTLS on the cluster bus may have high impact, and low security value.\r\nTLS for clients has high value, but some may not support it and require plain fallback.\r\n\r\nI think we sometimes forget how versatile Redis deployments are.",
        "createdAt" : "2021-03-16T14:29:53Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      },
      {
        "id" : "a347dd84-2ff5-4e01-90cb-736eec3da019",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "body" : "... or a cluster deployed on a single machine, or even in a single container, just to make use of multiple CPUs.",
        "createdAt" : "2021-03-18T10:39:12Z",
        "updatedAt" : "2021-03-24T20:56:01Z",
        "lastEditedBy" : "c6fac63b-ee5a-4181-b121-48bfacc74a59",
        "tags" : [
        ]
      },
      {
        "id" : "035df26d-bbb7-46f2-b65c-27abfbb291ab",
        "parentId" : "e2169a49-f0f3-420e-9ea1-12b0210b8aa9",
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Sorry, there was a lot of context to catch up and I misunderstood what the suggestion was. I think having TLS for outbound ports but running the clusterbus using TCP makes plenty of sense.",
        "createdAt" : "2021-03-25T00:40:15Z",
        "updatedAt" : "2021-03-25T00:49:57Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec47808f810261229aaa9d96194561b0983d5b8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1515,1519 @@# If cluster-tls is set to yes and cluster-announce-tls-port is omitted or set\n# to zero, then cluster-announce-port refers to the TLS port. Note also that\n# cluster-announce-tls-port has no effect if cluster-tls is set to no.\n#\n# If the above options are not used, the normal Redis Cluster auto-detection"
  },
  {
    "id" : "ab4c64e5-57ab-4752-9486-9b36ed960526",
    "prId" : 7807,
    "prUrl" : "https://github.com/redis/redis/pull/7807#pullrequestreview-510476568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bf8276c-86ec-4bf6-9e13-24b970540051",
        "parentId" : null,
        "authorId" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "body" : "Sanitization is the word you're looking for, it's misspelled a couple of places (and correctly in others). ",
        "createdAt" : "2020-10-16T02:43:16Z",
        "updatedAt" : "2020-12-06T09:23:35Z",
        "lastEditedBy" : "3ca74ed4-ec73-427d-88cb-0c084b679a52",
        "tags" : [
        ]
      },
      {
        "id" : "8b0b435c-24c2-4190-a1f0-a5a3f45512ec",
        "parentId" : "8bf8276c-86ec-4bf6-9e13-24b970540051",
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "thanks.. will fix.",
        "createdAt" : "2020-10-16T13:35:55Z",
        "updatedAt" : "2020-12-06T09:23:35Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c54cd006593a03835df07ac9a1a8b139d7a619d2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +371,375 @@# crash later on while processing commands.\n# Options:\n#   no         - Never perform full sanitation\n#   yes        - Always perform full sanitation\n#   clients    - Perform full sanitation only for user connections."
  },
  {
    "id" : "6a33128a-6173-4fca-acaa-1cd214bebe58",
    "prId" : 7420,
    "prUrl" : "https://github.com/redis/redis/pull/7420#pullrequestreview-442826370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "976e383f-49ff-4a3b-99e1-ebe8694cca48",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "from my experience, most of these example lines contain the default.\r\nin your case, (\"Use the following directive to disable..\") it makes sense to keep what you have.\r\nso just for your consideration.",
        "createdAt" : "2020-07-05T17:53:29Z",
        "updatedAt" : "2020-07-06T07:15:06Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "96c86b29-a046-4f30-a5b2-be37fd208561",
        "parentId" : "976e383f-49ff-4a3b-99e1-ebe8694cca48",
        "authorId" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "body" : "Yes, earlier versions followed the same convention but it turned out to be more confusing to users and changed after getting some feedback.",
        "createdAt" : "2020-07-06T07:16:01Z",
        "updatedAt" : "2020-07-06T07:16:01Z",
        "lastEditedBy" : "b35f6f04-eae9-4f88-8265-08b19050f11b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5de9c9d65a20888ae8e76a4dbe82e956cd659f5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +209,213 @@# to unlimited size. The default size is 20480.\n#\n# tls-session-cache-size 5000\n\n# Change the default timeout of cached TLS sessions. The default timeout is 300"
  },
  {
    "id" : "b0e7ee5b-109e-4563-94fe-ff8bdfaf6b03",
    "prId" : 5695,
    "prUrl" : "https://github.com/redis/redis/pull/5695#pullrequestreview-481406546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c5f2d98-6675-41c8-b82f-578c6f28494b",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "```suggestion\r\n# always-show-logo yes\r\n```\r\n\r\nnote that this change is not just fixing a comment, it actually changes the behavior when someone uses the default conf file.\r\n\r\non the other hand, i agree that this needs to change since most of the not commented lines in this file represent the default value.\r\nother times they have a non default value but are put in a comment.\r\n\r\nmy suggestion leads to the same result, but maybe you agree that it's nicer?",
        "createdAt" : "2020-09-02T18:18:21Z",
        "updatedAt" : "2020-09-02T18:23:43Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "27e0c9de-b70c-4c8e-9a51-2286975607f7",
        "parentId" : "8c5f2d98-6675-41c8-b82f-578c6f28494b",
        "authorId" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "body" : "Maybe we could change the default value instead?",
        "createdAt" : "2020-09-03T00:43:47Z",
        "updatedAt" : "2020-09-03T00:43:47Z",
        "lastEditedBy" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2609fc8d296088de675947f5e1190c2c6eefad3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +193,197 @@# However it is possible to force the pre-4.0 behavior and always show a\n# ASCII art logo in startup logs by setting the following option to yes.\nalways-show-logo no\n\n################################ SNAPSHOTTING  ################################"
  },
  {
    "id" : "047aa35f-8266-43ba-a50d-9b677b23771d",
    "prId" : 5695,
    "prUrl" : "https://github.com/redis/redis/pull/5695#pullrequestreview-481555503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0959cd8-d76d-460b-abd0-95a339cf205d",
        "parentId" : null,
        "authorId" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "body" : "are you certain this is right?",
        "createdAt" : "2020-09-02T18:20:26Z",
        "updatedAt" : "2020-09-02T18:23:43Z",
        "lastEditedBy" : "02e243fa-aeed-4b15-9e9e-405ca1702d7e",
        "tags" : [
        ]
      },
      {
        "id" : "04aeeab4-7471-4d9e-b231-d18a3804e8dc",
        "parentId" : "e0959cd8-d76d-460b-abd0-95a339cf205d",
        "authorId" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "body" : "Yes. I did a test manually just now with the following steps.\r\n\r\nstep1: Create a cluster with all 16384 slots allocated to different shards. Each shard has a 1 master and 1 replica.\r\nstep2: Manually set cluster-require-full-coverage to `yes` of all the nodes.\r\nstep3: Choose a shard, and delete a allocated slot from both the master and replica.\r\nstep4: Use `redis-cli --cluster check <ip:port>` to verify that not all 16384 slots are covered by nodes.\r\nstep5: Do `CLUSTER FAILOVER` upon replica, and it succeeded with a response `OK`. And the checking of using `ROLE` also showed that it really succeeded.\r\nstep6: Use `redis-cli --cluster check <ip:port>` to check and it showed that not all 16384 slots are covered by nodes.",
        "createdAt" : "2020-09-03T00:42:21Z",
        "updatedAt" : "2020-09-03T00:42:21Z",
        "lastEditedBy" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "tags" : [
        ]
      },
      {
        "id" : "b0075eb7-69de-487a-975d-de6db8ec237d",
        "parentId" : "e0959cd8-d76d-460b-abd0-95a339cf205d",
        "authorId" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "body" : "We are allowed to do CLUSTER FAILOVER upon replicas only.\r\nAnd cluster-replica-no-failover can only prevent non-manual failover but not manual failover.\r\nFYI https://github.com/redis/redis/blob/9ef8d2f67155d6aa69b8344fc0b63e6dab8ce9f8/src/cluster.c#L3113",
        "createdAt" : "2020-09-03T07:12:47Z",
        "updatedAt" : "2020-09-03T07:12:47Z",
        "lastEditedBy" : "3fd01224-49da-4442-b8fb-3e7fd805eb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2609fc8d296088de675947f5e1190c2c6eefad3",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +931,935 @@\n# This option, when set to yes, prevents replicas from trying to failover its\n# master during master failures. However the replica can still perform a\n# manual failover, if forced to do so.\n#"
  }
]