[
  {
    "id" : "7288d440-45a0-48e0-91dc-d6f8fb5c7fa4",
    "prId" : 3680,
    "prUrl" : "https://github.com/root-project/root/pull/3680#pullrequestreview-227043373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df6c0fd0-94bc-446e-8b99-a667db3c3ae5",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Here, a JS map https://stackoverflow.com/questions/1208222/how-to-do-associative-array-hashing-in-javascript could make things *much* faster...",
        "createdAt" : "2019-04-11T19:18:40Z",
        "updatedAt" : "2019-04-11T19:21:30Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "fcec3b64-3a7d-4397-974d-94be1d530b05",
        "parentId" : "df6c0fd0-94bc-446e-8b99-a667db3c3ae5",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Yes, but this requires creation of such JSON object already on C++ side.\r\nIn principle - possible, but not principal right now.\r\nMuch more important - play-through all scenarios with CSS usage",
        "createdAt" : "2019-04-11T19:29:13Z",
        "updatedAt" : "2019-04-11T19:29:13Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "b4d13854-c51e-4c24-b2bb-3d5d8e4a1a89",
        "parentId" : "df6c0fd0-94bc-446e-8b99-a667db3c3ae5",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Here is PR #3701 which optionally enable such feature for selected C++ objects/data members. Potentially can be enabled for attributes storage in the future ",
        "createdAt" : "2019-04-16T08:13:29Z",
        "updatedAt" : "2019-04-16T08:13:29Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d23be991c52e334faad6eaa26aef620198687230",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +4269,4273 @@      if (!map || !map.length) return;\n\n      for (var i=0; i<map.length; ++i)\n         if (map[i].first === name)\n            return map[i].second;"
  }
]