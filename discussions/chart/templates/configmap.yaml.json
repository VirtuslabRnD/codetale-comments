[
  {
    "id" : "a97f8533-3d2a-49d8-b837-8ff822bbef97",
    "prId" : 8777,
    "prUrl" : "https://github.com/apache/airflow/pull/8777#pullrequestreview-417106736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd4d67f3-e35c-4e03-b587-02f629112a7a",
        "parentId" : null,
        "authorId" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "body" : "does it make sense to expose the airflow.cfg via helm values \r\n\r\n```\r\nairflow_cfg:\r\n  core:\r\n    store_serialized_dags: True\r\n    min_serialized_dag_update_interval: 30\r\n  scheduler:\r\n    child_process_log_directory:  '$AIRFLOW_HOME/logs/scheduler'\r\n    catchup_by_default: False\r\n  webserver:\r\n    rbac:  True\r\n    update_fab_perms: True\r\n    enable_proxy_fix: True\r\n```\r\n\r\n\r\nand render it in the configmap using something like the below snippet\r\n```\r\n  airflow.cfg: |-\r\n    {{- range $airflow_config_header, $config_dict := .Values.airflow_cfg }}\r\n    [{{ $airflow_config_header }}]\r\n    {{- range $key, $val := $config_dict }}\r\n    {{ $key }} = {{ $val }}\r\n    {{- end }}\r\n    {{- end }}\r\n```\r\n\r\nto make it easier to change the airflow configuration",
        "createdAt" : "2020-05-08T13:58:29Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "tags" : [
        ]
      },
      {
        "id" : "2bb2b7f9-ad78-4a31-a4eb-f7f9a11cd93a",
        "parentId" : "cd4d67f3-e35c-4e03-b587-02f629112a7a",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Perhaps, but you can set all config options by environment variables: `AIRFLOW__CORE__STORE_SERIALIZED_DAGS` (for instance) via the `env` top level key in Values  so it's not needed. Might be a good idea, but not needed\r\n",
        "createdAt" : "2020-05-14T12:41:40Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "e2bcafb2-a04a-4d59-959b-decac763a885",
        "parentId" : "cd4d67f3-e35c-4e03-b587-02f629112a7a",
        "authorId" : "b28ed531-4583-40c6-81ef-a719b768e1d4",
        "body" : "I envisioned this default `airflow.cfg` as a good starting point for this chart and that any user-specific overrides would be passed via the `env` field as @ashb mentioned. Mostly so that we don't need to maintain a helm value to airflow.cfg mapping.",
        "createdAt" : "2020-05-22T18:24:27Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "b28ed531-4583-40c6-81ef-a719b768e1d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f106e57e03ac11ba65bc55d9349beb038b911b",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@data:\n  # These are system-specified config overrides.\n  airflow.cfg: |\n    [core]\n    load_examples = False"
  },
  {
    "id" : "c0f8cabf-2d9e-4470-916d-d3245ede3e91",
    "prId" : 8777,
    "prUrl" : "https://github.com/apache/airflow/pull/8777#pullrequestreview-423559417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b1a5b63-ecd5-475a-9b38-97c50f565fc6",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "We need to fix this to allow GCS/S3 other remote logging bits",
        "createdAt" : "2020-06-03T13:37:21Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f106e57e03ac11ba65bc55d9349beb038b911b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@{{- if .Values.elasticsearch.enabled }}\n    remote_logging = True\n{{- end }}\n\n    [webserver]"
  },
  {
    "id" : "ac95ae22-9c4d-4442-a258-da9a00420e18",
    "prId" : 8777,
    "prUrl" : "https://github.com/apache/airflow/pull/8777#pullrequestreview-425121067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a49cd305-0416-4a64-80ac-9365bcba4758",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I think we need to make the default_queue configurable with the default being \"celery\"",
        "createdAt" : "2020-06-03T13:38:25Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "e0598a2f-391f-4b51-8033-b837d3dfec98",
        "parentId" : "a49cd305-0416-4a64-80ac-9365bcba4758",
        "authorId" : "b28ed531-4583-40c6-81ef-a719b768e1d4",
        "body" : "Hmm yea this was brought up earlier related to a different configuration. Users can always override settings via the `.Values.env`. How should we treat our `airflow.cfg` here? Maybe keep it as the bare minimum settings to run airflow on `Kubernetes`?",
        "createdAt" : "2020-06-03T13:55:16Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "b28ed531-4583-40c6-81ef-a719b768e1d4",
        "tags" : [
        ]
      },
      {
        "id" : "00cfd9dd-8fc5-4eb7-96ae-92e0c42d8d43",
        "parentId" : "a49cd305-0416-4a64-80ac-9365bcba4758",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Ya agree we can remove this and let it be bare minimum",
        "createdAt" : "2020-06-03T14:02:42Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "c2e6edf3-78cd-4a78-938a-cc409c567f03",
        "parentId" : "a49cd305-0416-4a64-80ac-9365bcba4758",
        "authorId" : "e3d344f1-67a1-4532-9f7a-4011394a4c7c",
        "body" : "Are you sure you want to specify the `airflow.cfg` at all? Or just expose environment variables?",
        "createdAt" : "2020-06-05T08:59:43Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "e3d344f1-67a1-4532-9f7a-4011394a4c7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f106e57e03ac11ba65bc55d9349beb038b911b",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@{{- if eq .Values.executor \"CeleryExecutor\" }}\n    [celery]\n    default_queue = celery\n{{- end }}\n"
  },
  {
    "id" : "3610bd83-b5cc-46e6-a56a-1d1321100ea5",
    "prId" : 8777,
    "prUrl" : "https://github.com/apache/airflow/pull/8777#pullrequestreview-423559417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad9ce523-36df-43e7-bf66-29a404432405",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "We need to mention that something external (like fluentd) needs to collect logs and attach log_id to each record. Or else Webserver would fail to fetch the logs\r\n\r\nhttps://github.com/astronomer/astronomer/blob/master/charts/fluentd/templates/fluentd-configmap.yaml#L163-L171",
        "createdAt" : "2020-06-03T13:40:18Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f106e57e03ac11ba65bc55d9349beb038b911b",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@    write_stdout = True\n    json_format = True\n    log_id_template = {dag_id}_{task_id}_{execution_date}_{try_number}\n\n    [elasticsearch_configs]"
  },
  {
    "id" : "00ea8166-699c-4be2-9fbd-6de221f80128",
    "prId" : 8777,
    "prUrl" : "https://github.com/apache/airflow/pull/8777#pullrequestreview-432694119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a69dd3a4-22b4-4ab8-a191-f46f3be6c544",
        "parentId" : null,
        "authorId" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "body" : "@schnie @ashb a follow up question from  this [one](https://github.com/apache/airflow/pull/8777#discussion_r422158586). `.Values.env` can be used to override airflow config and to provide custom env vars for scheduler, webserver and workers when we use the CeleryExecutor , but how is it handled when user opts for `KubernetesExecutor` ? the configmap here doesn't seem to update `[kubernetes_environment_variables]` section of `airflow.cfg` with the custom environment variables set by the user",
        "createdAt" : "2020-06-17T04:31:59Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "tags" : [
        ]
      },
      {
        "id" : "df2f369c-0c10-4910-954b-e2347a2d4ff8",
        "parentId" : "a69dd3a4-22b4-4ab8-a191-f46f3be6c544",
        "authorId" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "body" : "so it's set  as `AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__*` on the scheduler and that will then be used when the worker pod is spawned by the scheduler? ",
        "createdAt" : "2020-06-17T04:48:24Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "3743a72b-fdd8-43b7-9592-037bac8942e2",
        "tags" : [
        ]
      },
      {
        "id" : "0cc35277-20e1-49e7-9d23-9445b2731eff",
        "parentId" : "a69dd3a4-22b4-4ab8-a191-f46f3be6c544",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "It's handled here https://github.com/apache/airflow/pull/8777/files#diff-2af2eefc736b60f59eddbfd5fc655543R70-R79\r\n\r\n```\r\n\r\n{{- define \"custom_airflow_environment\" }}\r\n  # Dynamically created environment variables\r\n  {{- range $i, $config := .Values.env }}\r\n  - name: {{ $config.name }}\r\n    value: {{ $config.value | quote }}\r\n    {{- if eq $.Values.executor \"KubernetesExecutor\" }}\r\n  - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__{{ $config.name }}\r\n    value: {{ $config.value | quote }}\r\n    {{- end }}\r\n  {{- end }}\r\n```",
        "createdAt" : "2020-06-17T15:50:28Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "7931baa0-e5a6-4921-a74e-2c29bbde2883",
        "parentId" : "a69dd3a4-22b4-4ab8-a191-f46f3be6c544",
        "authorId" : "b025eeaf-63d7-4597-9446-565ef8946eab",
        "body" : "What does the `AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__*` do in this instance? Because in the case of setting `airflow_configmap` the environment variable for that setting is just `AIRFLOW__KUBERNETES__AIRFLOW_CONFIGMAP`. So why the need for the extra environment variable?",
        "createdAt" : "2020-06-17T19:05:53Z",
        "updatedAt" : "2020-06-17T22:24:57Z",
        "lastEditedBy" : "b025eeaf-63d7-4597-9446-565ef8946eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f106e57e03ac11ba65bc55d9349beb038b911b",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@    dags_in_image = True\n    delete_worker_pods = True\n\n    [kubernetes_secrets]\n    AIRFLOW__CORE__SQL_ALCHEMY_CONN = {{ printf \"%s=connection\" (include \"airflow_metadata_secret\" .) }}"
  }
]