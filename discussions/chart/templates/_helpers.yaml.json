[
  {
    "id" : "03c7c7e9-9a86-44a7-b546-5a06f56f42fd",
    "prId" : 11384,
    "prUrl" : "https://github.com/apache/airflow/pull/11384#pullrequestreview-506143711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8564522c-3e70-41e0-b4d1-cb47262f29be",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Do these not need to be guarded so we don't set out if the options are empty?",
        "createdAt" : "2020-10-09T21:56:12Z",
        "updatedAt" : "2020-10-11T18:51:28Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "024eca77-26ba-454f-b80a-5732c488871b",
        "parentId" : "8564522c-3e70-41e0-b4d1-cb47262f29be",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I was waiting for this comment :) and I believe we should not guard it. \r\n\r\nThere is rather complex logic determining if those values should be used or not: https://www.pgbouncer.org/config.html\r\n\r\nThe default setting now is \"prefer\" which requests the TLS from the server and if it is ok, it proceeds, but the server cert is not validated (so not used),  similar case is in \"require\" mode (surprisingly). If SSL is not accepted, the connection is rejected, but if it is accepted, neither the cA nor cert are validated (so they are not used).\r\n\r\nOnly in case of \"verify-ca\" or \"verify-full\" one or both are validated (respectively).\r\n\r\nAdditionally - If the server does not request client certificate, it's not presented at all (thus not read). So the client cert is only actually used if the server requests it.\r\n\r\nSo both server/client certs are not used by default even in  \"prefer\" mode. And having them \"empty\" makes no difference whatsoever.\r\n\r\nFrom my tests, the connection will work just fine in \"prefer\" mode if those are empty, and I'd rather leave it to the pgbouncer to use it as needed using its logic rather than trying to duplicate the logic in the helm chart.\r\n",
        "createdAt" : "2020-10-09T22:37:41Z",
        "updatedAt" : "2020-10-11T18:51:28Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "ee5e12ed-cb0b-4292-925c-cd071ef4bbd1",
        "parentId" : "8564522c-3e70-41e0-b4d1-cb47262f29be",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Actualy I rethought it. I added missing schema and implemented it in a \"proper\" way  -each of the files is separately guarded now - both in the secret and in the .ini file.\r\n\r\nShould be good to go now :)",
        "createdAt" : "2020-10-11T04:54:42Z",
        "updatedAt" : "2020-10-11T18:51:28Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d72fa0ee327fe74155d9dad17469d320a2d6c934",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +272,276 @@\n{{- if .Values.pgbouncer.ssl.ca }}\nserver_tls_ca_file = /etc/pgbouncer/root.crt\n{{- end }}\n{{- if .Values.pgbouncer.ssl.cert }}"
  },
  {
    "id" : "e04ca7f0-80e4-4bdc-b178-8572e947c98b",
    "prId" : 12440,
    "prUrl" : "https://github.com/apache/airflow/pull/12440#pullrequestreview-533358476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c018c8a2-b364-4986-a500-4ad89c91b56b",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Isn't that a problem of the wrong URL specified?\r\n\r\nFor the SQL alchemy connection should be URL-encoded in the first place. This is true for the individual parameters of the query but also for user and password. So I think your problem is that in your original URL you should us %25 where you have '%'  and not replace % with %%.",
        "createdAt" : "2020-11-18T10:25:36Z",
        "updatedAt" : "2020-11-18T10:25:36Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "c3d79261-9172-47d2-a3e9-3a661e0b659f",
        "parentId" : "c018c8a2-b364-4986-a500-4ad89c91b56b",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "The issue is I think that '%' in ConfigParser is special -- it's the same case as I fixed a few years ago in https://github.com/apache/airflow/pull/3787.",
        "createdAt" : "2020-11-18T11:37:45Z",
        "updatedAt" : "2020-11-18T11:37:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3475b5aed903bbb61e0f166de5c842fc4bef806",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +381,385 @@        config = Config(os.path.join(package_dir, 'alembic.ini'))\n        config.set_main_option('script_location', directory)\n        config.set_main_option('sqlalchemy.url', settings.SQL_ALCHEMY_CONN.replace('%', '%%'))\n        script_ = ScriptDirectory.from_config(config)\n"
  },
  {
    "id" : "1b157a98-38d8-461c-a2f3-267db65dd4c3",
    "prId" : 14152,
    "prUrl" : "https://github.com/apache/airflow/pull/14152#pullrequestreview-623744596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dbabcbd-8c43-486b-9be1-4162e6c93f55",
        "parentId" : null,
        "authorId" : "a1587925-b1c0-4469-a592-51497b162e71",
        "body" : "is it possible to create all of these svc accts with a loop, to avoid some repetition?",
        "createdAt" : "2021-02-10T05:24:47Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "a1587925-b1c0-4469-a592-51497b162e71",
        "tags" : [
        ]
      },
      {
        "id" : "3e7b8a68-6130-4662-b0ed-21e95e6987b1",
        "parentId" : "2dbabcbd-8c43-486b-9be1-4162e6c93f55",
        "authorId" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "body" : "That's admittedly something I haven't seen before in other charts that create multiple service accounts, but that's not to say it isn't possible. I can look around, but I'm not too sure if its supported or not. ",
        "createdAt" : "2021-02-10T17:29:41Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "tags" : [
        ]
      },
      {
        "id" : "bf3b7445-b157-4fa4-9638-e86c11cd1a56",
        "parentId" : "2dbabcbd-8c43-486b-9be1-4162e6c93f55",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "@DerekHeldtWerle any luck seeing if this was possible via loop?",
        "createdAt" : "2021-03-29T22:39:35Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "2ddb8c61-a3ae-45b9-8c8b-0c8e699f4e20",
        "parentId" : "2dbabcbd-8c43-486b-9be1-4162e6c93f55",
        "authorId" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "body" : "Unfortunately, I was not able to find anything. ",
        "createdAt" : "2021-03-30T00:11:12Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c04f880af42ec46ee4f78157ecdf86951b381ee",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +401,405 @@    {{ default \"default\" .Values.webserver.serviceAccount.name }}\n{{- end -}}\n{{- end -}}\n\n{{/*"
  },
  {
    "id" : "71ac1313-900c-46ba-ba4e-a62b01366d3d",
    "prId" : 14152,
    "prUrl" : "https://github.com/apache/airflow/pull/14152#pullrequestreview-587810708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e2be5b-757b-4584-b115-c4ad5ed732d8",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "This is not in the chart README.",
        "createdAt" : "2021-02-10T11:46:48Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "1bc9072d-a3a4-4eb8-864a-ce3b2e2dbfdc",
        "parentId" : "f8e2be5b-757b-4584-b115-c4ad5ed732d8",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Why do we need two separate override values?",
        "createdAt" : "2021-02-10T11:47:25Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "6660847c-8e46-4ee5-b6de-18cbea6809a5",
        "parentId" : "f8e2be5b-757b-4584-b115-c4ad5ed732d8",
        "authorId" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "body" : "I'll get it added to the README üëç \r\n\r\nWhen you issue a [helm create](https://helm.sh/docs/helm/helm_create/) command, the additions above (and [others](https://helm.sh/docs/helm/helm_create/)) are added to the `_helpers.yaml` file to help follow the best practices set forward by the helm team. An explanation on the need for the two separate options can be found [here](https://stackoverflow.com/a/63839389). Since we aren't leveraging the other items created by the `helm create` command (namely the common labels and selector labels) I can remove the `airflow.name` definition as its currently unused.\r\n\r\nI think future looking a different PR that adds the common labels,  selector labels, and the `airflow.name` to set the aforementioned labels generated by the `helm create` command would also be worthwhile to push out to all of the manifests",
        "createdAt" : "2021-02-10T16:36:26Z",
        "updatedAt" : "2021-04-30T20:37:47Z",
        "lastEditedBy" : "a6dff1b9-6bf3-4294-aed5-bea933e9653d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c04f880af42ec46ee4f78157ecdf86951b381ee",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +22,26 @@*/}}\n{{- define \"airflow.fullname\" -}}\n{{- if .Values.fullnameOverride }}\n{{- .Values.fullnameOverride | trunc 63 | trimSuffix \"-\" }}\n{{- else }}"
  }
]