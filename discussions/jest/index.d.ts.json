[
  {
    "id" : "348fabd5-09c3-4b98-8fad-5840ca7acd46",
    "prId" : 13852,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13852#pullrequestreview-17157029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06ceb692-5f4b-415c-9c8f-76666883441a",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "since this is a major version update, can you please copy the files before the change and place them in `v16`, then make the change. \r\n\r\nSee https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13744 for an example.",
        "createdAt" : "2017-01-18T06:05:56Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ad8a85892d92943d6262bc59ec667fc16bd5d8d",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Type definitions for Jest 18.0.0\n// Project: http://facebook.github.io/jest/\n// Definitions by: Asana <https://asana.com>, Ivo Stratev <https://github.com/NoHomey>, jwbay <https://github.com/jwbay>, Alexey Svetliakov <https://github.com/asvetliakov>"
  },
  {
    "id" : "dddd5e5e-113c-432c-8526-1f81b4a79942",
    "prId" : 13852,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13852#pullrequestreview-17806118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2373e1ea-cf3c-4197-b2a0-291ddd003935",
        "parentId" : null,
        "authorId" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "body" : "Is this second overload still needed? Why do we need the `extends {}` in the first?",
        "createdAt" : "2017-01-20T03:58:19Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "tags" : [
        ]
      },
      {
        "id" : "4e2fe245-1533-42cf-8ece-ded97e56b57f",
        "parentId" : "2373e1ea-cf3c-4197-b2a0-291ddd003935",
        "authorId" : "da48eab1-4a3b-4813-93ce-7d199860c35f",
        "body" : "Yes, it's inferring only for constructor type when you're returning it from jest.fn(), i.e.\r\n```js\r\nconst Mock = jest.fn(() => ({ prop: 1, method: jest.fn() });\r\nconst mock = new Mock();\r\nmock.method();\r\nmock.prop;\r\n```\r\nSecond overload is for simple function mocks. ```extends {}``` allows this overload only be used if you're returning object from mock implementation",
        "createdAt" : "2017-01-21T12:29:50Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "da48eab1-4a3b-4813-93ce-7d199860c35f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ad8a85892d92943d6262bc59ec667fc16bd5d8d",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +53,57 @@    /** Creates a mock function. Optionally takes a mock implementation. */\n    function fn<T extends {}>(implementation: (...args: any[]) => T): Mock<T>;\n    function fn<T>(implementation?: Function): Mock<T>;\n    /** Use the automatic mocking system to generate a mocked version of the given module. */\n    function genMockFromModule<T>(moduleName: string): T;"
  },
  {
    "id" : "282f0384-21d7-41a7-9e5b-411a40b4ceff",
    "prId" : 13852,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13852#pullrequestreview-18011533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cbd70be-339a-45ae-bdf4-330c55fd5546",
        "parentId" : null,
        "authorId" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "body" : "This is clever! Are both intersections needed? It looks like this is already merging the original type of each property via T[P].",
        "createdAt" : "2017-01-20T04:10:56Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "tags" : [
        ]
      },
      {
        "id" : "ace2a45b-bf01-4e19-bd90-da5a539cd1e6",
        "parentId" : "9cbd70be-339a-45ae-bdf4-330c55fd5546",
        "authorId" : "da48eab1-4a3b-4813-93ce-7d199860c35f",
        "body" : "No. MockInstance only adds few mock methods. T[P] is needed to keep original method signature",
        "createdAt" : "2017-01-21T12:31:32Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "da48eab1-4a3b-4813-93ce-7d199860c35f",
        "tags" : [
        ]
      },
      {
        "id" : "951a4a16-880a-487a-91ce-33aa682c7608",
        "parentId" : "9cbd70be-339a-45ae-bdf4-330c55fd5546",
        "authorId" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "body" : "Right, T[P] seems needed to keep signatures, but do we need the `T & `?",
        "createdAt" : "2017-01-23T20:02:13Z",
        "updatedAt" : "2017-01-26T17:46:12Z",
        "lastEditedBy" : "42b731f1-b9e9-4087-9982-d0a4a64c6625",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ad8a85892d92943d6262bc59ec667fc16bd5d8d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +206,210 @@     */\n    type Mocked<T> = {\n        [P in keyof T]: T[P] & MockInstance<T>;\n    };\n"
  },
  {
    "id" : "50eb3b79-445c-4cdf-9b1d-db5d2c4a9c07",
    "prId" : 13852,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13852#pullrequestreview-19382353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e56c19-acef-4811-91be-65af0b25baa3",
        "parentId" : null,
        "authorId" : "9347c569-45ab-49d7-96d3-4b995494c06a",
        "body" : "Should this have been `MockInstance<T[P]>` instead?  Right now it's picking up the type of the parent object instead of the individual methods.",
        "createdAt" : "2017-01-31T18:06:01Z",
        "updatedAt" : "2017-01-31T18:06:01Z",
        "lastEditedBy" : "9347c569-45ab-49d7-96d3-4b995494c06a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ad8a85892d92943d6262bc59ec667fc16bd5d8d",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +206,210 @@     */\n    type Mocked<T> = {\n        [P in keyof T]: T[P] & MockInstance<T>;\n    };\n"
  }
]