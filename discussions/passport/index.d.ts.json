[
  {
    "id" : "84da5ec1-3962-4ea3-8bc2-6727312b19ae",
    "prId" : 14079,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14079#pullrequestreview-20631646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c618938-4702-45a2-b531-c645da40aa61",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "callbacks should not have optional arguments. you will either call it with 2 arguments or not.",
        "createdAt" : "2017-01-18T17:57:14Z",
        "updatedAt" : "2017-02-07T19:21:00Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "65857191-cbb4-4f37-9517-ef2b248b5436",
        "parentId" : "9c618938-4702-45a2-b531-c645da40aa61",
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : "Here we go. ",
        "createdAt" : "2017-02-07T21:58:10Z",
        "updatedAt" : "2017-02-07T21:58:10Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f88d20b89118733caeb7d489afac5a5199927190",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +56,60 @@            authorize(strategy: string|string[], callback?: Function): express.Handler;\n            authorize(strategy: string|string[], options: any, callback?: Function): express.Handler;\n            serializeUser<TUser, TID>(fn: (user: TUser, done: (err: any, id?: TID) => void) => void): void;\n            deserializeUser<TUser, TID>(fn: (id: TID, done: (err: any, user?: TUser) => void) => void): void;\n            transformAuthInfo(fn: (info: any, done: (err: any, info: any) => void) => void): void;"
  },
  {
    "id" : "05772b1b-9c43-4561-81ee-ab0590be6249",
    "prId" : 14079,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14079#pullrequestreview-20710209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b705b029-9feb-4a71-8fb7-e29f3ab3d97c",
        "parentId" : null,
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : "The same here. ",
        "createdAt" : "2017-02-07T22:00:28Z",
        "updatedAt" : "2017-02-07T22:00:44Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      },
      {
        "id" : "786f408b-4f4f-458e-95a6-0d7c098041c1",
        "parentId" : "b705b029-9feb-4a71-8fb7-e29f3ab3d97c",
        "authorId" : "5a28d8d1-0e8a-4afe-94ed-2eb291c13300",
        "body" : "There's two callbacks in the lines you highlighted:\r\n\r\n- `fn`: this is a user-provided callback which will be called by the library. this is the kind of callback described in the Handbook section you linked, and it has no optional parameters.\r\n- `done`: this is a *library*-provided callback which will be called by user code. my argument is that this is a different case; it's not the same kind of callback, it's a method of the library which is dynamically provided to user code. and it's perfectly fine to have optional parameters on functions provided by libraries.\r\n\r\na well-known example of this is Express middleware – middleware functions accept a `next` callback [provided by Express](https://github.com/expressjs/express/blob/master/lib/router/index.js#L178) that is called with no arguments to indicate “ok, invoke the next handler” or can be called with an error to indicate failure.\r\n\r\nand those functions are [typed in DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/express-serve-static-core/index.d.ts#L22) with `err` as an optional parameter:\r\n\r\n```ts\r\ninterface NextFunction {\r\n    (err?: any): void;\r\n}\r\n```\r\n\r\nI appreciate the effort you all put in to review pull requests and ensure that the types in DefinitelyTyped really are high-quality. this is a non-obvious distinction and I'm trying to help clarify your guidelines. I'd be happy to submit a pull request to TypeScript-Handbook to distinguish these two kinds of callback functions.",
        "createdAt" : "2017-02-07T23:16:24Z",
        "updatedAt" : "2017-02-07T23:16:24Z",
        "lastEditedBy" : "5a28d8d1-0e8a-4afe-94ed-2eb291c13300",
        "tags" : [
        ]
      },
      {
        "id" : "4517b5ed-8459-4c82-b7a0-7e161f85862a",
        "parentId" : "b705b029-9feb-4a71-8fb7-e29f3ab3d97c",
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : ">```ts\r\n>interface DoneCallback {\r\n>   (err: any, user?: TUser) => void\r\n>}\r\n>(fn: (id: TID, done: DoneCallback) => void)\r\n>```\r\nThank for your explanation. Seems like initially I missed this part.\r\n\r\n@mhegazy Well, I think you have to revise your request changes.",
        "createdAt" : "2017-02-08T09:09:42Z",
        "updatedAt" : "2017-02-08T09:11:58Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f88d20b89118733caeb7d489afac5a5199927190",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +57,61 @@            authorize(strategy: string|string[], options: any, callback?: Function): express.Handler;\n            serializeUser<TUser, TID>(fn: (user: TUser, done: (err: any, id?: TID) => void) => void): void;\n            deserializeUser<TUser, TID>(fn: (id: TID, done: (err: any, user?: TUser) => void) => void): void;\n            transformAuthInfo(fn: (info: any, done: (err: any, info: any) => void) => void): void;\n        }"
  }
]