[
  {
    "id" : "7b700754-070a-4641-97b3-3c1034ba50bd",
    "prId" : 267,
    "prUrl" : "https://github.com/zio/zio/pull/267#pullrequestreview-180305700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43463d63-ba59-407f-8448-3185f524ea7c",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "Is this still needed?",
        "createdAt" : "2018-11-30T08:27:15Z",
        "updatedAt" : "2018-12-03T08:47:37Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "f60a2b15-2023-477c-a308-b70ef015b672",
        "parentId" : "43463d63-ba59-407f-8448-3185f524ea7c",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "Might still be useful for any future error handling regressions - scalacheck won't show exitResult diff",
        "createdAt" : "2018-11-30T15:07:56Z",
        "updatedAt" : "2018-12-03T08:47:37Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fe5fae4e1d47b127154528e5564ec3a4b73dd78",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +59,63 @@        val res = v1 === v2\n        if (!res) {\n          println(s\"Mismatch: $v1 != $v2\")\n        }\n        res"
  },
  {
    "id" : "3b4d69a6-d263-4c80-bf64-d336e6fb445e",
    "prId" : 267,
    "prUrl" : "https://github.com/zio/zio/pull/267#pullrequestreview-180827990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9fdabc0-cd9d-401f-a36a-de82028767b4",
        "parentId" : null,
        "authorId" : "73db9f28-01ba-4a29-946b-7a2ae5ac5350",
        "body" : "We don't need to run those 50 times anymore, do we?",
        "createdAt" : "2018-12-03T14:37:36Z",
        "updatedAt" : "2018-12-03T14:37:37Z",
        "lastEditedBy" : "73db9f28-01ba-4a29-946b-7a2ae5ac5350",
        "tags" : [
        ]
      },
      {
        "id" : "5ba0dd0d-e911-450a-9cd6-f0073116042b",
        "parentId" : "b9fdabc0-cd9d-401f-a36a-de82028767b4",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "Hopefully we don't. But, these tests are cheap enough to run and each iteration gives a slightly higher chance of spotting a regression. I know this is a defensive code smell, but IMHO justified by the domain - these are effectively integration tests, that also highly depend on JVM behavior and on upstream cats-effect.",
        "createdAt" : "2018-12-03T15:37:08Z",
        "updatedAt" : "2018-12-03T15:37:08Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fe5fae4e1d47b127154528e5564ec3a4b73dd78",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +38,42 @@  }\n\n  (1 to 50).foreach { s =>\n    checkAllAsync(s\"Concurrent[Task] $s\", (_) => ConcurrentTests[Task].concurrent[Int, Int, Int])\n  }"
  }
]