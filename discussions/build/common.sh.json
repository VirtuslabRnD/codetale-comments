[
  {
    "id" : "bfae17b8-d1d4-4bd4-b937-c3b8353228db",
    "prId" : 99415,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99415#pullrequestreview-598004099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4f1d174-1f3d-4786-a2dd-054c5aff2f72",
        "parentId" : null,
        "authorId" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "body" : "should we add one for setcap?",
        "createdAt" : "2021-02-24T22:29:38Z",
        "updatedAt" : "2021-02-24T22:30:03Z",
        "lastEditedBy" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "tags" : [
        ]
      },
      {
        "id" : "4fa457e9-77de-4bf3-8a27-e8ea04831a39",
        "parentId" : "e4f1d174-1f3d-4786-a2dd-054c5aff2f72",
        "authorId" : "1f68015a-b968-47bc-b26f-0adff52fb6d8",
        "body" : "In order for it to matter, bazel would have to be using it to apply capabilities to the binary artifact",
        "createdAt" : "2021-02-24T22:36:03Z",
        "updatedAt" : "2021-02-24T22:36:03Z",
        "lastEditedBy" : "1f68015a-b968-47bc-b26f-0adff52fb6d8",
        "tags" : [
        ]
      },
      {
        "id" : "84484878-03a3-4041-8e08-e22823b72e54",
        "parentId" : "e4f1d174-1f3d-4786-a2dd-054c5aff2f72",
        "authorId" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "body" : "Got it!",
        "createdAt" : "2021-02-24T22:45:15Z",
        "updatedAt" : "2021-02-24T22:45:16Z",
        "lastEditedBy" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b83c760a95f299731f82f7a345faeaf81fab084",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +89,93 @@readonly __default_debian_iptables_version=buster-v1.5.0\nreadonly __default_go_runner_version=buster-v2.3.1\n\n# These are the base images for the Docker-wrapped binaries.\nreadonly KUBE_GORUNNER_IMAGE=\"${KUBE_GORUNNER_IMAGE:-$KUBE_BASE_IMAGE_REGISTRY/go-runner:$__default_go_runner_version}\""
  },
  {
    "id" : "3cd27402-9fbf-48bc-98c7-b64d7f8d7759",
    "prId" : 99080,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99080#pullrequestreview-594525768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdc2901b-498a-480c-acd7-7b7a16de3791",
        "parentId" : null,
        "authorId" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "body" : "I can't seem to figure out a way to move DOCKER_CLI_EXPERIMENTAL=enabled to line 383, I tried setting line 383 to \r\n```\r\n  local -ra build_cmd=(\"DOCKER_CLI_EXPERIMENTAL=enabled\" \"${DOCKER[@]}\" buildx build --load -t \"${image}\" \"--pull=${pull}\" \"${build_args}\" \"${context_dir}\")\r\n```\r\nand leaving line 387 unchanged but I get the following error: \r\n```\r\nbuild/../build/common.sh: line 387: DOCKER_CLI_EXPERIMENTAL=enabled: command not found\r\nTo retry manually, run:\r\n\r\nDOCKER_CLI_EXPERIMENTAL=enabled DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --load -t kube-build:build-7ac69468fc-5-v1.15.8-1 --pull=false --build-arg=KUBE_BUILD_IMAGE_CROSS_TAG=v1.15.8-1 /<redacted>/k8s.io/kubernetes/_output/images/kube-build:build-7ac69468fc-5-v1.15.8-1\r\n\r\n!!! [0214 12:56:06] Call tree:\r\n!!! [0214 12:56:06]  1: build/release.sh:35 kube::build::build_image(...)\r\nmake: *** [Makefile:452: quick-release] Error 1\r\n```",
        "createdAt" : "2021-02-14T20:58:38Z",
        "updatedAt" : "2021-03-17T02:51:33Z",
        "lastEditedBy" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "tags" : [
        ]
      },
      {
        "id" : "8165f2b6-8c84-4e6d-a931-1db91ba580e7",
        "parentId" : "cdc2901b-498a-480c-acd7-7b7a16de3791",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we can `export DOCKER_CLI_EXPERIMENTAL=enabled` this in common.sh probably, I don't think we have a huge reason not to. Some of our makefiles just do this",
        "createdAt" : "2021-02-19T20:07:21Z",
        "updatedAt" : "2021-03-17T02:51:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "086cdfb3601536f24b127d6e1a16fdd96f468126",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +401,405 @@  kube::log::status \"Building Docker image ${image}\"\n  local docker_output\n  docker_output=$(DOCKER_CLI_EXPERIMENTAL=enabled \"${build_cmd[@]}\" 2>&1) || {\n    cat <<EOF >&2\n+++ Docker build command failed for ${image}"
  },
  {
    "id" : "a4147f6b-213c-47ed-8e5b-bde46170d897",
    "prId" : 97699,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97699#pullrequestreview-573982759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab9e9da4-f1a7-4277-98d0-9dbff6948a4d",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "If for some reason we do wind up needing to support older bash it's possible to instead do:\r\n```suggestion\r\n  if [[ ! -z \"${GOLDFLAGS+unset}\" ]]; then\r\n```\r\n(`${FOO+x}` will evaluate to nothing if FOO is set, or else x, so if the length is zero then it wasn't set)\r\n\r\nxref: https://github.com/kubernetes/kubernetes/issues/98294\r\n\r\nI don't think we should need to though.",
        "createdAt" : "2021-01-22T06:31:34Z",
        "updatedAt" : "2021-01-22T06:32:09Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b3475bc653b762b44eabed211ccb80f52ad06fa",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +580,584 @@\n  # use GOLDFLAGS only if it is set explicitly.\n  if [[ -v GOLDFLAGS ]]; then\n    docker_run_opts+=(\n      --env \"GOLDFLAGS=${GOLDFLAGS:-}\""
  },
  {
    "id" : "0b2b39f3-1bdd-4a98-b24f-788a6114539c",
    "prId" : 90940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90940#pullrequestreview-409637371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71bfe9f9-d755-4012-a255-1761be4beca3",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "We are bumping a major version on 1.16.. will that make a difference here?",
        "createdAt" : "2020-05-11T20:44:52Z",
        "updatedAt" : "2020-05-18T08:49:03Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "8276c644-1b2c-481c-babe-b430820a0b38",
        "parentId" : "71bfe9f9-d755-4012-a255-1761be4beca3",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "@cblecker -- Should be fine, but I can run a mock stage after this merges to validate. I think this was more so the bump not getting back to the 1.16 branch in whichever v2.0.0/v12.0.0 update vs a specific reason the base image shouldn't be kept up-to-date.",
        "createdAt" : "2020-05-11T20:50:22Z",
        "updatedAt" : "2020-05-18T08:49:03Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "7f7cdd80-aafe-4658-9523-3b51d0bbb08a",
        "parentId" : "71bfe9f9-d755-4012-a255-1761be4beca3",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I'd like to actually inspect the delta.\r\n\r\none thing is that we're backporting the iptables / iptables nft \"fix\", which we previously suggested we wouldn't,",
        "createdAt" : "2020-05-12T01:23:20Z",
        "updatedAt" : "2020-05-18T08:49:03Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "59234066e97c8ecb3fea2bf022bb1247816d7d13",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +94,98 @@  local arch=$1\n  local debian_base_version=v2.1.0\n  local debian_iptables_version=v12.1.0\n  ### If you change any of these lists, please also update DOCKERIZED_BINARIES\n  ### in build/BUILD. And kube::golang::server_image_targets"
  },
  {
    "id" : "644403ec-6eab-4a78-940a-5152d12d91de",
    "prId" : 90697,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90697#pullrequestreview-404617647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa7731e-2733-45c3-998d-7c5ba6cd3da8",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "this debian_iptables_version has changed in the rest of the PR, should be changed here too?",
        "createdAt" : "2020-05-03T12:13:27Z",
        "updatedAt" : "2020-05-05T19:17:48Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "1e6de021-1776-464a-ac63-c3c75fd29314",
        "parentId" : "8aa7731e-2733-45c3-998d-7c5ba6cd3da8",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "@aojea -- Not yet. See here: https://github.com/kubernetes/kubernetes/pull/90697/files#diff-0ea054266fe6ea2dc38e6079e8adb98bL116\r\n\r\nFrom https://github.com/kubernetes/kubernetes/pull/90665:\r\n>     * Add base images to dependencies.yaml\r\n>       Dependencies for each image are broken up into two sections to allow the dependency check to pass:\r\n>       \r\n>       * `image:tag`: versions that should be bumped in order to build the image\r\n>       * `image:tag: dependents`: dependents that need to be bumped _after_ the image has been built and promoted\r\n\r\nSo we're bumping the tag just in the Makefile to trigger the image build for debian-iptables in this PR.\r\nAfter this merges and the image is promoted, I'll come back with another PR to bring the dependents up to the newly-promoted version.",
        "createdAt" : "2020-05-03T12:25:53Z",
        "updatedAt" : "2020-05-05T19:17:48Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "26b27ee3-b68f-46f1-a17e-64cf52b2d407",
        "parentId" : "8aa7731e-2733-45c3-998d-7c5ba6cd3da8",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "thanks for the clarification, I'm just trying to follow this new process, seems a nice improvement",
        "createdAt" : "2020-05-03T13:10:03Z",
        "updatedAt" : "2020-05-05T19:17:48Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "0838a0bc-3a1d-4db7-83fb-a88fdb901dc8",
        "parentId" : "8aa7731e-2733-45c3-998d-7c5ba6cd3da8",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "Appreciate the feedback, @aojea! 💕\r\nI'll be tracking everything here: https://github.com/kubernetes/kubernetes/issues/90698\r\n\r\n...and documenting everything once some of the last quirks are worked out. :)",
        "createdAt" : "2020-05-03T13:16:03Z",
        "updatedAt" : "2020-05-05T19:17:48Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "d95dcc61f33cfb862abcb2406ef3290f62375753",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +96,100 @@  local arch=$1\n  local debian_base_version=v2.1.0\n  local debian_iptables_version=v12.0.1\n  ### If you change any of these lists, please also update DOCKERIZED_BINARIES\n  ### in build/BUILD. And kube::golang::server_image_targets"
  },
  {
    "id" : "4355964a-74dc-49c7-bdf9-6fd71fc20711",
    "prId" : 87012,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87012#pullrequestreview-340811078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6adae34-98d2-489e-88eb-1e6e6b7d97df",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "cc @mkumatag ",
        "createdAt" : "2020-01-09T21:00:57Z",
        "updatedAt" : "2020-01-09T21:00:57Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3ae0f01e5b395c20c118c4da9392b6766ffc87c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +570,574 @@    --env \"KUBE_VERBOSE=${KUBE_VERBOSE}\"\n    --env \"KUBE_BUILD_WITH_COVERAGE=${KUBE_BUILD_WITH_COVERAGE:-}\"\n    --env \"KUBE_BUILD_PLATFORMS=${KUBE_BUILD_PLATFORMS:-}\"\n    --env \"GOFLAGS=${GOFLAGS:-}\"\n    --env \"GOLDFLAGS=${GOLDFLAGS:-}\""
  },
  {
    "id" : "e83fd00f-d727-4069-90ae-d81f3ca6fbf4",
    "prId" : 70245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70245#pullrequestreview-168523390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80bfad98-4772-4441-a4a3-f4c649628c23",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this alone is wonderful, thanks :-)",
        "createdAt" : "2018-10-25T18:25:26Z",
        "updatedAt" : "2018-10-25T18:25:27Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "f26048ecb1c7b6fb67c2e7c7c96070d7a1743d86",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +100,104 @@    kube-scheduler,\"k8s.gcr.io/debian-base-${arch}:${debian_base_version}\"\n    kube-proxy,\"k8s.gcr.io/debian-iptables-${arch}:${debian_iptables_version}\"\n  )\n\n  echo \"${targets[@]}\""
  },
  {
    "id" : "b5e703f9-8e74-4549-8b21-2efbdcfa78db",
    "prId" : 69003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69003#pullrequestreview-158266711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I don't think we need this - all of the version info is saved outside of docker before we enter the build container because we don't sync `.git` into the container.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/170dcc2ea086f94fb5d80c75f2aa1c1039084d36/build/common.sh#L193-L194",
        "createdAt" : "2018-09-24T19:31:20Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "35416d2f-6226-4306-97e0-763f60944863",
        "parentId" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "... though I guess it doesn't hurt, in case any other tools consult `SOURCE_DATE_EPOCH`.",
        "createdAt" : "2018-09-24T19:35:18Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "5dab3f22-140c-457b-aeae-454f21d8b7b5",
        "parentId" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@ixdy the `kube::version::ldflag()` does not use the stuff from .dockerized-kube-version-defs\r\n\r\nit builds a new date if the env var is not set (the best i can tell):\r\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/lib/version.sh#L155-L156",
        "createdAt" : "2018-09-24T19:40:38Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "adb6c3bb-ef41-43a5-822b-67ce94135d0b",
        "parentId" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "The build image sets `KUBE_GIT_VERSION_FILE`:\r\nhttps://github.com/kubernetes/kubernetes/blob/170dcc2ea086f94fb5d80c75f2aa1c1039084d36/build/build-image/Dockerfile#L36-L37\r\n\r\nWhen this is set, we read it for the version info:\r\nhttps://github.com/kubernetes/kubernetes/blob/170dcc2ea086f94fb5d80c75f2aa1c1039084d36/hack/lib/version.sh#L32-L38",
        "createdAt" : "2018-09-24T19:47:15Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "bf3603cb-cf40-4367-9121-0d6305ce3d86",
        "parentId" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Oh wait, now I see what you're saying. Yes, you are right. I forgot that we only save the git metadata, not time metadata (unlike bazel's workspace status script).",
        "createdAt" : "2018-09-24T19:48:49Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "83a81494-5da5-484d-a31d-6001edd09b89",
        "parentId" : "6afec5c1-a5d7-40da-8bf0-ddaaf256daf9",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "correct :)",
        "createdAt" : "2018-09-24T19:49:19Z",
        "updatedAt" : "2018-09-26T11:28:52Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cfd77149bc84fe755b68794528e7d7cb114d1a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +601,605 @@    --env \"GOLDFLAGS=${GOLDFLAGS:-}\"\n    --env \"GOGCFLAGS=${GOGCFLAGS:-}\"\n    --env \"SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH:-}\"\n  )\n"
  },
  {
    "id" : "21b8294d-7920-427c-96ec-262867e2e6e0",
    "prId" : 59207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59207#pullrequestreview-93366226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c6b6aab-4d94-46c8-a30a-fd9ba26dcafc",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Will this code work in `set -o errexit` mode? Many script work in this mode, so keep it in mind.",
        "createdAt" : "2018-02-01T16:58:35Z",
        "updatedAt" : "2018-02-05T09:22:50Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "99ae4e11-d737-4708-90b0-bcf4a49792b5",
        "parentId" : "5c6b6aab-4d94-46c8-a30a-fd9ba26dcafc",
        "authorId" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "body" : "The script should not terminate, if that's what you mean. The potentially failing `docker inspect` command doesn't cause the script to exit because it's a non-final term in a `||` pipeline.",
        "createdAt" : "2018-02-01T17:24:35Z",
        "updatedAt" : "2018-02-05T09:22:50Z",
        "lastEditedBy" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a67246d4766e92e410401f82ca9d9bc0723d03d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +506,510 @@  code=$(docker inspect \\\n      -f '{{.State.ExitCode}}' \\\n      \"${KUBE_DATA_CONTAINER_NAME}\" 2>/dev/null) || ret=$?\n  if [[ \"${ret}\" == 0 && \"${code}\" != 0 ]]; then\n    kube::build::destroy_container \"${KUBE_DATA_CONTAINER_NAME}\""
  },
  {
    "id" : "5b2dbbeb-11d1-4566-b1e4-f44ca618e625",
    "prId" : 59207,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59207#pullrequestreview-94767675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40cb0fad-566b-4e9c-a43d-ed96f0fddb1b",
        "parentId" : null,
        "authorId" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "body" : "Current statement is a bit convoluted, the following might be clearer?\r\n\r\n```sh\r\nif [[ \"$(docker inspect -f '{{.State.ExitCode}}' \"${KUBE_DATA_CONTAINER_NAME}\")\" != 0 ]]; then\r\n```\r\n\r\nAlso to note the assignment followed by a `||` has a potential bug where `code` has been declared `read-only`, so the _assignment_ of a value to `code` will fail even if the subshell that generates the value does not, so in either case there are failure conditions where `docker inspect` exits non-zero and the container also exited cleanly. ",
        "createdAt" : "2018-02-07T02:33:08Z",
        "updatedAt" : "2018-02-07T02:36:07Z",
        "lastEditedBy" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "tags" : [
        ]
      },
      {
        "id" : "c74fa20a-29da-480a-af9c-f2701da0c14d",
        "parentId" : "40cb0fad-566b-4e9c-a43d-ed96f0fddb1b",
        "authorId" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "body" : "Note that errors in the subshell do not fail the whole `if` block:\r\n\r\n\r\n```sh\r\n$ if [[ \"$( grep 2>&1 )\" == \"test\" ]]; then echo success; fi\r\n$\r\n$ if [[ \"$( grep 2>&1 )\" == *\"PATTERN\"* ]]; then echo success; fi\r\nsuccess\r\n```\r\n\r\nBut it shouldn't matter if it's the case that `$code` is non-zero because it's a non-zero int or an error message here",
        "createdAt" : "2018-02-07T02:37:03Z",
        "updatedAt" : "2018-02-07T02:38:19Z",
        "lastEditedBy" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "tags" : [
        ]
      },
      {
        "id" : "3a08b7f5-f80d-4d52-948c-a94aaafe76fa",
        "parentId" : "40cb0fad-566b-4e9c-a43d-ed96f0fddb1b",
        "authorId" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "body" : "Thanks for the review, @stevekuznetsov!\r\n\r\nI think meaning of the code is different in your example. Currently, if the `docker inspect` command succeeds and the container internal exit code is 0, then the data container is not destroyed and also it's not created again.\r\n\r\nIn your code, this case would mean that the `if` block fails because the container internal exit code would be 0. At that point we wouldn't have anymore the information whether the failure was due to the container exit code being 0 (when nothing would need to be done) and for `docker inspect` failing to find the container (in which case the container would need to be recreated).",
        "createdAt" : "2018-02-07T11:22:30Z",
        "updatedAt" : "2018-02-07T11:22:30Z",
        "lastEditedBy" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "tags" : [
        ]
      },
      {
        "id" : "4eefc55f-a975-4fcc-8527-1d13cdddad53",
        "parentId" : "40cb0fad-566b-4e9c-a43d-ed96f0fddb1b",
        "authorId" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "body" : "Not sure I follow, in my snippet I was still checking `!= 0`. In any case, it's a minor nit. ",
        "createdAt" : "2018-02-07T16:11:18Z",
        "updatedAt" : "2018-02-07T16:11:18Z",
        "lastEditedBy" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a67246d4766e92e410401f82ca9d9bc0723d03d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +507,511 @@      -f '{{.State.ExitCode}}' \\\n      \"${KUBE_DATA_CONTAINER_NAME}\" 2>/dev/null) || ret=$?\n  if [[ \"${ret}\" == 0 && \"${code}\" != 0 ]]; then\n    kube::build::destroy_container \"${KUBE_DATA_CONTAINER_NAME}\"\n    ret=1"
  },
  {
    "id" : "1243c601-3021-4daf-91c4-9134e1b6065c",
    "prId" : 53500,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53500#pullrequestreview-67506445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b500c9-3067-466e-a5fe-9bc5fc126de0",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "This function name isn't descriptive (having an IP is different than having the ip tool), and lacks a comment similar to other functions in this script.",
        "createdAt" : "2017-10-05T19:56:18Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "06b4c2c1-a551-4f55-b3df-668e03f70684",
        "parentId" : "45b500c9-3067-466e-a5fe-9bc5fc126de0",
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "`ip` is quite vague in the Linux world, but it is appropriate in this context based on the has_docker function",
        "createdAt" : "2017-10-05T20:36:18Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      },
      {
        "id" : "63c7334d-ef33-4bc7-a41d-369faf550eb2",
        "parentId" : "45b500c9-3067-466e-a5fe-9bc5fc126de0",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Perhaps \"has_iproute2\" which is the package name?",
        "createdAt" : "2017-10-05T20:38:53Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "de095385b9e46df30bd19861c415199a299e33dd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +318,322 @@}\n\nfunction kube::build::has_ip() {\n  ip -Version | grep 'iproute2' &> /dev/null\n}"
  },
  {
    "id" : "d76e352c-b459-44fa-995c-8b54a019482d",
    "prId" : 53500,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53500#pullrequestreview-67516015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "This prefers ip over ifconfig. Also, which \"ip\" tool are you referring to? The name is pretty generic. Does it accept the same syntax? I would want to try ifconfig first, and ifconfig doesn't work, then try another tool.",
        "createdAt" : "2017-10-05T19:59:18Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "66157dc5-d9c8-4a64-ab58-8d3678a3a7c7",
        "parentId" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "`ifconfig` comes from the `net-tools` package, which is in the process of being deprecated.\r\n\r\nSee this article https://lwn.net/Articles/710533/\r\n\r\nthe `iproute2` tools, which includes `ip`, is the way of the world these days. It should definitely be preferred\r\n\r\nI do recommend reading the article I linked if you want more details about this.",
        "createdAt" : "2017-10-05T20:03:46Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "6e372612-2afe-4766-8a63-c7b18dbc3b4d",
        "parentId" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Got it. Yes, then I'd agree with this. However \"ip\" is a generic binary name.. I've suggested above to verify that the ip tool is actually the one from the iproute2 package, and if not, then we fail back to ifconfig.",
        "createdAt" : "2017-10-05T20:43:42Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "85252730-ebb7-4265-a026-76934646d573",
        "parentId" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I disagree that `ip` is a generic binary name. It's a standard linux thing. Any distro which has a different, non-compatible, command in its place is broken and should fix their setup.",
        "createdAt" : "2017-10-05T20:55:31Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "7453bf4b-b626-4a37-9ccc-a955d0f6c209",
        "parentId" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Linux isn't the only operating system out there (we verify binaries in other parts for darwin compatibility), and you also have to contend with the fact that these are local developer environments. I personally have a utility already on my darwin system that is named \"ip\" that is not the iproute2 utility.\r\n\r\nI believe it's worth verifying that the \"ip\" binary you are going to call is the intended binary, and I've suggested a method of verifying the binary here: https://github.com/kubernetes/kubernetes/pull/53500#discussion_r143051468\r\n",
        "createdAt" : "2017-10-05T21:03:04Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "0b494f71-74d3-41f7-8e4d-61aa2947132a",
        "parentId" : "883eb73a-de16-4cd8-8dca-2063e3e9f243",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I don't think it's a good idea to try and second guess the user like that.\r\nI would be okay with hiding it in an `if ! kube::build::is_osx` instead, though I could go either way since I know there are at least a couple OSX utilities which provide a sufficiently compatible `ip` command for `ip addr` to work and be used here, which muddies the waters some.\r\n\r\nFor your specific system, it might be better to have your `ip` command be an alias that exists in an interactive shell only, or if it was provided by a third party to let them know it's a bad name to use considering other shell scripts will make this same check.",
        "createdAt" : "2017-10-05T21:13:13Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "de095385b9e46df30bd19861c415199a299e33dd",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +634,638 @@function kube::build::start_rsyncd_container() {\n  IPTOOL=ifconfig\n  if kube::build::has_ip ; then\n    IPTOOL=\"ip address\"\n  fi"
  },
  {
    "id" : "82c57a24-1e2f-460c-b1fe-cdffa15b975c",
    "prId" : 53500,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53500#pullrequestreview-67506445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf448716-f503-435a-b7ac-c7038b7da3ab",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Perhaps IP detection should be offloaded into it's own function (with local vars), and then called from here, rather than complicating this bit with another global environment variable.",
        "createdAt" : "2017-10-05T20:00:00Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "802730c3-bda8-478f-8b6a-4e7e928095ac",
        "parentId" : "bf448716-f503-435a-b7ac-c7038b7da3ab",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "This pr makes the state of the world no worse IMO.\r\n\r\nI think refactoring this should be a separate pr from fixing its reliance on a deprecated tool. ifconfig is deprecated at this point.",
        "createdAt" : "2017-10-05T20:01:55Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "6c3d2b87-9225-4f60-ab63-921ab55775e6",
        "parentId" : "bf448716-f503-435a-b7ac-c7038b7da3ab",
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "I think a separate PR makes sense to improve the function, but this PR is fixing a build regression introduced recently.",
        "createdAt" : "2017-10-05T20:39:18Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      },
      {
        "id" : "17ba73e0-989f-402a-9ac6-2d3892bd110d",
        "parentId" : "bf448716-f503-435a-b7ac-c7038b7da3ab",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "It does make it worse if we blindly trust that a binary named \"ip\" is preferred over ifconfig. If we add extra validation that \"ip\" is actually the iproute2 tool, then I'm okay with this. Refactor would also be a good idea, but it can be a separate PR if we validate the binary.",
        "createdAt" : "2017-10-05T20:44:47Z",
        "updatedAt" : "2017-10-06T21:43:06Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "de095385b9e46df30bd19861c415199a299e33dd",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +641,645 @@  kube::build::run_build_command_ex \\\n    \"${KUBE_RSYNC_CONTAINER_NAME}\" -p 127.0.0.1:${KUBE_RSYNC_PORT}:${KUBE_CONTAINER_RSYNC_PORT} -d \\\n    -e ALLOW_HOST=\"$(${IPTOOL} | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1')\" \\\n    -- /rsyncd.sh >/dev/null\n"
  },
  {
    "id" : "a3c9ecb3-8eb6-43d6-be50-4b06b64dca9a",
    "prId" : 51004,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51004#pullrequestreview-57956518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48a43067-e96e-486f-b31a-997d0c9f2582",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is there any simpler way to list IPs on the machine? this is pretty difficult to understand as written.",
        "createdAt" : "2017-08-23T00:23:35Z",
        "updatedAt" : "2017-08-23T01:58:44Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "7ef0461c-68c3-4d0b-9645-efa459cce46d",
        "parentId" : "48a43067-e96e-486f-b31a-997d0c9f2582",
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "On linux hosts, `hostname --ip-address` can tell the host IP address in a neat way, however, it does not work on Mac as far as I can tell, so I think the `grep` way is the only cross-platform approach I can think about..\r\n\r\nOr do you prefer:\r\n\r\n1. check the OS type.\r\n2. use `hostname --ip-address` when it is linux.",
        "createdAt" : "2017-08-23T01:56:20Z",
        "updatedAt" : "2017-08-23T01:59:23Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca76002e896ff8ca19b9260383747a34c6511e79",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +618,622 @@  kube::build::run_build_command_ex \\\n    \"${KUBE_RSYNC_CONTAINER_NAME}\" -p 127.0.0.1:${KUBE_RSYNC_PORT}:${KUBE_CONTAINER_RSYNC_PORT} -d \\\n    -e ALLOW_HOST=\"$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\.){3}[0-9]*' | grep -Eo '([0-9]*\\.){3}[0-9]*' | grep -v '127.0.0.1')\" \\\n    -- /rsyncd.sh >/dev/null\n"
  },
  {
    "id" : "bc39e6ce-4bec-4b5c-9a16-982ac4c718bd",
    "prId" : 50717,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50717#pullrequestreview-58768007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "761d494b-9698-4225-b435-fb6e97a9ead8",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why do we jump through this hoop?  why don't we rsync EVERYTHING?  Just treat it like a volume mount.  As more and more scripts run in the container, we'll have to sync more and more anyway...\r\n",
        "createdAt" : "2017-08-25T20:35:54Z",
        "updatedAt" : "2017-08-25T23:59:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6df757b9-5533-4676-a6bd-162fe6bfca88",
        "parentId" : "761d494b-9698-4225-b435-fb6e97a9ead8",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Mainly due to bandwidth constraints around remote builds. https://github.com/kubernetes/kubernetes/pull/46193#issuecomment-320662223 and https://github.com/kubernetes/kubernetes/issues/50272#issue-248542031 have more details. I tried to sync all of `/.git/` in [here](https://github.com/kubernetes/kubernetes/commit/f9f43143a4deb031b3565bddebc13bd0dd3e9da5#diff-0ee501c7b4b1ab61678579826c6d6534L686) but there was push back.",
        "createdAt" : "2017-08-25T20:53:13Z",
        "updatedAt" : "2017-08-25T23:59:13Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "9f116165-cf61-4f29-99cb-8edacfe214db",
        "parentId" : "761d494b-9698-4225-b435-fb6e97a9ead8",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ok, ignoring .git makes sense, but really it only hurts once, right?  Everything else is noise by comparison.  Why not sync everything but .git ?",
        "createdAt" : "2017-08-25T21:18:37Z",
        "updatedAt" : "2017-08-25T23:59:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e6ebaf19-5a69-46c8-bee5-b1efc2218df2",
        "parentId" : "761d494b-9698-4225-b435-fb6e97a9ead8",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "So if we keep the filter for `/.git/`, then we're left with:\r\n- `/.make/` - make-related metadata that is gitignored\r\n- `/_tmp/` - precommit temporary directory created by ./hack/verify-generated-docs.sh and ./hack/lib/util.sh. also gitignored.\r\n- `/_output/` - Designed to be a one way sync out of the container, rather than something you sync in\r\n- `zz_generated.*` - Generated files. Could allow these to sync, but likely of minimal use.\r\n- `generated.proto` - Generated files. Could allow these to sync, but likely of minimal use.\r\n\r\nThe generated files, I'm okay with syncing in.. but the gitignored directories are probably best to not sync in, as it makes the container environment more hermetic.",
        "createdAt" : "2017-08-25T21:29:22Z",
        "updatedAt" : "2017-08-25T23:59:13Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f1106c8a536228dd6d401698ee304b5b24383b1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +679,683 @@  # from trying to set the uid/gid/perms on the root of the sync tree.\n  # As an exception, we need to sync generated files in staging/, because\n  # they will not be re-generated by 'make'. Note that the 'H' filtered files\n  # are hidden from rsync so they will be deleted in the target container if\n  # they exist. This will allow them to be re-created in the container if"
  },
  {
    "id" : "a682ce42-842b-4d9f-b444-d04782cef468",
    "prId" : 50602,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50602#pullrequestreview-60259254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Most of the images under `test/images` use `arm32v6/busybox` instead of `arm32v7/busybox`. what is the difference? should we be consistent?",
        "createdAt" : "2017-08-23T00:36:48Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "f22301dd-b5fd-4ee9-86e7-63ef45a85960",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@ixdy `Alpine` is only available for `arm32v6`(for the first raspberry pi), but `arm32v6` binaries should be compatible with an `ARMv7` chip (which is likely the reason `Alpine` upstream has chosen to only support `arm32v6`).\r\n\r\nIf there is no specific requirements, I vote for using `arm32v7`(for Raspberry PI 2, Allwinner A10, A20, H3).",
        "createdAt" : "2017-08-23T06:26:34Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "0411ddcd-da41-4db7-a173-c5fb44cbe7dd",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "We should generally only use GOARMv7 things. alpine is a special case as they only have armv6 or armv8. Hence we have to drop down to armv6 for alpine (only)",
        "createdAt" : "2017-08-23T15:16:01Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "cc8bba93-a252-456b-83cb-63ca34518b36",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "should we update the various images in test/images that set `arm=arm32v6/busybox` then?",
        "createdAt" : "2017-08-30T22:36:31Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "0cc1053c-8637-4752-8703-8c29cd66b341",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "> should we update the various images in test/images that set `arm=arm32v6/busybox` then?\r\n\r\n+1\r\n\r\n@ixdy Suppose to be ok. @luxas any suggestions?",
        "createdAt" : "2017-08-31T01:38:32Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "b598d89b-f451-4131-8f11-13d78b98a25a",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think it should be `arm32v7/busybox`; as that is the support level. alpine doesn't have v7 so we have to step down and use v6, but that is a special case.",
        "createdAt" : "2017-09-01T13:51:43Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "8d08ec6e-a99d-4011-a720-8261510ac6b8",
        "parentId" : "c8d60394-b15b-4936-aad6-71f69fb64655",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "we should probably update the `test/images` images to use `arm32v7/busybox` instead of `arm32v6/busybox`, but we don't need to do it in this PR.  cc @mkumatag ",
        "createdAt" : "2017-09-01T23:23:01Z",
        "updatedAt" : "2017-09-02T00:01:06Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d842cbac93034dbcf696216a2b703113e3e9752",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +101,105 @@    \"arm\")\n        local targets=(\n          cloud-controller-manager,arm32v7/busybox\n          kube-apiserver,arm32v7/busybox\n          kube-controller-manager,arm32v7/busybox"
  },
  {
    "id" : "0a9dc9e9-5b66-470c-bda5-3f4e58c9ae65",
    "prId" : 50417,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50417#pullrequestreview-55696810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ca70620-5f90-4ad0-b1df-c9a6be475a93",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "If we're re-adding this, may as well prevent generated files from being rsync'd in too. My original patch:\r\n```\r\ndiff --git a/build/common.sh b/build/common.sh\r\nindex f6def8f3e3bae..1223510dd0410 100755\r\n--- a/build/common.sh\r\n+++ b/build/common.sh\r\n@@ -682,14 +682,10 @@ function kube::build::sync_to_container() {\r\n   # they will not be re-generated by 'make'.\r\n   kube::build::rsync \\\r\n     --delete \\\r\n-    --filter='+ /staging/**' \\\r\n-    --filter='- /.git/' \\\r\n     --filter='- /.make/' \\\r\n     --filter='- /_tmp/' \\\r\n     --filter='- /_output/' \\\r\n     --filter='- /' \\\r\n-    --filter='- zz_generated.*' \\\r\n-    --filter='- generated.proto' \\\r\n     \"${KUBE_ROOT}/\" \"rsync://k8s@${KUBE_RSYNC_ADDR}/k8s/\"\r\n```",
        "createdAt" : "2017-08-10T20:51:01Z",
        "updatedAt" : "2017-08-13T00:52:03Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "82cad738-0d0e-4d7f-a64d-dbc3822e62d5",
        "parentId" : "0ca70620-5f90-4ad0-b1df-c9a6be475a93",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@cblecker ack. on it\r\n",
        "createdAt" : "2017-08-11T00:03:27Z",
        "updatedAt" : "2017-08-13T00:52:03Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "827af63e72304a73f0c8624d570b6c1120ed4923",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +683,687 @@  kube::build::rsync \\\n    --delete \\\n    --filter='- /.git/' \\\n    --filter='- /.make/' \\\n    --filter='- /_tmp/' \\"
  },
  {
    "id" : "997abe2e-d88f-4de0-805f-0e7e6c638a4f",
    "prId" : 43269,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43269#pullrequestreview-27518773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8069e2a6-a724-45fe-9cf1-e7c1d95efa6a",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Have I ever told you the story about how I hate this rsync stuff, and MacOS users should suck it up and get a real OS for building?",
        "createdAt" : "2017-03-17T04:31:24Z",
        "updatedAt" : "2017-03-17T04:31:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3c4f7d12-cdbd-4f27-b60e-1615ffe55090",
        "parentId" : "8069e2a6-a724-45fe-9cf1-e7c1d95efa6a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Have I every told you how people got my hopes up about how awesome bazel was, and then I found out it only worked on Linux?\r\n\r\nIs the distributed/cached stuff for that ready yet?",
        "createdAt" : "2017-03-17T04:44:19Z",
        "updatedAt" : "2017-03-17T04:44:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2af861d0-0e0c-47d3-8695-0860140be37b",
        "parentId" : "8069e2a6-a724-45fe-9cf1-e7c1d95efa6a",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "🔥🔥🔥",
        "createdAt" : "2017-03-17T06:20:11Z",
        "updatedAt" : "2017-03-17T06:21:06Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d2a3bdd60316b8713e3c8449cecd1777a07e3a6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +705,709 @@    --filter='+ generated.proto' \\\n    --filter='+ *.pb.go' \\\n    --filter='+ types.go' \\\n    --filter='+ */' \\\n    --filter='- /**' \\"
  },
  {
    "id" : "d70b5804-8d55-414f-b792-e05a42530ecf",
    "prId" : 40554,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40554#pullrequestreview-18730612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8ef5f5f-eb92-4778-903f-de9687fc9a6e",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "L502 or so needs a fix too, I think",
        "createdAt" : "2017-01-26T21:35:08Z",
        "updatedAt" : "2017-01-26T21:39:40Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "90bf2a3b-f674-495b-a10c-48c2e7dfbcdd",
        "parentId" : "b8ef5f5f-eb92-4778-903f-de9687fc9a6e",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "oops, fixed that one and re-pushed. ",
        "createdAt" : "2017-01-26T21:40:45Z",
        "updatedAt" : "2017-01-26T21:40:45Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6c65f303525c2113bfc0030330e95415f6c99a0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +412,416 @@  mkdir -p \"${LOCAL_OUTPUT_BUILD_CONTEXT}\"\n  # Make sure the context directory owned by the right user for syncing sources to container.\n  chown -R ${USER_ID}:${GROUP_ID} \"${LOCAL_OUTPUT_BUILD_CONTEXT}\"\n\n  cp /etc/localtime \"${LOCAL_OUTPUT_BUILD_CONTEXT}/\""
  },
  {
    "id" : "4bca9bb1-c611-4ae1-bc60-b2d704cb3ec2",
    "prId" : 38926,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38926#pullrequestreview-18900447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "851d5753-1055-49c5-b541-63751d0c5a7a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "nit: `local -r`",
        "createdAt" : "2017-01-20T23:05:33Z",
        "updatedAt" : "2017-01-27T20:44:32Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "82a734de-86e4-4564-a247-95d157b398df",
        "parentId" : "851d5753-1055-49c5-b541-63751d0c5a7a",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe fix?",
        "createdAt" : "2017-01-27T18:28:56Z",
        "updatedAt" : "2017-01-27T20:44:32Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "914824cc092415f0cece520035e16f700c09ce3b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +86,90 @@# $1 - server architecture\nkube::build::get_docker_wrapped_binaries() {\n  debian_iptables_version=v6\n  case $1 in\n    \"amd64\")"
  },
  {
    "id" : "cbccd097-1d01-4a75-8139-02357c5a08ce",
    "prId" : 34257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34257#pullrequestreview-3202785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29f70b63-544c-4c9a-b7f3-8c024b9a5bbb",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "should there be a sleep between attempts?\n",
        "createdAt" : "2016-10-06T19:28:37Z",
        "updatedAt" : "2016-10-06T19:28:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "6c195931-a905-4cdf-ac32-401380d64b4f",
        "parentId" : "29f70b63-544c-4c9a-b7f3-8c024b9a5bbb",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "There is -- we do 20 tries with a 0.1s sleep between each attempt.  The rsync command line is broken over a couple of lines so that might be confusing.\n",
        "createdAt" : "2016-10-06T20:39:00Z",
        "updatedAt" : "2016-10-06T20:39:00Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "cd53daec-97db-4572-ae7c-6020e48f0a38",
        "parentId" : "29f70b63-544c-4c9a-b7f3-8c024b9a5bbb",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "oh, github was hiding the sleep.\n",
        "createdAt" : "2016-10-06T20:57:43Z",
        "updatedAt" : "2016-10-06T20:58:10Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "add137c4d53e922f11500598bd80bd9891e018a0",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +587,591 @@  local tries=20\n  while (( ${tries} > 0 )) ; do\n    if rsync \"rsync://k8s@${1}:${2}/\" \\\n         --password-file=\"${LOCAL_OUTPUT_BUILD_CONTEXT}/rsyncd.password\" \\\n         &> /dev/null ; then"
  },
  {
    "id" : "fd909be4-3d2a-4403-9cce-f5ba2c8b8219",
    "prId" : 30787,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "225fff07-92c4-4191-ab4b-63bc11d118cf",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "No actionable comment here.\n\nI am also disappointed in the old tools. If we can't force people to `brew install`, then another reason for moving into a container is to get rid of any kind of platform specific scripting.\n",
        "createdAt" : "2016-09-01T01:20:09Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "38372111-453d-4ea8-86e2-6b93a7de07fd",
        "parentId" : "225fff07-92c4-4191-ab4b-63bc11d118cf",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "+1 - I see MacOS as MORE impetus to make the docker-build be default.\n\nOn Wed, Aug 31, 2016 at 6:20 PM, Morgan Bauer notifications@github.com\nwrote:\n\n> In build/common.sh\n> https://github.com/kubernetes/kubernetes/pull/30787#discussion_r77101203\n> :\n> \n> >    kube::build::destroy_container \"${KUBE_BUILD_CONTAINER_NAME}\"\n> >  }\n> > \n> > -# Test if the output directory is remote (and can only be accessed through\n> > -# docker) or if it is \"local\" and we can access the output without going through\n> > -# docker.\n> > -function kube::build::is_output_remote() {\n> > -  rm -f \"${LOCAL_OUTPUT_SUBPATH}/test_for_remote\"\n> > -  kube::build::run_build_command touch \"${REMOTE_OUTPUT_BINPATH}/test_for_remote\"\n> >   +function kube::build::probe_address {\n> > -  # Apple has an ancient version of netcat with custom timeout flags.  This is\n> > -  # the best way I (jbeda) could find to test for that.\n> \n> No actionable comment here.\n> \n> I am also disappointed in the old tools. If we can't force people to brew\n> install, then another reason for moving into a container is to get rid of\n> any kind of platform specific scripting.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/30787/files/487945995c84c43caa6f82e902bf277adf89dad2..166d23a43aa2b0f825bc6feec938684b1f43a323#r77101203,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AFVgVKFpENUCcO-O8a5FYFVH0ADCcJlkks5qlih7gaJpZM4Jmt7e\n> .\n",
        "createdAt" : "2016-09-01T06:32:12Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "17d8f80f-a615-4766-9e29-2bc1d64c9577",
        "parentId" : "225fff07-92c4-4191-ab4b-63bc11d118cf",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Totally agree that we should minimize this.  The stuff in `build/` is needed to enable us to easily get there.\n\nMy guide: `build/*` should work without having to install anything special besides Docker for Mac.  That is super easy and we can almost assume it at this poing.\n\nStuff in `hack/*` should feel free to make linux-y/GNU assumptions.  If users _really_ want to run on OS X it'll be unsupported and they'll probably have to `brew install` some stuff.  Most users will be told to just do a `build/run.sh <command>` instead.\n",
        "createdAt" : "2016-09-01T16:41:49Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +585,589 @@function kube::build::probe_address {\n  # Apple has an ancient version of netcat with custom timeout flags.  This is\n  # the best way I (jbeda) could find to test for that.\n  local netcat\n  if nc 2>&1 | grep -e 'apple' >/dev/null ; then"
  },
  {
    "id" : "e10c73d3-f954-4406-8f5d-141bade2b40c",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-1438254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e371d95a-9ec8-4590-bcbe-880a2619689b",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I'm confused - aren't these part of the crossbuild image?\n",
        "createdAt" : "2016-09-20T01:27:44Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "c9a55c6d-3194-4341-991c-69786e679ff3",
        "parentId" : "e371d95a-9ec8-4590-bcbe-880a2619689b",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "No -- there are two things going on here.\n- Different directories under `/usr/local/go/pkg` for different architectures.  This _is_ included in the crossbuild image.\n- Different directories for statically built `_cgo` options.  This is _not_ included in crossbuild.\n\nIf we don't do this then every time we do a docker build we rebuild the world.\n",
        "createdAt" : "2016-09-20T16:39:47Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "f4c6e8ad-5be5-4fbf-90ae-dcdf4b2cb68f",
        "parentId" : "e371d95a-9ec8-4590-bcbe-880a2619689b",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "wonder if there's some way we can explode this list based on `KUBE_CLIENT_PLATFORMS` or `KUBE_CROSSPLATFORMS` or whatever. (maybe in a follow-up?)\n\nalso, we didn't do this previously - why is it necessary now? just to improve performance?\n\nand when are these directories created?\n",
        "createdAt" : "2016-09-22T22:08:35Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "b287342d-9aa1-45da-9063-e64900d235dc",
        "parentId" : "e371d95a-9ec8-4590-bcbe-880a2619689b",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "A key problem here is the way we do `KUBE_FASTBUILD` in `hack/golang.sh`.  There we modify the list of cross targets.  That means that we won't create data container correctly if we come in with `KUBE_FASTBUILD` set.  The \"right\" way to do this is to have a variable for all cross targets we might ever support and then a variable for the cross targets for this build.  That is a bigger change for later.\n",
        "createdAt" : "2016-09-24T17:08:13Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 478,
    "diffHunk" : "@@ -1,1 +483,487 @@    # The data container creates volumes for all of the directories that store\n    # intermediates for the Go build. This enables incremental builds across\n    # Docker sessions. The *_cgo paths are re-compiled versions of the go std\n    # libraries for true static building.\n    local -ra docker_cmd=("
  },
  {
    "id" : "65584a0d-78c5-4fec-86d7-6fa77305964b",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-1438164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0ca44ec-90d0-4650-81f2-f2eec4ed9afb",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is this filtering everything?\n\nwhy do we have filters specified here and in rsyncd.sh and why don't they match?\n",
        "createdAt" : "2016-09-20T01:39:16Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a0490dab-131c-4e02-bd2a-bae985d981a4",
        "parentId" : "f0ca44ec-90d0-4650-81f2-f2eec4ed9afb",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "The rsyncd.sh filters say to never even accept pushing/pulling from those directories.\n\nThese filters say that we won't try to push/pull there.\n\n_tmp should be in the same bucket there so I'll add that.\n\nHowever, with _output we want to make sure we can pull stuff from there as necessary.  We just never push to that.\n",
        "createdAt" : "2016-09-20T17:06:50Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "8b9acc31-fed5-4e5c-b5df-46b993c7e37d",
        "parentId" : "f0ca44ec-90d0-4650-81f2-f2eec4ed9afb",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "still just a little confused - what does `--filter='- /'` do?\n",
        "createdAt" : "2016-09-22T21:53:44Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "fa75b4f9-ea97-4ac7-b868-2c2a451d18b0",
        "parentId" : "f0ca44ec-90d0-4650-81f2-f2eec4ed9afb",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "This prevents it from explicitly trying to set uid/gid/perms on the root directory.  I'll add a comment.\n",
        "createdAt" : "2016-09-24T17:01:16Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 1095,
    "diffHunk" : "@@ -1,1 +683,687 @@    --filter='- /_tmp/' \\\n    --filter='- /_output/' \\\n    --filter='- /' \\\n    \"${KUBE_ROOT}/\" \"rsync://k8s@${KUBE_RSYNC_ADDR}/k8s/\"\n"
  },
  {
    "id" : "b4b52344-497d-46d8-99a2-7662ba561e7e",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-2624214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6131c775-2330-4b8e-9860-e436ceff0019",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this list smells like a source of many future bugs. :\\\n",
        "createdAt" : "2016-09-20T01:41:02Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "cc9b56af-006d-401e-addf-845f9d959571",
        "parentId" : "6131c775-2330-4b8e-9860-e436ceff0019",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Yeah -- I'm torn here.  I tried to keep things clean and have all output go to `_output` so it was really clear what data we had to copy out.  But with generated files we end up with some \"output\" sprinkled throughout the source tree.  This is necessary as go requires you to have all the files that end up in a package be in the same directory I think.\n\nI'm open to suggestions on how to make it clear that there is a list of magic file patterns here that will be copied out.\n",
        "createdAt" : "2016-09-20T17:10:44Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "1fc130bd-dd6e-4816-8c67-d3b7481b906a",
        "parentId" : "6131c775-2330-4b8e-9860-e436ceff0019",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I don't really have a better idea (besides possibly having some process which notices changes to the volume?), but we might want to open an issue to keep track of this. having to keep a list of everything we might ever generate in random places is pretty bad.\n",
        "createdAt" : "2016-10-03T23:37:13Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 1136,
    "diffHunk" : "@@ -1,1 +716,720 @@    --filter='- /_temp/' \\\n    --filter='+ /_output/dockerized/bin/**' \\\n    --filter='+ zz_generated.*' \\\n    --filter='+ generated.proto' \\\n    --filter='+ *.pb.go' \\"
  },
  {
    "id" : "23bde0f2-097a-4418-8b3a-26d0eb0f2a3a",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-1438254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30a4f359-3c4b-409f-a593-6ce5156e7d45",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "does this do the right thing when `$KUBE_RSYNC_PORT` is empty?\n",
        "createdAt" : "2016-09-22T22:19:46Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "561a4a77-1823-499c-a918-2f0978b6f986",
        "parentId" : "30a4f359-3c4b-409f-a593-6ce5156e7d45",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Yeah -- that causes docker to pick an ephemeral port.  We query that with `docker port` below.\n",
        "createdAt" : "2016-09-24T17:14:07Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 808,
    "diffHunk" : "@@ -1,1 +621,625 @@  V=6 kube::log::status \"Starting rsyncd container\"\n  kube::build::run_build_command_ex \\\n    \"${KUBE_RSYNC_CONTAINER_NAME}\" -p 127.0.0.1:${KUBE_RSYNC_PORT}:${KUBE_CONTAINER_RSYNC_PORT} -d \\\n    -- /rsyncd.sh >/dev/null\n"
  },
  {
    "id" : "958f3588-5886-473f-bf85-dc1537eb13dc",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-1438254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfe7daeb-c687-46c1-bafa-2f236ea2ba92",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe comment that this sets `KUBE_RSYNC_ADDR`?\n",
        "createdAt" : "2016-09-22T22:21:03Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "c2c67d74-6201-462f-9e48-4a73e284d4ae",
        "parentId" : "bfe7daeb-c687-46c1-bafa-2f236ea2ba92",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Done\n",
        "createdAt" : "2016-09-24T17:13:30Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +617,621 @@# This will set the global var KUBE_RSYNC_ADDR to the effective port that the\n# rsync daemon can be reached out.\nfunction kube::build::start_rsyncd_container() {\n  kube::build::stop_rsyncd_container\n  V=6 kube::log::status \"Starting rsyncd container\""
  },
  {
    "id" : "fb5cd640-4a38-4c64-9889-16d5a81a3eb7",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-1438254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "510ec692-f5e4-46da-8288-d1f9b6955ddd",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe unset `KUBE_RSYNC_ADDR`?\n",
        "createdAt" : "2016-09-22T22:21:22Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "caf0ca1f-9dec-440a-b734-337872e1c4f8",
        "parentId" : "510ec692-f5e4-46da-8288-d1f9b6955ddd",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "done\n",
        "createdAt" : "2016-09-24T17:14:41Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +652,656 @@}\n\nfunction kube::build::stop_rsyncd_container() {\n  V=6 kube::log::status \"Stopping any currently running rsyncd container\"\n  unset KUBE_RSYNC_ADDR"
  },
  {
    "id" : "a7d5709b-f619-490a-a05f-73f7b4973318",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-2631664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1702399c-febc-4eb9-b98f-3fd559021f77",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "note that on Jenkins we start with a `make clean`, so this is less important there.\n",
        "createdAt" : "2016-10-03T23:22:47Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "9497c9a7-1b02-456b-9360-7fd4723408f5",
        "parentId" : "1702399c-febc-4eb9-b98f-3fd559021f77",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Hmm -- Tim had some issues with this at one point where he was mucking this stuff out.  But we should still do this as it'll trip up others.\n",
        "createdAt" : "2016-10-04T00:27:58Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +45,49 @@\n# This version number is used to cause everyone to rebuild their data containers\n# and build image.  This is especially useful for automated build systems like\n# Jenkins.\n#"
  },
  {
    "id" : "8c346d88-af34-4e75-88ef-4fc466e21dc4",
    "prId" : 30787,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30787#pullrequestreview-3026941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c4c3121-ef29-4eb4-a066-97521aeb1f97",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "minor nonblocking suggestion: maybe `clean` deletes this?\n",
        "createdAt" : "2016-10-05T23:57:53Z",
        "updatedAt" : "2016-10-06T00:14:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +173,177 @@\n  kube::version::get_version_vars\n  kube::version::save_version_vars \"${KUBE_ROOT}/.dockerized-kube-version-defs\"\n}\n"
  },
  {
    "id" : "a693a09a-7118-453e-b51d-9829656aaca6",
    "prId" : 28819,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e315996-d001-4f59-838f-4419255b8dba",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "We've debated about this earlier, but I think I'm fine with having this.\nThe pro is no manual update here again, the con is that we must always have the stable kube-cross image in here. But that don't bother me much.\n",
        "createdAt" : "2016-07-12T05:11:54Z",
        "updatedAt" : "2016-08-06T05:59:08Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "221dab2b-94ff-4224-8f1f-b58f5b78a042",
        "parentId" : "6e315996-d001-4f59-838f-4419255b8dba",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Oh, woops. the Makefile automatically pushes.  I guess it is pushed now.\nSigh.\n\nOn Mon, Jul 11, 2016 at 10:12 PM, Lucas Käldström notifications@github.com\nwrote:\n\n> In build/common.sh\n> https://github.com/kubernetes/kubernetes/pull/28819#discussion_r70377957\n> :\n> \n> > @@ -45,7 +45,7 @@ readonly KUBE_GCS_DELETE_EXISTING=\"${KUBE_GCS_DELETE_EXISTING:-n}\"\n> > \n> >  # Constants\n> >  readonly KUBE_BUILD_IMAGE_REPO=kube-build\n> > -readonly KUBE_BUILD_IMAGE_CROSS_TAG=\"v1.6.2-2\"\n> > +readonly KUBE_BUILD_IMAGE_CROSS_TAG=\"$(cat build/build-image/cross/VERSION)\"\n> \n> We've debated about this earlier, but I think I'm fine with having this.\n> The pro is no manual update here again, the con is that we must always\n> have the stable kube-cross image in here. But that don't bother me much.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/28819/files/1aab7ca76947d57368f386cf668f9d428cb88f79#r70377957,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AFVgVHQ2y0sQwHa1vec4fiPR8jZEloraks5qUyJGgaJpZM4JKCh5\n> .\n",
        "createdAt" : "2016-07-12T05:15:35Z",
        "updatedAt" : "2016-08-06T05:59:08Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b1407af70ac54c925fe5abb060e83d625d77b88",
    "line" : null,
    "diffHunk" : "@@ -1,1 +46,50 @@# Constants\nreadonly KUBE_BUILD_IMAGE_REPO=kube-build\nreadonly KUBE_BUILD_IMAGE_CROSS_TAG=\"$(cat build/build-image/cross/VERSION)\"\n# KUBE_BUILD_DATA_CONTAINER_NAME=kube-build-data-<hash>\"\n"
  },
  {
    "id" : "601dd409-ca6b-4bb1-9256-35308b4836e4",
    "prId" : 28624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3ad651c-4cca-4581-901a-1c72a9eaef06",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Have you tested this on Mac OS X with stock `sed`?  BSD based `sed` there gives an error and exits with 1 with `sed --version`.\n\n```\n$ sed --version\nsed: illegal option -- -\nusage: sed script [-Ealn] [-i extension] [file ...]\n       sed [-Ealn] [-i extension] [-e script] ... [-f script_file] ... [file ...]\n$ echo $?\n1\n```\n\nI'm afraid this test will trigger errexit on the mac.\n",
        "createdAt" : "2016-07-08T17:27:43Z",
        "updatedAt" : "2016-07-08T17:29:27Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "d220272b-0dd9-4701-82cf-32e71b62c1ef",
        "parentId" : "e3ad651c-4cca-4581-901a-1c72a9eaef06",
        "authorId" : "0e1eb2a7-b128-419e-be21-aa0596d3f41f",
        "body" : "Hi @jbeda , yes, I had tested on OS X stock `sed` and it worked correctly. Sorry for the slow reply; I had to do some digging to understand _why_ it worked. 😄 \n\n`$()` command substitution passes on the `-1` exit code from OS X BSD sed. The answer, according to http://www.tldp.org/LDP/abs/html/options.html#OPTIONSREF, is that `set -e` will _Abort script at first error, when a command exits with non-zero status (**except in until or while loops, if-tests, list constructs**)_. So `[[ $(sed --version 2>&1) == *GNU* ]]` will return an error code but it is harmless, even when `set -e` is in play. Here's a minimal demonstration. Note that the script exits and the final echo is never printed.\n\n```\nbash-3.2$ cat test.sh\n#!/bin/bash\n\n[[ $(false) ]]\necho \"Extended test false: $?\"\n$(false)\necho \"Bare false: $?\"\n\necho set -e\nset -e\n\n[[ $(false) ]]\necho \"Extended test false: $?\"\n$(false)\necho \"Bare false: $?\"\n```\n\n```\nbash-3.2$ ./test.sh\nExtended test false: 1\nBare false: 1\nset -e\nExtended test false: 1\n```\n",
        "createdAt" : "2016-07-09T01:17:31Z",
        "updatedAt" : "2016-07-09T01:17:31Z",
        "lastEditedBy" : "0e1eb2a7-b128-419e-be21-aa0596d3f41f",
        "tags" : [
        ]
      }
    ],
    "commit" : "85589b406bf8d0ca73e3ae61497b00739a909922",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +244,248 @@\nfunction kube::build::is_gnu_sed() {\n  [[ $(sed --version 2>&1) == *GNU* ]]\n}\n"
  },
  {
    "id" : "a2444a55-fd9f-46af-a3a8-f1f5a528a23c",
    "prId" : 27986,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93f7d7de-176e-49e5-a20c-55073d05eb42",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I am not certain about the order of these shell scripts, but we set FEDERATION_NAME and DNS_ZONE_NAME in https://github.com/kubernetes/kubernetes/blob/890ac5fdfea522d40499b5a936645dc8e5a2b5ab/federation/cluster/common.sh#L96 which I think runs after this code runs.\nMaybe move that code to set these env vars here?\nOr if the order is not certain, we will have to set the default values for FEDERATION_NAME and DNS_ZONE_NAME at both places?\n",
        "createdAt" : "2016-06-24T01:11:05Z",
        "updatedAt" : "2016-06-24T16:59:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "f80ac022-c3be-4196-aa4d-45a73ed24ce9",
        "parentId" : "93f7d7de-176e-49e5-a20c-55073d05eb42",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@nikhiljindal The operation that defaults `DNS_ZONE_NAME` (and `FEDERATION_NAME`) in `federation/cluster/common.sh` is independent of the operation here. This code here is part of the build and the operation that defaults `DNS_ZONE_NAME` is part of the deploy. We will have to default the same value twice if we want to default those values.\n\nI don't like defaulting `DNS_ZONE_NAME` and `FEDERATION_NAME` here (as opposed to my general inclination towards reasonable defaults) for two reasons:\n1. Doing that will entirely eliminate the users' ability to set those values later during cluster deployment, i.e. during the salt parameter substitution time.\n2. It is not possible to get the e2e tests passing with the current defaults anyway and if a user wants to get their tests to pass they will have to supply non-default values, i.e. the domain name that they own. So there is no reasonable default here.\n\nFor the automated tests however, we will provide the `FEDERATIONS_DOMAIN_MAP` value directly to the Jenkins job. See https://github.com/kubernetes/test-infra/pull/211. So that should take care of the automated tests case.\n",
        "createdAt" : "2016-06-24T08:15:37Z",
        "updatedAt" : "2016-06-24T16:59:30Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "033e35c0-7b5f-4269-9003-f0edd20b62bc",
        "parentId" : "93f7d7de-176e-49e5-a20c-55073d05eb42",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Maybe its because I dont know enough about salt: but why would someone want to override it using salt rather than doing it using env var? The advantage of doing it using env var is that it sets the right values in both kube-dns and the controller manager. (salt will only set it in kube-dns).\nThe problem I see with current setup is that it can happen that I dont set the values anywhere (neither in env var nor in salt), my cluster bring up will work fine. Just that my DNS resolution for federation queries will not work.\nIf we decide not to set default values for FEDERATION_NAME and DNS_ZONE_NAME, then cluster bring up script should throw an error if FEDERATION=true and FEDERATION_NAME or DNS_ZONE_NAME are not specified.\n",
        "createdAt" : "2016-06-24T16:59:14Z",
        "updatedAt" : "2016-06-24T16:59:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "4de37b85-febf-497c-a151-bde34c90d698",
        "parentId" : "93f7d7de-176e-49e5-a20c-55073d05eb42",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "> Maybe its because I dont know enough about salt: but why would someone want to override it using salt rather than doing it using env var?\n\nThe code isn't there right now and it could go in a follow up PR, but conceivably this parameter could be replaced by an environment variable on the master node when the master node is configured. That's why I wanted to leave it as is. I am not doing that right now because it caused other problems. But that should be followed up.\n\n> If we decide not to set default values for FEDERATION_NAME and DNS_ZONE_NAME, then cluster bring up script should throw an error if FEDERATION=true and FEDERATION_NAME or DNS_ZONE_NAME are not specified.\n\nSure, the bring up script should throw an error if the values aren't there. We should probably do that. I am not entirely sure if our defaulting is the right thing to do. It makes the tests fail semi-silently.\n",
        "createdAt" : "2016-06-24T17:48:55Z",
        "updatedAt" : "2016-06-24T17:48:55Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "54bf712b-5dd1-4b64-97e7-4933469ed20c",
        "parentId" : "93f7d7de-176e-49e5-a20c-55073d05eb42",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes as discussed, we should do one: default to a reasonable value or throw an error.\nLooks like you dont like defaulting so we can throw an error :)\n\nDont want to block this PR. Lets get this PR merged to get the tests passing.\nYou can send a follow up PR.\n",
        "createdAt" : "2016-06-24T17:58:49Z",
        "updatedAt" : "2016-06-24T17:58:49Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ee03a558447a797ff79884feace17fb4d2a634f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +957,961 @@  if [[ \"${FEDERATION:-}\" == \"true\" ]]; then\n    FEDERATIONS_DOMAIN_MAP=\"${FEDERATIONS_DOMAIN_MAP:-}\"\n    if [[ -z \"${FEDERATIONS_DOMAIN_MAP}\" && -n \"${FEDERATION_NAME:-}\" && -n \"${DNS_ZONE_NAME:-}\" ]]; then\n      FEDERATIONS_DOMAIN_MAP=\"${FEDERATION_NAME}=${DNS_ZONE_NAME}\"\n    fi"
  },
  {
    "id" : "6a9a47c5-a712-4d80-b333-d8bbc244f142",
    "prId" : 27986,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369d7655-a72d-4430-92b8-cd7d5029ee06",
        "parentId" : null,
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "We aren't redirecting stdout anywhere.  So this change goes nowhere.\n",
        "createdAt" : "2016-06-24T16:57:45Z",
        "updatedAt" : "2016-06-24T16:59:30Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      },
      {
        "id" : "ece4f51e-de6b-4552-a770-61f0e00d98e1",
        "parentId" : "369d7655-a72d-4430-92b8-cd7d5029ee06",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "Whoops, no.  `sed -i`\n",
        "createdAt" : "2016-06-24T16:59:15Z",
        "updatedAt" : "2016-06-24T16:59:30Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ee03a558447a797ff79884feace17fb4d2a634f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +961,965 @@    fi\n    if [[ -n \"${FEDERATIONS_DOMAIN_MAP}\" ]]; then\n      sed -i 's/{{ pillar\\['\"'\"'federations_domain_map'\"'\"'\\] }}/- --federations=\"'\"${FEDERATIONS_DOMAIN_MAP}\"'\"/g' \"${dst_dir}/dns/skydns-rc.yaml.in\"\n    else\n      sed -i '/{{ pillar\\['\"'\"'federations_domain_map'\"'\"'\\] }}/d' \"${dst_dir}/dns/skydns-rc.yaml.in\""
  },
  {
    "id" : "40612d2d-48a2-4901-af7e-5a94f3f4e371",
    "prId" : 24992,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83c437e3-873a-415e-a969-27f881ecbb5a",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "`docker-machine` has a prompt. There is no prompt in the `common.sh` script itself.\n",
        "createdAt" : "2016-04-29T19:07:55Z",
        "updatedAt" : "2016-07-06T17:28:09Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "9f090654-4236-4489-b225-88c9a0035798",
        "parentId" : "83c437e3-873a-415e-a969-27f881ecbb5a",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "can you double quote the variable \"${...}\"\n",
        "createdAt" : "2016-05-20T06:03:18Z",
        "updatedAt" : "2016-07-06T17:28:09Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3208c6c3fd684b2b358a2932cd468cfc35567b7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +206,210 @@    if [[ ${docker_machine_out} =~ \"Error checking TLS connection\" ]]; then\n      echo ${docker_machine_out}\n      docker-machine regenerate-certs ${DOCKER_MACHINE_NAME}\n    else\n      sleep 1"
  },
  {
    "id" : "cf822a36-ec04-495e-854c-e6ce13b89fee",
    "prId" : 24992,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bbd2959-e05f-4812-a7ab-b778305e0cac",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "can you double quote the variable \"${...}\"\n",
        "createdAt" : "2016-05-20T06:03:08Z",
        "updatedAt" : "2016-07-06T17:28:09Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3208c6c3fd684b2b358a2932cd468cfc35567b7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +205,209 @@  while ! docker_machine_out=$(docker-machine env \"${DOCKER_MACHINE_NAME}\" 2>&1); do\n    if [[ ${docker_machine_out} =~ \"Error checking TLS connection\" ]]; then\n      echo ${docker_machine_out}\n      docker-machine regenerate-certs ${DOCKER_MACHINE_NAME}\n    else"
  },
  {
    "id" : "0d8467a1-7f91-4002-a51d-af76149516e3",
    "prId" : 24940,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fec2a847-87c3-417b-b3a0-39eacd297875",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "alternately (possibly less fragile):\n\n``` bash\nif [[ $(gcloud auth list --format='value(active_account)') -eq \"${account}\" ]]; then\n```\n",
        "createdAt" : "2016-05-06T19:28:45Z",
        "updatedAt" : "2016-05-06T19:28:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba635b2cddf7e4ede7d986873a544be9af9e287",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1519,1523 @@function kube::release::gcloud_account_is_active() {\n  local -r account=\"${1-}\"\n  if [[ -n $(gcloud auth list --filter-account $account 2>/dev/null | grep \"active\") ]]; then\n    return 0\n  else"
  },
  {
    "id" : "e3a73a78-ccd0-48f6-a086-11317a7ca158",
    "prId" : 23040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2785d874-fc18-415e-b56c-d167a960d491",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Won't this fail if you can't pull it?\n",
        "createdAt" : "2016-03-16T18:49:09Z",
        "updatedAt" : "2016-03-17T02:52:45Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      },
      {
        "id" : "c9792d9f-0249-43e8-8bb8-3d76baa8a902",
        "parentId" : "2785d874-fc18-415e-b56c-d167a960d491",
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "@ihmccreery do you mean a return code check would be necessary? if it fails, it should exit immediately?\n",
        "createdAt" : "2016-03-17T00:46:42Z",
        "updatedAt" : "2016-03-17T02:52:45Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      },
      {
        "id" : "6302958a-6942-4b9b-9880-0fd75d13809a",
        "parentId" : "2785d874-fc18-415e-b56c-d167a960d491",
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "It should already be handled by https://github.com/kubernetes/kubernetes/blob/master/build/common.sh#L893.\n",
        "createdAt" : "2016-03-17T02:29:57Z",
        "updatedAt" : "2016-03-17T02:52:45Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      }
    ],
    "commit" : "884fbf3d22d017c5e3c6976373f415c212b480f9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +880,884 @@          \"${DOCKER[@]}\" pull \"${addon_path}\"\n        fi\n        \"${DOCKER[@]}\" save \"${addon_path}\" > \"${1}/${dest_name}.tar\"\n      ) &\n    done"
  },
  {
    "id" : "e94b5f56-d111-498b-b7fb-5972b409eeec",
    "prId" : 21557,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f2deb43-d062-4f95-90be-96f2b31efd72",
        "parentId" : null,
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "A quick general question.  I haven't delved deep into the tooling here yet, but why are we hardcoding things that \"don't exist\" rather than just push what was built and does exist?\n",
        "createdAt" : "2016-02-19T19:28:32Z",
        "updatedAt" : "2016-02-19T19:28:32Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "5e18e134-20ae-4300-ac0c-86309dcd5542",
        "parentId" : "1f2deb43-d062-4f95-90be-96f2b31efd72",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Some lines up, it says that `kube-apiserver`, `kube-controller-manager`, `kube-scheduler`, `kube-proxy` **and** `hyperkube` should be pushed.\nDocker images that are `FROM scratch` (`kube-apiserver`, `kube-controller-manager`, `kube-scheduler`, `kube-proxy`) are built for ARM on `amd64` hosts right now, but `hyperkube` needs special treatment (I will fix this soon) and isn't automatically built in the meantime for ARM\n",
        "createdAt" : "2016-02-19T19:46:04Z",
        "updatedAt" : "2016-02-19T20:21:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc9cfdb827c00a1573ddbcb95a2d972523edf7d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1559,1563 @@\n      # Temporary fix. hyperkube-arm isn't built in the release process, so we can't push it\n      # This if statement skips the push for hyperkube-arm\n      if [[ ${arch} != \"arm\" || ${binary} != \"hyperkube\" ]]; then\n"
  },
  {
    "id" : "07cf63fd-588c-4aca-b177-ce4cf51fda78",
    "prId" : 20882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2862fd25-e4bf-446e-9cbf-2d429cd0068d",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I also think that when you rebase to #20398, there will probably be no refs to `KUBE_BUILD_IMAGE_CROSS_TAG`, so it may be removed. Double-check it though\n",
        "createdAt" : "2016-02-11T05:40:53Z",
        "updatedAt" : "2016-02-16T18:08:00Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "dfd187bc-db9f-4e01-83fd-68dbe4d7632d",
        "parentId" : "2862fd25-e4bf-446e-9cbf-2d429cd0068d",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I use it to format the Dockerfile.\n",
        "createdAt" : "2016-02-16T18:05:05Z",
        "updatedAt" : "2016-02-16T18:08:00Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "2ee311aa-2d72-48cd-a515-baaee263df17",
        "parentId" : "2862fd25-e4bf-446e-9cbf-2d429cd0068d",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I was just thinking about if you could `cat` that value from `build/build-image/cross/VERSION` to avoid defining the same thing in two locations. Nothing super-important though...\n",
        "createdAt" : "2016-02-16T19:53:40Z",
        "updatedAt" : "2016-02-16T19:53:40Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3b9fa62d6a3aacaa5fede2930a452a782f2876a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +49,53 @@# Constants\nreadonly KUBE_BUILD_IMAGE_REPO=kube-build\nreadonly KUBE_BUILD_IMAGE_CROSS_TAG=\"v1.4.2-1\"\n# KUBE_BUILD_DATA_CONTAINER_NAME=kube-build-data-<hash>\"\n"
  },
  {
    "id" : "7833fdb9-1b0b-459b-baad-a1b409336045",
    "prId" : 20398,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe slightly rework this, just to be consistent with the rest of this file:\n\n``` shell\nif kube::build::is_osx; then\n  local sed_opts=(-i \\\"\\\")\nelse\n  local sed_opts=(-i)\nfi\nsed -i ${sed_opts[@]} \"s/...\n```\n",
        "createdAt" : "2016-02-06T01:45:32Z",
        "updatedAt" : "2016-02-06T08:50:19Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8ca63629-bbd0-40ce-9438-67834305d532",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Another option is just to remove `sed -i` and find a place for an outfile, then do a mv. That's the old POSIX way, before `-i` existed.\n",
        "createdAt" : "2016-02-06T02:26:08Z",
        "updatedAt" : "2016-02-06T08:50:19Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "3a1977b1-38c5-4d1a-b35c-f14804ff7dab",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "@ixdy I saw this suggestion from you before I made the fix.\nOn both Linux, either echo ${sed_opts[@]} or use ${sed_opts[@]} directly in sed command will lose the \"\", this causes build fail on OSX. So the current code you see is changed by me, to avoid using array for the empty \"\".\n1. Define in an array\nLM-SHC-16501199:work fmeng$ sed_opts=(-i \\\"\\\")\nLM-SHC-16501199:work fmeng$ echo $sed_opts\n-i\nsed $sed_opts \"s/KUBE_BUILD_IMAGE_CROSS/${KUBE_BUILD_IMAGE_CROSS}/\" ${build_context_dir}/Dockerfile\nsed: 1: \"/Users/fmeng/code/kuber ...\": invalid command code f\n\n2.Define as a string\nLM-SHC-16501199:kubernetes fmeng$ sed_opt=\\\"\\\"\nLM-SHC-16501199:kubernetes fmeng$ echo $sed_opt\n\"\"\nLM-SHC-16501199:kubernetes fmeng$ sed -i $sed_opt \"s/KUBE_BUILD_IMAGE_CROSS/${KUBE_BUILD_IMAGE_CROSS}/\" ${build_context_dir}/Dockerfile\nLM-SHC-16501199:kubernetes fmeng$ \n",
        "createdAt" : "2016-02-06T06:57:54Z",
        "updatedAt" : "2016-02-06T08:50:19Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "47e04c9f-f22d-4466-bcda-43e3c8dacbab",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "You're only getting the first element by referencing $sed_opts.\nTry ${sed_opts[@]}\n\nAlso try single quotes in the array element instead:\nsed_opts=(\"-i ''\")\n",
        "createdAt" : "2016-02-06T07:50:51Z",
        "updatedAt" : "2016-02-06T08:50:19Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "f3a97673-9bfc-4aec-a528-8d99c04f6cdd",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "ah, thanks for pointing this out, I omitted the [@], will make the change.\n",
        "createdAt" : "2016-02-06T07:54:45Z",
        "updatedAt" : "2016-02-06T08:50:19Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "cc3560d5-547a-490e-8fae-1eb8885bee2e",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "hm, I'm not sure that `(\"-i ''\")` is correct - that's just treating it as a single array element.\n",
        "createdAt" : "2016-02-09T00:17:31Z",
        "updatedAt" : "2016-02-09T00:17:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "37fc675c-4b56-4814-8abd-cce0e549589d",
        "parentId" : "76ae010e-d3d1-4d0e-b9bc-8ac1e9507c4a",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "@ixdy It works, I tested on both OSes. \nI wrote simple scripts on my local laptop and verify it before I made the change, and the build succeeded on both OSes. \nChecking my local build output, the  \n/Users/fmeng/code/kubernetes/src/k8s.io/validate/kubernetes/_output/images/kube-build:build-b4a36a2a04/Dockerfile\nI can see the proxy settings are there.\nLM-SHC-16501199:kubernetes fmeng$ more _output/images/kube-build:build-b4a36a2a04/Dockerfile\nHere is the sample without environment variable set.\nFROM kube-build:cross-1.5.3-1\n\nMAINTAINER  Joe Beda jbeda@google.com\n\n# (set an explicit GOARM of 5 for maximum compatibility)\n\nENV GOARM 5\nENV GOOS    linux\nENV GOARCH  amd64\nENV http_proxy \"\"\nENV https_proxy \"\"\nENV no_proxy 127.0.0.1\n",
        "createdAt" : "2016-02-09T07:38:43Z",
        "updatedAt" : "2016-02-09T07:38:43Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaea05980c02cc2df6635e91bde9b7e46620696a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +209,213 @@\nfunction kube::build::update_dockerfile() {\n  if kube::build::is_osx; then\n    sed_opts=(\"-i ''\")\n  else"
  },
  {
    "id" : "6fa32e23-6f34-468b-b756-44ffcbe52f2b",
    "prId" : 20147,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e64af4ab-117b-4a05-8a5d-bb195913815b",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "can we maybe just use -i \"\" for both the OS X and Linux case?\n",
        "createdAt" : "2016-01-27T02:17:56Z",
        "updatedAt" : "2016-01-29T02:46:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "4393cf8e-4d88-48c0-aa39-c36d9ce1c6f4",
        "parentId" : "e64af4ab-117b-4a05-8a5d-bb195913815b",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "`sed -i=\"\" ...` seems to work in GNU `sed`. I don't have a copy of BSD `sed` handy to test if it works there too, though.\n",
        "createdAt" : "2016-01-27T02:21:31Z",
        "updatedAt" : "2016-01-29T02:46:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "9f3b6b75-b0cb-4be7-afdb-414ad613aa4a",
        "parentId" : "e64af4ab-117b-4a05-8a5d-bb195913815b",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "sed -i worked on both GNU and BSD however \"=\"(and any other symbol between -i and \"\" ) will be treated as part for the backup suffix, backup file \"Dockerfile=\" will be generated on both OSes.\nHere is examples\n1. If no backup required, we can run the command like this, the difference is on BSD, a space is mandatory  between -i and \"\". On GNU you can not add space otherwise the command will fail.\nOn GNU\nsed -i\"\" \"s/aa/bb/\" data\nOn BSD\nsed -i \"\" \"s/aa/bb/\" data\n2. If we run the command like what you suggested, backup files \"data=\" on both OSes are generated\nsed -i=\"\" \"s/aa/bb/\" data\n\nYou can confirm this on your GNU, thanks. \nBefore I push the changes, I did a lots of search and I did not see a compatible way for both BSD and GNU.\n",
        "createdAt" : "2016-01-27T03:56:26Z",
        "updatedAt" : "2016-01-29T02:46:33Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "e449ae20-1885-41bc-9e10-3b077da001fa",
        "parentId" : "e64af4ab-117b-4a05-8a5d-bb195913815b",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "Related discussions.\nhttp://stackoverflow.com/questions/4247068/sed-command-with-i-option-failing-on-mac-but-works-on-linux\nhttp://stackoverflow.com/questions/5694228/sed-in-place-flag-that-works-both-on-mac-bsd-and-linux\n",
        "createdAt" : "2016-01-27T03:58:31Z",
        "updatedAt" : "2016-01-29T02:46:33Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      }
    ],
    "commit" : "368fb2225c303f11ae6582a706718587fcdc44bf",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +474,478 @@  cp build/build-image/Dockerfile ${build_context_dir}/Dockerfile\n  if kube::build::is_osx; then\n    sed -i \"\" \"s/KUBE_BUILD_IMAGE_CROSS/${KUBE_BUILD_IMAGE_CROSS}/\" ${build_context_dir}/Dockerfile\n  else\n    sed -i \"s/KUBE_BUILD_IMAGE_CROSS/${KUBE_BUILD_IMAGE_CROSS}/\" ${build_context_dir}/Dockerfile"
  },
  {
    "id" : "6a418243-9df2-41e8-aa5c-f2340b61a2f3",
    "prId" : 19994,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf34e3f7-e1fe-48f1-a995-f9fb700c27f5",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Can we remove L51-L54?\n",
        "createdAt" : "2016-01-22T19:23:53Z",
        "updatedAt" : "2016-01-22T19:45:46Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      },
      {
        "id" : "d2ec75ce-4504-47e3-ac8f-10df22d131c6",
        "parentId" : "bf34e3f7-e1fe-48f1-a995-f9fb700c27f5",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Will do.\n",
        "createdAt" : "2016-01-22T19:40:54Z",
        "updatedAt" : "2016-01-22T19:45:46Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "07c304b43d214d30eea8702d9824f6cfa21bd404",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@# Constants\nreadonly KUBE_BUILD_IMAGE_REPO=kube-build\nreadonly KUBE_BUILD_GOLANG_VERSION=1.5.3\nreadonly KUBE_BUILD_IMAGE_CROSS_TAG=\"cross-${KUBE_BUILD_GOLANG_VERSION}-1\"\nreadonly KUBE_BUILD_IMAGE_CROSS=\"${KUBE_BUILD_IMAGE_REPO}:${KUBE_BUILD_IMAGE_CROSS_TAG}\""
  },
  {
    "id" : "e374ce62-0c01-44b5-8922-c83dc631786f",
    "prId" : 19847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d70f8a93-3e2d-4787-9fe3-db96f605fb74",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Ah, yeah, that's obvious. Thanks.\n",
        "createdAt" : "2016-01-20T18:00:46Z",
        "updatedAt" : "2016-01-20T18:00:46Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "041f152e804faf147f515890265fe3e92a274891",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +483,487 @@  # We don't want to force-pull this image because it's based on a local image\n  # (see kube::build::build_image_cross), not upstream.\n  kube::build::docker_build \"${KUBE_BUILD_IMAGE}\" \"${build_context_dir}\" 'false'\n}\n"
  },
  {
    "id" : "61dd060a-3000-429d-9780-2cd9aed7f81d",
    "prId" : 19769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c00c41e9-a201-49c4-a79f-53b3f926121e",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@fgrzadkowski PTAL\nFixes: https://github.com/kubernetes/kubernetes/pull/19061#discussion_r50636543\n",
        "createdAt" : "2016-01-30T12:27:39Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "1a802bdb-be7f-4f2b-8be8-fba3dd185e66",
        "parentId" : "c00c41e9-a201-49c4-a79f-53b3f926121e",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ping @fgrzadkowski \n",
        "createdAt" : "2016-02-07T16:18:06Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c969c041e2cda926e6d582175bea565353aed040",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +1541,1545 @@\n      # If we have a amd64 docker image. Tag it without -amd64 also and push it for compability with earlier versions\n      if [[ ${arch} == \"amd64\" ]]; then\n        local legacy_docker_target=\"${KUBE_DOCKER_REGISTRY}/${binary}:${KUBE_DOCKER_IMAGE_TAG}\"\n"
  },
  {
    "id" : "d594564f-f1d8-41cc-9647-4fef654596ea",
    "prId" : 19769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7dd3719-b608-4bce-a018-6df5703422c1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@ixdy The issue was probably here. Some setup scripts assumed that the name of `linux/amd64` images was `${binary_name}:${md5_sum}` while I had changed it to  `${binary_name}-${arch}:${md5_sum}` when I was thinking about other arches.\n\nThis is the way to go. When we're releasing though, both kinds of `amd64` images will be pushed\n",
        "createdAt" : "2016-01-30T12:30:20Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "86e651e0-bf9e-46a7-94d3-8cb5e25118bf",
        "parentId" : "d7dd3719-b608-4bce-a018-6df5703422c1",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "which setup scripts are those? seems like maybe we should update them to always use `${arch}` in the name?\n",
        "createdAt" : "2016-02-01T20:50:23Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "f2d66187-2cbc-4973-91e4-38ee390e0378",
        "parentId" : "d7dd3719-b608-4bce-a018-6df5703422c1",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "At least something here: https://github.com/kubernetes/kubernetes/blob/master/cluster/common.sh#L400\n\nand maybe related to https://github.com/kubernetes/kubernetes/blob/master/cluster/saltbase/install.sh#L27\n\nI think there are more places too, but can we take that in a separate PR or something?\nTo adopt `-amd64` naming everywhere is separate from building for other arches\n",
        "createdAt" : "2016-02-02T06:29:29Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "2b16d3d3-1f59-4b26-9817-620291d2f957",
        "parentId" : "d7dd3719-b608-4bce-a018-6df5703422c1",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Separate PR sounds good.\n",
        "createdAt" : "2016-02-02T19:13:09Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c969c041e2cda926e6d582175bea565353aed040",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +832,836 @@        printf \" FROM ${base_image} \\n ADD ${binary_name} /usr/local/bin/${binary_name}\\n\" > ${docker_file_path}\n\n        if [[ ${arch} == \"amd64\" ]]; then\n          # If we are building a amd64 docker image, preserve the original image name\n          local docker_image_tag=gcr.io/google_containers/${binary_name}:${md5_sum}"
  },
  {
    "id" : "a19326d2-bbdd-453c-82c0-31cb957f8b26",
    "prId" : 19769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6af4eee-a024-430d-a78d-f51b297eb99a",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "thanks for remembering :)\n",
        "createdAt" : "2016-02-02T19:26:00Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "11c35fe6-fecd-478b-b9fb-ddef7f6a5f16",
        "parentId" : "a6af4eee-a024-430d-a78d-f51b297eb99a",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Yeah, noticed it when I read through the file :)\n",
        "createdAt" : "2016-02-02T19:47:50Z",
        "updatedAt" : "2016-02-07T18:36:22Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c969c041e2cda926e6d582175bea565353aed040",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@readonly KUBE_BUILD_IMAGE_REPO=kube-build\nreadonly KUBE_BUILD_GOLANG_VERSION=1.4.2\nreadonly KUBE_BUILD_IMAGE_CROSS_TAG=\"cross-${KUBE_BUILD_GOLANG_VERSION}-2\"\nreadonly KUBE_BUILD_IMAGE_CROSS=\"${KUBE_BUILD_IMAGE_REPO}:${KUBE_BUILD_IMAGE_CROSS_TAG}\"\n# KUBE_BUILD_DATA_CONTAINER_NAME=kube-build-data-<hash>"
  },
  {
    "id" : "4608b173-e592-4690-9c88-1f99b0b50832",
    "prId" : 19061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d365e331-03b8-4305-8634-3eb8775f2a16",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "What about `kubelet`? Just asking\n",
        "createdAt" : "2015-12-29T11:54:28Z",
        "updatedAt" : "2016-01-05T11:36:20Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "c1eb9aa6-c087-4144-ad58-e4bc221076b8",
        "parentId" : "d365e331-03b8-4305-8634-3eb8775f2a16",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Kubelet is not running in docker container yet (I'm working on it...)\n",
        "createdAt" : "2015-12-29T12:11:58Z",
        "updatedAt" : "2016-01-05T11:36:20Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7e8c5af8421c3f1fdb79e2159a3483615d56153",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +1457,1461 @@    \"kube-scheduler\"\n    \"kube-proxy\"\n    \"hyperkube\"\n  )\n"
  },
  {
    "id" : "cffd1751-3906-4d1e-8870-14a75dee58a0",
    "prId" : 19061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e82c4245-a8b0-4d21-a2ea-db1dd13c5e25",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@fgrzadkowski @mikedanese @zmerlynn \nThis creates compability issues when it doesn't push `hyperkube` only, it just pushes `hyperkube-arch`...\nI assume we need to support `hyperkube` only until all guides etc. are updated.\n",
        "createdAt" : "2016-01-24T15:09:14Z",
        "updatedAt" : "2016-01-24T15:09:14Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7e8c5af8421c3f1fdb79e2159a3483615d56153",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +1471,1475 @@  for arch in \"${archs[@]}\"; do\n    for binary in \"${binaries[@]}\"; do\n      local docker_target=\"${KUBE_DOCKER_REGISTRY}/${binary}-${arch}:${KUBE_DOCKER_IMAGE_TAG}\"\n      kube::log::status \"Pushing ${binary} to ${docker_target}\"\n      \"${docker_push_cmd[@]}\" push \"${docker_target}\""
  },
  {
    "id" : "96fb2ca9-4003-42b1-a563-db8c25e17ab4",
    "prId" : 18485,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82856a77-b605-4014-9d0a-00d6f325ebe6",
        "parentId" : null,
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "nit: consider folding the manifests in an array and looping on them, as you plan to add more?\n",
        "createdAt" : "2015-12-10T03:02:12Z",
        "updatedAt" : "2015-12-10T18:47:26Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "01da5cc2-0307-4ce6-99f5-0bb9ffc8a841",
        "parentId" : "82856a77-b605-4014-9d0a-00d6f325ebe6",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Yes, will go that way for better readability when we add more files. Currently it has only 3, so should be fine.\n",
        "createdAt" : "2015-12-10T03:41:16Z",
        "updatedAt" : "2015-12-10T18:47:26Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e23a3845fd2bfaaddfe3ce188fa307e2822268",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +870,874 @@  cp \"${salt_dir}/fluentd-es/fluentd-es.yaml\" \"${release_stage}/\"\n  cp \"${salt_dir}/fluentd-gcp/fluentd-gcp.yaml\" \"${release_stage}/\"\n  cp \"${salt_dir}/kube-registry-proxy/kube-registry-proxy.yaml\" \"${release_stage}/\"\n  # Source 2: manifests from cluster/gce/kube-manifests.\n  # TODO(andyzheng0831): Enable the following line after finishing issue #16702."
  },
  {
    "id" : "7c62080e-d101-41ac-a5be-86839884e41b",
    "prId" : 18485,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f1116ca-64b4-42fe-ad84-6014edae0d8d",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@andyzheng0831 You cc'd the wrong person :) Do you have a branch that has the examples that has the `cluster/gce/kube-manifests` ?\n",
        "createdAt" : "2015-12-21T21:49:18Z",
        "updatedAt" : "2015-12-21T21:49:18Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "2810b929-ccae-4007-8984-976ead481aad",
        "parentId" : "6f1116ca-64b4-42fe-ad84-6014edae0d8d",
        "authorId" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "body" : "Not yet. I am working on the master side change but still keep it locally. Currently, I am switching to make another change, i.e., move kube-proxy into a static pod, just like https://github.com/kubernetes/kubernetes/pull/17121. The newly added manifest for kube-proxy (https://github.com/kubernetes/kubernetes/blob/master/cluster/saltbase/salt/kube-proxy/kube-proxy.manifest) contains salt config. So I plan to copy it to cluster/gce/kube-manifests. My idea is that we remove the salt content, replace all variables in {{var}} format. Then, the shell script can replace the variables with real values. What do you think?\n",
        "createdAt" : "2015-12-21T22:12:34Z",
        "updatedAt" : "2015-12-21T22:12:34Z",
        "lastEditedBy" : "34f7b744-302a-4493-8e2d-95681077e4a8",
        "tags" : [
        ]
      }
    ],
    "commit" : "75e23a3845fd2bfaaddfe3ce188fa307e2822268",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +873,877 @@  # Source 2: manifests from cluster/gce/kube-manifests.\n  # TODO(andyzheng0831): Enable the following line after finishing issue #16702.\n  # cp \"${KUBE_ROOT}/cluster/gce/kube-manifests/*\" \"${release_stage}/\"\n\n  kube::release::clean_cruft"
  },
  {
    "id" : "7b0abc4f-6595-40bb-accd-6b4be9f6fc63",
    "prId" : 17194,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "175b13a2-1a65-4aab-98d4-194fddb04373",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "While you're at it, document the args this function takes.  (See `kube::release::gcs::publish_ci`.)\n",
        "createdAt" : "2015-11-13T01:59:49Z",
        "updatedAt" : "2015-11-13T16:58:43Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "d68c36a268c658ef7e1c5f7776c1f8becc130aa8",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +741,745 @@# Globals:\n#   KUBE_DOCKER_WRAPPED_BINARIES\nfunction kube::release::create_docker_images_for_server() {\n  # Create a sub-shell so that we don't pollute the outer environment\n  ("
  },
  {
    "id" : "9ee95131-a3cd-404b-99ec-84c75a470809",
    "prId" : 16919,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96320d1a-9793-4521-aa7c-068f46384106",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: I would much prefer a strictly nested if, with explicit handling of equals, e.g. something along the lines of (in pseudo-code):\n\n```\nif major > gcs_major return \"greater\"\nelse if major == gcs_major\n    if minor > gcs_minor return \"greater\"\n    else if minor == gcs_minor\n        return \"equal\"\n    endif\nendif\nreturn \"less\"\n\n\n```\n",
        "createdAt" : "2015-11-11T23:32:03Z",
        "updatedAt" : "2015-11-19T17:51:58Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "c186e0be-a032-44ac-8267-911ed80a94f5",
        "parentId" : "96320d1a-9793-4521-aa7c-068f46384106",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Ack.  Added that to TODO.\n",
        "createdAt" : "2015-11-18T18:38:17Z",
        "updatedAt" : "2015-11-19T17:51:58Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fad9a1271d5793d89a3c9aca7619cefb1ea60cb",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +1202,1206 @@    elif [[ \"${version_minor}\" -gt \"${gcs_version_minor}\" ]]; then\n      : # fall out\n    elif [[ \"${version_patch}\" -lt \"${gcs_version_patch}\" ]]; then\n      greater=false\n    elif [[ \"${version_patch}\" -gt \"${gcs_version_patch}\" ]]; then"
  },
  {
    "id" : "6884d503-ae62-479c-980c-472053f95160",
    "prId" : 16767,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "346bc228-f5e8-4863-b038-efff5e8303fc",
        "parentId" : null,
        "authorId" : "899255b8-f4b6-40d8-86f5-3cb2e624310b",
        "body" : "All other comparisons in this file use `-lt`.\n",
        "createdAt" : "2015-11-04T19:57:47Z",
        "updatedAt" : "2015-11-04T21:25:16Z",
        "lastEditedBy" : "899255b8-f4b6-40d8-86f5-3cb2e624310b",
        "tags" : [
        ]
      },
      {
        "id" : "455163b7-cdeb-44fb-88bc-e49d2c03ade9",
        "parentId" : "346bc228-f5e8-4863-b038-efff5e8303fc",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Correct.  This phrase is lexicographically comparing strings, not integers.  `-lt` is for ints, `<` is for strings.\n",
        "createdAt" : "2015-11-04T21:10:52Z",
        "updatedAt" : "2015-11-04T21:25:16Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaefc11df9592df84fa28bb6287996c62d82f946",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1249,1253 @@    # Use lexicographic (instead of integer) comparison because\n    # version_prerelease is a string, (\"alpha\" or \"beta\")\n    elif [[ \"${version_prerelease}\" < \"${gcs_version_prerelease}\" ]]; then\n      greater=false\n    elif [[ \"${version_prerelease}\" > \"${gcs_version_prerelease}\" ]]; then"
  },
  {
    "id" : "b905d5b2-f59b-4e75-a9ca-6e70bcf48883",
    "prId" : 15422,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba7b9784-8aec-48b7-94e6-b0c2d0e80bb2",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Your regex actually doesn't need to be brittle to `alpha`/`beta`, nor the if specific to them. You can compare lexically using < and >: http://www.gnu.org/software/bash/manual/html_node/Bash-Conditional-Expressions.html\n",
        "createdAt" : "2015-10-13T17:09:06Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "f5311208-6f90-47be-ba19-27554ed67333",
        "parentId" : "ba7b9784-8aec-48b7-94e6-b0c2d0e80bb2",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Yes, although the REGEX becomes even more convoluted, because we have to pull out the \"alpha\" from the \"alpha.0\", (because \"alpha.9\" < \"alpha.90\").\n",
        "createdAt" : "2015-10-13T18:59:51Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      },
      {
        "id" : "e6c7a2ea-d53e-47a1-a068-49d4482b3a3e",
        "parentId" : "ba7b9784-8aec-48b7-94e6-b0c2d0e80bb2",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Okay, nevermind.  I can't figure out a way to capture \"alpha\", (as opposed to \"alpha.9\",) without making things _really_ ugly, which means I don't think we can rely on lexicographic comparison.  (Because of the case above, that \"alpha.9\" < \"alpha.90\")\n",
        "createdAt" : "2015-10-13T20:59:22Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ac539abd573f0e733ca2f67871c183ec5bf0b24",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +1244,1248 @@    elif [[ \"${version_patch}\" -gt \"${gcs_version_patch}\" ]]; then\n      : # fall out\n    elif [[ \"${version_prerelease}\" =~ alpha.* && \"${gcs_version_prerelease}\" == \"beta\" ]]; then\n      greater=false\n    elif [[ \"${version_prerelease}\" == \"beta\" && \"${gcs_version_prerelease}\" =~ alpha.* ]]; then"
  },
  {
    "id" : "ef7c584b-183d-4f5e-93fb-b0b4c26a2db9",
    "prId" : 15422,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fa9536b-d867-4c81-b5bb-48201af16cef",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Can you dedupe this function with the previous? It's just the version comparison that's different, which seems like it's straightforward enough to pull out.\n",
        "createdAt" : "2015-10-13T17:11:14Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "76c13e50-b4ea-49c7-8fbe-d0ea68fe29e1",
        "parentId" : "0fa9536b-d867-4c81-b5bb-48201af16cef",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "I considered that, but it seemed more confusing that practical.  The parsing, BASH_REMATCH logic, comparison, and output messages are all different.  Really the only things that are the same are the structure, (but AFAIK bash doesn't have first class functions,) and the logic for pulling from GCS.\n\nDo you disagree?\n",
        "createdAt" : "2015-10-13T18:47:15Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      },
      {
        "id" : "3fda571b-4687-4535-ad49-ad15994b849a",
        "parentId" : "0fa9536b-d867-4c81-b5bb-48201af16cef",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "That's fine. It just seems pretty duplicative but I didn't stare very closely.\n",
        "createdAt" : "2015-10-13T18:53:18Z",
        "updatedAt" : "2015-10-13T21:36:07Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ac539abd573f0e733ca2f67871c183ec5bf0b24",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +1263,1267 @@    fi\n\n    if [[ \"${greater}\" != \"true\" ]]; then\n      kube::log::status \"${new_version} (just uploaded) < ${gcs_version} (latest on GCS), not updating ${publish_file_dst}\"\n      return 1"
  },
  {
    "id" : "2e11f7c9-c6a3-4d16-bf1f-9e3a8483923c",
    "prId" : 15316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e5dd161-3358-468b-8a2f-11445b8dd3c9",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "https://cloud.google.com/storage/docs/gsutil/commands/setmeta also suggests adding \"no-transform\", though I don't know if that's strictly necessary.\n\nhttps://cloud.google.com/storage/docs/gsutil/addlhelp/WorkingWithObjectMetadata says\n\n> Another use of the Cache-Control header is through the “no-transform” value, which instructs Google Cloud Storage to not apply any content transformations based on specifics of a download request, such as removing gzip content-encoding for incompatible clients. Note that this parameter is only respected by the XML API. The Google Cloud Storage JSON API respects only the no-cache and max-age Cache-Control parameters.\n",
        "createdAt" : "2015-10-08T18:37:43Z",
        "updatedAt" : "2015-10-08T18:37:43Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "95cd862e-adcd-4804-9a13-727ef5d097e1",
        "parentId" : "3e5dd161-3358-468b-8a2f-11445b8dd3c9",
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Yeah, there's another usage of Cache-Control above, and it doesn't include no-transform.  I'm not really concerned about it, since this is a text file ...\n",
        "createdAt" : "2015-10-08T18:41:20Z",
        "updatedAt" : "2015-10-08T18:41:20Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec43cb0ed01afa5ff558f5c29c92cbb5eb462ee5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1180,1184 @@    kube::log::status \"Making uploaded version file public and non-cacheable.\"\n    gsutil acl ch -R -g all:R \"${publish_file_dst}\" >/dev/null 2>&1 || return 1\n    gsutil setmeta -h \"Cache-Control:private, max-age=0\" \"${publish_file_dst}\" >/dev/null 2>&1 || return 1\n    # If public, validate public link\n    local -r public_link=\"https://storage.googleapis.com/${KUBE_GCS_RELEASE_BUCKET}/${publish_file}\""
  },
  {
    "id" : "541210ad-2162-4152-868f-8a89fd1b22c2",
    "prId" : 12833,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a151d20-d637-4b52-9dd8-e96caee2e078",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "do you intend for things like pause and fluentd to go here?\n",
        "createdAt" : "2015-08-18T22:26:50Z",
        "updatedAt" : "2015-08-21T20:32:14Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "5799cd45-0e9c-441f-981d-12172853cde5",
        "parentId" : "9a151d20-d637-4b52-9dd8-e96caee2e078",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "I think that anything that is used on every node should go here.\n",
        "createdAt" : "2015-08-18T22:36:31Z",
        "updatedAt" : "2015-08-21T20:32:14Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dc10a209ba457aa8fd28a5e0593e1608c6babc4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +102,106 @@\n# The set of addons images that should be prepopulated\nreadonly KUBE_ADDON_PATHS=(\n  gcr.io/google_containers/pause:0.8.0\n  gcr.io/google_containers/kube-registry-proxy:0.3"
  },
  {
    "id" : "52d942f5-0c53-407a-8a3a-8c28b5fd8caf",
    "prId" : 11273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2e60bbe-3436-4faf-b3fa-9a6a397e1c64",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ah, that's why build/release.sh fails...\n",
        "createdAt" : "2015-07-15T03:41:06Z",
        "updatedAt" : "2015-07-15T04:53:51Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "ae2c7e3a-03f7-4575-9a97-53433f89b241",
        "parentId" : "a2e60bbe-3436-4faf-b3fa-9a6a397e1c64",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "also required for e2e tests which succeeded locally after the move but failed on jenkins which only has the tarball, not the full source.\n",
        "createdAt" : "2015-07-15T04:16:18Z",
        "updatedAt" : "2015-07-15T04:53:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "337772a91f90dd96533d5b8158f014983aa97302",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +771,775 @@\n  cp -R \"${KUBE_ROOT}/examples\" \"${release_stage}/\"\n  cp -R \"${KUBE_ROOT}/docs\" \"${release_stage}/\"\n  cp \"${KUBE_ROOT}/README.md\" \"${release_stage}/\"\n  cp \"${KUBE_ROOT}/LICENSE\" \"${release_stage}/\""
  },
  {
    "id" : "13f7c39c-cf4a-435f-9e19-c131522ace08",
    "prId" : 10687,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "058e961e-1857-402d-89d7-6bbc129366e7",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1: \n",
        "createdAt" : "2015-07-03T11:35:05Z",
        "updatedAt" : "2015-07-03T11:35:05Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "d64c818744552d37e080b65bd883d736293794df",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +199,203 @@    echo \"  !!! Cannot find GNU tar. Build on Linux or install GNU tar\"\n    echo \"      on Mac OS X (brew install gnu-tar).\"\n    exit 1\n  fi\n}"
  },
  {
    "id" : "6037c060-70cd-4232-957f-700a3b1743d4",
    "prId" : 6467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "A guess at what's wrong: I think that docker is failing to get the binary now because it's in a different directory.\n\nPreviously you passed `${1}`, and the binary was located at `${1}`. Now you pass `${docker_build_path}`, but this conly includes the Dockerfile - the binary itself is located at `${docker_build_path}/..` (based on the `ln` from L616).\n\nThe Dockerfile still indicates that the binary is located in the path provided, though.\n",
        "createdAt" : "2015-04-06T20:00:29Z",
        "updatedAt" : "2015-04-06T20:00:29Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "329e6ad8-51f4-4f10-8028-acf32ce5fe11",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "That's fixed up in line 616 above it. :)\n",
        "createdAt" : "2015-04-06T20:05:40Z",
        "updatedAt" : "2015-04-06T20:05:40Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "8fab2586-8bfc-41c4-bb9c-06b4c35bf8a5",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "ixdy: Are you seeing problems here?  I think there is a new issue, which is that the cp command on master bring-up is not recursive, and is failing when it sees the new directories.  I should have a fix soon, but I don't know what problems you're seeing...\n",
        "createdAt" : "2015-04-06T20:21:11Z",
        "updatedAt" : "2015-04-06T20:21:11Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "579b1c9f-1465-4ee1-81ba-07a5217ec0cc",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah, this broke cluster bring up on GCE, because I'm a bad person. :(\n",
        "createdAt" : "2015-04-06T20:27:09Z",
        "updatedAt" : "2015-04-06T20:27:09Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "e9d140fb-afdb-465d-b8fc-8f85ba11ced5",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I saw this on the minion, not sure if related yet, was going to investigate:\n\n```\n+++ Install binaries from tar: kubernetes-server-linux-amd64.tar.gz\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/hyperkube' -> '/srv/salt-new/salt/kube-bins/hyperkube'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-apiserver' -> '/srv/salt-new/salt/kube-bins/kube-apiserver'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-apiserver.docker_tag' -> '/srv/salt-new/salt/kube-bins/kube-apiserver.docker_tag'\ncp: omitting directory '/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-apiserver.dockerbuild'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-apiserver.tar' -> '/srv/salt-new/salt/kube-bins/kube-apiserver.tar'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-controller-manager' -> '/srv/salt-new/salt/kube-bins/kube-controller-manager'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-controller-manager.docker_tag' -> '/srv/salt-new/salt/kube-bins/kube-controller-manager.docker_tag'\ncp: omitting directory '/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-controller-manager.dockerbuild'\n'/tmp/kubernetes.nohEEW/kubernetes/server/bin/kube-controller-manager.tar' -> '/srv/salt-new/salt/kube-bins/kube-controller-manager.tar'\n```\n\nI think we should delete the <name>.dockerbuild dirs using `rm -rf ${docker_build_path}`, making sure those files aren't needed (I think we only need the tar)\n",
        "createdAt" : "2015-04-06T20:35:43Z",
        "updatedAt" : "2015-04-06T20:35:43Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "7590ac4b-930a-4d3e-8ca5-50313e598e09",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "Just checking, the other PR you just merged fixes this, right?\n",
        "createdAt" : "2015-04-06T20:35:44Z",
        "updatedAt" : "2015-04-06T20:35:44Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      },
      {
        "id" : "eef3f2a5-5fa9-4874-b489-7e823892d590",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "PS Sorry for breaking GCE - I'm a bad LGTMer.\n",
        "createdAt" : "2015-04-06T20:36:01Z",
        "updatedAt" : "2015-04-06T20:36:01Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "f9b26fbe-cb7d-4fe0-bc6d-8703f9e1c7c0",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yes, sorry, I meant to link this here. I fixed this in #6481 (already merged).\n",
        "createdAt" : "2015-04-06T20:37:51Z",
        "updatedAt" : "2015-04-06T20:37:51Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "67f2895b-d904-48a1-b2ed-64572de7f158",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Oh - just saw the other PR.  Awesome!  I will test right now!\n",
        "createdAt" : "2015-04-06T20:38:04Z",
        "updatedAt" : "2015-04-06T20:38:04Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "ed142226-0787-4ee6-8bbc-3b3ecfde9437",
        "parentId" : "e0c02e2f-373e-4c22-a708-a651ee019789",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Really, this shouldn't be assembling build gunk in the directory that's also getting tar'd, but that was pre-existing and I didn't feel like fixing it. I supposed since I'm now doing it in an entirely separate place, I now could and make the logic simpler.\n",
        "createdAt" : "2015-04-06T20:38:44Z",
        "updatedAt" : "2015-04-06T20:38:44Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "af34ef4c168bc874f0adec3cb9339dfd9e9fab63",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +618,622 @@\n        local docker_image_tag=gcr.io/google_containers/$binary_name:$md5_sum\n        docker build -q -t \"${docker_image_tag}\" ${docker_build_path} >/dev/null\n        docker save ${docker_image_tag} > ${1}/${binary_name}.tar\n        echo $md5_sum > ${1}/${binary_name}.docker_tag"
  },
  {
    "id" : "54a3ef1d-d8f6-4c52-bc1e-8d030b0660c5",
    "prId" : 6326,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a0a649-61a3-4e1b-a757-6dacddda38c0",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this doesn't work unless the machine you are provisioning on has docker installed by default - i don't think this is the case for all salt-based providers.  this also doesn't make sense if we have salt scripts that are later responsible for installing docker as part of salt provisioning.\n",
        "createdAt" : "2015-04-06T16:34:36Z",
        "updatedAt" : "2015-04-06T16:34:36Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1b779a8d5ec089830319682f527ab6bdb922378",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +595,599 @@      local md5_sum=$(md5sum ${binary_file_path} | awk '{print $1}')\n      local docker_image_tag=gcr.io/google_containers/$binary_name:$md5_sum\n      docker build -t \"${docker_image_tag}\" ${1};\n      docker save ${docker_image_tag} > ${1}/${binary_name}.tar;\n      echo $md5_sum > ${1}/${binary_name}.docker_tag;"
  },
  {
    "id" : "91d43e6a-ece5-43dc-aac5-cba077ff46c3",
    "prId" : 5563,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60bd1637-a549-4f66-9a40-f57048f3134d",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Is \"0\" success really expected here? I think it's probably what you want, just wanted to confirm it's not an oversight...\n",
        "createdAt" : "2015-03-17T20:59:16Z",
        "updatedAt" : "2015-03-17T20:59:16Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "7a6f889f-b769-4bf2-b79c-dc45fe3478ac",
        "parentId" : "60bd1637-a549-4f66-9a40-f57048f3134d",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah, this is the case of a cherry-pick. (e.g. 0.12.3 getting pushed after 0.13.1), so it's not an error. We just don't want to call it \"latest\".\n",
        "createdAt" : "2015-03-17T21:09:12Z",
        "updatedAt" : "2015-03-17T21:09:12Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "3458246c103f105b878d387213ebf4a6f312a2d0",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +878,882 @@  if [[ \"${greater}\" != \"true\" ]]; then\n    echo \"+++ ${gcs_version} (latest on GCS) >= ${new_version} (just uploaded), not updating ${latest_file_dst}\"\n    return 0\n  fi\n"
  },
  {
    "id" : "89f1a0a7-55f6-4311-bedc-5dfa759d4ddb",
    "prId" : 3238,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d8fae27-99c0-4352-a8d4-52a801d30e1f",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "~~We probably want to put this under `gs://${KUBE_GCS_RELEASE_BUCKET}/${KUBE_GCS_RELEASE_PREFIX}.  That is the \"series\" of release and the real root of the release tree.~~\n\n~~Actually, we probably need a new variable that is \"release root\" vs. \"release version\".  Assuming that the bucket is the root means we can't have multiple \"series\" of releases in the same bucket.~~\n\nAh -- I see you encode the release root into `${KUBE_GCS_LATEST_FILE}`.  Ignore me.\n",
        "createdAt" : "2015-01-07T17:15:24Z",
        "updatedAt" : "2015-01-07T17:29:52Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "867d151e-35ee-4135-873d-c86691f7c218",
        "parentId" : "0d8fae27-99c0-4352-a8d4-52a801d30e1f",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Ignored!\n",
        "createdAt" : "2015-01-07T17:47:41Z",
        "updatedAt" : "2015-01-07T17:47:41Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "e66e30183b0b62ea9d1fa5bb51f5fc0c9e9a38bc",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +855,859 @@\nfunction kube::release::gcs::publish_latest() {\n  local latest_file_dst=\"gs://${KUBE_GCS_RELEASE_BUCKET}/${KUBE_GCS_LATEST_FILE}\"\n\n  mkdir -p \"${RELEASE_STAGE}/upload\""
  },
  {
    "id" : "7cd0c9e8-9a8f-4d29-9612-15fe42ed66df",
    "prId" : 2692,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f507f646-8d63-48bc-9202-ac80d9c23c83",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "looks like the windows hack got squashed in the rebase/merge.\n",
        "createdAt" : "2014-12-01T19:25:57Z",
        "updatedAt" : "2014-12-01T19:47:29Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "974d1b16-6cbf-4a8b-a79e-10de26c462ee",
        "parentId" : "f507f646-8d63-48bc-9202-ac80d9c23c83",
        "authorId" : "caed7e37-3c3f-4942-8a71-27b86fe150f1",
        "body" : "I'm uncertain why this still shows the local client_bins=... missing. If you click the 'View full changes', it has been added again. I did remove the for loop in lieu of the path expansion like in the other stanzas.\n",
        "createdAt" : "2014-12-01T19:53:23Z",
        "updatedAt" : "2014-12-01T19:53:23Z",
        "lastEditedBy" : "caed7e37-3c3f-4942-8a71-27b86fe150f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "361c8dbae50fcd1b3b2fcd6ef52e5f2c0e7163ca",
    "line" : 243,
    "diffHunk" : "@@ -1,1 +520,524 @@    fi\n\n    # This fancy expression will expand to prepend a path\n    # (${LOCAL_OUTPUT_BINPATH}/${platform}/) to every item in the\n    # KUBE_CLIENT_BINARIES array."
  },
  {
    "id" : "07c2acb9-d12c-4edb-b447-051599c6afc3",
    "prId" : 2481,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5017db2-be23-4367-8492-83d0111c8b85",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "This looks like a typo and is now causing me issues on my local builds.\n",
        "createdAt" : "2014-11-20T16:06:48Z",
        "updatedAt" : "2014-11-20T16:06:48Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "426e9b73-14c7-4374-bee5-6df6877dfc50",
        "parentId" : "e5017db2-be23-4367-8492-83d0111c8b85",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Sorry about that!\n",
        "createdAt" : "2014-11-20T20:20:48Z",
        "updatedAt" : "2014-11-20T20:20:48Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8df9e9692a4888e5d4ba0ee5ea3afb75c1d484",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +550,554 @@  echo \"+++ Building tarball: full\"\n\n  local release_stage=\"${RELESAE_STAGE}/full/kubernetes\"\n  rm -rf \"${release_stage}\"\n  mkdir -p \"${release_stage}\""
  },
  {
    "id" : "877ffbb7-4ba3-40f5-9979-569ed6a46ed2",
    "prId" : 2092,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2774d19c-b137-48b5-b300-bc2e1b66cb8a",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Not sure I understand why `exit` instead of `return`, that makes it impossible to recover from the issue... Is it to be compatible with the errtrace code dumping a stacktrace on exceptions? Otherwise, return 1 on a case where errexit is set should have the same effect as exit 1... But I assume you have a good reason for it so it's probably fine to keep it as is.\n",
        "createdAt" : "2014-10-31T21:07:47Z",
        "updatedAt" : "2014-11-02T00:56:56Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "c9e21a54-dff8-4735-a441-169c779dfd2a",
        "parentId" : "2774d19c-b137-48b5-b300-bc2e1b66cb8a",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "This is related to my stack trace stuff.  We want this to be a clean exit without a command ever returning an error.\n",
        "createdAt" : "2014-10-31T21:18:58Z",
        "updatedAt" : "2014-11-02T00:56:56Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d33ce46cce5ff87653cb5a265950341c21b96f1",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +114,118 @@    echo \"Can't find 'docker' in PATH, please fix and retry.\" >&2\n    echo \"See https://docs.docker.com/installation/#installation for installation instructions.\" >&2\n    exit 1\n  fi\n"
  },
  {
    "id" : "b8a9a9fa-7fed-44c7-8c82-448f1fa95028",
    "prId" : 1953,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb477556-0dd6-4a6a-97a4-ec6d75f72342",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "expand ${gcs_options[@]+${gcs_options[@]}} to?\n",
        "createdAt" : "2014-10-22T18:00:23Z",
        "updatedAt" : "2014-10-22T18:00:23Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "00049651-c758-4fe4-aac9-faf91d5d8f17",
        "parentId" : "eb477556-0dd6-4a6a-97a4-ec6d75f72342",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "This is a safe way to handle an array that might be empty.  If it is empty then nothing is passed to the command line.  The previous version would pass an empty string arg.\n",
        "createdAt" : "2014-10-22T18:05:05Z",
        "updatedAt" : "2014-10-22T18:05:05Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7aa41b3c0658eb24bf011ca197e67c0632daa1f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +656,660 @@\n  # Now upload everything in release directory\n  gsutil -m \"${gcs_options[@]+${gcs_options[@]}}\" cp -r \"${RELEASE_DIR}\"/* \"${gcs_destination}\"\n\n  # TODO(jbeda): Generate an HTML page with links for this release so it is easy"
  },
  {
    "id" : "b5e38165-32d4-414c-b2be-ee26c377a4b3",
    "prId" : 1773,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ce45a0e-7763-44cd-99d8-a0ceb725bf3f",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Actually -- this is a library and it probably doesn't need the shebang at all.  But no harm, really.\n",
        "createdAt" : "2014-10-14T16:32:55Z",
        "updatedAt" : "2014-10-14T16:32:55Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1b9dcc73730994b81f4abbcae5997f56916f5a6",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +-1,3 @@#!/bin/bash\n\n# Copyright 2014 Google Inc. All rights reserved."
  },
  {
    "id" : "2546c28d-28ee-4d94-a60b-baa000e1d87d",
    "prId" : 1773,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db253cff-7f37-4435-b07e-857499e4afa0",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "hmm -- this worked okay on my mac (10.9 Mavericks) but perhaps it is only on new systems.\n",
        "createdAt" : "2014-10-14T16:33:50Z",
        "updatedAt" : "2014-10-14T16:33:50Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "6f40c6c9-d8b2-408c-8ae7-badf7b790d63",
        "parentId" : "db253cff-7f37-4435-b07e-857499e4afa0",
        "authorId" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "body" : "Yeah, it worked for me as well. But some guys reported having `$OSTYPE=Linux` on OS X probably because of macports or something..\n",
        "createdAt" : "2014-10-15T11:16:15Z",
        "updatedAt" : "2014-10-15T11:16:15Z",
        "lastEditedBy" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1b9dcc73730994b81f4abbcae5997f56916f5a6",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +146,150 @@\nfunction kube::build::is_osx() {\n  [[ \"$(uname)\" == \"Darwin\" ]]\n}\n"
  },
  {
    "id" : "d1356e0f-23a8-4da4-915f-30a9786e04fa",
    "prId" : 1658,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8d122c8-3b7d-4cce-bd54-7d08aa546e0b",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Pull the 1.3 out into a constant so we can easily find what to update as we advance golang versions.\n",
        "createdAt" : "2014-10-22T23:48:35Z",
        "updatedAt" : "2014-10-22T23:52:30Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "dd3ac185-884c-49f8-9f19-4f5502f6bd33",
        "parentId" : "f8d122c8-3b7d-4cce-bd54-7d08aa546e0b",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "Done.\n",
        "createdAt" : "2014-10-22T23:52:34Z",
        "updatedAt" : "2014-10-22T23:52:34Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "29c4fd6bb3dfc3531edf1e60e1af75073d800fdb",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +225,229 @@\nfunction kube::build::ensure_golang() {\n  kube::build::docker_image_exists golang 1.3 || {\n    [[ ${KUBE_SKIP_CONFIRMATIONS} =~ ^[yY]$ ]] || {\n      echo \"You don't have a local copy of the golang docker image. This image is 450MB.\""
  },
  {
    "id" : "fbaddd24-83a0-473d-820f-c43aefd4b710",
    "prId" : 1324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ca22ece-eb4b-43bc-9ebc-1953dc318689",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Again, either mkdir -p bin directly or mkdir bin without the -p after the release_stage is created.\n",
        "createdAt" : "2014-09-16T00:10:56Z",
        "updatedAt" : "2014-09-16T16:58:14Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "90f7bfa4f1f907d195bff2481392797834a7707c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +327,331 @@    local release_stage=\"${LOCAL_OUTPUT_ROOT}/release-stage/client/${platform_tag}/kubernetes/client\"\n    rm -rf \"${release_stage}\"\n    mkdir -p \"${release_stage}/bin\"\n\n    # This fancy expression will expand to prepend a path"
  },
  {
    "id" : "dbf9425b-7d27-46df-b10b-e350884c21f3",
    "prId" : 1324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7126e21-c986-42b7-851e-79e44c3f7e4f",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Same as above.\n",
        "createdAt" : "2014-09-16T00:15:31Z",
        "updatedAt" : "2014-09-16T16:58:14Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "90f7bfa4f1f907d195bff2481392797834a7707c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +348,352 @@    local release_stage=\"${LOCAL_OUTPUT_ROOT}/release-stage/server/${platform_tag}/kubernetes/server\"\n    rm -rf \"${release_stage}\"\n    mkdir -p \"${release_stage}/bin\"\n\n    # This fancy expression will expand to prepend a path"
  },
  {
    "id" : "cdd8502b-184d-43e0-b032-e07a2d29a829",
    "prId" : 1324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4cfc8f0-e6bc-476b-92bc-115ee9b991c2",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "These two functions are quite similar... Can they maybe be refactored to a generic \"package_tarball\" and then they call the generic one with the specific parameters?\n\nOnly if that doesn't make the code too ugly though... I think I'd rather have repetition than poor encapsulation, etc.\n",
        "createdAt" : "2014-09-16T00:17:04Z",
        "updatedAt" : "2014-09-16T16:58:14Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "c69df8d6-a1b6-4dd7-94ad-e0d5107fa49d",
        "parentId" : "e4cfc8f0-e6bc-476b-92bc-115ee9b991c2",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I think I want to leave these as separate for now.  Over time I think we may want to include other extra non-binary files into these tarballs.  At that point there will be some common boilerplate but the guts will diverge.\n\nBesides, passing arrays as parameters looks a little tricky/ugly in bash.\n",
        "createdAt" : "2014-09-16T16:57:51Z",
        "updatedAt" : "2014-09-16T16:58:14Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "c3a7b5d0-7219-4b56-9f7b-f602fbe756d6",
        "parentId" : "e4cfc8f0-e6bc-476b-92bc-115ee9b991c2",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Agreed. I was thinking that might end up being the case... Thanks for looking into it.\n",
        "createdAt" : "2014-09-16T17:59:45Z",
        "updatedAt" : "2014-09-16T17:59:45Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "90f7bfa4f1f907d195bff2481392797834a7707c",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +340,344 @@\n# Package up all of the server binaries\nfunction kube::release::package_server_tarball() {\n  local platform\n  for platform in \"${KUBE_SERVER_PLATFORMS[@]}\" ; do"
  },
  {
    "id" : "c95022b9-b27f-487b-8945-09d5a0038676",
    "prId" : 141,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12565962-a7f0-4730-a03a-8cc0c0f41113",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "did you consider using ${SOURCE} as the context and put the Dockerfile at the root?\n",
        "createdAt" : "2014-06-17T22:53:39Z",
        "updatedAt" : "2014-06-17T23:11:20Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "c69f4546-d346-4097-8831-d61ef594289a",
        "parentId" : "12565962-a7f0-4730-a03a-8cc0c0f41113",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Yes -- but that ends up copying our .git directory and the output directory back up as context on every build.  Doing this takes things down from >60M to ~250k.\n",
        "createdAt" : "2014-06-17T23:03:36Z",
        "updatedAt" : "2014-06-17T23:11:20Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f63a690ee8d766d00ed4639a72c6a432c7325aa",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\n  mkdir -p ${BUILD_CONTEXT_DIR}\n  tar czf ${BUILD_CONTEXT_DIR}/kube-source.tar.gz ${SOURCE}\n  cp build/build-image/Dockerfile ${BUILD_CONTEXT_DIR}/Dockerfile\n"
  }
]