[
  {
    "id" : "47958b57-5acc-4f4d-8e60-a5a51403e14e",
    "prId" : 96063,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96063#pullrequestreview-521119936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b81f35-e76e-4cfb-825f-3148c03eb919",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think we want to do the same for deepcopy gen, but it doesn't seem to immediately cause failures now.\r\nSo I will just lgtm this PR to fix issues and unblock other PRs.",
        "createdAt" : "2020-10-31T07:05:04Z",
        "updatedAt" : "2020-10-31T07:05:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "51343e13-7793-43bb-a8ce-6657e7cf75df",
        "parentId" : "b0b81f35-e76e-4cfb-825f-3148c03eb919",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Yeah, I tried to coax it into failing and failed.  I failed to fail.",
        "createdAt" : "2020-10-31T07:29:30Z",
        "updatedAt" : "2020-10-31T07:29:30Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "54e2748e133663a8bb8e9ee89717ca67465d85dd",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +445,449 @@\t    ./hack/run-in-gopath.sh $(CONVERSION_GEN)                        \\\n\t        --extra-peer-dirs $$(echo $(CONVERSION_EXTRA_PEER_PKGS) | sed 's/ /,/g') \\\n\t        --extra-dirs $$(echo $(CONVERSION_EXTRA_PKGS) | sed 's/ /,/g') \\\n\t        --v $(KUBE_VERBOSE)                                          \\\n\t        --logtostderr                                                \\"
  },
  {
    "id" : "4e2ead3b-7b33-4784-ac65-42c596c9eaaa",
    "prId" : 82777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82777#pullrequestreview-289628045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ce42cdc-6f03-4a02-ba44-b7e4b223d5d1",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How about `\"DBG: deepcopy needed $(@D): $(wordlist 1,3,$?)\"` so we list a few files (some comment for all 3)",
        "createdAt" : "2019-09-17T20:06:35Z",
        "updatedAt" : "2019-09-17T20:06:35Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f972573c-55a2-4e2a-9575-58c6df458756",
        "parentId" : "4ce42cdc-6f03-4a02-ba44-b7e4b223d5d1",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Actually, you know what - skip this.  We're going to `ls` anyway.",
        "createdAt" : "2019-09-17T20:07:40Z",
        "updatedAt" : "2019-09-17T20:07:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "cf55d396-1702-40ee-887b-6b7c832ae6c3",
        "parentId" : "4ce42cdc-6f03-4a02-ba44-b7e4b223d5d1",
        "authorId" : "a4ee1046-c360-4959-9592-5a4fe58a5a38",
        "body" : "@thockin, Yes, you are right",
        "createdAt" : "2019-09-18T01:31:07Z",
        "updatedAt" : "2019-09-18T01:31:07Z",
        "lastEditedBy" : "a4ee1046-c360-4959-9592-5a4fe58a5a38",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ab47f95ebd62f3f8b813950cc8403fef722b5d5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +183,187 @@$(DEEPCOPY_FILES): $(DEEPCOPY_GEN)\n\tif [[ \"$(DBG_CODEGEN)\" == 1 ]]; then        \\\n\t    echo \"DBG: deepcopy needed $(@D):\";  \\\n\t    ls -lf --full-time $@ $? || true;       \\\n\tfi"
  },
  {
    "id" : "b9d88591-99f9-4895-83d2-ca01c0c8b6b1",
    "prId" : 71192,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71192#pullrequestreview-202420325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da9995f8-5522-4850-8812-dddfa9f7e0c4",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Why you're generating for meta and autoscaling here?",
        "createdAt" : "2019-02-07T14:20:06Z",
        "updatedAt" : "2019-03-07T04:37:11Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "d7fd9eef-6a7d-4992-9c6e-1097837bfede",
        "parentId" : "da9995f8-5522-4850-8812-dddfa9f7e0c4",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "metav1.TypeMeta, metav1.ObjectMeta and autoscalingv1.Scale are referred by CR schema. we need to pre-generate the definitions to publish them from apiextensions-apiserver\r\n\r\nalso the definitions must deep-equal to the ones we served for built-in APIs, otherwise kube-openapi dedups the definitions by renaming",
        "createdAt" : "2019-02-12T00:37:58Z",
        "updatedAt" : "2019-03-07T04:37:11Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "54b99413b2b58f50561b6fba20c47af979fec77e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +478,482 @@\t    --v $(KUBE_VERBOSE)                                                         \\\n\t    --logtostderr                                                               \\\n\t    -i \"k8s.io/apimachinery/pkg/apis/meta/v1,k8s.io/api/autoscaling/v1\"         \\\n\t    -p $(PRJ_SRC_PATH)/$(CRD_OPENAPI_OUTPUT_PKG)                                \\\n\t    -O $(OPENAPI_BASENAME)                                                      \\"
  },
  {
    "id" : "3a26a7aa-95b0-4f35-a082-d9fc1e94d243",
    "prId" : 69316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69316#pullrequestreview-166336472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "Currently the workflow is: API authors see the error message below (`API_RULE_CHECK_FAILURE_MESSAGE`) when `violations.report` differs from `violation_exceptions.list`, and they must follow the instruction in the message to either \r\n- fix new API rule violations that they introduced\r\n- run `hack/update-api-violation-exceptions.sh` to update the exception list when necessary\r\n\r\nAlternatively we could have `REPORT_FILENAME := api/api-rules/violation_exceptions.list`, by which we can get rid of the hack script-- the API authors won't see any error when there are new violations, the `violation_exceptions.list` will be updated, and it becomes the API reviewers' responsibility to catch the file change and ask API authors to fix the violations.",
        "createdAt" : "2018-10-02T21:55:06Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "551449a1-fe27-4e15-b4f5-ff37f9851aff",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "/cc @lavalamp \r\nfor high level workflow review\r\n/cc @ixdy \r\nfor Makefile and hack script review",
        "createdAt" : "2018-10-02T22:01:11Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "0d689dd9-54ac-4ef1-ba3b-ab964a6b8a77",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm fine with either option--whatever @ixdy thinks is best.",
        "createdAt" : "2018-10-10T20:34:25Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "765e75d4-34e5-4184-87d8-b05de219031e",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Reading the hack script, I'm not particularly excited about duplicating most of the logic from the Makefile into it.\r\n\r\nJust generating the exceptions list automatically seems like the best experience for contributors. Do we expect api-approvers to notice changes to this list?\r\n\r\nYet another option would be to optionally make `Makefile.generated_files` update the known violations file, e.g. if one ran `make generated_files UPDATE_API_KNOWN_VIOLATIONS=true` or something like that. That way we could keep the logic all in the Makefile.",
        "createdAt" : "2018-10-18T21:22:06Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "1ff1028d-f2cc-4399-9c23-6007cea57bef",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "> Just generating the exceptions list automatically seems like the best experience for contributors. Do we expect api-approvers to notice changes to this list?\r\n\r\nI suspect that's unlikely to happen. When api-authors add/update APIs and send a PR, I'd expect they put the auto-updated exceptions into a [\"generated\"](https://github.com/kubernetes/kubernetes/search?q=generated&type=Commits) commit, along with the other auto-generated files (bazel BUILD, openapi/swagger specs, api-reference docs, deepcopy, etc.). I think those commits usually are not (and shouldn't be) well-reviewed.\r\n\r\nIt would be an annoying extra step for api-reviewers to search for the exceptions filename in the \"generated\" commits, especially when most of the time that file shouldn't be changed.\r\n\r\n> Yet another option would be to optionally make Makefile.generated_files update the known violations file\r\n\r\nI love this idea! Thanks @ixdy. Let me try implementing it",
        "createdAt" : "2018-10-18T22:08:14Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "79c6bcbc-3068-4ec3-abb8-9b6c1e68ae9d",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "`DBG_MAKEFILE` is probably a good example to consult.",
        "createdAt" : "2018-10-18T22:20:21Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "d9b81bda-c2a2-40e0-9877-d81e7927b1fa",
        "parentId" : "60a4813e-5875-4362-aa7c-fbf9e8b06104",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "@ixdy Updated. Please take a look",
        "createdAt" : "2018-10-18T23:42:57Z",
        "updatedAt" : "2018-11-02T00:43:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc062d8125121bf3a58a44a2c62b5521db63581",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +405,409 @@BOILERPLATE_FILENAME := vendor/k8s.io/code-generator/hack/boilerplate.go.txt\nREPORT_FILENAME := $(OUT_DIR)/violations.report\nKNOWN_VIOLATION_FILENAME := api/api-rules/violation_exceptions.list\n# When UPDATE_API_KNOWN_VIOLATIONS is set to be true, let the generator to write\n# updated API violations to the known API violation exceptions list."
  },
  {
    "id" : "a306091f-ff6d-42a0-a177-0180ae8b86e2",
    "prId" : 65737,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65737#pullrequestreview-136421708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e15cbc2c-ffe7-4866-9ea6-b5b5d11dbdc1",
        "parentId" : null,
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I feel this should be a hack/verify-* thing. Is this being discussed? we are doing verify work in makefile which is odd.",
        "createdAt" : "2018-07-11T20:20:18Z",
        "updatedAt" : "2018-07-11T21:13:45Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "933c62d6-7f3f-4f27-986c-49c32963dcf4",
        "parentId" : "e15cbc2c-ffe7-4866-9ea6-b5b5d11dbdc1",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "We integrated the API rule checking into OpenAPI spec generation (in kube-openapi) to provide an \"API compiler / toolchain\". In Kubernetes we add an extra layer to allow checking existing violation exceptions, but I think we still want new violations to fail in the \"compiling\" step. If we move the diff to `hack/verify-openapi-spec.sh` we will have a standalone `hack/update-openapi-spec.sh` script that passes on new violations (although our CI ensures verification scripts always get run, so violations will get caught eventually).",
        "createdAt" : "2018-07-11T21:05:58Z",
        "updatedAt" : "2018-07-11T21:13:45Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ad8c5c5963cf617d743a701f575bb97fb1a60b6",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +452,456 @@\t    -r $(REPORT_FILENAME)                                                       \\\n\t    \"$$@\";                                                                      \\\n\tdiff $(REPORT_FILENAME) $(KNOWN_VIOLATION_FILENAME) ||                          \\\n\t(echo $(API_RULE_CHECK_FAILURE_MESSAGE); exit 1)\n"
  },
  {
    "id" : "77295647-85ec-487d-bdd6-b663ca4a47d2",
    "prId" : 62151,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62151#pullrequestreview-114573609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f33a04a6-24ed-45c8-8057-19f37fac1aa7",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "oh, does FORCE make this always run?",
        "createdAt" : "2018-04-11T16:22:03Z",
        "updatedAt" : "2018-04-11T16:22:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "e16bd20f-21eb-4bd7-8375-a92c8c53b720",
        "parentId" : "f33a04a6-24ed-45c8-8057-19f37fac1aa7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "yes",
        "createdAt" : "2018-04-23T22:10:40Z",
        "updatedAt" : "2018-04-23T22:10:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "59ef5e2379cfb53a6112393d3b54a414b88f8e99",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +820,824 @@# This rule is the user-friendly entrypoint for bindata generation.\n.PHONY: gen_bindata\ngen_bindata: $(BINDATA_GEN) FORCE\n\t./hack/run-in-gopath.sh $(BINDATA_SCRIPT)\n"
  },
  {
    "id" : "d6064c72-e642-4cf9-8823-781a80aa610d",
    "prId" : 62151,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62151#pullrequestreview-111426486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10c2533b-3cd3-4582-8b54-e9c7f2e79080",
        "parentId" : null,
        "authorId" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "body" : "this is insufficient-- the translations bindata (`pkg/generated/bindata.go`) depends on `translations/kubectl/template.pot`, which depends on each translation messages file",
        "createdAt" : "2018-04-11T22:05:16Z",
        "updatedAt" : "2018-04-11T22:11:30Z",
        "lastEditedBy" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "tags" : [
        ]
      },
      {
        "id" : "f010fe44-a645-4968-be7d-52d6a430305b",
        "parentId" : "10c2533b-3cd3-4582-8b54-e9c7f2e79080",
        "authorId" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "body" : "looking into it more: the .pot and .mo deps are never actually used, so this is fine",
        "createdAt" : "2018-04-11T22:34:18Z",
        "updatedAt" : "2018-04-11T22:34:18Z",
        "lastEditedBy" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "59ef5e2379cfb53a6112393d3b54a414b88f8e99",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +816,820 @@# A wrapper script that generates all bindata files.  It is fast enough that we\n# don't care.\nBINDATA_SCRIPT := hack/generate-bindata.sh\n\n# This rule is the user-friendly entrypoint for bindata generation."
  },
  {
    "id" : "3bc90239-9da3-4d84-848b-444623be1388",
    "prId" : 54372,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54372#pullrequestreview-124952100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fec2a7f7-1413-4f01-909a-a00c53315e1e",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is this including the `$(GO_PKGDEPS_FILE)` before it's updated? or is `make` smart enough to generate this file first, since there's a rule for it?",
        "createdAt" : "2018-05-30T20:21:01Z",
        "updatedAt" : "2018-06-04T22:04:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "68f6e898-5f1b-49b3-a374-186f6e36d76e",
        "parentId" : "fec2a7f7-1413-4f01-909a-a00c53315e1e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Make will try to regenerate it before including it.",
        "createdAt" : "2018-05-31T19:54:31Z",
        "updatedAt" : "2018-06-04T22:04:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b8b7100596f6467a03eece5533c0bc5f5ab2090",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +54,58 @@# the same name to be considered and if it is updated, make will restart and\n# reload the updated deps.\nsinclude $(META_DIR)/$(GO_PKGDEPS_FILE)\n\n# Update the set of Go deps for our project.  This will let us determine if"
  },
  {
    "id" : "4828cf8b-c894-43c9-95f0-edb6be0534da",
    "prId" : 51052,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51052#pullrequestreview-57634448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7add9a7b-574d-4646-a949-50d41dd834c6",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I'm guessing the `,,` was a typo @caesarxuchao ?",
        "createdAt" : "2017-08-21T23:14:33Z",
        "updatedAt" : "2017-08-21T23:14:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "3081c4f3-dc62-47e0-92f9-43e3817e3e53",
        "parentId" : "7add9a7b-574d-4646-a949-50d41dd834c6",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "yep, gets interpreted as and empty list element",
        "createdAt" : "2017-08-21T23:20:39Z",
        "updatedAt" : "2017-08-21T23:20:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae4b310942a866fa6d46c425c8e22fca158fb5dd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@                --logtostderr                                               \\\n                -i $$(cat $(META_DIR)/$(DEEPCOPY_GEN).todo | paste -sd, -)  \\\n                --bounding-dirs $(PRJ_SRC_PATH),\"k8s.io/api\"                \\\n                -O $(DEEPCOPY_BASENAME)                                     \\\n                \"$$@\";                                                      \\"
  }
]