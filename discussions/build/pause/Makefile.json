[
  {
    "id" : "790420d8-eb3f-4bde-a3c3-6425f4de8178",
    "prId" : 91452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91452#pullrequestreview-464394691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52ed768d-d89e-44a9-80b8-dd783824468d",
        "parentId" : null,
        "authorId" : "a78f6678-a547-4eb5-9b87-bb3efd57db24",
        "body" : "This seems like it's unused (only `ALL_OSVERSIONS.windows` is referenced anywhere)",
        "createdAt" : "2020-07-30T20:49:52Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "a78f6678-a547-4eb5-9b87-bb3efd57db24",
        "tags" : [
        ]
      },
      {
        "id" : "f3c3cdb0-f051-48d5-81c9-d2f664857fe3",
        "parentId" : "52ed768d-d89e-44a9-80b8-dd783824468d",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "It is used on L130:\r\n\r\n    -t $(IMAGE_WITH_OS_ARCH)-${OSVERSION}:$(TAG) --build-arg BASE=${BASE}:${OSVERSION} --build-arg ARCH=$(ARCH) -f Dockerfile.windows .",
        "createdAt" : "2020-08-10T16:37:37Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1e1138d6862fe5d4902e31e41a604c296508b4",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +27,31 @@OS ?= linux\n# OS Version for the Windows images: 1809, 1903, 1909 2004\nOSVERSION ?= 1809 1903 1909 2004\n\n# The output type could either be docker (local), or registry."
  },
  {
    "id" : "3b5062d6-85e1-4b75-8c9e-995c95d8a325",
    "prId" : 91452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91452#pullrequestreview-482071982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3de6fe1a-7270-481c-a4b2-652d30624b94",
        "parentId" : null,
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "Why do we want `all-container-docker` to only build Linux? This seems confusing. Why not just always build all OSes?",
        "createdAt" : "2020-09-03T15:55:09Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      },
      {
        "id" : "b6409050-7eeb-456b-8285-1764b8113c5e",
        "parentId" : "3de6fe1a-7270-481c-a4b2-652d30624b94",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "There's no point to it.\r\n\r\nFirst of all, if you are making the target ``all-container-docker`` probably means you only want that image locally, and thus, it probably means it's a Linux node. There's no need to build a Windows image in this case.\r\n\r\nSecondly, if you are on a Linux node, unless you push the built images to a registry (``docker buildx build --output=type=registry``), that Windows image is not even visible locally like the rest of the images (if you run ``docker images -a``)\r\n\r\nSo, I just decided that it's not worth building the Windows image if the image is not meant to be pushed to a registry. They can't be used anyway. And since we are building multiple Windows images for multiple OS versions, that would more than double the build time for no reason.",
        "createdAt" : "2020-09-03T16:10:01Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "25ca9360-138b-4ffb-9b5f-a7bc1685d529",
        "parentId" : "3de6fe1a-7270-481c-a4b2-652d30624b94",
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "Ah, that makes sense. I still think it may be confusing that `make all` is not really making \"all\", but now that I get that `buildx build --output=docker` can't output Windows images, and so the `all-container-docker` not including Windows makes more sense.\r\n\r\nI was looking to test that the changes work without pushing them to a registry, which afaik isn't possible right now.",
        "createdAt" : "2020-09-03T17:52:11Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1e1138d6862fe5d4902e31e41a604c296508b4",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +104,108 @@\nall-container-docker: $(addprefix sub-container-docker-,$(ALL_OS_ARCH.linux))\nall-container-registry: $(addprefix sub-container-registry-,$(ALL_OS_ARCH))\n\n# split words on hyphen, access by 1-index"
  },
  {
    "id" : "cef17de4-c6f0-4a59-bdf2-731818e3c9e6",
    "prId" : 91452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91452#pullrequestreview-484244065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8178d7e5-ef0e-4e88-b955-bde0647c0aa3",
        "parentId" : null,
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Has an issue/feature request been raised for this `docker manifest annotate doesn't allow us to set the os.version`?\r\nIf so should we link it here? If not should we file one?",
        "createdAt" : "2020-09-04T16:44:22Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      },
      {
        "id" : "09d86f03-a0bd-4d83-bfe4-62143ae26f8f",
        "parentId" : "8178d7e5-ef0e-4e88-b955-bde0647c0aa3",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Looks like support for setting OS version with docker manifst annotate was added with https://github.com/docker/cli/pull/2578",
        "createdAt" : "2020-09-04T16:48:57Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      },
      {
        "id" : "f74722fa-d0aa-42fc-81a4-af0558069949",
        "parentId" : "8178d7e5-ef0e-4e88-b955-bde0647c0aa3",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Good point, I've reported it now: https://github.com/moby/moby/issues/41417",
        "createdAt" : "2020-09-04T17:53:13Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "796f55d8-e065-4706-90ff-c9660fb5eb8b",
        "parentId" : "8178d7e5-ef0e-4e88-b955-bde0647c0aa3",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Interesting. But from what I see, that commit is not yet included in any release. We should add a TODO to mention this.\r\n\r\nBut I think it is going to take a bit until it is available. First, it needs to be released, then there should be a new Google Cloud Builder image released that includes that change.",
        "createdAt" : "2020-09-08T15:14:00Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1e1138d6862fe5d4902e31e41a604c296508b4",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +87,91 @@\tset -x; for arch in $(ALL_ARCH.linux); do docker manifest annotate --os linux --arch $${arch} ${IMAGE}:${TAG} ${IMAGE}-linux-$${arch}:${TAG}; done\n\t# For Windows images, we also need to include the \"os.version\" in the manifest list, so the Windows node can pull the proper image it needs.\n\t# At the moment, docker manifest annotate doesn't allow us to set the os.version, so we'll have to it ourselves. The manifest list can be found locally as JSONs.\n\t# See: https://github.com/moby/moby/issues/41417\n\t# TODO(claudiub): Clean this up once the above issue has been fixed."
  },
  {
    "id" : "130d3dfd-44d3-44d5-b90e-92d7d1b46a2c",
    "prId" : 91452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91452#pullrequestreview-498931347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdd34ed6-a970-4f25-a195-448a7d965e18",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "just checking: will this work correctly in cloudbuild?",
        "createdAt" : "2020-09-29T07:09:31Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "0e582248-268c-455a-99e3-148ea58e1288",
        "parentId" : "cdd34ed6-a970-4f25-a195-448a7d965e18",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "I've built this image inside of a ``gcr.io/k8s-testimages/gcb-docker-gcloud:v20200422-b25d964`` container, which is the image mentioned in the pause image's ``cloudbuild.yaml`` file. It built succesfully, including the Windows images. See logs below.\r\n\r\nLogs: https://paste.ubuntu.com/p/3ZjF4nv92M/",
        "createdAt" : "2020-09-29T12:28:58Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "7737ae4f-900b-483f-be9d-b01ce70d693e",
        "parentId" : "cdd34ed6-a970-4f25-a195-448a7d965e18",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "thanks!",
        "createdAt" : "2020-09-29T22:13:38Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1e1138d6862fe5d4902e31e41a604c296508b4",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\tBASEIMAGE=${BASE.windows}:$${osversion}; \\\n\t\t\tfull_version=`docker manifest inspect ${BASE.windows}:$${osversion} | grep \"os.version\" | head -n 1 | awk '{print $$2}'` || true; \\\n\t\t\tsed -i -r \"s/(\\\"os\\\"\\:\\\"windows\\\")/\\0,\\\"os.version\\\":$${full_version}/\" \"${HOME}/.docker/manifests/$${manifest_image_folder}-${TAG}/$${manifest_image_folder}-windows-$${arch}-$${osversion}-${TAG}\"; \\\n\t\tdone; \\\n\tdone"
  },
  {
    "id" : "5283f131-dfdc-4725-9c56-f6594642dc4d",
    "prId" : 91452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91452#pullrequestreview-499566747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70320394-432c-4531-b0c0-7b8029b879c7",
        "parentId" : null,
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "I've added a comment here mentioning the purpose of the wincat binary. I've also linked this PR, in case anyone needs to read more information about it.",
        "createdAt" : "2020-09-30T15:40:18Z",
        "updatedAt" : "2020-09-30T16:49:19Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1e1138d6862fe5d4902e31e41a604c296508b4",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +51,55 @@# NOTE(claudiub): The Windows pause image also requires the wincat binary we're compiling for the\n# port-forwarding scenarios. If it's no longer necessary, it can be removed.\n# For more information, see: https://github.com/kubernetes/kubernetes/pull/91452\nBIN.linux = pause\nBIN.windows = pause wincat"
  },
  {
    "id" : "402b3dae-d4ec-439a-9639-0c883c144090",
    "prId" : 90665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90665#pullrequestreview-404516134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c50a145d-6b19-46eb-9df0-16afa154994a",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we should make sure we follow up on this and let some folks know they need to do this again.\r\n\r\nfyi @dims for containerd",
        "createdAt" : "2020-05-02T06:41:54Z",
        "updatedAt" : "2020-05-02T06:41:55Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "fb32017f-c31b-4f47-b63d-0b02f676ed21",
        "parentId" : "c50a145d-6b19-46eb-9df0-16afa154994a",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "ACK!",
        "createdAt" : "2020-05-02T06:50:36Z",
        "updatedAt" : "2020-05-02T06:50:37Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "a9ad3efd-b1a4-47a6-84e5-60271c1334bc",
        "parentId" : "c50a145d-6b19-46eb-9df0-16afa154994a",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Ack @BenTheElder ",
        "createdAt" : "2020-05-02T10:04:13Z",
        "updatedAt" : "2020-05-02T10:04:14Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "8233fbdf-27d8-4237-b0f2-0b614d43207a",
        "parentId" : "c50a145d-6b19-46eb-9df0-16afa154994a",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Now both of you get some sleep! it's an order",
        "createdAt" : "2020-05-02T10:04:32Z",
        "updatedAt" : "2020-05-02T10:04:32Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "410b388ad097d2e98334ad9fb9c65acc34d473ec",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@IMAGE_WITH_ARCH = $(IMAGE)-$(ARCH)\n\nTAG = 3.3\nREV = $(shell git describe --contains --always --match='v*')\n"
  },
  {
    "id" : "e1353a2e-4348-49bc-9c32-cb2ae747d3ef",
    "prId" : 90558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90558#pullrequestreview-402291555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11530d7f-e6bd-424d-95bb-81496d12b182",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "out of curiosity, why the addition of `--load` here?",
        "createdAt" : "2020-04-28T22:20:40Z",
        "updatedAt" : "2020-04-28T22:20:40Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "475d63db-d30a-446a-bbcb-679f1be41c00",
        "parentId" : "11530d7f-e6bd-424d-95bb-81496d12b182",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Apparently buildx behavior is slightly different in the GCB environment, the `--load` ensures that the pause image is \"loaded\" back in the docker daemon.\r\n\r\n```\r\nThe CLI of docker buildx is almost same as docker build , but you need to specify --load flag in order to load the build artifact from the cluster into the local Docker daemon.\r\n```",
        "createdAt" : "2020-04-28T23:56:56Z",
        "updatedAt" : "2020-04-28T23:56:56Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b9ba784be2e47ff84c43fb01af93bf39a151fb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +87,91 @@container: .container-$(ARCH)\n.container-$(ARCH): bin/$(BIN)-$(ARCH)\n\tDOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --load --pull --platform linux/$(ARCH) -t $(IMAGE_WITH_ARCH):$(TAG) --build-arg ARCH=$(ARCH) .\n\ttouch $@\n"
  },
  {
    "id" : "e54706f2-0973-42a8-99fb-a1875dea1646",
    "prId" : 88139,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88139#pullrequestreview-358617733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b997b662-a418-4109-94f0-b26b8837872f",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we usually have this line as `@` but then you can't see the manifest actually being built, instead I removed that and added trace mode so you can see the annotations ...",
        "createdAt" : "2020-02-13T22:56:39Z",
        "updatedAt" : "2020-02-13T22:58:36Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "ef7b82a0-2b4e-4182-bf81-489ec4bdd830",
        "parentId" : "b997b662-a418-4109-94f0-b26b8837872f",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this is otherwise from build/debian-base",
        "createdAt" : "2020-02-13T22:57:29Z",
        "updatedAt" : "2020-02-13T22:58:36Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "1b335c2c-0bb1-4162-a9d1-6984cc2672f2",
        "parentId" : "b997b662-a418-4109-94f0-b26b8837872f",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Is this rule standardized? Should this makerule go into `../../hack/make-rules/Makefile.manifest`?",
        "createdAt" : "2020-02-13T23:06:34Z",
        "updatedAt" : "2020-02-13T23:06:35Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "141f58dc-2dcb-41ff-be58-6e2b491d030f",
        "parentId" : "b997b662-a418-4109-94f0-b26b8837872f",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "it's used by a few things.\r\n\r\nI'd somewhat prefer to finish getting the pause update sorted before refactoring further but I _think_ it should be pretty simple to standardize a few makefiles on this.",
        "createdAt" : "2020-02-13T23:11:17Z",
        "updatedAt" : "2020-02-13T23:11:17Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "becc4b7d57fe8d2b120d8c4576c4dae588316f7e",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +61,65 @@push-manifest:\n\tdocker manifest create --amend $(IMAGE):$(TAG) $(shell echo $(ALL_ARCH) | sed -e \"s~[^ ]*~$(IMAGE)\\-&:$(TAG)~g\")\n\tset -x; for arch in $(ALL_ARCH); do docker manifest annotate --arch $${arch} ${IMAGE}:${TAG} ${IMAGE}-$${arch}:${TAG}; done\n\tdocker manifest push --purge ${IMAGE}:${TAG}\n"
  },
  {
    "id" : "6ceaf0dc-4f21-410c-bb32-cb8077463c7f",
    "prId" : 23009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e043fc01-3367-4569-8325-064d7fdc9f46",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "can you add a var that is a list of supported ARCH values since you have to un-edit CHANGELOG :)\n",
        "createdAt" : "2016-05-04T00:33:22Z",
        "updatedAt" : "2016-05-05T01:45:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "01e4dad3-d73a-430d-bc20-58883c9f967f",
        "parentId" : "e043fc01-3367-4569-8325-064d7fdc9f46",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "Not sure I understand the purpose of this.\n",
        "createdAt" : "2016-05-04T04:49:54Z",
        "updatedAt" : "2016-05-05T01:45:58Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      },
      {
        "id" : "73ea84b0-acfe-4052-b8e0-5d727c013655",
        "parentId" : "e043fc01-3367-4569-8325-064d7fdc9f46",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I was thinking a `make containers` rule would loop for all supported architectures, and a `make pushes` would push them all.  Bad idea?\n",
        "createdAt" : "2016-05-04T06:13:33Z",
        "updatedAt" : "2016-05-05T01:45:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "38bb08b5-30cc-4a27-8fd6-3435c53a118d",
        "parentId" : "e043fc01-3367-4569-8325-064d7fdc9f46",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "Done, though I named the rules all-container and all-push.\n",
        "createdAt" : "2016-05-05T01:42:02Z",
        "updatedAt" : "2016-05-05T01:45:58Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3690e2d5e87904f6d8bd668083de14e65910fd7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +22,26 @@\n# Architectures supported: amd64, arm, arm64 and ppc64le\nARCH ?= amd64\n\nALL_ARCH = amd64 arm arm64 ppc64le"
  },
  {
    "id" : "f756077d-3f24-4e30-82c5-fa13e9589931",
    "prId" : 23009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ee5ee20-d406-4b1b-9c56-4df570c4b83e",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@thockin I'm not sure if we should push legacy of this image anymore, as we've updated all refs to `-amd64:3.0` and the `2:0` still exists.\nMy point is, since the \"old\" naming is deprecated, it might be best to not push/refer to the old naming at all, to reduce confusion. However, if you've already pushed it, it's okay\nWDYT?\n",
        "createdAt" : "2016-05-05T06:33:16Z",
        "updatedAt" : "2016-05-05T06:33:16Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "4a93d67d-721a-47fc-86ba-3325807fb714",
        "parentId" : "0ee5ee20-d406-4b1b-9c56-4df570c4b83e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'd prefer to just leave it for a while.\n",
        "createdAt" : "2016-05-06T03:33:28Z",
        "updatedAt" : "2016-05-06T03:33:28Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7058160e-42b2-453c-802a-47e360b848bf",
        "parentId" : "0ee5ee20-d406-4b1b-9c56-4df570c4b83e",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "okay, fine\n",
        "createdAt" : "2016-05-06T04:39:12Z",
        "updatedAt" : "2016-05-06T04:39:12Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3690e2d5e87904f6d8bd668083de14e65910fd7",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +86,90 @@\ttouch $@\n\npush-legacy: .push-legacy-$(ARCH)\n.push-legacy-$(ARCH): .container-$(ARCH)\nifeq ($(ARCH),amd64)"
  },
  {
    "id" : "7bb8a652-4f7c-4136-84f2-1802357b5e4d",
    "prId" : 6248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95800001-fbeb-4c44-8551-f2a315a9727f",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "can we add an all that depends on push? :)\n",
        "createdAt" : "2015-03-31T21:58:54Z",
        "updatedAt" : "2015-03-31T22:07:17Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "48cd904a20eace84444c6c4b39d00c3ba14d1e6d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@IMAGE = pause\nTAG = 0.8.0\n\nbuild:\n\t./prepare.sh"
  },
  {
    "id" : "a48e1bc9-5378-41b2-a475-e04239566a2d",
    "prId" : 6248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fdbb442-6523-4f67-8438-d97b5a61047d",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "I think the command here needs to be updated so that it builds static with Go 1.4\n",
        "createdAt" : "2015-03-31T21:59:49Z",
        "updatedAt" : "2015-03-31T22:07:17Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "48cd904a20eace84444c6c4b39d00c3ba14d1e6d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +5,9 @@\nbuild:\n\t./prepare.sh\n\tdocker build -t gcr.io/google_containers/$(IMAGE):$(TAG) .\n"
  }
]