[
  {
    "id" : "ed79c5b5-163a-430f-a8e1-dcadc868a10e",
    "prId" : 10109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84ae1533-9cae-4a07-abe8-5c8da73f0897",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "use one simple `filter != null` to catch both `null` and `undefined` (note the two-character `!=`)\n",
        "createdAt" : "2016-07-20T01:22:29Z",
        "updatedAt" : "2016-07-20T01:25:18Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a8464cc53577fe2154a0eb3a8bd1d53b8ffaa3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +71,75 @@\n    // Filter by label\n    if (filter !== undefined && filter != null && filter.length > 0) {\n        filteredOptions = filteredOptions.filter(option => {\n            return RegExp(filter, 'ig').test(option.label);"
  },
  {
    "id" : "85f49dfc-afa6-476a-9eca-0fcd2c945e1c",
    "prId" : 10109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86d773d4-7279-4fb8-95f6-c8984a449120",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "`===`\n",
        "createdAt" : "2016-07-20T01:22:34Z",
        "updatedAt" : "2016-07-20T01:22:34Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a8464cc53577fe2154a0eb3a8bd1d53b8ffaa3",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +78,82 @@\n    // Append Addition option\n    if (filteredOptions.length == 0) {\n        filteredOptions.push({\n            label:  `Create: ${filter}`,"
  },
  {
    "id" : "5f856af8-2047-4e56-b399-59c78b7f0a3c",
    "prId" : 10109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1d154e6-99a8-4470-b87d-804aafec66ad",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "not sure why such an involved implementation is necessary for this test, but since you did it i'm going to review it ðŸ˜„ \n",
        "createdAt" : "2016-07-20T01:23:52Z",
        "updatedAt" : "2016-07-20T01:23:52Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      },
      {
        "id" : "78ca7d25-26ed-44d5-8509-6b1d5d8be8fa",
        "parentId" : "e1d154e6-99a8-4470-b87d-804aafec66ad",
        "authorId" : "c0d7825d-2c61-4953-82a0-11e861e6661b",
        "body" : "It's the temporary solution for allow create (https://github.com/JedWatson/react-select/wiki#allow-create-temporary-solution). I'll open up a follow-up PR to follow your suggestions.\n",
        "createdAt" : "2016-07-20T03:42:31Z",
        "updatedAt" : "2016-07-20T03:42:31Z",
        "lastEditedBy" : "c0d7825d-2c61-4953-82a0-11e861e6661b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a8464cc53577fe2154a0eb3a8bd1d53b8ffaa3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +64,68 @@});\n\nconst filterOptions = (options: Array<Option>, filter: string, values: Array<Option>) => {\n    // Filter already selected values\n    let filteredOptions = options.filter(option => {"
  },
  {
    "id" : "f06f602e-fd68-4d16-a210-4bbc20ce8b5c",
    "prId" : 10109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "361a9b10-5570-4746-a2da-8a0c425a0c82",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "classic candidate for inline + implicit return:\n\n``` js\nlet filteredOptions = options.filter(option => !(_.includes(values, option)))\n```\n",
        "createdAt" : "2016-07-20T01:24:33Z",
        "updatedAt" : "2016-07-20T01:24:33Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      },
      {
        "id" : "d92c8c76-c811-4ccc-b962-e81323691315",
        "parentId" : "361a9b10-5570-4746-a2da-8a0c425a0c82",
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "and while we're at it, do you really need `_.includes` or is `values.indexOf(option) < 0` sufficient?\n",
        "createdAt" : "2016-07-20T01:24:55Z",
        "updatedAt" : "2016-07-20T01:24:55Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a8464cc53577fe2154a0eb3a8bd1d53b8ffaa3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +67,71 @@    // Filter already selected values\n    let filteredOptions = options.filter(option => {\n        return !(_.includes(values, option));\n    });\n"
  },
  {
    "id" : "831fe768-5b41-4415-bb01-da367b248f26",
    "prId" : 10109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d93a11d-fd2c-4b55-9a31-d8a773e10b2a",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "another candidate for inlining like my suggestion above\n",
        "createdAt" : "2016-07-20T01:25:56Z",
        "updatedAt" : "2016-07-20T01:25:56Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a8464cc53577fe2154a0eb3a8bd1d53b8ffaa3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +74,78 @@        filteredOptions = filteredOptions.filter(option => {\n            return RegExp(filter, 'ig').test(option.label);\n        });\n    }\n"
  },
  {
    "id" : "14584df8-7614-4d02-8f41-e43ce5f2a9af",
    "prId" : 13439,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13439#pullrequestreview-13832942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4424083-c47d-4da1-b6a7-15b3e6a66345",
        "parentId" : null,
        "authorId" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "body" : "very minor: `=> void` as the function never returns anything.",
        "createdAt" : "2016-12-20T18:33:47Z",
        "updatedAt" : "2016-12-20T18:33:47Z",
        "lastEditedBy" : "c0ed3fca-59c0-4b4c-a178-c64409334a39",
        "tags" : [
        ]
      },
      {
        "id" : "25c0cb30-1644-4ef7-8e53-d27cc77dc396",
        "parentId" : "a4424083-c47d-4da1-b6a7-15b3e6a66345",
        "authorId" : "a0211b23-a3b6-4136-8e84-d7505e0fac51",
        "body" : "I agree in general, I was using it because this is how it appears as a parameter of loadOptions in the function declaration.",
        "createdAt" : "2016-12-20T19:30:32Z",
        "updatedAt" : "2016-12-20T19:30:33Z",
        "lastEditedBy" : "a0211b23-a3b6-4136-8e84-d7505e0fac51",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5ca01cced4e479f6c1aaea7da2e329a4158a489",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +159,163 @@\n    render() {\n        const getOptions = (input: string, callback: (err: any, result: AutocompleteResult) => any) => {\n            setTimeout(function() {\n                callback(null, {"
  }
]