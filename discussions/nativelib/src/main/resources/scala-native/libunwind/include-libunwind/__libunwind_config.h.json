[
  {
    "id" : "460781cc-1842-4fa8-8a49-17d114b50e14",
    "prId" : 2097,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2097#pullrequestreview-563603458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "parentId" : null,
        "authorId" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "body" : "Is there a rule for clang-format to allow indented definitions that were existing before? Not a big deal if there is no such thing, but it better as easier to understand when it was structured",
        "createdAt" : "2021-01-06T19:43:17Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "tags" : [
        ]
      },
      {
        "id" : "5918369d-cbf2-4377-89e9-b06a329a3fd5",
        "parentId" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I know this can be done, will find the option.",
        "createdAt" : "2021-01-07T01:19:34Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "821cc63f-24fe-4feb-881d-900e66aa420a",
        "parentId" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Refer to https://clang.llvm.org/docs/ClangFormatStyleOptions.html\r\nSearch for `IndentPPDirectives `\r\nI sort of like the last option better than the second: `PPDIS_BeforeHash`\r\n\r\nWhat do you think?",
        "createdAt" : "2021-01-07T01:41:42Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "8833754a-8286-44ae-8f9a-52b2245b9e02",
        "parentId" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Gosh, after poking around on the Mac, most are just flush. I did see one file with the following `clapack.h` but it is not 4 spaces.\r\n```\r\n#include <stdint.h>\r\n#if __has_include(<os/availability.h>)\r\n# include <os/availability.h>\r\n#else // __has_include(<os/availability.h>)\r\n# undef API_AVAILABLE\r\n# define API_AVAILABLE(...) /* Nothing */\r\n#endif // __has_include(<os/availability.h>)\r\n```\r\nThis doesn't seem to common so I'm wondering if we should just go with the defaults.",
        "createdAt" : "2021-01-07T02:23:45Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "8fba1903-6b8e-412f-aa4a-8ad222b72725",
        "parentId" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "authorId" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "body" : "I think we can go with the defaults with this one. \r\n\r\nThe only problem is clang-format 6.0 does not support BeforeHash indent https://releases.llvm.org/6.0.0/tools/clang/docs/ClangFormatStyleOptions.html\r\n\r\n",
        "createdAt" : "2021-01-07T10:06:10Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "19a5939c-9a4f-4d42-a7b3-56f0d7513d13",
        "tags" : [
        ]
      },
      {
        "id" : "719da3d0-6a2f-428c-921f-74730abc1f78",
        "parentId" : "1fc69246-6d00-40f6-b56f-8b37da1696f7",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I think that is fine for now. It was late last night and I was looking at the latest.",
        "createdAt" : "2021-01-07T15:55:35Z",
        "updatedAt" : "2021-01-08T22:49:02Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "76ec935c824a9678a2b9b455eaf6718084e1dca1",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +29,33 @@#define _LIBUNWIND_TARGET_I386\n#define _LIBUNWIND_CONTEXT_SIZE 8\n#define _LIBUNWIND_CURSOR_SIZE 15\n#define _LIBUNWIND_HIGHEST_DWARF_REGISTER _LIBUNWIND_HIGHEST_DWARF_REGISTER_X86\n#elif defined(__x86_64__)"
  }
]