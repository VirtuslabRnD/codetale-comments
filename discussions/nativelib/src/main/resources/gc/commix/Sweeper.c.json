[
  {
    "id" : "7751961a-ca2e-4c31-8d82-9e0187ac2e78",
    "prId" : 1423,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1423#pullrequestreview-200310393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcbfffd6-b5ee-4d51-99f2-767bcc1845f8",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Is there any way to reduce boilerplate of stat recording via a few method-like macros? \r\n```\r\nval start_ns = Stats_Start(stats);\r\n...\r\nStats_Record(stats, event_sweep, start_ns);\r\n```\r\nWhere definitions of `Stats_Start` and `Stats_Record` do nothing (i.e. just return 0) if stat recording is off? ",
        "createdAt" : "2019-02-01T10:37:23Z",
        "updatedAt" : "2019-07-17T09:53:34Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "42804a56-bb3a-4e93-8b40-8bc0f85d52e6",
        "parentId" : "dcbfffd6-b5ee-4d51-99f2-767bcc1845f8",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Currently all the ifdefs really hurt the readability of the code. ",
        "createdAt" : "2019-02-01T10:38:05Z",
        "updatedAt" : "2019-07-17T09:53:34Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "d9b9dc76-c0f2-4aa5-a7d6-3c346ac52e80",
        "parentId" : "dcbfffd6-b5ee-4d51-99f2-767bcc1845f8",
        "authorId" : "c7f8a536-27a6-425a-976a-297266655d25",
        "body" : "I drastically reduced the number of ifdefs. However, there were many points with more complex logic than record start time then record event. For example, events in Sweep sharing timestamps. Therefore, I had to write finer grain macros instead.",
        "createdAt" : "2019-02-05T21:24:28Z",
        "updatedAt" : "2019-07-17T09:53:34Z",
        "lastEditedBy" : "c7f8a536-27a6-425a-976a-297266655d25",
        "tags" : [
        ]
      }
    ],
    "commit" : "9349177c2456e08c91598c5a158c63a30876a4e0",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +307,311 @@           freeCount, superblockSize);\n    fflush(stdout);\n#endif\n    return freeCount;\n}"
  }
]