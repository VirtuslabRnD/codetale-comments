[
  {
    "id" : "015e7e9c-e53b-4998-8827-339c750e1bff",
    "prId" : 1451,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1451#pullrequestreview-212278997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12833248-ab7d-4cdb-89b6-456953ed87a0",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "By making the instances of `RoundingMode` be `object`-s, Interflow now specializes the floatToString/doubleToString to the rounding mode. This means (up to) two copies of the method where rounding mode is statically known and both of the `acceptUpperBound` and `acceptLowerBound` are constant and folded away. In practice we only use conservative mode now, so it's exactly one copy. ",
        "createdAt" : "2019-03-08T13:24:59Z",
        "updatedAt" : "2019-03-08T14:38:13Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "a369c0debde819030368448492aa12fe67caa6c0",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +42,46 @@\nobject RyuRoundingMode {\n  object Conservative extends RyuRoundingMode {\n    def acceptUpperBound(even: Boolean): Boolean = false\n    def acceptLowerBound(even: Boolean): Boolean = false"
  }
]