[
  {
    "id" : "72c429a2-c021-4390-94af-479412d12f6e",
    "prId" : 1422,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1422#pullrequestreview-193607740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47c044b1-6a08-4123-95bf-5068f0494a15",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "A curious reader might observe that this API maps very closely to memory operations in [`sun.misc.Unsafe`](http://www.docjar.com/docs/api/sun/misc/Unsafe.html) (i.e., you can implement it with `sun.misc.Unsafe` and vise versa).",
        "createdAt" : "2019-01-17T12:52:55Z",
        "updatedAt" : "2019-01-18T11:53:25Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a868fde3ea4f25e28d060e9130528c68ffd96ac",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +122,126 @@\n  /** Intrinsified cast that reinterprets long as a raw pointer. */\n  def castLongToRawPtr(int: Long): RawPtr = intrinsic\n}"
  },
  {
    "id" : "135c5560-c2b5-4d65-9be3-d8d66b012652",
    "prId" : 203,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af620d58-6d2d-44bf-8f60-c6b7ccf2cde9",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "It's really cool that we have those built-in. LLVM ❤️ \n",
        "createdAt" : "2016-06-26T18:30:00Z",
        "updatedAt" : "2016-06-27T11:41:14Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc5ac537282a550ff3e73d467af15f492923f0dc",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +23,27 @@  def `llvm.smul.with.overflow.i64`(a: Long, b: Long): LongOverflow = extern\n  def `llvm.umul.with.overflow.i32`(a: Int, b: Int): IntOverflow    = extern\n  def `llvm.umul.with.overflow.i64`(a: Long, b: Long): LongOverflow = extern\n  def `llvm.sqrt.f32`(value: Float): Float                          = extern\n  def `llvm.sqrt.f64`(value: Double): Double                        = extern"
  }
]