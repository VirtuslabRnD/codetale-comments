[
  {
    "id" : "52ac3e9d-bd8a-4f32-88cd-3c7237304156",
    "prId" : 18611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18611#pullrequestreview-81110643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cee8d8d2-691c-4016-990c-7c45daddd803",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This still runs it for each benchmark in the class, instead of previously only once (I think)",
        "createdAt" : "2017-12-04T10:34:11Z",
        "updatedAt" : "2017-12-05T05:33:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ee544b0f-e03a-4af5-9b94-7165fc8c6513",
        "parentId" : "cee8d8d2-691c-4016-990c-7c45daddd803",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I think `setup_cache` will still only run once:\r\n\r\n>If the setup is especially expensive, the setup_cache method may be used instead, which only performs the setup calculation once and then caches the result to disk. It is run only once also for repeated benchmarks and profiling, unlike setup",
        "createdAt" : "2017-12-05T05:37:44Z",
        "updatedAt" : "2017-12-05T05:37:44Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "a2213283-e0f6-4f94-867b-16b1e339dd93",
        "parentId" : "cee8d8d2-691c-4016-990c-7c45daddd803",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yeah, the wording is not very clear. I interpreted it to not run between repetitions of the same benchmark, not for multiple benchmarks in the same class",
        "createdAt" : "2017-12-05T09:08:23Z",
        "updatedAt" : "2017-12-05T09:08:23Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81baf501a408857ba4e603e27c434e1350344df",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +74,78 @@                    tm.makeStringIndex(10000).take(\n                        np.random.randint(0, 10000, size=size)))}\n        return data\n\n    def setup(self, data, key):"
  }
]