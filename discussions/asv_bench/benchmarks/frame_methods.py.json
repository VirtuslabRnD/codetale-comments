[
  {
    "id" : "e8965a6d-1568-4364-b21b-72da31ad93e2",
    "prId" : 18536,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18536#pullrequestreview-79430150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5db0ca24-755b-46a3-b3f1-9c1c5e188c70",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Now you are at it, can you add a `iterrows` one as well?",
        "createdAt" : "2017-11-28T09:05:57Z",
        "updatedAt" : "2017-11-29T06:22:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12e4686f2925eb9f1168f2a8939a9d5562d7515e",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +102,106 @@    def time_itertuples(self):\n        for row in self.df2.itertuples():\n            pass\n\n    def time_iterrows(self):"
  },
  {
    "id" : "4610273e-79b8-4019-8878-8ead479455fe",
    "prId" : 18536,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18536#pullrequestreview-79804632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9deb175d-9a94-423e-b42a-ada582175cff",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "you can put a `# noqa` on this line to avoid linter warnings",
        "createdAt" : "2017-11-29T10:49:58Z",
        "updatedAt" : "2017-11-29T10:49:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12e4686f2925eb9f1168f2a8939a9d5562d7515e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +4,8 @@from pandas import (DataFrame, Series, MultiIndex, date_range, period_range,\n                    isnull, NaT)\nfrom .pandas_vb_common import setup\n\n"
  },
  {
    "id" : "64d1484e-afcf-46ee-8e1b-da596f5d1b16",
    "prId" : 22754,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22754#pullrequestreview-157939173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa104484-e7fc-4f50-ba67-19c8eac25654",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do the benchmarks show any difference? (e.g. from the prior impl)",
        "createdAt" : "2018-09-23T13:21:28Z",
        "updatedAt" : "2018-09-23T16:58:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b0dc58d8-b04a-48cf-8bee-27950f49213a",
        "parentId" : "fa104484-e7fc-4f50-ba67-19c8eac25654",
        "authorId" : "1a59074f-10aa-406c-8f33-e36e2f817797",
        "body" : "Yes, it's significantly faster now. Especially, if I create large dataframes with many columns and many duplicates.\r\n\r\nIf sorting only on one column the speed should be exactly the same.",
        "createdAt" : "2018-09-23T13:24:38Z",
        "updatedAt" : "2018-09-23T16:58:19Z",
        "lastEditedBy" : "1a59074f-10aa-406c-8f33-e36e2f817797",
        "tags" : [
        ]
      }
    ],
    "commit" : "63218fde8630f8ea474ef83191f010817f6e327d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +506,510 @@\n    def setup(self, keep):\n        self.df = DataFrame(np.random.randn(100000, 3),\n                            columns=list('ABC'))\n"
  }
]