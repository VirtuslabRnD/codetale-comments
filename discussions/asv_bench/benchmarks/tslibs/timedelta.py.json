[
  {
    "id" : "6bc963a4-c6a2-4f44-886b-50bfc98ce991",
    "prId" : 29292,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29292#pullrequestreview-309363065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75ad52aa-6319-478a-8bc6-eccc30a7b9f4",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Orthogonal but maybe easy to change here if you want - using `setup_cache` here seems overkill. Mostly used for longer running setup calls, which I can't imagine this is",
        "createdAt" : "2019-10-30T16:21:09Z",
        "updatedAt" : "2019-10-30T22:30:37Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "4b12ff63-9941-432c-80aa-4dee6cc94d7b",
        "parentId" : "75ad52aa-6319-478a-8bc6-eccc30a7b9f4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "generally agreed, but for now prefer to keep this move-only.\r\n\r\nLonger-term I hope to get asv to use something like setup_class so that it only gets run once instead of many times",
        "createdAt" : "2019-10-30T16:52:12Z",
        "updatedAt" : "2019-10-30T22:30:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "af22d5941d85abe7525aacf598eab48d8a663614",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\nclass TimedeltaProperties:\n    def setup_cache(self):\n        td = Timedelta(days=365, minutes=35, seconds=25, milliseconds=35)\n        return td"
  },
  {
    "id" : "d8744aa1-1f67-44ee-8711-f9fb4c05c5e7",
    "prId" : 31070,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31070#pullrequestreview-347120451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cfc78c8-4575-4245-a3eb-009d4b7cf19b",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "Since we are here, let's add a benchmark for making Timedelta out of Timedelta, and I think we should also tweak existing tests. Currently, we benchmark both our method and `np.timedelta64` and `datetime.timedelta` at the same time. We should move the initialization into `setup`, in my opinion. It's a bit nitpicky, of course, since both `np.timedelta64` and `datetime.timedelta` are unlikely to change speed in the future, but still.",
        "createdAt" : "2020-01-23T08:22:38Z",
        "updatedAt" : "2020-01-24T06:07:44Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "79b898fabc31ab5b4645b6a6990629c80a3d57b5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +14,18 @@        self.nptimedelta64 = np.timedelta64(3600)\n        self.dttimedelta = datetime.timedelta(seconds=3600)\n        self.td = Timedelta(3600, unit=\"s\")\n\n    def time_from_int(self):"
  }
]