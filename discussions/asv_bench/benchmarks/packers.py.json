[
  {
    "id" : "906dc89d-bd11-4f32-964a-dbe3dd4ee01e",
    "prId" : 10928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b2ed363-a55d-47f5-abe3-a52772d99262",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would put all of these in a base class, maybe `Base` and inherit all tests from it (rather than `object`). You might want several levels of this for various ones (e.g. `IOBase`) or whatever. Just to remove some boilerplate.\n\nYou could e.g. in `IOBase` have `teardown` always do a `.remove`\n",
        "createdAt" : "2015-08-29T13:17:20Z",
        "updatedAt" : "2015-08-29T20:05:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "517a2f9d-ae5c-40c1-ad7c-b66e975c9a25",
        "parentId" : "9b2ed363-a55d-47f5-abe3-a52772d99262",
        "authorId" : "d27357e5-3013-4027-a032-3a633c4de0f3",
        "body" : "My expectation is that any of the benchmark modules will have a handful of classes post-cleanup. `asv` doesn't require different classes per benchmark, so we can put `time_foo()` and `time_bar()` on the same class. Also, these changes are all auto-generated.\n",
        "createdAt" : "2015-08-29T19:32:31Z",
        "updatedAt" : "2015-08-29T20:05:11Z",
        "lastEditedBy" : "d27357e5-3013-4027-a032-3a633c4de0f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "eac3fd814697ba1b1897f942225c14ad38daabaf",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +343,347 @@    def remove(self, f):\n        try:\n            os.remove(self.f)\n        except:\n            pass"
  }
]