[
  {
    "id" : "31a2ba3a-f292-4279-8dc8-eba7fbfbd7ff",
    "prId" : 1039,
    "prUrl" : "https://github.com/akka/alpakka/pull/1039#pullrequestreview-136767270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57c508ff-9bca-4cce-a106-c829538f1821",
        "parentId" : null,
        "authorId" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "body" : "lowercase `settings.scala`?",
        "createdAt" : "2018-07-11T10:24:33Z",
        "updatedAt" : "2018-07-11T10:50:45Z",
        "lastEditedBy" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "tags" : [
        ]
      },
      {
        "id" : "8fad7ceb-a95d-4f6f-9084-2b0c6f8c896a",
        "parentId" : "57c508ff-9bca-4cce-a106-c829538f1821",
        "authorId" : "8173970f-6a3f-4891-8394-179e8251af2d",
        "body" : "Yes, which would mean that there are multiple logical units of compilation - settings classes. This is from https://docs.scala-lang.org/style/files.html\r\n\r\nUsually a connector will have `settings.scala` and `model.scala`. The latter is for read/write messages.",
        "createdAt" : "2018-07-12T12:58:16Z",
        "updatedAt" : "2018-07-12T12:58:17Z",
        "lastEditedBy" : "8173970f-6a3f-4891-8394-179e8251af2d",
        "tags" : [
        ]
      },
      {
        "id" : "52ec6b38-b328-478f-b4e8-b2e60a107626",
        "parentId" : "57c508ff-9bca-4cce-a106-c829538f1821",
        "authorId" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "body" : "ok, that's a style I don't use, because I don't like files with many unrelated classes. Often there is one main class, and a few related that can be grouped together and then the file should have the name of the main class.\r\n\r\nbut I guess it's a matter of taste",
        "createdAt" : "2018-07-12T18:08:48Z",
        "updatedAt" : "2018-07-12T18:08:48Z",
        "lastEditedBy" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f556945a7e9f3ff22d3ebc38b56c8cc255f2a5ce",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +36,40 @@### Settings\n\n> Reference connector [settings classes](reference/src/main/scala/akka/stream/alpakka/reference/settings.scala)\n\nMost technologies will have a couple of configuration settings that will be needed for several Sinks, Flows, or Sinks. "
  },
  {
    "id" : "0967bf7f-b747-4932-9cb4-c7d03ccd7e30",
    "prId" : 1039,
    "prUrl" : "https://github.com/akka/alpakka/pull/1039#pullrequestreview-136178060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6779596-ed8b-418b-a433-f63784c70ab3",
        "parentId" : null,
        "authorId" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "body" : "perhaps even \"Internal implementation in separate package\"",
        "createdAt" : "2018-07-11T10:26:06Z",
        "updatedAt" : "2018-07-11T10:50:45Z",
        "lastEditedBy" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f556945a7e9f3ff22d3ebc38b56c8cc255f2a5ce",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +70,74 @@| `akka.stream.alpakka.connector.scaladsl` | Scala-only part of the API, normally factories for Sources, Flows and Sinks\n| `akka.stream.alpakka.connector`          | Shared API, eg. settings classes\n| `akka.stream.alpakka.connector.impl`     | Implementation in separate package\n\n### Graph stage checklist"
  },
  {
    "id" : "3e862791-e78e-4216-91ad-701cf1f852b7",
    "prId" : 1039,
    "prUrl" : "https://github.com/akka/alpakka/pull/1039#pullrequestreview-136178060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f69276ce-a569-43c3-9b4e-c578183100f7",
        "parentId" : null,
        "authorId" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "body" : "typo refernece",
        "createdAt" : "2018-07-11T10:27:01Z",
        "updatedAt" : "2018-07-11T10:50:45Z",
        "lastEditedBy" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f556945a7e9f3ff22d3ebc38b56c8cc255f2a5ce",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +109,113 @@## Documentation\n\n> Reference connector [paradox documentation](docs/src/main/paradox/refernece.md)\n\nUsing [Paradox](https://github.com/lightbend/paradox) syntax (which is very close to markdown), create or complement"
  },
  {
    "id" : "1b30917e-1698-4ecd-9d97-a9cc47bd282b",
    "prId" : 768,
    "prUrl" : "https://github.com/akka/alpakka/pull/768#pullrequestreview-95577463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1d5beb7-b5c8-4274-ab4d-843646f95f2f",
        "parentId" : null,
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "fail using `failStage` instead of throwing exceptions?\r\n\r\ncc @patriknw ",
        "createdAt" : "2018-02-09T22:07:08Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "63b3a9d796f4cd61907b4085884a9fdfb35f465a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@* Open connections in `preStart`\n* Release resources in `postStop`\n* Fail early on configuration errors\n* Make sure the code is thread-safe; if in doubt, please ask!\n* No Blocking At Any Time -- in other words, avoid blocking whenever possible and replace it with asynchronous "
  },
  {
    "id" : "d7b42a48-8b99-43fe-8ff1-1616f74973b4",
    "prId" : 768,
    "prUrl" : "https://github.com/akka/alpakka/pull/768#pullrequestreview-95648668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27113768-de5b-4ed1-b14c-d5e6e554cae3",
        "parentId" : null,
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "also mention collection converters? Suggest using List in Java",
        "createdAt" : "2018-02-09T22:10:06Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      },
      {
        "id" : "cdab9eda-683a-4c6c-b29f-72a2d75024eb",
        "parentId" : "27113768-de5b-4ed1-b14c-d5e6e554cae3",
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Anything more than it says in \"Let the Java API use Java standard types (`java.util.Optional`, `java.util.List`, ...) and convert using `JavaConverters` where needed\" ?",
        "createdAt" : "2018-02-11T08:54:34Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "c38a7797-e563-4a74-af85-78f29b16e63d",
        "parentId" : "27113768-de5b-4ed1-b14c-d5e6e554cae3",
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "Sounds good",
        "createdAt" : "2018-02-11T09:26:12Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      },
      {
        "id" : "96265686-81ad-4a8f-b8ec-154884337ce1",
        "parentId" : "27113768-de5b-4ed1-b14c-d5e6e554cae3",
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "Good as is then ",
        "createdAt" : "2018-02-11T09:26:24Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "63b3a9d796f4cd61907b4085884a9fdfb35f465a",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@`JavaConverters` where needed\n* Use the `akka.japi.Pair` class to return tuples\n* Use `scala.compat.java8.FutureConverters` to translate Futures to `CompletionStage`s\n\n### Settings"
  },
  {
    "id" : "2c6413a5-51b5-4c0b-959b-e076ea92daf3",
    "prId" : 768,
    "prUrl" : "https://github.com/akka/alpakka/pull/768#pullrequestreview-95577463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c58e964-b27c-47c9-bcf1-e0a08fd25f80",
        "parentId" : null,
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "good",
        "createdAt" : "2018-02-09T22:10:52Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "63b3a9d796f4cd61907b4085884a9fdfb35f465a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@Depending on the technology you integrate with Akka Streams and Alpakka you'll create Sources, Flows and Sinks.\nRegardless on how they are implemented make sure that you create the relevant Sources, Sinks and Flows APIs so they are\nsimple and easy to use.\n\n### Flows"
  },
  {
    "id" : "74c77e67-024b-4fe2-9d7c-2d6987d549cf",
    "prId" : 768,
    "prUrl" : "https://github.com/akka/alpakka/pull/768#pullrequestreview-95577463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d566188-f28f-4d3c-ae58-55c35ff25df4",
        "parentId" : null,
        "authorId" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "body" : "great table",
        "createdAt" : "2018-02-09T22:11:33Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "66dc8fce-0bb7-4fe0-8003-35c38623ee9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "63b3a9d796f4cd61907b4085884a9fdfb35f465a",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@| `akka.stream.alpakka.connector.scaladsl` | Scala-only part of the API, normally factories for Sources, Flows and Sinks\n| `akka.stream.alpakka.connector`          | Shared API, eg. settings classes, implementation if thorowly made private\n| `akka.stream.alpakka.connector.impl`     | Optional, implementation in separate package\n\n### Graph stage checklist"
  },
  {
    "id" : "d5ca8ac7-3d75-472b-b662-6add357a6634",
    "prId" : 768,
    "prUrl" : "https://github.com/akka/alpakka/pull/768#pullrequestreview-95594473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edf6d5b5-0ec6-4709-8809-1863e70fbfcd",
        "parentId" : null,
        "authorId" : "31100a65-2558-4cdf-b242-3f4f19af02a4",
        "body" : "In my view, before suggesting to use docker, we should encourage to use internal testing API like MiniSolrCloudCluster for Solr, ElasticsearchClusterRunner for Elasticsearch, if it is possible.",
        "createdAt" : "2018-02-09T23:26:53Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "31100a65-2558-4cdf-b242-3f4f19af02a4",
        "tags" : [
        ]
      },
      {
        "id" : "afb937cf-cfdf-4363-87b1-95bdfe742cf3",
        "parentId" : "edf6d5b5-0ec6-4709-8809-1863e70fbfcd",
        "authorId" : "8779d4b6-da6a-4241-8d85-b546e1f6666c",
        "body" : "Using Docker make the testing environment more isolated than if we configure stuff just for the test. It allows us to limit, memory, disk or whatever we want to limit. And it's trivial to update regardless of the connector version or dependencies.\r\n\r\nAlso, I'd rather pulling a container for testing than adding an extra dependency.",
        "createdAt" : "2018-02-09T23:35:39Z",
        "updatedAt" : "2018-02-11T09:59:46Z",
        "lastEditedBy" : "8779d4b6-da6a-4241-8d85-b546e1f6666c",
        "tags" : [
        ]
      }
    ],
    "commit" : "63b3a9d796f4cd61907b4085884a9fdfb35f465a",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@Write tests for all public methods and possible settings.\n\nUse Docker containers for any testing needed by your application. The container's configuration can be added to the\n`docker-compose.yml` file.\nPlease ensure that you limit the amount of resources used by the containers."
  }
]