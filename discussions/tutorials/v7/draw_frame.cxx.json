[
  {
    "id" : "f7146af9-d0f8-4851-aa85-ead4268cc648",
    "prId" : 5044,
    "prUrl" : "https://github.com/root-project/root/pull/5044#pullrequestreview-362489512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d64e2801-4b06-4bf6-8842-6cb410c94d0f",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I think `_name` shouldn't be necessary - we should be able to parse colors by name or `#rrggbb` or `#rrggbbaa` or #rgb` or `#rgba`. That's independent of this PR of course.",
        "createdAt" : "2020-02-21T08:58:13Z",
        "updatedAt" : "2020-02-21T08:58:13Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "cebe4e45-6bb9-4e7b-8398-bde19a97ed9e",
        "parentId" : "d64e2801-4b06-4bf6-8842-6cb410c94d0f",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Yes, `_name` can be avoided in the future. One have to provide special text parsing for the RColor, which can distinguish if string is rgb value or color name or maybe index from palette.",
        "createdAt" : "2020-02-21T09:14:23Z",
        "updatedAt" : "2020-02-21T09:14:23Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e8b85dde470dc5b2d3c367dc4350b7d514ea477",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@   draw2->AttrLine().SetColor(RColor::kBlue).SetWidth(12);\n\n   style->ParseString(\"frame { margin_left: 0.3; margin_right: 0.3; x_line_color_name: blue; y_line_color_name: green; }\");\n\n   canvas->UseStyle(style);"
  },
  {
    "id" : "f09b15c9-6241-43aa-a9ed-fdd90ef321cb",
    "prId" : 5044,
    "prUrl" : "https://github.com/root-project/root/pull/5044#pullrequestreview-362536714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22287057-8060-41c2-b75c-56da751769cd",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "That's a bit surprising - I believe it's the pad's job to ensure that the frame is first.",
        "createdAt" : "2020-02-21T08:59:59Z",
        "updatedAt" : "2020-02-21T09:00:00Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "c02eef55-8b27-448e-a5ff-954d1284bc38",
        "parentId" : "22287057-8060-41c2-b75c-56da751769cd",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "In general - RFrame is just one more RDrawable in the list of primitives. And if one wants to place RText behind RFrame, such text should be before frame in list of primitives. ",
        "createdAt" : "2020-02-21T09:12:17Z",
        "updatedAt" : "2020-02-21T09:12:17Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "c86a1561-da1f-44a5-9f1f-0d1619b37891",
        "parentId" : "22287057-8060-41c2-b75c-56da751769cd",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "The tutorial suggests that one needs to \"create the frame before drawing the histogram\". Why? Isn't that done automatically? What happens if the frame isn't created explicitly?\r\n\r\nMy comment is really about the lines 68, 69 in the tutorial.",
        "createdAt" : "2020-02-21T10:29:18Z",
        "updatedAt" : "2020-02-21T10:29:18Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "c404f2b1-34b7-40fd-8ca7-8403884866f8",
        "parentId" : "22287057-8060-41c2-b75c-56da751769cd",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "RFrame now is only container for different attributes - all optional.\r\nIf RFrame not there - default values will be used by client.",
        "createdAt" : "2020-02-21T10:31:10Z",
        "updatedAt" : "2020-02-21T10:31:10Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "88797ade-f80a-4b7a-82a6-7c78dfd62fa8",
        "parentId" : "22287057-8060-41c2-b75c-56da751769cd",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "That's a very opaque interface, not obvious at all. See how I was unable to guess that. I also don't see why I cannot have e.g. `RLine` attributes without a `RFrame`.",
        "createdAt" : "2020-02-21T10:33:08Z",
        "updatedAt" : "2020-02-21T10:33:08Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e8b85dde470dc5b2d3c367dc4350b7d514ea477",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@   draw1->AttrLine().SetColor(RColor::kRed);\n\n   // create frame before drawing histograms\n   auto frame2 = subpads[1][0]->GetOrCreateFrame();\n"
  },
  {
    "id" : "6ae1ed2d-f5bb-4d2c-9fde-97327b916ee8",
    "prId" : 5044,
    "prUrl" : "https://github.com/root-project/root/pull/5044#pullrequestreview-362535300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e65971c-8227-4202-a1e9-42e246b5e1eb",
        "parentId" : null,
        "authorId" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "body" : "After an offline discussion with Sergey I understand that AttrX and AttrY are the attributes of the X and Y axis. It is not clear it is about \"Axis\".. I would rather call them AttrXaxis and AttrYaxis",
        "createdAt" : "2020-02-21T09:03:22Z",
        "updatedAt" : "2020-02-21T09:03:22Z",
        "lastEditedBy" : "7b94eadb-dc83-4d04-8ff7-04ac4f7a9da7",
        "tags" : [
        ]
      },
      {
        "id" : "d3a8b198-855e-420f-89f2-b0d897f1e4ac",
        "parentId" : "6e65971c-8227-4202-a1e9-42e246b5e1eb",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "What's a \"xaxis\"? ;-) We call this \"XAxis\" in ROOT7. I think `AttrX` is good enough:\r\n- at least I guessed it right ;-)\r\n- we'll get used to it.\r\n",
        "createdAt" : "2020-02-21T10:30:46Z",
        "updatedAt" : "2020-02-21T10:30:47Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e8b85dde470dc5b2d3c367dc4350b7d514ea477",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@   frame1->Margins().SetRight(0.2_normal);\n\n   frame1->AttrX().AttrLine().SetColor(RColor::kGreen);\n   frame1->AttrY().AttrLine().SetColor(RColor::kBlue);\n"
  }
]