[
  {
    "id" : "8adf69f5-2c11-4597-b1ec-88f01a9d16f1",
    "prId" : 6107,
    "prUrl" : "https://github.com/root-project/root/pull/6107#pullrequestreview-459154147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1554b2e7-9f59-4522-a435-87855ddfcf9f",
        "parentId" : null,
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "I would combine the two `Declare` calls together and add a comment like \"This code gets declared to the ROOT C++ interpreter\" since this is an educational example.",
        "createdAt" : "2020-07-31T12:52:59Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      },
      {
        "id" : "ccb54f28-faf4-4c68-be0d-9a99f1279ebf",
        "parentId" : "1554b2e7-9f59-4522-a435-87855ddfcf9f",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "You mean this declare and second one for the compuation of the top mass? I like that the impl is close the the location where it's used!",
        "createdAt" : "2020-07-31T13:00:05Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "480524fd-50ec-4e37-9a6d-343f314b6e82",
        "parentId" : "1554b2e7-9f59-4522-a435-87855ddfcf9f",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "But I fully agree that I could make more clear what happens in a `Declare` call!",
        "createdAt" : "2020-07-31T13:00:27Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7935874cc688cc9d6d805e9983215eaf04b86de",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\n# Just-in-time compile custom helper function performing complex computations\nROOT.gInterpreter.Declare(\"\"\"\nusing VecF_t = const ROOT::RVec<float>&;\nusing VecI_t = const ROOT::RVec<int>&;"
  },
  {
    "id" : "bed55544-2de3-4f0a-8ee4-c5eaf96306c4",
    "prId" : 6107,
    "prUrl" : "https://github.com/root-project/root/pull/6107#pullrequestreview-459843494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d608a2f-6038-46f5-bb42-5a87259bc869",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Can you upload the image to our webserver, and link to it? If not, the doxygen job (which takes 8h already) has to rerun the whole thing every night. Same for macro_output ...",
        "createdAt" : "2020-07-31T13:17:39Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "7d675134-582e-4254-bdd0-54e7b4a2db6e",
        "parentId" : "0d608a2f-6038-46f5-bb42-5a87259bc869",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "I think we want to have it computed to see that everything is still in place, no?",
        "createdAt" : "2020-08-03T08:32:51Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7935874cc688cc9d6d805e9983215eaf04b86de",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.\n##\n## \\macro_image\n## \\macro_code\n## \\macro_output"
  },
  {
    "id" : "010f8da4-0955-4572-b7b8-2b2f14eceb54",
    "prId" : 6107,
    "prUrl" : "https://github.com/root-project/root/pull/6107#pullrequestreview-459852592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93670255-1310-4584-9d8c-0ce4b036a0bd",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Does this break if users put `--lumi 2.`?",
        "createdAt" : "2020-07-31T13:24:00Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "0c7437fc-bb46-40c0-8a4a-5fdb8cf98019",
        "parentId" : "93670255-1310-4584-9d8c-0ce4b036a0bd",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Doesn't break but gives a wrong scaling of data vs MC!",
        "createdAt" : "2020-08-03T08:46:33Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7935874cc688cc9d6d805e9983215eaf04b86de",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@        # Scale down the datasets if requested\n        if args.full_dataset and lumi_scale < 1.0:\n            df[sample] = df[sample].Range(int(num_events * lumi_scale))\n\n# Select events for the analysis and make histograms of the top mass"
  },
  {
    "id" : "ecf7f1df-f2d1-4bce-9c9b-d7c3377ca6cd",
    "prId" : 6107,
    "prUrl" : "https://github.com/root-project/root/pull/6107#pullrequestreview-459825996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "497450aa-ef23-4730-86dd-93ec9c9117b2",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Is it safe to apply electron times muon SF? Is the \"wrong one\" == 1. if there's only one lepton?",
        "createdAt" : "2020-07-31T13:55:08Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "ad399b02-0c35-4b15-8acc-b23e97f4b5a6",
        "parentId" : "497450aa-ef23-4730-86dd-93ec9c9117b2",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Seems to be fine! And it's exactly what happens in the reference impl from the open data guys ;)",
        "createdAt" : "2020-08-03T08:05:52Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7935874cc688cc9d6d805e9983215eaf04b86de",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +141,145 @@        if \"single\" in s: stop_norm = \"mcWeight / abs(mcWeight)\"\n        else: stop_norm = \"mcWeight\"\n        df[s] = df[s].Define(\"weight\", \"scaleFactor_ELE * scaleFactor_MUON * scaleFactor_LepTRIGGER * scaleFactor_PILEUP * scaleFactor_BTAG * {} * {} / {} * {}\".format(stop_norm, xsecs[s], sumws[s], lumi))\n\n# Reconstruct the top mass from the lepton, the missing transverse energy and the b-jet"
  },
  {
    "id" : "9c6c76d4-bd6f-4550-b768-6d497b941917",
    "prId" : 6107,
    "prUrl" : "https://github.com/root-project/root/pull/6107#pullrequestreview-459828438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4d920c0-58bc-46af-91f0-bd173b8feb9d",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "`ComputeVisibleTopMass`?\r\n",
        "createdAt" : "2020-07-31T15:53:50Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "a5013f39-e276-4316-a56c-ad1ebf9f45f7",
        "parentId" : "c4d920c0-58bc-46af-91f0-bd173b8feb9d",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "It's not the visible top mass! We use the MET to approximate the neutrino, which gives the full top mass. It's a little bit cheated because we miss the z component of the neutrino, but well ...",
        "createdAt" : "2020-08-03T08:09:56Z",
        "updatedAt" : "2020-08-03T14:55:45Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7935874cc688cc9d6d805e9983215eaf04b86de",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@# Just-in-time compile the function to compute the top mass from the constituents\nROOT.gInterpreter.Declare(\"\"\"\nfloat ComputeTopMass(float lep_pt, float lep_eta, float lep_phi, float lep_e, float jet_pt, float jet_eta, float jet_phi, float jet_e, float met_et, float met_phi)\n{\n    const ROOT::Math::PtEtaPhiEVector lep(lep_pt / 1000.0, lep_eta, lep_phi, lep_e / 1000.0);"
  }
]