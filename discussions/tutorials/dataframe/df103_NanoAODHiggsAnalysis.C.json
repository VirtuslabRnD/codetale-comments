[
  {
    "id" : "165566e8-2eca-46c7-95d3-f3e665516b2d",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b2badaf-14e6-4893-91e4-9cb970ed5d4a",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "ditto",
        "createdAt" : "2018-10-30T09:10:13Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@using rvec_f = const RVec<float> &;\nusing rvec_i = const RVec<int> &;\n\n// Select interesting events with four muons\nRNode selection_4mu(RNode df)"
  },
  {
    "id" : "d0d0f16d-79a0-4fba-892b-a308250e859f",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c38ef2df-a349-4bbb-a8de-674b7d91be3a",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Why don't you add a tiny explanation of the impact parameter?",
        "createdAt" : "2018-10-30T09:11:53Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@   auto df_iso = df_ge4m.Filter(\"All(abs(Muon_pfRelIso04_all)<0.40)\", \"Require good isolation\");\n   auto df_kin = df_iso.Filter(\"All(Muon_pt>5) && All(abs(Muon_eta)<2.4)\", \"Good muon kinematics\");\n   auto df_ip3d = df_kin.Define(\"Muon_ip3d\", \"sqrt(Muon_dxy*Muon_dxy + Muon_dz*Muon_dz)\");\n   auto df_sip3d = df_ip3d.Define(\"Muon_sip3d\", \"Muon_ip3d/sqrt(Muon_dxyErr*Muon_dxyErr + Muon_dzErr*Muon_dzErr)\");\n   auto df_pv = df_sip3d.Filter(\"All(Muon_sip3d<4) && All(abs(Muon_dxy)<0.5) && All(abs(Muon_dz)<1.0)\","
  },
  {
    "id" : "c9edbed8-788c-438c-ad07-513191e5ad1b",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e591973e-1673-460f-abf3-1c40290d7301",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Can we maybe reserve the inner collections?",
        "createdAt" : "2018-10-30T09:15:57Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +123,127 @@RVec<RVec<size_t>> reco_zz_to_4l(rvec_f pt, rvec_f eta, rvec_f phi, rvec_f mass, rvec_i charge)\n{\n   RVec<RVec<size_t>> idx(2);\n   idx[0].reserve(2); idx[1].reserve(2);\n"
  },
  {
    "id" : "18feedee-6485-4ed9-9c7f-11a2617422f0",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "029e9c45-13f3-40df-b3d3-eab2debe42cc",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Food for thought: we perhaps need something in vecops to avoid this boiler plate",
        "createdAt" : "2018-10-30T09:18:25Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +138,142 @@         p1.SetPtEtaPhiM(pt[i1], eta[i1], phi[i1], mass[i1]);\n         p2.SetPtEtaPhiM(pt[i2], eta[i2], phi[i2], mass[i2]);\n         const auto this_mass = (p1 + p2).M();\n         if (std::abs(z_mass - this_mass) < std::abs(z_mass - best_mass)) {\n            best_mass = this_mass;"
  },
  {
    "id" : "34e20b5e-616b-4a39-b460-45debba2566b",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96aaa7dc-d555-4da5-a9ea-6e3fe29a51e6",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "reserve...",
        "createdAt" : "2018-10-30T09:18:49Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +163,167 @@RVec<float> compute_z_masses_4l(const RVec<RVec<size_t>> &idx, rvec_f pt, rvec_f eta, rvec_f phi, rvec_f mass)\n{\n   RVec<float> z_masses(2);\n   for (size_t i = 0; i < 2; i++) {\n      TLorentzVector p1, p2;"
  },
  {
    "id" : "a26c835b-d4f3-4b0b-8387-d057b07545a1",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e1eff5c-c763-4e23-9ac8-3925c556ff30",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "isn't this a repetition?",
        "createdAt" : "2018-10-30T09:19:06Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +171,175 @@      z_masses[i] = (p1 + p2).M();\n   }\n   const auto z_mass = 91.2;\n   if (std::abs(z_masses[0] - z_mass) < std::abs(z_masses[1] - z_mass)) {\n      return z_masses;"
  },
  {
    "id" : "5225cdaa-ecdb-4f70-887e-08064901c794",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bcc8095-60ca-4659-bab6-2fea27beed6d",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Perhaps we need a professor, but maybe is it safe to assume that the on shell is always much more massive than the offshell?",
        "createdAt" : "2018-10-30T09:22:22Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +172,176 @@   }\n   const auto z_mass = 91.2;\n   if (std::abs(z_masses[0] - z_mass) < std::abs(z_masses[1] - z_mass)) {\n      return z_masses;\n   } else {"
  },
  {
    "id" : "2f32164e-effb-475e-a588-f007ce8946eb",
    "prId" : 2813,
    "prUrl" : "https://github.com/root-project/root/pull/2813#pullrequestreview-169667863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a237e1b2-dc32-4d0d-9c01-a059d8acd997",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "We could template a new operation which is \"IsInInterval\" which covers all the combinations of collections and scalars and < and <=, all relying on exisitng logical vecops.",
        "createdAt" : "2018-10-30T09:31:43Z",
        "updatedAt" : "2018-10-30T16:25:47Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81555c1b3f81b4238fe154d2c52964b9ad89793",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +195,199 @@RNode filter_z_candidates(RNode df)\n{\n   auto df_z1_cut = df.Filter(\"Z_mass[0] > 40 && Z_mass[0] < 120\", \"Mass of first Z candidate in [40, 120]\");\n   auto df_z2_cut = df_z1_cut.Filter(\"Z_mass[1] > 12 && Z_mass[1] < 120\", \"Mass of second Z candidate in [12, 120]\");\n   return df_z2_cut;"
  }
]