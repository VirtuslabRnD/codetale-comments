[
  {
    "id" : "60520cdd-8ca4-4b0e-be65-ace4db79ce7a",
    "prId" : 3434,
    "prUrl" : "https://github.com/root-project/root/pull/3434#pullrequestreview-216152243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f1ba569-3795-4c8d-bf2a-c3cffd6c4e44",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "What is the reason to re-add this duplication? Is this not working properly in Py3? @dpiparo ",
        "createdAt" : "2019-03-19T12:30:04Z",
        "updatedAt" : "2019-03-21T13:26:56Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "5a4bd843-53df-4066-abc4-bd262d3da4f9",
        "parentId" : "0f1ba569-3795-4c8d-bf2a-c3cffd6c4e44",
        "authorId" : "c130f90f-ce87-4bc5-a2bd-7b1b93d94515",
        "body" : "There is no problem running the tutorials with python 3 from the command line.\r\n\r\nThe issue has to do with scoping of variables when the tutorial is run from within the doxygen filter. The global scope is then the makeimage.py script and not the tutorial. So variables declared as \"global\" in the tutorial are no longer global when run inside the makeimage wrapper, and therefore not accessible in a local scope (like inside a function definition).\r\n\r\nIn this case the \"RDataFrame = ROOT.ROOT.RDataFrame\" earlier in the file is not visible inside the scope of fill_tree().\r\n",
        "createdAt" : "2019-03-19T13:28:49Z",
        "updatedAt" : "2019-03-21T13:26:56Z",
        "lastEditedBy" : "c130f90f-ce87-4bc5-a2bd-7b1b93d94515",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd4b1d635a097c1022e0852e9f63dce220453b58",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +17,21 @@# stand-alone.\ndef fill_tree(treeName, fileName):\n    d = ROOT.ROOT.RDataFrame(25000)\n    d.Define(\"px\", \"gRandom->Gaus()\")\\\n     .Define(\"py\", \"gRandom->Gaus()\")\\"
  }
]