[
  {
    "id" : "104beda3-9fea-4845-a191-37f3d6c3b859",
    "prId" : 27161,
    "prUrl" : "https://github.com/nodejs/node/pull/27161#pullrequestreview-226374822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "parentId" : null,
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "This can be removed also, I believe.",
        "createdAt" : "2019-04-12T08:43:56Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "70086320-153e-45f7-9b84-e56761512d08",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "I'd rather not make this semver-major so we can get this into 12",
        "createdAt" : "2019-04-13T14:55:31Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "55316bc1-1ff8-4a7a-800f-654059116267",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "Why would we make this semver-major? This is just a configure-time switch. The actual format of the file is not even anywhere near stable.",
        "createdAt" : "2019-04-13T15:31:36Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "2e6bb915-502d-466f-80f7-7bc76d8f0d10",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Build time switches are part of the support \"contact\" in the context of downstream channels. i.e. _if_ someone was using it, removing will break their build.",
        "createdAt" : "2019-04-13T15:46:28Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "0ce6c111-b70e-4052-9c71-07376a45c9f0",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "But how would they use this switch? The original script to produce file does not exist now so if the build is using it, it's already broken, and they have to make adjustment anyway (and if they don't change the command to use whatever we use now, the file generated is not likely to compile). The same goes to other file moves in the directory and it seems unrealistic to make that part of the contract.",
        "createdAt" : "2019-04-13T16:24:02Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "bbea234a-05d4-4407-864c-a19b4640d5dd",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Well it doesn't do anything, and `make with-code-cache` does nothing so running:\r\n```console\r\n$ ./configure\r\nconfigure completed successfully\r\n$ make with-code-cache\r\n\"'with-code-cache' target is a noop\r\n$ ./configure --code-cache-path=dlfguhzdlkfjghd,jbnvsghsaiuthg\r\nconfigure completed successfully\r\n$ make\r\n...\r\n```\r\nWill just work 🤷‍♂️ ",
        "createdAt" : "2019-04-13T16:42:42Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "cb6f0b68-aa87-4a33-819f-b7b25ce812c3",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "> $ ./configure --code-cache-path=dlfguhzdlkfjghd,jbnvsghsaiuthg\r\n> configure completed successfully\r\n\r\nBut where would `dlfguhzdlkfjghd,jbnvsghsaiuthg` come from? They would have to change their command to generate it now already.",
        "createdAt" : "2019-04-13T16:45:26Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "23bff3c1-283a-46f4-9ec7-ba16c3026063",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "It doesn't really matter, the value is never used by us. If before they had `out/Release/obj/gen/node_code_cache.cc` hardcoded or any other value for `$CODE_CACHE_FILE` in they scripts the build should not break.\r\n\r\nIt will only break is they actually check that the file is there\r\nIf they generate it themselves somehow else, they will get UB.",
        "createdAt" : "2019-04-13T17:09:59Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "809095bc-6ad1-4934-98ae-fdf6b78d7742",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "I'm not super attached to this, I just don't want create unexpected breaks. We could instead do some communicating with the delivery channels...",
        "createdAt" : "2019-04-13T17:10:06Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "84f873d5-913a-4a08-8320-515f2f2ce601",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "The thing is the only valid generator has been tools/generate_code_cache.js, if they used the script in their build, their build breaks since the script no longer exists; If they use something else, it also breaks because the generated format is now changed with the previous refactoring patch. So I don’t see the point keeping this switch if the build relying on this breaks and has to be fixed either way.\r\n\r\n> We could instead do some communicating with the delivery channels...\r\n\r\nI agree, but before that happens, I don’t think it’s a good idea to be too careful and create unnecessary maintaince burden. If this turns out to be an issue, someone will open an issue, but from my experience managing a fork in my previous job and talking to other people doing similar work, unless the patch is from people who knows what’s doing on downstream, they always prefer making adjustments for upstream changes instead of having upstream adapt to them because the upstream tend to guess wrong - a dummy target is not really a useful to help, if one previously uses this, they would want to know and remove dead code now instead of keeping some invalid commands around in your script.",
        "createdAt" : "2019-04-13T23:14:22Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "31428f20-fb05-4fc0-a8f2-1e004e3cc926",
        "parentId" : "53940bbf-d9cb-46a3-bd32-4b6b85592628",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "To be clear, I am not requesting to change this noop in this patch - it’s perfectly fine to leave it as noop if of makes you feel comfortable. I am just not convinced that changes like this should be semver major or this is part of our support contract - if there was such a contract, we have already broken this too many times to continue supporting it.",
        "createdAt" : "2019-04-14T01:18:27Z",
        "updatedAt" : "2019-04-16T22:25:57Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      }
    ],
    "commit" : "14df42fd008ef8e95d60d0d70084943d180bab91",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +486,490 @@    action='store',\n    dest='code_cache_path',\n    help='optparse.SUPPRESS_HELP')\n\n# End dummy list."
  },
  {
    "id" : "60c342c5-d8c4-4e80-98b1-081f0d8620a4",
    "prId" : 27504,
    "prUrl" : "https://github.com/nodejs/node/pull/27504#pullrequestreview-232455243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "571444e0-340f-46db-bcc2-5180fdd7e5de",
        "parentId" : null,
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "Stray whitespace change?",
        "createdAt" : "2019-04-30T23:36:57Z",
        "updatedAt" : "2019-05-03T01:05:15Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      },
      {
        "id" : "04ce0472-bf5e-4306-a0f1-ef7f7f090ef0",
        "parentId" : "571444e0-340f-46db-bcc2-5180fdd7e5de",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "No. I meant to better delineate the lines that generate `config.mk`.\r\nOptimally I'd wrap this code into a function, but that will just conflict with https://github.com/nodejs/node/pull/26725",
        "createdAt" : "2019-04-30T23:41:23Z",
        "updatedAt" : "2019-05-03T01:05:15Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "46eb532a2a144ebd0fe1aa91a2b4a9e9372aa902",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1628,1632 @@os.chmod('config.status', 0o775)\n\n\nconfig = {\n  'BUILDTYPE': 'Debug' if options.debug else 'Release',"
  }
]