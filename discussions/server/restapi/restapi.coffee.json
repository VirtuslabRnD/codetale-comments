[
  {
    "id" : "af3f6df5-d4d5-4202-8a88-e32dd4328c21",
    "prId" : 350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "parentId" : null,
        "authorId" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "body" : "we need aditional verifications to get room's messages.\nyou can't see messages you are not in.\nwe should verify if the request user has an ChatSubscription to that room before return the messages.\n",
        "createdAt" : "2015-07-28T11:46:04Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "tags" : [
        ]
      },
      {
        "id" : "663a6eae-34a4-4db9-90ae-deb4cad7cd9d",
        "parentId" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "authorId" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "body" : "Is a call to 'canAccessRoom' going to be strong enough?   (pls see new commit)\nAPI is on the server.   But on the client, a user seems to be able to 'visit' any room and see the messages.\nI am weary about emulating client behaviour at this stage on API because the caller may not be a UI replacement, and may want 'admin' access -- in which case we need to validate roles.\n",
        "createdAt" : "2015-07-28T13:39:44Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "tags" : [
        ]
      },
      {
        "id" : "a4a48782-0e61-447c-b2e0-2e4833760ce9",
        "parentId" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "authorId" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "body" : "'canAccessRoom' should be enough.\non the client you can't visit private groups you are not in or 1v1 rooms of other users.. so we have to do some validation..\nmaybe we should check for an admin user/token if we want to violate this rules, but 'canAcessRoom' does not do it atm.\n",
        "createdAt" : "2015-07-28T13:49:48Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "tags" : [
        ]
      },
      {
        "id" : "f2eb8396-7b6b-4d01-bace-7d3dc0e874c7",
        "parentId" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "authorId" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "body" : "thx - I've added the 'canAccessRoom' check, and beef'd up exception handling.\nrestivus (the library we are using) can handle the admin-role-check by configuration.  \nI propose we restrict this call so we don't have to admin check.  We can always add a see-everything one later if there is demand.\n",
        "createdAt" : "2015-07-28T14:08:20Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "tags" : [
        ]
      },
      {
        "id" : "de2fb143-fbdc-4ef0-8b7b-74af19bdbee2",
        "parentId" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "authorId" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "body" : "OT:  but REST-full API really _SCREAMS_  regression tests.  Can we add a 'test' tree somewhere in src?   I think it will be useful even if they are not automated right-the-way.\n",
        "createdAt" : "2015-07-28T14:15:33Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "149451f1-eb01-41bc-8f52-0bdafcc41f2b",
        "tags" : [
        ]
      },
      {
        "id" : "611417be-2e79-4411-b83f-e86fff18a647",
        "parentId" : "750e6532-1616-4199-8ebb-6460b3be353f",
        "authorId" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "body" : "agreed. we need to start making tests.. maybe the APIs are a good start =)\n",
        "createdAt" : "2015-07-28T14:41:39Z",
        "updatedAt" : "2015-07-28T16:59:43Z",
        "lastEditedBy" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ab4a1530b6e9ef84f1717b97d43cba2251a0a5",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@# get messages in a room\nApi.addRoute 'rooms/:id/messages', authRequired: true,\n\tget: ->\n\t\ttry\n\t\t\tif Meteor.call('canAccessRoom', @urlParams.id, this.userId)"
  }
]