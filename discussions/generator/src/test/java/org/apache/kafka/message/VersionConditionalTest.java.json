[
  {
    "id" : "246a99df-0d3f-4136-8b1f-feca1a208bbd",
    "prId" : 7340,
    "prUrl" : "https://github.com/apache/kafka/pull/7340#pullrequestreview-291395980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02e51980-feaf-4a14-8cca-94201ce8e834",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "This assert is used in a few places. This code helps with asserting CodeBuffer behaviour and not with version conditional. Should we move this as a static to CodeBufferTest?",
        "createdAt" : "2019-09-20T16:43:36Z",
        "updatedAt" : "2019-09-24T22:02:31Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "22b16350-315d-4751-83ce-804e6b2ca23b",
        "parentId" : "02e51980-feaf-4a14-8cca-94201ce8e834",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "That's a good point.  I will move this to `CodeBufferTest`.",
        "createdAt" : "2019-09-20T21:03:59Z",
        "updatedAt" : "2019-09-24T22:02:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a0ee56804b975a3c65ba167382a86afee3109c5",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@        }\n        Assert.assertEquals(expectedStringBuilder.toString(), stringWriter.toString());\n    }\n\n    @Test"
  },
  {
    "id" : "ba95c00e-67e3-4569-bb00-563264d66481",
    "prId" : 7340,
    "prUrl" : "https://github.com/apache/kafka/pull/7340#pullrequestreview-291972765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73eca087-8f61-49ee-a62c-5f653efb28fd",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "I had to keep looking at the signature for `forVersions` to check which was the containing versions and which was the possible versions. Can we use the builder pattern to make this self documenting? E.g.\r\n\r\n```\r\nVersionConditional.\r\n  forPossibleVersions(...).\r\n  withContainingVersion(...).\r\n  ...\r\n```\r\nIs there a reasonable default value for \"containing\" version?",
        "createdAt" : "2019-09-20T16:58:00Z",
        "updatedAt" : "2019-09-24T22:02:31Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      },
      {
        "id" : "a36dc17e-39a5-4a4e-8fc3-9dc030bce064",
        "parentId" : "73eca087-8f61-49ee-a62c-5f653efb28fd",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Hmm, that might make sense to do here.  Can we do it in one of the follow-on PRs that make use of VersionConditional, though?  That might help establish whether it is clearer or not.",
        "createdAt" : "2019-09-23T18:32:34Z",
        "updatedAt" : "2019-09-24T22:02:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a0ee56804b975a3c65ba167382a86afee3109c5",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@        CodeBuffer buffer = new CodeBuffer();\n        VersionConditional.\n            forVersions(Versions.parse(\"1-5\", null), Versions.parse(\"2-4\", null)).\n            ifMember(__ -> {\n                buffer.printf(\"System.out.println(\\\"hello world\\\");%n\");"
  },
  {
    "id" : "3286daf9-da7c-4048-bd97-468d9701d62b",
    "prId" : 9926,
    "prUrl" : "https://github.com/apache/kafka/pull/9926#pullrequestreview-571838092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "737c7730-614a-4cc6-9a91-6e6835ada7ff",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "the build fails due to this renaming.\r\n```\r\n/home/chia7712/kafka/generator/src/test/java/org/apache/kafka/message/IsNullConditionalTest.java:37: error: cannot find symbol\r\n        VersionConditionalTest.assertEquals(buffer,\r\n                              ^\r\n  symbol:   method assertEquals(CodeBuffer,String,String,String)\r\n  location: class VersionConditionalTest\r\n/home/chia7712/kafka/generator/src/test/java/org/apache/kafka/message/IsNullConditionalTest.java:57: error: cannot find symbol\r\n        VersionConditionalTest.assertEquals(buffer,\r\n                              ^\r\n  symbol:   method assertEquals(CodeBuffer,String,String,String,String,String)\r\n  location: class VersionConditionalTest\r\n/home/chia7712/kafka/generator/src/test/java/org/apache/kafka/message/IsNullConditionalTest.java:76: error: cannot find symbol\r\n        VersionConditionalTest.assertEquals(buffer,\r\n                              ^\r\n  symbol:   method assertEquals(CodeBuffer,String,String,String)\r\n  location: class VersionConditionalTest\r\n/home/chia7712/kafka/generator/src/test/java/org/apache/kafka/message/IsNullConditionalTest.java:96: error: cannot find symbol\r\n        VersionConditionalTest.assertEquals(buffer,\r\n                              ^\r\n  symbol:   method assertEquals(CodeBuffer,String)\r\n  location: class VersionConditionalTest\r\n/home/chia7712/kafka/generator/src/test/java/org/apache/kafka/message/IsNullConditionalTest.java:115: error: cannot find symbol\r\n        VersionConditionalTest.assertEquals(buffer,\r\n                              ^\r\n  symbol:   method assertEquals(CodeBuffer,String,String,String)\r\n  location: class VersionConditionalTest\r\n5 errors\r\n\r\n```",
        "createdAt" : "2021-01-20T03:16:28Z",
        "updatedAt" : "2021-01-20T16:15:54Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "95e32f5465bc5ecc830583937c5c26e770f1af74",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +29,33 @@public class VersionConditionalTest {\n\n    static void claimEquals(CodeBuffer buffer, String... lines) throws Exception {\n        StringWriter stringWriter = new StringWriter();\n        buffer.write(stringWriter);"
  }
]