[
  {
    "id" : "f2d4a12d-300f-425b-9490-bcf2aa18034e",
    "prId" : 7291,
    "prUrl" : "https://github.com/apache/kafka/pull/7291#pullrequestreview-283311575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fb1ca04-e8cb-413e-9a00-94e76c37b5e0",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Added this so I could write a small test without a bunch of extra boilerplate.",
        "createdAt" : "2019-09-03T23:29:46Z",
        "updatedAt" : "2019-09-11T17:25:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "df17ec3c32c1a4186e897cdb6adf70f9e0ebe67a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +125,129 @@            }\n        }\n        if (messageTypeGenerator.hasRegisteredTypes()) {\n            Path factoryOutputPath = Paths.get(outputDir, API_MESSAGE_TYPE_JAVA);\n            outputFileNames.add(API_MESSAGE_TYPE_JAVA);"
  },
  {
    "id" : "e29f6bc9-8c57-41c2-8084-39bf00a813bc",
    "prId" : 9002,
    "prUrl" : "https://github.com/apache/kafka/pull/9002#pullrequestreview-446479242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f42a264-6db3-4d0a-975e-639340b3a67b",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Instead of using null ptr, maybe we could get a `NoOpTypeClassGenerator` which will do nothing for `generateAndWrite`, and remove the `outputName()` to make one single API. Something like\r\n```\r\nString outputFileName = typeClassGenerator.generateAndWrite(outputDir, writer);\r\n```\r\nI don't feel strong about this change, ideally it should look better, but up to you.",
        "createdAt" : "2020-07-09T23:34:14Z",
        "updatedAt" : "2020-07-10T15:10:18Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "5a3004ef-6a55-48ef-9ff1-b1adf25c7dfa",
        "parentId" : "6f42a264-6db3-4d0a-975e-639340b3a67b",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I thought about that, but it doesn't really make anything simpler.  If there's no typeclass, we don't want to add an output file, we don't want to write to it, etc. etc.  So we still need all the same logic.",
        "createdAt" : "2020-07-10T15:07:38Z",
        "updatedAt" : "2020-07-10T15:10:18Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be8944d4f0b5b11e931d2994b807728a543b21d",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +194,198 @@            }\n        }\n        if (typeClassGenerator != null) {\n            outputFileNames.add(typeClassGenerator.outputName());\n            Path factoryOutputPath = Paths.get(outputDir, typeClassGenerator.outputName());"
  },
  {
    "id" : "f65b9ebb-dcbd-430c-a6c5-82f530b20dee",
    "prId" : 9002,
    "prUrl" : "https://github.com/apache/kafka/pull/9002#pullrequestreview-446511699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25065f29-d068-4633-a26a-561e3c15febc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Why we need separate exit code for mis-used arguments?",
        "createdAt" : "2020-07-09T23:36:09Z",
        "updatedAt" : "2020-07-10T15:10:18Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "3fec2447-e721-4574-be34-8bf5dbe9d186",
        "parentId" : "25065f29-d068-4633-a26a-561e3c15febc",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's traditional for invoking a program with no arguments to print out the usage message, and exit with success, which is 0.  If there was a usage error, then we exit with failure, which is 1.",
        "createdAt" : "2020-07-10T15:06:17Z",
        "updatedAt" : "2020-07-10T15:10:18Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "514624da-5ab9-47ca-a475-4645b135d45f",
        "parentId" : "25065f29-d068-4633-a26a-561e3c15febc",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Sg",
        "createdAt" : "2020-07-10T15:51:20Z",
        "updatedAt" : "2020-07-10T15:51:20Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be8944d4f0b5b11e931d2994b807728a543b21d",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +284,288 @@            System.out.println(USAGE);\n            System.exit(0);\n        } else if (args.length != 4) {\n            System.out.println(USAGE);\n            System.exit(1);"
  }
]