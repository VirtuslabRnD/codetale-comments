[
  {
    "id" : "1508ccdf-9485-49f4-aa67-8c62e4c36094",
    "prId" : 2721,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d465f16e-0738-498b-9e18-dcdb15043066",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Just `dot(a, v[:, i] = w[i] *  v[:, i]` should do here. With broadcasting the simpler form `dot(a, v) = v * w` also works.but may be more confusing.\n",
        "createdAt" : "2013-07-10T02:30:57Z",
        "updatedAt" : "2013-07-10T02:30:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f27b0742a34f6215fcfd42541b9e9696796682",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +947,951 @@    The number `w` is an eigenvalue of `a` if there exists a vector\n    `v` such that ``dot(a,v) = w * v``. Thus, the arrays `a`, `w`, and\n    `v` satisfy the equations ``dot(a[:,:], v[:,i]) = w[i] * v[:,i]``\n    for :math:`i \\\\in \\\\{0,...,M-1\\\\}`.\n"
  },
  {
    "id" : "3aeeeb6f-bf3d-4338-b30b-cfd9de980b75",
    "prId" : 3978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81c4d7fe-ad38-4a6e-b387-5215b0bda2a9",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "This can be cleaned up more now that we only support 2.6-2.7 as the comparison can be done as\n\n```\nUPLO == b'L'\n```\n\nBut that cleanup can wait.\n",
        "createdAt" : "2013-10-25T17:33:34Z",
        "updatedAt" : "2013-10-25T18:07:28Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e07275f05e95a4d0af098b06d37925602f7861",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +957,961 @@    extobj = get_linalg_error_extobj(\n        _raise_linalgerror_eigenvalues_nonconvergence)\n    if UPLO == _L:\n        gufunc = _umath_linalg.eigvalsh_lo\n    else:"
  },
  {
    "id" : "c8678180-fcdb-432c-99ad-f32cc8252d63",
    "prId" : 4977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08b89835-63da-4ea8-88e1-3d81414475ea",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "this comment is not really needed\n",
        "createdAt" : "2014-09-13T12:31:51Z",
        "updatedAt" : "2014-11-10T10:57:26Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "5283bbed-c143-463c-8474-69888c08783a",
        "parentId" : "08b89835-63da-4ea8-88e1-3d81414475ea",
        "authorId" : "f350d0bd-bc3e-4982-b4da-24c15ea04c96",
        "body" : "Many functions/groups of functions have this kind of prefix in linalg.py.\n",
        "createdAt" : "2014-10-20T15:00:31Z",
        "updatedAt" : "2014-11-10T10:57:26Z",
        "lastEditedBy" : "f350d0bd-bc3e-4982-b4da-24c15ea04c96",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b12c394548e2d23bba83c0eccda958a28998293",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2156,2160 @@\n\n# multi_dot\n\ndef multi_dot(arrays):"
  },
  {
    "id" : "5f02d724-723f-40ed-9545-d0b8d2690405",
    "prId" : 5196,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f064db39-34e1-4f57-8c5e-3e786c2bcb05",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "That's interesting, I wasn't aware it operated that way for `axis=None`.\n",
        "createdAt" : "2014-10-16T20:19:30Z",
        "updatedAt" : "2014-10-17T14:51:00Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a0ec693b-c4ac-498c-9a17-d85bdaaf58a2",
        "parentId" : "f064db39-34e1-4f57-8c5e-3e786c2bcb05",
        "authorId" : "08d28fd4-23d7-47ff-96d3-656eaa8635f1",
        "body" : "not sure it's the most useful thing it could be doing, but I don't think its worth trying to change.\n",
        "createdAt" : "2014-10-16T21:06:54Z",
        "updatedAt" : "2014-10-17T14:51:00Z",
        "lastEditedBy" : "08d28fd4-23d7-47ff-96d3-656eaa8635f1",
        "tags" : [
        ]
      },
      {
        "id" : "c14e827b-5a28-4d92-84fe-96135846e849",
        "parentId" : "f064db39-34e1-4f57-8c5e-3e786c2bcb05",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Wasn't suggesting a change, I learned something.\n",
        "createdAt" : "2014-10-16T21:15:08Z",
        "updatedAt" : "2014-10-17T14:51:00Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f88eea024448b913cea881efad405e5d4ece195",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +2067,2071 @@        ret = sqrt(sqnorm)\n        if keepdims:\n            ret = ret.reshape(ndim*[1])\n        return ret\n"
  },
  {
    "id" : "f523e1be-9357-4493-adb3-352f5e2acf27",
    "prId" : 6362,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "parentId" : null,
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "Should this be changed to `M, M` as in the matrix inverse docs?\n",
        "createdAt" : "2015-09-25T16:20:18Z",
        "updatedAt" : "2015-09-25T16:20:18Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "69bbf688-9569-48cf-8511-7890bbd2f13c",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "The SVD cond is defined even for non-square matrices, no? (frankly, did not try to put on my math brain for this)\n",
        "createdAt" : "2015-09-25T16:21:41Z",
        "updatedAt" : "2015-09-25T16:21:41Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "65671f72-4db5-4b86-a6f7-248f21f8749b",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "Yes it's true that part of the implementation of `cond` uses `svd` and that `svd` works on non-square matrices. But `cond` is the condition number of a particular function (matrix inversion, or `inv`) with respect to x, and it does not make sense to me that the condition number would be defined for x when x is not in the domain of the function.\nhttps://en.wikipedia.org/wiki/Condition_number\n",
        "createdAt" : "2015-09-25T16:26:14Z",
        "updatedAt" : "2015-09-25T16:26:14Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "3206cdbd-b842-474a-814d-a5f64b19729f",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "But I guess this is a nitpicky point that could be addressed in a different PR if at all..\n",
        "createdAt" : "2015-09-25T16:27:23Z",
        "updatedAt" : "2015-09-25T16:27:23Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "ae04c55a-0154-49e4-b756-33eef5c440af",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Google it ;), I think it is well defined with the pseudo inverse as well, since it has to do with how well the solution of the system of linear equations are, which also has a well defined solution for non-square matrices. At least in a least square sense.\n",
        "createdAt" : "2015-09-25T16:28:43Z",
        "updatedAt" : "2015-09-25T16:28:43Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "cb491a18-3bdf-48cb-b89b-be7c6dbe5ff6",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "> Google it ;)\n\nI'm not sure what you're suggesting to google...\n\nThe numpy.linalg.cond function is documented as \"The condition number of x is defined as the norm of x times the norm of the inverse of x.\" so should this be updated if `cond` is defined in some other way for nonsquare matrices?\n",
        "createdAt" : "2015-09-25T16:32:44Z",
        "updatedAt" : "2015-09-25T16:49:07Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "d5efe170-018c-4808-8364-4600b61b43ce",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Sorry. But things like: http://icl.cs.utk.edu/lapack-forum/archives/lapack/msg00311.html\n\nIt seems to me that the definition with the pseudo inverse is definitely useful. So maybe we should add another sentence or two to the Notes to say that. Frankly, I am not quite sure what to write, but I can think about it later.\n",
        "createdAt" : "2015-09-25T17:28:54Z",
        "updatedAt" : "2015-09-25T17:29:09Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "c5f74f6a-b156-422e-80be-2f130fa612cb",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "@seberg Thanks, I'll open a separate issue.\n",
        "createdAt" : "2015-09-25T18:13:29Z",
        "updatedAt" : "2015-09-25T18:13:29Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "8bdcf161-ae4f-41b3-a40f-b16ad12c3f43",
        "parentId" : "c7a15c1c-c112-49d1-9eed-60d3ec43089c",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "Opened https://github.com/numpy/numpy/issues/6364, although I'm not confident that I've phrased that issue correctly.\n",
        "createdAt" : "2015-09-25T18:20:02Z",
        "updatedAt" : "2015-09-25T18:20:02Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae56c58db4207bd11100a9d24c9edf7694e34d67",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1383,1387 @@    Parameters\n    ----------\n    x : (..., M, N) array_like\n        The matrix whose condition number is sought.\n    p : {None, 1, -1, 2, -2, inf, -inf, 'fro'}, optional"
  }
]