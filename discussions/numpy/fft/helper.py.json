[
  {
    "id" : "54460686-21db-4b56-bbf4-ce60d03e05f0",
    "prId" : 7686,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dd0c697-8bec-462e-a9f4-5dbac94ec45c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Should give this a standard docstring, see `doc/HOWTO_DOCUMENT.rst.txt`. All that is really needed here is a `Parameters` section with the two arguments to `__init__`.\n",
        "createdAt" : "2016-06-04T16:54:46Z",
        "updatedAt" : "2016-06-06T17:54:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2de9651b99da9d3308de5df510cfd28c1a3a0f19",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +229,233 @@class _FFTCache(object):\n    \"\"\"\n    Cache for the FFT init functions as an LRU (least recently used) cache.\n\n    Parameters"
  },
  {
    "id" : "87bd0411-0bda-4e68-b2fb-7bf559e988a6",
    "prId" : 7712,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e3603f9-92d4-4a3c-b582-73cbd7831764",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe\n\n```\ntry:\n    all_values = self._dict.pop(n)\n    value = all_values.pop()\nexcept (KeyError, IndexError):\n    return None\n...\n```\n",
        "createdAt" : "2016-06-08T14:30:21Z",
        "updatedAt" : "2016-06-08T14:30:21Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "0718129e-9d52-4918-b0d0-f9992ef2715e",
        "parentId" : "9e3603f9-92d4-4a3c-b582-73cbd7831764",
        "authorId" : "4658896d-63a7-4f92-9055-13d57ea829c8",
        "body" : "I prefer the current solution as its IMHO a bit clearer. Performance is also not a concern at all as the maximum size of the dictionary is bounded.\n",
        "createdAt" : "2016-06-09T10:26:02Z",
        "updatedAt" : "2016-06-09T10:26:02Z",
        "lastEditedBy" : "4658896d-63a7-4f92-9055-13d57ea829c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "820d527fe0bc6414ad19b10eea941a7fc0749757",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +299,303 @@        \"\"\"\n        with self._lock:\n            if n not in self._dict or not self._dict[n]:\n                return None\n            # Pop + later add to move it to the end for LRU behavior."
  },
  {
    "id" : "64e1cc28-7139-479b-9d10-5761f6911d55",
    "prId" : 12117,
    "prUrl" : "https://github.com/numpy/numpy/pull/12117#pullrequestreview-163965060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cd7238c-9bb7-482f-af98-b79266c9feef",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "I would again suggest just using a single dispatcher.",
        "createdAt" : "2018-10-11T18:55:47Z",
        "updatedAt" : "2018-10-12T01:17:09Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd0307e7d772c586e1a2689f9f96c7c4cc760623",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +21,25 @@\n\ndef _fftshift_dispatcher(x, axes=None):\n    return (x,)\n"
  }
]