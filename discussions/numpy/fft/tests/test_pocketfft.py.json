[
  {
    "id" : "f1ffc5c5-c5a7-44b8-96ee-1688981f3434",
    "prId" : 12685,
    "prUrl" : "https://github.com/numpy/numpy/pull/12685#pullrequestreview-190362057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Is there a reason you didn't use `'efdgFDG'` which is all the float types?",
        "createdAt" : "2019-01-08T16:26:53Z",
        "updatedAt" : "2019-01-08T17:41:58Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "2af2cc18-bdf5-4e85-8006-d9947d48ae23",
        "parentId" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Also, may as well use `pytest.mark.parametrize`",
        "createdAt" : "2019-01-08T16:27:57Z",
        "updatedAt" : "2019-01-08T17:41:58Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "212f0936-078e-4e79-b8a1-aa90c293a1dd",
        "parentId" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "authorId" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "body" : "I'm not using the \"FDG\" types because that would mean calling a real-valued FFT with a complex-valued input, which really makes no sense (and it produces a warning as expected).\r\nI can add \"e\", if you like.",
        "createdAt" : "2019-01-08T17:09:38Z",
        "updatedAt" : "2019-01-08T17:41:58Z",
        "lastEditedBy" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "tags" : [
        ]
      },
      {
        "id" : "3ff039fb-bc52-4ce7-b158-e4b5d0d2eb2d",
        "parentId" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "authorId" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "body" : "I'm sorry, I don't have the time right now to learn how `pytest` works.",
        "createdAt" : "2019-01-08T17:10:15Z",
        "updatedAt" : "2019-01-08T17:41:58Z",
        "lastEditedBy" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "tags" : [
        ]
      },
      {
        "id" : "d1f65956-de10-4f4b-827a-d94ef72cd3b4",
        "parentId" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```\r\n@pytest.mark.parametrize(\"dtype\", [np.half, np.single, np.double, np.longdouble])\r\ndef test_something(dtype):\r\n   ...\r\n```",
        "createdAt" : "2019-01-08T17:19:03Z",
        "updatedAt" : "2019-01-08T17:41:58Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b6b64291-2458-4740-978e-1b0ba4e6ecee",
        "parentId" : "16af55e0-8c80-42a5-8500-692a9bb9c47a",
        "authorId" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "body" : "Thanks!",
        "createdAt" : "2019-01-08T17:42:28Z",
        "updatedAt" : "2019-01-08T17:42:28Z",
        "lastEditedBy" : "ba48efb4-85c1-4b44-9286-85ef08ceef02",
        "tags" : [
        ]
      }
    ],
    "commit" : "4400a93b45e5c8efdb824e798d51c131eae60240",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +166,170 @@        assert_array_almost_equal(np.fft.ifft(np.fft.fft(x)), x)\n        assert_array_almost_equal(np.fft.irfft(np.fft.rfft(x)), x)\n\nclass TestFFTThreadSafe(object):\n    threads = 16"
  }
]