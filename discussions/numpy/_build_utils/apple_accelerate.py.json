[
  {
    "id" : "5fadf776-f496-4f13-9e50-0c646de2536b",
    "prId" : 10689,
    "prUrl" : "https://github.com/numpy/numpy/pull/10689#pullrequestreview-101019432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f591613a-af58-4522-8bb2-73a7b17e06fe",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Should this be `if os.getenv('\"_PYTHON_HOST_PLATFORM\", None) != \"darwin\"`? (and ditto below)\r\n\r\nIn fact, maybe we should have a helper for fetching the build platform?",
        "createdAt" : "2018-03-04T10:33:41Z",
        "updatedAt" : "2018-03-09T00:06:36Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "9f9271c6-1dcf-49cc-a54d-22a0f0f28a73",
        "parentId" : "f591613a-af58-4522-8bb2-73a7b17e06fe",
        "authorId" : "10a45e9e-1f00-4561-a580-62381f3f0555",
        "body" : "No - you need to check both `sys.platform == 'darwin'` (to confirm that you're compiling on a macOS machine at all), and *then* that you're cross compiling. \r\n\r\n_PYTHON_HOST_PLATFORM will be set to an identifier for the platform you are compiling for (e.g., `\"iphoneos.arm64\"`) indicating the architecture that you're compiling for. It won't be set at all if you're actually compiling for macOS.\r\n\r\nAs for whether a helper method is required... sure; I suppose it could be factored out if that's deemed worthwhile.",
        "createdAt" : "2018-03-04T10:54:41Z",
        "updatedAt" : "2018-03-09T00:06:36Z",
        "lastEditedBy" : "10a45e9e-1f00-4561-a580-62381f3f0555",
        "tags" : [
        ]
      },
      {
        "id" : "46be8e9f-a143-48a4-8f7d-8c9e159a18aa",
        "parentId" : "f591613a-af58-4522-8bb2-73a7b17e06fe",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "My point was that `_PYTHON_HOST_PLATFORM=darwin` seems like a reasonable case to want to handle too, rather than assuming that this will never happen. (I wasn't suggesting folding the two checks into one.)",
        "createdAt" : "2018-03-04T11:27:32Z",
        "updatedAt" : "2018-03-09T00:06:36Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "e9fb76b3-177b-4184-b6b7-dca20595812b",
        "parentId" : "f591613a-af58-4522-8bb2-73a7b17e06fe",
        "authorId" : "10a45e9e-1f00-4561-a580-62381f3f0555",
        "body" : "Setting `_PYTHON_HOST_PLATFORM='darwin'` would make no sense - because you'd be telling distutils that you wanted to compile for darwin... but the libraries and headers needed to support a darwin build are only available on macOS... i.e., darwin. If you want to build for darwin, you can just build for darwin - there's no need to cross-compile for the platform you're already on.\r\n",
        "createdAt" : "2018-03-04T11:36:24Z",
        "updatedAt" : "2018-03-09T00:06:36Z",
        "lastEditedBy" : "10a45e9e-1f00-4561-a580-62381f3f0555",
        "tags" : [
        ]
      },
      {
        "id" : "b8a37efc-024d-400a-b5d8-52cd7b1264af",
        "parentId" : "f591613a-af58-4522-8bb2-73a7b17e06fe",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "It would make sense if the API was \"this env var gives you the target platform\", and cross compilation was detected as `build platform != target platform`, which would be a good and simple API :-). I guess in practice it's likely that other code is already using a check like this and so distutils is stuck with the more complicated rule that if build and target platform are the same then it has to special case that and unset the envvar.\r\n\r\nBy the way, you should bring up this cross compilation thing on distutils-sig. PEP 517 currently doesn't have any way to specify the target platform.",
        "createdAt" : "2018-03-04T21:03:14Z",
        "updatedAt" : "2018-03-09T00:06:36Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca3ff7a1b1e988ea11bd5d4f3cd9c3cab2069581",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +14,18 @@    # If we're building on macOS, but targeting a different platform,\n    # don't use Accelerate.\n    if os.getenv('_PYTHON_HOST_PLATFORM', None):\n        return False\n    r_accelerate = re.compile(\"Accelerate\")"
  }
]