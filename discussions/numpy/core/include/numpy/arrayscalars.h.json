[
  {
    "id" : "2eeeb591-962d-449d-baea-ccaf3bc26470",
    "prId" : 15385,
    "prUrl" : "https://github.com/numpy/numpy/pull/15385#pullrequestreview-357864698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "parentId" : null,
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "Do we need to worry about ABI changes here?",
        "createdAt" : "2020-02-12T18:18:43Z",
        "updatedAt" : "2020-02-12T18:18:44Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "6025da4b-9d2e-4c41-be07-e38cb30c1025",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "We could check sizeof(PyUnicodeObject) == sizeof(PyUnicodeScalarObject.base) at import\r\n\r\nAlso this should hit the release note.",
        "createdAt" : "2020-02-12T19:12:53Z",
        "updatedAt" : "2020-02-12T19:12:53Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "3819fe46-1d23-46e9-a426-5bca1c98e975",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "@mattip, your comment suggests an attempt at resilience to cpython ABI changes, which is something we don't care about because we already require recompilation against every version of python.\r\n\r\nWhat hameer is point out is that anyone subclassing our scalars in C (why would anyone do that), or allocating a PyUnicodeScalarObject on the stack (hard to do without poking at CPython internals) will notice that our struct changed size.",
        "createdAt" : "2020-02-12T22:01:11Z",
        "updatedAt" : "2020-02-12T22:01:59Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "e3866804-0534-4213-b3c7-2776857f0850",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "It was mentioned in the meeting that there's an API change here if you access the slots as well.",
        "createdAt" : "2020-02-12T22:15:18Z",
        "updatedAt" : "2020-02-12T22:15:18Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "044f3120-8ee7-4d30-8edd-37dd65afc6b8",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The slots were all private CPython implementation details, so anyone accessing them was already fending for themselves",
        "createdAt" : "2020-02-12T22:20:27Z",
        "updatedAt" : "2020-02-12T22:20:27Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1dc9e279-c686-488c-ba3c-4d2e04f0c0ca",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Ah, so API is no issue, and I fully agree that the ABI (size change) is absurd to give much heed to... We could note it in the release notes, but thinking about it more, I am not even sure that makes any sense.",
        "createdAt" : "2020-02-12T22:36:32Z",
        "updatedAt" : "2020-02-12T22:36:32Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "217adc63-9912-4909-8395-2f23d7be6a75",
        "parentId" : "8405ad51-830f-459c-9ef4-95ff85be2063",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "If they’re private, I’m okay with putting this in.",
        "createdAt" : "2020-02-12T23:34:15Z",
        "updatedAt" : "2020-02-12T23:34:15Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b7b6638fe7496d25a488a179d79879748075fa",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +141,145 @@        PyUnicodeObject base;\n        Py_UCS4 *obval;\n} PyUnicodeScalarObject;\n\n"
  }
]