[
  {
    "id" : "9bd73347-6160-4a92-8e2c-5d541891b67e",
    "prId" : 10503,
    "prUrl" : "https://github.com/numpy/numpy/pull/10503#pullrequestreview-93320214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dd5582e-eb98-4313-959b-5c3f9a7cd443",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "How did you find out this was missing? What's the effect under compilers where this is not available / defined?",
        "createdAt" : "2018-02-01T08:12:45Z",
        "updatedAt" : "2018-02-03T03:26:37Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "49570230-b0c6-4d2b-a49d-8ac4f64cf905",
        "parentId" : "8dd5582e-eb98-4313-959b-5c3f9a7cd443",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "The BSD thread was about warnings issued by clang, the compiler they are replacing gcc with, so I put it in for portability. I don't know if we are compiling with clang on Apple yet. The warning problem seems to be compiler dependent, even up to compiler micro version, and it was inconclusive if it was a compiler bug or not, or even specified by the C standards. I suspect we will need to deal with this on a case by case basis. It would be nice if we could figure out a MSVC version just for completeness. @zooba Any ideas? ",
        "createdAt" : "2018-02-01T15:17:50Z",
        "updatedAt" : "2018-02-03T03:26:37Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "536123c1-cb79-48c5-ba16-8becb853e164",
        "parentId" : "8dd5582e-eb98-4313-959b-5c3f9a7cd443",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "We inherited the troublesome macro from BSD when we borrowed their code for some fallback functions.",
        "createdAt" : "2018-02-01T15:25:57Z",
        "updatedAt" : "2018-02-03T03:26:37Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab4c010dc982aafce0b8048f72ede0252c18fb0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +8,12 @@                #define __COMP_NPY_UNUSED __attribute__ ((__unused__))\n        # elif defined(__clang__)\n                #define __COMP_NPY_UNUSED __attribute__ ((unused))\n        #else\n                #define __COMP_NPY_UNUSED"
  },
  {
    "id" : "c44cf1b6-de93-4e68-ba85-237e98d2c31d",
    "prId" : 13516,
    "prUrl" : "https://github.com/numpy/numpy/pull/13516#pullrequestreview-318032243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3418e426-5c95-4275-980a-77b6256949f5",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "These are also defined in `numpy/core/include/numpy/ndarraytypes.h`. Can we define them only once?",
        "createdAt" : "2019-11-17T17:14:55Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72653810f470415f4d78c8a9ea874370a526126",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +29,33 @@\n#define NPY_STRINGIFY(x) #x\n#define NPY_TOSTRING(x) NPY_STRINGIFY(x)\n\n#define NPY_CAT__(a, b) a ## b"
  }
]