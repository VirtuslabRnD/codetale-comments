[
  {
    "id" : "7ec1a30b-5961-4103-a4a8-5a0a9e924826",
    "prId" : 4095,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb16894-038d-4cb7-8403-1c810b453a86",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "The 'l' looks a lot like '1', might want to use a different variable name.\n",
        "createdAt" : "2013-12-19T15:57:35Z",
        "updatedAt" : "2013-12-19T15:57:35Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1951d3d4c1011132560ae4326f636e5cef01d918",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +296,300 @@        # should be a tuple (immutable) of base type integers.\n        a = np.array([1, 2, 3], dtype=np.int16)\n        l = [1, 2, 3]\n        # Array gets converted\n        dt = np.dtype([('a', 'f4', a)])"
  },
  {
    "id" : "724abdd5-40ea-440e-a9c6-0407c073fb5e",
    "prId" : 4095,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3744f9a-04d0-4c46-a51e-0051856051be",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So 'l' is the shape of the subarray?\n",
        "createdAt" : "2013-12-19T15:59:02Z",
        "updatedAt" : "2013-12-19T15:59:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1951d3d4c1011132560ae4326f636e5cef01d918",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +302,306 @@        assert_(isinstance(dt['a'].shape[0], int))\n        # List gets converted\n        dt = np.dtype([('a', 'f4', l)])\n        assert_(isinstance(dt['a'].shape, tuple))\n        # "
  },
  {
    "id" : "abc37d35-2bf2-4863-a835-7f202be372c6",
    "prId" : 12254,
    "prUrl" : "https://github.com/numpy/numpy/pull/12254#pullrequestreview-168453175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b72fb30-d4e6-4366-82bb-5cd141ccaabe",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Previously this produced `dtype([('a', 'u1', (7,)), ('b', 'u1')], align=True)`, which was garbage.",
        "createdAt" : "2018-10-25T15:43:06Z",
        "updatedAt" : "2018-10-26T04:24:36Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "0709d92f78cc6e78ba79da9a25627db87059b31d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +800,804 @@                ('a', ctypes.c_uint8, 7),\n                ('b', ctypes.c_uint8, 1)\n            ]\n        assert_raises(TypeError, np.dtype, BitfieldStruct)\n        assert_raises(TypeError, np.dtype, BitfieldStruct())"
  },
  {
    "id" : "1290c751-a507-4435-83b9-7c5fd46d18c6",
    "prId" : 12254,
    "prUrl" : "https://github.com/numpy/numpy/pull/12254#pullrequestreview-168454069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62ec9c56-a6f2-4eeb-a3c2-aa8140ea2b23",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "And this one produced `dtype({'names':['a','b'], 'formats':['u1','<u2'], 'offsets':[0,2], 'itemsize':4}, align=True)`, which is not a union",
        "createdAt" : "2018-10-25T15:44:46Z",
        "updatedAt" : "2018-10-26T04:24:36Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "0709d92f78cc6e78ba79da9a25627db87059b31d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +816,820 @@                ('a', ctypes.c_uint8),\n                ('b', ctypes.c_uint16),\n            ]\n        expected = np.dtype(dict(\n            names=['a', 'b'],"
  },
  {
    "id" : "4e0cb39c-2215-4908-bf65-d7512826f9cf",
    "prId" : 12380,
    "prUrl" : "https://github.com/numpy/numpy/pull/12380#pullrequestreview-174784629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe1d085f-9e21-41c0-a944-4906c550afa0",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can you add a test with a packed LittleEndianStructure too?",
        "createdAt" : "2018-11-14T08:59:07Z",
        "updatedAt" : "2018-11-14T12:12:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "31c54cbe-bb86-4185-928d-6af916451836",
        "parentId" : "fe1d085f-9e21-41c0-a944-4906c550afa0",
        "authorId" : "bf879167-0234-478d-94d9-47021289f4b6",
        "body" : "Added. ",
        "createdAt" : "2018-11-14T10:14:46Z",
        "updatedAt" : "2018-11-14T12:12:31Z",
        "lastEditedBy" : "bf879167-0234-478d-94d9-47021289f4b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ed2e036450eca177588d5be632e1a472dda30b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +858,862 @@\n    def test_big_endian_structure_packed(self):\n        class BigEndStruct(ctypes.BigEndianStructure):\n            _fields_ = [\n                ('one', ctypes.c_uint8),"
  },
  {
    "id" : "5950ffeb-56f9-44bc-b5b7-21cd7cae0c77",
    "prId" : 12405,
    "prUrl" : "https://github.com/numpy/numpy/pull/12405#pullrequestreview-176048241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37c3389b-6747-4bba-9538-2cf97218d817",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Needs a test where the `Union` is packed too",
        "createdAt" : "2018-11-17T03:07:40Z",
        "updatedAt" : "2018-11-18T11:07:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "435d7c1a-342e-431d-bde5-865d8883d282",
        "parentId" : "37c3389b-6747-4bba-9538-2cf97218d817",
        "authorId" : "bf879167-0234-478d-94d9-47021289f4b6",
        "body" : "Added it. ",
        "createdAt" : "2018-11-17T09:56:22Z",
        "updatedAt" : "2018-11-18T11:07:49Z",
        "lastEditedBy" : "bf879167-0234-478d-94d9-47021289f4b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bec0cbe1c1e029e0eadfe92d407421a4be7b2d41",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +830,834 @@            ]\n\n        class Union(ctypes.Union):\n            _fields_ = [\n                ('a', ctypes.c_uint8),"
  },
  {
    "id" : "265e8d6e-edd7-4683-9576-84169a1deb1b",
    "prId" : 12405,
    "prUrl" : "https://github.com/numpy/numpy/pull/12405#pullrequestreview-176084599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "feda32b3-f2b2-481e-b70c-4ab8ca04fe93",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "nit: methods should be separated by one blank line, not two",
        "createdAt" : "2018-11-17T21:32:24Z",
        "updatedAt" : "2018-11-18T11:07:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "16933ec1-50d9-4354-b427-a6734c414e4b",
        "parentId" : "feda32b3-f2b2-481e-b70c-4ab8ca04fe93",
        "authorId" : "bf879167-0234-478d-94d9-47021289f4b6",
        "body" : "Fixed. ",
        "createdAt" : "2018-11-18T11:02:51Z",
        "updatedAt" : "2018-11-18T11:07:49Z",
        "lastEditedBy" : "bf879167-0234-478d-94d9-47021289f4b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bec0cbe1c1e029e0eadfe92d407421a4be7b2d41",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +845,849 @@        self.check(Union, expected)\n\n    def test_union_packed(self):\n        class Struct(ctypes.Structure):\n            _fields_ = ["
  }
]