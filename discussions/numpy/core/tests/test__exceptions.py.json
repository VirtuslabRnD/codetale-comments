[
  {
    "id" : "0c85294c-3b98-4cc9-945c-0bb9abe0e554",
    "prId" : 17377,
    "prUrl" : "https://github.com/numpy/numpy/pull/17377#pullrequestreview-499012884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "221c2bb3-9066-4a25-8c7f-6612d50700a6",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Thanks for looking into this, looks good to me.  If you have some time, maybe you can extend the test to also loading and the error instance and not just the error class?\r\n\r\nIt may be easier for memory error (either seems enough to me for now). Could you add a test that round-tripping works, maybe something like:\r\n```\r\nerror = _ArrayMemoryError((1023,), np.dtype(np.uint8))\r\nres = pickle.loads(pickle.dumps(error))\r\n\r\nassert res._total_size == error._total_size\r\n```\r\nI would mostly like a test that the error (instances) can also be unpickled again.  I admit, they clearly can here.",
        "createdAt" : "2020-09-28T16:20:46Z",
        "updatedAt" : "2020-09-30T00:31:27Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "256dc68b-2665-4390-992e-bd7b3e7f8b20",
        "parentId" : "221c2bb3-9066-4a25-8c7f-6612d50700a6",
        "authorId" : "0fcd8953-40da-4e0d-a707-5be48b75dbe1",
        "body" : "done in 866b39e8217eb1b7d2215a9a462bdfd86f4f516e",
        "createdAt" : "2020-09-29T00:39:38Z",
        "updatedAt" : "2020-09-30T00:31:27Z",
        "lastEditedBy" : "0fcd8953-40da-4e0d-a707-5be48b75dbe1",
        "tags" : [
        ]
      },
      {
        "id" : "72a077e8-2608-4f90-a48c-ce439a28570e",
        "parentId" : "221c2bb3-9066-4a25-8c7f-6612d50700a6",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Thanks. One more nitpick: test would make more sense as a `test_pickling` in the `TestArrayMemoryError` class.",
        "createdAt" : "2020-09-30T00:05:40Z",
        "updatedAt" : "2020-09-30T00:31:27Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "5a7f1bfd-43e1-4fdf-96ef-f3d9e95e97a9",
        "parentId" : "221c2bb3-9066-4a25-8c7f-6612d50700a6",
        "authorId" : "0fcd8953-40da-4e0d-a707-5be48b75dbe1",
        "body" : "fixed in ea0c5f5295650ee99856133565b98b3e99396fb2",
        "createdAt" : "2020-09-30T00:32:08Z",
        "updatedAt" : "2020-09-30T00:32:09Z",
        "lastEditedBy" : "0fcd8953-40da-4e0d-a707-5be48b75dbe1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea0c5f5295650ee99856133565b98b3e99396fb2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +56,60 @@    def test_pickling(self):\n        \"\"\" Test that _UFuncNoLoopError can be pickled \"\"\"\n        assert isinstance(pickle.dumps(_UFuncNoLoopError), bytes)"
  }
]