[
  {
    "id" : "edcee95e-422c-4de7-bdf1-676a97846d5b",
    "prId" : 395,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebb05491-908f-4680-bcad-5b0287fa7be0",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Not sure if it matters or is the case. But it may be necessary to test both '>' and '<' for big-endian machines where I guess the singletons should be big endian? would be just a second net here and a second test below (unless there is a way to make net non-native).\n",
        "createdAt" : "2012-08-31T17:10:16Z",
        "updatedAt" : "2012-08-31T17:10:16Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "efe5d70f-bf6f-4c83-922b-31e7dfcd740c",
        "parentId" : "ebb05491-908f-4680-bcad-5b0287fa7be0",
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "Would you mind sending a PR for this please? I am going to merge this issue now.\n",
        "createdAt" : "2012-08-31T22:03:49Z",
        "updatedAt" : "2012-08-31T22:03:49Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecbd938adb1a370017a5ff8ca20b2c66141f48fe",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +172,176 @@    def test_endian_where(self,level=rlevel):\n        \"\"\"GitHuB issue #369\"\"\"\n        net = np.zeros(3, dtype='>f4')\n        net[1] = 0.00458849\n        net[2] = 0.605202"
  },
  {
    "id" : "4e304417-ce34-4c62-a139-fc6b855bec4f",
    "prId" : 397,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b349ef0-8cdf-4b36-8343-28c359066765",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "The use of format_parser is pretty pointless here, it's equivalent to just writing `a = np.recarray((2,), \"i4, i4\")` or `a = np.recarray((2,), [(\"\", \"i4\"), (\"\", \"i4\")])`... doesn't really matter much though.\n",
        "createdAt" : "2012-09-01T07:58:00Z",
        "updatedAt" : "2012-09-01T07:58:00Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0713354fa282f096e30886e7617d84ee2938390d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1745,1749 @@        # Ticket #2066, similar problem:\n        dtype = np.format_parser(['i4', 'i4'], [], [])\n        a = np.recarray((2, ), dtype)\n        assert_raises(TypeError, np.searchsorted, a, 1)\n"
  },
  {
    "id" : "9b3b46a7-cf0e-4351-9c01-38c29a46405c",
    "prId" : 477,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67985410-ac1a-4f56-8fa6-225aa51df9ae",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Might as well test the astype method too.\n",
        "createdAt" : "2012-10-02T01:23:09Z",
        "updatedAt" : "2012-10-02T01:23:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a72bb40c-5a95-4b50-acd3-b08ec092df02",
        "parentId" : "67985410-ac1a-4f56-8fa6-225aa51df9ae",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And maybe logical_or.reduce and logical_and.reduce as well.\n\n```\nIn [1]: a = ones(3)*1j\n\nIn [2]: logical_or.reduce(a)\nOut[2]: True\n\nIn [3]: logical_and.reduce(a)\nOut[3]: True\n```\n\nYou could maybe put those tests in numpy/core/test_ufunc. If you want to go for completeness, you could do it for all numeric types. The easy way to do that is to use the typecodes in np.typecodes\n\n```\nIn [4]: np.typecodes\nOut[4]: \n{'All': '?bhilqpBHILQPefdgFDGSUVOMm',\n 'AllFloat': 'efdgFDG',\n 'AllInteger': 'bBhHiIlLqQpP',\n 'Character': 'c',\n 'Complex': 'FDG',\n 'Datetime': 'Mm',\n 'Float': 'efdg',\n 'Integer': 'bhilqp',\n 'UnsignedInteger': 'BHILQP'}\n```\n",
        "createdAt" : "2012-10-02T02:19:05Z",
        "updatedAt" : "2012-10-02T02:19:05Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "44633bc4-cef9-4831-bd9f-3330948b8fbd",
        "parentId" : "67985410-ac1a-4f56-8fa6-225aa51df9ae",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And if you do that and are working in the test directory you can run those tests by doing\n\n```\ncharris@f16 [tests (pull-477)]$ python test_ufunc.py\n```\n",
        "createdAt" : "2012-10-02T02:22:22Z",
        "updatedAt" : "2012-10-02T02:22:22Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8ffb486a825104362698f9738d1759a63251724",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1460,1464 @@            assert_equal(complex(x), 1+2j)\n\n    def test_complex_boolean_cast(self):\n        \"\"\"Ticket #2218\"\"\"\n        for tp in [np.csingle, np.cdouble, np.clongdouble]:"
  },
  {
    "id" : "3052cf17-9c82-426e-b498-662c35e7fb58",
    "prId" : 2886,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "886eb3eb-c885-43ab-b960-3a28de677d0c",
        "parentId" : null,
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "Well, `t` is one of:\n\n```\nIn [2]: np.typecodes['Complex']                                                \nOut[2]: 'FDG'\n```\n\nbut the original test was testing with `t=\"c8\"` (effectively). So why was testing for \"c8\" removed?\n",
        "createdAt" : "2013-01-05T19:21:48Z",
        "updatedAt" : "2013-01-05T19:21:48Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      },
      {
        "id" : "214d225e-6f6e-4fee-b876-90e462afaf0a",
        "parentId" : "886eb3eb-c885-43ab-b960-3a28de677d0c",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Its not removed `np.dtype('F') == np.dtype('c8')`.\n",
        "createdAt" : "2013-01-05T19:32:35Z",
        "updatedAt" : "2013-01-05T19:32:35Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "6c40cd53-80b3-4198-9f60-982ebadafd1a",
        "parentId" : "886eb3eb-c885-43ab-b960-3a28de677d0c",
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "Ah I see. All is ok then. Thanks!\n",
        "createdAt" : "2013-01-05T19:54:26Z",
        "updatedAt" : "2013-01-05T19:54:26Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2ca91791024f74dd4754fa9b811228abd1ce613",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1298,1302 @@    def test_byteswap_complex_scalar(self):\n        \"\"\"Ticket #1259 and gh-441\"\"\"\n        for dtype in [np.dtype('<'+t) for t in np.typecodes['Complex']]:\n            z = np.array([2.2-1.1j], dtype)\n            x = z[0] # always native-endian"
  },
  {
    "id" : "d2609641-9b91-4686-99b7-0d83833b1353",
    "prId" : 2886,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57a6e424-6ebf-4174-8146-d128b1d8d9fc",
        "parentId" : null,
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "So you changed `-1j` to `2.2-1.1j`, which seems ok to me.\n",
        "createdAt" : "2013-01-05T19:22:42Z",
        "updatedAt" : "2013-01-05T19:22:42Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2ca91791024f74dd4754fa9b811228abd1ce613",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1299,1303 @@        \"\"\"Ticket #1259 and gh-441\"\"\"\n        for dtype in [np.dtype('<'+t) for t in np.typecodes['Complex']]:\n            z = np.array([2.2-1.1j], dtype)\n            x = z[0] # always native-endian\n            y = x.byteswap()"
  },
  {
    "id" : "b05d430a-106b-48bf-b510-5461c31d4834",
    "prId" : 2886,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f2d52e5-f75c-4765-94c2-c81f857a9b62",
        "parentId" : null,
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "The rest of the changes here look ok to me.\n",
        "createdAt" : "2013-01-05T19:25:37Z",
        "updatedAt" : "2013-01-05T19:25:37Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2ca91791024f74dd4754fa9b811228abd1ce613",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1310,1314 @@            # double check real and imaginary parts:\n            assert_equal(x.real, y.real.byteswap())\n            assert_equal(x.imag, y.imag.byteswap())\n\n    def test_structured_arrays_with_objects1(self):"
  }
]