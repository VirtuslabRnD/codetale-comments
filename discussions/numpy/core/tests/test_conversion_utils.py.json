[
  {
    "id" : "99c240c0-13d0-4b1c-9052-090be204cc7b",
    "prId" : 16007,
    "prUrl" : "https://github.com/numpy/numpy/pull/16007#pullrequestreview-395934072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e19a457c-0195-4d04-8386-7fdaa97bdfa7",
        "parentId" : null,
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "this is a bit weird, why do we support partial matches, seems like it can cause confusion with user code when C can be used for order as well as mode.",
        "createdAt" : "2020-04-17T23:47:29Z",
        "updatedAt" : "2020-04-17T23:47:30Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "8816306b-ae76-4982-98e7-701331435ba1",
        "parentId" : "e19a457c-0195-4d04-8386-7fdaa97bdfa7",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I agree it's weird, but my goal of this PR was to test the behavior that's already present. I wouldnt be opposed to someone else championing for deprecations once this is in.",
        "createdAt" : "2020-04-18T06:16:45Z",
        "updatedAt" : "2020-04-18T06:16:46Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "d4ed10c0-7313-4f38-bada-08b6a86eab1c",
        "parentId" : "e19a457c-0195-4d04-8386-7fdaa97bdfa7",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Indeed, Every time I saw it, I thought it should be deprecated, but it also never felt super pressing. Which doesn't mean it shouldn't be done, just that I didn't particularly feel like actually doing it when stumbling over it :).",
        "createdAt" : "2020-04-18T17:31:13Z",
        "updatedAt" : "2020-04-18T17:31:14Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dac4d51713f14ab013ac68b9d72ee430d1f89e2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@    allow_bytes = True\n    case_insensitive = True\n    exact_match = False\n\n    def _check(self, val, expected):"
  },
  {
    "id" : "bbbb7213-a973-4ac8-a8fb-676f0d5482ba",
    "prId" : 16056,
    "prUrl" : "https://github.com/numpy/numpy/pull/16056#pullrequestreview-416839969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7726d6c1-481b-45f7-94fc-ad2be1785a2b",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Since this is a C api, it would be good to try making warnings errors, and catching that here too.",
        "createdAt" : "2020-05-19T16:06:54Z",
        "updatedAt" : "2020-06-05T19:40:32Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b864386d-6fac-4ac3-9f34-ea1e00d0e150",
        "parentId" : "7726d6c1-481b-45f7-94fc-ad2be1785a2b",
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "I think this is covered by the tests in `numpy/core/tests/test_deprecations.py` but it surfaces as ValueError instead of DeprecationWarning. I will look into why string_converter_helper does this.",
        "createdAt" : "2020-05-19T20:40:26Z",
        "updatedAt" : "2020-06-05T19:40:32Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "1de2eae0-5671-4be9-b04a-86931afc6c35",
        "parentId" : "7726d6c1-481b-45f7-94fc-ad2be1785a2b",
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "since `numpy/core/tests/test_deprecations.py` already covers raising warnings as errors, can we keep test_conversion_utils as it is ?",
        "createdAt" : "2020-05-19T23:52:14Z",
        "updatedAt" : "2020-06-05T19:40:32Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "b6bb820b-71d5-4ca8-b2a4-e514f44f7951",
        "parentId" : "7726d6c1-481b-45f7-94fc-ad2be1785a2b",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Sure, that's reasonable.",
        "createdAt" : "2020-05-22T11:28:13Z",
        "updatedAt" : "2020-06-05T19:40:32Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "e47680f850ec978be2959d372c964fdee49db9cc",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +25,29 @@        if self.warn:\n            with assert_warns(DeprecationWarning) as exc:\n                assert self.conv(val) == expected\n        else:\n            assert self.conv(val) == expected"
  }
]