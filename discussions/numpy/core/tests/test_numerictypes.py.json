[
  {
    "id" : "a0cceb90-b3f1-4eac-9506-9e7d6d9e557f",
    "prId" : 9434,
    "prUrl" : "https://github.com/numpy/numpy/pull/9434#pullrequestreview-51780267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07494b96-673a-4a42-8831-29d673862487",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Above here, I did not check that the classes are named `Test...` not sure it is important.",
        "createdAt" : "2017-07-24T14:12:03Z",
        "updatedAt" : "2017-07-24T19:00:48Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "bbe5e716-4f3f-4514-aae5-f72e38b5695e",
        "parentId" : "07494b96-673a-4a42-8831-29d673862487",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "OK, went over it to check for this quickly.",
        "createdAt" : "2017-07-24T14:48:08Z",
        "updatedAt" : "2017-07-24T19:00:48Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "69bc7b19d2a665c8301c3df07aee61fc469ff4e3",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +135,139 @@        # A small check that data is ok\n        assert_equal(h['z'], np.zeros((2, 3), dtype='u1'))\n\n\nclass TestCreateZerosPlain(CreateZeros):"
  },
  {
    "id" : "913114e3-64d3-428b-b184-a85c5c94f976",
    "prId" : 10151,
    "prUrl" : "https://github.com/numpy/numpy/pull/10151#pullrequestreview-287143189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b93fc56-5468-4b29-af77-15796943a939",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "OK, this may be silly, but can we add to the test:\r\n```\r\nfor t in numeric_types:\r\n    assert np.dtype(t.__name__).type is t\r\n```\r\nSince I think this is true with your changes (also then I do not have to check the above list manually for correctness).",
        "createdAt" : "2019-09-12T00:26:50Z",
        "updatedAt" : "2019-09-12T05:41:41Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "c499faa6-2293-44c8-b003-a2edfbdf7a03",
        "parentId" : "0b93fc56-5468-4b29-af77-15796943a939",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "That sounds like a good idea to me",
        "createdAt" : "2019-09-12T00:38:44Z",
        "updatedAt" : "2019-09-12T05:41:41Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa09f5efb9c067bb4a62ae7ac79d8d6afd39652e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +523,527 @@    def test_names_reflect_attributes(self, t):\n        \"\"\" Test that names correspond to where the type is under ``np.`` \"\"\"\n        assert getattr(np, t.__name__) is t\n\n    @pytest.mark.parametrize('t', numeric_types)"
  }
]