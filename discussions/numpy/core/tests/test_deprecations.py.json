[
  {
    "id" : "cb895bdb-4099-4114-99a5-7662c0855827",
    "prId" : 2812,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "664f5908-4128-484f-ab7e-5bd543de25e0",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Might add version when deprecation goes to error.\n",
        "createdAt" : "2012-12-13T23:13:47Z",
        "updatedAt" : "2012-12-15T02:08:07Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b452a045-1302-458e-9623-cae7b99aebaa",
        "parentId" : "664f5908-4128-484f-ab7e-5bd543de25e0",
        "authorId" : "9415464e-56b0-4431-b9ae-70706c24085c",
        "body" : "Hmm, is that settled yet? What do you think would be a good timeline? CC @njsmith @teoliphant @certik @rgommers\n",
        "createdAt" : "2012-12-13T23:21:25Z",
        "updatedAt" : "2012-12-15T02:08:08Z",
        "lastEditedBy" : "9415464e-56b0-4431-b9ae-70706c24085c",
        "tags" : [
        ]
      },
      {
        "id" : "c1288b1a-81fa-45d6-ba4c-68fd7e1abc4e",
        "parentId" : "664f5908-4128-484f-ab7e-5bd543de25e0",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Hard to put that as a version number, since we don't know if the version after 1.8 will be 6 months or 2 years after. I'd say 2 years is reasonable.\n",
        "createdAt" : "2012-12-14T19:18:27Z",
        "updatedAt" : "2012-12-15T02:08:10Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "e89e121d-1626-4793-9a4e-ad49a038e140",
        "parentId" : "664f5908-4128-484f-ab7e-5bd543de25e0",
        "authorId" : "9415464e-56b0-4431-b9ae-70706c24085c",
        "body" : "@rgommers Okay, I'll add a comment to that effect.\n",
        "createdAt" : "2012-12-15T02:02:42Z",
        "updatedAt" : "2012-12-15T02:08:10Z",
        "lastEditedBy" : "9415464e-56b0-4431-b9ae-70706c24085c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb0952d780fd0488c9ea872e33c0bf9d79fe7607",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@\n    I interpret this to mean 2 years after the 1.8 release.\n    \"\"\"\n    def setUp(self):\n        warnings.filterwarnings(\"error\", message=\"non-integer scalar index\","
  },
  {
    "id" : "5a625f83-09a9-4387-901b-e421d612b0cb",
    "prId" : 4700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31106ef6-57ad-4d5d-8b0b-219d026c80a4",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "python 2.6 can do nested context managers I think, so this could be added to the warnings context above\n",
        "createdAt" : "2014-05-11T23:26:54Z",
        "updatedAt" : "2014-05-12T17:17:40Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c63e8c7b05a18057cab92da652dda5644910eb3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +455,459 @@            assert_raises(FutureWarning, np.not_equal, a, a)\n            # And the other do not warn:\n            with np.errstate(invalid='ignore'):\n                np.less(a, a)\n                np.greater(a, a)"
  },
  {
    "id" : "74b285f7-ff41-4450-898d-2a09a0148bf9",
    "prId" : 6791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18291755-d8a2-47ae-8140-bee11f43d8c5",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "I guess we should probably go the extra step and also add\n\n```\ndef f():\n    warnings.warn(\"foo\", category=DeprecationWarning)\ntest_case_instance.assert_deprecated(f)\n```\n",
        "createdAt" : "2015-12-10T00:52:17Z",
        "updatedAt" : "2015-12-12T05:37:41Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "7747c3a88cb0cad5687093d1345efcb2743fc1d5",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +407,411 @@        assert_raises(AssertionError,\n                      test_case_instance.assert_deprecated,\n                      lambda: None)\n\n        def foo():"
  },
  {
    "id" : "68478e9d-8263-4146-af13-525b83406678",
    "prId" : 7337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e393b743-9b99-4345-93a0-348c6c6f1e52",
        "parentId" : null,
        "authorId" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "body" : "Should I add some sort of explanation here? This should only be in 1.11.x, but I don't know if that is something people want or what the one line/sentence answer would be here.\n",
        "createdAt" : "2016-02-25T15:20:01Z",
        "updatedAt" : "2016-02-25T15:20:01Z",
        "lastEditedBy" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "tags" : [
        ]
      },
      {
        "id" : "ee2be81a-4941-407c-b60e-687212f3524b",
        "parentId" : "e393b743-9b99-4345-93a0-348c6c6f1e52",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could note the github discussion but probably not worth the effort.\n",
        "createdAt" : "2016-02-25T15:34:51Z",
        "updatedAt" : "2016-02-25T15:34:51Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "7596211b-1712-4d7d-9759-261962b42909",
        "parentId" : "e393b743-9b99-4345-93a0-348c6c6f1e52",
        "authorId" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "body" : "Alright, I'll leave it then. I did make note of it in the commit message. If you thinking the wording needs tweaking, let me know.\n",
        "createdAt" : "2016-02-25T16:53:23Z",
        "updatedAt" : "2016-02-25T16:53:23Z",
        "lastEditedBy" : "5b1b830f-f632-422e-a2fc-f6d019a6f5d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f552f8546ffe31be49e88936757b0471c685d0dd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +742,746 @@\n    @dec.skipif(not _has_pytz, \"The pytz module is not available.\")\n    @dec.knownfailureif(sys.version_info[0:2] < (2, 7))\n    def test_datetime(self):\n        tz = pytz.timezone('US/Eastern')"
  },
  {
    "id" : "9d57fc8e-5856-4b9a-845d-32c0f992bbc9",
    "prId" : 8198,
    "prUrl" : "https://github.com/numpy/numpy/pull/8198#pullrequestreview-5366617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b535a3e-bcb4-4a58-b582-cf671eefd9c0",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Want this:\n\n```\n        with warnings.catch_warnings():\n            warnings.filterwarnings('always', '', FutureWarning)\n            assert_warns(FutureWarning, np.add.accumulate, [1], keepdims=True)\n```\n",
        "createdAt" : "2016-10-22T21:56:09Z",
        "updatedAt" : "2016-10-23T01:46:13Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "90befc3c-3fb3-4714-a5c4-93578ae1fd55",
        "parentId" : "2b535a3e-bcb4-4a58-b582-cf671eefd9c0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Done\n",
        "createdAt" : "2016-10-23T15:18:42Z",
        "updatedAt" : "2016-10-23T15:18:42Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b9e7ee0d5b614fb312052feae98abdd8801ba7a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +636,640 @@    Deprecate the keepdims argument to np.ufunc.accumulate, which was never used or documented\n    \"\"\"\n    def test_keepdims(self):\n        with warnings.catch_warnings():\n            warnings.filterwarnings('always', '', FutureWarning)"
  },
  {
    "id" : "584bc47e-267f-469b-94dd-d4a728fd052c",
    "prId" : 11405,
    "prUrl" : "https://github.com/numpy/numpy/pull/11405#pullrequestreview-130984203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4737a705-c6a1-4a61-80cb-13fbcbfe00eb",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "More accurate would be \"The empty list is cast to float64\", I think?",
        "createdAt" : "2018-06-21T20:33:30Z",
        "updatedAt" : "2018-06-21T20:33:30Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6b6a77dd-6af3-46aa-a587-5620dd578471",
        "parentId" : "4737a705-c6a1-4a61-80cb-13fbcbfe00eb",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "True, but not quite worth rerunning the whole test suite...",
        "createdAt" : "2018-06-21T20:40:26Z",
        "updatedAt" : "2018-06-21T20:40:26Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "77cc1609b5d7446d6c1b2d68d4ff779d107d2f69",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +191,195 @@        assert_raises(ValueError, lambda x, y: x == y, a, b)\n\n        # The empty list is not cast to string, and this used to pass due\n        # to dtype mismatch; now (2018-06-21) it correctly leads to a\n        # FutureWarning."
  },
  {
    "id" : "316e116f-21ef-4d56-baac-70790b1ae3ea",
    "prId" : 11916,
    "prUrl" : "https://github.com/numpy/numpy/pull/11916#pullrequestreview-157923083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a115a94a-7713-445f-8987-01ec4bd6c5fb",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can you test the python-side function here too? Calling it with `{}` should be a no-op",
        "createdAt" : "2018-09-22T21:19:05Z",
        "updatedAt" : "2018-11-10T00:44:47Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8d9cf2f5-653e-4f4a-bc03-f944dbdbc00c",
        "parentId" : "a115a94a-7713-445f-8987-01ec4bd6c5fb",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "ok",
        "createdAt" : "2018-09-22T21:42:00Z",
        "updatedAt" : "2018-11-10T00:44:47Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "08a2e4503de155f2e202bc154287b34220ad1025",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +529,533 @@    def test_get_numeric_ops(self):\n        from numpy.core._multiarray_tests import getset_numericops\n        self.assert_deprecated(getset_numericops, num=2)\n        \n        # empty kwargs prevents any state actually changing which would break"
  },
  {
    "id" : "3d51faee-0378-4f8b-8985-b6385b1ad099",
    "prId" : 13326,
    "prUrl" : "https://github.com/numpy/numpy/pull/13326#pullrequestreview-239692392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86db28bc-32b8-4aa9-a573-b50b4b825341",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I assume we never made a FutureDeprecationTestCase...",
        "createdAt" : "2019-05-20T16:18:07Z",
        "updatedAt" : "2019-05-24T21:46:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0289a218-fd32-419f-a5b2-64a2be985abc",
        "parentId" : "86db28bc-32b8-4aa9-a573-b50b4b825341",
        "authorId" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "body" : "grepping doesn't give anything",
        "createdAt" : "2019-05-20T19:53:17Z",
        "updatedAt" : "2019-05-24T21:46:57Z",
        "lastEditedBy" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad1e0600e45b9fa71096d0a0f10c1474e003f373",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +537,541 @@\nclass TestShape1Fields(_DeprecationTestCase):\n    warning_cls = FutureWarning\n\n    # 2019-05-20, 1.17.0"
  },
  {
    "id" : "aa3a7ce8-4f82-468b-a7a2-4a1c0545f8fa",
    "prId" : 14800,
    "prUrl" : "https://github.com/numpy/numpy/pull/14800#pullrequestreview-308842229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67bcffe7-69e4-4f0b-a361-cd473e5e63ed",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "This now returns an object array instead of deprecating.",
        "createdAt" : "2019-10-29T21:20:46Z",
        "updatedAt" : "2019-10-30T09:45:22Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "9aa8c4756d7282dd49a7093ce7a6725258106b9a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +177,181 @@            b = np.array([1, np.array([1,2,3])], dtype=object)\n            res = op(a, b)\n            assert res.dtype == 'object'\n\n    def test_string(self):"
  },
  {
    "id" : "d645dba9-85b8-4ed3-ba98-e530f2782f25",
    "prId" : 14800,
    "prUrl" : "https://github.com/numpy/numpy/pull/14800#pullrequestreview-310246623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02ede608-502b-42ab-b06b-0f1176e58a2b",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```suggestion\r\n            assert res.dtype == object\r\n```",
        "createdAt" : "2019-11-01T00:34:46Z",
        "updatedAt" : "2019-11-01T00:34:46Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9aa8c4756d7282dd49a7093ce7a6725258106b9a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +177,181 @@            b = np.array([1, np.array([1,2,3])], dtype=object)\n            res = op(a, b)\n            assert res.dtype == 'object'\n\n    def test_string(self):"
  },
  {
    "id" : "d65ca85c-6e3f-4fa0-9f7e-4d41492d2922",
    "prId" : 15900,
    "prUrl" : "https://github.com/numpy/numpy/pull/15900#pullrequestreview-413889477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aee7ea3b-4503-45ab-ae43-8c528c5ebdd2",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "It transpires that I am apparently blind",
        "createdAt" : "2020-05-18T19:44:37Z",
        "updatedAt" : "2020-05-27T15:58:32Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "381a2f5ab22bf1b84870ec4dfb1ee04327faf918",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +644,648 @@        index = ([[3], [2]], [])  # broadcast to an empty result.\n        self.assert_not_deprecated(arr.__getitem__, args=(index,))\n        self.assert_not_deprecated(arr.__setitem__,\n                                   args=(index, np.empty((2, 0, 2))))"
  },
  {
    "id" : "db2c87a8-11f6-4ce8-a627-e02c4ed69c60",
    "prId" : 16554,
    "prUrl" : "https://github.com/numpy/numpy/pull/16554#pullrequestreview-428253749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a18aa100-0a3a-4ce0-86ca-d4e3f1bd5f5a",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Or\r\n```suggestion\r\n        deprecated_types.append(np.dtype(np.uintp).name.title())\r\n```",
        "createdAt" : "2020-06-10T16:46:43Z",
        "updatedAt" : "2020-06-10T16:48:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "bbe0b8ad-2da9-4c34-8e16-206c331789e6",
        "parentId" : "a18aa100-0a3a-4ce0-86ca-d4e3f1bd5f5a",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Looks nicer, I am a bit uncertain about locales here since the other code used `english_upper` everywere?",
        "createdAt" : "2020-06-10T16:50:50Z",
        "updatedAt" : "2020-06-10T16:50:50Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "36d0ddba-a8c6-49d2-9606-b227473ecd13",
        "parentId" : "a18aa100-0a3a-4ce0-86ca-d4e3f1bd5f5a",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Good point, safer to leave it as is.",
        "createdAt" : "2020-06-10T16:57:09Z",
        "updatedAt" : "2020-06-10T16:57:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e6cfcd0053da01ea9b9725da88049a8debe0807",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +321,325 @@        deprecated_types = ['Bytes0', 'Datetime64', 'Str0']\n        # Depending on intp size, either Uint32 or Uint64 is defined:\n        deprecated_types.append(f\"U{np.dtype(np.intp).name}\")\n        for dt in deprecated_types:\n            self.assert_deprecated(np.dtype, exceptions=(TypeError,),"
  }
]