[
  {
    "id" : "76d0d4fb-77d4-40b8-8281-0b9fabcd992a",
    "prId" : 3790,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c245c8ec-5941-45e1-b597-1707fc8c5142",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Are the sizes right way around?\n",
        "createdAt" : "2013-09-23T22:59:26Z",
        "updatedAt" : "2013-09-23T22:59:26Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bdc12b9b-bace-45b7-a713-933f24ee03eb",
        "parentId" : "c245c8ec-5941-45e1-b597-1707fc8c5142",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "an sse vector can hold 4 floats and 2 doubles so one needs to test more cases with floats, e.g. 0 1, 2, 3 elements must be peeled vs 0, 1 elements.\nIts a little paranoid as if 1 unaligned work the rest probably does too (especially as they all use the same loop primitives). Might be one of the improvements for _gen_alignment_data later.\n",
        "createdAt" : "2013-09-23T23:02:30Z",
        "updatedAt" : "2013-09-23T23:02:30Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "66f135f1-e70c-4517-bdd0-7857aea67889",
        "parentId" : "c245c8ec-5941-45e1-b597-1707fc8c5142",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "its + 1 because I think gen_alignment_data does not always return the right size, I should fix that too at some point :)\n",
        "createdAt" : "2013-09-23T23:03:07Z",
        "updatedAt" : "2013-09-23T23:03:07Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d3a94f41b7e3c661eceed2f26ba6cce362ba4f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +673,677 @@        # simd tests on max/min, test all alignments, slow but important\n        # for 2 * vz + 2 * (vs - 1) + 1 (unrolled once)\n        for dt, sz in [(np.float32, 15), (np.float64, 7)]:\n            for out, inp, msg in _gen_alignment_data(dtype=dt, type='unary',\n                                                     max_size=sz):"
  },
  {
    "id" : "c5213bc1-7395-4cd8-b930-21eaad369905",
    "prId" : 3790,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a173a40-3c2e-4a93-8df6-e84375af2cd8",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Same question about sizes. What am I missing?\n",
        "createdAt" : "2013-09-23T23:00:15Z",
        "updatedAt" : "2013-09-23T23:00:15Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d3a94f41b7e3c661eceed2f26ba6cce362ba4f",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +693,697 @@    def test_abs_blocked(self):\n        # simd tests on abs, test all alignments for vz + 2 * (vs - 1) + 1\n        for dt, sz in [(np.float32, 11), (np.float64, 5)]:\n            for out, inp, msg in _gen_alignment_data(dtype=dt, type='unary',\n                                                     max_size=sz):"
  }
]