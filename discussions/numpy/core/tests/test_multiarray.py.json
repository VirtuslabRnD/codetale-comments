[
  {
    "id" : "1e00b5f4-fc57-4095-9a0f-9e963ea37204",
    "prId" : 3107,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa458d4c-ced9-4d34-a0cb-562c608b4b10",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "It would really help readability if there were blank lines between the various sub-tests.\n",
        "createdAt" : "2013-03-13T04:27:09Z",
        "updatedAt" : "2013-08-17T16:30:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ea9399fb-3068-4f1d-9e28-5e214802b83d",
        "parentId" : "aa458d4c-ced9-4d34-a0cb-562c608b4b10",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And so on down the line.\n",
        "createdAt" : "2013-03-13T04:27:43Z",
        "updatedAt" : "2013-08-17T16:30:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4674b9ee89a641f3b9da2296079a6ed2167e1d8c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +901,905 @@        b = a.searchsorted([0, 1, 2], 'l')\n        assert_equal(b, [0, 0, 0])\n        b = a.searchsorted([0, 1, 2], 'r')\n        assert_equal(b, [0, 0, 0])\n        a = np.ones(1)"
  },
  {
    "id" : "39d82867-61a7-4652-b3f0-15f7c97640e3",
    "prId" : 3415,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc4c58da-2fc5-4be9-9ced-e3be8444466c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "@seberg With your work, the mutual exclusion of `f_contiguous` and `c_contiguous` looks wrong here. Thoughts?\n",
        "createdAt" : "2013-06-09T00:21:37Z",
        "updatedAt" : "2013-06-09T00:21:37Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9b76d04f-f3e5-422c-9703-8945a6749be7",
        "parentId" : "cc4c58da-2fc5-4be9-9ced-e3be8444466c",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Doesn't matter here really, the arrays being tested cannot be both.\n",
        "createdAt" : "2013-06-09T10:32:21Z",
        "updatedAt" : "2013-06-09T10:32:21Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "c1506b7d-7db1-426b-bc61-b0b8f4d43692",
        "parentId" : "cc4c58da-2fc5-4be9-9ced-e3be8444466c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Doh! Thanks.\n",
        "createdAt" : "2013-06-09T14:35:41Z",
        "updatedAt" : "2013-06-09T14:35:41Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e7f40e97cae555f0446da99180525a8d259d81",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +647,651 @@            assert_(arr.flags.fortran)\n            assert_(arr.flags.f_contiguous)\n            assert_(not arr.flags.c_contiguous)\n\n        def assert_c(arr):"
  },
  {
    "id" : "b116fccc-fc39-4567-9d65-dd3e714a368c",
    "prId" : 3790,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6bbe978-5625-4abc-a8e3-7a016e1fe438",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Do we still need `d.sum()` and `count_non_zero(d)` ?\n",
        "createdAt" : "2013-09-23T23:02:43Z",
        "updatedAt" : "2013-09-23T23:02:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e5038a89-f297-4b11-96c7-bbd773596bc8",
        "parentId" : "e6bbe978-5625-4abc-a8e3-7a016e1fe438",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "not really, but in this case its fast so I though why not.\n",
        "createdAt" : "2013-09-23T23:03:46Z",
        "updatedAt" : "2013-09-23T23:03:46Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d3a94f41b7e3c661eceed2f26ba6cce362ba4f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +449,453 @@            assert_equal(np.count_nonzero(d), 0)\n            assert_equal(d.sum(), 0)\n            assert_(not d.any())\n\n            d = np.zeros(2, dtype='4i4')"
  },
  {
    "id" : "ce80e1b6-f312-41d3-ad49-6c0d0c779e58",
    "prId" : 4178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d802424e-61b7-4db3-b0ed-b1dae5563198",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Need to break these lines at some point.\n",
        "createdAt" : "2014-01-09T03:42:01Z",
        "updatedAt" : "2014-01-09T03:42:01Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "73f376209737f131b7361fe0be925cca0dae78b5",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +3371,3375 @@        sz = sum([dtype(b).itemsize for a, b in dt])\n        if dtype('l').itemsize == 4:\n            assert_equal(y.format, 'T{b:a:=h:b:i:c:l:d:q:dx:B:e:@H:f:=I:g:L:h:Q:hx:f:i:d:j:^g:k:=Zf:ix:Zd:jx:^Zg:kx:4s:l:=4w:m:3x:n:?:o:@e:p:}')\n        else:\n            assert_equal(y.format, 'T{b:a:=h:b:i:c:q:d:q:dx:B:e:@H:f:=I:g:Q:h:Q:hx:f:i:d:j:^g:k:=Zf:ix:Zd:jx:^Zg:kx:4s:l:=4w:m:3x:n:?:o:@e:p:}')"
  },
  {
    "id" : "2add5a6f-fc14-45a7-9304-26e988df371c",
    "prId" : 5636,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9110d433-708f-47d5-83cc-0b796d066359",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "assert_warns is probably a bit nicer (no need for the local collect warnings), but we can put that off to another time.\n",
        "createdAt" : "2015-06-13T10:29:07Z",
        "updatedAt" : "2015-06-17T17:51:55Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "2ed3fe2a-91fb-4dc0-a9e4-40d35c21de4d",
        "parentId" : "9110d433-708f-47d5-83cc-0b796d066359",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "I'll leave it for another time. I was just fixing >80 char lines that were bugging me here.\n",
        "createdAt" : "2015-06-13T17:09:15Z",
        "updatedAt" : "2015-06-17T17:51:55Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c1a13dea6a7e189675977ad65ea230ce4816061",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +3586,3590 @@        # All the different functions raise a warning, but not an error, and\n        # 'a' is not modified:\n        assert_equal(collect_warnings(a[['f1', 'f2']].__setitem__, 0, (10, 20)),\n                     [FutureWarning])\n        assert_equal(a, b)"
  },
  {
    "id" : "3fc34e78-9df1-4435-9220-490afee80fb3",
    "prId" : 5636,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17baa02d-5304-425e-b597-a180e637b07e",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Wow, but it makes sense, why not have no fields if you have a size.... Spaces after \":\" though ;).\n",
        "createdAt" : "2015-06-13T10:29:14Z",
        "updatedAt" : "2015-06-17T17:51:55Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c1a13dea6a7e189675977ad65ea230ce4816061",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +3617,3621 @@\n    def test_empty_structure_creation(self):\n        # make sure these do not raise errors (gh-5631)\n        array([()], dtype={'names': [], 'formats': [],\n                           'offsets': [], 'itemsize': 12})"
  },
  {
    "id" : "5b3f661a-900e-4e77-9d40-b6a5b0dc757b",
    "prId" : 5704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9949e83-4309-4ff7-935e-8690f61b30df",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I like the `msg =` form better, but this is OK. \n",
        "createdAt" : "2015-03-21T18:53:01Z",
        "updatedAt" : "2015-03-21T18:53:01Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd30b50a5125da8fa037220e0161ce1ce3ddec0c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1216,1220 @@            assert_equal(np.argsort(a, axis=axis),\n                         np.zeros_like(a, dtype=np.intp),\n                         'test empty array argsort with axis={}'.format(axis))\n        assert_equal(np.argsort(a, axis=None),\n                     np.zeros_like(a.ravel(), dtype=np.intp),"
  },
  {
    "id" : "24d03e7c-5a75-42d3-b05b-fdfc572e477e",
    "prId" : 6242,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc6711d8-6dbe-470e-a0ec-ae940ea3b178",
        "parentId" : null,
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "Could you add the unicode test you showed in the comments here, for Python 3 versions only?\n",
        "createdAt" : "2015-08-25T13:52:01Z",
        "updatedAt" : "2015-08-25T14:45:23Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbca4cb6ecbec22fba097ad0d6dfb1e1f39f8ef6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +3563,3567 @@\n    if sys.version_info[0] >= 3:\n        def test_bytes_fields(self):\n            # Bytes are not allowed in field names and not recognized in titles\n            # on Py3"
  }
]