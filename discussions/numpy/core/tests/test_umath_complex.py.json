[
  {
    "id" : "0c983560-e2c5-4fb2-86c4-2769d9d7023f",
    "prId" : 10859,
    "prUrl" : "https://github.com/numpy/numpy/pull/10859#pullrequestreview-110290401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee63d865-3d31-428c-aabb-28d71d4b177b",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Really beyond the PR, but here and below, I think the following is clearer (no \"double negatives\")\r\n```\r\nassert np.isinf(z.real) and np.isnan(z.imag), msgform % (z.real, z.imag)\r\n```\r\n",
        "createdAt" : "2018-04-08T00:29:25Z",
        "updatedAt" : "2018-04-08T15:03:31Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "c341ab77-f74a-4924-a361-f7b62f65f759",
        "parentId" : "ee63d865-3d31-428c-aabb-28d71d4b177b",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yep, the `test_umath_complex.py` module could use a major refactoring. I sort of started down that road before stopping myself :)",
        "createdAt" : "2018-04-08T15:03:00Z",
        "updatedAt" : "2018-04-08T15:03:31Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "17ec2b61-5772-458d-be6d-59c237b2e768",
        "parentId" : "ee63d865-3d31-428c-aabb-28d71d4b177b",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Note that the functions were created so that they could be used with the previous `yield` statement.",
        "createdAt" : "2018-04-08T15:07:54Z",
        "updatedAt" : "2018-04-08T15:07:54Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "313df463392352b6e31c512216da722b5cc31309",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +105,109 @@            with np.errstate(invalid='ignore'):\n                z = f(np.array(complex(np.inf, np.nan)))\n                if not np.isinf(z.real) or not np.isnan(z.imag):\n                    raise AssertionError(msgform % (z.real, z.imag))\n"
  }
]