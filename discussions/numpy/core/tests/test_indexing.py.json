[
  {
    "id" : "0429e6ab-7297-49d6-9a6d-67e01c439304",
    "prId" : 4109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe5db934-5f26-4e42-8569-8028ca71c996",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is that documented anywhere? Or was it previous behavior?\n",
        "createdAt" : "2013-12-19T14:17:19Z",
        "updatedAt" : "2013-12-19T14:49:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9e91b4cf-673a-4da0-a1c9-d19707fcf277",
        "parentId" : "fe5db934-5f26-4e42-8569-8028ca71c996",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Actually, this is just \"documenting\" current behaviour, the PR didn't change it.\n",
        "createdAt" : "2013-12-19T14:23:07Z",
        "updatedAt" : "2013-12-19T14:49:50Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "564cf224-a2e0-42c2-b835-f729ca0431bf",
        "parentId" : "fe5db934-5f26-4e42-8569-8028ca71c996",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Interesting, my commit message claims otherwise... Will double check.\n",
        "createdAt" : "2013-12-19T14:29:09Z",
        "updatedAt" : "2013-12-19T14:49:50Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "c488b575-8c71-4eb3-b131-2ad0b7202431",
        "parentId" : "fe5db934-5f26-4e42-8569-8028ca71c996",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Actually, it is more complicating... This does change behaviour. `a['a']` was never made a scalar, but `a[['a']]` always was. This changes that `a[['a']]` is not made a scalar either (so the test in its current form doesn't test the change). This is all because apparently a string is an ellipsis, but a sequence of strings isn't ;). But I think this is right, postprocessing field access seems weird to me. Unless you argue that it is a behaviour change in a minor release, even if the behaviour doesn't make sense.\n",
        "createdAt" : "2013-12-19T14:43:19Z",
        "updatedAt" : "2013-12-19T14:49:50Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e607806f9996ca7dfb031b168c26d856ad7b0bee",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +154,158 @@    def test_scalar_return_type(self):\n        # Field access on an array should return an array, even if it\n        # is 0-d.\n        a = np.zeros((), [('a','f8')])\n        assert_(isinstance(a['a'], np.ndarray))"
  },
  {
    "id" : "f7f6ceb9-7304-4e91-9725-a20879f00b70",
    "prId" : 6245,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0a14ba2-ae61-4352-bd2f-6a7c99000751",
        "parentId" : null,
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "Wouldn't it make sense to use `C` instead of `4` here, like you do in the definition of `ind`?\n",
        "createdAt" : "2015-08-26T04:49:12Z",
        "updatedAt" : "2015-08-26T09:10:18Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      },
      {
        "id" : "195c972f-04ce-48da-8cec-43ad3642f5a1",
        "parentId" : "a0a14ba2-ae61-4352-bd2f-6a7c99000751",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Just put in the 4, the C makes some sense when looking at the issue (and may really be an easy way to get the right array size), but I guess there is no big point here\n",
        "createdAt" : "2015-08-26T09:10:20Z",
        "updatedAt" : "2015-08-26T09:10:20Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "4bc18806-3fda-4558-ad4d-ba9b21dbc690",
        "parentId" : "a0a14ba2-ae61-4352-bd2f-6a7c99000751",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "`C`? We don't need no stinkin' `C`;\n",
        "createdAt" : "2015-08-26T13:13:22Z",
        "updatedAt" : "2015-08-26T13:13:22Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "c10106ca-33a8-4d4f-98b7-5411b99cd0ae",
        "parentId" : "a0a14ba2-ae61-4352-bd2f-6a7c99000751",
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "For the record, with `4`s everywhere it also LGTM.\n",
        "createdAt" : "2015-08-26T14:05:48Z",
        "updatedAt" : "2015-08-26T14:05:48Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      }
    ],
    "commit" : "f30f986b439c7da621ea6402b4f883e28f05a5d4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +417,421 @@        assert_array_equal(x[ind], x[ind.copy()])\n        # higher dimensional advanced index\n        zind = np.zeros(4, dtype=np.intp)\n        assert_array_equal(x2[ind, zind], x2[ind.copy(), zind])\n"
  },
  {
    "id" : "e760586a-af21-435c-9913-d720f6d2616f",
    "prId" : 7565,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "228bfdfa-0f92-49bb-95a4-0e18b1521b2d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "A note that this is a check for running in a debug version of Python would be helpful.\n",
        "createdAt" : "2016-05-07T19:11:32Z",
        "updatedAt" : "2016-05-07T19:11:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "afe2f5a30ebdb2654c21e40428a818cebb1180b2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +17,21 @@try:\n    cdll = None\n    if hasattr(sys, 'gettotalrefcount'):\n        try:\n            cdll = np.ctypeslib.load_library('multiarray_d', np.core.multiarray.__file__)"
  }
]