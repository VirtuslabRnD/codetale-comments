[
  {
    "id" : "51adf472-d304-4103-9f1a-02843c61dc51",
    "prId" : 6264,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64255316-d2a2-443b-bf85-76d7607db1df",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Heh, I didn't expect that, I would have expected an error. I assume what is being checked is that `,` is not handled as the radix character?\n",
        "createdAt" : "2015-08-28T21:31:54Z",
        "updatedAt" : "2015-08-28T22:59:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "8b46a287-d02f-4f93-898b-94374de09a34",
        "parentId" : "64255316-d2a2-443b-bf85-76d7607db1df",
        "authorId" : "893309f4-990a-4044-a151-a4db234ccb11",
        "body" : "That's how fromstring normally \"handles\" invalid input. But if , is the decimal marker in your locale and you're in python 2.6 and you don't have strtold_l, as @pv points out, you don't get the 1 either. \n",
        "createdAt" : "2015-08-28T22:57:24Z",
        "updatedAt" : "2015-08-28T22:59:27Z",
        "lastEditedBy" : "893309f4-990a-4044-a151-a4db234ccb11",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53a7b09fef45fbba235fcb29c160328aad02680",
    "line" : null,
    "diffHunk" : "@@ -1,1 +84,88 @@@in_foreign_locale\ndef test_fromstring_best_effort_float():\n    assert_equal(np.fromstring(\"1,234\", dtype=float, sep=\" \"),\n                 np.array([1.]))\n"
  }
]