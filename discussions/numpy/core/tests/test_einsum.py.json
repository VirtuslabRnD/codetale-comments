[
  {
    "id" : "9b180fa5-fe6d-4fa1-943f-1209d847507b",
    "prId" : 14693,
    "prUrl" : "https://github.com/numpy/numpy/pull/14693#pullrequestreview-304234577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e5dfa1d-2745-472f-be55-b2e39f0b0b6c",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Maybe (please check locally before pushing)\r\n```\r\nx = np.einsum('ijij->', tensor)\r\ny = tensor.trace(axis1=0, axis2=2).trace()\r\nassert_equal(x, y)\r\n```",
        "createdAt" : "2019-10-19T20:55:08Z",
        "updatedAt" : "2019-10-19T22:33:59Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "520852b5-5c36-4cb4-9420-1149a2208030",
        "parentId" : "5e5dfa1d-2745-472f-be55-b2e39f0b0b6c",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "With floating point, you can't be sure that `x` and `y` will be *exactly* equal.  Use `assert_allclose` with an appropriately small tolerance, or use an integer array for `tensor` (assuming the test doesn't actually depend on the data type of the array).",
        "createdAt" : "2019-10-19T21:14:33Z",
        "updatedAt" : "2019-10-19T22:33:59Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      },
      {
        "id" : "2c3f1d86-971b-42e1-98da-d44847ed7de3",
        "parentId" : "5e5dfa1d-2745-472f-be55-b2e39f0b0b6c",
        "authorId" : "853df835-c8c8-466e-a368-8d2c49a415d4",
        "body" : "Done; tested on x86_64, power9, and s390x; and pushed.",
        "createdAt" : "2019-10-19T23:02:20Z",
        "updatedAt" : "2019-10-19T23:02:20Z",
        "lastEditedBy" : "853df835-c8c8-466e-a368-8d2c49a415d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "263f6169339686e723d645c60ae5ea9fe87c7e9d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +708,712 @@        y = tensor.trace(axis1=0, axis2=2).trace()\n        assert_allclose(x, y)\n\n    def test_einsum_all_contig_non_contig_output(self):\n        # Issue gh-5907, tests that the all contiguous special case"
  }
]