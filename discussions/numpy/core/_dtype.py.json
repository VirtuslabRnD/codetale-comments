[
  {
    "id" : "928e8430-b044-43d3-a048-a804cda9d30c",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-147468559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2ce3194-de16-45a9-af4f-acb4ac1f8ef1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there a better way to get hold of these?",
        "createdAt" : "2018-02-16T04:57:37Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0a8491b9-9255-489a-8ce6-fd98e3702531",
        "parentId" : "b2ce3194-de16-45a9-af4f-acb4ac1f8ef1",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "There is `np.little_endian`or `sys.byteorder`, but then you have to decide '<' or '>' yourself.",
        "createdAt" : "2018-08-19T19:34:56Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@    # hack to obtain the native and swapped byte order characters\n    swapped = np.dtype(int).newbyteorder('s')\n    native = swapped.newbyteorder('s')\n\n    byteorder = dtype.byteorder"
  },
  {
    "id" : "58a23378-21d5-4dbf-ab7b-1544286912eb",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-97083231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "864c086c-f1fd-43b9-8927-4b41d53763a1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think we should add this as `dtype.ispacked` in another PR",
        "createdAt" : "2018-02-16T04:58:08Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +220,224 @@    dtype parameters.\n\n    Duplicates the C `is_dtype_struct_simple_unaligned_layout` functio.\n    \"\"\"\n    total_offset = 0"
  },
  {
    "id" : "af54316a-8b90-4a33-bfb9-5203ec0ff9c6",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-147499408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f3d467b-e648-46cb-87fa-68391dfe82c1",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "This line not hit in tests, see [coverage](https://codecov.io/gh/numpy/numpy/commit/73e328c9c9c4729c28f0f2dec407aed168b5fbdf#D3-15)",
        "createdAt" : "2018-08-19T19:10:15Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "f201769b-767b-4d55-8648-eeb632187061",
        "parentId" : "0f3d467b-e648-46cb-87fa-68391dfe82c1",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Test added",
        "createdAt" : "2018-08-20T04:40:49Z",
        "updatedAt" : "2018-08-20T04:40:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@        return _struct_str(dtype, include_align=True)\n    elif dtype.subdtype:\n        return _subarray_str(dtype)\n    elif issubclass(dtype.type, np.flexible) or not dtype.isnative:\n        return dtype.str"
  },
  {
    "id" : "72566637-f0e3-4725-8022-ca8f960f914d",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-165929754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "169b5771-fc81-47cc-98b9-9b350b0247b2",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Previously this caught subclasses of void too. Do we actually want that behavior?",
        "createdAt" : "2018-10-18T05:33:12Z",
        "updatedAt" : "2018-10-18T05:33:12Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@            return \"'%sU%d'\" % (byteorder, dtype.itemsize / 4)\n\n    elif dtype.type == np.void:\n        if _isunsized(dtype):\n            return \"'V'\""
  },
  {
    "id" : "4a4de3c8-f35a-46ee-99ab-3f2912d06a5d",
    "prId" : 11932,
    "prUrl" : "https://github.com/numpy/numpy/pull/11932#pullrequestreview-154479446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98ceb67e-6fa7-457d-a466-884ef27c419c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This line blocks #10151, but so did the equivalent C code",
        "createdAt" : "2018-09-12T04:20:10Z",
        "updatedAt" : "2018-09-12T04:56:29Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cba7ca56aa83ce222b40dbfbb12f696d1a4ab75",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +307,311 @@\n    # Builtin classes are documented as returning a \"bit name\"\n    name = dtype.type.__name__\n\n    # handle bool_, str_, etc"
  },
  {
    "id" : "d2277e2d-902d-49dd-8bb4-1da2408ae552",
    "prId" : 11932,
    "prUrl" : "https://github.com/numpy/numpy/pull/11932#pullrequestreview-154482548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60cfcbb7-3cc0-4f57-9495-8532041c1220",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "@charris: As predicted, the assumption that a byte is 8 bits is pretty ingrained into our dtype string handling",
        "createdAt" : "2018-09-12T04:45:10Z",
        "updatedAt" : "2018-09-12T04:56:29Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cba7ca56aa83ce222b40dbfbb12f696d1a4ab75",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +315,319 @@    # append bit counts to str, unicode, and void\n    if np.issubdtype(dtype, np.flexible) and not _isunsized(dtype):\n        name += \"{}\".format(dtype.itemsize * 8)\n\n    # append metadata to datetimes"
  },
  {
    "id" : "48565a4c-d322-4dc7-9089-b54d80a77da8",
    "prId" : 12179,
    "prUrl" : "https://github.com/numpy/numpy/pull/12179#pullrequestreview-165919014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d159324-34ee-4860-a096-6629fcdfd604",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This part is not coverable without a third-party dtype that has a weird `kind`, which we don't have available.",
        "createdAt" : "2018-10-16T13:16:17Z",
        "updatedAt" : "2018-10-16T13:17:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f92a687c-408a-486a-9021-f4c606117d14",
        "parentId" : "5d159324-34ee-4860-a096-6629fcdfd604",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Whoa, you can separate the `.format` like that? Learn something every day...",
        "createdAt" : "2018-10-17T18:58:55Z",
        "updatedAt" : "2018-10-17T18:58:55Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "11cfd084-775b-4ee9-b0f4-a03cd108dbca",
        "parentId" : "5d159324-34ee-4860-a096-6629fcdfd604",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You can do whatever you like with whitespace providing its within parentheses",
        "createdAt" : "2018-10-18T04:11:43Z",
        "updatedAt" : "2018-10-18T04:11:44Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "823431cb61233693f3ffebf15bf7ec350872638c",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +40,44 @@        raise RuntimeError(\n            \"internal dtype error, unknown kind {!r}\"\n            .format(dtype.kind)\n        )\n"
  },
  {
    "id" : "986f8e1a-ba87-45ab-a6ca-9aeb303f82e0",
    "prId" : 12179,
    "prUrl" : "https://github.com/numpy/numpy/pull/12179#pullrequestreview-165919134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd726d54-643b-4158-a790-5d21b8e7cc0d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe mention the encoding? Not sure we are consistent about that though.",
        "createdAt" : "2018-10-17T18:56:47Z",
        "updatedAt" : "2018-10-17T18:56:47Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4b7d025d-3604-4443-bc0b-3d0832966fa9",
        "parentId" : "fd726d54-643b-4158-a790-5d21b8e7cc0d",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "As a comment, not part of the stem.",
        "createdAt" : "2018-10-17T19:01:30Z",
        "updatedAt" : "2018-10-17T19:01:30Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "3c54e40f-de86-4b82-90b3-0120a4fc0978",
        "parentId" : "fd726d54-643b-4158-a790-5d21b8e7cc0d",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The encoding of `bytes`, you mean? I think that's a property of the default `U->S` conversion, not of the S type itself - so the comment doesn't belong here. You can store whatever encoding you like in `S` (or even not text at all).",
        "createdAt" : "2018-10-18T04:12:40Z",
        "updatedAt" : "2018-10-18T04:12:40Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "823431cb61233693f3ffebf15bf7ec350872638c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +24,28 @@if sys.version_info[0] >= 3:\n    _kind_to_stem.update({\n        'S': 'bytes',\n        'U': 'str'\n    })"
  }
]