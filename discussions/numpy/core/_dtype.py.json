[
  {
    "id" : "928e8430-b044-43d3-a048-a804cda9d30c",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-147468559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2ce3194-de16-45a9-af4f-acb4ac1f8ef1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there a better way to get hold of these?",
        "createdAt" : "2018-02-16T04:57:37Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0a8491b9-9255-489a-8ce6-fd98e3702531",
        "parentId" : "b2ce3194-de16-45a9-af4f-acb4ac1f8ef1",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "There is `np.little_endian`or `sys.byteorder`, but then you have to decide '<' or '>' yourself.",
        "createdAt" : "2018-08-19T19:34:56Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@    # hack to obtain the native and swapped byte order characters\n    swapped = np.dtype(int).newbyteorder('s')\n    native = swapped.newbyteorder('s')\n\n    byteorder = dtype.byteorder"
  },
  {
    "id" : "58a23378-21d5-4dbf-ab7b-1544286912eb",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-97083231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "864c086c-f1fd-43b9-8927-4b41d53763a1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think we should add this as `dtype.ispacked` in another PR",
        "createdAt" : "2018-02-16T04:58:08Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +220,224 @@    dtype parameters.\n\n    Duplicates the C `is_dtype_struct_simple_unaligned_layout` functio.\n    \"\"\"\n    total_offset = 0"
  },
  {
    "id" : "af54316a-8b90-4a33-bfb9-5203ec0ff9c6",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-147499408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f3d467b-e648-46cb-87fa-68391dfe82c1",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "This line not hit in tests, see [coverage](https://codecov.io/gh/numpy/numpy/commit/73e328c9c9c4729c28f0f2dec407aed168b5fbdf#D3-15)",
        "createdAt" : "2018-08-19T19:10:15Z",
        "updatedAt" : "2018-08-20T04:40:09Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "f201769b-767b-4d55-8648-eeb632187061",
        "parentId" : "0f3d467b-e648-46cb-87fa-68391dfe82c1",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Test added",
        "createdAt" : "2018-08-20T04:40:49Z",
        "updatedAt" : "2018-08-20T04:40:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@        return _struct_str(dtype, include_align=True)\n    elif dtype.subdtype:\n        return _subarray_str(dtype)\n    elif issubclass(dtype.type, np.flexible) or not dtype.isnative:\n        return dtype.str"
  },
  {
    "id" : "72566637-f0e3-4725-8022-ca8f960f914d",
    "prId" : 10602,
    "prUrl" : "https://github.com/numpy/numpy/pull/10602#pullrequestreview-165929754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "169b5771-fc81-47cc-98b9-9b350b0247b2",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Previously this caught subclasses of void too. Do we actually want that behavior?",
        "createdAt" : "2018-10-18T05:33:12Z",
        "updatedAt" : "2018-10-18T05:33:12Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa616a85368c5c9e2f2b91fafb43596e56f48f50",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@            return \"'%sU%d'\" % (byteorder, dtype.itemsize / 4)\n\n    elif dtype.type == np.void:\n        if _isunsized(dtype):\n            return \"'V'\""
  }
]