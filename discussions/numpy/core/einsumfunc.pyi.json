[
  {
    "id" : "626f126e-c672-4a51-9150-5a3d786d3127",
    "prId" : 18390,
    "prUrl" : "https://github.com/numpy/numpy/pull/18390#pullrequestreview-588177552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24490aea-645b-46fc-8647-2810b0673353",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "I've noticed a bit of an inconsistency in how `np.einsum` handles the `out` parameter compared to the ufuncs. \r\nNamely, the former will _only_ accept boolean- or number-based arrays while the latter is more flexible in that sense, accepting the likes of string- or object-arrays without issue.\r\n\r\nExample\r\n---------\r\n``` python\r\nIn [1]: import numpy as np\r\n\r\nIn [2]: AR_i = np.arange(3)\r\n   ...: AR_U = np.empty(3, dtype='U23')\r\n\r\nIn [3]: np.einsum('i,i->i', AR_i, AR_i, out=AR_U)\r\n---------------------------------------------------------------------------\r\nSystemError: <built-in function c_einsum> returned a result with an error set\r\n\r\nIn [4]: np.multiply(AR_i, AR_i, out=AR_U)\r\nOut[4]: array(['0', '1', '4'], dtype='<U23')\r\n```",
        "createdAt" : "2021-02-11T00:32:47Z",
        "updatedAt" : "2021-02-11T00:54:32Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "bea70e9443a2eaf2134aa450b019d702d711eab6",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@    \"_ArrayType\",\n    bound=ndarray[Any, dtype[Union[bool_, number[Any]]]],\n)\n\n_OptimizeKind = Union["
  },
  {
    "id" : "2c05b211-c164-4bb3-b7af-7b30727e8c3b",
    "prId" : 18390,
    "prUrl" : "https://github.com/numpy/numpy/pull/18390#pullrequestreview-588177552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dec82318-5c39-4fe7-91a0-6e2acf23ed90",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Typing of the explicit contraction list (see [`np.einsum_path`](https://numpy.org/doc/stable/reference/generated/numpy.einsum_path.html)) is beyond what we can currently do unfortunately, _i.e._ a sequence that starts with a string followed by a variable number of integer tuples.\r\n\r\nFor now it's type is simply set to `Sequence[Any]`.",
        "createdAt" : "2021-02-11T00:36:35Z",
        "updatedAt" : "2021-02-11T00:54:32Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "bea70e9443a2eaf2134aa450b019d702d711eab6",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\n_OptimizeKind = Union[\n    None, bool, Literal[\"greedy\", \"optimal\"], Sequence[Any]\n]\n_CastingSafe = Literal[\"no\", \"equiv\", \"safe\", \"same_kind\"]"
  }
]