[
  {
    "id" : "21304ff2-e678-4f75-ac4f-a2395754eb82",
    "prId" : 5398,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d6e2eb0-97a2-44e7-aca5-d5f7384a558b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, does this need to be a 1-d array?\n",
        "createdAt" : "2015-01-01T02:06:11Z",
        "updatedAt" : "2015-01-02T05:22:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9369c611-94c8-4f66-b774-8e41b72798de",
        "parentId" : "9d6e2eb0-97a2-44e7-aca5-d5f7384a558b",
        "authorId" : "2551cf46-0e77-4684-8b9f-194b74eae28d",
        "body" : "@charris, are you asking if we even need to use ravel here?  I just tried replacing `data = ravel(asarray(a))` with `data = a`, but running the command:\n\n```\npython3 runtests.py -t numpy/core/tests/test_multiarray.py:TestBinop\n```\n\ncauses an infinite loop throwing up a max recursion depth error.  \n\nIn fact, an infinite loop also happens if you call `asanyarray(a)`, and since `ravel` now calls `asanyarray` instead of `asarray`, I had to add `asarray` here.\n",
        "createdAt" : "2015-01-01T12:22:36Z",
        "updatedAt" : "2015-01-02T05:22:17Z",
        "lastEditedBy" : "2551cf46-0e77-4684-8b9f-194b74eae28d",
        "tags" : [
        ]
      },
      {
        "id" : "086c0bc9-2130-4f41-9841-45cbab9c97ca",
        "parentId" : "9d6e2eb0-97a2-44e7-aca5-d5f7384a558b",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I was just curious about the reason for the `asarray`, I was sure there was one.  Was there a problem for matrices? I was thinking we might want to do something about printing subtypes, but that is probably a problem for another day.\n",
        "createdAt" : "2015-01-01T16:02:22Z",
        "updatedAt" : "2015-01-02T05:22:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9a5f5c87-59e0-4fa5-a931-492a64c608e8",
        "parentId" : "9d6e2eb0-97a2-44e7-aca5-d5f7384a558b",
        "authorId" : "2551cf46-0e77-4684-8b9f-194b74eae28d",
        "body" : "There was no problem for matrices.  I only noticed that `ravel(a)` failed for when `a` is of type `<class 'test_multiarray.Rop__radd__'>`.  And `numpy/core/tests/test_multiarray.py:TestBinop` is the only test that fails with `ravel(a)`.  I figured that instead of changing the test, I should change `ravel(a)` to `ravel(asarray(a))` since then the `_array2string` function would have the same exact effect as before this PR (`ravel` used to call `asarray` anyway).\n",
        "createdAt" : "2015-01-02T07:51:00Z",
        "updatedAt" : "2015-01-02T07:51:00Z",
        "lastEditedBy" : "2551cf46-0e77-4684-8b9f-194b74eae28d",
        "tags" : [
        ]
      }
    ],
    "commit" : "78f69df28acd80654705a43bcf1e977b9c423b53",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +252,256 @@    else:\n        summary_insert = \"\"\n        data = ravel(asarray(a))\n\n    formatdict = {'bool' : _boolFormatter,"
  },
  {
    "id" : "497c583d-09f6-48fe-a347-f2db7e993200",
    "prId" : 7099,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7aac39a5-eafa-4719-9e09-e78bd9e38345",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I assume the original was issuing a warning or some such?\n",
        "createdAt" : "2016-08-30T00:01:40Z",
        "updatedAt" : "2016-09-02T08:11:10Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "7a9d4f96-9024-4870-8042-fd9629f3467d",
        "parentId" : "7aac39a5-eafa-4719-9e09-e78bd9e38345",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Yes, same, NAT Future Warning (NAT equality, could add more comments maybe).\n",
        "createdAt" : "2016-08-30T07:21:22Z",
        "updatedAt" : "2016-09-02T08:11:10Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "514d13679a55a82a96689679002c4ddc514641ce",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +737,741 @@            int_dtype = dtype(data.dtype.byteorder + 'i8')\n            int_view = data.view(int_dtype)\n            v = int_view[not_equal(int_view, nat_value.view(int_dtype))]\n            if len(v) > 0:\n                # Max str length of non-NaT elements"
  },
  {
    "id" : "87d420c6-fe5d-4255-a7f5-e1baf12ffc5d",
    "prId" : 7099,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12aad5be-a558-4b3a-a687-895925e1fb4b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Needed to avoid warning?\n",
        "createdAt" : "2016-08-30T00:02:01Z",
        "updatedAt" : "2016-09-02T08:11:10Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "c6898a97-24a7-42e1-b8d6-38469ec84f44",
        "parentId" : "12aad5be-a558-4b3a-a687-895925e1fb4b",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "NAT comparisons give a warning, and they should not while printing in any case. Actually, I am not 100% if you can simplify it currently easily, we may need `np.isnat` or `np.isnan` to support datetimes. \n",
        "createdAt" : "2016-08-30T07:20:30Z",
        "updatedAt" : "2016-09-02T08:11:10Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "514d13679a55a82a96689679002c4ddc514641ce",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +752,756 @@    def __call__(self, x):\n        # TODO: After NAT == NAT deprecation should be simplified:\n        if (x + 1).view('i8') == x.view('i8'):\n            return self._nat\n        else:"
  }
]