[
  {
    "id" : "d85b95fa-c0e4-45cc-885b-abb76566cabb",
    "prId" : 3308,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c163405b-67a8-4c43-9649-0b7086f5d6a3",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Add a comment like \"We can't just put these in OPTIONAL_STDFUNCS, because the compiler will get grumpy if we try to refer to these without giving them valid arguments\" (or whatever the reason is exactly.)\n",
        "createdAt" : "2013-05-08T15:36:23Z",
        "updatedAt" : "2013-05-09T15:26:25Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecdad497085880e18026e88d3f06c5a0feab2f39",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +98,102 @@        \"copysign\", \"nextafter\"]\n\n# optional gcc compiler builtins and their call arguments\n# call arguments are required as the compiler will do strict signature checking\nOPTIONAL_INTRINSICS = [(\"__builtin_isnan\", '5.'),"
  },
  {
    "id" : "2508b05d-785f-4c20-bfab-4735f4a3dc1b",
    "prId" : 3429,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc6a8c9-a62c-4726-bd3f-47ce68b9826d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Are both this and the earlier `__attribute__((optimize(\"unroll-loops\")))` needed?\n",
        "createdAt" : "2013-06-12T21:46:57Z",
        "updatedAt" : "2013-06-13T17:13:20Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "24ab7ec6-07a3-44d1-9477-aedd4f4b4379",
        "parentId" : "1bc6a8c9-a62c-4726-bd3f-47ce68b9826d",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "one could make the **attribute** implicit and generate the name automatic but it seems like overkill as long as we only have one.\n",
        "createdAt" : "2013-06-12T21:54:53Z",
        "updatedAt" : "2013-06-13T17:13:20Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "75df68b5ca238eabc2de144dce08d481c59ffcaf",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +117,121 @@# (attribute as understood by gcc, function name),\n# function name will be converted to HAVE_<upper-case-name> preprocessor macro\nOPTIONAL_GCC_ATTRIBUTES = [('__attribute__((optimize(\"unroll-loops\")))',\n                            'attribute_optimize_unroll_loops'),\n                          ]"
  },
  {
    "id" : "d96afeaa-d2d4-42ff-a731-a38c99d14330",
    "prId" : 3772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a6c1018-c20a-49ed-a8d0-3972e54c7c10",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "\"optional a required header\"?\n",
        "createdAt" : "2013-09-21T21:00:15Z",
        "updatedAt" : "2013-09-21T21:00:15Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd2e1104718490be8504f8d6665205ca594a37e7",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +109,113 @@\n# optional gcc compiler builtins and their call arguments and optional a\n# required header\n# call arguments are required as the compiler will do strict signature checking\nOPTIONAL_INTRINSICS = [(\"__builtin_isnan\", '5.'),"
  },
  {
    "id" : "a373c796-8ed9-4cc6-a3d0-97a13b50ecde",
    "prId" : 10444,
    "prUrl" : "https://github.com/numpy/numpy/pull/10444#pullrequestreview-93196190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "264e62f5-e1da-4ec1-b954-59d835c340c1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This looks quite similar to an approach used in `finfo`, and it might be nice to combine them somehow.",
        "createdAt" : "2018-01-20T23:49:44Z",
        "updatedAt" : "2018-06-06T19:15:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8a8971fa-9839-42b1-9fc1-09c4d4ca6f6d",
        "parentId" : "264e62f5-e1da-4ec1-b954-59d835c340c1",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Far more alarmingly, this section is identical to `numpy\\_build_utils\\common.py` (edit: #10506)",
        "createdAt" : "2018-02-01T08:26:56Z",
        "updatedAt" : "2018-06-06T19:15:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc6b68476fde6d7e5717b22972cb8147988ce71",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +338,342 @@_IBM_DOUBLE_DOUBLE_BE = (['301', '235', '157', '064', '124', '000', '000', '000'] +\n                     ['000'] * 8)\n_IBM_DOUBLE_DOUBLE_LE = (['000', '000', '000', '124', '064', '157', '235', '301'] +\n                     ['000'] * 8)\n"
  }
]