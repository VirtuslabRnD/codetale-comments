[
  {
    "id" : "09942fc6-765e-4e9e-9734-2b920f0f7014",
    "prId" : 9026,
    "prUrl" : "https://github.com/numpy/numpy/pull/9026#pullrequestreview-36673809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31528ef5-9799-4bb9-aa6e-c89b9d7bccc3",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Bit odd to have this shell-like contruct. Why not just call it `{PARAMS}` in the strings, and here do\r\n```\r\ndoc = doc.format(PARAMS=_params_text)\r\n```",
        "createdAt" : "2017-05-07T21:15:13Z",
        "updatedAt" : "2017-05-08T18:47:04Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "e7d106d9-2958-4beb-b7fe-a15b095c3c4b",
        "parentId" : "31528ef5-9799-4bb9-aa6e-c89b9d7bccc3",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Latex in the docstrings was my concern here",
        "createdAt" : "2017-05-07T21:24:00Z",
        "updatedAt" : "2017-05-08T18:47:04Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "9e55adaa-a33e-40a6-9890-79e7086a60d6",
        "parentId" : "31528ef5-9799-4bb9-aa6e-c89b9d7bccc3",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "OK, that seems fair enough. Just leave as is, then.",
        "createdAt" : "2017-05-07T21:26:33Z",
        "updatedAt" : "2017-05-08T18:47:04Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e3202649692815e973f0e72820d25d5e536910d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +33,37 @@def add_newdoc(place, name, doc):\n    doc = textwrap.dedent(doc).strip()\n    doc = doc.replace('$PARAMS', _params_text)\n\n    docdict['.'.join((place, name))] = doc"
  },
  {
    "id" : "7267877d-9f3b-46c6-a5a1-c251fe51dbcc",
    "prId" : 9063,
    "prUrl" : "https://github.com/numpy/numpy/pull/9063#pullrequestreview-36672947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b465cc0d-8bf9-4ccd-a273-daac90710e9c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Nit: `resulting` should probably be in both places or neither",
        "createdAt" : "2017-05-06T23:07:11Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8e266a47-4440-47e3-9819-4bbafd5b2992",
        "parentId" : "b465cc0d-8bf9-4ccd-a273-daac90710e9c",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "The quotient is the result of floor division, but the remainder is a by-product. So I think the current language makes sense (but I'm open to alternatives if you have a concrete suggestion).",
        "createdAt" : "2017-05-07T17:46:02Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "22e9c690-519d-4188-80c7-4a8d17372714",
        "parentId" : "b465cc0d-8bf9-4ccd-a273-daac90710e9c",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'm not convinced results and byproducts are disjoint sets, but I'm happy to leave this as is based on your rationale.",
        "createdAt" : "2017-05-07T20:41:40Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fbf75e499196c05da46302f035909897c9ec272",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +2893,2897 @@    -------\n    out1 : ndarray\n        Element-wise quotient resulting from floor division.\n    out2 : ndarray\n        Element-wise remainder from floor division."
  },
  {
    "id" : "7a20977e-0cdf-40ce-ab91-d2a7886d15a7",
    "prId" : 10745,
    "prUrl" : "https://github.com/numpy/numpy/pull/10745#pullrequestreview-111271040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b3b47ca-a393-44c5-9484-b4fd03be718b",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "A nitpick, but why `Typically`? Just remove it if it is *always* type bool unless specified otherwise.",
        "createdAt" : "2018-04-09T16:27:40Z",
        "updatedAt" : "2018-04-09T16:29:26Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "37478c2e-1560-4ed5-98ca-c3f4a1691b9f",
        "parentId" : "1b3b47ca-a393-44c5-9484-b4fd03be718b",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "A custom-registered ufunc loop could return some other type too.",
        "createdAt" : "2018-04-09T16:30:38Z",
        "updatedAt" : "2018-04-09T16:30:38Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8f0b5092-c4ae-4e7d-9380-5258932d8ea2",
        "parentId" : "1b3b47ca-a393-44c5-9484-b4fd03be718b",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "But this is the docstring for the standard functions; I'm not sure if it... If we're going even more nitpicky, the `dtype` of any passed-in `out` argument is of course preserved. Anyway, it is also fine to leave as is...",
        "createdAt" : "2018-04-09T18:57:30Z",
        "updatedAt" : "2018-04-09T18:57:30Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "c6f7d549-822a-4a87-82dd-508d0f4143ac",
        "parentId" : "1b3b47ca-a393-44c5-9484-b4fd03be718b",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think I'd like to leave it as is, if that's alright",
        "createdAt" : "2018-04-11T05:38:35Z",
        "updatedAt" : "2018-04-11T05:38:35Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "820f48e7-8d27-444a-8f54-5336fd80aa1f",
        "parentId" : "1b3b47ca-a393-44c5-9484-b4fd03be718b",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "OK, no problem.",
        "createdAt" : "2018-04-11T15:03:25Z",
        "updatedAt" : "2018-04-11T15:03:25Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "358f8220a298807c48963125d941dcd93a27ccc0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1080,1084 @@    out : ndarray or scalar\n        Output array, element-wise comparison of `x1` and `x2`.\n        Typically of type bool, unless ``dtype=object`` is passed.\n        $OUT_SCALAR_2\n"
  },
  {
    "id" : "f86f259d-b4fd-49fe-a186-c90f53a6b052",
    "prId" : 10800,
    "prUrl" : "https://github.com/numpy/numpy/pull/10800#pullrequestreview-109850868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1783cf43-5a4f-4407-bed5-af1666c7191e",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "inputs or outputs?",
        "createdAt" : "2018-04-05T19:42:03Z",
        "updatedAt" : "2018-04-05T19:42:04Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "21eaa462-39ab-4bbc-a3fd-a682a57ad161",
        "parentId" : "1783cf43-5a4f-4407-bed5-af1666c7191e",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "NVM.",
        "createdAt" : "2018-04-05T19:42:42Z",
        "updatedAt" : "2018-04-05T19:42:42Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "156cdbd25155fba555314220502fa96727b5b5a2",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +46,50 @@            assert '$OUT_SCALAR_2' in doc, \"in {}\".format(name)\n        else:\n            assert False, \"Could not detect number of inputs in {}\".format(name)\n    for k, v in subst.items():\n        doc = doc.replace('$' + k, v)"
  },
  {
    "id" : "0152d19f-8993-4b15-bec9-774f06d8fb14",
    "prId" : 11630,
    "prUrl" : "https://github.com/numpy/numpy/pull/11630#pullrequestreview-141542106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b35eb5fa-5434-410f-86f8-1615371254e2",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Should be preceded by a Notes heading, see other examples in the file (although in `_adddocs.py` I do see examples that do not use the heading).",
        "createdAt" : "2018-07-27T18:39:26Z",
        "updatedAt" : "2018-07-27T18:39:26Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "27a35ea7-0c0a-483d-b056-a914802c9b95",
        "parentId" : "b35eb5fa-5434-410f-86f8-1615371254e2",
        "authorId" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "body" : "Most of the more \"recent\" (1.12 and 1.13) `.. versionadded` were included in the general description.  Also it seemed a bit wasteful to add another section just for the versionadded. But if you like it better in the `Notes` I can change that.",
        "createdAt" : "2018-07-27T18:42:39Z",
        "updatedAt" : "2018-07-27T18:42:39Z",
        "lastEditedBy" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "tags" : [
        ]
      },
      {
        "id" : "dc0434c2-c4ea-4c39-adc3-fef17b040bbd",
        "parentId" : "b35eb5fa-5434-410f-86f8-1615371254e2",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "We might want to revisit that. I think it makes more sense to put the `versionadded` in the extended summary where it is easily noticed, likewise, when arguments are added we put the `versionadded` with the argument documentation. @rgommers Thoughts?",
        "createdAt" : "2018-07-27T19:02:22Z",
        "updatedAt" : "2018-07-27T19:02:22Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4ac62ceb-c344-4bf0-a5dd-31e8b616859f",
        "parentId" : "b35eb5fa-5434-410f-86f8-1615371254e2",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Difference is, the arguments apply to just that argument, whereas this applies to the entire function. I think this is fine as is.",
        "createdAt" : "2018-07-29T17:28:48Z",
        "updatedAt" : "2018-07-29T17:28:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "bb2621cc-77a0-4b66-a1b8-8ea9a21aef75",
        "parentId" : "b35eb5fa-5434-410f-86f8-1615371254e2",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "@eric-wieser Yep, I think that is fine and prefer it that way. However, the documentation for that says to put it in the Notes, which I haven't done myself (tsk, tsk), so we should fix the documentation.",
        "createdAt" : "2018-07-30T13:53:04Z",
        "updatedAt" : "2018-07-30T13:53:04Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6313ec4f61583f06221957a820a078bc48e1b17d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1742,1746 @@\n    .. versionadded:: 1.13.0\n\n    Parameters\n    ----------"
  },
  {
    "id" : "f68a009e-3c90-4970-91b4-846a97ce62ee",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-177001128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db382446-d9d1-4066-b32a-711f8486200c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```\r\n..versionchanged:: 1.16\r\n    Now has these arguments\r\n```\r\n\r\nor something",
        "createdAt" : "2018-11-20T21:58:35Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "88711cd3-71d5-49c9-8ac0-94998db79e67",
        "parentId" : "db382446-d9d1-4066-b32a-711f8486200c",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "adding",
        "createdAt" : "2018-11-20T22:20:02Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +2557,2561 @@    **kwargs\n        For other keyword-only arguments, see the\n        :ref:`ufunc docs <ufuncs.kwargs>`.\n\n        ..versionadded:: 1.16"
  },
  {
    "id" : "a73192f6-60bd-46f1-b446-ddab97f3763d",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-177020534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3b07a03-bcab-4d7f-9a77-dbdf8af8f1bd",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "This won't render correctly. Either ommit the `**` or use a variant of `\\\\*\\\\*kwargs : Kwargs`.",
        "createdAt" : "2018-11-20T22:34:42Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e236ea9c-76fd-4c88-8be9-c9ff7c04bbfd",
        "parentId" : "c3b07a03-bcab-4d7f-9a77-dbdf8af8f1bd",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "the doc [looks OK](https://4868-908607-gh.circle-artifacts.com/0/home/circleci/repo/doc/build/html/reference/generated/numpy.matmul.html) to me, just like the other ufuncs",
        "createdAt" : "2018-11-20T22:49:50Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "dc136d4b-cd84-45ed-8612-7fc8271bf4de",
        "parentId" : "c3b07a03-bcab-4d7f-9a77-dbdf8af8f1bd",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, looks like that problem has been fixed. Good to know.",
        "createdAt" : "2018-11-20T23:26:17Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2555,2559 @@        a shape that matches the signature `(n,k),(k,m)->(n,m)`. If not\n        provided or `None`, a freshly-allocated array is returned.\n    **kwargs\n        For other keyword-only arguments, see the\n        :ref:`ufunc docs <ufuncs.kwargs>`."
  },
  {
    "id" : "14b25c7c-4996-45c7-9327-0b3597937ed6",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-178563085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bdd276c-969b-4eff-b69e-ea8efbd13976",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Looking at the docs rendered from circle-ci, this section doesn't get formatted properly. Maybe you need an extra line break at the top?",
        "createdAt" : "2018-11-20T22:54:34Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "2481da3d-3f7f-4a66-a393-d3bac13a9ed2",
        "parentId" : "4bdd276c-969b-4eff-b69e-ea8efbd13976",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "blank line added",
        "createdAt" : "2018-11-20T23:42:08Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "60c7d8ec-1393-4a50-a04e-cd2e4ce8cd97",
        "parentId" : "4bdd276c-969b-4eff-b69e-ea8efbd13976",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "nit: shapes are normally written with tuples, not lists. So `np.full((9, 5, 7, 3), True)`. Up to you if you keep the `dtype=bool`.\r\n\r\nSame on the line below",
        "createdAt" : "2018-11-27T00:21:49Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +2605,2609 @@      were elements, respecting the signature ``(n,k),(k,m)->(n,m)``:\n\n      >>> a = a = np.full([9,5,7,3], True, dtype=bool)\n      >>> c = np.full([9, 5, 4,3], True, dtype=bool)\n      >>> np.dot(a, c).shape"
  },
  {
    "id" : "732614ae-dff0-4a7e-950d-95d4abd9d6d4",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-178087789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3516b556-49a3-4b4b-8b0e-1948b8cac5ed",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "If you're putting this under the `**kwargs` heading, then I think `.. versionadded::` would be more appropriate.",
        "createdAt" : "2018-11-21T06:44:14Z",
        "updatedAt" : "2018-12-03T17:44:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b24290b5-ab96-4230-8ecf-b9f651ea4212",
        "parentId" : "3516b556-49a3-4b4b-8b0e-1948b8cac5ed",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "The previous version accepted `out`, so I think this is a change.",
        "createdAt" : "2018-11-22T00:32:51Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "b5d5b5e0-ad39-4b64-a714-197305755f72",
        "parentId" : "3516b556-49a3-4b4b-8b0e-1948b8cac5ed",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Right, but `out` has it's own argument section - this is just describing the other kwargs that aren't `out`, of which I believe all are new?",
        "createdAt" : "2018-11-25T16:00:59Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "7211b4f4-5de4-4972-8306-187b2b83e97a",
        "parentId" : "3516b556-49a3-4b4b-8b0e-1948b8cac5ed",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "changing",
        "createdAt" : "2018-11-25T16:15:06Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +2560,2564 @@\n        ..versionadded:: 1.16\n          Now handles ufunc kwargs\n\n    Returns"
  },
  {
    "id" : "4c38ebd3-f5b8-430f-bcac-431e62718aa4",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-180367616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "036aeb7a-ae41-4537-b405-88314e025fa8",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Not strictly true, when  you consider the 1d overloads. Maybe fine as is anyway.",
        "createdAt" : "2018-11-30T06:24:36Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "a301e87f-b765-4fae-bcd4-8fd97ee0845f",
        "parentId" : "036aeb7a-ae41-4537-b405-88314e025fa8",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "leaving this for now",
        "createdAt" : "2018-11-30T17:22:50Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2553,2557 @@    out : ndarray, optional\n        A location into which the result is stored. If provided, it must have\n        a shape that matches the signature `(n,k),(k,m)->(n,m)`. If not\n        provided or `None`, a freshly-allocated array is returned.\n    **kwargs"
  },
  {
    "id" : "c9fd4015-6e4d-4143-9c73-fe8fa271e5b6",
    "prId" : 12219,
    "prUrl" : "https://github.com/numpy/numpy/pull/12219#pullrequestreview-180369683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bd5816c-5091-4009-b26b-f37927cb9dfc",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "For a separate doc cleanup PR: spaces around commas for PEP8 - let's not train new users into going against PEP8 if we can avoid it.",
        "createdAt" : "2018-11-30T06:24:44Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b16eb549-078f-463b-bf2b-6debed7385d5",
        "parentId" : "1bd5816c-5091-4009-b26b-f37927cb9dfc",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "easy enough to clean up now",
        "createdAt" : "2018-11-30T17:28:02Z",
        "updatedAt" : "2018-12-03T17:44:04Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "18476f5285bdd3f1405086e37240a9bd2640ff16",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +2642,2646 @@    >>> a = np.arange(2 * 2 * 4).reshape((2, 2, 4))\n    >>> b = np.arange(2 * 2 * 4).reshape((2, 4, 2))\n    >>> np.matmul(a,b).shape\n    (2, 2, 2)\n    >>> np.matmul(a, b)[0, 1, 1]"
  },
  {
    "id" : "677de728-a977-4576-bdc6-993bfb438bf5",
    "prId" : 12560,
    "prUrl" : "https://github.com/numpy/numpy/pull/12560#pullrequestreview-185392511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e4edf17-89c3-4aad-a25d-5adf8a4e1309",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "For this and other cases where you're changing a result on a doctest that isn't marked with a Skip directive, this would seem to mean that if there was a problem in the first place the CI isn't detecting it because this module hasn't been opted in for refguide.\r\n\r\nI suppose it may have to be added to the public submodules list in refguide_check.py. That's why adding doctest coverage would be nice at some point.",
        "createdAt" : "2018-12-16T15:24:40Z",
        "updatedAt" : "2018-12-16T15:25:57Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "bffae5b7-9176-45c9-a5c1-3b2e90678d1e",
        "parentId" : "6e4edf17-89c3-4aad-a25d-5adf8a4e1309",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "I'm not sure how the requirement to be in `__all__` and in a public submodule interacts with add_newdoc machinery, but you'll likely know better than I.",
        "createdAt" : "2018-12-16T15:27:40Z",
        "updatedAt" : "2018-12-16T15:27:40Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "d8ae59f4-f5eb-4f4c-b738-0c498b97cd1a",
        "parentId" : "6e4edf17-89c3-4aad-a25d-5adf8a4e1309",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "These results *are* being hit, the module is being tested. I discovered these tweaks by putting a pdb in `refguide_check.py` where `check_output` returned `False`. It seems doctest is not particular about the error message, so I just replaced `wanted` with `got`",
        "createdAt" : "2018-12-16T15:37:01Z",
        "updatedAt" : "2018-12-16T15:37:19Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c696a070a8034acda819ff3d62464b4cc1f0e8a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +847,851 @@    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    ValueError: operands could not be broadcast together with shapes (3,3) (2,2)\n\n    \"\"\")"
  },
  {
    "id" : "ecc76b07-bbb4-4d0f-a6ec-8d9c79ee35a2",
    "prId" : 18509,
    "prUrl" : "https://github.com/numpy/numpy/pull/18509#pullrequestreview-601226793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b572eb2-282a-48b7-8163-4ed8af97399c",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Could you also add a mention of `fix` to the note below?",
        "createdAt" : "2021-02-28T05:56:18Z",
        "updatedAt" : "2021-03-02T09:56:17Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "93ee3f59-92a7-4905-9415-b119ba4708ce",
        "parentId" : "8b572eb2-282a-48b7-8163-4ed8af97399c",
        "authorId" : "ab3bd36c-d923-4cad-ae6b-7a5614035b64",
        "body" : "Done.",
        "createdAt" : "2021-03-01T22:30:16Z",
        "updatedAt" : "2021-03-02T09:56:17Z",
        "lastEditedBy" : "ab3bd36c-d923-4cad-ae6b-7a5614035b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "3867832a404f8eaaca0345c210d4f1d3a7b9d2bd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1378,1382 @@\n    Notes\n    -----\n    Some spreadsheet programs calculate the \"floor-towards-zero\", where\n    ``floor(-2.5) == -2``.  NumPy instead uses the definition of"
  }
]