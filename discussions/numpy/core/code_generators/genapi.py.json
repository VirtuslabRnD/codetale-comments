[
  {
    "id" : "5b1d8f1c-885c-43b1-8fa3-2fe2de856f29",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c537ae06-ac39-45c4-bc83-6e9c27a72e60",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "`x[1]` is a tuple?\n",
        "createdAt" : "2014-04-27T22:37:53Z",
        "updatedAt" : "2014-05-01T13:40:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5b4a92bc-4a96-4828-909b-873ac13e4cd2",
        "parentId" : "c537ae06-ac39-45c4-bc83-6e9c27a72e60",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "yes the api dict is now always (string, tuple)\n",
        "createdAt" : "2014-05-01T13:41:13Z",
        "updatedAt" : "2014-05-01T13:41:13Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "64af3fdd0fac08e01877a56faff5f3c6d4ac3a1b",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +416,420 @@    o = list(d.items())\n    def _key(x):\n        return x[1] + (x[0],)\n    return sorted(o, key=_key)\n"
  },
  {
    "id" : "21a5ff71-1701-461e-abc9-05d22bf61c64",
    "prId" : 14484,
    "prUrl" : "https://github.com/numpy/numpy/pull/14484#pullrequestreview-286935092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad6864bc-34a4-4cf9-8e5a-82b4b269faeb",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "This is necessary, because otherwise it parsing `api_function(..., type NPY_UNUUSED(parameter))` fails because it strips both closing brackets.",
        "createdAt" : "2019-09-11T16:57:42Z",
        "updatedAt" : "2019-09-11T16:57:42Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "28bbaf262e0be11f57d5b37d193af17ae7ed14f4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +261,265 @@                    # finished\n                    # remove any white space and the closing bracket:\n                    fargs_str = ' '.join(function_args).rstrip()[:-1].rstrip()\n                    fargs = split_arguments(fargs_str)\n                    f = Function(function_name, return_type, fargs,"
  },
  {
    "id" : "b64e38ec-12f4-4f00-8b31-de4ed1e713f3",
    "prId" : 15508,
    "prUrl" : "https://github.com/numpy/numpy/pull/15508#pullrequestreview-353402161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f56f2355-8113-4556-97b3-beb30d5ac5e0",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "The API generation changes are the ugliest part here... Unfortunately, I really want to hide everything away (unless it is an internal build), and have the `PyArrayDescr_Type` defined as `PyTypeObject` even internally. But I also need to initialize/allocate it statically as a `PyArray_DTypeMeta`.",
        "createdAt" : "2020-02-05T00:44:02Z",
        "updatedAt" : "2020-03-18T23:04:45Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea745b41e093fa4c100a074be9392a1b44d1f6f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +341,345 @@            # And define the name as: (*(type *)(&mangled_name))\n            f\"#define {self.name} (*({self.ptr_cast} *)(&{mangled_name}))\\n\"\n        )\n        return astr\n"
  },
  {
    "id" : "bb4c98c1-8e53-4213-90e5-b0304a9637d3",
    "prId" : 18739,
    "prUrl" : "https://github.com/numpy/numpy/pull/18739#pullrequestreview-679237780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17938a56-d57c-41ae-a967-d31b1cc7a147",
        "parentId" : null,
        "authorId" : "73219379-9624-4ca7-9006-2536d2d860d7",
        "body" : "improved",
        "createdAt" : "2021-06-09T06:01:34Z",
        "updatedAt" : "2021-06-09T06:02:14Z",
        "lastEditedBy" : "73219379-9624-4ca7-9006-2536d2d860d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e4362e296c1716d34a60fb23f05735f22c8280d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +282,286 @@                else:\n                    function_args.append(line)\n        except ParseError:\n            raise\n        except Exception as e:"
  }
]