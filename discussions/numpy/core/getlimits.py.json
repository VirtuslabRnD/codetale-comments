[
  {
    "id" : "1190a377-71b7-4556-81bd-707a678df2c1",
    "prId" : 12093,
    "prUrl" : "https://github.com/numpy/numpy/pull/12093#pullrequestreview-162150850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c8b2fa4-103a-4a0d-9553-9f087c38ad39",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Looks harmless at first glance if it helps a downstream project. I don't think we have plans to explicitly support Python 3.4 issues moving forward, but this may be fair enough.\r\n\r\nI suppose one could add a unit test that uses a regex on the ValueError message, although maybe that's overkill.",
        "createdAt" : "2018-10-05T17:07:42Z",
        "updatedAt" : "2018-10-05T17:07:42Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "73cdf197-d557-4f2b-85ec-da722f485218",
        "parentId" : "5c8b2fa4-103a-4a0d-9553-9f087c38ad39",
        "authorId" : "2035b7cb-d7e4-423a-a3b4-2c5117021872",
        "body" : "FWIW those failures also happen with 3.5 at times (so I was told), or I misunderstood and this code path is 3.4 specific?",
        "createdAt" : "2018-10-05T18:14:46Z",
        "updatedAt" : "2018-10-05T18:14:47Z",
        "lastEditedBy" : "2035b7cb-d7e4-423a-a3b4-2c5117021872",
        "tags" : [
        ]
      },
      {
        "id" : "724fdab7-db76-4f93-8acc-89fa366aa177",
        "parentId" : "5c8b2fa4-103a-4a0d-9553-9f087c38ad39",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "If the issue isn't 3.4-specific that probably make a more compelling case to fix it",
        "createdAt" : "2018-10-05T18:19:28Z",
        "updatedAt" : "2018-10-05T18:19:29Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "43ecbdc95a09e85f570bb7ce530da72ad78d9cc5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +514,518 @@        self.key = \"%s%d\" % (self.kind, self.bits)\n        if self.kind not in 'iu':\n            raise ValueError(\"Invalid integer data type %r.\" % (self.kind,))\n\n    def min(self):"
  }
]