[
  {
    "id" : "46837d69-be02-4a7c-91e9-7c83232f75a3",
    "prId" : 5505,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4abc5737-82f3-41bc-8ccd-58a60dbe759e",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Other way around? `a.view(dtype=None, type=None)`.  Are the parenthesis needed?\n",
        "createdAt" : "2015-01-26T21:59:28Z",
        "updatedAt" : "2015-01-27T01:20:51Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "71592aab-49d5-4e7d-ae10-dbbac205b921",
        "parentId" : "4abc5737-82f3-41bc-8ccd-58a60dbe759e",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "No, it's right. This is actually a _type_ view (`np.void.view`) , not an _ndarray_ view (`np.ndarray.view`). The argument is a dtype format in tuple form `(base_type, descr)`  (ie, it would go in the `dtype=` argument of `np.ndarray.view`).\n\nAs an aside, `np.void.view` only accepts a single unnamed argument, while `np.ndarray.view` has named `dtype` and `type` arguments. Yet the dosctring for `np.void.view` says\n\n> Not implemented (virtual attribute)\n> Class generic exists solely to derive numpy scalars from, and possesses,\n> albeit unimplemented, all the attributes of the ndarray class\n> so as to provide a uniform API.\n\nI am not sure what is going on there. It _is_ implemented, and it has a different method signature from `ndarray.view`.\n",
        "createdAt" : "2015-01-26T23:03:16Z",
        "updatedAt" : "2015-01-27T01:20:51Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      },
      {
        "id" : "ea77d7a3-91ca-4604-9596-9710bf287b69",
        "parentId" : "4abc5737-82f3-41bc-8ccd-58a60dbe759e",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "Oh, and to clarify what this line does: It makes nested types behave like records too.\n\nDemostration:\n\n```\n>>> rec = np.rec.array([('abc ', (1,1), 1), ('abc', (2,3), 1)],\n... dtype=[('foo', 'S4'), ('bar', [('A', int), ('B', int)]), ('baz', int)])\n```\n\nOld behavior:\n\n```\n>>> rec[0].bar.A\nAttributeError: 'numpy.void' object has no attribute 'A'\n```\n\nNew behavior:\n\n```\n>>> rec[0].bar.A\n1\n```\n",
        "createdAt" : "2015-01-26T23:19:51Z",
        "updatedAt" : "2015-01-27T01:20:51Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cd9e7339c37880cff0a2f381e881e0e612c4948",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +246,250 @@                return obj\n            if dt.fields:\n                return obj.view((record, obj.dtype.descr))\n            return obj\n        else:"
  },
  {
    "id" : "6d5b49b8-383c-4076-86df-b588dd231018",
    "prId" : 9372,
    "prUrl" : "https://github.com/numpy/numpy/pull/9372#pullrequestreview-48386517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd2a5c9f-2abd-46d3-a775-a3f53385862c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Should we be checking here that the remainder is 0 too?",
        "createdAt" : "2017-07-06T16:15:56Z",
        "updatedAt" : "2017-07-06T16:15:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "42cc08fe293baa3cfe16cf6500212bf7121d4583",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +705,709 @@    itemsize = descr.itemsize\n    if (shape is None or shape == 0 or shape == -1):\n        shape = (len(datastring) - offset) // itemsize\n\n    _array = recarray(shape, descr, buf=datastring, offset=offset)"
  }
]