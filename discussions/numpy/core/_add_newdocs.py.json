[
  {
    "id" : "5a489a50-13c3-465f-9e1e-20dfa5724b2a",
    "prId" : 11742,
    "prUrl" : "https://github.com/numpy/numpy/pull/11742#pullrequestreview-146662112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73baf94b-56b5-45ff-b8ef-b5a63144a076",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Can we use `np` yet?",
        "createdAt" : "2018-08-15T01:15:40Z",
        "updatedAt" : "2018-08-17T06:39:54Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5213d3bf-a9e6-421e-badb-31141a0d7802",
        "parentId" : "73baf94b-56b5-45ff-b8ef-b5a63144a076",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "sadly, no. PR #11344 was closed without a fix. Se also PR #11377 which tried to allow the monkeypatching needed to make `np` work.",
        "createdAt" : "2018-08-16T00:03:38Z",
        "updatedAt" : "2018-08-17T06:39:54Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "210c361ce38aa7a67d3227f93a6df1b0b4790d33",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1458,1462 @@\n    When using a non-integer step, such as 0.1, the results will often not\n    be consistent.  It is better to use `numpy.linspace` for these cases.\n\n    Parameters"
  },
  {
    "id" : "0e2f2fd0-6834-474f-a986-2a18d9926c54",
    "prId" : 11858,
    "prUrl" : "https://github.com/numpy/numpy/pull/11858#pullrequestreview-155740654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You'll find the indentation a lot easier to manage if you use `textwrap.dedent` here - in general you want to dedent before doing any formatting",
        "createdAt" : "2018-09-15T18:49:17Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "de75d084-7919-4256-b388-4e0249831536",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "I'm a bit weary to dedent everything, because other docstrings seem to be indented as well?\r\nE.g.: \r\n\r\n```pycon\r\n>>> pprint.pprint(np.dtype.__doc__)\r\n('dtype(obj, align=False, copy=False)\\n'\r\n '\\n'\r\n '    Create a data type object.\\n'\r\n '\\n'\r\n '    A numpy array is homogeneous, and contains elements described by a\\n'\r\n '    dtype object. A dtype object can be constructed from different\\n'\r\n '    combinations of fundamental numeric types.\\n'\r\n '\\n'\r\n '    Parameters\\n'\r\n '    ----------\\n'\r\n '    obj\\n'\r\n '        Object to be converted to a data type object.\\n'\r\n[...]\r\n```",
        "createdAt" : "2018-09-15T21:56:57Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      },
      {
        "id" : "c87f1761-d07b-4e79-b247-80138c1f30a8",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I wasn't aware of that, interesting find. I'd assumed that we dedented them in addnewdocs, but it seems that python does it automatically in `help`. I think ultimately the indentation doesn't matter, so what you have is fine.",
        "createdAt" : "2018-09-16T04:26:23Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1253bbe7-5148-4e59-bd2b-f0d0d237c1ba",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "The whole pasting-strings-together is a bit of a mess; you're right there, but until there's more changes that need to be done, this might be the easiest",
        "createdAt" : "2018-09-16T10:56:57Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1561b9cd63d1ef87c52e3fe610aadcf72992769d",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +8022,8026 @@    Character code: ``'{character_code}'``.\n    {canonical_name_doc}{alias_doc}\n    \"\"\".format(doc=doc.strip(), character_code=character_code,\n               canonical_name_doc=canonical_name_doc, alias_doc=alias_doc)\n"
  },
  {
    "id" : "8054a7d4-2bf4-4e35-95ef-7e0d7430a4da",
    "prId" : 11858,
    "prUrl" : "https://github.com/numpy/numpy/pull/11858#pullrequestreview-155817449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there any real value to having these four separate lists of aliases, rather than building one big list to perform the lookup in?",
        "createdAt" : "2018-09-16T22:52:03Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "4e31eb82-803d-4ff4-9182-875fb457bec9",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "Euhm, yeah, the idea was not not loop over irrelevant aliases (while. But that does seem to come at the cost of being slightly more error-prone. I'm guessing you prefer the side of the trade-off that's less error-prone?",
        "createdAt" : "2018-09-17T08:00:46Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      },
      {
        "id" : "d21608f0-9020-4bde-9a59-bc9f37a3205d",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Yeah, especially since collectivey we've proven that that type of error is easy to make and hard to spot. Thanks!",
        "createdAt" : "2018-09-17T08:10:18Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "142685cc-d952-477d-9605-dc78f4e59600",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "One less argument to `add_newdoc_for_scalar_type` as well, as bonus.",
        "createdAt" : "2018-09-17T08:19:27Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1561b9cd63d1ef87c52e3fe610aadcf72992769d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +8006,8010 @@    ('complex192', 'Complex number type composed of 2 96-bit extended-precision floating-point numbers'),\n    ('complex256', 'Complex number type composed of 2 128-bit extended-precision floating-point numbers'),\n    ])\n\n"
  }
]