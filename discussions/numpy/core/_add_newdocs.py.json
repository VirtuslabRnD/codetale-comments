[
  {
    "id" : "5a489a50-13c3-465f-9e1e-20dfa5724b2a",
    "prId" : 11742,
    "prUrl" : "https://github.com/numpy/numpy/pull/11742#pullrequestreview-146662112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73baf94b-56b5-45ff-b8ef-b5a63144a076",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Can we use `np` yet?",
        "createdAt" : "2018-08-15T01:15:40Z",
        "updatedAt" : "2018-08-17T06:39:54Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5213d3bf-a9e6-421e-badb-31141a0d7802",
        "parentId" : "73baf94b-56b5-45ff-b8ef-b5a63144a076",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "sadly, no. PR #11344 was closed without a fix. Se also PR #11377 which tried to allow the monkeypatching needed to make `np` work.",
        "createdAt" : "2018-08-16T00:03:38Z",
        "updatedAt" : "2018-08-17T06:39:54Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "210c361ce38aa7a67d3227f93a6df1b0b4790d33",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1458,1462 @@\n    When using a non-integer step, such as 0.1, the results will often not\n    be consistent.  It is better to use `numpy.linspace` for these cases.\n\n    Parameters"
  },
  {
    "id" : "0e2f2fd0-6834-474f-a986-2a18d9926c54",
    "prId" : 11858,
    "prUrl" : "https://github.com/numpy/numpy/pull/11858#pullrequestreview-155740654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You'll find the indentation a lot easier to manage if you use `textwrap.dedent` here - in general you want to dedent before doing any formatting",
        "createdAt" : "2018-09-15T18:49:17Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "de75d084-7919-4256-b388-4e0249831536",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "I'm a bit weary to dedent everything, because other docstrings seem to be indented as well?\r\nE.g.: \r\n\r\n```pycon\r\n>>> pprint.pprint(np.dtype.__doc__)\r\n('dtype(obj, align=False, copy=False)\\n'\r\n '\\n'\r\n '    Create a data type object.\\n'\r\n '\\n'\r\n '    A numpy array is homogeneous, and contains elements described by a\\n'\r\n '    dtype object. A dtype object can be constructed from different\\n'\r\n '    combinations of fundamental numeric types.\\n'\r\n '\\n'\r\n '    Parameters\\n'\r\n '    ----------\\n'\r\n '    obj\\n'\r\n '        Object to be converted to a data type object.\\n'\r\n[...]\r\n```",
        "createdAt" : "2018-09-15T21:56:57Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      },
      {
        "id" : "c87f1761-d07b-4e79-b247-80138c1f30a8",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I wasn't aware of that, interesting find. I'd assumed that we dedented them in addnewdocs, but it seems that python does it automatically in `help`. I think ultimately the indentation doesn't matter, so what you have is fine.",
        "createdAt" : "2018-09-16T04:26:23Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1253bbe7-5148-4e59-bd2b-f0d0d237c1ba",
        "parentId" : "359c38ef-0868-42ab-9c7b-178242edd177",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "The whole pasting-strings-together is a bit of a mess; you're right there, but until there's more changes that need to be done, this might be the easiest",
        "createdAt" : "2018-09-16T10:56:57Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1561b9cd63d1ef87c52e3fe610aadcf72992769d",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +8022,8026 @@    Character code: ``'{character_code}'``.\n    {canonical_name_doc}{alias_doc}\n    \"\"\".format(doc=doc.strip(), character_code=character_code,\n               canonical_name_doc=canonical_name_doc, alias_doc=alias_doc)\n"
  },
  {
    "id" : "8054a7d4-2bf4-4e35-95ef-7e0d7430a4da",
    "prId" : 11858,
    "prUrl" : "https://github.com/numpy/numpy/pull/11858#pullrequestreview-155817449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there any real value to having these four separate lists of aliases, rather than building one big list to perform the lookup in?",
        "createdAt" : "2018-09-16T22:52:03Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "4e31eb82-803d-4ff4-9182-875fb457bec9",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "Euhm, yeah, the idea was not not loop over irrelevant aliases (while. But that does seem to come at the cost of being slightly more error-prone. I'm guessing you prefer the side of the trade-off that's less error-prone?",
        "createdAt" : "2018-09-17T08:00:46Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      },
      {
        "id" : "d21608f0-9020-4bde-9a59-bc9f37a3205d",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Yeah, especially since collectivey we've proven that that type of error is easy to make and hard to spot. Thanks!",
        "createdAt" : "2018-09-17T08:10:18Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "142685cc-d952-477d-9605-dc78f4e59600",
        "parentId" : "10db6565-b90b-43d2-9e48-2372702fe9d9",
        "authorId" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "body" : "One less argument to `add_newdoc_for_scalar_type` as well, as bonus.",
        "createdAt" : "2018-09-17T08:19:27Z",
        "updatedAt" : "2018-09-17T15:22:19Z",
        "lastEditedBy" : "2ce588aa-4aeb-4487-8879-efb25ae91acd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1561b9cd63d1ef87c52e3fe610aadcf72992769d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +8006,8010 @@    ('complex192', 'Complex number type composed of 2 96-bit extended-precision floating-point numbers'),\n    ('complex256', 'Complex number type composed of 2 128-bit extended-precision floating-point numbers'),\n    ])\n\n"
  },
  {
    "id" : "ab328ae0-d445-491b-9e9e-c9ea65090dfa",
    "prId" : 12025,
    "prUrl" : "https://github.com/numpy/numpy/pull/12025#pullrequestreview-228701221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5124ffe4-3bf0-474a-828c-db41a6b4d97e",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Better. How about:\r\n```\r\nThis condition is broadcast over the input. At locations where the\r\ncondition is True, the `out` array will be set to the ufunc result.\r\nElsewhere, the `out` array will retain its original value.\r\nNote that if an uninitialized `out` array is created via the default\r\n``out=None``, locations within it where the condition is False will\r\nremain uninitialized.\r\n```\r\n\r\nWith the changes being:\r\n\r\n* \"condition\" helps separate it from the normal \"value\" arguments, `x1..xn`\r\n* pluralizing things makes this a little clearer.\r\n* Referring to the `out` array explicitly maybe helps emphasize where the uninitialized result comes from.\r\n\r\nPerhaps this is just bike-shedding though.",
        "createdAt" : "2019-02-05T07:02:54Z",
        "updatedAt" : "2019-04-19T13:59:24Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "38634fbf-9dee-459a-b2d6-ddb8e7dea78c",
        "parentId" : "5124ffe4-3bf0-474a-828c-db41a6b4d97e",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "adopted",
        "createdAt" : "2019-04-19T13:56:53Z",
        "updatedAt" : "2019-04-19T13:59:24Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "017081d4-9bb6-4831-b1b7-4c2a1455f08d",
        "parentId" : "5124ffe4-3bf0-474a-828c-db41a6b4d97e",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : ".. and synced the other `where` docstring as well",
        "createdAt" : "2019-04-19T14:00:04Z",
        "updatedAt" : "2019-04-19T14:00:05Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "730bae9892c62342c7d59b4d44772fd9e231b766",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +5661,5665 @@        Note that if an uninitialized `out` array is created via the default\n        ``out=None``, locations within it where the condition is False will\n        remain uninitialized.\n    **kwargs\n        For other keyword-only arguments, see the :ref:`ufunc docs <ufuncs.kwargs>`."
  },
  {
    "id" : "1ee15230-5e3b-4154-8184-b8499c6c9d86",
    "prId" : 12253,
    "prUrl" : "https://github.com/numpy/numpy/pull/12253#pullrequestreview-176540461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "990d7cbe-4430-432d-8df8-859310bf5da5",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This isn't going to help if we switch back to linux. Use a sized type instead.",
        "createdAt" : "2018-10-24T01:33:09Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "636f855a-fe34-4013-b0aa-bfba6ca05126",
        "parentId" : "990d7cbe-4430-432d-8df8-859310bf5da5",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "I've tried to enforce sized types where I observed issues like this throughout.",
        "createdAt" : "2018-11-10T01:07:16Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "2e23fffb-4043-464a-a30a-b9dc6962febb",
        "parentId" : "990d7cbe-4430-432d-8df8-859310bf5da5",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "I switched to a sized unsigned integer type so marking as resolved",
        "createdAt" : "2018-11-19T23:10:15Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f8a85b9ece5773a8ac75ffcd2502fc93612eff",
    "line" : 727,
    "diffHunk" : "@@ -1,1 +5363,5367 @@\n    >>> np.dtype([('f1', np.uint64), ('f2', np.int32)])\n    dtype([('f1', '<u8'), ('f2', '<i4')])\n\n    Using array-protocol type strings:"
  },
  {
    "id" : "67d6da30-ab76-44ca-ad1f-908288e0ae34",
    "prId" : 12253,
    "prUrl" : "https://github.com/numpy/numpy/pull/12253#pullrequestreview-180543123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5854d47-b055-4b7f-81f7-a03df1b7b82d",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The whitespace of this array looks off",
        "createdAt" : "2018-12-02T00:24:17Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f8a85b9ece5773a8ac75ffcd2502fc93612eff",
    "line" : 657,
    "diffHunk" : "@@ -1,1 +5155,5159 @@           [ 4.,   5.,   6.,   7.],\n           [ 8.,   9.,  10.,  11.],\n           [12.,  13.,  14.,  15.]])\n\n    ::"
  },
  {
    "id" : "5ae02499-0d64-4b15-97f2-63ae2ef34f9b",
    "prId" : 12253,
    "prUrl" : "https://github.com/numpy/numpy/pull/12253#pullrequestreview-180543143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "618dab30-0652-4690-b820-bfe6701959d8",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Whitespace here looks off too, with the columns not aligning",
        "createdAt" : "2018-12-02T00:25:26Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f8a85b9ece5773a8ac75ffcd2502fc93612eff",
    "line" : 674,
    "diffHunk" : "@@ -1,1 +5171,5175 @@           [ 4.,   5.,   6.,   7.],\n           [ 8.,   9.,  10.,  11.],\n           [24.,  28.,  32.,  36.]])\n\n    ::"
  },
  {
    "id" : "2528ea3c-4c73-4a33-b03d-818fc92aacc9",
    "prId" : 12253,
    "prUrl" : "https://github.com/numpy/numpy/pull/12253#pullrequestreview-180543171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "964166d2-600d-41f2-8a26-368fd446549d",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "whitespace on the first line doesn't match the rest",
        "createdAt" : "2018-12-02T00:26:47Z",
        "updatedAt" : "2018-12-14T18:23:52Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "28f8a85b9ece5773a8ac75ffcd2502fc93612eff",
    "line" : 688,
    "diffHunk" : "@@ -1,1 +5181,5185 @@    array([[   0.,     3.],\n           [ 120.,     7.],\n           [ 720.,    11.],\n           [2184.,    15.]])\n"
  },
  {
    "id" : "41874936-f615-47cc-9da6-4aded9d486a8",
    "prId" : 12971,
    "prUrl" : "https://github.com/numpy/numpy/pull/12971#pullrequestreview-207133947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6c14a46-7854-4c2d-b827-0dc604f07e8e",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Needs a `.. versionadded:: 1.17.0 ",
        "createdAt" : "2019-02-18T08:55:12Z",
        "updatedAt" : "2019-05-31T13:36:13Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "74b0531a-2988-45ad-bcfd-c0b93a1be6c7",
        "parentId" : "c6c14a46-7854-4c2d-b827-0dc604f07e8e",
        "authorId" : "dc65a7e9-9eee-4544-a9a7-eeee59edf5b2",
        "body" : "fixed",
        "createdAt" : "2019-02-24T03:24:02Z",
        "updatedAt" : "2019-05-31T13:36:13Z",
        "lastEditedBy" : "dc65a7e9-9eee-4544-a9a7-eeee59edf5b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad6394c9965197bbf594191e2ae6656bbef15395",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1170,1174 @@    offset : int\n        The offset (in bytes) from the file's current position. Defaults to 0.\n        Only permitted for binary files.\n\n        .. versionadded:: 1.17.0"
  },
  {
    "id" : "b6858de7-cdcf-4411-882d-e140f1943283",
    "prId" : 13002,
    "prUrl" : "https://github.com/numpy/numpy/pull/13002#pullrequestreview-206138956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "258cf202-0dad-48e9-8290-0c41c85d08d9",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Adding `:noindex:` removed many warnings caused by manually documenting the attributes instead of autosummary documenting them. The pages render the same in html. Search still works, you get  [this](https://5997-908607-gh.circle-artifacts.com/0/home/circleci/repo/doc/build/html/search.html?q=_ctypes.data&check_keywords=yes&area=default) when searching for `_ctypes.data` vs. [this](http://www.numpy.org/devdocs/search.html?q=_ctypes.data) currently.",
        "createdAt" : "2019-02-21T06:21:50Z",
        "updatedAt" : "2019-02-28T09:46:48Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "76099ada3cca1d815e1b32f5d0c9786e1c5e0481",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +2048,2052 @@\n    .. automethod:: numpy.core._internal._ctypes.strides_as\n        :noindex:\n\n    If the ctypes module is not available, then the ctypes attribute"
  },
  {
    "id" : "b7ac6bb8-2841-4b4d-9bff-e3efef6a05dc",
    "prId" : 13002,
    "prUrl" : "https://github.com/numpy/numpy/pull/13002#pullrequestreview-209274956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02f7426e-b039-4cdc-ad7c-a412dc859cab",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "`ufunc.__call__` has no docstring. Should it?",
        "createdAt" : "2019-02-21T06:22:37Z",
        "updatedAt" : "2019-02-28T09:46:48Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "2568bb8b-fe62-4496-8e5e-c1941cacc41a",
        "parentId" : "02f7426e-b039-4cdc-ad7c-a412dc859cab",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I think `__call__` is always an implementation detail, whatever it does must be described elsewhere (e.g. in the main docstring of the object).",
        "createdAt" : "2019-02-28T19:47:51Z",
        "updatedAt" : "2019-02-28T19:47:51Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "76099ada3cca1d815e1b32f5d0c9786e1c5e0481",
    "line" : 285,
    "diffHunk" : "@@ -1,1 +5068,5072 @@        A location into which the result is stored. If not provided or `None`,\n        a freshly-allocated array is returned. For consistency with\n        ``ufunc.__call__``, if given as a keyword, this may be wrapped in a\n        1-element tuple.\n"
  },
  {
    "id" : "494a5d3f-4975-4b3c-881b-8034f07132fd",
    "prId" : 13322,
    "prUrl" : "https://github.com/numpy/numpy/pull/13322#pullrequestreview-226368154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae2d910e-762c-45d7-9f61-690d8a7f1c9c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This documentation was incorrect, and caused by the doctests running before circular imports resolved (!?)",
        "createdAt" : "2019-04-13T20:26:18Z",
        "updatedAt" : "2019-04-14T01:51:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "b87a9e2784b7e5c864ebe19708b07d7211e01e29",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4416,4420 @@    --------\n    >>> np.geterrobj()  # first get the defaults\n    [8192, 521, None]\n\n    >>> def err_handler(type, flag):"
  },
  {
    "id" : "a511a1cd-0811-423e-b874-d485767f7ba0",
    "prId" : 13767,
    "prUrl" : "https://github.com/numpy/numpy/pull/13767#pullrequestreview-248956924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eb3aae2-41a0-4c41-b874-d9556caee727",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Worth showing that this is equal to `np.core.multiarray.NEEDS_PYAPI`, perhaps by adding on the line below:\r\n```\r\n>>> np.core.multiarray.NEEDS_PYAPI\r\n16\r\n```",
        "createdAt" : "2019-06-12T18:44:53Z",
        "updatedAt" : "2019-06-17T14:10:41Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0ea8a586-7fc4-4765-8ae4-298797f01a02",
        "parentId" : "0eb3aae2-41a0-4c41-b874-d9556caee727",
        "authorId" : "6756fac1-4207-49c0-a957-2b66a2f01b1e",
        "body" : "@eric-wieser I think we should mention the correlation between the two if we are going to mention this. And I am not sure I understand that. Could you clarify this a little bit more?",
        "createdAt" : "2019-06-12T18:55:07Z",
        "updatedAt" : "2019-06-17T14:10:41Z",
        "lastEditedBy" : "6756fac1-4207-49c0-a957-2b66a2f01b1e",
        "tags" : [
        ]
      },
      {
        "id" : "59935a32-ca3e-49bb-b4a7-341547c3c416",
        "parentId" : "0eb3aae2-41a0-4c41-b874-d9556caee727",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "We already mention that correlation a few lines above",
        "createdAt" : "2019-06-12T18:58:29Z",
        "updatedAt" : "2019-06-17T14:10:41Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "680cae4966ef039bbf9cf86fa1d2169e0646bbef",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +5523,5527 @@    >>> x = np.dtype([('a', np.int32, 8), ('b', np.float64, 6)])\n    >>> x.flags\n    16\n    >>> np.core.multiarray.NEEDS_PYAPI\n    16"
  },
  {
    "id" : "1fbeeb2a-6edf-410e-9251-e5fb6381b076",
    "prId" : 13767,
    "prUrl" : "https://github.com/numpy/numpy/pull/13767#pullrequestreview-250301274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33157906-3c80-4710-8041-ac74c37233ad",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can you also add `np.dtype(('i4', (2, 3)))` here, showing what more than 1d looks like?",
        "createdAt" : "2019-06-17T05:50:39Z",
        "updatedAt" : "2019-06-17T14:10:41Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "680cae4966ef039bbf9cf86fa1d2169e0646bbef",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +5704,5708 @@    >>> dt = np.dtype(('i4', 4))\n    >>> dt.shape\n    (4,)\n\n    >>> dt = np.dtype(('i4', (2, 3)))"
  },
  {
    "id" : "7ed3a3d3-1f19-4d25-870a-ef0f465afd73",
    "prId" : 14699,
    "prUrl" : "https://github.com/numpy/numpy/pull/14699#pullrequestreview-301799148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This is weird. I think this fix, and the many like it, are indicating a bug crept into `numpydoc` or `add_newdoc`. This used to work, and while these changes fix warnings I'd prefer to solve the real issue instead.",
        "createdAt" : "2019-10-15T08:08:44Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "74d3b9cc-b86f-4e9f-9515-f4326471e987",
        "parentId" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Perhaps it has to do with the `place` argument to `add_newdoc`. For example for this function, it uses `add_newdoc('numpy.core.multiarray', 'arange', ...)`. Would the issue be fixed if using `add_newdoc('numpy', 'arange', ...)` instead?",
        "createdAt" : "2019-10-15T08:16:30Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "69be7975-6dcc-468e-b149-3afd68916795",
        "parentId" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "I would call this a feature, not a bug. Explicit beats implicit, especially with documentation. For the on-line documentation the extra 6 letters don't matter, they are turned into a link. For the off-line documentation, a bare `linspace` can be confusing, especially when just getting started.",
        "createdAt" : "2019-10-15T08:40:29Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "04ed6d5c-5d6e-41b7-872f-ec74c59ef267",
        "parentId" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "This works in many places in the same file without the prefix. Example: https://numpy.org/devdocs/reference/generated/numpy.array.html#numpy.array\r\n\r\nIf there's a good reason it needs to be this way I have no problem with adding six characters, but I want to understand why something that used to work reliably (I think) now sometimes fails.",
        "createdAt" : "2019-10-15T08:58:14Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "b2575bef-483a-49b8-b232-dcac7459711b",
        "parentId" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Something is off. The [rendered documentation for this fix](https://numpy.org/devdocs/reference/generated/numpy.arange.html?highlight=arange#numpy.arange) is creating the links even without it. Maybe I overdid it with adding `numpy.` where not needed.",
        "createdAt" : "2019-10-15T10:15:35Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "02802885-a464-48b1-ad48-972bbc42c95d",
        "parentId" : "33a4a8ca-d7ed-410f-b3fc-ccca900a0138",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "I rebased without this commit, will look at it again later",
        "createdAt" : "2019-10-15T10:17:44Z",
        "updatedAt" : "2019-10-15T15:03:29Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "efaaa96767e3ca048a3cd01107d811e345e3438c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1327,1331 @@    See Also\n    --------\n    numpy.linspace : Evenly spaced numbers with careful handling of endpoints.\n    numpy.ogrid: Arrays of evenly spaced numbers in N-dimensions.\n    numpy.mgrid: Grid-shaped arrays of evenly spaced numbers in N-dimensions."
  },
  {
    "id" : "83338255-adbb-44d9-9bbe-0212ffbfeaa2",
    "prId" : 15867,
    "prUrl" : "https://github.com/numpy/numpy/pull/15867#pullrequestreview-384891725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75665bc1-990a-4f49-bdff-90320996e3b8",
        "parentId" : null,
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "Do we need to include the parameters, return and example to this docstring ? I see other deprecated functions in the code base where this information is present.",
        "createdAt" : "2020-03-31T01:42:14Z",
        "updatedAt" : "2020-04-01T08:43:00Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "8f2c5d68-5f80-4884-bee2-69e95ab4aeb6",
        "parentId" : "75665bc1-990a-4f49-bdff-90320996e3b8",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'd argue in this case there's no point, as the functions are completely identical.",
        "createdAt" : "2020-03-31T07:34:02Z",
        "updatedAt" : "2020-04-01T08:43:00Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8b105d70-f2ce-446d-bc46-6e110bfd790a",
        "parentId" : "75665bc1-990a-4f49-bdff-90320996e3b8",
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "This will still have a slight impact on users continuing to use the deprecated tostring and calling help on tostring instead of tobytes (probably just making them run an addition help on tobytes).",
        "createdAt" : "2020-03-31T15:58:05Z",
        "updatedAt" : "2020-04-01T08:43:01Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "b5ad562b-b98a-4929-9244-c70af4f0dc88",
        "parentId" : "75665bc1-990a-4f49-bdff-90320996e3b8",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Not sure, but then it is identical and not having a full documentation means that you cannot overread the \"deprecated\" note, so I think I am happy with it.\r\n\r\nTested the ma and scalars manually, so OK with this (the C-code needs the test the most). Will probably just merge later (and leave release notes formatting, if wished, for release time).",
        "createdAt" : "2020-03-31T16:13:39Z",
        "updatedAt" : "2020-04-01T08:43:01Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6df5d8f8f55156aeb798dfd8be2425e5adbefbf1",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +3976,3980 @@\n    .. deprecated:: 1.19.0\n    \"\"\"))\n\n"
  },
  {
    "id" : "59a48315-c25c-496b-8310-97c6f5a6d624",
    "prId" : 15877,
    "prUrl" : "https://github.com/numpy/numpy/pull/15877#pullrequestreview-385119438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "180a0e3f-3ff2-4415-9786-b6342cbe02e6",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "```suggestion\r\n    nditer(op, flags=None, op_flags=None, op_dtypes=None, order='K', casting='same_kind', op_axes=None, itershape=None, buffersize=0)\r\n```\r\nSeems itershape `None` is also supported, so maybe nicer (OTOH its not documented below). I was wondering if we break the long line here, but seems we do not always, so fine to not do it.\r\n\r\nSo maybe we can just put it in as is, go ahead and merge yourself with or without the suggestion.",
        "createdAt" : "2020-03-31T15:30:53Z",
        "updatedAt" : "2020-03-31T15:30:54Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "933e4cd4-3609-43c7-97ed-83721d34ccac",
        "parentId" : "180a0e3f-3ff2-4415-9786-b6342cbe02e6",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I prefer showing `()`, since that also gives a clue about the type of the argument. Supporting `None` as an alias of an empty tuple seems weird to me, and I'm wondering how noisy it would be to deprecate it...",
        "createdAt" : "2020-03-31T15:37:48Z",
        "updatedAt" : "2020-03-31T15:37:48Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8a481628-c1d3-47ca-a3f7-9232c4f296a8",
        "parentId" : "180a0e3f-3ff2-4415-9786-b6342cbe02e6",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This spawned #15881 and #15882",
        "createdAt" : "2020-03-31T17:17:22Z",
        "updatedAt" : "2020-03-31T17:17:23Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "7719c6ca-1d00-4b87-b291-41a823076529",
        "parentId" : "180a0e3f-3ff2-4415-9786-b6342cbe02e6",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "xref #15885",
        "createdAt" : "2020-03-31T21:30:57Z",
        "updatedAt" : "2020-03-31T21:30:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a8843a82661d1dab157f0300c7e89ca709c5fe6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +153,157 @@add_newdoc('numpy.core', 'nditer',\n    \"\"\"\n    nditer(op, flags=None, op_flags=None, op_dtypes=None, order='K', casting='safe', op_axes=None, itershape=(), buffersize=0)\n\n    Efficient multi-dimensional iterator object to iterate over arrays."
  }
]