[
  {
    "id" : "7a7661e2-365a-422f-ab19-815ef9dbe48b",
    "prId" : 3974,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c384a471-c847-4922-a4fc-55e97bed2567",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Well, the style is consistent with the other functions in this file. Hmm, needs a style cleanup at some point.\n",
        "createdAt" : "2013-11-06T22:31:30Z",
        "updatedAt" : "2013-11-06T22:31:30Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcfe3260e2d6d9de7a2c3fb0022ecf124faa2ae2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +574,578 @@#include <ieeefp.h>\n\nint npy_get_floatstatus(void)\n{\n    int fpstatus = fpgetsticky();"
  },
  {
    "id" : "5e42d56a-53f6-4065-a8d1-c9214b86294b",
    "prId" : 11036,
    "prUrl" : "https://github.com/numpy/numpy/pull/11036#pullrequestreview-119185102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97d4ec6b-98c7-4326-bf12-e9e8dd1c1dc6",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Why do this check, yet pass `x` in from `npy_get_floatstatus`?",
        "createdAt" : "2018-05-10T04:32:22Z",
        "updatedAt" : "2018-05-10T04:32:23Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "afe70975-f1f3-4f21-ac43-d319d0aef6c9",
        "parentId" : "97d4ec6b-98c7-4326-bf12-e9e8dd1c1dc6",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "The correct thing to do is call `npy_get_floatstatus_barrier` directly with a local variable, this currently prevents reordering the call. See for instance `_check_ufunc_fperr` in `numpy/core/src/umath/extobj.c` (where extobj may be NULL), or line 866 in `scalarmath.c.src` which was the original place the reordering was noticed. \r\n\r\nWhen I fix the documentation from the comment [above](https://github.com/numpy/numpy/pull/11036#pullrequestreview-118975895) I will expand why the `_barrier` form is preferable.",
        "createdAt" : "2018-05-10T06:33:25Z",
        "updatedAt" : "2018-05-10T06:33:25Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "980be1df-5dd5-471e-9efc-0bb4aa6fc166",
        "parentId" : "97d4ec6b-98c7-4326-bf12-e9e8dd1c1dc6",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think @eric-wieser was asking why the check was needed at all.",
        "createdAt" : "2018-05-10T17:59:29Z",
        "updatedAt" : "2018-05-10T17:59:29Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "305ca2418844846bbb11b5487291e00d18e655a2",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +591,595 @@     * By using a volatile, the compiler cannot reorder this call\n     */\n    if (param != NULL) {\n        volatile char NPY_UNUSED(c) = *(char*)param;\n    }"
  }
]