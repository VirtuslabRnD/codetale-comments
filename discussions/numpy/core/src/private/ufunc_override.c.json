[
  {
    "id" : "6822bc4d-e206-4a18-b807-9977c89d566c",
    "prId" : 9092,
    "prUrl" : "https://github.com/numpy/numpy/pull/9092#pullrequestreview-37420139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "618f6b77-c503-4b55-9acc-f91c355a5a5a",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Seems this is only needed if obj can be destroyed before used. Is that the case?",
        "createdAt" : "2017-05-10T19:52:57Z",
        "updatedAt" : "2017-05-10T19:52:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "da4b038a-da08-4860-b8b1-46caa746c38e",
        "parentId" : "618f6b77-c503-4b55-9acc-f91c355a5a5a",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "It was just a question of where the `Py_INCREF` happens -- in @eric-wieser's initial attempt it happened just before being inserted in a tuple. Also, I thought it was annoying to pass back new references to the `__array_ufunc__` methods and borrowed references to `obj`. But I can change it if you think it is better.",
        "createdAt" : "2017-05-10T20:31:46Z",
        "updatedAt" : "2017-05-10T20:31:46Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d7e4224d5f9dbb872ac7c59a8ce43fa3523976d",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +135,139 @@            }\n            if (with_override != NULL) {\n                Py_INCREF(obj);\n                with_override[num_override_args] = obj;\n            }"
  }
]