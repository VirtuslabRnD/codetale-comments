[
  {
    "id" : "b99bf819-1ac5-4deb-9ae9-4313d0bb7eb0",
    "prId" : 3524,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4f3c121-2229-483c-9a73-3ae4d83e78d9",
        "parentId" : null,
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "Decrefing `*result` here is necessary, since PyObject_Call gives you a new reference to it that you own.\n",
        "createdAt" : "2013-08-08T21:58:23Z",
        "updatedAt" : "2013-09-06T14:23:26Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      },
      {
        "id" : "fc2c91d3-35c8-42cd-9159-9f5298cf8d57",
        "parentId" : "d4f3c121-2229-483c-9a73-3ae4d83e78d9",
        "authorId" : "c95c9493-4791-4c5c-901e-c027b37fef69",
        "body" : "This was fixed too.\n",
        "createdAt" : "2013-08-31T21:46:43Z",
        "updatedAt" : "2013-09-06T14:23:26Z",
        "lastEditedBy" : "c95c9493-4791-4c5c-901e-c027b37fef69",
        "tags" : [
        ]
      }
    ],
    "commit" : "711b9979b731745dbeff3dd47ea67eedf8603449",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@\n            /* Remove this arg if it gives not implemented */\n            if (*result == Py_NotImplemented) {\n                with_override[pos_in_with_override] = NULL;\n                Py_DECREF(*result);"
  },
  {
    "id" : "7c9eb62f-a966-4fa0-b887-150234b7f24f",
    "prId" : 3524,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "991e1d11-a55e-4eb7-9b58-aaa605a8e1fe",
        "parentId" : null,
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "This is not according to the spec. The ufunc kwargs are passed here as actual keyword args rather than as a dictionary.\nThat may actually be better, so the spec should be changed.\n\nThis does not seem to be tested for in the tests.\n",
        "createdAt" : "2013-08-17T21:06:45Z",
        "updatedAt" : "2013-09-06T14:23:26Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      },
      {
        "id" : "016f806e-8b43-4d88-b36a-5b3f6c28ff3f",
        "parentId" : "991e1d11-a55e-4eb7-9b58-aaa605a8e1fe",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "This was fixed.\n",
        "createdAt" : "2013-08-30T14:02:32Z",
        "updatedAt" : "2013-09-06T14:23:26Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "711b9979b731745dbeff3dd47ea67eedf8603449",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@            override_args = Py_BuildValue(\"OOiO\", ufunc, method_name, \n                                          override_pos, normal_args);\n            *result = PyObject_Call(numpy_ufunc, override_args, normal_kwds);\n            \n            Py_DECREF(numpy_ufunc);"
  },
  {
    "id" : "4156f79d-b2e0-4c95-bed3-ec52dae73b42",
    "prId" : 4626,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e305ff5f-768e-42ac-8939-03a5eef81eb9",
        "parentId" : null,
        "authorId" : "c95c9493-4791-4c5c-901e-c027b37fef69",
        "body" : "Do I need to `Py_DECREF(obj)` here (and other places)? I'm not sure if `PyDict_SetItemString` has its own reference to `obj` now.\n",
        "createdAt" : "2014-04-30T02:57:11Z",
        "updatedAt" : "2014-05-09T21:40:39Z",
        "lastEditedBy" : "c95c9493-4791-4c5c-901e-c027b37fef69",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8ac77c427a880eec455a05b92de9a2260d5f9d9",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +60,64 @@            /* keepdims */\n            PyDict_SetItemString(*normal_kwds, \"keepdims\", obj);\n        }\n    }\n    return;"
  },
  {
    "id" : "e4b246b2-2dcb-44d0-9cdb-00000a32a202",
    "prId" : 4826,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f507437-bc48-42d9-a86d-5d3e41518537",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "do we actually have functions that take a tuple of `out` arguments? the normal ufuncs are `out1, out2, ...` or?\n",
        "createdAt" : "2014-06-26T07:19:29Z",
        "updatedAt" : "2014-06-26T07:19:56Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "5c7c8d5d-8cbf-40b5-a715-285c0dc66154",
        "parentId" : "2f507437-bc48-42d9-a86d-5d3e41518537",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "Yes, the numpy_ufunc interface differs here from ufuncs, which keep input and output args in the same arg list.\n",
        "createdAt" : "2014-06-26T07:41:52Z",
        "updatedAt" : "2014-06-26T07:41:52Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2421f2d924ce911992bee1a8455543f9bc3e8d4d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +27,31 @@            obj = PyTuple_GetSlice(args, nin, nargs);\n            PyDict_SetItemString(*normal_kwds, \"out\", obj);\n            Py_DECREF(obj);\n        }\n    }"
  }
]