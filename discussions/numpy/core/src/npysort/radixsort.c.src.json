[
  {
    "id" : "c22b9813-d860-4c80-ab27-762dc9ef8b30",
    "prId" : 12586,
    "prUrl" : "https://github.com/numpy/numpy/pull/12586#pullrequestreview-187734789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1689c6f-3f53-4a58-baf6-660a23e0cac8",
        "parentId" : null,
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "The code segfaults for me here, with dtype `np.int32`. I've tried stepping in with LLDB, seems the value of `dst` isn't what it should be. It gets some kind of garbage value on the first pass through this loop (`i = 0`, `l = 0`), and all my expressions in LLDB say it should actually be `1`.",
        "createdAt" : "2018-12-24T18:23:03Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "1af5cd4c-0cb6-4bde-8199-1facd935b6cd",
        "parentId" : "c1689c6f-3f53-4a58-baf6-660a23e0cac8",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "Specifically, `KEY_OF(arr[i]) & 0xFF` returns `0` and `cnt[0]` is `1`, which should get incremented to `2` and `dst` should be `1`. It's not. :/",
        "createdAt" : "2018-12-24T21:56:35Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "e34db826-ae4e-47ba-a722-971d32725040",
        "parentId" : "c1689c6f-3f53-4a58-baf6-660a23e0cac8",
        "authorId" : "572b0cdf-3b71-4006-b001-359a6a3afa97",
        "body" : "It looks like maybe `cnt` was never initialized to zero before it was used.",
        "createdAt" : "2018-12-24T23:28:42Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "572b0cdf-3b71-4006-b001-359a6a3afa97",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f586789e4b4e84f8f947e6d61c8718b453632af",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@            @type@ k = KEY_OF(arr[i]);\n            npy_intp dst = cnt[cols[l]][nth_byte_@suff@(k, cols[l])]++;\n            aux[dst] = arr[i];\n        }\n"
  },
  {
    "id" : "cc9d1f75-7b1d-4a90-9cac-3df1530c22fe",
    "prId" : 12586,
    "prUrl" : "https://github.com/numpy/numpy/pull/12586#pullrequestreview-189021007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdb2567d-a921-426f-9c62-1c7ed4d484ea",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "It would be great to add a comment here explaining why this works, and linking to a reference.",
        "createdAt" : "2019-01-03T13:34:44Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1a65bf59-4934-49de-a70d-76fe0341d07a",
        "parentId" : "fdb2567d-a921-426f-9c62-1c7ed4d484ea",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "Done.",
        "createdAt" : "2019-01-03T14:01:10Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f586789e4b4e84f8f947e6d61c8718b453632af",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@        // For signed ints, we flip the sign bit so the negatives are below the positives.\n        #define KEY_OF(x) ((x) ^ ((@type@)1 << (sizeof(@type@) * 8 - 1)))\n    #endif\n#else\n    // For unsigned ints, the key is as-is"
  },
  {
    "id" : "222048db-b343-4374-8d49-be22d14a6b81",
    "prId" : 12586,
    "prUrl" : "https://github.com/numpy/numpy/pull/12586#pullrequestreview-189031134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83136d33-825f-4fe8-8aa4-f3d610c69180",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Braces please",
        "createdAt" : "2019-01-03T14:29:14Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f586789e4b4e84f8f947e6d61c8718b453632af",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@    aux = malloc(num * sizeof(npy_intp));\n    if (aux == NULL) {\n        return -NPY_ENOMEM;\n    }\n"
  },
  {
    "id" : "5aad5e19-ff4c-4d63-be42-c9fbfcb3710b",
    "prId" : 12586,
    "prUrl" : "https://github.com/numpy/numpy/pull/12586#pullrequestreview-195161525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Can we add a comment on why this (handling floats) is included but not actually enabled?",
        "createdAt" : "2019-01-22T17:11:18Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "2151ffb6-966d-48ea-936d-8d79203ee43d",
        "parentId" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "I’m not sure... Tests succeeded on macOS, but not on Windows/Linux, I didn’t attempt to debug too much after that. Is there an expert on bit-level differences in platforms with regard to floating point representations?",
        "createdAt" : "2019-01-22T17:32:14Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "39fea91c-8c44-4660-b0d7-258628668d23",
        "parentId" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "The issue is, regular tests succeeded... Some of the other tests relying on sort failed. Maybe floating-point normalisation?",
        "createdAt" : "2019-01-22T17:33:33Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "34df409a-ce58-4f4c-a804-57ba58265cb5",
        "parentId" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "It's fine that we haven't figured this out yet, but let's add a note to summarize what you just said for future readers/maintainers of this code.",
        "createdAt" : "2019-01-22T17:39:27Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "9068ae93-8d19-49aa-aa83-44119dd5bcbe",
        "parentId" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "authorId" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "body" : "Done!",
        "createdAt" : "2019-01-22T18:23:17Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "48239ed9-0e9e-4f16-80c7-12419f1efd99",
        "tags" : [
        ]
      },
      {
        "id" : "1c35ea83-4413-420f-8093-dc779d07e256",
        "parentId" : "96515f8a-5ba6-4eba-910c-a70d99f64465",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Looks great, thanks!",
        "createdAt" : "2019-01-22T18:25:40Z",
        "updatedAt" : "2019-05-11T22:13:51Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f586789e4b4e84f8f947e6d61c8718b453632af",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@    // Basic sorting tests succeed but others relying on sort fail.\n    // Possibly related to floating-point normalisation or multiple NaN reprs? Not sure.\n    #if @floating@\n        // For floats, we invert the key if the sign bit is set, else we invert the sign bit.\n        #define KEY_OF(x) ((x) ^ (-((x) >> (sizeof(@type@) * 8 - 1)) | ((@type@)1 << (sizeof(@type@) * 8 - 1))))"
  }
]