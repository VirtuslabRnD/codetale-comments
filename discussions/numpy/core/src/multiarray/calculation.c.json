[
  {
    "id" : "9e9a82d1-b048-4c03-abe6-58881dc78e65",
    "prId" : 11239,
    "prUrl" : "https://github.com/numpy/numpy/pull/11239#pullrequestreview-125691718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "892bdb4d-2d11-4c2f-a029-2c1140513e25",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "We're making the assumption that `PyArray_DescrFromType` does not return `NULL` here. This is already assumed elsewhere",
        "createdAt" : "2018-06-04T01:26:37Z",
        "updatedAt" : "2018-06-04T05:34:21Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "abf4dd75-e33a-4ead-aded-9487f06b9a7f",
        "parentId" : "892bdb4d-2d11-4c2f-a029-2c1140513e25",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I assume this is safe because it is a known numeric type?",
        "createdAt" : "2018-06-04T18:19:06Z",
        "updatedAt" : "2018-06-04T18:19:06Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e531d0e4-7b61-4b19-9a2d-2c3e4e6843ee",
        "parentId" : "892bdb4d-2d11-4c2f-a029-2c1140513e25",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Yep, `PyArray_DescrFromType` starts with an error-free lookup of builtin type numbers",
        "createdAt" : "2018-06-04T18:29:57Z",
        "updatedAt" : "2018-06-04T18:29:58Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "01566ca5ad5579798f30b5d364d36ab812cdc4dc",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +102,106 @@    if (!out) {\n        rp = (PyArrayObject *)PyArray_NewFromDescr(\n                Py_TYPE(ap), PyArray_DescrFromType(NPY_INTP),\n                PyArray_NDIM(ap) - 1, PyArray_DIMS(ap), NULL, NULL,\n                0, (PyObject *)ap);"
  },
  {
    "id" : "8f7b87db-7e8b-4e95-b383-5472a2f2549a",
    "prId" : 12519,
    "prUrl" : "https://github.com/numpy/numpy/pull/12519#pullrequestreview-209089410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba9ae036-78f7-418c-9640-fa6c99a456fb",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "`func` can not be `NULL` here.",
        "createdAt" : "2019-02-28T14:08:37Z",
        "updatedAt" : "2019-05-15T17:09:02Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f0bb1dc7611e5401a52103623d15ea4b3dd00f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +940,944 @@    /* everything below can be removed once this deprecation completes */\n\n    if (func == NULL\n        || (min != NULL && !PyArray_CheckAnyScalar(min))\n        || (max != NULL && !PyArray_CheckAnyScalar(max))"
  },
  {
    "id" : "f8c89534-fea1-423e-9baf-6a6768daf7bf",
    "prId" : 18593,
    "prUrl" : "https://github.com/numpy/numpy/pull/18593#pullrequestreview-615894019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4edac48-5e3a-4786-a33a-44da15819dcc",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "We never test this function with an `out` argument?",
        "createdAt" : "2021-03-18T20:54:38Z",
        "updatedAt" : "2021-03-18T21:36:16Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "5c48ec23-8a49-4877-8a9d-1b7bd5f2118a",
        "parentId" : "f4edac48-5e3a-4786-a33a-44da15819dcc",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Strange... I added a small test, this isn't even documented and positional only (that `arr.conjugate(out)` works).",
        "createdAt" : "2021-03-18T21:36:51Z",
        "updatedAt" : "2021-03-18T21:36:51Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7af05a849b3b81922ec3da988494a70a875ca91",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1213,1217 @@        }\n        else {\n            return PyArray_GenericBinaryFunction((PyObject *)self,\n                                                 (PyObject *)out,\n                                                 n_ops.conjugate);"
  }
]