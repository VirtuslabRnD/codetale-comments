[
  {
    "id" : "c9fc827d-a1fc-4ee9-b60d-008fc46f9114",
    "prId" : 372,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6073978-34d3-4bc0-86f5-853495a3a976",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Can't say I'm happy with PyUnicode_Kind being changed to be a size, but that is a Python issue...\n",
        "createdAt" : "2012-08-03T16:22:41Z",
        "updatedAt" : "2012-08-03T18:46:46Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2ac38f09ff258339ef44572a3abba02019e1f55",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2594,2598 @@    if (itemsize == 0) { /* unicode */\n#if PY_VERSION_HEX >= 0x03030000\n        itemsize = PyUnicode_GetLength(robj) * PyUnicode_KIND(robj);\n#else\n        itemsize = ((PyUnicodeObject *)robj)->length * sizeof(Py_UNICODE);"
  },
  {
    "id" : "00107def-db2e-4cf6-b826-2bffafc569c5",
    "prId" : 4177,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66848e29-4eef-4934-84dc-f4189264fcde",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Where does this get freed?\n",
        "createdAt" : "2014-01-09T03:06:22Z",
        "updatedAt" : "2014-01-09T03:06:22Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a07cb587-2a87-489f-b323-f1b34b64c2f1",
        "parentId" : "66848e29-4eef-4934-84dc-f4189264fcde",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "via the tp_free slot in gentype_dealloc\n",
        "createdAt" : "2014-01-09T18:24:33Z",
        "updatedAt" : "2014-01-09T18:24:33Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "6834b3a2da002eccc279a9e9a594713a467cc483",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +112,116 @@    const size_t size = _PyObject_VAR_SIZE(type, nitems + 1);\n\n    obj = (PyObject *)PyObject_Malloc(size);\n    memset(obj, 0, size);\n    if (type->tp_itemsize == 0) {"
  },
  {
    "id" : "66785096-5e49-4c15-88dd-1962c26d30b3",
    "prId" : 4248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67c75a6b-bc33-4c3b-ad3a-39407c81224c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Does this inherit `tp_free`?\n",
        "createdAt" : "2014-02-02T05:18:08Z",
        "updatedAt" : "2014-02-02T05:18:08Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "fc873711-9f9f-48da-864d-6377b11772e8",
        "parentId" : "67c75a6b-bc33-4c3b-ad3a-39407c81224c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "`tp_alloc` is `NULL` so `tp_free` should be too so it inherits from whatever pair of alloc/free functions was used\nI think this was actually a hunk accidentally left in from testing my original patch.\n",
        "createdAt" : "2014-02-02T15:40:42Z",
        "updatedAt" : "2014-02-02T15:40:42Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ebefec819ec3c193d4763d9f995c053fee58a3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +4022,4026 @@\n    PyStringArrType_Type.tp_alloc = NULL;\n    PyStringArrType_Type.tp_free = NULL;\n\n    PyStringArrType_Type.tp_repr = stringtype_repr;"
  },
  {
    "id" : "b495d385-37fd-4976-a6d9-8387222f9644",
    "prId" : 4349,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f2029bd-d03e-4a1d-99ac-3564bdc274c7",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Bit surprising gentype_free hasn't the right type.\n",
        "createdAt" : "2014-02-22T15:30:57Z",
        "updatedAt" : "2014-02-22T15:30:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "d1e4e772-9403-48ae-bcb6-ab7983742902",
        "parentId" : "5f2029bd-d03e-4a1d-99ac-3564bdc274c7",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "its PyObject\\* vs void*, we can move the cast into the function too, but its only used in these two spots so it doesn't matter\n",
        "createdAt" : "2014-02-22T15:32:08Z",
        "updatedAt" : "2014-02-22T15:32:08Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "a5fe308c-e668-4ab1-9611-3ef1ad5487ca",
        "parentId" : "5f2029bd-d03e-4a1d-99ac-3564bdc274c7",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Would be cleaner though...\n",
        "createdAt" : "2014-02-22T16:10:03Z",
        "updatedAt" : "2014-02-22T16:10:03Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dcfcc5f58140c5f09fde8fae90720e32f7d3096",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +3989,3993 @@    PyGenericArrType_Type.tp_new = NULL;\n    PyGenericArrType_Type.tp_alloc = gentype_alloc;\n    PyGenericArrType_Type.tp_free = (freefunc)gentype_free;\n    PyGenericArrType_Type.tp_repr = gentype_repr;\n    PyGenericArrType_Type.tp_str = gentype_str;"
  },
  {
    "id" : "882cb6ae-8d40-4949-b2eb-f8be6a58545a",
    "prId" : 5056,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55ecfd14-cddc-4da2-a087-c5233472d97a",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I guess a hash table wouldn't be any faster here.\n",
        "createdAt" : "2014-09-07T14:02:09Z",
        "updatedAt" : "2014-09-07T14:02:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f550591567b6643c7e7d0c897683f8319032ed1",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +4288,4292 @@\nNPY_NO_EXPORT int\nget_typeobj_idx(PyTypeObject * obj)\n{\n    npy_intp imin = 0, imax = sizeof(typeobjects) / sizeof(typeobjects[0]) - 1;"
  }
]