[
  {
    "id" : "c9fc827d-a1fc-4ee9-b60d-008fc46f9114",
    "prId" : 372,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6073978-34d3-4bc0-86f5-853495a3a976",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Can't say I'm happy with PyUnicode_Kind being changed to be a size, but that is a Python issue...\n",
        "createdAt" : "2012-08-03T16:22:41Z",
        "updatedAt" : "2012-08-03T18:46:46Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2ac38f09ff258339ef44572a3abba02019e1f55",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2594,2598 @@    if (itemsize == 0) { /* unicode */\n#if PY_VERSION_HEX >= 0x03030000\n        itemsize = PyUnicode_GetLength(robj) * PyUnicode_KIND(robj);\n#else\n        itemsize = ((PyUnicodeObject *)robj)->length * sizeof(Py_UNICODE);"
  },
  {
    "id" : "00107def-db2e-4cf6-b826-2bffafc569c5",
    "prId" : 4177,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66848e29-4eef-4934-84dc-f4189264fcde",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Where does this get freed?\n",
        "createdAt" : "2014-01-09T03:06:22Z",
        "updatedAt" : "2014-01-09T03:06:22Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a07cb587-2a87-489f-b323-f1b34b64c2f1",
        "parentId" : "66848e29-4eef-4934-84dc-f4189264fcde",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "via the tp_free slot in gentype_dealloc\n",
        "createdAt" : "2014-01-09T18:24:33Z",
        "updatedAt" : "2014-01-09T18:24:33Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "6834b3a2da002eccc279a9e9a594713a467cc483",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +112,116 @@    const size_t size = _PyObject_VAR_SIZE(type, nitems + 1);\n\n    obj = (PyObject *)PyObject_Malloc(size);\n    memset(obj, 0, size);\n    if (type->tp_itemsize == 0) {"
  }
]