[
  {
    "id" : "c7902853-f5ca-41d1-8c8b-dd9d0f380c99",
    "prId" : 278,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c164f60-af07-4d80-8dec-77cc41e5a3ec",
        "parentId" : null,
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "As discussed on the mailing list earlier, wouldn't this prevent implementations that currently handle these arrays just fine from operating?  It still looks like the right call to me, but I wanted to check.  For the rest, the patch looks good.\n",
        "createdAt" : "2012-05-10T21:58:36Z",
        "updatedAt" : "2012-05-10T21:58:36Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      },
      {
        "id" : "299a98ec-b243-470b-ba58-33589bb4a63f",
        "parentId" : "5c164f60-af07-4d80-8dec-77cc41e5a3ec",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "This prevents code which currently produce invalid results for NA inputs from running, by raising an exception instead. This way, people can write code the way they're accustomed to, without worrying about NAs producing bizarre results. If they choose to later support NA, it will be obvious where to do that because of these exceptions.\n",
        "createdAt" : "2012-05-10T22:01:37Z",
        "updatedAt" : "2012-05-10T22:01:37Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      },
      {
        "id" : "aa7ff60b-af7d-44b9-816a-493e20326682",
        "parentId" : "5c164f60-af07-4d80-8dec-77cc41e5a3ec",
        "authorId" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "body" : "Right, I guess changing a NA to another value without knowing could have dire consequences for the array interpretation.\n\n+1\n",
        "createdAt" : "2012-05-10T22:05:44Z",
        "updatedAt" : "2012-05-10T22:05:44Z",
        "lastEditedBy" : "810880d7-9b25-4940-a0cb-9281ddc2d16a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfa66da9bddf4bd50a0c098d8d2dc79b17e8b4a2",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +610,614 @@        PyErr_SetString(PyExc_TypeError, \"NA-masked arrays are not supported by the Python buffer protocol\");\n        goto fail;\n    }\n    if ((flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS &&\n        !PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)) {"
  },
  {
    "id" : "fdcc380a-a96e-40e4-bcf1-6485f158614a",
    "prId" : 3655,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eb4deec-9417-4981-a4a2-2579ea60c0a4",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is this malloc checked further down?\n",
        "createdAt" : "2013-08-29T22:03:13Z",
        "updatedAt" : "2013-08-30T09:59:00Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9680b46b-5c72-4f63-81d8-aecf6c2acc3f",
        "parentId" : "8eb4deec-9417-4981-a4a2-2579ea60c0a4",
        "authorId" : "acce7360-5cef-46f0-ab05-4fb0ffdffe3a",
        "body" : "It's not, and the caller is doing a lot of unchecked stuff. Fixing that now.\n",
        "createdAt" : "2013-08-30T09:38:02Z",
        "updatedAt" : "2013-08-30T09:59:00Z",
        "lastEditedBy" : "acce7360-5cef-46f0-ab05-4fb0ffdffe3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0167ac1daa6adb058d646efd0790ce129059116a",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +467,471 @@    }\n    else {\n        info->shape = malloc(sizeof(Py_ssize_t) * PyArray_NDIM(arr) * 2 + 1);\n        if (info->shape == NULL) {\n            goto fail;"
  },
  {
    "id" : "9ad89189-f489-40b4-81e4-1de6f57ea073",
    "prId" : 3779,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c30a09d9-6fb1-4c31-8caf-7e982c677f71",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What is the distinction here? Does non-native determine the precision?\n",
        "createdAt" : "2013-09-22T18:14:25Z",
        "updatedAt" : "2013-09-22T18:14:25Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bb19b6be-adf7-4903-8eec-3f7a11726d5a",
        "parentId" : "c30a09d9-6fb1-4c31-8caf-7e982c677f71",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "It's this: http://docs.python.org/2/library/struct.html#byte-order-size-and-alignment\n\nNative determines whether the size comes from C compiler, or that table in Python docs.\n",
        "createdAt" : "2013-09-22T18:15:17Z",
        "updatedAt" : "2013-09-22T18:16:08Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7aec6035d2b2cfbcabe84e308ce3b09ea5fe540",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +930,934 @@    case 'i': return native ? NPY_INT : NPY_INT32;\n    case 'I': return native ? NPY_UINT : NPY_UINT32;\n    case 'l': return native ? NPY_LONG : NPY_INT32;\n    case 'L': return native ? NPY_ULONG : NPY_UINT32;\n    case 'q': return native ? NPY_LONGLONG : NPY_INT64;"
  },
  {
    "id" : "daca84da-2555-4c53-bf05-81627c6b1fc0",
    "prId" : 4197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c73f58c-1970-49c9-9094-07ed37813b7b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Looks like at least one of the elements of `fmt` should be initialized with a `NULL` rather than 0. It's a small point, but...\n",
        "createdAt" : "2014-01-15T03:13:16Z",
        "updatedAt" : "2014-01-15T23:30:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f8d33bc755b869639e38e0482c0abda956578cc",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +455,459 @@    /* Fill in format */\n    if (_buffer_format_string(PyArray_DESCR(arr), &fmt, arr, NULL, NULL) != 0) {\n        free(fmt.s);\n        goto fail;\n    }"
  }
]