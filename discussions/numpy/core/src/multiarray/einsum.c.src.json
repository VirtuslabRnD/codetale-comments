[
  {
    "id" : "352f954f-657b-4299-a99d-9c8956e56a28",
    "prId" : 3341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90eb9535-0609-4aed-8f74-1f2718898592",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I  believe this comes in indirectly with `numpy/arrayobject.h`\n",
        "createdAt" : "2013-05-22T01:28:38Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "95b1ca9f-106b-4132-aa93-b85e1b3d913e",
        "parentId" : "90eb9535-0609-4aed-8f74-1f2718898592",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "nvm, it only gets `numpyconfig.h`.\n",
        "createdAt" : "2013-05-22T01:33:33Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ea0c3578-065e-4b10-bf49-8ff1a52da76c",
        "parentId" : "90eb9535-0609-4aed-8f74-1f2718898592",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "even if it would, its better to include what you use directly (HAVE_EMMINTRIN_H), else you risk it silently reverting due to a removed include in another header\n",
        "createdAt" : "2013-05-22T17:29:41Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe69102dd34619ce18cf074ef0e6e46611bc17e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +18,22 @@#include <numpy/halffloat.h>\n#include <npy_pycompat.h>\n#include <npy_config.h>\n\n#include <ctype.h>"
  },
  {
    "id" : "f7b0aaac-2a28-4dd2-afc0-59d329188757",
    "prId" : 3772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2cbccda-0061-4c7d-9674-05464c15cba9",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "`npy_common.h` his comes in with `arrayobject.h`.\n",
        "createdAt" : "2013-09-21T21:04:31Z",
        "updatedAt" : "2013-09-21T21:04:31Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "09e7b7e6-c5a5-4a01-8566-024ca69c03c9",
        "parentId" : "a2cbccda-0061-4c7d-9674-05464c15cba9",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "we want a direct include, if for some reason it is dropped from arrayobject we don't want the define to disappear from this file.\n",
        "createdAt" : "2013-09-21T21:21:59Z",
        "updatedAt" : "2013-09-21T21:21:59Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd2e1104718490be8504f8d6665205ca594a37e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +15,19 @@#define NPY_NO_DEPRECATED_API NPY_API_VERSION\n#define _MULTIARRAYMODULE\n#include <numpy/npy_common.h>\n#include <numpy/arrayobject.h>\n#include <numpy/halffloat.h>"
  },
  {
    "id" : "eff6babd-490f-48c9-9130-eaf61b6cce01",
    "prId" : 10798,
    "prUrl" : "https://github.com/numpy/numpy/pull/10798#pullrequestreview-106747445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18d68f07-21bc-42af-aaee-3e406029b535",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Should this `combineoffset` check come first?",
        "createdAt" : "2018-03-25T22:49:33Z",
        "updatedAt" : "2018-03-25T22:49:33Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "dc236df7-e716-4792-bc34-04828aa42753",
        "parentId" : "18d68f07-21bc-42af-aaee-3e406029b535",
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "Not really. `i` has to be mapped to the value of `icombine` (which is only advanced when a label is seen for the first time) of the first time this label was found, which was in dimension `idim + combineoffset`, and this has to be done regardless of whether this is the first time we see this label or not.",
        "createdAt" : "2018-03-25T22:54:48Z",
        "updatedAt" : "2018-03-25T22:54:48Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      },
      {
        "id" : "73427d71-cb34-41e0-99b1-0882a43c01bd",
        "parentId" : "18d68f07-21bc-42af-aaee-3e406029b535",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "My thinking is that this could index out of range if `combineoffset` is negative",
        "createdAt" : "2018-03-25T23:06:54Z",
        "updatedAt" : "2018-03-25T23:06:54Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1146a9a473b7dc229fe457a383afd5394cd5cf2",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2227,2231 @@            /* Update the combined axis dimensions and strides */\n            int i = icombinemap[idim + combineoffset];\n            if (combineoffset < 0 && new_dims[i] != 0 &&\n                        new_dims[i] != PyArray_DIM(op, idim)) {\n                PyErr_Format(PyExc_ValueError,"
  },
  {
    "id" : "5eb83919-2182-45db-8a61-399b8667c149",
    "prId" : 11095,
    "prUrl" : "https://github.com/numpy/numpy/pull/11095#pullrequestreview-120476522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50d7a7c0-3ad1-4920-bb6a-2167442d542e",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Why the cast from `char` to `int`?",
        "createdAt" : "2018-05-15T00:44:24Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8e95154e-5278-4edb-8b1f-8f3718f40115",
        "parentId" : "50d7a7c0-3ad1-4920-bb6a-2167442d542e",
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "It seems unnecessary here. Elsewhere I guess `label` is made an int because negative values are relevant and it's shorter than `signed char`. I guess it makes sense to keep a consistent typing, even if it is not strictly needed?",
        "createdAt" : "2018-05-15T23:15:26Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      },
      {
        "id" : "4f57e6b5-3876-44a1-aa55-1e83b083b96b",
        "parentId" : "50d7a7c0-3ad1-4920-bb6a-2167442d542e",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The behavior of `signed char` and `int` is very different here - once will correctly store signed values whatever the system `char` is, whereas the other may end up storing an int in `[0, 256)`",
        "createdAt" : "2018-05-16T02:34:41Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2d59257b0d5e24d9f3811df5c314d525acfc0cb",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +1801,1805 @@    /* Process all labels for this operand */\n    for (i = 0; i < length; ++i) {\n        int label = subscripts[i];\n\n        /* A proper label for an axis. */"
  },
  {
    "id" : "f0a89c12-9abb-424b-aa9b-1e6e03ca2674",
    "prId" : 11095,
    "prUrl" : "https://github.com/numpy/numpy/pull/11095#pullrequestreview-120448591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b45a07-ef05-49d5-8ec4-c33977bb061c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "`label > 0` is always true on platforms with an unsigned char",
        "createdAt" : "2018-05-15T00:44:50Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "2ee7e6ff-9c9a-4af6-837d-01571d64dc8d",
        "parentId" : "72b45a07-ef05-49d5-8ec4-c33977bb061c",
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "Even if the char is signed, all the values for which `isalpha` would return true are < 128, so it seems like a redundant check indeed...",
        "createdAt" : "2018-05-15T23:19:36Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2d59257b0d5e24d9f3811df5c314d525acfc0cb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1804,1808 @@\n        /* A proper label for an axis. */\n        if (label > 0 && isalpha(label)) {\n            /* Check we don't exceed the operator dimensions. */\n            if (idim >= ndim) {"
  },
  {
    "id" : "5dde4713-1d89-421a-a298-2425f45916f6",
    "prId" : 11095,
    "prUrl" : "https://github.com/numpy/numpy/pull/11095#pullrequestreview-120056627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78a367e0-e453-4df7-a2a8-437a79dcfac3",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I agree with @mhvk here: these should return `-1`, but that can come in a later PR if needed",
        "createdAt" : "2018-05-15T00:49:05Z",
        "updatedAt" : "2018-05-18T07:16:55Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2d59257b0d5e24d9f3811df5c314d525acfc0cb",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +1831,1835 @@                             \"'.' that is not part of an ellipsis ('...') \"\n                             \"in operand %d\", iop);\n                return 0;\n            }\n"
  },
  {
    "id" : "f7b3a0e3-ccdd-4629-a9b8-2f9764f985c3",
    "prId" : 11230,
    "prUrl" : "https://github.com/numpy/numpy/pull/11230#pullrequestreview-126667269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3b8f5f0-77ad-4d0d-866a-ccbd5738c900",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Any chance you could comment `icombinemap`, assuming you've worked out what it does?",
        "createdAt" : "2018-06-07T07:49:58Z",
        "updatedAt" : "2018-06-13T20:30:46Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d914234ba39db75b7158c950d2739a9d3013de4",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +2118,2122 @@    npy_intp new_dims[NPY_MAXDIMS];\n    int idim, icombine;\n    int icombinemap[NPY_MAXDIMS];\n    int ndim = PyArray_NDIM(op);\n    PyArrayObject *ret = NULL;"
  },
  {
    "id" : "1dab1b1d-7c08-42c4-9414-a7de371f4835",
    "prId" : 11230,
    "prUrl" : "https://github.com/numpy/numpy/pull/11230#pullrequestreview-192498903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bd70d4c-b4f4-49f0-b26f-ceedc973cd5a",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Does this change the result of `x = np.eye(2); np.einsum('ij', x) is x`?",
        "createdAt" : "2018-06-26T03:20:56Z",
        "updatedAt" : "2018-06-26T03:21:05Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "dfa86719-d1eb-4b2f-9100-40248c1b25f9",
        "parentId" : "0bd70d4c-b4f4-49f0-b26f-ceedc973cd5a",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "(which is currently `False`)",
        "createdAt" : "2019-01-15T06:22:31Z",
        "updatedAt" : "2019-01-15T06:22:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d914234ba39db75b7158c950d2739a9d3013de4",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +2123,2127 @@\n    /* A fast path to avoid unnecessary calculations. */\n    if (!_any_labels_are_negative((signed char *)labels, ndim)) {\n        Py_INCREF(op);\n"
  },
  {
    "id" : "11befce0-00f5-4619-865d-4666bd0753f9",
    "prId" : 11230,
    "prUrl" : "https://github.com/numpy/numpy/pull/11230#pullrequestreview-131853449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dd51eff-2085-4379-b9b8-f7f82140db25",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Could change to `i >= idim` for a marginal gain in efficiency",
        "createdAt" : "2018-06-26T03:21:31Z",
        "updatedAt" : "2018-06-26T03:21:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d914234ba39db75b7158c950d2739a9d3013de4",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +2171,2175 @@        int i = icombinemap[idim];\n\n        if (i >= 0) {\n            labels[i] = labels[idim];\n        }"
  },
  {
    "id" : "7b97517f-17c3-4bd3-90bd-2f95b4aa33a3",
    "prId" : 11286,
    "prUrl" : "https://github.com/numpy/numpy/pull/11286#pullrequestreview-128137283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51c4550f-4c3d-4c47-a2c5-b1365551ead3",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Would be clearer to move `((dtype != NULL) ? 0 : NPY_ITER_COMMON_DTYPE)` out of the ternary and into a similar if",
        "createdAt" : "2018-06-08T23:44:47Z",
        "updatedAt" : "2018-06-12T20:33:00Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "c9079181-e977-4e0d-96d3-f7d9087123f8",
        "parentId" : "51c4550f-4c3d-4c47-a2c5-b1365551ead3",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "I think once that minor change has been made, this is ready to go in.",
        "createdAt" : "2018-06-10T17:50:13Z",
        "updatedAt" : "2018-06-12T20:33:00Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "6b2be694-74e1-4a80-93ab-d33bcf29b154",
        "parentId" : "51c4550f-4c3d-4c47-a2c5-b1365551ead3",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "changed",
        "createdAt" : "2018-06-12T20:33:59Z",
        "updatedAt" : "2018-06-12T20:33:59Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "01a0971afc00b5ab610d3cb72d1111452c663bf2",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +2755,2759 @@    if (out != NULL) {\n        iter_flags |= NPY_ITER_COPY_IF_OVERLAP;\n    }\n    if (dtype == NULL) {\n        iter_flags |= NPY_ITER_COMMON_DTYPE;"
  }
]