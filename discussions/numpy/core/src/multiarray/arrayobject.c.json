[
  {
    "id" : "eb094b24-fe7c-4e67-af02-94d06807e2fb",
    "prId" : 3514,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce60aabd-58cc-46a8-91c6-59e6ded69e6d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So `Py_None` will now be broadcast?\n",
        "createdAt" : "2013-12-22T22:40:00Z",
        "updatedAt" : "2014-05-04T19:06:24Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1e05a780-dc66-4ccb-9cf9-970593cb77f5",
        "parentId" : "ce60aabd-58cc-46a8-91c6-59e6ded69e6d",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Yes. Should ping the list before about all of these changes, I guess.\n",
        "createdAt" : "2013-12-22T23:07:17Z",
        "updatedAt" : "2014-05-04T19:06:24Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f40831a53ff2d572f338b1445e40bc88a1167ce7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1293,1297 @@    case Py_EQ:\n        if (other == Py_None) {\n            if (DEPRECATE_FUTUREWARNING(\"comparison to `None` will result in \"\n                    \"an elementwise object comparison in the future.\") < 0) {\n                return NULL;"
  },
  {
    "id" : "e8627c25-bf8e-4fa5-9e8e-bf8a85465e6a",
    "prId" : 3655,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef0bc557-853b-401b-b05e-c106937a10e0",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK, looks like `PyObject_Init` raises an error when `obj == NULL`.\n",
        "createdAt" : "2013-08-30T13:12:06Z",
        "updatedAt" : "2013-08-30T13:12:06Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0167ac1daa6adb058d646efd0790ce129059116a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1661,1665 @@    /* nitems will always be 0 */\n    PyObject *obj = PyArray_malloc(type->tp_basicsize);\n    PyObject_Init(obj, type);\n    return obj;\n}"
  },
  {
    "id" : "fa3a0b86-28d2-4872-acb3-8d4b2572b17d",
    "prId" : 4248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a53a1a6-20d1-4dec-afe0-7c698f4abefe",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I assume this can't be inline, so a note to that effect would be helpful.\n",
        "createdAt" : "2014-02-02T05:15:44Z",
        "updatedAt" : "2014-02-02T05:15:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "d71399bf-d6af-4cfe-945c-26acb12e6e82",
        "parentId" : "5a53a1a6-20d1-4dec-afe0-7c698f4abefe",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "it can if the compiler is not dumb and produces wrong code.\nthe function is referenced in a non-inlineable spot so it must emit a body.\n",
        "createdAt" : "2014-02-02T15:38:24Z",
        "updatedAt" : "2014-02-02T15:38:24Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "a7dd6cfb-4f8d-4bde-acb9-bce482106791",
        "parentId" : "5a53a1a6-20d1-4dec-afe0-7c698f4abefe",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Ah, right.\n",
        "createdAt" : "2014-02-02T16:46:33Z",
        "updatedAt" : "2014-02-02T16:46:33Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ebefec819ec3c193d4763d9f995c053fee58a3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1685,1689 @@}\n\nstatic PyObject *\narray_free(PyObject * v)\n{"
  },
  {
    "id" : "998a91ba-0994-4cfd-95bb-dbf9ab50149b",
    "prId" : 5124,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cf01bfc-60ce-4ee5-b6b1-fd716c9a0c77",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I assume `op` is `Py_DECREF`ed in the `end` cleanup?\n",
        "createdAt" : "2014-09-30T02:03:49Z",
        "updatedAt" : "2014-09-30T02:03:49Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "f3a163c2-6d0d-4aa3-87fe-f35195d4e59a",
        "parentId" : "3cf01bfc-60ce-4ee5-b6b1-fd716c9a0c77",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "nvm, I see it down below.\n",
        "createdAt" : "2014-09-30T02:06:39Z",
        "updatedAt" : "2014-09-30T02:06:39Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc4bf4421a84eec6e17ddf09a3d2beacf4ea4b7",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +478,482 @@        if (sp == NULL) {\n            ret = -1;\n            goto end;\n        }\n        ostring = PyString_AsString(sp);"
  },
  {
    "id" : "4915e98c-cdfc-4cae-8605-e72e7b0f7c05",
    "prId" : 9167,
    "prUrl" : "https://github.com/numpy/numpy/pull/9167#pullrequestreview-39916435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "534cba1d-ea76-46e1-9114-d1c1dbb48342",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Don't we need this in `NE` too?",
        "createdAt" : "2017-05-23T23:52:17Z",
        "updatedAt" : "2017-05-24T00:44:45Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "fe56d093-2feb-417c-a7c7-ccbccb66f616",
        "parentId" : "534cba1d-ea76-46e1-9114-d1c1dbb48342",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Geez, I'm not being very bright today! And that only shows that my test is wrong too.  Will fix!",
        "createdAt" : "2017-05-24T00:41:06Z",
        "updatedAt" : "2017-05-24T00:44:45Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "4a8728b5-9de6-46cb-99bb-d0f000608374",
        "parentId" : "534cba1d-ea76-46e1-9114-d1c1dbb48342",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "How did the test change?",
        "createdAt" : "2017-05-24T01:40:54Z",
        "updatedAt" : "2017-05-24T01:40:54Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "5e545045-46ac-4bd7-be0b-26c564124ed1",
        "parentId" : "534cba1d-ea76-46e1-9114-d1c1dbb48342",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "My initial test did not even use a structured array for the comparison, so it passed trivially! (I did check that the current test fails on master)",
        "createdAt" : "2017-05-24T02:43:36Z",
        "updatedAt" : "2017-05-24T02:43:36Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b4acac9f3521bd52dd411dce6c18372a5960c4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1346,1350 @@        break;\n    case Py_EQ:\n        RICHCMP_GIVE_UP_IF_NEEDED(obj_self, other);\n        /*\n         * The ufunc does not support void/structured types, so these"
  }
]