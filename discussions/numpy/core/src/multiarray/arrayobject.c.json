[
  {
    "id" : "eb094b24-fe7c-4e67-af02-94d06807e2fb",
    "prId" : 3514,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce60aabd-58cc-46a8-91c6-59e6ded69e6d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So `Py_None` will now be broadcast?\n",
        "createdAt" : "2013-12-22T22:40:00Z",
        "updatedAt" : "2014-05-04T19:06:24Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1e05a780-dc66-4ccb-9cf9-970593cb77f5",
        "parentId" : "ce60aabd-58cc-46a8-91c6-59e6ded69e6d",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Yes. Should ping the list before about all of these changes, I guess.\n",
        "createdAt" : "2013-12-22T23:07:17Z",
        "updatedAt" : "2014-05-04T19:06:24Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f40831a53ff2d572f338b1445e40bc88a1167ce7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1293,1297 @@    case Py_EQ:\n        if (other == Py_None) {\n            if (DEPRECATE_FUTUREWARNING(\"comparison to `None` will result in \"\n                    \"an elementwise object comparison in the future.\") < 0) {\n                return NULL;"
  },
  {
    "id" : "e8627c25-bf8e-4fa5-9e8e-bf8a85465e6a",
    "prId" : 3655,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef0bc557-853b-401b-b05e-c106937a10e0",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK, looks like `PyObject_Init` raises an error when `obj == NULL`.\n",
        "createdAt" : "2013-08-30T13:12:06Z",
        "updatedAt" : "2013-08-30T13:12:06Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0167ac1daa6adb058d646efd0790ce129059116a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1661,1665 @@    /* nitems will always be 0 */\n    PyObject *obj = PyArray_malloc(type->tp_basicsize);\n    PyObject_Init(obj, type);\n    return obj;\n}"
  }
]