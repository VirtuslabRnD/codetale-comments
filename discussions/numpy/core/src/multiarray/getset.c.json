[
  {
    "id" : "35892336-0ec9-4bee-a2b9-9385569f8aad",
    "prId" : 2780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eebb196d-7ab3-49e6-8629-614bec4a489d",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Heh. Did this raise a compiler error? I just want to make sure we didn't miss any other spots.\n",
        "createdAt" : "2012-12-03T19:52:12Z",
        "updatedAt" : "2012-12-03T19:52:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1375540c-bf65-4dc2-82b9-d4f569982e67",
        "parentId" : "eebb196d-7ab3-49e6-8629-614bec4a489d",
        "authorId" : "ec936959-76d1-43b4-9eac-af26a98dfac5",
        "body" : "The PyArray_DATA raised an error after the change to returning `void*`, so I changed it to use `PyArray_BYTES`\n",
        "createdAt" : "2012-12-03T21:31:10Z",
        "updatedAt" : "2012-12-03T21:31:10Z",
        "lastEditedBy" : "ec936959-76d1-43b4-9eac-af26a98dfac5",
        "tags" : [
        ]
      },
      {
        "id" : "b5fc398c-f2c0-4a95-82d1-c99fc6a8e879",
        "parentId" : "eebb196d-7ab3-49e6-8629-614bec4a489d",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yes, void pointers can't be used in arithmetic. I just wanted to make sure we fixed all the spots where it could be an issue.\n",
        "createdAt" : "2012-12-03T23:48:28Z",
        "updatedAt" : "2012-12-03T23:48:28Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7855b2605d96a5b9efe1ae48cb8d7554caaba1de",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +132,136 @@                                           (const void **)&buf,\n                                           &buf_len) >= 0) {\n        offset = PyArray_BYTES(self) - buf;\n        numbytes = buf_len + offset;\n    }"
  },
  {
    "id" : "34955682-404d-4315-8867-c90e3a7f394f",
    "prId" : 6747,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca569dd6-1cd9-4c8d-ace8-879e3586c8cf",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Do we put `\\n` in long warnings? Actually a serious question, I never did, but maybe it reads easier for the user.\n\nOther than discussing message wording, I think as you said in those other PRs, needs mention in the release notes.\n",
        "createdAt" : "2015-12-02T08:04:54Z",
        "updatedAt" : "2015-12-03T20:01:45Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "16c6a361e741685feb67c29c36631829ce3b9559",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +499,503 @@            !PyArray_IS_C_CONTIGUOUS(self)) {\n        /* 11/27/2015 1.11.0 */\n        if (DEPRECATE(\"Changing the shape of non-C contiguous array by\\n\"\n                      \"descriptor assignment is deprecated. To maintain\\n\"\n                      \"the Fortran contiguity of a multidimensional Fortran\\n\""
  },
  {
    "id" : "a28d4be5-947f-4e36-9c51-ba580106e700",
    "prId" : 8977,
    "prUrl" : "https://github.com/numpy/numpy/pull/8977#pullrequestreview-66345992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85d40acb-dd3d-4ef7-b925-1d8bc6a3401c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Why not?",
        "createdAt" : "2017-10-01T20:09:14Z",
        "updatedAt" : "2017-10-02T02:00:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5f949988-6965-4977-b22d-4890bb7190c6",
        "parentId" : "85d40acb-dd3d-4ef7-b925-1d8bc6a3401c",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "For the same reason that `np.dtype(np.void) is np.dtype(np.void)` is desirable. Without this special case, `v0_arr.view(np.void).dtype is not np.void`.",
        "createdAt" : "2017-10-01T20:18:25Z",
        "updatedAt" : "2017-10-02T02:00:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6d2cd3870ba832973f85057d8d4735c99f18baa",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +472,476 @@    /*\n     * Treat V0 as resizable void - unless the destination is already V0, then\n     * don't allow np.void to be duplicated\n     */\n    if (newtype->type_num == NPY_VOID &&"
  },
  {
    "id" : "6d9dde81-d52c-4440-be2c-3dee391a2072",
    "prId" : 9499,
    "prUrl" : "https://github.com/numpy/numpy/pull/9499#pullrequestreview-53266430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ffe499-0e67-47f2-b67c-5e607c8e0738",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Didn't previously decref",
        "createdAt" : "2017-07-31T09:04:02Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "8cc3f88e-4306-442d-8042-94491838f74f",
        "parentId" : "a8ffe499-0e67-47f2-b67c-5e607c8e0738",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Nice catch. Have to say I continue to dislike `if`-statements with side effects... (obviously outside of this PR, though)",
        "createdAt" : "2017-07-31T16:07:02Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc44809fd5c458d9fb27e7851eedc59abfbc7be",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +461,465 @@        npy_cache_import(\"numpy.core._internal\", \"_view_is_safe\", &checkfunc);\n        if (checkfunc == NULL) {\n            goto fail;\n        }\n"
  },
  {
    "id" : "99de85c8-a282-4fd7-8cd1-06cc677c0667",
    "prId" : 9499,
    "prUrl" : "https://github.com/numpy/numpy/pull/9499#pullrequestreview-53330928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This means the deprecation warning and the behavior being deprecated are now in the same place.",
        "createdAt" : "2017-07-31T09:21:12Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b080c509-c887-40ca-814a-acca8e011eb8",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I've never decided if we should be putting line endings in these error messages. Maybe we should have our own err calls that wrap the messages.",
        "createdAt" : "2017-07-31T13:12:25Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e4ab1493-2733-4eb5-92f3-1bfc31d8b379",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I think the line endings make things render more messily, especially since the first line gets an arbitrary prefix depending on whether its a warning or error.",
        "createdAt" : "2017-07-31T18:44:14Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6b7b5518-8fb7-4b63-803a-31e092d3aedb",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "That's why I think the error message formatter should take care of it. I don't expect anything in that direction to happen in the next decade...",
        "createdAt" : "2017-07-31T19:03:34Z",
        "updatedAt" : "2017-07-31T19:03:34Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "57bf2d2a-b10d-4485-8765-c506aaa0d9e2",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "IMO, this is not our problem, and is the concern of things higher up in the stack, starting from the python exception-printing mechanism, and extending to a line-wrapping terminal.",
        "createdAt" : "2017-07-31T19:13:57Z",
        "updatedAt" : "2017-07-31T19:13:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "5b0a195a-d985-45bd-aff2-f0e05d7b260e",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Exactly ;)",
        "createdAt" : "2017-07-31T19:49:11Z",
        "updatedAt" : "2017-07-31T19:49:11Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e3c4cded-f0b5-40fe-9d13-339fee33bfa6",
        "parentId" : "d2ed3b9a-adb5-4e53-9257-01b35d535e67",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Well, I'm happy with my line-wrapping terminal dealing with it at the moment :)",
        "createdAt" : "2017-07-31T20:28:42Z",
        "updatedAt" : "2017-07-31T20:28:42Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc44809fd5c458d9fb27e7851eedc59abfbc7be",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +520,524 @@                goto fail;\n            }\n            axis = 0;\n        }\n        else {"
  },
  {
    "id" : "33b21d38-a880-4e4d-9a89-31e6788c53c2",
    "prId" : 9499,
    "prUrl" : "https://github.com/numpy/numpy/pull/9499#pullrequestreview-53166478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "741b699c-d432-47b5-ab16-07c1c5965811",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "These two branches are unchanged other than in error message, but are moved within the `elsize != elsize` check for clarity",
        "createdAt" : "2017-07-31T09:26:24Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc44809fd5c458d9fb27e7851eedc59abfbc7be",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +554,558 @@            PyArray_DIMS(self)[axis] = newdim / newtype->elsize;\n            PyArray_STRIDES(self)[axis] = newtype->elsize;\n        }\n    }\n"
  },
  {
    "id" : "05ddbb0c-1947-486c-b143-e6f0da6e0c19",
    "prId" : 9499,
    "prUrl" : "https://github.com/numpy/numpy/pull/9499#pullrequestreview-53303901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "332482b2-2db6-4beb-aee3-256dbbd71866",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is it safe to move this? It may have already have been overwritten. In any case, it is easier to be sure if it is left where it was.",
        "createdAt" : "2017-07-31T13:59:02Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "86f82632-6b31-45c6-8fa5-3a3d1e5c7011",
        "parentId" : "332482b2-2db6-4beb-aee3-256dbbd71866",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "On the other hand, leaving it where it was brings into question whether something was looking at a decref'd dtype.",
        "createdAt" : "2017-07-31T18:46:41Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc44809fd5c458d9fb27e7851eedc59abfbc7be",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +587,591 @@    }\n\n    Py_DECREF(PyArray_DESCR(self));\n    ((PyArrayObject_fields *)self)->descr = newtype;\n    PyArray_UpdateFlags(self, NPY_ARRAY_UPDATE_ALL);"
  },
  {
    "id" : "67b30034-69a6-48af-b06b-8b615535b48a",
    "prId" : 9499,
    "prUrl" : "https://github.com/numpy/numpy/pull/9499#pullrequestreview-53304480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e6743a-ffc0-467a-8e4a-6cde68202411",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "I think this comment is not particularly helpful - it assumes a future reader knows that in the past these error messages were combined. I'd suggest to remove it or make it clear that this branch is for non-contiguous arrays.",
        "createdAt" : "2017-07-31T16:12:20Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "0c6ba7b6-bd62-4420-be24-ab71d3fdf7d7",
        "parentId" : "f8e6743a-ffc0-467a-8e4a-6cde68202411",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "It's an else clause for `if(c-contig) elseif (f-contif) else`, so the obvious conclusion is `\"must be c or f contig\"`. But this would encourage the deprecated use.",
        "createdAt" : "2017-07-31T18:48:45Z",
        "updatedAt" : "2017-07-31T19:02:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc44809fd5c458d9fb27e7851eedc59abfbc7be",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +523,527 @@        }\n        else {\n            /* Don't mention the deprecated F-contiguous support */\n            PyErr_SetString(PyExc_ValueError,\n                    \"To change to a dtype of a different size, the array must \""
  }
]