[
  {
    "id" : "f20da939-b44e-4f31-957f-e1a9e9bf0651",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8fd53af-bc35-4942-a576-48ffb58fb1c6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I can see `methods.c` needs a style cleanup ;) Didn't get that done before the original file was broken into parts and never was sure which parts remained undone.\n",
        "createdAt" : "2014-04-24T20:58:03Z",
        "updatedAt" : "2014-05-01T13:40:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "64af3fdd0fac08e01877a56faff5f3c6d4ac3a1b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +356,360 @@  Get a subset of bytes from each element of the array\n  steals reference to typed, must not be NULL\n*/\nNPY_NO_EXPORT PyObject *\nPyArray_GetField(PyArrayObject *self, PyArray_Descr *typed, int offset)"
  },
  {
    "id" : "f194e5f7-6dcd-4117-808f-d37a4c46ade4",
    "prId" : 5548,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab831ffe-26a8-467e-8488-efbc53c6cf73",
        "parentId" : null,
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "Interesting approach. Perhaps it warrants an explanatory comment that the return is a view, not a copy?\n",
        "createdAt" : "2015-03-15T01:35:32Z",
        "updatedAt" : "2015-06-05T05:14:57Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cd6fa869cec6d92062fb687d8e6952c1202017",
    "line" : null,
    "diffHunk" : "@@ -1,1 +428,432 @@\n    /* getfield returns a view we can write to */\n    ret = PyArray_GetField(self, dtype, offset);\n    if (ret == NULL) {\n        return -1;"
  },
  {
    "id" : "1553e53a-0564-4373-9998-c529a684fe9b",
    "prId" : 8977,
    "prUrl" : "https://github.com/numpy/numpy/pull/8977#pullrequestreview-66346129",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12360e44-a81e-4885-8ad0-2aab16870624",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Seems sensible, but why was it done differently before?",
        "createdAt" : "2017-10-01T20:17:08Z",
        "updatedAt" : "2017-10-02T02:00:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4ec977fc-84c9-4b28-93fa-8f1ff967c9c0",
        "parentId" : "12360e44-a81e-4885-8ad0-2aab16870624",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "To avoid recalculating `num`, most likely",
        "createdAt" : "2017-10-01T20:24:37Z",
        "updatedAt" : "2017-10-02T02:00:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6d2cd3870ba832973f85057d8d4735c99f18baa",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1828,1832 @@            if (swap) {\n                /* byte-swap on pickle-read */\n                npy_intp numels = PyArray_SIZE(self);\n                PyArray_DESCR(self)->f->copyswapn(PyArray_DATA(self),\n                                        PyArray_DESCR(self)->elsize,"
  },
  {
    "id" : "9abe6e74-968e-4d71-b8ce-22543b6c3cfb",
    "prId" : 11246,
    "prUrl" : "https://github.com/numpy/numpy/pull/11246#pullrequestreview-126367132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2ce5549-6cbc-4990-8a33-fe1620fc2a5d",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Here too, base and obj are different",
        "createdAt" : "2018-06-06T06:41:58Z",
        "updatedAt" : "2018-06-07T16:50:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "e4a57b67-0430-40a5-9477-ba679fae572a",
        "parentId" : "a2ce5549-6cbc-4990-8a33-fe1620fc2a5d",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "This place I just say is one I wish didn't exist ...  `ndarray.__array_wrap__` does things it has no right to do!  But that is of course not relevant for this PR.",
        "createdAt" : "2018-06-06T13:12:24Z",
        "updatedAt" : "2018-06-07T16:50:31Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0b2f3a5ee665ba68235c9f8e9503b294748b8e1",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +879,883 @@                PyArray_DIMS(arr),\n                PyArray_STRIDES(arr), PyArray_DATA(arr),\n                PyArray_FLAGS(arr), (PyObject *)self, obj);\n    } else {\n        /*The type was set in __array_prepare__*/"
  }
]