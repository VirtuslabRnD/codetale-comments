[
  {
    "id" : "01eaaf1b-8df4-4f0d-a1ba-91e2a06d434b",
    "prId" : 2694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9ffc4d2-fd20-4540-ba51-b7899480e859",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "This change changes the ABI/API! We can't alter the signature of a function that's marked NUMPY_API in a released version of numpy.\n\nIt looks like `PyArray_CreateSortedStridePerm` is only added in 1.7, which hasn't been released yet, so perhaps something could be worked out. But this will take a bit of thought, since this PR is too big a change to merge into 1.7 at this point in the release cycle...\n",
        "createdAt" : "2012-10-22T15:23:38Z",
        "updatedAt" : "2012-10-23T12:39:59Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "b7c563e7-b98c-4cc6-928e-470a07f628c1",
        "parentId" : "e9ffc4d2-fd20-4540-ba51-b7899480e859",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "I have had a closer look at this and where the function is used. I assume that for iteration speed the ordering of 1-dim axes does not matter (they seem to be removed later in any case).\n\nWhich means that it is only important in array creation with keeporder and reduce result allocation. I do not really think that there is any need for extra clean up with either of those cases. If the user gives in a badly strided array, he should expect nothing else. So maybe this could already be pulled into 1.7.? The 1.6 behavior seems to not clean up strides as well for either of the two cases. Unless there is some new functionality that really relies on this, but I somewhat doubt it.\n\nI could do a PR against 1.7. with this especially since not cleaning seems better then failing in probably as many cases as it would clean up and its a pretty small change.\n",
        "createdAt" : "2012-10-22T21:40:03Z",
        "updatedAt" : "2012-10-23T12:39:59Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "02ebf8b3e7674a6b8a06636feaa6c761fcdf4e2d",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +848,852 @@NPY_NO_EXPORT void\nPyArray_CreateSortedStridePerm(int ndim, npy_intp *strides,\n                        npy_stride_sort_item *out_strideperm)\n{\n    int i;"
  },
  {
    "id" : "a4950ece-afaa-4d68-8da0-a6615eb07e08",
    "prId" : 5034,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6fbf937-78b0-4e46-b64e-2fcd0b6b880e",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, it seems that `NPY_KEEPORDER` and `NPY_ANYORDER` are the same when there is only one array. Should there be an `||` here?\n",
        "createdAt" : "2014-09-03T17:14:15Z",
        "updatedAt" : "2014-09-14T12:37:01Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "d88b9212-7cb9-4ae6-bac4-8a33f9a18d4b",
        "parentId" : "e6fbf937-78b0-4e46-b64e-2fcd0b6b880e",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "the difference is, anyorder will be C order if neither is True, Keeporder will remain keeporder then.\n",
        "createdAt" : "2014-09-03T17:34:33Z",
        "updatedAt" : "2014-09-14T12:37:01Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "44877b36870ec2a0505c536a30b9fbf06a414c17",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +949,953 @@    newdim.ptr = val;\n\n    if (order == NPY_KEEPORDER) {\n        /* This handles some corner cases, such as 0-d arrays as well */\n        if (PyArray_IS_C_CONTIGUOUS(arr)) {"
  }
]