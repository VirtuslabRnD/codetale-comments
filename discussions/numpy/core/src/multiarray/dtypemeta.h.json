[
  {
    "id" : "1bdbc850-5a66-4e19-9bc1-83a48fdcedd7",
    "prId" : 19587,
    "prUrl" : "https://github.com/numpy/numpy/pull/19587#pullrequestreview-720404028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2fb714a-93df-43fd-90c8-640f70e46cc3",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Ah, clearly you were thinking about these as a separate entity as well...",
        "createdAt" : "2021-08-01T20:14:09Z",
        "updatedAt" : "2021-08-01T20:34:32Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "f2176bf3-39a5-4c32-a6d8-bcf3204dee00",
        "parentId" : "a2fb714a-93df-43fd-90c8-640f70e46cc3",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Yeah, the split here is more: definitely private/opaque struct, vs. not-so-private.  Splitting it out into multiple structs seems however just unnecessary.  I could keep these on the DType itself for now, but this has the nice advantage of being \"truly\" private.",
        "createdAt" : "2021-08-02T16:29:37Z",
        "updatedAt" : "2021-08-02T16:29:37Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "0823faa2-75d3-4238-9bee-e8b6f8a38d1e",
        "parentId" : "a2fb714a-93df-43fd-90c8-640f70e46cc3",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "OK, that makes sense. Regardless, with the macros it becomes an implementation detail, which is nice.",
        "createdAt" : "2021-08-02T16:46:10Z",
        "updatedAt" : "2021-08-02T16:46:11Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "88613b87143e6debf12f662443ed38518ccb8a4d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\ntypedef struct {\n    /* DType methods, these could be moved into its own struct */\n    discover_descr_from_pyobject_function *discover_descr_from_pyobject;\n    is_known_scalar_type_function *is_known_scalar_type;"
  }
]