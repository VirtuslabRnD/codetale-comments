[
  {
    "id" : "80855939-50e8-42e8-990e-b4cac7882393",
    "prId" : 296,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c73c1227-6003-4bf0-8ce3-6e86f6e8cc1c",
        "parentId" : null,
        "authorId" : "21f1d5b4-8c0e-420e-83d0-31a6c6d9e229",
        "body" : "This should be a check against a constant, like NPY_CHECK_UNKNOWN_AXIS (#def'd to -1).  That might also allow some future extensions like NPY_CHECK_FLATTENED_AXIS, to allow more informative reports in the case of indexing an implicitly flattened array.\n",
        "createdAt" : "2012-06-07T10:41:12Z",
        "updatedAt" : "2012-06-15T09:36:14Z",
        "lastEditedBy" : "21f1d5b4-8c0e-420e-83d0-31a6c6d9e229",
        "tags" : [
        ]
      }
    ],
    "commit" : "a83e212d40ea4ccb49ab75a60fd5d7afa9307c2a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +513,517 @@    if ((*index < -max_item) || (*index >= max_item)) {\n        /* Try to be as clear as possible about what went wrong. */\n        if (axis >= 0) {\n            if (max_item > 0) {\n                PyErr_Format(PyExc_IndexError,"
  },
  {
    "id" : "12454cd8-7b5a-4f5c-819c-a148cd9c3557",
    "prId" : 451,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da896ce6-176d-48bb-85e8-13860d8fc616",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "First line of multiline comments should be blank\n",
        "createdAt" : "2012-09-20T22:17:39Z",
        "updatedAt" : "2012-09-20T23:25:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18987a69c297b5602b00c22b9759d2ece4a7bf1",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +27,31 @@ * be allowed under the NPY_SAME_KIND_CASTING rules, and if not we issue a\n * warning (that people's code will be broken in a future release.)\n */\nNPY_NO_EXPORT NPY_CASTING NPY_DEFAULT_ASSIGN_CASTING = NPY_INTERNAL_UNSAFE_CASTING_BUT_WARN_UNLESS_SAME_KIND;\n"
  },
  {
    "id" : "2b3eea0a-7c3d-4749-b3a9-d62bcfd81472",
    "prId" : 451,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e1e85bd-4780-4f1b-b6f0-307716e6a0ef",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Will static do instead of NPY_NO_EXPORT ? It doesn't look like this is in a header.\n",
        "createdAt" : "2012-09-20T22:18:34Z",
        "updatedAt" : "2012-09-20T23:25:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "330829f9-4e5d-4fdb-9ff0-cf30eca01851",
        "parentId" : "1e1e85bd-4780-4f1b-b6f0-307716e6a0ef",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "No, I'm pretty sure that would break separate compilation -- it's declared extern in __multiarray_api.h, and references in other .c files need to be resolved to this definition by the linker.\n",
        "createdAt" : "2012-09-20T22:24:46Z",
        "updatedAt" : "2012-09-20T23:25:39Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "a52ccbf7-ce0e-4517-a0a2-3bc8320def6b",
        "parentId" : "1e1e85bd-4780-4f1b-b6f0-307716e6a0ef",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Maybe it should be declared extern in a header? I don't know if the is compatible with NPY_NO_EXORT though, I think that becomes static in one file builds.  \n",
        "createdAt" : "2012-09-20T22:36:50Z",
        "updatedAt" : "2012-09-20T23:25:39Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "958db2a6-39e8-437c-b300-f701127c6d66",
        "parentId" : "1e1e85bd-4780-4f1b-b6f0-307716e6a0ef",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Well, the trick is that for one-file builds it has to be declared static, in multi-file builds it has to be declared extern in a header, and in builds of third-party packages it needs to be looked up via the famous array-of-pointers API structure. I'm pretty sure declaring it NPY_NO_EXPORT in a .c file plus putting it in numpy_api.py is the right way to automatically achieve all of those things. I found it useful to look at the generated __multiarray_api.h to see exactly what was going on.\n",
        "createdAt" : "2012-09-20T22:40:39Z",
        "updatedAt" : "2012-09-20T23:25:39Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18987a69c297b5602b00c22b9759d2ece4a7bf1",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +28,32 @@ * warning (that people's code will be broken in a future release.)\n */\nNPY_NO_EXPORT NPY_CASTING NPY_DEFAULT_ASSIGN_CASTING = NPY_INTERNAL_UNSAFE_CASTING_BUT_WARN_UNLESS_SAME_KIND;\n\n"
  }
]