[
  {
    "id" : "0091d828-a303-4686-81ff-255ca544f17b",
    "prId" : 2710,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e70b8c33-f933-4a2b-b360-376f02f32bb7",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "This is just a simple bug fix right, not really related to the 1-d iteration issues?\n\nIf PyArray_MapIterBind can fail, then shouldn't it return an error code? This is a really obscure way to check for errors.\n",
        "createdAt" : "2012-11-12T08:51:45Z",
        "updatedAt" : "2012-12-02T18:24:49Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "e32f7c43-c459-4f9d-9fd1-c255306db597",
        "parentId" : "e70b8c33-f933-4a2b-b360-376f02f32bb7",
        "authorId" : "75b78747-e55f-483a-bf57-630e261038df",
        "body" : "Yes, you're right, I should figure out what the error conditions are and error code. I've had PyArray_MapIterBind fail when I had oned=1, but I'm still not sure what the error condition was.\n",
        "createdAt" : "2012-11-14T05:46:54Z",
        "updatedAt" : "2012-12-02T18:24:49Z",
        "lastEditedBy" : "75b78747-e55f-483a-bf57-630e261038df",
        "tags" : [
        ]
      }
    ],
    "commit" : "7887c16fcceb995a6416cf32bb4a0702bf08a7bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2055,2059 @@    if (PyArray_MapIterBind(mit, a) != 0) {\n        return NULL;\n    }\n    PyArray_MapIterReset(mit);\n    return mit;"
  },
  {
    "id" : "04f69207-a791-44c9-9aef-03b79aa36350",
    "prId" : 2907,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a40bb76-039d-4147-9279-02f0a4a7e42b",
        "parentId" : null,
        "authorId" : "041ba948-3afd-44ae-9741-f412d7673058",
        "body" : "Why is this INCREF needed here but was not needed before?\n",
        "createdAt" : "2013-01-12T22:03:06Z",
        "updatedAt" : "2013-01-13T00:21:39Z",
        "lastEditedBy" : "041ba948-3afd-44ae-9741-f412d7673058",
        "tags" : [
        ]
      },
      {
        "id" : "1d376b54-246a-42ce-b95b-4b2fb6d4ba77",
        "parentId" : "5a40bb76-039d-4147-9279-02f0a4a7e42b",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "To be honest, would make sense to check how this changed between 1.6. and 1.7. But dtype was always NULL, that is why there was no incref (there was no need to define dtype in the first place like that). In the next line I put FORCECAST, I am somewhat guessing it makes no difference at all, but if it does, I am not sure if it is closer to 1.6. or not. I don't think it matters honestly (it would only matter for non array, array likes -- ie `__array_interface__`, but that seems unaffected -- if at all), but I have no time to investigate anyway right now.\n",
        "createdAt" : "2013-01-12T23:14:42Z",
        "updatedAt" : "2013-01-13T00:21:39Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "4c4880e6-5e09-414e-bb5d-548e861f707c",
        "parentId" : "5a40bb76-039d-4147-9279-02f0a4a7e42b",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "The INCREF is needed because PyArray_FromAny steals a reference to the dtype -- right?\n",
        "createdAt" : "2013-01-12T23:27:22Z",
        "updatedAt" : "2013-01-13T00:21:39Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "24615f4c7744ff4a924b9488ea3b9bb7df3665f0",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1309,1313 @@        if (!PyArray_Check(op)) {\n            dtype = PyArray_DTYPE(self);\n            Py_INCREF(dtype);\n            op_arr = (PyArrayObject *)PyArray_FromAny(op, dtype, 0, 0, 0, NULL);\n            if (op_arr == NULL) {"
  }
]