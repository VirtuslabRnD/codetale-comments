[
  {
    "id" : "2c4c55ab-8b62-490a-a8b2-46b618f056d9",
    "prId" : 94,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "327e3868-3b38-43f1-862b-cfa34b6e022b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Filler ?\n",
        "createdAt" : "2011-06-22T02:16:17Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "faaa2526-3cd1-46bc-973c-1d216569338e",
        "parentId" : "327e3868-3b38-43f1-862b-cfa34b6e022b",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "This is specifically the bugfix for #1790. That code (well, functionally equivalent code) was already there, just after assigning totalsize to new->elsize.\n",
        "createdAt" : "2011-06-22T02:22:26Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      },
      {
        "id" : "07181c11-0587-4d7d-8f70-27149302f3ab",
        "parentId" : "327e3868-3b38-43f1-862b-cfa34b6e022b",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So the filler is gone, you just provide enough aligned space for the item?\n",
        "createdAt" : "2011-06-22T02:34:12Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "04ee1fce-d99d-44ea-9f1b-214c590fcd30",
        "parentId" : "327e3868-3b38-43f1-862b-cfa34b6e022b",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "I believe there never was any filler, just the illusion of filler created during the repr call.\n",
        "createdAt" : "2011-06-22T02:45:09Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      }
    ],
    "commit" : "b23337999abcb3ecfa648d86f0bf049ef7e58d3e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +459,463 @@    }\n\n    new = PyArray_DescrNewFromType(PyArray_VOID);\n    if (new == NULL) {\n        Py_XDECREF(fields);"
  },
  {
    "id" : "289bd25b-61e5-4391-9499-09cf2035b5ea",
    "prId" : 94,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "353803d3-a19a-40d0-8ed3-1008944d0ae4",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What is done if it isn't a simple layout? Just asking.\n",
        "createdAt" : "2011-06-22T02:42:35Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b2a49a3c-073d-4b61-b6a1-78c83409772c",
        "parentId" : "353803d3-a19a-40d0-8ed3-1008944d0ae4",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "This test is used to determine what style of repr to use, either a list or a dict.\n",
        "createdAt" : "2011-06-22T02:46:54Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      }
    ],
    "commit" : "b23337999abcb3ecfa648d86f0bf049ef7e58d3e",
    "line" : 711,
    "diffHunk" : "@@ -1,1 +2652,2656 @@ *\n * Returns 1 if it has a simple layout, 0 otherwise.\n */\nstatic int\nis_dtype_struct_simple_layout(PyArray_Descr *dtype)"
  },
  {
    "id" : "4dbed35e-3023-4d8a-a9c7-bc5027ce61ed",
    "prId" : 94,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "775571f0-f52e-45ef-b5be-74b7116b7c78",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So the result of creating a dtype from this isn't aligned?\n",
        "createdAt" : "2011-06-22T02:46:40Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "6cb7be5a-6dfc-4860-b658-a176337b4346",
        "parentId" : "775571f0-f52e-45ef-b5be-74b7116b7c78",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "I guess it should also mention that it doesn't preserve 'itemsize' either. This isn't the true repr, rather a helper which builds the object for the first parameter of the repr. Align and itemsize don't fit in that object, they're extra parameters to the dtype constructor.\n",
        "createdAt" : "2011-06-22T02:49:09Z",
        "updatedAt" : "2011-06-22T17:12:17Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      }
    ],
    "commit" : "b23337999abcb3ecfa648d86f0bf049ef7e58d3e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2987,2991 @@ * for structured arrays like the regular repr does, because\n * this flag is separate from the first dtype constructor parameter.\n */\nNPY_NO_EXPORT PyObject *\narraydescr_short_construction_repr(PyArray_Descr *dtype)"
  },
  {
    "id" : "a987a4d1-63f9-48c4-911e-d49178899f69",
    "prId" : 4095,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c64ef494-239e-453a-adfb-71b4125e1a41",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What does \"neither of which is safe\" refer to?\n",
        "createdAt" : "2013-12-19T15:54:34Z",
        "updatedAt" : "2013-12-19T15:54:34Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bcd28cb8-273c-46b6-98a0-69aacdfd00d6",
        "parentId" : "c64ef494-239e-453a-adfb-71b4125e1a41",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Well. I suppose right now anything which isn't a tuple fails (with possibly some corner cases). So that would be an option, too. The integers inside the tuple (or the sequence if you allow more) can be mutable, but the dtype itself should not be mutable, so that is why it is not safe.\n",
        "createdAt" : "2013-12-19T16:19:13Z",
        "updatedAt" : "2013-12-19T16:19:13Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1951d3d4c1011132560ae4326f636e5cef01d918",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +356,360 @@        /*\n         * Create a new subarray->shape tuple (it can be an arbitrary\n         * sequence of integer like objects, neither of which is safe.\n         */\n        newdescr->subarray->shape = PyTuple_New(shape.len);"
  }
]