[
  {
    "id" : "b6197c1f-9ade-44ae-9b4b-dd3a2d490fc5",
    "prId" : 3421,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3a35cbc-eaf9-404d-bc09-c401eeb4725a",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "This is OK because you have changed the alignment of complex?\n",
        "createdAt" : "2013-06-10T18:21:19Z",
        "updatedAt" : "2013-06-11T21:57:34Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "13044493-be4a-4952-9a90-6b055368a80a",
        "parentId" : "b3a35cbc-eaf9-404d-bc09-c401eeb4725a",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "no this was always ok\n\nthe reason stated in the comment makes no sense to me.\nthe compiler will not add vectorization without alignment checks and there is no manually vectorized code in this file as far as I can tell.\nEven if there is vectorization somewhere that relies on the ndarray alignment flag it would not work because the alignment requirement is to small for SSE2 (16 bytes, ndarray alignment is only 8bytes for double)\n",
        "createdAt" : "2013-06-10T18:32:50Z",
        "updatedAt" : "2013-06-11T21:57:34Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2dd429afc204bc60e2db0f6ad4fb706ab93c273",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +25,29 @@ */\n#if (defined(NPY_CPU_X86) || defined(NPY_CPU_AMD64))\n#  define NPY_USE_UNALIGNED_ACCESS 1\n#else\n#  define NPY_USE_UNALIGNED_ACCESS 0"
  },
  {
    "id" : "5ecd92d6-34cd-4580-bd7c-b6292262196f",
    "prId" : 3931,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d99f92a-67e1-4744-b3ae-03e4b401a929",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "It always ends up with   `#  define NPY_USE_UNALIGNED_ACCESS 0`, that doesn't seem right. \n",
        "createdAt" : "2013-10-16T21:57:53Z",
        "updatedAt" : "2013-10-16T23:02:07Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "11b006ef-b6fe-4366-a2a9-495239459cff",
        "parentId" : "9d99f92a-67e1-4744-b3ae-03e4b401a929",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "its intentional, else the compiler might too aggressively autovectorize code assuming all pointers are aligned.\n",
        "createdAt" : "2013-10-16T22:03:47Z",
        "updatedAt" : "2013-10-16T23:02:07Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "2c9ebf0a-45c7-41a8-9fce-f69019efd192",
        "parentId" : "9d99f92a-67e1-4744-b3ae-03e4b401a929",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So why make it depend on  `NPY_CPU_HAVE_UNALIGNED_ACCESS`? Future plans?\n",
        "createdAt" : "2013-10-16T22:12:22Z",
        "updatedAt" : "2013-10-16T23:02:07Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "17a9a5e9-9540-4c8c-897b-3b76b8473d6b",
        "parentId" : "9d99f92a-67e1-4744-b3ae-03e4b401a929",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could probably use a comment to explain.\n",
        "createdAt" : "2013-10-16T22:18:35Z",
        "updatedAt" : "2013-10-16T23:02:07Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "aab085d6-776c-469e-9b3e-32873449a907",
        "parentId" : "9d99f92a-67e1-4744-b3ae-03e4b401a929",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "the comment above should explain it\n",
        "createdAt" : "2013-10-16T22:30:41Z",
        "updatedAt" : "2013-10-16T23:02:07Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d4ea165817fc613c79bb92ccb3844df94d1beed",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@ * So this flag can only be enabled if autovectorization is disabled.\n */\n#ifdef NPY_CPU_HAVE_UNALIGNED_ACCESS\n#  define NPY_USE_UNALIGNED_ACCESS 0\n#else"
  },
  {
    "id" : "a29e6a2e-6a2f-4dd1-b479-6106c57ab2e0",
    "prId" : 4497,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "300b8fc6-fe62-4b0c-947d-5423c080a1ca",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK.\n",
        "createdAt" : "2014-03-16T03:16:19Z",
        "updatedAt" : "2014-03-16T03:16:19Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ae3946f9bceee9ce2ce0fe16f538663ae92149c",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +1703,1707 @@                    if (!NpyIter_ResetBasePointers(mit->subspace_iter,\n                                                   subspace_baseptrs,\n                                                   &errmsg)) {\n                        NPY_END_THREADS;\n                        PyErr_SetString(PyExc_ValueError, errmsg);"
  },
  {
    "id" : "0b8eb914-111c-4606-b1ca-6527abc14687",
    "prId" : 4801,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2b3950e-a679-4381-8aed-2adedf4f712b",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "This `#if` doesn't match all the other usages of `iteraxis` (which seem to be `#if @isget@ && @oneiter@`)\n",
        "createdAt" : "2014-06-11T12:02:51Z",
        "updatedAt" : "2014-06-11T12:02:51Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "0ad5c8a6-51e2-45ff-8249-7ff8aee26220",
        "parentId" : "c2b3950e-a679-4381-8aed-2adedf4f712b",
        "authorId" : "acce7360-5cef-46f0-ab05-4fb0ffdffe3a",
        "body" : "`@oneiter@` isn't set until later on.\n",
        "createdAt" : "2014-06-11T12:45:33Z",
        "updatedAt" : "2014-06-11T12:45:33Z",
        "lastEditedBy" : "acce7360-5cef-46f0-ab05-4fb0ffdffe3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b560645344d101ddd9e0dfece942b3c699003e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1491,1495 @@    npy_intp fancy_dims[NPY_MAXDIMS];\n    npy_intp fancy_strides[NPY_MAXDIMS];\n#if @isget@\n    int iteraxis;\n#endif"
  }
]