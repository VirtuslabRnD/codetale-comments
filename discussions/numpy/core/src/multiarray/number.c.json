[
  {
    "id" : "f712f7da-2ce6-4955-b653-21ac6fc1a1d7",
    "prId" : 3501,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3959dcd4-9fd9-4196-9603-219b8eb816cb",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "`float(17)` isn't an array so I guess there's a mistake in the comment?\n",
        "createdAt" : "2013-07-08T14:46:11Z",
        "updatedAt" : "2013-07-09T03:12:32Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "e9a516f2-fcaa-4dce-ab43-c78dd05ccb93",
        "parentId" : "3959dcd4-9fd9-4196-9603-219b8eb816cb",
        "authorId" : "f887aabc-b71a-4b6b-a38a-1237f570ea8b",
        "body" : "Nope, that's correct. `float(17) * np.matrix(...)` first ends up in `np.matrix.__rmul__`, which calls `np.dot`, which calls `PyArray_MatrixProduct2`, which casts `float(17)` into an array scalar an then calls this place. :)\n",
        "createdAt" : "2013-07-08T15:05:53Z",
        "updatedAt" : "2013-07-09T03:12:32Z",
        "lastEditedBy" : "f887aabc-b71a-4b6b-a38a-1237f570ea8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4441bdd95197ba10651eee8366e67176fb3b5b51",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +216,220 @@           * that we were called through m1 and the other guy is not an array\n           * at all. Note that some arrays need to pass through here even\n           * with priorities inverted, for example: float(17) * np.matrix(...)\n           *\n           * See also:"
  },
  {
    "id" : "06dc7914-4945-448d-b0f5-65df9b09e881",
    "prId" : 3965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a56f464a-585f-42b0-a3ce-2d913fb4f323",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "if its decrefd here, shouldn't the NULL return paths above also decrev pv?\n",
        "createdAt" : "2013-10-24T17:13:27Z",
        "updatedAt" : "2013-10-24T21:26:53Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "ff24702a-0f25-4b8e-9ec0-02cd06ae0b2c",
        "parentId" : "a56f464a-585f-42b0-a3ce-2d913fb4f323",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "indeed, seems they are missing for some but not all of these.\n",
        "createdAt" : "2013-10-24T17:38:11Z",
        "updatedAt" : "2013-10-24T21:26:53Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a01f4e11874be9db17fb24fa17c649fd45a8aff",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +814,818 @@        PyErr_SetString(PyExc_TypeError,\n                \"object array may be self-referencing\");\n        Py_DECREF(pv);\n        return NULL;\n    }"
  },
  {
    "id" : "d5b2e29a-92c0-4a97-a71a-d760d0cfd4a9",
    "prId" : 8806,
    "prUrl" : "https://github.com/numpy/numpy/pull/8806#pullrequestreview-28126826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "802b48cd-4047-401b-af70-86fc457bd2f0",
        "parentId" : null,
        "authorId" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "body" : "why not just [`Py_RETURN_NOTIMPLEMENTED`](https://docs.python.org/3/c-api/object.html#c.Py_RETURN_NOTIMPLEMENTED)?",
        "createdAt" : "2017-03-21T14:03:58Z",
        "updatedAt" : "2017-03-21T14:04:05Z",
        "lastEditedBy" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "tags" : [
        ]
      },
      {
        "id" : "a0189536-c020-43a2-a82a-c7a290cc209e",
        "parentId" : "802b48cd-4047-401b-af70-86fc457bd2f0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Because right now we don't use that anywhere in numpy, so there's probably a consistency argument.\r\n\r\nDo you want to make a PR that fixes this numpy-wide? Alternatively, I could just add another commit to the PR that makes this change everywhere. Let me know which.",
        "createdAt" : "2017-03-21T14:26:27Z",
        "updatedAt" : "2017-03-21T14:31:12Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "92d30e76-6a7d-47c9-9b9e-15858772f099",
        "parentId" : "802b48cd-4047-401b-af70-86fc457bd2f0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "There's some strange code in `ctors.c` which does't `Py_INCREF` Py_NotImplemented, but I guess that's ok because the things that consume it don't `DECREF` in those cases either",
        "createdAt" : "2017-03-21T14:30:09Z",
        "updatedAt" : "2017-03-21T14:30:10Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "ffb38c01-3513-46b7-91c8-8e5ba4821c58",
        "parentId" : "802b48cd-4047-401b-af70-86fc457bd2f0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Better answer - [`Py_RETURN_NOTIMPLEMENTED` is not available in 2.7](https://bugs.python.org/issue12724)",
        "createdAt" : "2017-03-21T14:32:42Z",
        "updatedAt" : "2017-03-21T14:32:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "fc31fc14-5485-49ce-9d5a-efc600cf9391",
        "parentId" : "802b48cd-4047-401b-af70-86fc457bd2f0",
        "authorId" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "body" : "oups, that's a good argument ðŸ˜… ",
        "createdAt" : "2017-03-21T14:36:56Z",
        "updatedAt" : "2017-03-21T14:36:56Z",
        "lastEditedBy" : "4b0602db-f9ac-4b54-b200-2e79d0cfb7c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7203f964a5a8f9b311ea633678362d782702472",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +621,625 @@        /* modular exponentiation is not implemented (gh-8804) */\n        Py_INCREF(Py_NotImplemented);\n        return Py_NotImplemented;\n    }\n    GIVE_UP_IF_HAS_RIGHT_BINOP(a1, o2, \"__pow__\", \"__rpow__\", 0, nb_power);"
  }
]