[
  {
    "id" : "f9dd9fd9-7dfe-4a23-bfcf-eefad028b750",
    "prId" : 11246,
    "prUrl" : "https://github.com/numpy/numpy/pull/11246#pullrequestreview-125870856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85f2f58-a0b8-4fbe-aeb0-dadfcfb8c7bf",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Doesn't matter here anyway, since this is `&PyArray_Type`",
        "createdAt" : "2018-06-05T08:40:06Z",
        "updatedAt" : "2018-06-07T16:50:31Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0b2f3a5ee665ba68235c9f8e9503b294748b8e1",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +160,164 @@     */\n    ret = (PyArrayObject_fields *)PyArray_NewFromDescr(\n            &PyArray_Type, dtype,\n            ndim, shape, strides, PyArray_DATA(out),\n            PyArray_FLAGS(out), NULL);"
  },
  {
    "id" : "acb40a3a-9fc0-4dd4-a2f5-d3485a868545",
    "prId" : 15162,
    "prUrl" : "https://github.com/numpy/numpy/pull/15162#pullrequestreview-336289074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5abbe410-43cc-438a-861a-7cd42955b56f",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Slightly bigger: how about making this a function that just returns a view of the first element? (i.e., returns `op_view`) It feels that the copy at the end doesn't really belong inside here, but rather should be done in the caller.",
        "createdAt" : "2019-12-24T14:23:26Z",
        "updatedAt" : "2020-05-30T19:11:46Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "43d59857-a618-49bc-82a1-df2ff2d2cd8f",
        "parentId" : "5abbe410-43cc-438a-861a-7cd42955b56f",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Opted for renaming the function for now, not sure what is nicer.",
        "createdAt" : "2019-12-24T18:18:26Z",
        "updatedAt" : "2020-05-30T19:11:46Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "e6534b66-50b5-4fc5-a1bd-4ddfad817293",
        "parentId" : "5abbe410-43cc-438a-861a-7cd42955b56f",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Returning the size makes sense.",
        "createdAt" : "2019-12-25T02:27:24Z",
        "updatedAt" : "2020-05-30T19:11:46Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "8da4fba24c193807555dfcbc0e67834cae9185ea",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +70,74 @@ * which is the number of elements already initialized.\n */\nNPY_NO_EXPORT int\nPyArray_CopyInitialReduceValues(\n                    PyArrayObject *result, PyArrayObject *operand,"
  },
  {
    "id" : "e6d2cc98-7c78-4d47-87a7-abda0c400f27",
    "prId" : 19263,
    "prUrl" : "https://github.com/numpy/numpy/pull/19263#pullrequestreview-685691755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09615b8f-f14e-48c2-bf0c-dccc18432df4",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "The fact that we are passing in a function (and only ever that) from `ufunc_object.c` is a bit ridiculous.  There was probably some reason behind it.  But the only reason I didn't change it, was that it didn't seem much in the way.",
        "createdAt" : "2021-06-16T21:45:06Z",
        "updatedAt" : "2021-06-16T21:45:06Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a08a489f5214dae5886ea51b4bae808cf80a5e5b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +167,171 @@ *               this value is used to initialize the result to\n *               the reduction's unit.\n * loop        : `reduce_loop` from `ufunc_object.c`.  TODO: Refactor\n * data        : Data which is passed to the inner loop.\n * buffersize  : Buffer size for the iterator. For the default, pass in 0."
  },
  {
    "id" : "1ba14109-da2d-4c54-ad39-e728e6dd3bba",
    "prId" : 19263,
    "prUrl" : "https://github.com/numpy/numpy/pull/19263#pullrequestreview-685748554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b664e4c9-2f6c-4a88-9d8a-5852612c639b",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "You want this before clearing the exception flags?",
        "createdAt" : "2021-06-16T23:24:17Z",
        "updatedAt" : "2021-06-16T23:24:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "96771afd-9f3a-422d-b354-c515eacb171e",
        "parentId" : "b664e4c9-2f6c-4a88-9d8a-5852612c639b",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "It doesn't matter, but it fit better with what is coming, I think (because `needs_api` needs to be updated also by the loop fetching, which has to happen before the float clearing).\r\n\r\nI guess its a bit tricky about what to do with `PyArray_CopyInitialReduceValues` and float status.",
        "createdAt" : "2021-06-16T23:38:56Z",
        "updatedAt" : "2021-06-16T23:38:56Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a08a489f5214dae5886ea51b4bae808cf80a5e5b",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +302,306 @@    result = NpyIter_GetOperandArray(iter)[0];\n\n    int needs_api = NpyIter_IterationNeedsAPI(iter);\n    /* Start with the floating-point exception flags cleared */\n    npy_clear_floatstatus_barrier((char*)&iter);"
  }
]