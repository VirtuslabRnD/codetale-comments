[
  {
    "id" : "07484c02-481a-49f1-b58e-7db280cbe565",
    "prId" : 7903,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d6d65b7-7c9b-4913-8ee5-f7094d8616c6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Aha... Boy, that _is_ ugly ;)\n",
        "createdAt" : "2016-08-04T23:59:38Z",
        "updatedAt" : "2016-08-04T23:59:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "07800e53ea335bc64514e9b4b0a5e5711fd39684",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1706,1710 @@     * also skip float16 copy placed before\n     */\n    i = 6;\n    j = 3;\n    while (signatures[i] != NPY_FLOAT) {"
  },
  {
    "id" : "7e6da484-5eef-4637-82d6-a6717d706944",
    "prId" : 14534,
    "prUrl" : "https://github.com/numpy/numpy/pull/14534#pullrequestreview-290838034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "963d8492-3421-4a0a-8018-d1f444eb4dc4",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "This splits the @name@_@which@ templates into two parts: one for python2 using `long` (below) and one for both 2 and 3 using `float` (above).",
        "createdAt" : "2019-09-17T20:35:53Z",
        "updatedAt" : "2019-09-26T17:09:59Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "685cecf2-8b2d-4778-b4a8-0b78bea4de68",
        "parentId" : "963d8492-3421-4a0a-8018-d1f444eb4dc4",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Do we want to backport this, or shouldn't we just ignore python 2 for such a specific, rarely touched, code chunk?",
        "createdAt" : "2019-09-19T02:15:34Z",
        "updatedAt" : "2019-09-26T17:09:59Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "1f7e89b5-2e9a-4ef9-ad2e-c48326c4ce33",
        "parentId" : "963d8492-3421-4a0a-8018-d1f444eb4dc4",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "No need to backport. [NEP 14](https://numpy.org/neps/nep-0014-dropping-python2.7-proposal.html) is not clear on this, but I think we have not been actively removing python2 code from the master branch yet.",
        "createdAt" : "2019-09-19T20:55:36Z",
        "updatedAt" : "2019-09-26T17:09:59Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "758b8bdbacf36dc4b48857d4f5465b0902e50a71",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1459,1463 @@\n#if !defined(NPY_PY3K)\n\n/**begin repeat\n *"
  },
  {
    "id" : "9f686b19-b42f-4d85-9574-bb86250ac679",
    "prId" : 17013,
    "prUrl" : "https://github.com/numpy/numpy/pull/17013#pullrequestreview-461284306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e90d4e8-1381-421b-8ce2-96e58b713f9b",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "With the exception of the signed integers, the math functions all handle 0 input correctly, the only oddity is really the error return.",
        "createdAt" : "2020-08-05T01:44:31Z",
        "updatedAt" : "2020-08-05T14:56:20Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d934a3b826e79abba84868f3fbcf7f7b6fea943",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +983,987 @@        return NULL;\n    }\n#endif\n    @name@_ctype_power(arg1, arg2, &out);\n"
  },
  {
    "id" : "d9ddf2e7-b48f-4d3b-a3c3-59f03d885b54",
    "prId" : 17013,
    "prUrl" : "https://github.com/numpy/numpy/pull/17013#pullrequestreview-461749253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e27ccaf-a785-47e6-a38a-6f0a0ab72e91",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "These are already mutually exclusive, right? - just `@isint@` would be enough",
        "createdAt" : "2020-08-05T09:37:19Z",
        "updatedAt" : "2020-08-05T14:56:20Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f87c8a40-9440-4e93-9b47-18031e29dcc7",
        "parentId" : "2e27ccaf-a785-47e6-a38a-6f0a0ab72e91",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "ops, I changed it the opposite direction, isint includes uint. The reason is that the float checking is not necessary for all ints here.\r\n\r\nAdded one more commit, before I forget it, although its unrelated. It just deletes a `volatile` decleration with the comment, since the code now uses `npy_clear_floatstatus_barrier` which solves the same issue as declaring `out` as `volatile`.",
        "createdAt" : "2020-08-05T14:58:34Z",
        "updatedAt" : "2020-08-05T14:58:34Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d934a3b826e79abba84868f3fbcf7f7b6fea943",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +977,981 @@     * as a function call.\n     */\n#if @isint@ && !@isuint@\n    if (arg2 < 0) {\n        PyErr_SetString(PyExc_ValueError,"
  }
]