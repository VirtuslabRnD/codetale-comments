[
  {
    "id" : "a8c83628-e407-4b01-a1c3-be1229c0fa61",
    "prId" : 16247,
    "prUrl" : "https://github.com/numpy/numpy/pull/16247#pullrequestreview-516295598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c12712b0-5421-4ba9-8f3c-da3088098e6c",
        "parentId" : null,
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "@r-devulap, regards to https://github.com/numpy/numpy/pull/16247#discussion_r509562662, I ended up to keep your implmention but with allowing aliasing(same ptr and stride).",
        "createdAt" : "2020-10-24T17:57:54Z",
        "updatedAt" : "2020-11-03T13:20:28Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c811166c4ff425ffe9f6452484388897fceada03",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@        op_end = op + op_size;\n    }\n    return (ip_start == op_start && op_end == ip_end) ||\n           (ip_start > op_end) || (op_start > ip_end);\n}"
  },
  {
    "id" : "da7c98af-f825-4662-8452-897332975cb2",
    "prId" : 16247,
    "prUrl" : "https://github.com/numpy/numpy/pull/16247#pullrequestreview-522553267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d555372-6840-4f32-9585-5f4f1105ee21",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "We have `solve_may_share_memory`, in `common/mem_overlap.c`, can we use this opportunity to refactor the code to use it? If not, then this function should be moved to that file.",
        "createdAt" : "2020-11-01T22:30:47Z",
        "updatedAt" : "2020-11-03T13:20:28Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "74179439-3a24-40d0-b193-9a7747bfc6bd",
        "parentId" : "7d555372-6840-4f32-9585-5f4f1105ee21",
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "apparently `solve may share_memory()` is used to resolve arrays overlapping from Python level,\r\nwhile what we do here is to avoid perform SIMD vector operations on overlapped arrays,\r\nsince the user expected scalar by scalar overlap which acts differently than unrolling,\r\nalso, we use sccatter/gather operations which may lead to undefined behaviour.\r\n\r\n>  If not, then this function should be moved to that file.\r\n\r\nI don't think this function is related to the content of `common/mem_overlap.c`.",
        "createdAt" : "2020-11-03T14:31:32Z",
        "updatedAt" : "2020-11-03T14:31:32Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c811166c4ff425ffe9f6452484388897fceada03",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@}\n\n#endif // _NPY_UMATH_LOOPS_UTILS_H_"
  }
]