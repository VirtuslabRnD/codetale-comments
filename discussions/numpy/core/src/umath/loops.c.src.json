[
  {
    "id" : "4590c4be-4b4d-459f-aab3-f2e4c0847e9c",
    "prId" : 197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0c6ed3e-62c6-475e-8c05-5441693d8ace",
        "parentId" : null,
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "I see you slipping in a consistency-improving change here, did you add a corresponding test?\n",
        "createdAt" : "2012-02-05T22:04:50Z",
        "updatedAt" : "2012-02-07T23:36:46Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      },
      {
        "id" : "14e58d54-44ff-4afe-87b3-59f72ae1bdfa",
        "parentId" : "d0c6ed3e-62c6-475e-8c05-5441693d8ace",
        "authorId" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "body" : "Ah, I see the diff may just be confused - it's diffing _divide with _remainder. Sorry!\n",
        "createdAt" : "2012-02-05T22:12:24Z",
        "updatedAt" : "2012-02-07T23:36:46Z",
        "lastEditedBy" : "95359633-f0b0-4899-8e46-e2146fd11511",
        "tags" : [
        ]
      },
      {
        "id" : "554fe193-748d-4933-bbee-c793857d0b23",
        "parentId" : "d0c6ed3e-62c6-475e-8c05-5441693d8ace",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yeah, I didn't change the code here, just split the single template into two, one for signed and the other for unsigned.\n",
        "createdAt" : "2012-02-05T22:46:24Z",
        "updatedAt" : "2012-02-07T23:36:46Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "87214fbfb095664e70702da421bc0df4cddd26c5",
    "line" : 572,
    "diffHunk" : "@@ -1,1 +888,892 @@            else {\n                *((@type@ *)op1) = rem + in2;\n            }\n        }\n    }"
  },
  {
    "id" : "91fe888b-c071-4c98-a91e-cb5036c84728",
    "prId" : 3341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2743d01b-c918-417e-89ef-7660d727dda2",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Multiline comment style is\n\n```\n/*\n * blah\n */\n```\n",
        "createdAt" : "2013-05-23T16:18:34Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe69102dd34619ce18cf074ef0e6e46611bc17e7",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +44,48 @@        && (steps[0] == 0))\n\n/*\n * stride is equal to element size and input and destination are equal or\n * don't overlap within one register"
  },
  {
    "id" : "ba40a754-8e83-46c0-980d-34afbedc8a7c",
    "prId" : 3411,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, from your earlier comments I had the impression that you were including the source so as to use the gcc multiversioning. Is that not the case? \n",
        "createdAt" : "2013-06-08T20:32:04Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b6246667-b6f8-470e-934c-e4c7c8c65d72",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "with GCC multiversioning can be done with any file scheme, you don't need to split it into multiple files. You would have to with compiler that have no function specific option pragmas/attributes.\n\nIts not done now as the main reason to do it is AVX, and I don't have the hardware to actually test that.\nAlso it would require a quite new GCC (+ more setup.py configure checks for this)\n",
        "createdAt" : "2013-06-08T20:37:33Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "62c95716-e1a1-41f7-a631-ef8015a3764b",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "That sounds sort of like what I was thinking, that is, a very new GCC would be required in order to use a file that was linked in rather than compiled in. Or am I still missing something.\n",
        "createdAt" : "2013-06-08T20:48:54Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "f6726850-3d45-4e4f-a597-7ac22f1e9ef5",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "in order to use a linked file you have no special compiler requirements. You just need to adapt your buildsystem to treat this file specially.\nGCC just allows you to do it more conveniently by having inline annotations so no special buildsystem treatment of the file is required.\n",
        "createdAt" : "2013-06-08T20:51:48Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "68aa2e0e-8698-4587-a83f-76235e1421aa",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So basically this is just easier than messing with the build system?\n",
        "createdAt" : "2013-06-08T20:54:08Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "6cc0f0d7-7464-4f8c-b6e6-c571f642b84c",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "yes\n",
        "createdAt" : "2013-06-08T20:54:57Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "0beb9964-8549-402e-acad-e0600c5d65e1",
        "parentId" : "b49f22fd-87f4-411d-8df7-6d1647f21f7f",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "note that nothing special is used in this PR, the split just for organizational reasons.\n",
        "createdAt" : "2013-06-08T20:58:18Z",
        "updatedAt" : "2013-06-08T21:19:09Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb8b714906a92516905cc0f03e45511bd1ac1ed",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +27,31 @@ * platform specific instructions are either masked via the proprocessor or\n * runtime detected\n */\n#include \"simd.inc\"\n"
  }
]