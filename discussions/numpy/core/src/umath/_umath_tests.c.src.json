[
  {
    "id" : "e9fb0b0c-989c-48c7-82ad-812cd5711674",
    "prId" : 11173,
    "prUrl" : "https://github.com/numpy/numpy/pull/11173#pullrequestreview-123978412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30342af7-b337-4a4e-8b78-7130e4c6ecf7",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Not sure this comment is necessary - any `PyObject *` allocation can fail due to memory limits, so we should always check results like this.",
        "createdAt" : "2018-05-29T07:32:02Z",
        "updatedAt" : "2018-05-29T21:00:13Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "54e1877d-ca48-41d3-94b4-551415c8d1f9",
        "parentId" : "30342af7-b337-4a4e-8b78-7130e4c6ecf7",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Well, I'll maybe leave this as a breadcrump for the future - or to remind myself of hours waster...",
        "createdAt" : "2018-05-29T12:57:38Z",
        "updatedAt" : "2018-05-29T21:00:13Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "009112781792a416c344b173b797026c5685721c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +282,286 @@                    0, inner1d_signature);\n    /*\n     * yes, this should not happen, but I (MHvK) just spent an hour looking at\n     * segfaults because I screwed up something that seemed totally unrelated.\n     */"
  },
  {
    "id" : "0c9ed7b9-77fb-4a2a-ab38-e8633b1bfc6d",
    "prId" : 11173,
    "prUrl" : "https://github.com/numpy/numpy/pull/11173#pullrequestreview-124091554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e15a5715-de7a-4094-9cc0-b53896f24b1b",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "In principle we should be checking the return value of `PyDict_SetItemString` too, but I'm happy for you to declare that out of scope for this PR.",
        "createdAt" : "2018-05-29T16:31:37Z",
        "updatedAt" : "2018-05-29T21:00:13Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "41cafba0-a3c3-4c7a-929a-235b9b8de9b8",
        "parentId" : "e15a5715-de7a-4094-9cc0-b53896f24b1b",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Yes, let's do that - I think if we're just calling standard python interface routines, we can be a bit more cavalier; we mostly need to guard against our own mistakes!",
        "createdAt" : "2018-05-29T17:21:47Z",
        "updatedAt" : "2018-05-29T21:00:13Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "009112781792a416c344b173b797026c5685721c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +288,292 @@        return -1;\n    }\n    PyDict_SetItemString(dictionary, \"inner1d\", f);\n    Py_DECREF(f);\n    f = PyUFunc_FromFuncAndDataAndSignature(innerwt_functions, innerwt_data,"
  }
]