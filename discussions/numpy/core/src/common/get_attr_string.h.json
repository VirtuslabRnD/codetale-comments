[
  {
    "id" : "413b3e73-5e97-473a-bb9a-c70e9b56bf95",
    "prId" : 14745,
    "prUrl" : "https://github.com/numpy/numpy/pull/14745#pullrequestreview-308840725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ff250ac-8b01-4174-969b-323a86c15b7d",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "The comments on line 45-48 aren't really accurate any more:\r\n```\r\n/*\r\n * Stripped down version of PyObject_GetAttrString,\r\n * avoids lookups for None, tuple, and List objects,\r\n * and doesn't create a PyErr since this code ignores it.\r\n *\r\n * This can be much faster then PyObject_GetAttrString where\r\n * exceptions are not used by caller.\r\n *\r\n * 'obj' is the object to search for attribute.\r\n *\r\n * 'name' is the attribute to search for.\r\n *\r\n * Returns attribute value on success, NULL on failure.\r\n */\r\n```",
        "createdAt" : "2019-10-25T11:37:42Z",
        "updatedAt" : "2019-10-29T23:22:05Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "7db43689-9c02-4b7c-a56b-9d39c66cfe42",
        "parentId" : "5ff250ac-8b01-4174-969b-323a86c15b7d",
        "authorId" : "e5afe0f2-9e12-4e7c-9645-4a1617473dcf",
        "body" : "what would I write instead? What is there right now is\r\n> Stripped down version of PyObject_GetAttrString,  avoids lookups for None, tuple, and List objects, and doesn't create a PyErr since this code ignores it.\r\n>\r\n> This can be much faster then PyObject_GetAttrString where exceptions are not used by caller.\r\n\r\nIt still does not create a PyErr (directly, that is), but if `obj` raises something in either `__getattr__` or `__getattribute__` that is not an `AttributeError`, it gets passed through.\r\n\r\nAlso, I don't understand the second part because `PyObject_GetAttrString` may be referenced by `tp->tp_getattr` (if that is set â€“ which it normally is not, so `tp->tp_getattro` and `PyObject_GenericGetAttr` are used). My understanding of python's C-API is limited though, so I may be wrong.",
        "createdAt" : "2019-10-25T12:13:16Z",
        "updatedAt" : "2019-10-29T23:22:05Z",
        "lastEditedBy" : "e5afe0f2-9e12-4e7c-9645-4a1617473dcf",
        "tags" : [
        ]
      },
      {
        "id" : "7f817f8f-fed2-484e-9362-d0c4539b363f",
        "parentId" : "5ff250ac-8b01-4174-969b-323a86c15b7d",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I went ahead and updated the comment myself",
        "createdAt" : "2019-10-29T21:18:02Z",
        "updatedAt" : "2019-10-29T23:22:05Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "1559be204d374017b2b9f1f25b719ac67737183a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +60,64 @@        res = (*tp->tp_getattr)(obj, name);\n        if (res == NULL && PyErr_ExceptionMatches(PyExc_AttributeError)) {\n            PyErr_Clear();\n        }\n    }"
  }
]