[
  {
    "id" : "8b3fdd2f-1144-48c2-8c04-8844f1ff4498",
    "prId" : 12611,
    "prUrl" : "https://github.com/numpy/numpy/pull/12611#pullrequestreview-187843489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be3e9f3c-113b-4689-be32-8d84adb339db",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Why is `alignment == 0` even a legal argument to this function?",
        "createdAt" : "2018-12-26T05:58:41Z",
        "updatedAt" : "2018-12-26T07:19:24Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "76892522-b1a2-40e5-8294-89cef3500dd7",
        "parentId" : "be3e9f3c-113b-4689-be32-8d84adb339db",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "Maybe there is a better way to organize it... but the idea is that `npy_uint_alignment`, which normally returns the uint alignment, returns 0 if the type is not uint-alignable.\r\n\r\nThen, it turned out to be convenient to allow the result of `npy_uint_alignment` to be passed directly to `raw_array_is_aligned`. \r\n\r\nAn alternative would be to check the return value of `npy_uint_alignment` explicitly everywhere it is used. But since it is pretty much always used as an arg to `raw_array_is_aligned` it seemed less complicated this way. ",
        "createdAt" : "2018-12-26T06:08:32Z",
        "updatedAt" : "2018-12-26T07:19:24Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      },
      {
        "id" : "fea42177-a6d9-45cd-a197-5bf6e49db96a",
        "parentId" : "be3e9f3c-113b-4689-be32-8d84adb339db",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "changed the comment",
        "createdAt" : "2018-12-26T07:19:38Z",
        "updatedAt" : "2018-12-26T07:19:38Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "0c37c78f-5d88-46b4-a2e1-e6885da6043c",
        "parentId" : "be3e9f3c-113b-4689-be32-8d84adb339db",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Thanks",
        "createdAt" : "2018-12-26T07:28:22Z",
        "updatedAt" : "2018-12-26T07:28:23Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "de4c4ef7e8a828331694de290582dced09c4df6f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +131,135 @@    else {\n        /* always return false for alignment == 0, which means cannot-be-aligned */\n        return 0;\n    }\n}"
  },
  {
    "id" : "bf3ad2e4-03c8-4085-98bd-680b19448fef",
    "prId" : 17409,
    "prUrl" : "https://github.com/numpy/numpy/pull/17409#pullrequestreview-500344830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f30da1fc-69f9-4d23-bc7f-c94f27aced3c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "As a follow-up to this collection of PRs, its very temping to remove the third argument from this function",
        "createdAt" : "2020-10-01T13:10:16Z",
        "updatedAt" : "2020-10-01T13:30:38Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "2aab9994-ce76-48d4-a862-378d337f9be4",
        "parentId" : "f30da1fc-69f9-4d23-bc7f-c94f27aced3c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Good idea. It doesn't get used and is easy enough to add elsewhere if needed.",
        "createdAt" : "2020-10-01T13:27:12Z",
        "updatedAt" : "2020-10-01T13:30:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6030ff2101e12abd01bd93b11a949821e26c248",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +71,75 @@        }\n\n        PyObject *shape2 = convert_shape_to_string(ndim, shape, \"\");\n        if (shape2 == NULL) {\n            Py_DECREF(shape1);"
  }
]