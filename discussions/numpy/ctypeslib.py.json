[
  {
    "id" : "6e251297-1b31-486c-acb6-bdfe5058d873",
    "prId" : 10970,
    "prUrl" : "https://github.com/numpy/numpy/pull/10970#pullrequestreview-121647380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bc4f0d3-4fc1-4e18-9279-f26ba05e2da4",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I wonder if we still need this. Much of the code here is ancient and predates the inclusion of ctypes into the standard library in Python 2.5.",
        "createdAt" : "2018-05-20T15:43:00Z",
        "updatedAt" : "2018-05-26T08:23:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a8be508d2b2ce719de94209286293973c278b46",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +340,344 @@\n\nif ctypes is not None:\n    _typecodes = _get_typecodes()\n"
  },
  {
    "id" : "e06e312b-5cf8-4daf-b7f8-9fde92f18e03",
    "prId" : 10970,
    "prUrl" : "https://github.com/numpy/numpy/pull/10970#pullrequestreview-123550836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eabcee2-3481-4cfc-b47d-8bb548696a97",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "A standard docstring would help here.",
        "createdAt" : "2018-05-20T15:45:09Z",
        "updatedAt" : "2018-05-26T08:23:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a0d46c54-5fe6-4232-8d06-e0fa5932140e",
        "parentId" : "6eabcee2-3481-4cfc-b47d-8bb548696a97",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'm going to argue this is out of scope for this patch",
        "createdAt" : "2018-05-26T08:07:42Z",
        "updatedAt" : "2018-05-26T08:23:16Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a8be508d2b2ce719de94209286293973c278b46",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +349,353 @@        The numpy array shares the memory with the ctypes object.\n\n        The shape parameter must be given if converting from a ctypes POINTER.\n        The shape parameter is ignored if converting from a ctypes array\n        \"\"\""
  },
  {
    "id" : "226a98ba-5af6-43aa-af7f-ea33d9ab5837",
    "prId" : 10970,
    "prUrl" : "https://github.com/numpy/numpy/pull/10970#pullrequestreview-123550971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5237b1c8-59d3-4fb3-86d5-387903e46aaf",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is using private class safe?",
        "createdAt" : "2018-05-20T15:46:38Z",
        "updatedAt" : "2018-05-26T08:23:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "18bdb16f-242e-4c18-984d-fb7ce227f3ff",
        "parentId" : "5237b1c8-59d3-4fb3-86d5-387903e46aaf",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'm not a huge fan of using attribute testing here, which will give a false-positive for `np.recarray` with the wrong dtype. I suppose I could switch it back to how the detection was done before, if you'd prefer that.\r\n\r\n",
        "createdAt" : "2018-05-26T08:14:36Z",
        "updatedAt" : "2018-05-26T08:23:16Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a8be508d2b2ce719de94209286293973c278b46",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +352,356 @@        The shape parameter is ignored if converting from a ctypes array\n        \"\"\"\n        if isinstance(obj, ctypes._Pointer):\n            # convert pointers to an array of the desired shape\n            if shape is None:"
  }
]