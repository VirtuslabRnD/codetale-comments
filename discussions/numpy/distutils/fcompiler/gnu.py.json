[
  {
    "id" : "5600d300-db13-493b-a3ae-14d34ccb393d",
    "prId" : 5614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfef3e36-6f09-49fe-ab7f-7164ecb7128b",
        "parentId" : null,
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "This seems to add the `-DMS_WIN64` and other flags to all platforms, including all non-windows and non-x86 ones\n",
        "createdAt" : "2015-10-17T14:52:53Z",
        "updatedAt" : "2015-10-17T14:53:06Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "444b5ac1eb8d0e2bfe548770af3ab8e6af846832",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +210,214 @@                opt = ['-O2 -march=core2 -mtune=generic -mfpmath=sse -msse2 -mincoming-stack-boundary=2']\n            else:\n                opt = ['-O2 -march=x86-64 -DMS_WIN64 -mtune=generic -msse2']\n        else:\n            opt = ['-O2']"
  },
  {
    "id" : "da8f68a1-4f04-4965-8206-6c174ed0572c",
    "prId" : 9983,
    "prUrl" : "https://github.com/numpy/numpy/pull/9983#pullrequestreview-75308477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5b98d5e-7c50-4162-ba83-02deff097f08",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "No need for this `if`, as it's handled within the function already.",
        "createdAt" : "2017-11-08T21:52:49Z",
        "updatedAt" : "2017-11-08T21:52:49Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "495a68f1-63da-45f7-8930-6b9ae3ac2bf3",
        "parentId" : "b5b98d5e-7c50-4162-ba83-02deff097f08",
        "authorId" : "430ea300-d0f4-430b-aac0-8e72939c36de",
        "body" : "Indeed - I suppose I was trying to mirror the structure of the existing `get_library_dirs()` methods, but having the `if` statement here is probably a bad idea. To add other platforms somebody would need to change code in 3 places as opposed to just one. Since this is already merged, should I take if `if`s out and submit another PR?",
        "createdAt" : "2017-11-09T01:39:52Z",
        "updatedAt" : "2017-11-09T01:39:52Z",
        "lastEditedBy" : "430ea300-d0f4-430b-aac0-8e72939c36de",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa06bee7418408a6645134a2ce8edae49c9fef64",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +201,205 @@                opt.append(d)\n        # For Macports / Linux, libgfortran and libgcc are not co-located\n        if sys.platform[:5] == 'linux' or sys.platform == 'darwin':\n            lib_gfortran_dir = self.get_libgfortran_dir()\n            if lib_gfortran_dir:"
  },
  {
    "id" : "0a145c55-37ac-4cbe-baa9-667bb3f4d104",
    "prId" : 11900,
    "prUrl" : "https://github.com/numpy/numpy/pull/11900#pullrequestreview-153865445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3909a55-dc47-40c0-8e0f-92e3b33f3895",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "There's a long comment in `exec_command` about passing `universal_newlines=False` here - are you sure it was incorrect?",
        "createdAt" : "2018-09-08T07:39:34Z",
        "updatedAt" : "2018-09-10T16:43:55Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f5e42086-b0a0-419f-9f92-47cea37604a4",
        "parentId" : "a3909a55-dc47-40c0-8e0f-92e3b33f3895",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "I think it is probably correct but `universal_newlines=False` is the default for `subprocess.check_output`, so perhaps less convincing that we still need a paragraph explaining why the default value is used",
        "createdAt" : "2018-09-10T16:45:31Z",
        "updatedAt" : "2018-09-10T16:45:31Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "95bdc2e7-4016-44fe-9168-abca2b34af8b",
        "parentId" : "a3909a55-dc47-40c0-8e0f-92e3b33f3895",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Ah, the default is `False`, so this is fine",
        "createdAt" : "2018-09-10T16:50:06Z",
        "updatedAt" : "2018-09-10T16:50:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac7dc482b2292c1987412ea7742f948681982f18",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +163,167 @@    def get_libgcc_dir(self):\n        try:\n            output = subprocess.check_output(self.compiler_f77 +\n                                            ['-print-libgcc-file-name'])\n        except (OSError, subprocess.CalledProcessError):"
  },
  {
    "id" : "9f19f8a3-9bc4-4346-9e4c-055bcd23afc5",
    "prId" : 12420,
    "prUrl" : "https://github.com/numpy/numpy/pull/12420#pullrequestreview-176613477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "967a8148-f63a-4eca-a849-befcda524700",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Is this needed for all Fortran code, or only for (e.g.) BLAS?\r\n\r\nThe only other place we have this is for MKL BLAS (defined in `distutils/system_info.py`).",
        "createdAt" : "2018-11-19T18:44:34Z",
        "updatedAt" : "2018-11-19T18:44:35Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "72e2277b-a266-4f83-8662-f582913094b8",
        "parentId" : "967a8148-f63a-4eca-a849-befcda524700",
        "authorId" : "aa70fcfa-0542-48a6-aff1-4253b5bd6820",
        "body" : "Yes, this is needed for Fortran code. I added little more info about this here --> https://github.com/numpy/numpy/issues/12396#issuecomment-439348349",
        "createdAt" : "2018-11-20T06:05:38Z",
        "updatedAt" : "2018-11-20T06:05:38Z",
        "lastEditedBy" : "aa70fcfa-0542-48a6-aff1-4253b5bd6820",
        "tags" : [
        ]
      }
    ],
    "commit" : "68833d7f43c631082d842f2e3999d57242a21732",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +317,321 @@\n    if sys.platform[:3] == 'aix':\n        executables['linker_so'].append('-lpthread')\n        if platform.architecture()[0][:2] == '64':\n            for key in ['compiler_f77', 'compiler_f90','compiler_fix','linker_so', 'linker_exe']:"
  },
  {
    "id" : "b64190dc-9237-4937-80c9-aaedd34692ea",
    "prId" : 12420,
    "prUrl" : "https://github.com/numpy/numpy/pull/12420#pullrequestreview-176614345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "421d24b4-36e8-4c33-a67c-fa19d7f99fdd",
        "parentId" : null,
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "If this stays in this file (referring to my question on BLAS), this is okay - although by design the better place is probably to add the method `get_flags_linker_so` et al. - but given the number of sets of flags to be edited, that's not necessarily more understandable this way.",
        "createdAt" : "2018-11-19T18:48:29Z",
        "updatedAt" : "2018-11-19T18:48:29Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "2becd675-1f37-4105-a4e0-438ad68c533f",
        "parentId" : "421d24b4-36e8-4c33-a67c-fa19d7f99fdd",
        "authorId" : "aa70fcfa-0542-48a6-aff1-4253b5bd6820",
        "body" : "Okay. I want to make the additions in one place rather than in various places.",
        "createdAt" : "2018-11-20T06:10:46Z",
        "updatedAt" : "2018-11-20T06:10:47Z",
        "lastEditedBy" : "aa70fcfa-0542-48a6-aff1-4253b5bd6820",
        "tags" : [
        ]
      }
    ],
    "commit" : "68833d7f43c631082d842f2e3999d57242a21732",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +316,320 @@    module_include_switch = '-I'\n\n    if sys.platform[:3] == 'aix':\n        executables['linker_so'].append('-lpthread')\n        if platform.architecture()[0][:2] == '64':"
  }
]