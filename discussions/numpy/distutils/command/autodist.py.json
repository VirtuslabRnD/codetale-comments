[
  {
    "id" : "0902053c-345c-490b-a655-d200c1a2eeba",
    "prId" : 3807,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a868194-35a2-477f-9f96-2ed33a3d8852",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Looks like the main function can go.\n",
        "createdAt" : "2013-09-27T18:19:46Z",
        "updatedAt" : "2013-09-27T18:32:17Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "247b4500d9505678933833301971bd56037bd33f",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +33,37 @@    cmd._check_compiler()\n    body = \"\"\"\nint\nmain()\n{"
  },
  {
    "id" : "ba3756ef-cbcc-4edc-b000-0282823b1887",
    "prId" : 17548,
    "prUrl" : "https://github.com/numpy/numpy/pull/17548#pullrequestreview-508182810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c46643f-278d-44b4-ad01-aa0776d6fd59",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "`setup.py` uses `gcc -dumpversion` instead of compiling. Is there a reason to prefer one over the other? I guess both require a call to `subprocess.Popen`. `gcc -dumpversion` seems more straightforward than checking a compilation error.",
        "createdAt" : "2020-10-14T06:08:11Z",
        "updatedAt" : "2020-10-14T06:08:11Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "10b8278f-b694-4078-a1f3-3ac77e9c1d18",
        "parentId" : "3c46643f-278d-44b4-ad01-aa0776d6fd59",
        "authorId" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "body" : "I suppose it could.  This code is mostly just cargo cult: Most of the other code in the module used compile checks, and there was an existing function here, for some long-forgotten reason, that explicitly checked for gcc >= 4.0, so this is just generalizing it.",
        "createdAt" : "2020-10-14T09:52:50Z",
        "updatedAt" : "2020-10-14T09:52:50Z",
        "lastEditedBy" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "tags" : [
        ]
      },
      {
        "id" : "3e2ce681-a8f4-4b82-8e32-a25288c56178",
        "parentId" : "3c46643f-278d-44b4-ad01-aa0776d6fd59",
        "authorId" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "body" : "For these purposes one would also want `gcc -dumpfullversion`.",
        "createdAt" : "2020-10-14T09:53:13Z",
        "updatedAt" : "2020-10-14T09:53:13Z",
        "lastEditedBy" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "tags" : [
        ]
      },
      {
        "id" : "938ceb5c-2fb2-4365-ba81-dc667aa86bb8",
        "parentId" : "3c46643f-278d-44b4-ad01-aa0776d6fd59",
        "authorId" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "body" : "I suppose one other benefit of this approach is that it's compiler-agnostic--it doesn't require any additional code to check that the compiler is in fact GCC, but will fail appropriately if it is not GCC.",
        "createdAt" : "2020-10-14T09:54:12Z",
        "updatedAt" : "2020-10-14T09:54:13Z",
        "lastEditedBy" : "c587e9c1-56c0-4144-8f98-c3c615fd096a",
        "tags" : [
        ]
      },
      {
        "id" : "0e76a880-6412-40b8-ba4a-c9b10b100aea",
        "parentId" : "3c46643f-278d-44b4-ad01-aa0776d6fd59",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "thanks for clarifying",
        "createdAt" : "2020-10-14T09:54:38Z",
        "updatedAt" : "2020-10-14T09:54:38Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c118aab05ca06f30b2eec8057e2e46db98ad745",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +87,91 @@    return cmd.try_compile(body % kw, None, None)\n\n\ndef check_gcc_function_attribute(cmd, attribute, name):\n    \"\"\"Return True if the given function attribute is supported.\"\"\""
  }
]