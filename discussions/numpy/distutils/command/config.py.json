[
  {
    "id" : "286329f5-90db-45b1-9127-01501f5ad5eb",
    "prId" : 4892,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90848ce5-1e7c-4333-a027-c45b2e73110d",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "I think it would be better to put this block into a try..except\nnewer python versions will use newer compilers and could fix the distutils issue we are working around\nwhen this happens this could break\n",
        "createdAt" : "2014-07-20T21:27:35Z",
        "updatedAt" : "2014-07-20T21:27:59Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "e2f67de7-3853-4f2c-8506-e43ae023d749",
        "parentId" : "90848ce5-1e7c-4333-a027-c45b2e73110d",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "I added one at first, but then removed it because a try-except block isn't going to help in that case (the code below can't really fail, and `get_build_version` shouldn't either). Doesn't hurt either though.\n",
        "createdAt" : "2014-07-20T21:33:50Z",
        "updatedAt" : "2014-07-20T21:33:50Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa0ec11c1e653a51a047ab7b572546886ba3cd8a",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +76,80 @@            # relevant are issues 4431 and 16296 on the Python bug tracker.\n            from distutils import msvc9compiler\n            if msvc9compiler.get_build_version() >= 10:\n                for ldflags in [self.compiler.ldflags_shared,\n                                self.compiler.ldflags_shared_debug]:"
  },
  {
    "id" : "ef4d7892-b786-4c57-b2e5-20aaa8098410",
    "prId" : 9215,
    "prUrl" : "https://github.com/numpy/numpy/pull/9215#pullrequestreview-41924040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51650810-ef18-4b0a-ac43-1df12b3e5e54",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "This one might have been correct as is... I'm not really sure what's going on here :-), but in general bare `except` followed by bare `raise` is an acceptable pattern.",
        "createdAt" : "2017-06-03T17:09:36Z",
        "updatedAt" : "2017-06-03T17:14:19Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "c4c391ce-b11e-45ed-8eb6-8e1912f8f5a9",
        "parentId" : "51650810-ef18-4b0a-ac43-1df12b3e5e54",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "That one looks like it should just be `try ... finally`",
        "createdAt" : "2017-06-03T17:17:48Z",
        "updatedAt" : "2017-06-03T17:17:48Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "7956c06e-89e3-433b-8207-eb7c94c6341b",
        "parentId" : "51650810-ef18-4b0a-ac43-1df12b3e5e54",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Also, that function has been deprecated for almost 9 years anyway",
        "createdAt" : "2017-06-03T17:18:39Z",
        "updatedAt" : "2017-06-03T17:18:39Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "1608e53072b035bd40de7a202e75354f0e802120",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +445,449 @@                output = grabber.data\n                grabber.restore()\n                raise\n            exe = os.path.join('.', exe)\n            exitstatus, output = exec_command(exe, execute_in='.',"
  },
  {
    "id" : "6d26e200-6584-4131-a9fe-373a22ed956b",
    "prId" : 11089,
    "prUrl" : "https://github.com/numpy/numpy/pull/11089#pullrequestreview-126922308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c60fe5b-85da-4bb6-bb3c-727879bea666",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "this will remove the depency file after compilation?\r\nthat defeats the whole point of the dependency file, please revert this.",
        "createdAt" : "2018-06-06T21:02:06Z",
        "updatedAt" : "2018-06-06T21:02:06Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "0a142484-0ce9-48d2-adf8-3584762dbfc6",
        "parentId" : "3c60fe5b-85da-4bb6-bb3c-727879bea666",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "hm nevermind it still appears to be present, what does this temp_files object actually do?",
        "createdAt" : "2018-06-06T21:07:35Z",
        "updatedAt" : "2018-06-06T21:07:35Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "ba4fe941-702c-4418-ac64-faf11421bec5",
        "parentId" : "3c60fe5b-85da-4bb6-bb3c-727879bea666",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I'd like to know also, I couldn't find it documented.",
        "createdAt" : "2018-06-06T21:12:58Z",
        "updatedAt" : "2018-06-06T21:12:59Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4a991713-b149-40d7-b26f-154a053926c3",
        "parentId" : "3c60fe5b-85da-4bb6-bb3c-727879bea666",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "The numpy distutils code is a set of patches into the python distutils module; whoever wrote the numpy distutils used a lot of hidden functionality inside the distutils module. I read both sets of code to figure out what to do here.\r\n\r\nYou can see `temp_files` used further below in this file to clean up the lib files, and you can also see it used in the main distutils `command/config.py` code.\r\n\r\nI think the important fact is that this file `numpy/distutils/command/config.py` is only used in the configuration step and the config object is only created by calling `get_config_cmd`. A grep will show this is only used for temporary compilations for use in the config. That is why it is harmless to clean up the dependency files.\r\n\r\nThe `build_clib.py` file is what actually builds the numpy libraries. That class does *not* clean up the dependency files.\r\n",
        "createdAt" : "2018-06-06T23:09:41Z",
        "updatedAt" : "2018-06-06T23:09:41Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      },
      {
        "id" : "82c7d026-620c-4886-ba03-8b396f31b023",
        "parentId" : "3c60fe5b-85da-4bb6-bb3c-727879bea666",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "the question is when does it clean them up\r\nI assume it is intended to be used during the clean target, but we do not support that target in numpy itself\r\nthough it could be useful for third parties",
        "createdAt" : "2018-06-07T19:21:03Z",
        "updatedAt" : "2018-06-07T19:21:04Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "9295adca4db3d3190530ae222ac1a29bd7447621",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +107,111 @@        # Clean them up.\n        self.temp_files.append(obj + '.d')\n        return src, obj\n\n    def _link (self, body,"
  },
  {
    "id" : "29957ede-14ba-4c46-a35a-42712522a4fe",
    "prId" : 11935,
    "prUrl" : "https://github.com/numpy/numpy/pull/11935#pullrequestreview-155179265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94856362-8a58-45a9-95d9-2a4cfbe040a8",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Maybe I could still do better here -- `exe.split(' ')` actually produces a list even if the string has no whitespace (single command), so is perhaps arguably more robust here since it could handle more complex commands too?",
        "createdAt" : "2018-09-12T21:35:08Z",
        "updatedAt" : "2018-09-12T21:35:32Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "c21a8f4e-5b11-434a-a901-0b4bfff6f3e3",
        "parentId" : "94856362-8a58-45a9-95d9-2a4cfbe040a8",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This enclosing function has been deprecated for 10 years - can we just remove it?",
        "createdAt" : "2018-09-13T02:46:36Z",
        "updatedAt" : "2018-09-13T02:46:44Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "10d6b814-317d-4aa4-aacb-aaeb95780059",
        "parentId" : "94856362-8a58-45a9-95d9-2a4cfbe040a8",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "`git grep 'get_output('`\r\n\r\n```\r\nnumpy/distutils/command/config.py:    def get_output(self, body, headers=None, include_dirs=None,\r\nnumpy/distutils/system_info.py:        s, o = c.get_output(atlas_version_c_text,\r\nnumpy/distutils/system_info.py:            s, o = c.get_output(atlas_version_c_text,\r\n```",
        "createdAt" : "2018-09-13T04:43:35Z",
        "updatedAt" : "2018-09-13T16:49:18Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "c24aad25-e57e-40b6-be7b-8db22f259195",
        "parentId" : "94856362-8a58-45a9-95d9-2a4cfbe040a8",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "That said, I just tried deleting `get_output` locally and everything seems fine test-wise, but presumably we'd want to get rid of those other two calls--would we then get rid of those other enclosing functions or try to replace with something else?",
        "createdAt" : "2018-09-13T16:58:26Z",
        "updatedAt" : "2018-09-13T16:58:27Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "d8402fc3-15b7-4b5e-b513-a94c07d6d9b2",
        "parentId" : "94856362-8a58-45a9-95d9-2a4cfbe040a8",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think it best to leave it in for this PR and leave removal to another. Things are already complicated enough, and if we need to revert some bit it is easier if there are separate PRs.",
        "createdAt" : "2018-09-13T17:02:32Z",
        "updatedAt" : "2018-09-13T17:02:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13463193f573cf0356a57383960d4110d8032f88",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +462,466 @@                # use a list for check_output() -- this assumes\n                # that exe is always a single command\n                output = subprocess.check_output([exe], cwd='.')\n            except subprocess.CalledProcessError as exc:\n                exitstatus = exc.returncode"
  },
  {
    "id" : "d05f1d9a-19ed-4f8f-8e96-4a30c94372d7",
    "prId" : 15248,
    "prUrl" : "https://github.com/numpy/numpy/pull/15248#pullrequestreview-338433056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Does this actually do anything.",
        "createdAt" : "2020-01-05T23:07:24Z",
        "updatedAt" : "2020-01-05T23:07:37Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "dc5e4e48-6af6-4b68-894e-3e48395fb8f6",
        "parentId" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I mean, in principle it could if someone declares:\r\n```python\r\nclass WeirdException(CompileError):\r\n    def __str__(self):\r\n       print(\"Yes this does something\")\r\n       return CompilerError.__str__(self)\r\n```\r\n\r\nI was trying to keep the changes in this patch strictly to removing workarounds `except E as e:`, rather than evaluating whether `e` was used sensibly in the first place.",
        "createdAt" : "2020-01-05T23:35:53Z",
        "updatedAt" : "2020-01-05T23:35:53Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "12bf216e-a907-4be0-a077-c3ceacc01651",
        "parentId" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Ha, it was intended to fix an unused variable warning in #12448. \r\n```\r\n-           msg = str(get_exception())￼\r\n+           str(get_exception())\r\n```",
        "createdAt" : "2020-01-06T00:04:39Z",
        "updatedAt" : "2020-01-06T00:06:52Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "15d90a36-02cb-4be6-8ca5-051d70128a45",
        "parentId" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "My guess is that the fixer thought there might be a side effect in the function call.",
        "createdAt" : "2020-01-06T00:07:52Z",
        "updatedAt" : "2020-01-06T00:07:53Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ae5af0fc-4d9a-4a7b-8507-639c3a4d3c0b",
        "parentId" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Thanks for the detective work - I think I'd still rather leave that to a follow-up PR - searching for `str(e)` probably finds a large amount of stuff that can be better written with exception chaining.",
        "createdAt" : "2020-01-06T00:25:22Z",
        "updatedAt" : "2020-01-06T00:25:22Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "a434c14b-fde4-4f74-abac-aafb391e3d1d",
        "parentId" : "3fcc25c0-6f16-41cc-9295-1be04fa12406",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Flake8 doesn't like that file :) But it doesn't complain about unused variables. I think we can improve a lot of messages with `f-strings`. We could do that now that Python 3.5 has been dropped, but probably better to wait for the next release.",
        "createdAt" : "2020-01-06T00:35:51Z",
        "updatedAt" : "2020-01-06T00:35:52Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da0497fdf35a7bf851f3625b0df07cde950f5f49",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +96,100 @@            ret = mth(*((self,)+args))\n        except (DistutilsExecError, CompileError) as e:\n            str(e)\n            self.compiler = save_compiler\n            raise CompileError"
  }
]