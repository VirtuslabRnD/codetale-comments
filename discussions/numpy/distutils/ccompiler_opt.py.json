[
  {
    "id" : "d1766611-7edf-4f4a-98e1-86fef9dd9778",
    "prId" : 13516,
    "prUrl" : "https://github.com/numpy/numpy/pull/13516#pullrequestreview-409426447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26edff17-c410-48a4-a961-cc0b597d95e9",
        "parentId" : null,
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "last discovered one hopefully.\r\nwe have another issue here with parallel compiling, each dispatched target requires variant flags so I had to call `compile()` multiple times since it doesn't provide an argument to specify flags for each source.\r\n\r\nI have two ways to take in order to fix this issue :\r\n\r\n- by patching the custom `compile()` that defined in `ccompiler.py` to allow non-block calls\r\n   through callable argument.\r\n- by handel parallel compiling internally though threads in here.\r\n\r\n@mattip, @rgommers, any ideas?",
        "createdAt" : "2020-05-08T21:12:47Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      },
      {
        "id" : "4fc1eff4-5572-44a0-b94a-ce4c46a46a4b",
        "parentId" : "26edff17-c410-48a4-a961-cc0b597d95e9",
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "/cc, @juliantaylor",
        "createdAt" : "2020-05-09T00:51:06Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      },
      {
        "id" : "5bf18e0a-03de-4e11-9038-51960ae0d86a",
        "parentId" : "26edff17-c410-48a4-a961-cc0b597d95e9",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "> we have another issue here with parallel compiling, each dispatched target requires variant flags so I had to call `compile()` multiple times since it doesn't provide an argument to specify flags for each source.\r\n\r\nNo way around that indeed.\r\n\r\n\r\n\r\n>     * by patching the custom `compile()` that defined in `ccompiler.py` to allow non-block calls\r\n>       through callable argument.\r\n\r\nHmm that doesn't sound attractive, I wouldn't want to monkeypatch `distutils` for some potential speed gain.\r\n\r\n> by handel parallel compiling internally though threads in here.\r\n\r\nDoesn't seem worth it either to be honest. We recently detected a bug in the Fortran support for `--parallel`, that stuff is a bit painful to get right. Let's not worry about compile speed of this for now - first get the patch in, worry about possible compile speedups later.",
        "createdAt" : "2020-05-09T19:20:33Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "397777de-f045-4744-90a5-8d3123ab06c5",
        "parentId" : "26edff17-c410-48a4-a961-cc0b597d95e9",
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "I feel it worth it in the near future since we will have a lot of dispatch-able sources, but it's okay for now.",
        "createdAt" : "2020-05-11T18:33:15Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72653810f470415f4d78c8a9ea874370a526126",
    "line" : 531,
    "diffHunk" : "@@ -1,1 +529,533 @@\n    def dist_compile(self, sources, flags, **kwargs):\n        \"\"\"Wrap CCompiler.compile()\"\"\"\n        assert(isinstance(sources, list))\n        assert(isinstance(flags, list))"
  },
  {
    "id" : "b54de7dd-97a0-4361-8c20-fa938cc9ecee",
    "prId" : 13516,
    "prUrl" : "https://github.com/numpy/numpy/pull/13516#pullrequestreview-430264652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a431a8a1-857a-4a53-b456-cb3dd2ba5eee",
        "parentId" : null,
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "@mattip, @rgommers, I reduced the effect of slow compilation due to not taking advantage of parallel compiling by gathering generated sources(wrapped sources) that belong to each required optimization together and then compiling it as a group.\r\nNot a radical solution but will be effective enough when we have many dispatch-able sources.\r\n",
        "createdAt" : "2020-06-15T00:10:02Z",
        "updatedAt" : "2020-06-16T16:44:58Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72653810f470415f4d78c8a9ea874370a526126",
    "line" : 2139,
    "diffHunk" : "@@ -1,1 +2137,2141 @@        # - To generate all config headers of the dispatchable sources,\n        #   before the compilation in case if there are dependency relationships\n        #   among them.\n        objects = []\n        for flags, srcs in to_compile.items():"
  },
  {
    "id" : "212922e8-2210-49ba-b9e1-23df11f53933",
    "prId" : 13516,
    "prUrl" : "https://github.com/numpy/numpy/pull/13516#pullrequestreview-444893871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad0f7ce4-d366-444d-9db3-f48f5dd5127a",
        "parentId" : null,
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "@mattip, @charris, we can suppress errors from here. if it's necessary I can add support for verbose levels.",
        "createdAt" : "2020-07-08T15:41:50Z",
        "updatedAt" : "2020-07-08T15:41:50Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e72653810f470415f4d78c8a9ea874370a526126",
    "line" : 681,
    "diffHunk" : "@@ -1,1 +679,683 @@    )\n    @staticmethod\n    def _dist_test_spawn(cmd, display=None):\n        from distutils.errors import CompileError\n        try:"
  },
  {
    "id" : "48c11ac1-c78a-45d1-9e6c-b126115ae81d",
    "prId" : 17129,
    "prUrl" : "https://github.com/numpy/numpy/pull/17129#pullrequestreview-475345882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a903b57-1bf2-44f0-99ec-893aa1e35150",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Shouldn't this be \r\n```suggestion\r\n            extra_checks=[\"AVX512BW_MASK\"]\r\n```\r\n\r\nIf not, where is the conversion from `str` to `list` occurring?",
        "createdAt" : "2020-08-26T09:32:53Z",
        "updatedAt" : "2020-09-03T09:26:13Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "43cda19f-6680-4948-a2c9-e9b083593808",
        "parentId" : "3a903b57-1bf2-44f0-99ec-893aa1e35150",
        "authorId" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "body" : "both acceptable `extra_checks=['x', 'xx']` or`extra_checks='x xx'`\r\n\r\n> If not, where is the conversion from str to list occurring?\r\n\r\nhttps://github.com/numpy/numpy/blob/97d2db483fc0ffd46f38d0e1c39d5fc001e33197/numpy/distutils/ccompiler_opt.py#L1139-L1144",
        "createdAt" : "2020-08-26T10:09:25Z",
        "updatedAt" : "2020-09-03T09:26:13Z",
        "lastEditedBy" : "23ffb2ec-0278-4386-95f5-84cc15ce2cfd",
        "tags" : [
        ]
      },
      {
        "id" : "533582e3-e71f-46d6-82c6-6e7347375de6",
        "parentId" : "3a903b57-1bf2-44f0-99ec-893aa1e35150",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Thanks, missed that because the line doing the splitting wasn't part of the diff",
        "createdAt" : "2020-08-26T10:11:02Z",
        "updatedAt" : "2020-09-03T09:26:13Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "6138616f5dcb573056984597c99085faf5ae7fe7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +260,264 @@            interest=42, implies=\"AVX512CD\", group=\"AVX512VL AVX512BW AVX512DQ\",\n            detect=\"AVX512_SKX\", implies_detect=False,\n            extra_checks=\"AVX512BW_MASK\"\n        ),\n        AVX512_CLX = dict("
  }
]