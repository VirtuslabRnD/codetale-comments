[
  {
    "id" : "65bb9b13-a7b0-4ccd-83c4-ed981f52c463",
    "prId" : 5614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63cb30d6-1bd5-477d-b77d-2e3e2a10fee1",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "don't we have this somewhere else already? using -dumpversion as its easier to parse\n",
        "createdAt" : "2015-02-27T17:57:18Z",
        "updatedAt" : "2015-02-27T17:57:18Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "a28f4ef3-7c08-4dda-b30f-bacd305112b5",
        "parentId" : "63cb30d6-1bd5-477d-b77d-2e3e2a10fee1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yeah, should be `-dumpversion`. I don't know if it is somewhere else. I can fix that in the style fixups.\n",
        "createdAt" : "2015-02-27T18:38:05Z",
        "updatedAt" : "2015-02-27T18:38:05Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "6a2dd4d5-671d-47f0-bcd8-50ca2eee1b04",
        "parentId" : "63cb30d6-1bd5-477d-b77d-2e3e2a10fee1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Doesn't look like that will work here without other modifications. In particular there is\n\n```\nif 'MinGW-W64' not in str(out_string):\n```\n\nAnd `-dump-version` might not deliver that. I'd rather not fool with this without having windows to check the work with.\n",
        "createdAt" : "2015-02-27T19:27:36Z",
        "updatedAt" : "2015-02-27T19:27:36Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "8b80c1eb-1ece-4f2f-a774-9d1f4da053c2",
        "parentId" : "63cb30d6-1bd5-477d-b77d-2e3e2a10fee1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "@carlkl Can you check if `-dumpversion` works here?\n",
        "createdAt" : "2015-02-27T19:31:27Z",
        "updatedAt" : "2015-02-27T19:31:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "444b5ac1eb8d0e2bfe548770af3ab8e6af846832",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +87,91 @@\n        p = subprocess.Popen(['gcc', '--version'], shell=True,\n                             stdout=subprocess.PIPE)\n        out_string = p.stdout.read()\n        p.stdout.close()"
  },
  {
    "id" : "d1a1eb94-8100-4771-bffc-9f507135ee47",
    "prId" : 5614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1194a3b1-f8aa-4bf6-bcbf-c66a3835cf75",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "shouldn't harm, though I don't know why those flags are needed, they should all be default on 64 bit\n",
        "createdAt" : "2015-02-27T17:58:21Z",
        "updatedAt" : "2015-02-27T17:58:21Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "599bf41d-89d9-4118-972d-7a51f630eb90",
        "parentId" : "1194a3b1-f8aa-4bf6-bcbf-c66a3835cf75",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could you look at #5615 and indicate which flags can go? There is a `core2` arch flag floating around also which looks suspicious to me. \n",
        "createdAt" : "2015-02-27T18:39:28Z",
        "updatedAt" : "2015-02-27T18:39:28Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "17624eaa-3b91-425a-a242-5941214e23c2",
        "parentId" : "1194a3b1-f8aa-4bf6-bcbf-c66a3835cf75",
        "authorId" : "1fe7fd54-b162-47df-bf12-2c7ad3cd88d3",
        "body" : "I guess the `-march` flags can go away, as the gcc-4.9 defaults should do. I will do some more testing. I will also try to remove the patch on system_info.py, as it seems to be a configuration issue. I needed this after install of `Visual C++ for Python`.\n",
        "createdAt" : "2015-03-02T15:00:21Z",
        "updatedAt" : "2015-03-02T15:00:21Z",
        "lastEditedBy" : "1fe7fd54-b162-47df-bf12-2c7ad3cd88d3",
        "tags" : [
        ]
      },
      {
        "id" : "7a248ecb-cf08-4c9b-96fc-174225722f90",
        "parentId" : "1194a3b1-f8aa-4bf6-bcbf-c66a3835cf75",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "@carlkl I'll put in the cleanups in #5615 so that you can make further fixups on top of that.\n",
        "createdAt" : "2015-03-02T16:01:30Z",
        "updatedAt" : "2015-03-02T16:01:30Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5dafe2ef-2f67-4cf8-b75b-2a85f55c48f3",
        "parentId" : "1194a3b1-f8aa-4bf6-bcbf-c66a3835cf75",
        "authorId" : "1fe7fd54-b162-47df-bf12-2c7ad3cd88d3",
        "body" : "After numerous tests with different combinations of gcc flags I came to the conclusion, that the settings for the gcc flags in the PR seems to be almost correct. `-march=x86-64 -mtune=generic` is recommended for amd64 usage. `-march=core2 -mtune=generic` could be changed to `-march=pentium4 -mtune=generic`.\n",
        "createdAt" : "2015-03-09T15:19:48Z",
        "updatedAt" : "2015-03-09T15:19:48Z",
        "lastEditedBy" : "1fe7fd54-b162-47df-bf12-2c7ad3cd88d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "444b5ac1eb8d0e2bfe548770af3ab8e6af846832",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +137,141 @@                self.set_executables(\n                    compiler='gcc -march=x86-64 -mtune=generic -DMS_WIN64 -O2 -msse2 -Wall',\n                    compiler_so='gcc -march=x86-64 -mtune=generic -DMS_WIN64 -O2 -msse2 -Wall -Wstrict-prototypes',\n                    linker_exe='gcc',\n                    linker_so='gcc -shared -Wl,-gc-sections -Wl,-s')"
  }
]