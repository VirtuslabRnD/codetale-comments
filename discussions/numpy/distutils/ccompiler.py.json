[
  {
    "id" : "c1770144-ae5c-4b5a-9dbe-994274349ad1",
    "prId" : 3344,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6499930-98cb-4bd9-8766-865ac574831c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Please use `(...)` for the items imported to avoid a line continuation. I know it was already there but a bit of cleanup doesn't hurt.\n",
        "createdAt" : "2013-05-22T01:16:23Z",
        "updatedAt" : "2013-05-22T07:25:53Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9d8f8cfb-5e70-4b08-86ff-043bc19a9009",
        "parentId" : "f6499930-98cb-4bd9-8766-865ac574831c",
        "authorId" : "ddc821e4-cfa5-46f2-9e84-c47d803eabba",
        "body" : "This file has dozens of pep8 violations.\n",
        "createdAt" : "2013-05-22T01:35:07Z",
        "updatedAt" : "2013-05-22T07:25:53Z",
        "lastEditedBy" : "ddc821e4-cfa5-46f2-9e84-c47d803eabba",
        "tags" : [
        ]
      },
      {
        "id" : "aff664a4-755b-4c24-927e-c77dfaf2cd0f",
        "parentId" : "f6499930-98cb-4bd9-8766-865ac574831c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yeah, but every bit of litter that gets picked up helps.\n",
        "createdAt" : "2013-05-22T02:18:14Z",
        "updatedAt" : "2013-05-22T07:25:53Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "77333f98-42a6-4379-adfb-3f7ad1083466",
        "parentId" : "f6499930-98cb-4bd9-8766-865ac574831c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Great. A separate PR would be fine, I don't want to delay this PR too much for `STY:` cleanups.\n",
        "createdAt" : "2013-05-22T03:27:22Z",
        "updatedAt" : "2013-05-22T07:25:53Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea0fe58708b548925778ec30fdc6e7a4cb5bbf4",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +16,20 @@from numpy.distutils import log\nfrom numpy.distutils.exec_command import exec_command\nfrom numpy.distutils.misc_util import cyg2win32, is_sequence, mingw32, \\\n                                      quote_args\nfrom numpy.distutils.compat import get_exception"
  },
  {
    "id" : "8ffdab54-46f2-4bfe-8945-cffc43c708e7",
    "prId" : 5161,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41ddc497-b957-419f-8c09-9e335a76120f",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Might as well put this in a tuple rather than use `\\`.\n",
        "createdAt" : "2014-10-27T20:58:21Z",
        "updatedAt" : "2014-10-28T21:39:56Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "461bf423e1e8caae40f6f624f925644e95a0256d",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +16,20 @@from numpy.distutils import log\nfrom numpy.distutils.exec_command import exec_command\nfrom numpy.distutils.misc_util import cyg2win32, is_sequence, mingw32, \\\n                                      quote_args, get_num_build_jobs\nfrom numpy.distutils.compat import get_exception"
  },
  {
    "id" : "1faae8e8-4089-42bc-82a8-7a3df2644def",
    "prId" : 8897,
    "prUrl" : "https://github.com/numpy/numpy/pull/8897#pullrequestreview-35647300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74bd0a5c-8562-4790-8ea3-0d177509a5d1",
        "parentId" : null,
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "The issue vs. #9035 is probably that `_needs_build` should also check if any compilation flags differ from the previous compilation.",
        "createdAt" : "2017-05-01T18:13:41Z",
        "updatedAt" : "2017-05-01T18:13:41Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      },
      {
        "id" : "043b2b66-8969-4695-9fdc-2ac11594a698",
        "parentId" : "74bd0a5c-8562-4790-8ea3-0d177509a5d1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could well be. I need to delete the SciPy build directory in order to run tests that show the problem if it was working in the previous build.",
        "createdAt" : "2017-05-01T18:24:31Z",
        "updatedAt" : "2017-05-01T18:24:31Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "c73ed260-44b2-47fa-b82f-b6b28e075220",
        "parentId" : "74bd0a5c-8562-4790-8ea3-0d177509a5d1",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "Deleting might not help, because the same file is built two times with different options during the same build.",
        "createdAt" : "2017-05-01T18:52:02Z",
        "updatedAt" : "2017-05-01T18:52:08Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      },
      {
        "id" : "11ffe361-6fb2-46c8-8232-de8b0ad4ce32",
        "parentId" : "74bd0a5c-8562-4790-8ea3-0d177509a5d1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Just referring to my local build. Another problem I ran into was that in order to cythonize the source I needed to do a Python2 build first. I have cython installed for Python 3 but it goes under the name cython3.",
        "createdAt" : "2017-05-01T19:28:20Z",
        "updatedAt" : "2017-05-01T19:28:20Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "b94402b0-3344-4b17-b9f1-971f12c3a907",
        "parentId" : "74bd0a5c-8562-4790-8ea3-0d177509a5d1",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "hm I though I tested scipy with this, apparently I forgot to run the tests\r\n\r\nchecking the arguments is simple enough, would be nicer to add the extension name to the dependency filename instead but it is probably clunky to get that from the compiler object.",
        "createdAt" : "2017-05-01T20:56:08Z",
        "updatedAt" : "2017-05-01T20:56:08Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa00be8b71e3005e0fb26e078b082e8ee28a6ce7",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +232,236 @@        obj, (src, ext) = args\n        if _needs_build(obj):\n            self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n\n    if isinstance(self, FCompiler):"
  },
  {
    "id" : "f64cd752-7e67-496b-b4e0-e69d219f4f67",
    "prId" : 9050,
    "prUrl" : "https://github.com/numpy/numpy/pull/9050#pullrequestreview-36549673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b380a01-e6e4-4a3f-b74e-2e77436617a7",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there any situation when this semaphore wouldn't be acquired? Aren't there the same number of pool workers as available semaphores?",
        "createdAt" : "2017-05-05T14:39:20Z",
        "updatedAt" : "2017-05-05T14:39:20Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "235ddbb1-f2eb-4355-9cb8-46328d7af1ef",
        "parentId" : "7b380a01-e6e4-4a3f-b74e-2e77436617a7",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Nevermind, I get it now - `CCompiler_compile` itself can be called from multiple threads simultaneously, resulting in multiple pools",
        "createdAt" : "2017-05-05T14:53:45Z",
        "updatedAt" : "2017-05-05T14:53:45Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "bc4b3285-87f1-46ff-86ac-29ffedf140a6",
        "parentId" : "7b380a01-e6e4-4a3f-b74e-2e77436617a7",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "correct\r\nan alternative implementation could have one global pool that each compile thread shares",
        "createdAt" : "2017-05-05T15:08:03Z",
        "updatedAt" : "2017-05-05T15:08:15Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "86c4acea-c013-4b54-b8c4-ba61c0cc2531",
        "parentId" : "7b380a01-e6e4-4a3f-b74e-2e77436617a7",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Right now, am I right in thinking that we end up allocating `N` pools of `N` workers, but then sharing an `N`-item semaphore between all `N^2` of them? That seems pretty wasteful",
        "createdAt" : "2017-05-05T15:21:41Z",
        "updatedAt" : "2017-05-05T15:22:14Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "c8b35a07-1e0d-4aef-9c02-ddf2e12d5e13",
        "parentId" : "7b380a01-e6e4-4a3f-b74e-2e77436617a7",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "it are a few hundred threads in the worst case, so not too bad.\r\n\r\nWith a global pool we can't close it again but that shouldn't be an issue and I don't think map is guaranteed to be threadsafe (though it probably is)",
        "createdAt" : "2017-05-05T16:16:46Z",
        "updatedAt" : "2017-05-05T16:16:46Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "67bfabf1d5b6bedc695eab097cee9ddc9a406496",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +281,285 @@            # retrieve slot from our #job semaphore and build\n            with _job_semaphore:\n                self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n        finally:\n            # register being done processing"
  },
  {
    "id" : "b3836ea4-84cd-4f53-a85c-09c3f93ed4d9",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-154885238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dd1ace8-b34e-4eb6-a6a0-ae4c1a7f53b5",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "feels slightly non-Pythonic to use a convenience return maybe?",
        "createdAt" : "2018-09-12T23:46:02Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +156,160 @@        # caught exception will execute the default code after the\n        # try / except block, which handles various exceptions\n        return None\n\n    if is_sequence(cmd):"
  },
  {
    "id" : "f1062acb-2053-4a8d-98f9-c0fadea023e3",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-156470119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02f0de35-28f1-44f2-822f-65c2cd80e1a1",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "similar comment re: string vs. list robustness",
        "createdAt" : "2018-09-18T17:03:35Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +642,646 @@\n    try:\n        output = subprocess.check_output(version_cmd)\n    except subprocess.CalledProcessError as exc:\n        output = exc.output"
  },
  {
    "id" : "6d4c9c24-dc2f-4029-8998-064a1a6a8f60",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-156470119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "515d9fbe-f689-42d4-a2fb-3e7260bd52f7",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "I think we're expecting a version string here and Eric has previously criticized extraneous usage of our new `filepath_from_subprocess_output` -- it may be possible to remove this, but note that `exec_command` was not able to make the distinction between filepaths and version strings so it would also perform the processing steps / control flow invoked by this function anyway.",
        "createdAt" : "2018-09-18T17:05:28Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +654,658 @@        # output isn't actually a filepath but we do this\n        # for now to match previous distutils behavior\n        output = filepath_from_subprocess_output(output)\n        status = 0\n"
  },
  {
    "id" : "442840b6-7a52-4c8b-8eaf-839e7f28ee6c",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-157923009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4688a374-f06b-46d5-8f61-711b0e1edab4",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "are we sure it is safe to swap the `str(o)` here for a bytes prefix on the search string? In particular, `o` can come from two other places above; if we need to go back and process the other instances of `o`, is that really any better than just switching back to my original `str` coercion and removing the bytes prefix?",
        "createdAt" : "2018-09-18T21:21:31Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "612cf55f-0357-43fd-a8bb-eede9f8c3658",
        "parentId" : "4688a374-f06b-46d5-8f61-711b0e1edab4",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Both places above are now of type `bytes`, so yes, this is safe.",
        "createdAt" : "2018-09-22T21:37:55Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +165,169 @@        # When installing through pip, `o` can contain non-ascii chars\n        pass\n    if re.search(b'Too many open files', o):\n        msg = '\\nTry rerunning setup command until build succeeds.'\n    else:"
  },
  {
    "id" : "689d9353-7c89-48d5-b762-f133dd48fd87",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-170315755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41019da2-12e5-467d-9d98-d004e3758ef5",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Strictly speaking this is not a filepath, but you're correct that this matches the old behavior. Add a comment to that effect, and then this looks good to me.",
        "createdAt" : "2018-10-31T15:26:57Z",
        "updatedAt" : "2018-10-31T20:44:09Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +654,658 @@        # output isn't actually a filepath but we do this\n        # for now to match previous distutils behavior\n        output = filepath_from_subprocess_output(output)\n        status = 0\n"
  },
  {
    "id" : "cc668dff-c7d6-42dc-a69b-21702c963f9f",
    "prId" : 11898,
    "prUrl" : "https://github.com/numpy/numpy/pull/11898#pullrequestreview-206694043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2e468d7-8ee9-4308-a726-5e2e889e7992",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I worry that this regex was intended to match stderr, in a similar way to #12831.",
        "createdAt" : "2019-02-22T08:01:03Z",
        "updatedAt" : "2019-02-22T08:01:03Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "83b03407053aefd9553cf3636860f2be8f57f596",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +165,169 @@        # When installing through pip, `o` can contain non-ascii chars\n        pass\n    if re.search(b'Too many open files', o):\n        msg = '\\nTry rerunning setup command until build succeeds.'\n    else:"
  }
]