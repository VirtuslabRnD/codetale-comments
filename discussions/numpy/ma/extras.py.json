[
  {
    "id" : "220234d5-fd43-456a-a2df-35888f459d2b",
    "prId" : 3440,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9b46769-304c-4efb-a857-459b9e1affc6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Probably don't need float for the sum over `w` either. I wonder what happens if `weights` is integer when `filled` is called with a float fill value.\n",
        "createdAt" : "2013-06-15T16:52:44Z",
        "updatedAt" : "2013-06-15T16:52:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ace8ee7b4b81af7600c53e093e104ef53d54482c",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +534,538 @@                    w = eval (\"w[\" + repr(tuple(r)) + \"] * ones(ash, float)\")\n                    n = add.reduce(a * w, axis)\n                    d = add.reduce(w, axis, dtype=float)\n                    del w, r\n                else:"
  },
  {
    "id" : "b532fbba-6254-4409-89b3-81f74760e38a",
    "prId" : 4463,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0bfa03b-6af8-446e-926e-6d8fd5f2ddcf",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Please clean that up a bit by putting `axis = N + axis` on the next line. I know it wasn't yours to begin with ;)\n",
        "createdAt" : "2014-03-09T23:59:28Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "2ee7067f-6b47-431b-8265-5c4a0c7bda55",
        "parentId" : "c0bfa03b-6af8-446e-926e-6d8fd5f2ddcf",
        "authorId" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "body" : "I copied the entire body of this function from np.apply_over_axes.  I don't mind cleaning it up a bit, but I don't want to introduce spurious differences between the two functions.  Should I reformat np.apply_over_axes as well?\n",
        "createdAt" : "2014-03-10T00:35:40Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "tags" : [
        ]
      },
      {
        "id" : "74358cbc-bf59-44ad-94af-bf150b9721f5",
        "parentId" : "c0bfa03b-6af8-446e-926e-6d8fd5f2ddcf",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Sure, make it a different commit though.The message prefix would be `STY:`.\n",
        "createdAt" : "2014-03-13T16:42:41Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "76c9bb336f77aa406c62ab5f3077517dec133d30",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +422,426 @@        axes = (axes,)\n    for axis in axes:\n        if axis < 0: axis = N + axis\n        args = (val, axis)\n        res = func(*args)"
  },
  {
    "id" : "2327003b-571e-4322-9c45-42cd5608c9ca",
    "prId" : 4463,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "beb48b21-e347-42c9-975e-825c5891e891",
        "parentId" : null,
        "authorId" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "body" : "This is another place that could use a clean-up.  I would simply write `func(val, axis)` in the line above.\n",
        "createdAt" : "2014-03-10T00:37:01Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "tags" : [
        ]
      },
      {
        "id" : "731dcc87-2274-4982-90d6-7c1f9cf262d6",
        "parentId" : "beb48b21-e347-42c9-975e-825c5891e891",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What about the `mask=func(*(msk, axis))`? That is what concerned me. The original does something with the mask, the new version doesn't.\n",
        "createdAt" : "2014-03-10T19:16:05Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "be313213-5bdc-4128-8612-fe3ca9330943",
        "parentId" : "beb48b21-e347-42c9-975e-825c5891e891",
        "authorId" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "body" : "This made no sense to me.  And neither did `f(*(a, b))` instead of `f(a, b)`.  Looks like a bit of overengineering.\n\nma.apply_over_axes inherits docstring from np.apply_over_axes, so it should work the same way and delegate mask handling to `func`.  This is what the OP issue was about.\n",
        "createdAt" : "2014-03-10T19:25:45Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "tags" : [
        ]
      },
      {
        "id" : "dd5325c6-b2c4-4753-b302-1f5617147724",
        "parentId" : "beb48b21-e347-42c9-975e-825c5891e891",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK. Agree about the `f(*(a, b))` function call. Can that be cleaned up without too much trouble? Also, even though the docstring is currently inherited, it might make sense to have one where you can mention that the mask handling is left to `func`.\n",
        "createdAt" : "2014-03-10T20:41:46Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "76c9bb336f77aa406c62ab5f3077517dec133d30",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +424,428 @@        if axis < 0: axis = N + axis\n        args = (val, axis)\n        res = func(*args)\n        if res.ndim == val.ndim:\n            val = res"
  },
  {
    "id" : "7bfb61ff-aea9-43af-851f-92fa6a3a6afe",
    "prId" : 4463,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1517f2ed-7b65-44c7-acef-0c6d0683c9b3",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "PEP8, but this will get fixed later when we pepify these files.\n",
        "createdAt" : "2014-03-24T16:27:22Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5415c2d9-c6a0-42a9-8e99-992a36cc7e05",
        "parentId" : "1517f2ed-7b65-44c7-acef-0c6d0683c9b3",
        "authorId" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "body" : "This was copied from np.apply_over_axes.  I assume \"pepify\" will fix this in both places.\n",
        "createdAt" : "2014-03-24T17:05:38Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "69446047-08ee-467e-b1ce-c12cc7cc8376",
        "tags" : [
        ]
      },
      {
        "id" : "d02f221d-be9f-4787-afe0-2790d5eca7cd",
        "parentId" : "1517f2ed-7b65-44c7-acef-0c6d0683c9b3",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "In particular, the indent should be\n\n```\n                raise ValueError(\"function is not returning\"\n                                 \" an array of the correct shape\")\n\n```\n\nor\n\n```\n                raise ValueError(\n                    \"function is not returning an array of the correct shape\")\n```\n",
        "createdAt" : "2014-03-24T17:05:54Z",
        "updatedAt" : "2014-04-02T02:05:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "76c9bb336f77aa406c62ab5f3077517dec133d30",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +433,437 @@            else:\n                raise ValueError(\"function is not returning \"\n                        \"an array of the correct shape\")\n    return val\napply_over_axes.__doc__ = np.apply_over_axes.__doc__["
  }
]