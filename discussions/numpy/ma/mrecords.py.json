[
  {
    "id" : "491c9513-421b-4bb8-a3b7-b77b6bc74f30",
    "prId" : 13326,
    "prUrl" : "https://github.com/numpy/numpy/pull/13326#pullrequestreview-242017469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This if condition should be `_mask.dtype.fields is None`, else it blows up on structured types with 0 fields. Arguably out of scope, but may as well fix this.\r\n\r\nIf you're looking for another deprecation for another PR, len(dtype) is looking like a bad idea on non structured dtypes... If not, I'll probably do that myself.",
        "createdAt" : "2019-05-25T01:07:07Z",
        "updatedAt" : "2019-05-25T01:16:26Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "51b4ff25-81ab-48db-aac4-ee42f9f85dc0",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Although actually the function is crap anyway and should be using one of the recursive helpers in ma/core that ors together all the fields",
        "createdAt" : "2019-05-25T01:18:37Z",
        "updatedAt" : "2019-05-25T01:18:37Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "488d3381-56d5-4c77-9592-c986c02f185c",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "body" : "So should I update this PR, or just leave it as it is and let you do a followup?  (I would prefer the latter :))",
        "createdAt" : "2019-05-25T22:20:04Z",
        "updatedAt" : "2019-05-25T22:20:04Z",
        "lastEditedBy" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "tags" : [
        ]
      },
      {
        "id" : "2ae6f174-fce3-4b25-bb5a-ac49904647b2",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I suppose you could argue that this PR is about fixing things for length-1 subarrays, and you've succeeded even without fixing this. I think fine to put in as is, assuming we can sort out the ci failure by restarting",
        "createdAt" : "2019-05-25T22:30:43Z",
        "updatedAt" : "2019-05-25T22:30:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad1e0600e45b9fa71096d0a0f10c1474e003f373",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +223,227 @@                pass\n            tp_len = len(_mask.dtype)\n            hasmasked = _mask.view((bool, ((tp_len,) if tp_len else ()))).any()\n        if (obj.shape or hasmasked):\n            obj = obj.view(MaskedArray)"
  },
  {
    "id" : "685c59e5-5686-4a95-a89f-38eb2f08c4bd",
    "prId" : 17438,
    "prUrl" : "https://github.com/numpy/numpy/pull/17438#pullrequestreview-501567996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c152af36-e8aa-439c-9e1e-8a9dd214b42c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This matches the following, so is fine, thanks!\r\n\r\nhttps://github.com/numpy/numpy/blob/432b3899dea324d82e3b7aa79355934442f97cec/numpy/core/records.py#L464-L465",
        "createdAt" : "2020-10-03T19:19:27Z",
        "updatedAt" : "2020-10-04T07:19:18Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a5d117d82d3a15f3f32f8b7a744bdf160edbfa1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +200,204 @@            res = fielddict[attr][:2]\n        except (TypeError, KeyError) as e:\n            raise AttributeError(\"record array has no attribute %s\" % attr) from e\n        # So far, so good\n        _localdict = ndarray.__getattribute__(self, '__dict__')"
  },
  {
    "id" : "b19b0cb5-4f06-42a8-9fba-1f029a7298f7",
    "prId" : 19102,
    "prUrl" : "https://github.com/numpy/numpy/pull/19102#pullrequestreview-668836254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "It looks like this entire `if`/`else` statement is in fact redundant",
        "createdAt" : "2021-05-26T07:26:19Z",
        "updatedAt" : "2021-05-26T07:26:19Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "017f46cf-d14d-4be1-a91d-151cf69623ab",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "body" : "looks like `output` is indeed being returned at the end. \r\nwhy would you say `if`/`else` is redundant ? since its actually being put to use, can we discuss this further before i can make a commit ?\r\nThanks.",
        "createdAt" : "2021-05-26T07:50:52Z",
        "updatedAt" : "2021-05-26T07:50:52Z",
        "lastEditedBy" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "tags" : [
        ]
      },
      {
        "id" : "d3464a55-f5b4-4ef6-9e51-c18ec186dbba",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "`output` is being used, yes. \r\nMy point is that both the `if` and `else` branch return the exact same `output` value, _i.e._ the `issubclass` check is redundant.",
        "createdAt" : "2021-05-26T07:58:59Z",
        "updatedAt" : "2021-05-26T07:58:59Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "27392c41-4ab7-461e-85d4-03629c7cbf40",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "body" : "Thanks again for resolving my doubt.\r\nI'll do a commit the relevant changes shortly. \r\n",
        "createdAt" : "2021-05-26T08:36:48Z",
        "updatedAt" : "2021-05-26T08:36:48Z",
        "lastEditedBy" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "tags" : [
        ]
      },
      {
        "id" : "0a206c2e-c0ba-4a2d-8090-ee09989ffd75",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "body" : "hey, I did what you suggested to `mrecords.py` and ran its test, It failed. The code passes all the tests if I revert the change tho.\r\nHere are the errors - \r\n```\r\nFAILED numpy/ma/tests/test_mrecords.py::TestView::test_view_simple_dtype - TypeError: Cannot cast scalar from dtype((numpy.record, [('a', '<f8'), ('b', '<f8')])) to dtype('float64') according to the rule 'unsafe'\r\nFAILED numpy/ma/tests/test_mrecords.py::TestView::test_view_flexible_type - ValueError: no field of name A\r\n```\r\nSuggest a possible workaround.",
        "createdAt" : "2021-05-26T08:59:09Z",
        "updatedAt" : "2021-05-26T09:00:40Z",
        "lastEditedBy" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "tags" : [
        ]
      },
      {
        "id" : "c967c81e-e6d4-4d7e-9e24-b49429c6127d",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Ugh, at this point I'd just keep the `if` / `else` statement in.\r\nThe code is a bit wonky IMO, but the sole purpose of the `issubclass` check is trigger an exception, thus signaling that `dtype: npt.DTypeLike` has been used rather than `dtype: Type[np.ndarray]`.\r\nhttps://github.com/numpy/numpy/blob/12c6000601c7665e52502ab4a67a54d290498266/numpy/ma/mrecords.py#L375-L394",
        "createdAt" : "2021-05-26T09:44:08Z",
        "updatedAt" : "2021-05-26T09:44:08Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "90e0dc27-495d-49ec-860c-fcac5cc65600",
        "parentId" : "e52c39a7-e90c-4078-a711-beda9687a104",
        "authorId" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "body" : "sure, restored the change. New commit up now. \r\nThanks\r\n",
        "createdAt" : "2021-05-26T10:10:35Z",
        "updatedAt" : "2021-05-26T10:10:35Z",
        "lastEditedBy" : "328c976d-ec19-43a3-8213-02588e0a211b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ce7835aa8ac388724739956e06bef4bd8abdac2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +377,381 @@                    output = ndarray.view(self, dtype)\n                else:\n                    output = ndarray.view(self, dtype)\n            # OK, there's the change\n            except TypeError:"
  }
]