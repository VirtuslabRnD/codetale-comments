[
  {
    "id" : "491c9513-421b-4bb8-a3b7-b77b6bc74f30",
    "prId" : 13326,
    "prUrl" : "https://github.com/numpy/numpy/pull/13326#pullrequestreview-242017469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This if condition should be `_mask.dtype.fields is None`, else it blows up on structured types with 0 fields. Arguably out of scope, but may as well fix this.\r\n\r\nIf you're looking for another deprecation for another PR, len(dtype) is looking like a bad idea on non structured dtypes... If not, I'll probably do that myself.",
        "createdAt" : "2019-05-25T01:07:07Z",
        "updatedAt" : "2019-05-25T01:16:26Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "51b4ff25-81ab-48db-aac4-ee42f9f85dc0",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Although actually the function is crap anyway and should be using one of the recursive helpers in ma/core that ors together all the fields",
        "createdAt" : "2019-05-25T01:18:37Z",
        "updatedAt" : "2019-05-25T01:18:37Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "488d3381-56d5-4c77-9592-c986c02f185c",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "body" : "So should I update this PR, or just leave it as it is and let you do a followup?  (I would prefer the latter :))",
        "createdAt" : "2019-05-25T22:20:04Z",
        "updatedAt" : "2019-05-25T22:20:04Z",
        "lastEditedBy" : "4b199d8d-ad49-4d20-ac90-89741ac9c7bb",
        "tags" : [
        ]
      },
      {
        "id" : "2ae6f174-fce3-4b25-bb5a-ac49904647b2",
        "parentId" : "db12ea30-55cd-4998-b6bc-959ea9540a98",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I suppose you could argue that this PR is about fixing things for length-1 subarrays, and you've succeeded even without fixing this. I think fine to put in as is, assuming we can sort out the ci failure by restarting",
        "createdAt" : "2019-05-25T22:30:43Z",
        "updatedAt" : "2019-05-25T22:30:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad1e0600e45b9fa71096d0a0f10c1474e003f373",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +223,227 @@                pass\n            tp_len = len(_mask.dtype)\n            hasmasked = _mask.view((bool, ((tp_len,) if tp_len else ()))).any()\n        if (obj.shape or hasmasked):\n            obj = obj.view(MaskedArray)"
  },
  {
    "id" : "685c59e5-5686-4a95-a89f-38eb2f08c4bd",
    "prId" : 17438,
    "prUrl" : "https://github.com/numpy/numpy/pull/17438#pullrequestreview-501567996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c152af36-e8aa-439c-9e1e-8a9dd214b42c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This matches the following, so is fine, thanks!\r\n\r\nhttps://github.com/numpy/numpy/blob/432b3899dea324d82e3b7aa79355934442f97cec/numpy/core/records.py#L464-L465",
        "createdAt" : "2020-10-03T19:19:27Z",
        "updatedAt" : "2020-10-04T07:19:18Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a5d117d82d3a15f3f32f8b7a744bdf160edbfa1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +200,204 @@            res = fielddict[attr][:2]\n        except (TypeError, KeyError) as e:\n            raise AttributeError(\"record array has no attribute %s\" % attr) from e\n        # So far, so good\n        _localdict = ndarray.__getattribute__(self, '__dict__')"
  }
]