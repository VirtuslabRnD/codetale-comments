[
  {
    "id" : "78ea4868-22ee-4c05-9368-608234ffb673",
    "prId" : 16241,
    "prUrl" : "https://github.com/numpy/numpy/pull/16241#pullrequestreview-413195968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e65937c-d64d-49bf-96bb-19bc288e6e13",
        "parentId" : null,
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "do we want to skip this for pypy ? ",
        "createdAt" : "2020-05-15T23:16:41Z",
        "updatedAt" : "2020-12-15T18:40:45Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "05ebd8e5-bde0-483f-916c-24c29527a9f0",
        "parentId" : "7e65937c-d64d-49bf-96bb-19bc288e6e13",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "I dunno, I think it should be fine on PyPy and probably also applies. The sub-interpreter one I do not know/doubt (but its not tested here).\r\n\r\nTo be honest, I am fine with not doing this at all (and/or at least leaving the sub-interpreter stuff out). But thought I would propose it. It might be a bit too obnoxious.",
        "createdAt" : "2020-05-15T23:22:52Z",
        "updatedAt" : "2020-12-15T18:40:45Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "a3e50cf2-ac2b-42dd-a720-c18a498b12b7",
        "parentId" : "7e65937c-d64d-49bf-96bb-19bc288e6e13",
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "> To be honest, I am fine with not doing this at all (and/or at least leaving the sub-interpreter stuff out). But thought I would propose it. It might be a bit too obnoxious.\r\n\r\nSkipping the test sounds fine to me if thats what you mean.\r\n\r\n> I dunno, I think it should be fine on PyPy and probably also applies. The sub-interpreter one I do not know/doubt (but its not tested here).\r\n\r\n I tried on pypy, wasn't able to run your ctypes example though since pypy ctypes implementation doesnt have ctypes.pythonapi. But it will probably warn just fine.\r\n",
        "createdAt" : "2020-05-15T23:36:04Z",
        "updatedAt" : "2020-12-15T18:40:45Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "73c0ce4e-283f-4f29-995a-2694675f4335",
        "parentId" : "7e65937c-d64d-49bf-96bb-19bc288e6e13",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "The ctypes example should do nothing on pypy, since I do not think pypy supports subinterpreters (yet). The reload example should apply just as much to pypy as to cpython (not sure whether it is possible to reload in pypy).\r\n\r\nI think this is fairly straight forward, unless there is some unknown failure mode for the sub-interpreter warning being given spuriously. Otherwise mainly the wording matters? I am not even sure how well that ctypes thing works, which is why I did not try to bake it into a test...",
        "createdAt" : "2020-05-17T20:28:52Z",
        "updatedAt" : "2020-12-15T18:40:45Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7628292e005fd3d6faf1b77434d2224921d49ad8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +17,21 @@    ModuleDeprecationWarning = np.ModuleDeprecationWarning\n\n    with assert_warns(UserWarning):\n        reload(np)\n    assert_(_NoValue is np._NoValue)"
  }
]