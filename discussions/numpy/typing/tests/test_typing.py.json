[
  {
    "id" : "611bd08e-034b-46b4-9726-8d909a219ca2",
    "prId" : 18066,
    "prUrl" : "https://github.com/numpy/numpy/pull/18066#pullrequestreview-558860240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59c6db01-3ed8-4308-a86e-5e075347644b",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "@mattip I'm not sure there is anything to expose here, unless we'd want to properly expose the entire `numpy.typing` tesing suite?\r\n\r\nAll this PR does is taking a set of comments and formatting them (when applicable), thus allowing us to use aliases.\r\nIt doesn't touch `mypy` itself or its output.\r\n",
        "createdAt" : "2020-12-26T12:02:13Z",
        "updatedAt" : "2020-12-26T12:02:13Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "47246d2f3867d3d8999d540e2b14dce795c87f45",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +177,181 @@\n\ndef _parse_reveals(file: IO[str]) -> List[str]:\n    \"\"\"Extract and parse all ``\"  # E: \"`` comments from the passed file-like object.\n"
  },
  {
    "id" : "6bb772a4-99d2-4a08-a8ef-4986b4b52194",
    "prId" : 18173,
    "prUrl" : "https://github.com/numpy/numpy/pull/18173#pullrequestreview-569795616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ebcdab4-743d-4a24-8f0f-9cbb3f1a7139",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "The `slow` and `skipif` markers are copied from the actual tests further down below.\r\n\r\nWhile not strictly necessary, this does mean that the cache is _only_ cleared when one is actually running the typing tests (which I feel is a desirable property).",
        "createdAt" : "2021-01-15T17:32:02Z",
        "updatedAt" : "2021-01-15T17:32:02Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "66ea4a10-3003-4919-ae1e-6d254befe039",
        "parentId" : "9ebcdab4-743d-4a24-8f0f-9cbb3f1a7139",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I fail to see why `pytest` would care, the decorated function is not a test and I don't see why it would ever get executed. Is it called anywhere?",
        "createdAt" : "2021-01-15T20:50:53Z",
        "updatedAt" : "2021-01-15T20:50:53Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "6cdaea1d-18c1-41fa-9093-9a1393820922",
        "parentId" : "9ebcdab4-743d-4a24-8f0f-9cbb3f1a7139",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "The `autouse=True` argument of `@pytest.fixture` ensures that the function will be automatically executed _before_ running any of the actual tests. This also means it is insensitive towards, for example, test randomization.\r\n\r\nSecondly, a bit of trial and error shows that fixtures it does respect the `@pytest.mark` decorators.",
        "createdAt" : "2021-01-16T01:20:59Z",
        "updatedAt" : "2021-01-16T01:20:59Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "7c648e59-3013-4ed2-b37b-0fdf9e4bce54",
        "parentId" : "9ebcdab4-743d-4a24-8f0f-9cbb3f1a7139",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Thanks for the explanation.",
        "createdAt" : "2021-01-16T01:23:11Z",
        "updatedAt" : "2021-01-16T01:23:11Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a891c07d040067d42e35b25c558f0969cca2715c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +28,32 @@\n@pytest.mark.slow\n@pytest.mark.skipif(NO_MYPY, reason=\"Mypy is not installed\")\n@pytest.fixture(scope=\"session\", autouse=True)\ndef clear_cache() -> None:"
  },
  {
    "id" : "b8586647-fb07-4d75-b714-8ff1f89fe3e0",
    "prId" : 18433,
    "prUrl" : "https://github.com/numpy/numpy/pull/18433#pullrequestreview-594154637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd14b21-5139-4124-807e-c6d8f6cba69b",
        "parentId" : null,
        "authorId" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "body" : "@BvB93 I added this to speed up pytest runs. Seems pretty harmless but wanted to draw your attention to it.\r\n",
        "createdAt" : "2021-02-18T16:07:30Z",
        "updatedAt" : "2021-02-24T10:41:33Z",
        "lastEditedBy" : "b15cf1a1-ba9d-47aa-b157-e0c1f40c5c5c",
        "tags" : [
        ]
      },
      {
        "id" : "740010b1-e50f-4d78-80d6-1d14ad02922b",
        "parentId" : "6fd14b21-5139-4124-807e-c6d8f6cba69b",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "This should be fine I suppose, just be aware that a stale mypy cache can potentially causes unexpected results.",
        "createdAt" : "2021-02-19T12:46:52Z",
        "updatedAt" : "2021-02-24T10:41:33Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4c123657f08b43939a7b7e329f40015d38b2849",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +53,57 @@    NUMPY_TYPING_TEST_CLEAR_CACHE=0 pytest numpy/typing/tests\n    \"\"\"\n    if os.path.isdir(CACHE_DIR) and bool(os.environ.get(\"NUMPY_TYPING_TEST_CLEAR_CACHE\", True)):\n        shutil.rmtree(CACHE_DIR)\n"
  }
]