[
  {
    "id" : "b59eeee0-2a84-475d-a234-0c8bfff2383f",
    "prId" : 18718,
    "prUrl" : "https://github.com/numpy/numpy/pull/18718#pullrequestreview-627452793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93d018e1-611f-48cd-9ab9-db36f692e38d",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "@BvB93 I assme that this doesn't need any further changes related to typing, since typing probably doesn't make a difference between the one dtype vs. all dtypes `signature` versions?",
        "createdAt" : "2021-04-02T23:07:25Z",
        "updatedAt" : "2021-04-08T17:25:18Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "63d0fddf-4a4a-4a10-aed1-28975b9d07d0",
        "parentId" : "93d018e1-611f-48cd-9ab9-db36f692e38d",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Naah, it's fine. `signature` is currently typed as taking either a string or tuple of strings, while this PR only changes which specific strings are allowed, correct?\r\nhttps://github.com/numpy/numpy/blob/623bc1fae1d47df24e7f1e29321d0c0ba2771ce0/numpy/__init__.pyi#L2930",
        "createdAt" : "2021-04-03T12:01:04Z",
        "updatedAt" : "2021-04-08T17:25:18Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "44dbf648aacfe85c426f0a667b7670e20ba70bad",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +5,9 @@np.sin(1, out=np.empty(1))\nnp.matmul(np.ones((2, 2, 2)), np.ones((2, 2, 2)), axes=[(0, 1), (0, 1), (0, 1)])\nnp.sin(1, signature=\"D->D\")\nnp.sin(1, extobj=[16, 1, lambda: None])\n# NOTE: `np.generic` subclasses are not guaranteed to support addition;"
  }
]