[
  {
    "id" : "9138c3b3-dbc3-4b94-bfbe-23ddd6579000",
    "prId" : 16558,
    "prUrl" : "https://github.com/numpy/numpy/pull/16558#pullrequestreview-429139776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "parentId" : null,
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "This is the \"no hard dependency on `typing_extensions`\" dance mentioned in the PR description.",
        "createdAt" : "2020-06-10T04:59:59Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      },
      {
        "id" : "9ef5d6d9-ed11-436a-9923-1bdb8a757133",
        "parentId" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Would it be an idea to issue an `ImportWarning` if `HAVE_PROTOCOL = False`?",
        "createdAt" : "2020-06-10T17:00:04Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "dbb8992a-9103-49ae-91ae-f3d33d59b946",
        "parentId" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "I'd worry about that because it's pretty common for projects to run their tests suites with warnings turned into errors, and I could see something like e.g. a SciPy test run that doesn't have mypy installed and errors out because of the warning.",
        "createdAt" : "2020-06-11T02:41:21Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      },
      {
        "id" : "c1ebd4d4-d755-488f-adbd-596f189d4a81",
        "parentId" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Hmm, that might be a problem, yes.\r\nDoes NumPy have a logger where where such information could be displayed? Since I suspect that silently setting `_SupportsArray` to `Any` (and by extension `ArrayLike`) could result in some unexpected issues (at least from a end user perspective).\r\n\r\nIf not, then it should be mentioned in the documentation.",
        "createdAt" : "2020-06-11T10:27:36Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      },
      {
        "id" : "fe2adb67-74a6-449b-aa65-1f2e81cb0db5",
        "parentId" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "No logger, when most of the action is happening in C code (potentially with the GIL released) logging doesn't work great. I added a big warning to to the top of the documentation in https://github.com/numpy/numpy/pull/16558/commits/4a120f0d073506329b564bfe9e69db2f6b612964.",
        "createdAt" : "2020-06-11T15:46:33Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      },
      {
        "id" : "441823e8-b808-4479-ba7c-ac0060e3bbbf",
        "parentId" : "b27910f3-bcad-4eac-a5d0-5db764e2eac9",
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Ah, so be it.\r\nAt least it is documented now, which is the most important thing.",
        "createdAt" : "2020-06-11T17:36:10Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "d985e8ca2fca154d3770c842a2da1ba6dc3aaf1c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@from ._dtype_like import DtypeLike\n\nif sys.version_info >= (3, 8):\n    from typing import Protocol\n    HAVE_PROTOCOL = True"
  },
  {
    "id" : "93881071-dbdb-4d5c-a130-216ef50780ee",
    "prId" : 16558,
    "prUrl" : "https://github.com/numpy/numpy/pull/16558#pullrequestreview-427711844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bccbab0-50b8-4328-8935-65bbe8d45c28",
        "parentId" : null,
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "This is an example of what I was trying to describe in the PR description where if we do `from numpy import ndarray`, then mypy goes and looks in `__init__.pyi`, finds `ndarray`, and types it correctly. But if we were to do `from ..core.multiarray import ndarray`, then it would find no stubs for that file and fall back on treating `ndarray` as `Any`, which would be bad.",
        "createdAt" : "2020-06-10T05:01:18Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d985e8ca2fca154d3770c842a2da1ba6dc3aaf1c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@from typing import Any, overload, Sequence, TYPE_CHECKING, Union\n\nfrom numpy import ndarray\nfrom ._dtype_like import DtypeLike\n"
  },
  {
    "id" : "fc7487b3-cbb1-4ce4-833c-e5357b97c1da",
    "prId" : 16558,
    "prUrl" : "https://github.com/numpy/numpy/pull/16558#pullrequestreview-428256148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9f3faef-9360-46ba-adb9-29cef08e471d",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "Note for the future: \r\nIf `_SupportsArray` ever becomes public we should make it useable for run-time `isinstance()` and `issubclass()` checks, similar to the likes of `SupportsInt` ([ref](https://github.com/python/cpython/blob/663836e1179ea79eac12e55670af7e89a531a060/Lib/typing.py#L1521-L1528)).",
        "createdAt" : "2020-06-10T17:04:05Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "d985e8ca2fca154d3770c842a2da1ba6dc3aaf1c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@\nif TYPE_CHECKING or HAVE_PROTOCOL:\n    class _SupportsArray(Protocol):\n        @overload\n        def __array__(self, __dtype: DtypeLike = ...) -> ndarray: ..."
  },
  {
    "id" : "1a2ad393-4f6a-4095-b483-1c75965b5abe",
    "prId" : 16558,
    "prUrl" : "https://github.com/numpy/numpy/pull/16558#pullrequestreview-431155993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7458ec15-3707-4f13-9689-155bdc839229",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "It would be nice to support buffer protocols, but Python's typing doesn't support that yet. In the meantime I would suggest adding `memoryview` and a comment referencing https://github.com/python/typing/issues/593",
        "createdAt" : "2020-06-15T17:06:19Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "536096ad-56c4-4c48-9a74-74170725feb5",
        "parentId" : "7458ec15-3707-4f13-9689-155bdc839229",
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "Since `memoryview`s are `Sequence`s we do allow them currently, e.g.\r\n\r\n```\r\nimport numpy as np\r\n\r\nx = b'foobar'\r\nv = memoryview(x)\r\nnp.array(v)\r\n```\r\n\r\npasses mypy. I will add the comment though.",
        "createdAt" : "2020-06-16T03:27:17Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      },
      {
        "id" : "e7f2b2ec-be8b-4d27-88c3-0257ced4d49c",
        "parentId" : "7458ec15-3707-4f13-9689-155bdc839229",
        "authorId" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "body" : "We should add a test explicitly for memoryviews though; I'll open an issue.",
        "createdAt" : "2020-06-16T03:28:02Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "0354b9b7-8a89-4c8d-85d2-b0f4bcddce0a",
        "tags" : [
        ]
      },
      {
        "id" : "315197fa-4a1c-4fd4-a009-46cc18c35fc8",
        "parentId" : "7458ec15-3707-4f13-9689-155bdc839229",
        "authorId" : "81171453-12ee-490b-8fe9-9c1a697823a3",
        "body" : "I'd highly recommend commenting on this B.P.O issue asking for support for a Buffer protocol in typing, as that is the better place than the typing issue: https://bugs.python.org/issue27501",
        "createdAt" : "2020-06-16T04:45:35Z",
        "updatedAt" : "2020-06-17T04:33:20Z",
        "lastEditedBy" : "81171453-12ee-490b-8fe9-9c1a697823a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "d985e8ca2fca154d3770c842a2da1ba6dc3aaf1c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@#\n# https://github.com/python/typing/issues/593\nArrayLike = Union[bool, int, float, complex, _SupportsArray, Sequence]"
  }
]