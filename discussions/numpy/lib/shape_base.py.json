[
  {
    "id" : "62c441f2-3045-48ac-9181-a2a9c55a4a1f",
    "prId" : 4454,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b84f1043-14ee-43b2-8b95-4a2335b3b39c",
        "parentId" : null,
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "needs `.. versionadded:: 1.9.0` see e.g. np.percentile\n",
        "createdAt" : "2014-05-30T12:01:20Z",
        "updatedAt" : "2014-06-06T08:40:51Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f8aae032a218ed609e23068d5aec128b0d6fe8e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +32,36 @@        Additional arguments to `func1d`.\n    kwargs: any\n        Additional named arguments to `func1d`.\n\n        .. versionadded:: 1.9.0"
  },
  {
    "id" : "e3b4761c-2ae7-4625-8499-d61314f20e58",
    "prId" : 7918,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a298e9f-4168-49bd-a95c-c8f425afe510",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "So, for this branch, I would suggest to run\n\n```\nres.__array_wrap__(outarr)\n```\n\njust after creating `outarr`.\n",
        "createdAt" : "2016-08-08T16:03:30Z",
        "updatedAt" : "2016-10-11T02:29:51Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "242da4168588dc9431077f67c8f5309ac986e3fc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +111,115 @@    else:\n        res = asanyarray(res)\n        Ntot = product(outshape)\n        holdshape = outshape\n        outshape = list(arr.shape)"
  },
  {
    "id" : "55672938-dafb-415e-9888-a0936672a5c7",
    "prId" : 7918,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1be64ed3-e4a2-4700-a094-d2f67cd44fe8",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Somewhat of an aside, but suppose one uses `func1d=np.mean`, then at least for astropy's `Quantity` class, what one gets is an `Quantity` array scalar as output. For any array scalar, `np.isscalar` returns `False`, so one ends up in this branch, but with an object that has `shape=()` and for which trying `len(a)` gives a `TypeError`:\n\n```\na = np.array(1)\na.shape\n# ()\nlen(a)\n# TypeError(...)\n```\n\nTo catch this, one has to make this branch aware of the possibility that `res.shape == ()`.\n",
        "createdAt" : "2016-08-08T16:07:46Z",
        "updatedAt" : "2016-10-11T02:29:51Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "242da4168588dc9431077f67c8f5309ac986e3fc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +112,116 @@        res = asanyarray(res)\n        Ntot = product(outshape)\n        holdshape = outshape\n        outshape = list(arr.shape)\n        outshape[axis] = res.size"
  }
]