[
  {
    "id" : "1e492dac-19ee-4492-9ee6-957b0514a91b",
    "prId" : 9070,
    "prUrl" : "https://github.com/numpy/numpy/pull/9070#pullrequestreview-36861120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d58f18e0-2cb0-4ac1-b9c3-91be11a42ac4",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Perhaps `dtype[['field1', 'field2']]` should be legal, to replace this function (but not needed for this PR, and would conflict with the refactor in #8814).",
        "createdAt" : "2017-05-08T18:23:28Z",
        "updatedAt" : "2017-05-10T02:18:10Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "d4cb16c6-e8cb-441c-ada3-f87d15604869",
        "parentId" : "d58f18e0-2cb0-4ac1-b9c3-91be11a42ac4",
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "That's true, that's why I made `_keep_fields` private with a leading underscore. I don't want users depending on it since it might be made obsolete in the next year or two, one way or another.",
        "createdAt" : "2017-05-08T19:21:14Z",
        "updatedAt" : "2017-05-10T02:18:10Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      }
    ],
    "commit" : "9177d0b5776550e2fbb3b1c9a922832a6553f3e2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +524,528 @@\n\ndef _keep_fields(base, keep_names, usemask=True, asrecarray=False):\n    \"\"\"\n    Return a new array keeping only the fields in `keep_names`,"
  },
  {
    "id" : "24814f16-e5b8-4f7a-bb6b-e38bc30cdb66",
    "prId" : 9343,
    "prUrl" : "https://github.com/numpy/numpy/pull/9343#pullrequestreview-47533725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "434996fb-5fd9-4894-90d0-ba04350ac4f0",
        "parentId" : null,
        "authorId" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "body" : "Empty fields names causes headaches and bugs in the npy.io code, which I hope to fix once other PRs get in. \"aligned\" dtypes are particularly a problem, because `np.dtype('i1,f4', align=True).descr` is [('f0', '|i1'), ('', '|V3'), ('f1', '<f4')], so you often end up with lots of dummy fields named ''.\r\n\r\nThe point of my comment here is to say that actually your code is fine and I think you are probably fixing even more bugs than you think here, for aligned dtypes, because this function now skips padding bytes.",
        "createdAt" : "2017-07-01T16:12:21Z",
        "updatedAt" : "2017-07-01T19:54:02Z",
        "lastEditedBy" : "a4f03a99-2e43-482b-a9bc-5a9e359abb03",
        "tags" : [
        ]
      },
      {
        "id" : "629d2ae3-2f03-4d8b-b4d0-0841c09db2f7",
        "parentId" : "434996fb-5fd9-4894-90d0-ba04350ac4f0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Yep, this test previously failed:\r\n```\r\ndt = np.dtype('i1,f4', align=True)\r\ndt.names = ('k', 'v')\r\na = np.array([(1, 3), (3, 2)], dt)\r\nb = np.array([(1, 1), (2, 2)], dt)\r\njoin_by('k', a, b)\r\n```\r\n\r\nDue to `np.ma.default_fill_value(np.dtype('V4'))` returning an object that won't cast to `np.void`...",
        "createdAt" : "2017-07-01T16:22:44Z",
        "updatedAt" : "2017-07-01T19:54:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "6def6164-a5ba-4d7a-bb01-dd38869d1ed3",
        "parentId" : "434996fb-5fd9-4894-90d0-ba04350ac4f0",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "I'll add a test for this",
        "createdAt" : "2017-07-01T17:18:18Z",
        "updatedAt" : "2017-07-01T19:54:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae14f151d2534dfa1b632ed156fe8e7fc9753de2",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +92,96 @@    if dtype.names is None:\n        # .descr returns a nameless field, so we should too\n        return [('', dtype)]\n    else:\n        fields = ((name, dtype.fields[name]) for name in dtype.names)"
  }
]