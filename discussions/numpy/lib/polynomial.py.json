[
  {
    "id" : "f986bcd8-7cf3-4c91-9d8a-075b119e145d",
    "prId" : 5116,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6372cbe2-7ff3-4323-aac6-d7110ca67cfd",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "You always keep learning funky functions :). I was wondering once whether I should finish off a function which was something like `prepare_arrays(*arrs)` and if you give it `inexact=True` it would return the common dtype with `result_type(0., *arrs)` basically, plus `array_wrap` if you want it to...\n",
        "createdAt" : "2014-09-25T07:08:02Z",
        "updatedAt" : "2014-09-25T17:50:38Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "1bffce92-12cc-457f-88e6-bcef41b39423",
        "parentId" : "6372cbe2-7ff3-4323-aac6-d7110ca67cfd",
        "authorId" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "body" : "There are way too many of those: I am pretty sure if I rewrote this same code 10 times from scratch, I would not use the same function all the time...\n",
        "createdAt" : "2014-09-25T16:36:22Z",
        "updatedAt" : "2014-09-25T17:50:38Z",
        "lastEditedBy" : "34105ae0-9fd2-4403-be9b-7c550a729828",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a0587e545e959747d9b501dbf029a4cd6576547",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +131,135 @@        # Let object arrays slip through, e.g. for arbitrary precision\n        if dt != object:\n            seq_of_zeros = seq_of_zeros.astype(mintypecode(dt.char))\n    else:\n        raise ValueError(\"input must be 1d or non-empty square 2d array.\")"
  }
]