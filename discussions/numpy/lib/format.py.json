[
  {
    "id" : "a41fef5b-75d8-4c14-aa34-321581d1097f",
    "prId" : 4765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c00c5d4-4d3e-4f0b-b0a1-ab9c17c365f6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Should have a \"Returns\" section.\n",
        "createdAt" : "2014-06-02T01:37:33Z",
        "updatedAt" : "2014-06-02T19:27:02Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc50d27b4e125052d44b0643bc344e4c5062316a",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +280,284 @@        None means use oldest that works\n        explicit version will raise a ValueError if the format does not\n        allow saving this data.  Default: None\n    Returns\n    -------"
  },
  {
    "id" : "9027bdf9-9a7a-45e6-90ec-36d2067f7a3d",
    "prId" : 5178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90146ccd-decd-41f8-a9ca-d6569d151279",
        "parentId" : null,
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "whitespace here is weird, though it doesn't really matter\n",
        "createdAt" : "2014-10-12T23:21:30Z",
        "updatedAt" : "2014-10-12T23:40:54Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      },
      {
        "id" : "0c37e2c5-56b0-42f1-9097-e4646469b468",
        "parentId" : "90146ccd-decd-41f8-a9ca-d6569d151279",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "My feeling is that the condition should be easily distinguished from the body. See also PEP8, indentation. The other option is a (useless) comment ;)\n",
        "createdAt" : "2014-10-12T23:30:11Z",
        "updatedAt" : "2014-10-12T23:40:54Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1bc134c9-f74e-475f-93b1-a4adb217fdd5",
        "parentId" : "90146ccd-decd-41f8-a9ca-d6569d151279",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "Fair enough! It's totally readable as is so IMO it doesn't matter at all.\n\nOn Mon, Oct 13, 2014 at 12:30 AM, Charles Harris notifications@github.com\nwrote:\n\n> In numpy/lib/format.py:\n> \n> > -    \"\"\"\n> > -    import tokenize\n> > -    if sys.version_info[0] >= 3:\n> > -        # In Python3 stderr, stdout are text files.\n> > -        from io import StringIO\n> > -    else:\n> > -        from StringIO import StringIO\n> >   +\n> > -    tokens = []\n> > -    last_token_was_number = False\n> > -    for token in tokenize.generate_tokens(StringIO(asstr(s)).read):\n> > -        token_type = token[0]\n> > -        token_string = token[1]\n> > -        if (last_token_was_number and\n> > -                token_type == tokenize.NAME and\n> > -                token_string == \"L\"):\n> \n> My feeling is that the condition should be easily distinguished from the\n> body. See also PEP8, indentation. The other option is a (useless) comment ;)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/numpy/numpy/pull/5178/files#r18751104.\n\n## \n\nNathaniel J. Smith\nPostdoctoral researcher - Informatics - University of Edinburgh\nhttp://vorpus.org\n",
        "createdAt" : "2014-10-12T23:32:13Z",
        "updatedAt" : "2014-10-12T23:40:54Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b1f90a227b5fcf2a481c973e522693758c9f20f",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +442,446 @@        if (last_token_was_number and\n                token_type == tokenize.NAME and\n                token_string == \"L\"):\n            continue\n        else:"
  },
  {
    "id" : "7653740d-6e1f-4511-abd5-38c63ce8f796",
    "prId" : 5713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b2a7da6-ef1d-4066-8aed-5d3bcaf507c8",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Note that this is not really in place, as strings are immutable. The more standard way to express this would be\n\n```\nfmt = \"Header length %s too big for version=%s\"\nraise ValueError(fmt % (hlen, version))\n```\n\nConvention has the advantage that it takes little thought to comprehend.\n",
        "createdAt" : "2015-04-06T02:25:58Z",
        "updatedAt" : "2015-04-06T02:25:58Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "475a6403f9b10d2c4fa30fa0ad807b9ca1d2d0d6",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +324,328 @@    else:\n        msg = \"Header length %s too big for version=%s\"\n        msg %= (hlen, version)\n        raise ValueError(msg)\n"
  },
  {
    "id" : "16b81e27-d36e-45c2-b620-75ca77516c98",
    "prId" : 9025,
    "prUrl" : "https://github.com/numpy/numpy/pull/9025#pullrequestreview-57346231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffdef30b-c4b8-4b20-96b0-32c247093478",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Using `struct.Struct` might buy a little brevity further down, but now I'm nit-picking",
        "createdAt" : "2017-08-19T08:34:14Z",
        "updatedAt" : "2017-09-11T14:07:33Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "16e66353-e76a-4356-99ab-67a7846124fd",
        "parentId" : "ffdef30b-c4b8-4b20-96b0-32c247093478",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Dogfooding by using `dtype('<H')` might also be neat, and then `np.frombuffer(hlength_str, dtype=...)`",
        "createdAt" : "2017-08-19T09:25:48Z",
        "updatedAt" : "2017-09-13T07:43:47Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "76afdc457470c6b6c7c294999333908e170573be",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +476,480 @@    import struct\n    if version == (1, 0):\n        hlength_type = '<H'\n    elif version == (2, 0):\n        hlength_type = '<I'"
  },
  {
    "id" : "cec9c11f-730c-4c9a-934b-6601dd186c16",
    "prId" : 9025,
    "prUrl" : "https://github.com/numpy/numpy/pull/9025#pullrequestreview-57373555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dbecb2b-e951-49b8-a2b7-0339ce82acb4",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This is only true when a version is not specified explicitly",
        "createdAt" : "2017-08-20T14:22:25Z",
        "updatedAt" : "2017-09-11T14:07:33Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "76afdc457470c6b6c7c294999333908e170573be",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +312,316 @@    padlen_v2 = ARRAY_ALIGN - ((MAGIC_LEN + struct.calcsize('<I') + hlen) % ARRAY_ALIGN)\n\n    # Which version(s) we write depends on the total header size; v1 has a max of 65535\n    if hlen + padlen_v1 < 2**16 and version in (None, (1, 0)):\n        version = (1, 0)"
  },
  {
    "id" : "0924957c-a49f-471e-b2a4-ab925de20959",
    "prId" : 9025,
    "prUrl" : "https://github.com/numpy/numpy/pull/9025#pullrequestreview-60474589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87f015ac-faa1-4ad1-a31e-bb7919a13f49",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Alternative suggestion: should we allow the user to pass this into np.save?",
        "createdAt" : "2017-08-20T14:29:54Z",
        "updatedAt" : "2017-09-11T14:07:33Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "0dd81a9c-11b7-46da-a9c6-fb6844417835",
        "parentId" : "87f015ac-faa1-4ad1-a31e-bb7919a13f49",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Also curious as to why 4096 is the limit (although clearly arbitrarily large numbers are not desirable)",
        "createdAt" : "2017-09-04T23:29:24Z",
        "updatedAt" : "2017-09-11T14:07:33Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "58274311-e7eb-4d98-be7b-b6a3fdcf83e8",
        "parentId" : "87f015ac-faa1-4ad1-a31e-bb7919a13f49",
        "authorId" : "f7d8f3b2-0a48-4127-9cea-90777f4917b7",
        "body" : "Letting the user pass in the alignment is not a bad enhancement idea, but that's probably a 0.1% use case.  64 bytes is a good minimum alignment not only due to AVX-512 but also because it is one cache line on x86.  There's virtually no benefit to less than 64, and as of 2017 virtually no motivation for more either.  Letting the user specify a larger value might be handy a few years from now.\r\n\r\n4096 is the upper limit of \"plausible\" because it is one entire page on Linux, and mmap() can be offset at page boundaries on Linux, so on the platforms I know about, padding to more aligned than 4096 bytes would be useless (of course there must be some exceptional case lurking somewhere, but that's 0.001%).",
        "createdAt" : "2017-09-04T23:40:22Z",
        "updatedAt" : "2017-09-11T14:07:33Z",
        "lastEditedBy" : "f7d8f3b2-0a48-4127-9cea-90777f4917b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "76afdc457470c6b6c7c294999333908e170573be",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +164,168 @@MAGIC_PREFIX = b'\\x93NUMPY'\nMAGIC_LEN = len(MAGIC_PREFIX) + 2\nARRAY_ALIGN = 64 # plausible values are powers of 2 between 16 and 4096\nBUFFER_SIZE = 2**18  # size of buffer for reading npz files in bytes\n"
  }
]