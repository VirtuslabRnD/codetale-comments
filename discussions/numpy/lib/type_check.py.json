[
  {
    "id" : "7116f6ee-7940-42de-944d-dff2549b2b32",
    "prId" : 6004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8899cd9-c59f-4a15-a9e7-a088dbdbbe72",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is the `None` needed?\n",
        "createdAt" : "2015-06-22T16:46:55Z",
        "updatedAt" : "2015-06-22T16:46:55Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "3bd52f2d-ce8a-4110-bfb8-0211053cc4e8",
        "parentId" : "d8899cd9-c59f-4a15-a9e7-a088dbdbbe72",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Yes, since the number for complex and float has to be the same; e.g., important for\n\n```\nnp.common_type(<some complex256 array>, <some float32 array>)\n```\n\n(And also, if someone ever implements `complex32`, we're ready for it!).\n",
        "createdAt" : "2015-06-22T17:22:11Z",
        "updatedAt" : "2015-06-22T17:22:11Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "157e396673c4992e97a522dd9f350b480c4cb6c6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +534,538 @@#determine the \"minimum common type\" for a group of arrays.\narray_type = [[_nx.half, _nx.single, _nx.double, _nx.longdouble],\n              [None, _nx.csingle, _nx.cdouble, _nx.clongdouble]]\narray_precision = {_nx.half: 0,\n                   _nx.single: 1,"
  },
  {
    "id" : "e6857349-5ee5-4e43-9384-0a04f3936585",
    "prId" : 7936,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef94e956-3cb6-43b4-9b48-b5f9dc264ac9",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "If an exception does not get raised here, I'm pretty sure nothing gets returned from this function.\n\nThis is good example of why we insist on unit tests :)\n",
        "createdAt" : "2016-08-14T23:10:15Z",
        "updatedAt" : "2016-08-15T04:38:19Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b3727e6937891a9b91bac4ffb097bb3b5bd25d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +268,272 @@    \"\"\"\n    try:\n        dtype = x.dtype\n    except AttributeError:\n        dtype = asarray(x).dtype"
  },
  {
    "id" : "f116dcf0-21c3-4b3d-9401-5d73a2845faf",
    "prId" : 8602,
    "prUrl" : "https://github.com/numpy/numpy/pull/8602#pullrequestreview-21310897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca94c435-77d9-425d-9864-88352d36e8e8",
        "parentId" : null,
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "How about instead making this `type_ = x.dtype.type` and reusing `type_` below?",
        "createdAt" : "2017-02-10T18:26:53Z",
        "updatedAt" : "2017-02-10T22:15:13Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      },
      {
        "id" : "592ce15b-0085-4ac0-b32a-8d10477afa48",
        "parentId" : "ca94c435-77d9-425d-9864-88352d36e8e8",
        "authorId" : "60f9dccf-36d1-4227-b134-14eeecea953a",
        "body" : "Will do.",
        "createdAt" : "2017-02-10T18:28:56Z",
        "updatedAt" : "2017-02-10T22:15:13Z",
        "lastEditedBy" : "60f9dccf-36d1-4227-b134-14eeecea953a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb1c471a299c0118d890988f4bfb7df8eca6595d",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +268,272 @@    \"\"\"\n    try:\n        dtype = x.dtype\n        type_ = dtype.type\n    except AttributeError:"
  }
]