[
  {
    "id" : "312aeacb-217a-4a6d-91b5-d17f0c00e39e",
    "prId" : 3830,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df9896a1-8cfd-403d-9135-8e0b11e7466b",
        "parentId" : null,
        "authorId" : "95b0c1de-07f0-4542-85d6-e2f6fa86032a",
        "body" : "Add:\n    Notes\n    -----\n    By default, `dtype` is None, which means that the data-type of the output\n    array will be determined from the data.\n",
        "createdAt" : "2013-11-24T23:27:33Z",
        "updatedAt" : "2014-03-12T06:57:55Z",
        "lastEditedBy" : "95b0c1de-07f0-4542-85d6-e2f6fa86032a",
        "tags" : [
        ]
      },
      {
        "id" : "a56a5f6c-10bd-4772-884f-ba4cee28f74f",
        "parentId" : "df9896a1-8cfd-403d-9135-8e0b11e7466b",
        "authorId" : "83f4e38e-88e6-4696-b8d1-477d2db3e891",
        "body" : "Hi.\n\nI think we should consider the state of the io documentation as a whole. The four functions `ndfromtxt`,\n`mafromtxt`, `recfromtxt` and `recfromcsv`  exist online only as remarks in the user guide : http://docs.scipy.org/doc/numpy/user/basics.io.genfromtxt.html . They are not mentioned in http://docs.scipy.org/doc/numpy/reference/routines.io.html and therefore have no sphinx docs in the reference. Of-course they do appear in the python help() system.\n\nNot only `dtype` is given a default, but also `case_sensitive`, `names` and `delimiter`,\nso they should be addressed together. Any ideas on how to do that?\n\nThanks,\nYaron\n",
        "createdAt" : "2013-11-25T13:57:03Z",
        "updatedAt" : "2014-03-12T06:57:55Z",
        "lastEditedBy" : "83f4e38e-88e6-4696-b8d1-477d2db3e891",
        "tags" : [
        ]
      },
      {
        "id" : "0b625da1-fd11-45b6-81b3-64efb35c7bfa",
        "parentId" : "df9896a1-8cfd-403d-9135-8e0b11e7466b",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Sounds like it would be a good idea to add them. The appropriate spot looks to be `doc/source/reference/routines.io.rst`. You can open a new PR for that.\n",
        "createdAt" : "2014-02-27T19:47:38Z",
        "updatedAt" : "2014-03-12T06:57:55Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "2003f3ed-6f1f-4fba-85e4-4b71267c9141",
        "parentId" : "df9896a1-8cfd-403d-9135-8e0b11e7466b",
        "authorId" : "83f4e38e-88e6-4696-b8d1-477d2db3e891",
        "body" : "Yeah, I'll open another PR for that.\n",
        "createdAt" : "2014-02-28T07:45:03Z",
        "updatedAt" : "2014-03-12T06:57:55Z",
        "lastEditedBy" : "83f4e38e-88e6-4696-b8d1-477d2db3e891",
        "tags" : [
        ]
      }
    ],
    "commit" : "aff43c0cb10796de7d6dfcc23bc27607ad2aacba",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1871,1875 @@    --------\n    numpy.genfromtxt : generic function to load ASCII data.\n\n    Notes\n    -----"
  },
  {
    "id" : "b925a304-8434-43aa-8fac-8fc964da4028",
    "prId" : 4141,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db33ef2e-f131-4b78-8911-ad4bee61e9d5",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "IIRC, getting the flags working was a pain and not intuitive. Hopefully this won't cause any problems.\n",
        "createdAt" : "2013-12-24T22:45:20Z",
        "updatedAt" : "2013-12-24T22:45:20Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e836c2c5cc0911269ac692a25fc4ec42273354b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1334,1338 @@        if isinstance(fname, basestring):\n            if sys.version_info[0] == 2:\n                fhd = iter(np.lib._datasource.open(fname, 'rbU'))\n            else:\n                fhd = iter(np.lib._datasource.open(fname, 'rb'))"
  },
  {
    "id" : "69219d37-3ebc-4054-9247-09e6d381f359",
    "prId" : 4574,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af7db462-e047-4345-a156-acb0a987c19c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Could be more than one character, for instance on windows. Perhaps \"line temination string\" would be better with a mention of the default '\\n'.\n",
        "createdAt" : "2014-04-01T16:00:00Z",
        "updatedAt" : "2014-04-01T16:00:00Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "6c6bef0a-3389-4966-ac24-916253656464",
        "parentId" : "af7db462-e047-4345-a156-acb0a987c19c",
        "authorId" : "7579e378-cc88-408a-a943-fb30f63be03e",
        "body" : "You have a valid point, in my opinion.\n\nThat said, I do believe this is off-topic in this context though. What this\npull request is about is moving an existing text line in the docstring to\nthe place where it would be relevant.\n\nNo new content is introduced.\n\nGV\n\nOn Tue, Apr 1, 2014 at 6:00 PM, Charles Harris notifications@github.comwrote:\n\n> In numpy/lib/npyio.py:\n> \n> > @@ -913,6 +913,8 @@ def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\\n', header='',\n> >      delimiter : str, optional\n> >          Character separating columns.\n> >      newline : str, optional\n> > -        Character separating lines.\n> \n> Could be more than one character, for instance on windows. Perhaps \"line\n> temination string\" would be better with a mention of the default '\\n'.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/numpy/numpy/pull/4574/files#r11166924\n> .\n",
        "createdAt" : "2014-04-01T16:03:12Z",
        "updatedAt" : "2014-04-01T16:03:12Z",
        "lastEditedBy" : "7579e378-cc88-408a-a943-fb30f63be03e",
        "tags" : [
        ]
      },
      {
        "id" : "073bc65d-df34-408b-9c5e-907a919dc1f0",
        "parentId" : "af7db462-e047-4345-a156-acb0a987c19c",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Well, but \"Character\" is wrong ;)\n",
        "createdAt" : "2014-04-01T17:27:27Z",
        "updatedAt" : "2014-04-01T17:27:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39de3c865538ac4d32e6fffddb76f6892e7289c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +914,918 @@        Character separating columns.\n    newline : str, optional\n        Character separating lines.\n\n        .. versionadded:: 1.5.0"
  },
  {
    "id" : "53ef3357-2a2f-4261-baba-03ddb982401c",
    "prId" : 6656,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d33048a-0e8a-4b94-8588-204ecc492ec1",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Actually, I think there is no reason to create usecols_as_list at all. Also the comment is rather unnecessary \"existing code\" is not existing code anymore as soon as we put this in ;).\n",
        "createdAt" : "2016-01-04T12:09:40Z",
        "updatedAt" : "2016-02-01T11:13:12Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "38d968d7-02c1-4bc5-aa98-d0448a12520b",
        "parentId" : "3d33048a-0e8a-4b94-8588-204ecc492ec1",
        "authorId" : "9f6d9174-f098-4e1f-b739-e4ee25717b5d",
        "body" : "By existing code I meant all the lines below this one where usecols is used.\nYou're right I can use usecols and avoid the creation of usecols_as_list. I wished to make this easier to read, I hate code like foo=some_fancy_type(foo) buried deep in some code and then waste time trying to understand why foo is not any more what it was at the beginning.\n",
        "createdAt" : "2016-01-04T13:32:29Z",
        "updatedAt" : "2016-02-01T11:13:12Z",
        "lastEditedBy" : "9f6d9174-f098-4e1f-b739-e4ee25717b5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "849b81804fb7a11dc80821dbd166562225c8450f",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +813,817 @@                raise\n        # Fall back to existing code\n        usecols = usecols_as_list\n\n    fown = False"
  },
  {
    "id" : "3600b1fd-2640-4fce-b93e-f3f16e21d732",
    "prId" : 6660,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "928647ba-a7ca-4dfe-b353-09a0af0b1a49",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Should be OK, looks like zipfile_factory is effectively private.\n",
        "createdAt" : "2016-04-06T23:21:56Z",
        "updatedAt" : "2016-04-07T02:17:43Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5449f596-61aa-4925-bdd4-f3ab236e6d88",
        "parentId" : "928647ba-a7ca-4dfe-b353-09a0af0b1a49",
        "authorId" : "e4508f48-9350-4589-ad55-7fd6710b9677",
        "body" : "This is not changing the effective signature - `*args` was being passed to `zipfile.ZipFile` before, and `zipfile.ZipFile` takes `file` as its first argument, so anything that worked before should continue to work.\n",
        "createdAt" : "2016-04-06T23:26:45Z",
        "updatedAt" : "2016-04-07T02:17:43Z",
        "lastEditedBy" : "e4508f48-9350-4589-ad55-7fd6710b9677",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ac270b06e411dd0e13108ed5dafad31d5ab589d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +87,91 @@\n\ndef zipfile_factory(file, *args, **kwargs):\n    \"\"\"\n    Create a ZipFile."
  }
]