[
  {
    "id" : "53cc2e2a-a713-4bd6-9bf5-264c50466063",
    "prId" : 4773,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98a23d79-1239-4663-b851-d2aa1cbe6b13",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Doesn't this close get called twice on windows?\n",
        "createdAt" : "2014-06-03T22:01:06Z",
        "updatedAt" : "2014-06-03T22:01:06Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "239e113b-5a2a-4b14-8fdd-6e17e4586c28",
        "parentId" : "98a23d79-1239-4663-b851-d2aa1cbe6b13",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "yes, but it doesn't seem to harm\n",
        "createdAt" : "2014-06-03T22:47:33Z",
        "updatedAt" : "2014-06-03T22:47:33Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "21ea30b00cf79ae3107a54b1592efe1571d5a7d7",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +111,115 @@        finally:\n            if not isinstance(target_file, BytesIO):\n                target_file.close()\n                # holds an open file descriptor so it can't be deleted on win\n                if not isinstance(arr_reloaded, np.lib.npyio.NpzFile):"
  },
  {
    "id" : "3c2ec45d-2a99-42aa-8eb7-04922d18a9f5",
    "prId" : 6656,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a2e197e-20d2-4956-9165-6e53725e734e",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "If you want to test with something really crazy, could test with:\n\n```\nclass CrazyInt(object):\n     def __index__(self):\n         return 0\n```\n\nbut I am OK with leaving it out.\n",
        "createdAt" : "2016-01-04T10:25:23Z",
        "updatedAt" : "2016-02-01T11:13:12Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "7569697f-2d7e-4f3e-8a74-efe5ee16a1d4",
        "parentId" : "3a2e197e-20d2-4956-9165-6e53725e734e",
        "authorId" : "9f6d9174-f098-4e1f-b739-e4ee25717b5d",
        "body" : "You're right it's better to add a test with a custom integer type. If I had done that from the beginning I would have seen the problem with my previous way to check integers.\n",
        "createdAt" : "2016-01-04T10:41:01Z",
        "updatedAt" : "2016-02-01T11:13:12Z",
        "lastEditedBy" : "9f6d9174-f098-4e1f-b739-e4ee25717b5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "849b81804fb7a11dc80821dbd166562225c8450f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +609,613 @@        assert_array_equal(x, a[:, 1:])\n\n        # Testing with an integer instead of a sequence\n        for int_type in [int, np.int8, np.int16,\n                         np.int32, np.int64, np.uint8, np.uint16,"
  },
  {
    "id" : "d8c172bf-7d84-4af3-8341-f1104d840765",
    "prId" : 7639,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "206e07cf-97e8-4d21-8d62-d1bf44ffe867",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK, 2.7. I find it odd that unofficial pathlib would require unicode here... \n",
        "createdAt" : "2016-05-15T20:03:29Z",
        "updatedAt" : "2016-05-16T07:40:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "d751f0ad-09d4-4934-8aa1-8672c91af174",
        "parentId" : "206e07cf-97e8-4d21-8d62-d1bf44ffe867",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Double checked, my `pathlib` is up to date (1.0.1). \n",
        "createdAt" : "2016-05-16T07:44:08Z",
        "updatedAt" : "2016-05-16T07:44:08Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "dc344a1a-160d-4aef-9ac4-d4d4a35ce677",
        "parentId" : "206e07cf-97e8-4d21-8d62-d1bf44ffe867",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "> Attention: this backport module isnâ€™t maintained anymore. If you want to report issues or contribute patches, please consider the pathlib2 project instead.\n\nSays python >= 3.2 recommended. I think you should try with https://pypi.python.org/pypi/pathlib2/\n",
        "createdAt" : "2016-05-18T03:30:01Z",
        "updatedAt" : "2016-05-18T03:30:01Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "951566e5-7c55-4172-a4ac-d2fc60cfc4a5",
        "parentId" : "206e07cf-97e8-4d21-8d62-d1bf44ffe867",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "MIght need to make the imports version dependent in `py3k.py`. OTOH, it does look like pathlib requires unicode to operate correctly. I would hope that the python 2.7 version could handle ordinary strings by encoding them. \n",
        "createdAt" : "2016-05-18T03:44:41Z",
        "updatedAt" : "2016-05-18T03:44:41Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "f1f46522-fe2a-4bfd-8f3b-6c964b615d10",
        "parentId" : "206e07cf-97e8-4d21-8d62-d1bf44ffe867",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "And pathlib2 also requires unicode, so that is settled, at least for now.\n",
        "createdAt" : "2016-05-18T03:59:34Z",
        "updatedAt" : "2016-05-18T03:59:34Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "18b21329dbb32a7f34377a8c590eb1745132c635",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1886,1890 @@            path = Path(path)\n            with path.open('w') as f:\n                f.write(u'1 2\\n3 4')\n\n            control = np.array([[1, 2], [3, 4]], dtype=int)"
  },
  {
    "id" : "8c3ef163-3cc7-4a40-9e30-1f3aca9d0330",
    "prId" : 7639,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99b0d99f-69a2-46ca-beda-8f7f2d0f0604",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "See above. \"Official\" Python pathlib is new in 3.4 and as I understand it, remains somewhat controversial. I wonder if this requirement might be considered a bug. \n",
        "createdAt" : "2016-05-15T20:05:08Z",
        "updatedAt" : "2016-05-16T07:40:16Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4666f96b-936b-4e8c-8a46-e4c54bb8c233",
        "parentId" : "99b0d99f-69a2-46ca-beda-8f7f2d0f0604",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Don't think it's a bug in stdlib, the 3.4 version works as expected.\n",
        "createdAt" : "2016-05-16T07:44:46Z",
        "updatedAt" : "2016-05-16T07:44:46Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "18b21329dbb32a7f34377a8c590eb1745132c635",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +1898,1902 @@            path = Path(path)\n            with path.open('w') as f:\n                f.write(u'1,2,3.0\\n4,5,6.0\\n')\n\n            test = np.mafromtxt(path, delimiter=',')"
  },
  {
    "id" : "ab387387-6aac-4837-9261-41a1ab05e266",
    "prId" : 11348,
    "prUrl" : "https://github.com/numpy/numpy/pull/11348#pullrequestreview-164463252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f203f69-ace2-4157-8841-0df52f2a95c2",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "What's the rationale for this line? A comment might be nice",
        "createdAt" : "2018-10-13T13:17:32Z",
        "updatedAt" : "2018-11-01T14:29:30Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f36665a5-6465-4c1a-a601-38bf8a1b1dd8",
        "parentId" : "3f203f69-ace2-4157-8841-0df52f2a95c2",
        "authorId" : "301c896b-0bff-4c3b-a125-575af4b080d7",
        "body" : "This is required such that numpy closes the mem-mapped file. Otherwise you will get weird errors on Windows.",
        "createdAt" : "2018-10-13T13:29:14Z",
        "updatedAt" : "2018-11-01T14:29:30Z",
        "lastEditedBy" : "301c896b-0bff-4c3b-a125-575af4b080d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ddb688f9d4f501fbd15154338021568e27c0df",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +2313,2317 @@            assert_array_equal(data, a)\n            # close the mem-mapped file\n            del data\n\n    def test_save_load_memmap_readwrite(self):"
  },
  {
    "id" : "3768f596-b0cf-4d11-bb72-9e9ae81cf3e2",
    "prId" : 11962,
    "prUrl" : "https://github.com/numpy/numpy/pull/11962#pullrequestreview-156129313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9186932e-ae54-43a0-a094-177f07a656ca",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This would be better as a bunch of separate tests, each starting at the `c = TextIO()` line",
        "createdAt" : "2018-09-17T15:38:53Z",
        "updatedAt" : "2018-09-30T15:47:50Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "bcf00654-fd4d-4737-aaab-e7a8f4beadda",
        "parentId" : "9186932e-ae54-43a0-a094-177f07a656ca",
        "authorId" : "b5bdf83b-d342-48d8-8e0a-f43393020903",
        "body" : "Done. I split them into few test cases with some (hopefully) descriptive names",
        "createdAt" : "2018-09-17T21:35:58Z",
        "updatedAt" : "2018-09-30T15:47:50Z",
        "lastEditedBy" : "b5bdf83b-d342-48d8-8e0a-f43393020903",
        "tags" : [
        ]
      }
    ],
    "commit" : "4577a69516bcc0406aaaa48304c8a2cbd82c58c9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1079,1083 @@\n    def test_max_rows_with_skiprows(self):\n        c = TextIO()\n        c.write('comments\\n1,2,3,5\\n4,5,7,8\\n2,1,4,5')\n        c.seek(0)"
  }
]