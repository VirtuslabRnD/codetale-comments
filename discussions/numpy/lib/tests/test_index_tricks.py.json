[
  {
    "id" : "bfd34383-06c1-4393-aa66-fad8b20c2345",
    "prId" : 5805,
    "prUrl" : "https://github.com/numpy/numpy/pull/5805#pullrequestreview-22659144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb6bfdb0-1119-4324-8498-a1d36bc34d93",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Wait, why is it desirable that `np.arange(0, dtype=float)` is converted to `dtype=intp`? If the user is explicit about what they asked for, it seems wrong to override them",
        "createdAt" : "2017-02-19T12:53:30Z",
        "updatedAt" : "2017-02-19T12:53:34Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "c01165f43068fea96722c172eb23efed4ca99763",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +174,178 @@        # Test empty inputs create ouputs of indexing type, gh-5804\n        # Test both lists and arrays\n        for func in (range, np.arange):\n            a, = np.ix_(func(0))\n            assert_equal(a.dtype, np.intp)"
  },
  {
    "id" : "46af47e7-2f9e-4c86-8124-2fee2d58d446",
    "prId" : 10797,
    "prUrl" : "https://github.com/numpy/numpy/pull/10797#pullrequestreview-126076472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2134a0f-7c34-4aa9-9453-09fadf2459c9",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "We should still use the test-framework agnostic suppress_warnings, assert_raises instead of pytest-specific tests",
        "createdAt" : "2018-05-22T17:09:39Z",
        "updatedAt" : "2018-10-16T17:07:24Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "87f0e964-25a7-49fc-b60c-b767e31d37ac",
        "parentId" : "a2134a0f-7c34-4aa9-9453-09fadf2459c9",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Is there a specific reason for that? Still trying to retain compatibility with other frameworks at this point or just want to maintain thematic consistency across the testsuite for now?",
        "createdAt" : "2018-05-22T19:48:55Z",
        "updatedAt" : "2018-10-16T17:07:24Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "7616d0fc-7651-4e3f-83f1-d0b97baa9b01",
        "parentId" : "a2134a0f-7c34-4aa9-9453-09fadf2459c9",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "@charris - should we be preferring `assert_raises` or are we ready to commit to pytest?",
        "createdAt" : "2018-06-05T17:36:06Z",
        "updatedAt" : "2018-10-16T17:07:24Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "11b9f6c4c477c0778080820ef36cfd61ef70abb6",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +44,48 @@        with assert_raises(TypeError):\n            np.unravel_index(254, ims=(17, 94))\n\n        assert_equal(np.ravel_multi_index((1, 0), (2, 2)), 2)\n        assert_equal(np.unravel_index(254, (17, 94)), (2, 66))"
  }
]