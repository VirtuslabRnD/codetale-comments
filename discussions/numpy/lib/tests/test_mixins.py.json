[
  {
    "id" : "30978a01-45b5-4c15-b300-2de3c800881a",
    "prId" : 9063,
    "prUrl" : "https://github.com/numpy/numpy/pull/9063#pullrequestreview-36650265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc96ff92-2eb8-4c48-b23f-d1458b7d574e",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "You can use `wrap_array_like` here, right?",
        "createdAt" : "2017-05-06T12:38:54Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "a16794fc-90c2-4a47-aed3-d4dd7ad99a1c",
        "parentId" : "bc96ff92-2eb8-4c48-b23f-d1458b7d574e",
        "authorId" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "body" : "Yes, but I think it's actually clearer to call `ArrayLike()` separately in cases where we know the arity of the arguments",
        "createdAt" : "2017-05-06T18:59:20Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "576cec6e-8071-43f8-bce9-351a2589f050",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fbf75e499196c05da46302f035909897c9ec272",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +208,212 @@    def test_ufunc_two_outputs(self):\n        mantissa, exponent = np.frexp(2 ** -3)\n        expected = (ArrayLike(mantissa), ArrayLike(exponent))\n        _assert_equal_type_and_value(\n            np.frexp(ArrayLike(2 ** -3)), expected)"
  },
  {
    "id" : "c77fa61e-87cb-4862-97e6-e91510879ddb",
    "prId" : 9063,
    "prUrl" : "https://github.com/numpy/numpy/pull/9063#pullrequestreview-36652731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18706bea-dfd7-47c4-b198-667c834d0bed",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "It puzzles me that `operator.pow` is a thing, but `operator.divmod` is not",
        "createdAt" : "2017-05-06T19:50:08Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "ebb5d596-bc36-4918-8142-f1006eeb3776",
        "parentId" : "18706bea-dfd7-47c4-b198-667c834d0bed",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "All these are operators in the sense that they have a corresponding symbol. (Hopefully, we'll have a `operator.matmul` in here shortly...)",
        "createdAt" : "2017-05-06T21:14:55Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "6909d581-2f64-4de6-a621-9e9e3d66d780",
        "parentId" : "18706bea-dfd7-47c4-b198-667c834d0bed",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Good catch. In particular, `operator.pow` has two arguments, but `pow` has three",
        "createdAt" : "2017-05-06T21:37:20Z",
        "updatedAt" : "2017-05-08T00:04:02Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fbf75e499196c05da46302f035909897c9ec272",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +91,95 @@    operator.mod,\n    divmod,\n    pow,\n    operator.lshift,\n    operator.rshift,"
  }
]