[
  {
    "id" : "df645e14-e006-4e14-968e-e299b77a5af7",
    "prId" : 4377,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "What about the custom dtypes mentioned in the comment?\n",
        "createdAt" : "2014-02-27T01:07:57Z",
        "updatedAt" : "2014-02-27T01:07:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "84e06f68-b5a7-4acd-be5b-53cf60703b81",
        "parentId" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "authorId" : "b0e7e584-a9be-4737-9003-4922807a34eb",
        "body" : "setting array.dtype = x.dtype is only needed for custom dtypes, but throws an exception for object dtypes. I added a check to only set array.dtype for custom dtypes. I think every other dtype should be okay. Now that I think about it though, maybe the real issue is that np.asarray returns an array with a raw byte dtype, requiring the setting of array.dtype in the first place?\n",
        "createdAt" : "2014-02-27T01:49:50Z",
        "updatedAt" : "2014-02-27T01:49:50Z",
        "lastEditedBy" : "b0e7e584-a9be-4737-9003-4922807a34eb",
        "tags" : [
        ]
      },
      {
        "id" : "bf0cdaa4-331f-4949-94b2-6b8c0ebe66bc",
        "parentId" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Ah, that may be. np.asarray is just array with `copy=0`, so the problem would be in array. Hmm, this is a tricky problem, how _can_ array detect custom dtypes? It needs to be able to look them up somewhere, or at least get hold of the descriptor if they come with one.\n",
        "createdAt" : "2014-02-27T02:03:10Z",
        "updatedAt" : "2014-02-27T02:03:10Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "a57924a7-1dc8-4cce-b256-ea7ecc634357",
        "parentId" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "We do have the rational dtype to fool with, an np.asarray seems to work\n\n```\nIn [6]: import numpy.core.test_rational as rat\n\nIn [7]: r = rat.rational(1,2)\n\nIn [8]: asarray(r)\nOut[8]: array(rational(1,2), dtype=rational)\n```\n",
        "createdAt" : "2014-02-27T02:08:56Z",
        "updatedAt" : "2014-02-27T02:08:56Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "fba2a28c-d14c-465e-ade0-1c5cd5d7be6b",
        "parentId" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "```\nif array.dtype.type is np.void:\n```\n\nmay be preferable to\n\n```\nif array.dtype.kind == 'V':\n```\n\nThe assigning of a dtype is just ugly. Maybe a view can be used instead.\n",
        "createdAt" : "2014-02-27T02:40:52Z",
        "updatedAt" : "2014-02-27T02:41:08Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "dbac5026-60e4-40c4-b63a-98928fcfaefa",
        "parentId" : "882aff34-ae6f-4f2a-b160-53c0c05c4697",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Hmmmm, checking `is void` does not seems to work:\n\n```\nIn [36]: a\nOut[36]: array(rational(1,2), dtype=rational)\n\nIn [37]: a.dtype.type is np.void\nOut[37]: False\n\nIn [38]: a.dtype.kind == 'V'\nOut[38]: True\n```\n\nThis is indeed identical to another PR, which tried the opposite. Instead of assigning the dtype where necessary, it didn't do it for object arrays where it is known it is not necessary ;).\n",
        "createdAt" : "2014-02-28T19:21:14Z",
        "updatedAt" : "2014-02-28T19:21:14Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a98b6b4ef12d09c51e5c9f015992c5b2ae164607",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@    array = np.asarray(DummyArray(interface, base=x))\n    # Make sure dtype is correct in case of custom dtype\n    if array.dtype.kind == 'V':\n        array.dtype = x.dtype\n    return array"
  }
]