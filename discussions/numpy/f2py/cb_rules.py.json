[
  {
    "id" : "e064fae0-07eb-4340-9e5e-97fa8a36c9c7",
    "prId" : 10031,
    "prUrl" : "https://github.com/numpy/numpy/pull/10031#pullrequestreview-77603397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29f5a946-a571-48ab-9f17-8a1c5204494a",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Is there any way that `VOID` or `UNICODE` can end up here? They might need a similar fix, if so.",
        "createdAt" : "2017-11-18T01:42:44Z",
        "updatedAt" : "2017-11-18T01:42:45Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f1ab1020-98ca-4d30-aefb-054001e7a165",
        "parentId" : "29f5a946-a571-48ab-9f17-8a1c5204494a",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I don't think so. My thought was that we will need to wait and see, the original was always defaulting. Fortran added a UCS-4 type in 2003 (name `ISO_10646`), but I do not see that in the current f2py. If/when we add that functionality we will need to revisit this. ",
        "createdAt" : "2017-11-18T01:54:33Z",
        "updatedAt" : "2017-11-18T01:58:06Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "8191ae51-97eb-49f5-ad50-371a69ed1493",
        "parentId" : "29f5a946-a571-48ab-9f17-8a1c5204494a",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Support for UCS-4 seems rather sporadic, it wasn't required until 2008. I expect utf-8 will eventually show up, but Fortran seems wedded to fixed width strings (like the NumPy `S` and `U` types) so I don't expect that to happen anytime soon.",
        "createdAt" : "2017-11-18T02:06:47Z",
        "updatedAt" : "2017-11-18T02:06:47Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "012ad9fac3015f52951c5a27c03b8e8bc49713a4",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +374,378 @@                       l_not(isintent_c): \"\"\"\\\n\\tif (#name#_nofargs>capi_i) {\n\\t\\tint itemsize_ = #atype# == NPY_STRING ? 1 : 0;\n\\t\\t/*XXX: Hmm, what will destroy this array??? */\n\\t\\tPyArrayObject *tmp_arr = (PyArrayObject *)PyArray_New(&PyArray_Type,#rank#,#varname_i#_Dims,#atype#,NULL,(char*)#varname_i#,itemsize_,NPY_ARRAY_FARRAY,NULL);"
  },
  {
    "id" : "520ab06e-9633-40ac-9c8a-b357f02f1553",
    "prId" : 10657,
    "prUrl" : "https://github.com/numpy/numpy/pull/10657#pullrequestreview-99125312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cf79cd1-d640-432f-a710-d62908577a98",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Is this needed?",
        "createdAt" : "2018-02-24T22:15:12Z",
        "updatedAt" : "2018-02-24T22:15:12Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "8fc70a39-8e17-4f2b-8800-948ba4a0a9fd",
        "parentId" : "5cf79cd1-d640-432f-a710-d62908577a98",
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "Yes, in case there's a jump to capi_fail below.",
        "createdAt" : "2018-02-24T22:18:01Z",
        "updatedAt" : "2018-02-24T22:18:01Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      },
      {
        "id" : "4e293e1d-d1ff-4084-9a29-47c4350d8e23",
        "parentId" : "5cf79cd1-d640-432f-a710-d62908577a98",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "A tangled web we weave :)",
        "createdAt" : "2018-02-24T22:36:58Z",
        "updatedAt" : "2018-02-24T22:36:59Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3957976a7676c49fc1377539c11cddb2c50f3a0b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +108,112 @@\\tcapi_return = PyObject_CallObject(#name#_capi,(PyObject *)capi_arglist_list);\n\\tPy_DECREF(capi_arglist_list);\n\\tcapi_arglist_list = NULL;\n#else\n\\tcapi_return = PyObject_CallObject(#name#_capi,(PyObject *)capi_arglist);"
  },
  {
    "id" : "eeca8c25-9965-4f86-91b5-3ac93067802e",
    "prId" : 16519,
    "prUrl" : "https://github.com/numpy/numpy/pull/16519#pullrequestreview-425837912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06312418-f4f0-4bb4-b758-f0a6b32c7a3c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Blank lines around function definition.",
        "createdAt" : "2020-06-07T17:20:59Z",
        "updatedAt" : "2020-06-07T18:27:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7b3177ea12ef950daa162380695f54496a7c483",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +51,55 @@    _active_#name# = ptr;\n    return prev;\n}\n\nstatic #name#_t *get_active_#name#(void) {"
  }
]