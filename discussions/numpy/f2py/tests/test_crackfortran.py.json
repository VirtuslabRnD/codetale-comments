[
  {
    "id" : "e20b2cf3-5135-4e14-b957-6ce31141f2c0",
    "prId" : 15035,
    "prUrl" : "https://github.com/numpy/numpy/pull/15035#pullrequestreview-326018924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eec75fe-e9fd-463a-9e0a-59b3f2036b31",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "nit: Docstring might be handy here to explain what `NoSpace` means",
        "createdAt" : "2019-12-03T09:44:31Z",
        "updatedAt" : "2019-12-03T10:27:14Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "a426dbf8-d619-420f-b6df-cafc945918a6",
        "parentId" : "8eec75fe-e9fd-463a-9e0a-59b3f2036b31",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "adding",
        "createdAt" : "2019-12-03T10:04:51Z",
        "updatedAt" : "2019-12-03T10:27:14Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6ab00eb61d3db15522f373462d8984e792edeb8",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@\n\nclass TestNoSpace(util.F2PyTest):\n    # issue gh-15035: add handling for endsubroutine, endfunction with no space\n    # between \"end\" and the block name"
  },
  {
    "id" : "03178f49-e10d-41f3-b120-041f94611d3b",
    "prId" : 15781,
    "prUrl" : "https://github.com/numpy/numpy/pull/15781#pullrequestreview-379283919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6421ddc4-652c-458a-815b-54b76a20ab20",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```suggestion\r\nimport tempfile\r\nimport textwrap\r\n```",
        "createdAt" : "2020-03-23T09:51:15Z",
        "updatedAt" : "2020-03-26T14:15:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "5e759e70-29cd-4430-89a0-05b743ba13a6",
        "parentId" : "6421ddc4-652c-458a-815b-54b76a20ab20",
        "authorId" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "body" : "Ok, done.",
        "createdAt" : "2020-03-23T10:06:02Z",
        "updatedAt" : "2020-03-26T14:15:06Z",
        "lastEditedBy" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "tags" : [
        ]
      }
    ],
    "commit" : "0198fcfd4143edf8ec23f2e028044e17c3c93368",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@from . import util\nfrom numpy.f2py import crackfortran\nimport tempfile\nimport textwrap\n"
  },
  {
    "id" : "49457da1-94fb-4801-aad9-44c1e086375b",
    "prId" : 15781,
    "prUrl" : "https://github.com/numpy/numpy/pull/15781#pullrequestreview-382050686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d20d1804-32a7-4e67-8036-11fee13a771c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "If this were:\r\n```suggestion\r\n            module foo\r\n              private\r\n              integer :: a\r\n              public :: setA\r\n              integer :: b\r\n```\r\nshould `b` be public or private? Is this worth adding a test for?",
        "createdAt" : "2020-03-25T16:52:26Z",
        "updatedAt" : "2020-03-26T14:15:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "1d8c3c89-802d-4131-977b-63127f1aa95a",
        "parentId" : "d20d1804-32a7-4e67-8036-11fee13a771c",
        "authorId" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "body" : "In that case, b would be private, because there is no access specifier given on the definition line of b (it's just specified it is an integer), so it will have the default access of the module, which is private here.\r\n\r\nIn Fortran, the access specifiers apply on all elements of the module (if not overridden per element), not only the ones after. So if it works for a, it will work for b.\r\n\r\nThat being said, it's easy to add a test if you believe it's necessary.",
        "createdAt" : "2020-03-26T07:52:49Z",
        "updatedAt" : "2020-03-26T14:15:06Z",
        "lastEditedBy" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "tags" : [
        ]
      },
      {
        "id" : "89d6a6cc-d4a7-4ab0-8444-106643cb44ab",
        "parentId" : "d20d1804-32a7-4e67-8036-11fee13a771c",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "yes, please",
        "createdAt" : "2020-03-26T13:41:35Z",
        "updatedAt" : "2020-03-26T14:15:06Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "c64d5ae8-57cf-42f0-8a2a-37674350ba92",
        "parentId" : "d20d1804-32a7-4e67-8036-11fee13a771c",
        "authorId" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "body" : "That's it, suggestion added in the test.",
        "createdAt" : "2020-03-26T14:15:22Z",
        "updatedAt" : "2020-03-26T14:15:22Z",
        "lastEditedBy" : "37c019e5-8909-4c96-ae39-2a3d52b538de",
        "tags" : [
        ]
      }
    ],
    "commit" : "0198fcfd4143edf8ec23f2e028044e17c3c93368",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +46,50 @@              private\n              integer :: a\n              public :: setA\n              integer :: b\n            contains"
  }
]