[
  {
    "id" : "66913a28-fbaf-4342-b3bc-89aa36084354",
    "prId" : 4158,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de4f3313-df16-4029-98d8-da7908020ca3",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Does this also work if the identifiers are in a tuple? That would be preferable to the line continuations if so.\n",
        "createdAt" : "2014-01-03T00:18:59Z",
        "updatedAt" : "2014-01-03T00:18:59Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bf9ff4fd-32a4-4d12-a55f-c67d504ad43f",
        "parentId" : "de4f3313-df16-4029-98d8-da7908020ca3",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK, that doesn't work :-(\n",
        "createdAt" : "2014-01-03T00:23:24Z",
        "updatedAt" : "2014-01-03T00:23:24Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bbe29b1b-8910-4003-94cf-fc5e7effd81d",
        "parentId" : "de4f3313-df16-4029-98d8-da7908020ca3",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Multiple global statements is another option here.\n",
        "createdAt" : "2014-01-03T00:26:27Z",
        "updatedAt" : "2014-01-03T00:26:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dbeb2ef07c0afadbe368a7e73baa428b3760816",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +187,191 @@\ndef reset_global_f2py_vars():\n    global groupcounter, grouplist, neededmodule, expectbegin, \\\n        skipblocksuntil, usermodules, f90modulevars, gotnextfile, \\\n        filepositiontext, currentfilename, skipfunctions, skipfuncs, \\"
  },
  {
    "id" : "92b3b7d9-8a73-47cf-880f-2a0db4f10179",
    "prId" : 11725,
    "prUrl" : "https://github.com/numpy/numpy/pull/11725#pullrequestreview-146104608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08625063-baa6-4165-b753-4b89ba4e2bb4",
        "parentId" : null,
        "authorId" : "5cca4c05-5ba8-4d36-b097-080312a417bd",
        "body" : "Also, not sure if this should be a strict check for the new ones instead of `startswith`.",
        "createdAt" : "2018-08-13T19:20:42Z",
        "updatedAt" : "2018-08-13T19:20:42Z",
        "lastEditedBy" : "5cca4c05-5ba8-4d36-b097-080312a417bd",
        "tags" : [
        ]
      },
      {
        "id" : "38bcf6b2-b731-4fd1-b530-0ca96c225124",
        "parentId" : "08625063-baa6-4165-b753-4b89ba4e2bb4",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Probably more compiler dependent, I'd guess. Let's put this in and fix it up if problems ensue.",
        "createdAt" : "2018-08-14T14:55:36Z",
        "updatedAt" : "2018-08-14T14:55:37Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0c126dfc7b19f7681380b413e4793e94a85b065",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2404,2408 @@        return 8\n    machine = platform.machine().lower()\n    if machine.startswith(('aarch64', 'power', 'ppc64', 's390x')):\n        if p <= 20:\n            return 16"
  }
]