[
  {
    "id" : "b42f35da-5abc-4c6c-855d-37bbd0978676",
    "prId" : 3865,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1911e342-16c4-4201-bfda-3d17554b03f5",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think this can now be done with decorators. But that is for another day. \n",
        "createdAt" : "2013-10-04T20:26:50Z",
        "updatedAt" : "2013-10-04T20:26:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc99961bfba5bfd118d353c4aa2290b5d593f0fa",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +992,996 @@            return self.transpose()\n\n    T = property(getT, None)\n    A = property(getA, None)\n    A1 = property(getA1, None)"
  },
  {
    "id" : "6217cf3d-7121-4067-b4f8-5d4806a37ca9",
    "prId" : 4943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27ac3962-f6a7-49d8-abf1-caa1bd358b1f",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So same as transpose?\n",
        "createdAt" : "2014-08-04T17:02:35Z",
        "updatedAt" : "2014-08-04T17:02:35Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "e3b9eef0-fb4a-4e8b-b52b-216c0e50301e",
        "parentId" : "27ac3962-f6a7-49d8-abf1-caa1bd358b1f",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "Yes if it had shape (N, 1), but not necessarily if it had a different shape.  Honestly I kind of want to just raise an exception for m.x() when m is a numpy matrix and x is whatever reshaping method that was intended for ndarrays but which does not translate well to numpy.matrix.\n",
        "createdAt" : "2014-08-04T17:09:03Z",
        "updatedAt" : "2014-08-04T17:09:03Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "44c2611e-795f-460d-b94b-253afb2eb877",
        "parentId" : "27ac3962-f6a7-49d8-abf1-caa1bd358b1f",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "@charris do you suggest that this relation to transpose be added to the docstring?\n",
        "createdAt" : "2014-08-04T17:19:00Z",
        "updatedAt" : "2014-08-04T17:19:00Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "d898a805-f55f-4899-99fe-0c1e5caf15df",
        "parentId" : "27ac3962-f6a7-49d8-abf1-caa1bd358b1f",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, no. I guess that only applies to column vectors. Which, OTOH, are the only matrices affected by squeeze. Might mention the latter.\n",
        "createdAt" : "2014-08-04T17:36:35Z",
        "updatedAt" : "2014-08-04T17:36:35Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "3cc3f787-1905-41c0-bc37-c7510c252137",
        "parentId" : "27ac3962-f6a7-49d8-abf1-caa1bd358b1f",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "This is already explained explicitly in the `Notes` section.  Would you suggest to move this explanation to the `Returns` section?\n",
        "createdAt" : "2014-08-04T17:43:14Z",
        "updatedAt" : "2014-08-04T17:43:14Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2aa2132e9e3b98dacfe6b7a0f9273d83c812852b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +473,477 @@        -------\n        squeezed : matrix\n            The matrix, but as a (1, N) matrix if it had shape (N, 1).\n\n        See Also"
  },
  {
    "id" : "efe152a0-e290-45bf-943a-2fe929269ad5",
    "prId" : 4943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "512edfbf-3769-473b-a46d-08e247156dda",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "How about `super(matrix, self).sqeeze(axis=axis)`? Of course, if we ever rewrite the `matrix` class (fat chance), that would be a problem ;)\n",
        "createdAt" : "2014-08-04T17:11:39Z",
        "updatedAt" : "2014-08-04T17:11:39Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5f9732cd-6a8c-40d0-8e98-540bc9f8814a",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "The `N.ndarray.whatever(...)` notation is used throughout defmatrix.py.  Could the change to `super` wait for separate PR?\n",
        "createdAt" : "2014-08-04T17:22:12Z",
        "updatedAt" : "2014-08-04T17:22:12Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "6f08c55b-7df3-4e0a-a2b4-ce28658f2288",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "Added this as numpy issue https://github.com/numpy/numpy/issues/4945.\n",
        "createdAt" : "2014-08-04T17:49:17Z",
        "updatedAt" : "2014-08-04T17:49:17Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "91753019-14fb-41fc-8b20-78ed3c7b9078",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Reading about super, there are mixed reviews, but at least the given form should be compatible python 2 & 3 ;) The other alternative, if you know the base class name, is just `ndarray.squeeze(self, ...)` as `ndarray` is already known in the matrix class as it inherits fromit. Another PR cleaning up all the current uses would be good. I guess one advantage of super, at least in the single inheritance case, is that you can change the base class. Not something we will be doing, however.\n",
        "createdAt" : "2014-08-04T17:50:36Z",
        "updatedAt" : "2014-08-04T17:50:36Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "dc1e70bf-afee-44ed-8c93-2ebf6b804381",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "> The other alternative, if you know the base class name,\n> is just ndarray.squeeze(self, ...) as ndarray is already known\n> in the matrix class as it inherits fromit.\n\nI'm not sure I follow you here, but changing `N.ndarray.squeeze(self, axis=axis)` to `ndarray.squeeze(self, axis=axis)` causes a `NameError` because `ndarray` is not defined.  numpy.matrix actually inherits from `N.ndarray`.\n",
        "createdAt" : "2014-08-04T17:58:56Z",
        "updatedAt" : "2014-08-04T17:58:56Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "ab6b46a1-5fa0-4e85-8c77-d443c2f3b883",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Does super work then?\n",
        "createdAt" : "2014-08-04T18:07:27Z",
        "updatedAt" : "2014-08-04T18:07:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "9e1ba07a-89a0-4bec-ae1f-5df42069c540",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "> Does super work then?\n\nIt causes a `test_instance_methods` assertion to fail in testing.  I assume this causes the matrix member function to return an ndarray instead of a matrix, but I haven't looked into it.  Should I look into this further before the documentation PR is merged?\n",
        "createdAt" : "2014-08-04T18:16:28Z",
        "updatedAt" : "2014-08-04T18:16:28Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "b8905b2c-42f5-4517-8b2c-f5ca80ca150d",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Actually, sounds like an argument for `super` ;)\n",
        "createdAt" : "2014-08-04T18:20:27Z",
        "updatedAt" : "2014-08-04T18:20:27Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "29493ab7-a9d3-4d5b-8379-491d2836483f",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "> Actually, sounds like an argument for super ;)\n\nYou mean that it would make more sense to return an ndarray than a matrix?  This seems like more than documentation so I hope it would be out of scope for this PR...\n",
        "createdAt" : "2014-08-04T18:24:11Z",
        "updatedAt" : "2014-08-04T18:24:11Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "60396bcb-85dc-4613-867b-48fe92f43781",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "body" : "If you are suggesting to change the behavior, here's a relevant ancient discussion on the mailing list http://mail.scipy.org/pipermail/numpy-discussion/2005-October/005306.html.\n",
        "createdAt" : "2014-08-04T18:28:12Z",
        "updatedAt" : "2014-08-04T18:28:12Z",
        "lastEditedBy" : "ca95d614-21fc-41d3-bdbd-9aa4d803669f",
        "tags" : [
        ]
      },
      {
        "id" : "57230c46-1bdf-48e0-ab0e-dfe77a722153",
        "parentId" : "512edfbf-3769-473b-a46d-08e247156dda",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "No, but I'd be curious as to why it behaves differently in the two cases. AFAICT, the same function should be called, but it looks like `ndarray.__new__` is called instead of `matrix.__new__`, or something like that. Hmm...\n",
        "createdAt" : "2014-08-04T18:29:00Z",
        "updatedAt" : "2014-08-04T18:29:00Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2aa2132e9e3b98dacfe6b7a0f9273d83c812852b",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +506,510 @@\n        \"\"\"\n        return N.ndarray.squeeze(self, axis=axis)\n\n"
  },
  {
    "id" : "9489cd31-1600-45fa-a75e-3708adc7171c",
    "prId" : 10142,
    "prUrl" : "https://github.com/numpy/numpy/pull/10142#pullrequestreview-124209596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9da9a1c-95c6-4b54-831c-60b470388827",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Do we want to get this message into 1.15?",
        "createdAt" : "2018-05-29T16:36:16Z",
        "updatedAt" : "2018-05-29T17:57:48Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "b3fddbe7-c9ae-48b0-8628-54a2d261786a",
        "parentId" : "c9da9a1c-95c6-4b54-831c-60b470388827",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think so, early enough to deal with the potential fallout in any case. If we follow @rgommers suggestion, latest NumPy will require latest SciPy. We could hold off until the next SciPy release, we are doing that with some f2py changes.",
        "createdAt" : "2018-05-29T16:59:53Z",
        "updatedAt" : "2018-05-29T17:57:48Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "0712dc94-5a20-4e22-a41f-582d88c93076",
        "parentId" : "c9da9a1c-95c6-4b54-831c-60b470388827",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "If you mean https://github.com/numpy/numpy/pull/10142#issuecomment-391548138, then I don't think it does (at least, it doesn't matter how the `PendingDeprecationWarning` is silenced). `PendingDeprecationWarning`s also won't show up for normal users, only if you run with `-Wd` or raise exceptions on warnings or something like that.\r\n\r\n+1 for getting this note into 1.15",
        "createdAt" : "2018-05-29T23:41:06Z",
        "updatedAt" : "2018-05-29T23:41:06Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "86f487cd9c634f778d7b6ce8184c367d9e423fd6",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +74,78 @@    .. note:: It is no longer recommended to use this class, even for linear\n              algebra. Instead use regular arrays. The class may be removed\n              in the future.\n\n    Returns a matrix from an array-like object, or from a string of data."
  }
]