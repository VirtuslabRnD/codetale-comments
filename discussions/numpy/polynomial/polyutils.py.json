[
  {
    "id" : "415c95c0-7998-4dd5-b647-df1670c145e4",
    "prId" : 13078,
    "prUrl" : "https://github.com/numpy/numpy/pull/13078#pullrequestreview-209889090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3c7cc43-ecb8-4492-90be-5c6ebab56b51",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Only change in this function is these three lines",
        "createdAt" : "2019-03-03T00:09:45Z",
        "updatedAt" : "2019-03-12T05:30:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bb279ad4f25d987155106ee6f82ba7fc83ce5a0",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +457,461 @@    vx = vander_f(x, degx)\n    vy = vander_f(y, degy)\n    vz = vander_f(z, degz)\n    v = vx[..., None, None]*vy[..., None,:, None]*vz[..., None, None,:]\n    return v.reshape(v.shape[:-3] + (-1,))"
  },
  {
    "id" : "88f5326a-311c-402c-9e37-92698c71c5b3",
    "prId" : 13107,
    "prUrl" : "https://github.com/numpy/numpy/pull/13107#pullrequestreview-213727910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0678818a-cd79-468b-ab69-f03c60034aa1",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Future work - probably use `args = np.broadcast_arrays(*args)` here instead, now that it's in one place.",
        "createdAt" : "2019-03-12T07:19:52Z",
        "updatedAt" : "2019-03-13T03:38:57Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f883bbbf-be25-4a64-b726-37899dd74111",
        "parentId" : "0678818a-cd79-468b-ab69-f03c60034aa1",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Good thought.",
        "createdAt" : "2019-03-13T01:45:19Z",
        "updatedAt" : "2019-03-13T03:38:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcea19a3dd586bbf9d62719de551ac75d3b4e17a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +504,508 @@    \"\"\"\n    try:\n        args = tuple(np.array(args, copy=False))\n    except Exception:\n        # preserve the old error message"
  },
  {
    "id" : "5752e3e3-cd35-4181-a6ad-589be2ba4967",
    "prId" : 13146,
    "prUrl" : "https://github.com/numpy/numpy/pull/13146#pullrequestreview-215370842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b637286-7f36-4df4-8456-2fbca78fe843",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Do you want to change this to require integers as you have done elsewhere? I suppose power is different from degree in that it can be float in other circumstances.",
        "createdAt" : "2019-03-17T17:31:38Z",
        "updatedAt" : "2019-03-17T17:31:38Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "39bf77a4-80f1-4765-998c-e44347a40157",
        "parentId" : "3b637286-7f36-4df4-8456-2fbca78fe843",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Not in this PR, but I thought about that. I'll let you decide.",
        "createdAt" : "2019-03-17T17:45:56Z",
        "updatedAt" : "2019-03-17T17:45:56Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "32092ff9-d7a4-4f8b-b44e-a1654effae1f",
        "parentId" : "3b637286-7f36-4df4-8456-2fbca78fe843",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Let's leave it for later.",
        "createdAt" : "2019-03-17T19:28:56Z",
        "updatedAt" : "2019-03-17T19:28:57Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddbc31c2d71285f426dc16fab8ac2e00ffe6c1f8",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +706,710 @@    # c is a trimmed copy\n    [c] = as_series([c])\n    power = int(pow)\n    if power != pow or power < 0:\n        raise ValueError(\"Power must be a non-negative integer.\")"
  },
  {
    "id" : "a8d1d890-74fb-4fbc-ad43-18dbde7c573c",
    "prId" : 18252,
    "prUrl" : "https://github.com/numpy/numpy/pull/18252#pullrequestreview-578953465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "383e2a35-8a55-42cf-9691-49b46941f8a7",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "@charris any idea what happened here? Is this a copy-paste error from somewhere else?",
        "createdAt" : "2021-01-28T18:30:40Z",
        "updatedAt" : "2021-01-28T18:30:40Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "940713a8-0f90-4e09-9ff1-349e68f68a6b",
        "parentId" : "383e2a35-8a55-42cf-9691-49b46941f8a7",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Looks like cut and paste error. ",
        "createdAt" : "2021-01-28T19:46:26Z",
        "updatedAt" : "2021-01-28T19:46:26Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ccf97403-a933-4dd2-901d-276aaab6d5a8",
        "parentId" : "383e2a35-8a55-42cf-9691-49b46941f8a7",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Note that the empty `Examples` was deliberate and left for later filling in. Does it cause problems?",
        "createdAt" : "2021-01-28T19:48:29Z",
        "updatedAt" : "2021-01-28T19:48:29Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "2aeb6006-3af4-46cd-8516-ff2fe6d206ae",
        "parentId" : "383e2a35-8a55-42cf-9691-49b46941f8a7",
        "authorId" : "b8e6070a-dea1-4ea9-ba20-ab79077a98f9",
        "body" : "> Note that the empty `Examples` was deliberate and left for later filling in. Does it cause problems?\r\n\r\nI'm working on an [auto formatter](https://github.com/carreau/velin), and a side effect of how it work is that it's difficult to distinguish empty sections from section that do not exists when interacting with numpydoc's Docsscrape, I could add a \"keep empty sections\" if that's desired.\r\n\r\nI'm also working on a terminal rendering of docstrings for IPython, for which not having empty section would also be better.\r\n\r\n<img width=\"896\" alt=\"Screen Shot 2021-01-23 at 15 38 37\" src=\"https://user-images.githubusercontent.com/335567/106235638-ee4b1080-61af-11eb-8b53-f2766043b95e.png\">\r\n\r\nThe other \"issue\" i'm encountering is the consistency around spacing in numpy docs, \r\ndo you want (or not) a blank line between each parameter in the \"Parameters\" section, and also the indentation in see also which sometime is \r\n\r\n```\r\nlike : this aligned with the colon\r\n       on the second line\r\n\r\nand_some_time : like this where it's\r\n   where its three or four spaces\r\n```\r\n\r\nThose are issues I might bring up at some points if you are interested in an auto formatter for numpydoc... ",
        "createdAt" : "2021-01-29T05:35:36Z",
        "updatedAt" : "2021-01-29T05:35:36Z",
        "lastEditedBy" : "b8e6070a-dea1-4ea9-ba20-ab79077a98f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb8990e5eba4927716ad8a93e9b92c0f3de69386",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +738,742 @@        1-D array of array of series coefficients\n    pow, maxpower\n        See the ``<type>pow`` functions for more detail\n    \"\"\"\n    # c is a trimmed copy"
  }
]