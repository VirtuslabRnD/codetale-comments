[
  {
    "id" : "8e550dcf-5c9a-4b16-a43b-0107e5f9b0b7",
    "prId" : 9536,
    "prUrl" : "https://github.com/numpy/numpy/pull/9536#pullrequestreview-55585820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6382829-462c-41da-9745-a5a3e182877e",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Only non-doc change is here",
        "createdAt" : "2017-08-10T16:08:05Z",
        "updatedAt" : "2017-08-10T17:26:39Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a0e8630b76f0c900561084eb1cd462c3ea82a80",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +261,265 @@\n    def __repr__(self):\n        format = \"%s(%s, domain=%s, window=%s)\"\n        coef = repr(self.coef)[6:-1]\n        domain = repr(self.domain)[6:-1]"
  },
  {
    "id" : "b629a1b9-146c-4b62-acbc-6eb016895ee7",
    "prId" : 11733,
    "prUrl" : "https://github.com/numpy/numpy/pull/11733#pullrequestreview-146305969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc1c32a0-c9d4-4934-ae05-9569868d3875",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Missing `.`",
        "createdAt" : "2018-08-15T01:20:50Z",
        "updatedAt" : "2018-08-15T01:20:50Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "03acc16a97392aef4206843012e8b52f2c3f03e1",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +863,867 @@            has the domain and window specified in the call. If the\n            coefficients for the unscaled and unshifted basis polynomials are\n            of interest, do ``new_series.convert().coef``\n\n        [resid, rank, sv, rcond] : list"
  },
  {
    "id" : "7dbcd0c1-14c5-4854-a4dd-fec7a4c541b8",
    "prId" : 15666,
    "prUrl" : "https://github.com/numpy/numpy/pull/15666#pullrequestreview-391993734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f32948-c77d-4b11-913f-1cf5a49c332f",
        "parentId" : null,
        "authorId" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "body" : "not sure if this will be interpreted as newline on windows or if it expects \"\\r\\n\"",
        "createdAt" : "2020-04-02T02:53:57Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "fe664d20-2239-4242-9bd1-2c7a4f010863",
        "tags" : [
        ]
      },
      {
        "id" : "0b14c24e-c2aa-4fcc-83a0-0d177be0913e",
        "parentId" : "34f32948-c77d-4b11-913f-1cf5a49c332f",
        "authorId" : "2bbfef14-ac5b-44ae-a2a6-925f6f5b619a",
        "body" : "I'm not sure - the test suite, which tests multiline printing, passes on the CI (I've reverted back to 7940d81f6 so that that the code is back in sync with the tests). Hopefully that is sufficient to indicate there aren't any problems expected w.r.t. newline characters.",
        "createdAt" : "2020-04-02T03:46:31Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "2bbfef14-ac5b-44ae-a2a6-925f6f5b619a",
        "tags" : [
        ]
      },
      {
        "id" : "7c062b53-4c17-4d70-95c0-c83135b293e3",
        "parentId" : "34f32948-c77d-4b11-913f-1cf5a49c332f",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This is handled by the stdout stream itself, no python code working with strings usually even needs to ever worry about this.",
        "createdAt" : "2020-04-13T07:11:49Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dc9ff62a78004d6debd0953d70cd39864b9d6c3",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +368,372 @@            # Handle linebreaking\n            if line_len >= linewidth:\n                next_term = next_term.replace(\" \", \"\\n\", 1)\n            out += next_term\n        return out"
  },
  {
    "id" : "ff588f32-8570-432d-9ae8-5fe250dba301",
    "prId" : 15666,
    "prUrl" : "https://github.com/numpy/numpy/pull/15666#pullrequestreview-396755542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5242b06-5887-4666-8273-bc5e0538d1f6",
        "parentId" : null,
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Should the argument really be *required*?  Why not default to the `__str__` behavior?  As it is, for a polynomial `p` such as `p = np.polynomial.Polynomial([1, 2, 3])`, both `format(p)` and `f'{p}'` raise an exception. E.g.\r\n\r\n```\r\nIn [138]: p = np.polynomial.Polynomial([1, 2, 3])\r\n\r\nIn [139]: f'{p}'\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-139-8e0bd8161cf8> in <module>\r\n----> 1 f'{p}'\r\n\r\n~/mc37np/lib/python3.7/site-packages/numpy-1.19.0.dev0+56d5197-py3.7-macosx-10.9-x86_64.egg/numpy/polynomial/_polybase.py in __format__(self, fmt_str)\r\n    319         if fmt_str not in ('ascii', 'unicode'):\r\n    320             raise TypeError(\r\n--> 321                 f\"Unsupported format string '{fmt_str}' passed to \"\r\n    322                 f\"{self.__class__}.__format__. Valid options are \"\r\n    323                 f\"'ascii' and 'unicode'\"\r\n\r\nTypeError: Unsupported format string '' passed to <class 'numpy.polynomial.polynomial.Polynomial'>.__format__. Valid options are 'ascii' and 'unicode'\r\n```\r\n",
        "createdAt" : "2020-04-20T19:36:41Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      },
      {
        "id" : "17b23f8d-b698-4411-9a13-38d443a960c5",
        "parentId" : "c5242b06-5887-4666-8273-bc5e0538d1f6",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Or rather, when the argument is `''`, use the same logic as `__str__`.",
        "createdAt" : "2020-04-20T19:39:43Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dc9ff62a78004d6debd0953d70cd39864b9d6c3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +316,320 @@        return f\"{name}({coef}, domain={domain}, window={window})\"\n\n    def __format__(self, fmt_str):\n        if fmt_str == '':\n            return self.__str__()"
  },
  {
    "id" : "789d8bfc-5ad1-4bc5-85b9-683cfd305e07",
    "prId" : 15666,
    "prUrl" : "https://github.com/numpy/numpy/pull/15666#pullrequestreview-407518096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18047a4b-1fe8-496e-a1f5-5ffaf172887a",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Should this be thread-local?",
        "createdAt" : "2020-05-07T08:33:57Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "75ba78e1-ba9d-4a09-b4df-de4c308dba3a",
        "parentId" : "18047a4b-1fe8-496e-a1f5-5ffaf172887a",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "As long as not even print options seem to be, not sure its worth worrying about?",
        "createdAt" : "2020-05-07T13:31:11Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "e3dd5b4d-09c7-4fd3-a722-3ed2172b85d3",
        "parentId" : "18047a4b-1fe8-496e-a1f5-5ffaf172887a",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "That's fair.",
        "createdAt" : "2020-05-07T14:17:56Z",
        "updatedAt" : "2020-05-15T19:21:06Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dc9ff62a78004d6debd0953d70cd39864b9d6c3",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +98,102 @@    # fonts in Windows shells/terminals. Therefore, default to ascii-only\n    # printing on windows.\n    _use_unicode = not os.name == 'nt'\n\n    @property"
  }
]