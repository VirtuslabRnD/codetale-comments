[
  {
    "id" : "fb36e92b-94cd-404d-a87e-7631fab1906a",
    "prId" : 8410,
    "prUrl" : "https://github.com/numpy/numpy/pull/8410#pullrequestreview-15195837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a01829a-7d92-45b7-b1c2-ae5c663751be",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Not much reason for this unless there is some form of inheritance somewhere, but if you like it...",
        "createdAt" : "2017-01-04T19:20:55Z",
        "updatedAt" : "2017-01-04T21:38:44Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "2e8efbda-444d-4d7d-83be-785fe2c417ce",
        "parentId" : "1a01829a-7d92-45b7-b1c2-ae5c663751be",
        "authorId" : "f5954f7f-6679-4ca7-9920-3c73950e035e",
        "body" : "I don't have any strong opinion concerning this. I was just trying to follow the surrounding style as `TestApproxEqual` is also using it without inheriting from anywhere and not being inherited from. As it doesn't make the code less understandable I would tend to leave it in, but if you feel that it should be dropped, I can also do that.",
        "createdAt" : "2017-01-04T20:45:50Z",
        "updatedAt" : "2017-01-04T21:38:44Z",
        "lastEditedBy" : "f5954f7f-6679-4ca7-9920-3c73950e035e",
        "tags" : [
        ]
      },
      {
        "id" : "fff301b5-4fc3-4f10-8006-8ad99acc82b8",
        "parentId" : "1a01829a-7d92-45b7-b1c2-ae5c663751be",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Have a slight preference only, so whichever you like. Makes me a bit wonder whether TestApproxEqual probably should inherit from `_GenericTest`, though, hehe.",
        "createdAt" : "2017-01-04T20:54:44Z",
        "updatedAt" : "2017-01-04T21:38:44Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "58fe985d-f070-49de-923b-d77507195522",
        "parentId" : "1a01829a-7d92-45b7-b1c2-ae5c663751be",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Really, release notes, and maybe double check if the tests cover all important and it should be good.",
        "createdAt" : "2017-01-04T20:55:34Z",
        "updatedAt" : "2017-01-04T21:38:44Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6312db5be6bc3bb35c999f10cb7db1cacacb4cbf",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +441,445 @@\n    def setUp(self):\n        self._assert_func = assert_array_less\n\n    def test_simple_arrays(self):"
  },
  {
    "id" : "dd91fce2-d0f2-47b7-a65a-9df762333d48",
    "prId" : 8421,
    "prUrl" : "https://github.com/numpy/numpy/pull/8421#pullrequestreview-36650276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3ff7cb8-5068-4754-92b6-65ebdbcd9654",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Unrelated fixup?",
        "createdAt" : "2017-05-06T17:50:05Z",
        "updatedAt" : "2017-05-07T14:21:40Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "8b189d38-cfbc-4ebd-b38d-e118b1258756",
        "parentId" : "b3ff7cb8-5068-4754-92b6-65ebdbcd9654",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "The safe comparison/suppression in the test filtered a bit more then just the NaT stuff (actually may have been there originally not for NaT, but for `==` operator warnings), so (not actually remembering it) removing it, the tests need to filter these warnings explicitly now. Not sure why this is the only one specifically though.",
        "createdAt" : "2017-05-06T18:05:44Z",
        "updatedAt" : "2017-05-07T14:21:40Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "d33a40b5-df5f-4045-b045-386bcf6c8fb4",
        "parentId" : "b3ff7cb8-5068-4754-92b6-65ebdbcd9654",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "So this might cause some problems downstream? I'm not terribly concerned, the only way to find out is to try.",
        "createdAt" : "2017-05-06T18:37:17Z",
        "updatedAt" : "2017-05-07T14:21:40Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "2b3020f2-3c3d-4d2b-8b0b-842665476bd3",
        "parentId" : "b3ff7cb8-5068-4754-92b6-65ebdbcd9654",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, looks like the `FutureWarning` will be gone in the 1.14 release.",
        "createdAt" : "2017-05-06T18:46:44Z",
        "updatedAt" : "2017-05-07T14:21:40Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5156384a-7cb6-49a6-ab7a-28031a6e9c8e",
        "parentId" : "b3ff7cb8-5068-4754-92b6-65ebdbcd9654",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "It might cause problems, but maybe its also good, since maybe some project might run into the future warning and did not notice because of this....",
        "createdAt" : "2017-05-06T19:00:22Z",
        "updatedAt" : "2017-05-07T14:21:40Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "868aa751ceb229465d626a7fd7083544afc96ed2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +146,150 @@        c['floupa'] = a['floupa'].copy()\n\n        with suppress_warnings() as sup:\n            l = sup.record(FutureWarning, message=\"elementwise == \")\n            self._test_not_equal(c, b)"
  },
  {
    "id" : "3c6e9196-b642-4f83-bf3c-8f0b3cc50979",
    "prId" : 9645,
    "prUrl" : "https://github.com/numpy/numpy/pull/9645#pullrequestreview-61664966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8399539f-a7eb-4765-8cd2-ade873505097",
        "parentId" : null,
        "authorId" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "body" : "The try: except is not needed. You can make it simpler via `msg = msg.replace(...)`",
        "createdAt" : "2017-09-09T15:29:58Z",
        "updatedAt" : "2017-09-10T15:00:18Z",
        "lastEditedBy" : "48d7d71b-9655-46b2-9a18-7c1fba7837d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "448bb82e6f6ad5d6ff98705a55fe34ccd938446c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +279,283 @@                self.assertEqual(msg, msg_reference)\n            except AssertionError:\n                self.assertEqual(msg2, msg_reference)\n\nclass TestArrayAlmostEqual(_GenericTest, unittest.TestCase):"
  }
]