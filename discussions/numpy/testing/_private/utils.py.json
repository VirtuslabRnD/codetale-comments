[
  {
    "id" : "9c11c7d8-ff99-4b3a-8451-57701f624385",
    "prId" : 11122,
    "prUrl" : "https://github.com/numpy/numpy/pull/11122#pullrequestreview-125647565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed4ae7ef-16b4-4da7-bdd1-9f29deaac40c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Not sure I agree with this - what if `x` and `y` are quantities of different dimensions? The test should still compare the empty arrays so that the correct error is raised, right?",
        "createdAt" : "2018-06-04T08:11:52Z",
        "updatedAt" : "2018-06-04T13:38:18Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "e2cb0e8a-97b9-4154-afde-662a232ac147",
        "parentId" : "ed4ae7ef-16b4-4da7-bdd1-9f29deaac40c",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "It is the same case as the `if x.size == 0` stanza above, but for the case where `x` and `y` are both scalar. In principle, I agree the comparison should work for empty elements, but in practice, this is not the case (e.g., `matrix` changing its shape being one problem...)\r\n\r\nSince this was here before, I propose to leave it as is.",
        "createdAt" : "2018-06-04T13:36:11Z",
        "updatedAt" : "2018-06-04T13:38:18Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      },
      {
        "id" : "bc0979b7-b2f4-4527-ac96-9bbaed82e43b",
        "parentId" : "ed4ae7ef-16b4-4da7-bdd1-9f29deaac40c",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Sure, i agree this is out of scope for the patch",
        "createdAt" : "2018-06-04T16:19:33Z",
        "updatedAt" : "2018-06-04T16:19:34Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "3c016407-1f24-4f01-af23-aa82e68c8370",
        "parentId" : "ed4ae7ef-16b4-4da7-bdd1-9f29deaac40c",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "Overall, it sadly remains a chunk of rather fragile code...",
        "createdAt" : "2018-06-04T16:23:23Z",
        "updatedAt" : "2018-06-04T16:23:23Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad49aaaf497c6daadb9b66f295f58a315476e01",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +754,758 @@                return\n        elif flagged:\n            # no sense doing comparison if everything is flagged.\n            return\n"
  },
  {
    "id" : "e51d437e-a1e1-45ad-ace2-7605e6afd962",
    "prId" : 11122,
    "prUrl" : "https://github.com/numpy/numpy/pull/11122#pullrequestreview-147348149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e4a72f-1f4b-4d64-9a89-301b2b4ae90e",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm,\r\n```\r\nIn [10]: ma.masked != True\r\nOut[10]: masked\r\n\r\nIn [11]: ma.masked == True\r\nOut[11]: masked\r\n\r\nIn [12]: bool(ma.masked)\r\nOut[12]: False\r\n```\r\n@mhvk The camparison to True seems to achieve nothing here.",
        "createdAt" : "2018-08-17T18:58:08Z",
        "updatedAt" : "2018-08-17T18:59:48Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "42d5ac52-8c0b-401a-9218-160f7d20b3e4",
        "parentId" : "69e4a72f-1f4b-4d64-9a89-301b2b4ae90e",
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "The purpose is to ensure that the stanza is *not* executed if `x_id` or `y_id` is `masked`, yet is executed if they are different.",
        "createdAt" : "2018-08-17T19:09:25Z",
        "updatedAt" : "2018-08-17T19:09:26Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad49aaaf497c6daadb9b66f295f58a315476e01",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +704,708 @@        x_id = func(x)\n        y_id = func(y)\n        if (x_id == y_id).all() != True:\n            msg = build_err_msg([x, y],\n                                err_msg + '\\nx and y %s location mismatch:'"
  }
]