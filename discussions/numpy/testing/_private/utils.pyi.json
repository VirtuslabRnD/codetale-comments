[
  {
    "id" : "695846c7-d16b-4f72-a10a-5b45044d330f",
    "prId" : 19179,
    "prUrl" : "https://github.com/numpy/numpy/pull/19179#pullrequestreview-676880449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b17ea840-3f91-45c9-945d-8cb5dcf8736f",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "`msg` might potentially be a bit on the strict side here, as the `AssertionError` constructor can in principle take any object.",
        "createdAt" : "2021-06-06T16:02:45Z",
        "updatedAt" : "2021-06-06T16:07:54Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "004ad4037904de3712774782f77de39a1768a264",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +139,143 @@HAS_LAPACK64: Final[bool]\n\ndef assert_(val: object, msg: str | Callable[[], str] = ...) -> None: ...\n\n# Contrary to runtime we can't do `os.name` checks while type checking,"
  },
  {
    "id" : "9f0ca902-9cb2-4ed4-b715-1b59a56ca54d",
    "prId" : 19179,
    "prUrl" : "https://github.com/numpy/numpy/pull/19179#pullrequestreview-676880449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98ff6cc9-c34e-4d00-ab5d-48a6dba69077",
        "parentId" : null,
        "authorId" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "body" : "There are a bunch of functions within this module that are thin wrappers around standard library functions.\r\nIn such cases I, more or less, copied their respective annotations from [typeshed](https://github.com/python/typeshed).",
        "createdAt" : "2021-06-06T16:04:20Z",
        "updatedAt" : "2021-06-06T16:07:54Z",
        "lastEditedBy" : "ebbd559e-4e98-4695-a417-e4a6bc303d63",
        "tags" : [
        ]
      }
    ],
    "commit" : "004ad4037904de3712774782f77de39a1768a264",
    "line" : 302,
    "diffHunk" : "@@ -1,1 +300,304 @@    times: int = ...,\n    label: None | str = ...,\n) -> float: ...\n\n@overload"
  }
]