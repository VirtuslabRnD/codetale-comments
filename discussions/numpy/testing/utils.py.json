[
  {
    "id" : "27260a90-06e7-460a-9a70-000aabb551c1",
    "prId" : 3341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d00dab7-f000-4634-bc56-91bd6a8704f6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, not sure this is the right place for this. Do you expect to use it in many other places?\n",
        "createdAt" : "2013-05-23T16:35:01Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "4e79224f-abb4-4242-9a98-7bfae0bcf71e",
        "parentId" : "1d00dab7-f000-4634-bc56-91bd6a8704f6",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "yes, I use it for all vectorized functions, see the simd-experiments branch\n",
        "createdAt" : "2013-05-23T16:53:15Z",
        "updatedAt" : "2013-05-25T15:36:50Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe69102dd34619ce18cf074ef0e6e46611bc17e7",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1527,1531 @@\n\ndef gen_alignment_data(dtype=float32, type='binary', max_size=24):\n    \"\"\"\n    generator producing data with different alignment and offsets"
  },
  {
    "id" : "646763a1-5966-4a36-b04c-2276837ce231",
    "prId" : 4105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dccfb8b-ab85-4778-9bb1-59853c806dcc",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Need to import `array` in line 796.\n",
        "createdAt" : "2014-02-15T16:50:20Z",
        "updatedAt" : "2014-02-15T23:00:28Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "29f01af2-7daf-4e75-90e9-c342bb984ed7",
        "parentId" : "3dccfb8b-ab85-4778-9bb1-59853c806dcc",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Heh, I seem to keep forgotting to run the tests... should those imports really be there and not on the module level?\n",
        "createdAt" : "2014-02-15T22:38:35Z",
        "updatedAt" : "2014-02-15T23:00:28Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "2b6ef4bc-ef63-491f-afb2-b35531dc7d2b",
        "parentId" : "3dccfb8b-ab85-4778-9bb1-59853c806dcc",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Then again, they are for all, so it would be a larger change to really do that right.\n",
        "createdAt" : "2014-02-15T22:39:31Z",
        "updatedAt" : "2014-02-15T23:00:28Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "ffe4c0bc-ed43-4c92-954e-5c8b64861fa2",
        "parentId" : "3dccfb8b-ab85-4778-9bb1-59853c806dcc",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "There are a lot of imports like that in this file. I'd be inclined to clean them up sometime, but it isn't needed for this PR.\n",
        "createdAt" : "2014-02-15T22:41:27Z",
        "updatedAt" : "2014-02-15T23:00:28Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "63277b91-a756-4701-a0a9-ef19ca29f72e",
        "parentId" : "3dccfb8b-ab85-4778-9bb1-59853c806dcc",
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "OK, put the imports there, if you guys prefer another way to do this (I mean the result_type thing), I can change it. Added a simple extra test, because I was a bit worried I overlooked things with result_type and array-likes.\n",
        "createdAt" : "2014-02-15T22:59:16Z",
        "updatedAt" : "2014-02-15T23:00:28Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab04e1ae0e8eca717bc7e42f3b0a60c9ff764289",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +815,819 @@        # casting of x later.\n        dtype = result_type(y, 1.)\n        y = array(y, dtype=dtype, copy=False)\n        z = abs(x-y)\n"
  },
  {
    "id" : "2e9b956b-a845-432c-ba1c-3f33698668b7",
    "prId" : 7636,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89466af4-7097-4a5b-afdb-1e8bdaf0a3b6",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Why not do this up above at line 22\n\n```\nif sys.version_info[0] >= 3:\n    from io import StringIO\n    from nose.tools import assert_raises_regex\nelse:\n    from StringIO import StringIO\n    from nose.tools import assert_raises_regexp as assert_raises_regex\n```\n",
        "createdAt" : "2016-05-14T20:47:32Z",
        "updatedAt" : "2016-05-14T20:47:32Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "63db656d-d966-4d5d-a885-29cf0d681e9e",
        "parentId" : "89466af4-7097-4a5b-afdb-1e8bdaf0a3b6",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "`nose` is an optional dependency, so the `import_nose` call is hidden inside each test function on purpose. therefore can't do line 22.\n\nalso the line `__tracebackhide__ = True  # Hide traceback for py.test` seems to be useful to people, so don't want to remove that\n",
        "createdAt" : "2016-05-14T20:59:54Z",
        "updatedAt" : "2016-05-14T20:59:54Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      },
      {
        "id" : "0b2b7cdd-d20b-454c-ae2a-332400fc9bdb",
        "parentId" : "89466af4-7097-4a5b-afdb-1e8bdaf0a3b6",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Well, OK. Although one could question to what degree nose is optional ;)\n",
        "createdAt" : "2016-05-14T21:12:18Z",
        "updatedAt" : "2016-05-14T21:12:18Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "0a6f4ccf-84a7-4895-899a-eecc7a88339a",
        "parentId" : "89466af4-7097-4a5b-afdb-1e8bdaf0a3b6",
        "authorId" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "body" : "Many users will never run the tests, so making it non-optional will result in lots of errors on `import numpy`. all fixable of course, but why add the dependency?\n",
        "createdAt" : "2016-05-14T21:15:23Z",
        "updatedAt" : "2016-05-14T21:15:23Z",
        "lastEditedBy" : "8ffdfffb-d8d9-40f6-9de3-dd0dee381149",
        "tags" : [
        ]
      }
    ],
    "commit" : "c185c71c8eb7192e44ac381ce9883805068815ea",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +1165,1169 @@    nose = import_nose()\n\n    if sys.version_info.major >= 3:\n        funcname = nose.tools.assert_raises_regex\n    else:"
  },
  {
    "id" : "9b57ad27-5d83-45b7-81b9-c38800052776",
    "prId" : 7760,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c49e2bcc-31ff-4bbe-b013-f94bffd69554",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Would making this `<=` still make sense and remove the possibly stronger tests? Not sure if that makes sense or not. Anyway, looks good to me.\nI would like to nudge you towards adding a test ;p. Wondering if we can somehow make it easier to understand what \"decimal\" means in the documentation. Also \"vagaries\" seems a bit difficult to me as a non-native speaker, maybe \"details\"?\n",
        "createdAt" : "2016-06-19T18:07:13Z",
        "updatedAt" : "2016-06-19T19:47:33Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "b35fbb71-7832-48d2-a44e-25d2fb6f2330",
        "parentId" : "c49e2bcc-31ff-4bbe-b013-f94bffd69554",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I had that, but changed it on account of\n\n```\nnt.assert_almost_equal([1.5], [0], decimal=0)\n```\n\nfailing in master due to rounding the difference 1.5 up. Note that\n\n```\nnt.assert_almost_equal([1.49999], [0], decimal=0)\n```\n\ndoes pass (just to assure everyone the 1.5 is the proper factor).\n",
        "createdAt" : "2016-06-19T19:18:16Z",
        "updatedAt" : "2016-06-19T19:47:33Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "1e9ebd04-b7b3-4923-9388-8d67096fc91a",
        "parentId" : "c49e2bcc-31ff-4bbe-b013-f94bffd69554",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Can't make everything exactly the same, but I figure that any problems are in tests too close to the edge in any case.\n",
        "createdAt" : "2016-06-19T19:19:47Z",
        "updatedAt" : "2016-06-19T19:47:33Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "5a80e4d7-ac70-4538-aea5-3f42f40246ef",
        "parentId" : "c49e2bcc-31ff-4bbe-b013-f94bffd69554",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Yeah need a test. If there had been one in the first place we would never have ended up with `1.5 * 10**(-decimal)`. That was due to the use of a `<=` instead of `<`, and I think that came about from working around some other perceived bug. I'd just change it if it didn't cause so many new failures in downstream code.\n",
        "createdAt" : "2016-06-19T19:27:52Z",
        "updatedAt" : "2016-06-19T19:47:33Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "c911e5b1-ffbd-4cfd-ade6-a0fc8f70b1af",
        "parentId" : "c49e2bcc-31ff-4bbe-b013-f94bffd69554",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Test added.\n",
        "createdAt" : "2016-06-19T19:47:52Z",
        "updatedAt" : "2016-06-19T19:47:52Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "55002a5204240bfaabdc19bd670c50e47881247c",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +914,918 @@            z = z.astype(float_)  # handle object arrays\n\n        return z < 1.5 * 10.0**(-decimal)\n\n    assert_array_compare(compare, x, y, err_msg=err_msg, verbose=verbose,"
  }
]