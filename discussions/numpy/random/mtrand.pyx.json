[
  {
    "id" : "cf706da4-8897-471f-9884-14fa6499dd2a",
    "prId" : 14490,
    "prUrl" : "https://github.com/numpy/numpy/pull/14490#pullrequestreview-287219323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da2f97c4-3cb0-45a7-ae9c-54b3dbf15ef5",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Nice catch",
        "createdAt" : "2019-09-12T06:43:43Z",
        "updatedAt" : "2019-09-12T06:43:43Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "e389beef0ef96ad0f3c968f1796368c06a31df64",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +3518,3522 @@        ongood = ongood.astype(np.int64)\n        onbad = onbad.astype(np.int64)\n        onsample = onsample.astype(np.int64)\n        out = discrete_broadcast_iii(&legacy_random_hypergeometric,&self._bitgen, size, self.lock,\n                                     ongood, 'ngood', CONS_NON_NEGATIVE,"
  },
  {
    "id" : "a729ff73-182c-4881-81d1-b259222f2f9a",
    "prId" : 14490,
    "prUrl" : "https://github.com/numpy/numpy/pull/14490#pullrequestreview-287219846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f07ed57d-1b74-462d-994b-21418b72a74c",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "Can you remind me why we're using `long` here instead of `int64`?",
        "createdAt" : "2019-09-12T06:44:17Z",
        "updatedAt" : "2019-09-12T06:44:17Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "f72429a2-76d6-4961-ab05-a84d9bb1e00a",
        "parentId" : "f07ed57d-1b74-462d-994b-21418b72a74c",
        "authorId" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "body" : "Legacy.  The original random code was written using C long integers.  This code is supposed to preserve the old behavior.",
        "createdAt" : "2019-09-12T06:45:11Z",
        "updatedAt" : "2019-09-12T06:45:11Z",
        "lastEditedBy" : "8de63a41-1bc1-4e93-a2df-4f2f940433cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "e389beef0ef96ad0f3c968f1796368c06a31df64",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +3496,3500 @@        ongood = <np.ndarray>np.PyArray_FROM_OTF(ngood, np.NPY_LONG, np.NPY_ALIGNED)\n        onbad = <np.ndarray>np.PyArray_FROM_OTF(nbad, np.NPY_LONG, np.NPY_ALIGNED)\n        onsample = <np.ndarray>np.PyArray_FROM_OTF(nsample, np.NPY_LONG, np.NPY_ALIGNED)\n\n        if np.PyArray_NDIM(ongood) == np.PyArray_NDIM(onbad) == np.PyArray_NDIM(onsample) == 0:"
  }
]