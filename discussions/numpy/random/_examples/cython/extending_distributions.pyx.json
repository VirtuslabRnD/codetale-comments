[
  {
    "id" : "1d819253-ce7d-41f7-a68b-600faa705ce2",
    "prId" : 15463,
    "prUrl" : "https://github.com/numpy/numpy/pull/15463#pullrequestreview-351840661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a907f69-0ab5-4d54-b530-7558bc6bf33d",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "@jamesthomasgriffin is this along the lines of what you are trying to do? It uses a new `pxd`, see line 13. Also the `setup.py` needs to link with the new `npyrandom` library.",
        "createdAt" : "2020-01-31T14:26:54Z",
        "updatedAt" : "2020-03-16T21:24:00Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "6fc3fec0-81a6-4390-a704-fa99d1ec15fd",
        "parentId" : "8a907f69-0ab5-4d54-b530-7558bc6bf33d",
        "authorId" : "8bab5c1a-1716-4800-bc25-f2b2100ca8d9",
        "body" : "@mattip Yes that example would show me how to do what I wanted to do.  Thank you.",
        "createdAt" : "2020-02-01T00:00:39Z",
        "updatedAt" : "2020-03-16T21:24:00Z",
        "lastEditedBy" : "8bab5c1a-1716-4800-bc25-f2b2100ca8d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "74ac4cf2c9646eff9217b87a36cdd7da0f95c730",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +115,119 @@        raise TypeError('Unsupported dtype %r for random' % _dtype)\n    return randoms\n"
  },
  {
    "id" : "39bef570-f027-4798-90e0-35a114b8c8c6",
    "prId" : 15463,
    "prUrl" : "https://github.com/numpy/numpy/pull/15463#pullrequestreview-351966983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05be7650-8382-4114-a070-2a85a53fcbcf",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "```suggestion\r\n    dtype: dtype, optional\r\n```",
        "createdAt" : "2020-02-02T20:59:41Z",
        "updatedAt" : "2020-03-16T21:24:00Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "74ac4cf2c9646eff9217b87a36cdd7da0f95c730",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +88,92 @@    n: int\n        Output vector length\n    dtype: {str, dtype}, optional\n        Desired dtype, either 'd' (or 'float64') or 'f' (or 'float32'). The\n        default dtype value is 'd'"
  },
  {
    "id" : "7333937c-f616-41cc-9f9e-35cc6f76b056",
    "prId" : 15463,
    "prUrl" : "https://github.com/numpy/numpy/pull/15463#pullrequestreview-359923462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02eb081e-7c2a-41aa-99e6-12f148dcdd1f",
        "parentId" : null,
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "This function all looks good to me now.",
        "createdAt" : "2020-02-17T19:01:32Z",
        "updatedAt" : "2020-03-16T21:24:00Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "74ac4cf2c9646eff9217b87a36cdd7da0f95c730",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +106,110 @@    _dtype = np.dtype(dtype)\n    randoms = np.empty(n, dtype=_dtype)\n    if _dtype == np.float32:\n        with bit_generator.lock:\n            random_standard_uniform_fill_f(rng, n, <float*>np.PyArray_DATA(randoms))"
  },
  {
    "id" : "a97c405d-df04-459b-b9b7-eaeefd69dd4a",
    "prId" : 15463,
    "prUrl" : "https://github.com/numpy/numpy/pull/15463#pullrequestreview-375592670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fca1f67c-3b99-4d68-8d3e-e9113e5b277f",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Sorry, I did not look at it careful enough again right now. This is still incorrect for non-native byte order, would need to add an error branch and `elif _dtype == np.float64`. On the up-side, you can just move the above `raise TypeError('Unsupported dtype \"%r\"' % dtype)` in the else branch then, so that it is nicer anyway.\r\nI can do that if  you are getting tired of this :).",
        "createdAt" : "2020-03-16T21:15:39Z",
        "updatedAt" : "2020-03-16T21:24:00Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      },
      {
        "id" : "33f34514-e3e0-4cd3-9d64-0c6e70c870fb",
        "parentId" : "fca1f67c-3b99-4d68-8d3e-e9113e5b277f",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "done",
        "createdAt" : "2020-03-16T21:24:13Z",
        "updatedAt" : "2020-03-16T21:24:14Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "74ac4cf2c9646eff9217b87a36cdd7da0f95c730",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +106,110 @@    _dtype = np.dtype(dtype)\n    randoms = np.empty(n, dtype=_dtype)\n    if _dtype == np.float32:\n        with bit_generator.lock:\n            random_standard_uniform_fill_f(rng, n, <float*>np.PyArray_DATA(randoms))"
  }
]