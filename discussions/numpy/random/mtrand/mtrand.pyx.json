[
  {
    "id" : "8c8792a4-f8c0-45ad-a417-45f6a9404585",
    "prId" : 348,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f68a159-897f-4513-8bef-f904870ce0c4",
        "parentId" : null,
        "authorId" : "cbe4f83e-1941-49a4-9a3f-c8f37d127487",
        "body" : "Will this copy the whole slice of the array to the temp buffer? It seems that if so it would not be in-place.  Also this won't shuffle individual items in the dimensions of the array, only the outer array, is this intended?\n",
        "createdAt" : "2012-07-12T18:22:07Z",
        "updatedAt" : "2012-07-17T15:52:05Z",
        "lastEditedBy" : "cbe4f83e-1941-49a4-9a3f-c8f37d127487",
        "tags" : [
        ]
      },
      {
        "id" : "9026713a-76b6-4f76-b66e-093cef21acc7",
        "parentId" : "7f68a159-897f-4513-8bef-f904870ce0c4",
        "authorId" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "body" : "(1) Yes, unfortunately numpy doesn't have an in-place swap function, so the temp buffer is used to accomplish that. The array is still modified in place -- two lines down the buffer gets written back to it. (2) And yes, this only shuffles items in the outer array, which is what the function is documented to do. I'd have thought shuffling along an axis made more sense, but the API was made 5+ years ago so...\n",
        "createdAt" : "2012-07-13T00:47:09Z",
        "updatedAt" : "2012-07-17T15:52:05Z",
        "lastEditedBy" : "762e53b3-7c6a-4fbb-8098-a2c522dd50a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b26c675e2a91e1042f8f8d634763942c87fbbb6e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +4404,4408 @@            while i > 0:\n                j = rk_interval(i, self.internal_state)\n                buf[...] = x[j]\n                x[j] = x[i]\n                x[i] = buf"
  },
  {
    "id" : "aa9a54dd-1a12-44db-8828-beea4e69e724",
    "prId" : 2992,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cb8869e-a838-4f87-87e3-ab9c02b913a9",
        "parentId" : null,
        "authorId" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "body" : "Maybe I can just skip this completly... would cause floats, etc. to work at least the for the time being, but...\n",
        "createdAt" : "2013-02-15T21:42:49Z",
        "updatedAt" : "2013-03-04T13:13:53Z",
        "lastEditedBy" : "b0342685-bd89-441f-a04f-0e75db24c07f",
        "tags" : [
        ]
      }
    ],
    "commit" : "66ffc58fb390c3953f9e3047ed9da54329af6baf",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1000,1004 @@            try:\n                # __index__ must return an integer by python rules.\n                pop_size = operator.index(a.item())\n            except TypeError:\n                raise ValueError(\"a must be 1-dimensional or an integer\")"
  }
]