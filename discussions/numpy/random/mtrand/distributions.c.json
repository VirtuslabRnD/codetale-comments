[
  {
    "id" : "28a0d683-2703-4af5-993c-27fa9b95afb1",
    "prId" : 5796,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d5e625c-e487-45e1-bded-c34b7a02507a",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : " There is the corner case where `labs(y - m)` is negative, so maybe the safer thing here is to cast `y - m` to float.\n",
        "createdAt" : "2015-04-24T15:55:44Z",
        "updatedAt" : "2015-04-24T15:55:44Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "bf584305-0a73-4831-b576-416f56b3f62d",
        "parentId" : "3d5e625c-e487-45e1-bded-c34b7a02507a",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Hmm, k is `long`, also gets squared further down (overflow?). I quess this is no worse than it was, but the whole routine might be less than perfect.\n",
        "createdAt" : "2015-04-24T16:12:41Z",
        "updatedAt" : "2015-04-24T16:12:41Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ec8e5c0af892abe25eee4f269bd225dac47414b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +317,321 @@\n  Step50:\n    k = labs(y - m);\n    if ((k > 20) && (k < ((nrq)/2.0 - 1))) goto Step52;\n"
  },
  {
    "id" : "2020f367-dcf5-41a0-a13c-529cab8671e6",
    "prId" : 5858,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27046cd4-37ce-485c-9330-fb898d0215e4",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "`{` on previous line.\n",
        "createdAt" : "2015-05-09T23:41:55Z",
        "updatedAt" : "2015-05-10T10:12:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "f50862ca-eea1-42ad-88ff-7039021099bf",
        "parentId" : "27046cd4-37ce-485c-9330-fb898d0215e4",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "OK, IIRC, this is random.c style ;)\n",
        "createdAt" : "2015-05-09T23:42:33Z",
        "updatedAt" : "2015-05-10T10:12:09Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7f121abb24e19c34246c8ad834dfdd5bd5ce8b2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +201,205 @@            {\n                if (X +Y > 0)\n                {\n                    return X / (X + Y);\n                }"
  },
  {
    "id" : "965f9ec4-edb1-4e2a-b0bc-db901caf668b",
    "prId" : 7740,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e55ba8a1-696c-4758-b87b-caf3efc80a3c",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Google shows a more complete citation.\n\nW. Hörmann and G. Derflinger\nThe transformed rejection method for generating random variables, an alternative to the ratio of uniforms method\nCommunications in Statistics: Simulation and Computation 23(3), 847-860 (1994) \n",
        "createdAt" : "2016-06-13T16:42:12Z",
        "updatedAt" : "2016-06-13T17:41:15Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "27cb8656-06ed-4164-8e8a-0b5701e819c4",
        "parentId" : "e55ba8a1-696c-4758-b87b-caf3efc80a3c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "thats another paper by the same author, likely generalized\nthe exact algorithm was first published in W. Hörmann \nThe transformed rejection method for generating Poisson random variables Insurance: Mathematics and Economics 12, 39-45 (1993)\nI kept it short as you can find the thing by googling the numbers involved so I though the title ie enough ;)\n",
        "createdAt" : "2016-06-13T17:37:49Z",
        "updatedAt" : "2016-06-13T17:41:15Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      },
      {
        "id" : "3fd5dc4d-c414-4c69-ae65-5c654b20b25a",
        "parentId" : "e55ba8a1-696c-4758-b87b-caf3efc80a3c",
        "authorId" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "body" : "updated with a more complete citation\n",
        "createdAt" : "2016-06-13T17:41:40Z",
        "updatedAt" : "2016-06-13T17:41:40Z",
        "lastEditedBy" : "0e0ae9fd-53e5-41a6-8774-29bcec6001df",
        "tags" : [
        ]
      }
    ],
    "commit" : "69fb4f160518ac347efc63dc17ebdf81285c1958",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +501,505 @@}\n\n/*\n * The transformed rejection method for generating Poisson random variables\n * W. Hoermann"
  }
]