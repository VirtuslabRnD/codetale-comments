[
  {
    "id" : "53f14050-d198-451f-8447-c13ada8b1abc",
    "prId" : 21680,
    "prUrl" : "https://github.com/flutter/flutter/pull/21680#pullrequestreview-155593566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b3b47d7-6e90-488f-aa31-e3a11975cde5",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "it's weird that this is called \"generic function type\" (as opposed to say \"general function type\", since it has nothing to do with generics.",
        "createdAt" : "2018-09-14T17:38:09Z",
        "updatedAt" : "2018-09-14T17:38:10Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7535cc96affe4987126769f895a72c4fcd8bc65",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +129,133 @@    - prefer_foreach\n    # - prefer_function_declarations_over_variables # not yet tested\n    - prefer_generic_function_type_aliases\n    - prefer_initializing_formals\n    # - prefer_interpolation_to_compose_strings # not yet tested"
  },
  {
    "id" : "db2d98f2-cad5-43e3-898d-caa8a4f99140",
    "prId" : 25815,
    "prUrl" : "https://github.com/flutter/flutter/pull/25815#pullrequestreview-188886466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6199d743-4f3d-4bf2-adc9-72f8b24fcf7b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "missing comment here",
        "createdAt" : "2018-12-29T00:34:15Z",
        "updatedAt" : "2018-12-29T00:34:15Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "49cd618d-8f98-4e1a-b1b6-39bab815ee60",
        "parentId" : "6199d743-4f3d-4bf2-adc9-72f8b24fcf7b",
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "Created https://github.com/flutter/flutter/pull/25995 to address this.",
        "createdAt" : "2019-01-03T01:59:21Z",
        "updatedAt" : "2019-01-03T01:59:21Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f1be65bb8d94ad6435525fa2e88fe51da9e5208",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +29,33 @@    # allow having TODOs in the code\n    todo: ignore\n    #\n    sdk_version_async_exported_from_core: ignore\n  exclude:"
  },
  {
    "id" : "8237065b-b3a8-4592-b22f-1b3f7a25db3c",
    "prId" : 25922,
    "prUrl" : "https://github.com/flutter/flutter/pull/25922#pullrequestreview-192893974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6e6d803-b172-4e34-b418-b6949d6284c0",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i don't really like this one. it leads to weird code where half the returns return `X` and the other half return `Future<X>`, which is confusing. I'd much rather have the opposite, which is that if you're `async`, you have to return non-Futures, and if you're not, you have to return the exact type.",
        "createdAt" : "2018-12-31T19:59:03Z",
        "updatedAt" : "2019-01-03T07:52:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e7e3453d-1d49-4f10-b16c-463f00acd733",
        "parentId" : "a6e6d803-b172-4e34-b418-b6949d6284c0",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "As `await` schedules a new microtask I'd have said this lint could improve performance. But I don't have benchmarks to validate that.\r\n\r\nThe lint you suggest looks good to me and I will try to implement it.",
        "createdAt" : "2019-01-01T17:27:04Z",
        "updatedAt" : "2019-01-03T07:52:42Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "8297624c-a456-4ae1-a0c2-999aa9b1b88c",
        "parentId" : "a6e6d803-b172-4e34-b418-b6949d6284c0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I think it would make sense for the compiler to optimize away things like \"return await\", certainly. But that's something the compiler can take care of.",
        "createdAt" : "2019-01-15T18:58:32Z",
        "updatedAt" : "2019-01-15T18:58:32Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "e33a6fb6-171b-4995-baa1-6b6b42a0c92d",
        "parentId" : "a6e6d803-b172-4e34-b418-b6949d6284c0",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "I don't think compiler can optimize `return await xxx` to be handled like `return xxx` because doing that will change the semantic of code.\r\n\r\nEvery `await` schedules a microtask (I see several codes using `await null` to release the thread an let another task to do things) and it would be misleading if `await` have a different behaviour depending on the presence of a prepending `return`.",
        "createdAt" : "2019-01-15T22:22:54Z",
        "updatedAt" : "2019-01-15T22:22:54Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "05d1c576bc1d0bc5c747bba0c3d8daa8266fa718",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +156,160 @@    - type_init_formals\n    # - unawaited_futures # too many false positives\n    # - unnecessary_await_in_return # not yet tested\n    - unnecessary_brace_in_string_interps\n    - unnecessary_const"
  }
]