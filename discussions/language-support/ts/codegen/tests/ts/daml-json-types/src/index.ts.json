[
  {
    "id" : "ec8b84e4-910b-4981-b495-e03fdfe915ac",
    "prId" : 4106,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fa097b4-97af-4b48-acb3-05903d52a072",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "This is unfortunately too permissive. It accepts the value `[null]`, which is not the encoding of any value.\r\n\r\nI'll merge it nevertheless and fix it and add a few tests in a follow-up PR.",
        "createdAt" : "2020-01-20T09:23:48Z",
        "updatedAt" : "2020-01-20T09:24:51Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "c739f9c2d91bdb2279010a7ecd86f955f7ad67ec",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +230,234 @@  : jtv.oneOf(\n      jtv.constant([]) as jtv.Decoder<[] | [Exclude<T, null>]>,\n      jtv.tuple([t.decoder()]) as jtv.Decoder<[] | [Exclude<T, null>]>\n  ) as jtv.Decoder<Optional.Inner<T>>\n;"
  },
  {
    "id" : "ac4edd57-c175-4d4d-be3d-91b54233324b",
    "prId" : 4079,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc9fe9b7-dcbb-46ad-a07e-56bc1ccf649b",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Much better. ðŸ˜‰",
        "createdAt" : "2020-01-17T10:44:07Z",
        "updatedAt" : "2020-01-17T11:59:18Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3684c5eb9c15efbbc40610a2dae20c4ed5bb2f3b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +121,125 @@  })\n\nexport const Decimal: Serializable<Decimal> = Numeric(10)\n\n/**"
  },
  {
    "id" : "48514cd1-819e-4bc7-8196-f3d543d6124c",
    "prId" : 3441,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc98c059-55e2-413f-bf4d-e903f529d4d3",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We should switch this to some kind of type that lets you do arithmetic at some point. Otherwise the first thing users are going to do is to convert this to a JS number which defeats the point.",
        "createdAt" : "2019-11-19T08:35:28Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0e5c956b-f34b-46a7-8ab6-3ba297309d07",
        "parentId" : "cc98c059-55e2-413f-bf4d-e903f529d4d3",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I agree. For now, this is \"good enough\" though.",
        "createdAt" : "2019-11-19T09:04:30Z",
        "updatedAt" : "2019-11-19T15:10:10Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "eff993c856bef39dda178c0b0ca7b3cc76f89f26",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@ * to avoid a loss of precision.\n */\nexport type Int = string;\n\n/**"
  }
]