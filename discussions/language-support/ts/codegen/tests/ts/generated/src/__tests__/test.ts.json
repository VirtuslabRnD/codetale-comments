[
  {
    "id" : "854701ab-3c0e-4350-9fef-d94c5aab418a",
    "prId" : 4575,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c295aa2c-cbdd-4c13-89a0-182746305826",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Why do we expect done to be false?",
        "createdAt" : "2020-02-18T14:49:52Z",
        "updatedAt" : "2020-02-18T14:50:45Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "36bfd1b3-574c-43ad-86aa-ede62fc173f1",
        "parentId" : "c295aa2c-cbdd-4c13-89a0-182746305826",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Because the stream is infinite. We'll never be done with it.",
        "createdAt" : "2020-02-18T14:53:45Z",
        "updatedAt" : "2020-02-18T14:53:45Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "b3f85966-7e87-4d02-a8c8-984b46bf5306",
        "parentId" : "c295aa2c-cbdd-4c13-89a0-182746305826",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Ah right. 👍 ",
        "createdAt" : "2020-02-18T15:00:00Z",
        "updatedAt" : "2020-02-18T15:00:01Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb8f98a76ddd91a53fc1396c1041af21a6363001",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +84,88 @@  const next = async () => {\n    const {done, value} = await iterator.next();\n    expect(done).toBe(false);\n    return value;\n  };"
  },
  {
    "id" : "39c2949e-5cc8-4e49-8cf5-d0f14fdf5a0b",
    "prId" : 4563,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc613492-4228-422a-9241-4df850eb99a0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The tests in here could use some cleanup. I'll do that in a separate PR once this one has landed.",
        "createdAt" : "2020-02-18T12:22:44Z",
        "updatedAt" : "2020-02-18T13:12:03Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23d04dd4ca3defd63f5b006b0707b33fb189bcc",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +10,14 @@import * as LibMod from '../daml/daml-tests/Lib/Mod';\n\nconst LEDGER_ID = 'daml2ts-tests';\nconst APPLICATION_ID = 'daml2ts-tests';\nconst SECRET_KEY = 'secret';"
  },
  {
    "id" : "11a15dc2-505c-4953-86f9-52d36d769510",
    "prId" : 4010,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17004582-8bc3-4ffc-b34a-e49e2ac1cb34",
        "parentId" : null,
        "authorId" : null,
        "body" : "🎉 ",
        "createdAt" : "2020-01-10T14:46:07Z",
        "updatedAt" : "2020-01-10T14:46:37Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b5284a5a7154b6d90166eefbdae861e0721cd9e1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +113,117 @@\n  // Alice has another birthday and turns 7.\n  [result, events] = await ledger.exerciseByKey(Main.Person.Birthday, alice6Contract.key, {});\n  expect(result).not.toEqual(alice6Contract.contractId);\n  expect(events).toHaveLength(2);"
  },
  {
    "id" : "646cda31-2be4-4169-b24b-131edde4af98",
    "prId" : 4007,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec048e06-c50a-4520-86fb-a4e074e7e91d",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm planning to add another birthday via `exerciseByKey`. That's why I added the 5 and 6 everywhere.",
        "createdAt" : "2020-01-10T11:08:10Z",
        "updatedAt" : "2020-01-10T11:31:24Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "276671a26fdc402941bb1efb18d93a791374c635",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +77,81 @@    age: '5',\n  };\n  const alice5Key = {_1: alice5.party, _2: alice5.age};\n  const alice5Contract = await ledger.create(Main.Person, alice5);\n  expect(alice5Contract.payload).toEqual(alice5);"
  },
  {
    "id" : "8a076ec3-2c05-47a1-bcb7-0164609b877e",
    "prId" : 3992,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9e9b14b-1fe3-4df7-a6ee-7cc271c45d22",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\n    sumProd: {tag: 'Corge', value: {x:'1', y:'Garlpy'}},\r\n```\r\nLet's add the trailing comma so we don't always get a two-line change whenever we want to add a single line.",
        "createdAt" : "2020-01-09T10:18:34Z",
        "updatedAt" : "2020-01-09T10:44:36Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "44a82c79835717eb07741f129aaf863f2b0aeaf5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +112,116 @@    enumList: [Main.Color.Red, Main.Color.Blue, Main.Color.Yellow],\n    variant: {tag: 'Add', value: {_1:{tag: 'Lit', value: '1'}, _2:{tag: 'Lit', value: '2'}}},\n    sumProd: {tag: 'Corge', value: {x:'1', y:'Garlpy'}}\n  };\n  const allTypesContract = await ledger.create(Main.AllTypes, allTypes);"
  }
]