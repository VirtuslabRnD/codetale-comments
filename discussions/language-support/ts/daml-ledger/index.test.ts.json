[
  {
    "id" : "1a89368d-015e-42f7-92f2-9fa3f9521c00",
    "prId" : 8131,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aaccea4-f3bc-49f4-90e8-8cf8edcc640d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is going to break on release builds where the version is not `0.0.0`. Try setting `DAML_SDK_RELEASE_VERSION` to test this.",
        "createdAt" : "2020-12-03T10:50:06Z",
        "updatedAt" : "2020-12-03T10:50:54Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5a39625f-7fc3-4db8-9e2e-7a98362e161c",
        "parentId" : "5aaccea4-f3bc-49f4-90e8-8cf8edcc640d",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "Looks like this works fine. Tested with different `DAML_SDK_RELEASE_VERSION` and `bazel run //language-support/ts/daml-ledger:test`",
        "createdAt" : "2020-12-03T16:27:11Z",
        "updatedAt" : "2020-12-03T16:27:11Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2669471dddf5c1ac7627c8052b1ff9b796894302",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +73,77 @@\nconst Foo: Template<Foo, string, \"foo-id\"> = {\n  sdkVersion: '0.0.0-SDKVERSION',\n  templateId: \"foo-id\",\n  keyDecoder: jtv.string(),"
  },
  {
    "id" : "828815b8-571e-40d0-9de8-1157bee9b003",
    "prId" : 7404,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "450e3d5f-4907-40ba-9591-ca7b564ec925",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we need to bump the timeout here?",
        "createdAt" : "2020-09-16T08:55:20Z",
        "updatedAt" : "2020-09-16T09:56:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "35243f46-42b2-4faf-820e-bdf2257937c9",
        "parentId" : "450e3d5f-4907-40ba-9591-ca7b564ec925",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "We don't _need_ to, I suppose: I've not seen this fail yet. Call it ~paranoia~ prudence: sleep instructions are always a bit fuzzy in their guarantees, so I prefer to sleep \"significantly\" longer than a timeout I'm testing for. These are milliseconds and we have like 4 lines of code here so it's cutting it really close otherwise. ",
        "createdAt" : "2020-09-16T09:44:24Z",
        "updatedAt" : "2020-09-16T09:56:20Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b4318b65d3ff40751a756b838044db7b29d2aa",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +183,187 @@    stream.on(\"close\", mockClose);\n    mockInstance.serverSend({events: [], offset: '3'});\n    await new Promise(resolve => setTimeout(resolve, reconnectThreshold * 2));\n    mockConstructor.mockClear();\n    mockInstance.serverClose({code: 1, reason: 'test close'});"
  },
  {
    "id" : "292ae453-4451-4f8c-b15c-dc620e6494bc",
    "prId" : 7066,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebdb4413-3408-4b48-a061-2a9dc4ab190a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why the name change? We still seem to call `streamQuery`.",
        "createdAt" : "2020-08-12T07:42:56Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0b6162ac-fe18-465e-bfd6-20e74e246538",
        "parentId" : "ebdb4413-3408-4b48-a061-2a9dc4ab190a",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "These tests are really testing the underlying stream mechanism: what we do if the result is not in the proper format or if the websocket connection drops. They are not specific to any of the public query methods. I suppose replicating those tests for `streamQuery` and `streamFetchByKey` was an acceptable shortcut when there were only two of them, but now that there are four it seemed really pointless to keep testing the same stuff over and over.",
        "createdAt" : "2020-08-14T17:41:14Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "94557293-7f3c-4a61-84dc-2d6205ec5739",
        "parentId" : "ebdb4413-3408-4b48-a061-2a9dc4ab190a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Makes sense, thanks for the explanation!",
        "createdAt" : "2020-08-14T18:31:27Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef0422dc9dbfe8749fff1b56b9a06706cecc569",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +121,125 @@});\n\ndescribe(\"streamSubmit\", () => {\n  test(\"receive unknown message\", () => {\n    const ledger = new Ledger(mockOptions);"
  },
  {
    "id" : "a08dc08d-55fa-4573-a06d-43ad8972c43b",
    "prId" : 7066,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe6c256-80d8-40b4-be26-15ec6268d613",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why did you change this?",
        "createdAt" : "2020-08-12T08:00:59Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "95501d19-666d-473b-a469-4152e17d4ae0",
        "parentId" : "abe6c256-80d8-40b4-be26-15ec6268d613",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Because this is testing the code in the underlying `streamSubmit` function, so the external function we call doesn't matter here, and I wanted to make that explicit, rather than just redo the exact same test with each of the four public methods, all targeted specifically to testing the exact same behaviour of the underlying private method.",
        "createdAt" : "2020-08-14T17:42:59Z",
        "updatedAt" : "2020-09-08T14:23:47Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef0422dc9dbfe8749fff1b56b9a06706cecc569",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +153,157 @@  test(\"receive errors\", () => {\n    const ledger = new Ledger(mockOptions);\n    const stream = ledger.streamFetchByKey(Foo, fooKey);\n    stream.on(\"change\", mockChange);\n    const restoreConsole = mockConsole();"
  },
  {
    "id" : "3820beb3-ea2e-4e2d-8492-a72bd7ae4885",
    "prId" : 5416,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d3d021-cdb4-4009-ba04-72f69f8c9d48",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Can you please leave a hint why we are not reconnecting?",
        "createdAt" : "2020-04-14T09:43:03Z",
        "updatedAt" : "2020-04-14T10:01:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "414b125b-0298-4be6-b075-14591f34a309",
        "parentId" : "37d3d021-cdb4-4009-ba04-72f69f8c9d48",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "added a hint.",
        "createdAt" : "2020-04-14T09:55:02Z",
        "updatedAt" : "2020-04-14T10:01:56Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "66ada6cd985bbd0ed3e23a2cc8ac9b3c1ff91066",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +183,187 @@    // check that the client doesn't try to reconnect again.  it should only reconnect if it\n    // received an event confirming the stream is live again, i.e. {events: [], offset: '3'}\n    mockInstance.serverClose({code: 1, reason: 'test close'});\n    expect(mockConstructor).not.toHaveBeenCalled();\n  });"
  },
  {
    "id" : "61c38033-a2a5-40be-befc-ad9774718c95",
    "prId" : 5180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef308a94-1fe9-414f-8e2e-caa7b6952f6e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Jest seems to have mocks for everything. Good find!",
        "createdAt" : "2020-03-26T08:36:57Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@import * as jtv from \"@mojotech/json-type-validation\";\nimport type { EventEmitter } from 'events';\nimport mockConsole from \"jest-mock-console\";\n\nconst mockChange = jest.fn();"
  },
  {
    "id" : "2d233a99-7055-45a5-a973-44781e2436a2",
    "prId" : 5180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91807fdc-ceee-43cd-bd4f-66b22ab673ba",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Testing `streamFetchByKey` on a template without a key type doesn't really make sense. Let's fix the in a followup PR.",
        "createdAt" : "2020-03-31T15:09:53Z",
        "updatedAt" : "2020-03-31T15:39:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c7046edd-7f4e-4de3-9dfb-895597f9608f",
        "parentId" : "91807fdc-ceee-43cd-bd4f-66b22ab673ba",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I added a key.",
        "createdAt" : "2020-03-31T15:24:26Z",
        "updatedAt" : "2020-03-31T15:39:03Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1750ad64940421aef165938f3ec54231c3b408e",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@});\n\ndescribe(\"streamFetchByKey\", () => {\n  test(\"receive no event\", () => {\n    const ledger = new Ledger(mockOptions);"
  }
]