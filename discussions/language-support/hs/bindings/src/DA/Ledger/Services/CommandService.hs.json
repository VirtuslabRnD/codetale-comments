[
  {
    "id" : "08522e63-3c39-4a68-859f-9aaa1c167011",
    "prId" : 2300,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44097038-ccb4-4b0e-8246-9721b9bbacc9",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "FYI, `Data.Functor` and `Contol.Monad` export\r\n```haskell\r\nvoid :: Functor f => f a -> f ()\r\nvoid = fmap (const ())\r\n```\r\nYou might use that.",
        "createdAt" : "2019-07-29T09:16:03Z",
        "updatedAt" : "2019-07-29T09:23:30Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "6881f11ae2ea90b93eeb3f7fff2caf129a2d7f9d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +28,32 @@        rpc (ClientNormalRequest request timeout emptyMdm)\n            >>= unwrapWithInvalidArgument\n            <&> fmap (\\LL.SubmitAndWaitForTransactionIdResponse{} -> ())\n\nsubmitAndWaitForTransactionId :: Commands -> LedgerService (Either String TransactionId)"
  },
  {
    "id" : "0d618a7a-64b6-4a54-98c3-423906784779",
    "prId" : 2300,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3fc7364-9252-4e39-8128-11d7096b877e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We have quite a few functions returning `LedgerService (Either _ _)`. Would it make sense to move the error handling capabilities into the `LedgerService` monad?",
        "createdAt" : "2019-07-29T09:22:21Z",
        "updatedAt" : "2019-07-29T09:23:30Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "0488f0e9-350e-4c66-b0c9-da37ee50567d",
        "parentId" : "d3fc7364-9252-4e39-8128-11d7096b877e",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "I don't think so.",
        "createdAt" : "2019-07-29T13:45:24Z",
        "updatedAt" : "2019-07-29T13:45:24Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "6881f11ae2ea90b93eeb3f7fff2caf129a2d7f9d",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +54,58 @@                either (fail . show) (return . Right) $ raiseResponse response\n            Left details ->\n                return $ Left details\n  where\n      raiseResponse = \\case"
  },
  {
    "id" : "1da52bb9-cf26-44cb-b19e-13ec0767b7b9",
    "prId" : 2294,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8bed43f-57aa-43e4-be8c-4e293d481c0d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You can simply this case to  `bimap (show . unStatusDetails) (const ())` which makes it easier to see what is going on here.",
        "createdAt" : "2019-07-26T11:03:23Z",
        "updatedAt" : "2019-07-26T11:12:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4c88c86e-722b-4d4c-8f6d-113dca47320a",
        "parentId" : "b8bed43f-57aa-43e4-be8c-4e293d481c0d",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Didn't need `bimap`, just `fmap`, after the change for your following comment",
        "createdAt" : "2019-07-26T12:44:26Z",
        "updatedAt" : "2019-07-26T12:44:26Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ec24e79f3af8f63b25e4d8163a78a9f7f9bfb9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +28,32 @@            >>= unwrapWithInvalidArgument\n            >>= \\case\n            Right LL.SubmitAndWaitForTransactionIdResponse{} -> return $ Right ()\n            Left details -> return $ Left $ show $ unStatusDetails details\n"
  },
  {
    "id" : "60efb78d-823f-4afd-ad94-8949a5b848dc",
    "prId" : 2294,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcef9d30-9c25-412c-94b4-7256f92bbdaa",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This pattern seems to be repeated quite often. Maybe we should factor it out into `(a -> IO b) -> Either StatusDetails a -> IO (Either String b)`? Or given that it seems like the only thing we ever do to the `StatusDetails` field is to call `show . unStatusDetails` on it, this could also be moved to `unwrapWithInvalidArgument` and the helper for this turns into `traverse`.",
        "createdAt" : "2019-07-26T11:08:18Z",
        "updatedAt" : "2019-07-26T11:12:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "98d8f132-437a-4084-b01e-1060540ce91c",
        "parentId" : "bcef9d30-9c25-412c-94b4-7256f92bbdaa",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Thanks. I moved the call to  `unStatusDetails` into `unwrapWithInvalidArgument`\r\nand made some other trivial simplifications.\r\nNext PR",
        "createdAt" : "2019-07-26T12:43:15Z",
        "updatedAt" : "2019-07-26T12:43:15Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ec24e79f3af8f63b25e4d8163a78a9f7f9bfb9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +41,45 @@            >>= unwrapWithInvalidArgument\n            >>= \\case\n            Right response -> do\n                let LL.SubmitAndWaitForTransactionIdResponse{..} = response\n                return $ Right $ TransactionId submitAndWaitForTransactionIdResponseTransactionId"
  }
]