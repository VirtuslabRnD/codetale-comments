[
  {
    "id" : "46e66ce3-c78f-415a-b860-1ed1b0b88b6b",
    "prId" : 6476,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c82b65fe-5779-4a73-a030-9ce92f9fcbfd",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I'm not sure of what is considered a good approach in JavaDoc, but for my limited knowledge of HTML I'd prefer either making full paragraphs or use `<br /><br />`. Feel free to make it part of a separate PR if you think it's too much work to sneak into this one.",
        "createdAt" : "2020-06-24T10:55:53Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "5a5a029b-ca4c-48ac-8f8d-adeb3ec65605",
        "parentId" : "c82b65fe-5779-4a73-a030-9ce92f9fcbfd",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "The IntelliJ autoformatter inserted these, so I'm inclined to just roll with it.",
        "createdAt" : "2020-06-24T11:04:36Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "4dcaae3a-077a-4d8e-82c9-5ec058218325",
        "parentId" : "c82b65fe-5779-4a73-a030-9ce92f9fcbfd",
        "authorId" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "body" : "Seems to in-line with the docs: https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html#format.",
        "createdAt" : "2020-06-24T11:13:01Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "tags" : [
        ]
      },
      {
        "id" : "cd5fc18a-a6c0-4a6e-a965-d4d53f5d718c",
        "parentId" : "c82b65fe-5779-4a73-a030-9ce92f9fcbfd",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I will contain my surprise at Oracle suggesting that non-well-formed XML is the way to go and quietly mark this as solved.",
        "createdAt" : "2020-06-24T11:23:32Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10fdc1e12c42decf6d14f2b19ac0a3cb4c7f548",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@ *     <li>Retrieve one of the clients by using a getter, e.g. {@link DamlLedgerClient#getActiveContractSetClient()}</li>\n * </ol>\n * <p>\n * Alternatively to {@link DamlLedgerClient#newBuilder(String, int)}, you can use {@link DamlLedgerClient#newBuilder(NettyChannelBuilder)}\n * to make sure you can specify additional properties for the channel you're building, such as the maximum inbound message size."
  },
  {
    "id" : "154a60f3-ea15-4e54-92fb-ff092a5a3f8f",
    "prId" : 6476,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7b4c635-979c-40ce-9920-d3bfa24b9670",
        "parentId" : null,
        "authorId" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "body" : "This seems like a long time... :)",
        "createdAt" : "2020-06-24T11:14:33Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "tags" : [
        ]
      },
      {
        "id" : "89e4a55e-278a-46c4-a212-746b07e8589f",
        "parentId" : "f7b4c635-979c-40ce-9920-d3bfa24b9670",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "It's way shorter then what it replaces. :wink: ",
        "createdAt" : "2020-06-24T11:21:23Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "85c85e0d-6e71-40ba-a784-8451f3a7685c",
        "parentId" : "f7b4c635-979c-40ce-9920-d3bfa24b9670",
        "authorId" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "body" : "True, however wouldn't the original code throw after a second?",
        "createdAt" : "2020-06-24T11:26:12Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "9adff756-f841-4fe6-bdef-7ee669a33ffe",
        "tags" : [
        ]
      },
      {
        "id" : "497e9ef4-823b-4091-a004-7b74d947b0ea",
        "parentId" : "f7b4c635-979c-40ce-9920-d3bfa24b9670",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Nah, `awaitTermination` just returns `false`, which then loops around for another attempt.",
        "createdAt" : "2020-06-24T12:33:09Z",
        "updatedAt" : "2020-06-24T13:24:51Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "d10fdc1e12c42decf6d14f2b19ac0a3cb4c7f548",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +232,236 @@    public void close() throws Exception {\n        channel.shutdownNow();\n        channel.awaitTermination(Long.MAX_VALUE, TimeUnit.SECONDS);\n        pool.close();\n    }"
  },
  {
    "id" : "71c78e9c-7cf2-4ecc-a0e7-dba543b86fa1",
    "prId" : 3788,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b2e1041-b5df-4293-9521-1cc83b1a8258",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "```suggestion\r\n *     <li>Specify the expected ledger identifier, {@link SslContext}, and/or access token, depending on your needs</li>\r\n```",
        "createdAt" : "2019-12-09T14:09:54Z",
        "updatedAt" : "2019-12-09T14:11:27Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "e467ea9d-47aa-42af-85d0-28c39e6c1f56",
        "parentId" : "0b2e1041-b5df-4293-9521-1cc83b1a8258",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Or maybe `an`?",
        "createdAt" : "2019-12-09T14:11:52Z",
        "updatedAt" : "2019-12-09T14:11:52Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "fd0ab115-2692-409b-b005-326cbc59811f",
        "parentId" : "0b2e1041-b5df-4293-9521-1cc83b1a8258",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/3793",
        "createdAt" : "2019-12-09T14:54:38Z",
        "updatedAt" : "2019-12-09T14:54:38Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a34a79b87b24dd28ca555088ccd283ee11d67f60",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +20,24 @@ * <ol>\n *     <li>Create an instance of a {@link Builder} using {@link DamlLedgerClient#newBuilder(String, int)}\n *     <li>Specify and expected ledger identifier, {@link SslContext}, and/or access token, depending on your needs</li>\n *     <li>Invoke {@link Builder#build()} to finalize and construct a {@link DamlLedgerClient}</li>\n *     <li>Call the method {@link DamlLedgerClient#connect()} to initialize the clients for that particular ledger</li>"
  },
  {
    "id" : "7a3bab23-4b8c-4eff-b673-bd974767cb96",
    "prId" : 3788,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d34e6731-5534-4878-a1c1-0441e946f207",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Do you think it's worth capturing this in a test?",
        "createdAt" : "2019-12-09T14:11:11Z",
        "updatedAt" : "2019-12-09T14:11:27Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "9d2367d6-f76f-49c5-8e36-baf7178dea26",
        "parentId" : "d34e6731-5534-4878-a1c1-0441e946f207",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "(Not) addressed by https://github.com/digital-asset/daml/pull/3793\r\nThis constructor is deprecated and our Scala tests are compiled with fatal warning (which unfortunately cannot be adjusted to whitelist given warnings).",
        "createdAt" : "2019-12-09T14:55:39Z",
        "updatedAt" : "2019-12-09T14:55:39Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a34a79b87b24dd28ca555088ccd283ee11d67f60",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +152,156 @@        this.channel = channel;\n        this.expectedLedgerId = expectedLedgerId.orElse(null);\n        this.accessToken = Optional.empty();\n    }\n"
  }
]