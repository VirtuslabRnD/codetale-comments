[
  {
    "id" : "b2e6601f-17b4-4a79-8090-a902ba160814",
    "prId" : 8268,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c733cadf-af5a-44eb-b231-895f25a57924",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "afaict, this is required as a side effect of https://github.com/scalaz/scalaz/pull/2076/files. @S11001001 Is there a better way of solving this?",
        "createdAt" : "2020-12-11T18:07:56Z",
        "updatedAt" : "2020-12-11T18:07:57Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "706bf928aa420cc39d7bdacf96c71b887476049e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +57,61 @@    logger.debug(\n      \"[tx {}] subscription start with offset template selector {}, start {}, end {}\",\n      Party.unwrap(party),\n      templateSelector,\n      startOffset,"
  },
  {
    "id" : "367aff34-83d3-4037-861d-7b57dfe3afed",
    "prId" : 6981,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "089ca3e4-3e7c-4d37-9414-31ab535610af",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Is this for backwards compatibility? If so maybe useful to add a comment?",
        "createdAt" : "2020-08-04T14:20:42Z",
        "updatedAt" : "2020-08-04T14:23:44Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "824454a6-9842-47ff-be06-fa9caaf3c7da",
        "parentId" : "089ca3e4-3e7c-4d37-9414-31ab535610af",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "It will become explicit in #6907 (it's to match a HOF signature), but I can't do that properly in this PR without a lot more mess.",
        "createdAt" : "2020-08-04T14:26:22Z",
        "updatedAt" : "2020-08-04T14:26:22Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "83c3862b-3eda-490f-8988-586afe17000c",
        "parentId" : "089ca3e4-3e7c-4d37-9414-31ab535610af",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Makes sense, thanks for the explanation and also thanks for splitting up the changes!",
        "createdAt" : "2020-08-04T14:27:56Z",
        "updatedAt" : "2020-08-04T14:27:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccc8866f02a58e84e4eb5a1152cf14b0e1ad68f1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +100,104 @@        .via(tracking)\n\n  private def createRetry[C](retryInfo: RetryInfo[C], ignored: Any): SubmitRequest = {\n    if (retryInfo.request.commands.isEmpty) {\n      logger.warn(s\"Retrying with empty commands for {}\", retryInfo.request)"
  }
]