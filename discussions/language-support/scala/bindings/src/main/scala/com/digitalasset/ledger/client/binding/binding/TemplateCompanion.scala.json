[
  {
    "id" : "2d01fffb-9dd1-4a7b-ab45-07bbe33c4c5d",
    "prId" : 7031,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26ed0d95-5744-4af1-aee3-425228efa8d6",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is not part of the public API right? so this is not a breaking change",
        "createdAt" : "2020-08-05T18:26:42Z",
        "updatedAt" : "2020-08-05T20:04:11Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "57b9974d-1963-4d23-ae29-f3b828db4f2f",
        "parentId" : "26ed0d95-5744-4af1-aee3-425228efa8d6",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Right.",
        "createdAt" : "2020-08-05T18:40:49Z",
        "updatedAt" : "2020-08-05T20:04:11Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "83f1bedcc0607520926f97b79e80c51fad2fbbf1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +82,86 @@\n  protected final def ` exercise`[ExOn, Out](\n      actor: Primitive.Party,\n      receiver: ExOn,\n      choiceId: String,"
  },
  {
    "id" : "b5b5314e-5b9f-458e-a76d-e7b673e804dc",
    "prId" : 6660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa6fe57-7f7b-4af2-b412-0db3a0568049",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "any specific reason why it is `key` and not `Key`? Is it because it is clashing with `final case class Key...`?",
        "createdAt" : "2020-07-09T17:06:17Z",
        "updatedAt" : "2020-07-09T17:06:17Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "926fd2a7-31c4-4dcf-b880-6769dce41036",
        "parentId" : "dfa6fe57-7f7b-4af2-b412-0db3a0568049",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Yes, or a module `Key`.",
        "createdAt" : "2020-07-09T17:08:25Z",
        "updatedAt" : "2020-07-09T17:08:25Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "8193c1b9-552c-43aa-8ff6-67b9f4470b5b",
        "parentId" : "dfa6fe57-7f7b-4af2-b412-0db3a0568049",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "I see what you mean. No, the `final case class Key` explicitly written here cannot clash with `type Key` that might be written here. But you're allowed to have types or modules named `Key`. That's also why we have `type ContractId` in `TemplateCompanion` instead of the originally planned `type Id`: you're allowed to use `Id` as your own type name, but `ContractId` is reserved so there is no danger of collision.",
        "createdAt" : "2020-07-09T17:12:24Z",
        "updatedAt" : "2020-07-09T17:13:04Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "3873568005f1a9f2194e839fa9a92f895e3b1304",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +39,43 @@\n  /** The template's key type, or [[Nothing]] if there is no key type. */\n  type key\n\n  /** Prepare an exercise-by-key Update. */"
  }
]