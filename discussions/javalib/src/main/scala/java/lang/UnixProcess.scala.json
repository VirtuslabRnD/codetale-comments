[
  {
    "id" : "0ea6800a-272f-420f-a7dd-bba3cfaeb7eb",
    "prId" : 1362,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1362#pullrequestreview-629508671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74bf251c-47aa-44cd-a3ce-97a8b332a6a2",
        "parentId" : null,
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "This is a second generation, picky mode, observation, not meant\r\nto hold up the merge of the PR.\r\n\r\nThe distinction between the errno intended by 'err` and `e`\r\nis pretty fine.  Given the path that got us to having two subtlety \r\ndifferent errnos, I suggest making it easier for future readers\r\nto determine, at the point of reading,  which one is meant. \r\n\r\nSomething like:\r\n```\r\nimport scala.scalanative.libc.{errno => libcErrno}\r\nimport scala.scalanative.posix.{\r\n  fcntl,\r\n  pthread,\r\n  signal,\r\n  sys,\r\n  time,\r\n  unistd,\r\n  errno => posixErrno\r\n}\r\n\r\n```\r\nEric, If you agree with the concept but do not have time/energy to make\r\nthe fix in this PR.  I can alway submit a followup PR.  Let he/she who proposes, dispose (An old Digital Equipment Corporation saying/principal)\r\nto keep work on a given item from expanding without end and consuming the person doing the original work with other people's requirements).\r\n",
        "createdAt" : "2021-04-06T17:28:48Z",
        "updatedAt" : "2021-04-30T02:00:33Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "5bf57c0c-dffc-4894-8693-d38aaca33f66",
        "parentId" : "74bf251c-47aa-44cd-a3ce-97a8b332a6a2",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I am just removing the `signal` import and not changing the other anything else. I think that is the correct action.",
        "createdAt" : "2021-04-06T17:51:39Z",
        "updatedAt" : "2021-04-30T02:00:33Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "e5172314-2de1-4db2-9450-65e6ba2d4607",
        "parentId" : "74bf251c-47aa-44cd-a3ce-97a8b332a6a2",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "I think working the errno is out of scope. Maybe they should be `cerr` and `perr` but without the extra imports to bring more things into scope.",
        "createdAt" : "2021-04-07T00:33:59Z",
        "updatedAt" : "2021-04-30T02:00:33Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "6c95dc42-12bf-47d1-86ad-81fc01fc361c",
        "parentId" : "74bf251c-47aa-44cd-a3ce-97a8b332a6a2",
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "Understood & agreed; minimal changes and those for only the current topic.\r\n\r\nI will add UnixProcess.scala to the list of places I hope to never visit....  ",
        "createdAt" : "2021-04-07T00:38:45Z",
        "updatedAt" : "2021-04-30T02:00:33Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "941a4d0e9c88a56a121fb2150e87e01bb2415ecc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +7,11 @@import scala.scalanative.unsigned._\nimport scala.scalanative.unsafe._\nimport scala.scalanative.libc.{errno => err}\nimport err.errno\nimport scala.scalanative.posix.{"
  }
]