[
  {
    "id" : "7f4a30d2-c8dd-4f68-a7a4-d5b765003fb7",
    "prId" : 606,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/606#pullrequestreview-31015450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "562bbc19-0e6f-4f91-822f-ca45c4a9f23c",
        "parentId" : null,
        "authorId" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "body" : "Not sure if using `stdlib.getenv` here is better. It would avoid allocation of the map in most cases.",
        "createdAt" : "2017-04-03T16:19:41Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "tags" : [
        ]
      },
      {
        "id" : "7dade88f-0a1c-495a-9d12-ce610c906063",
        "parentId" : "562bbc19-0e6f-4f91-822f-ca45c4a9f23c",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Found this in Harmony - maybe useful for MacOS?\r\n```\r\n#if defined(MACOSX)\r\n#include <crt_externs.h>\r\n#define environ (*_NSGetEnviron())\r\n#else\r\nextern char **environ;\r\n#endif\r\n```",
        "createdAt" : "2017-04-03T22:02:26Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "6d561b28-5b80-472f-bb22-d7189d3edbec",
        "parentId" : "562bbc19-0e6f-4f91-822f-ca45c4a9f23c",
        "authorId" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "body" : "So far it seems to work fine on Mac. But I'd be happy to add the additional setup code",
        "createdAt" : "2017-04-04T02:28:25Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "tags" : [
        ]
      },
      {
        "id" : "5ae03dac-6851-408b-bc7b-09b421be6cd1",
        "parentId" : "562bbc19-0e6f-4f91-822f-ca45c4a9f23c",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "No need to add extra code if it is not needed.",
        "createdAt" : "2017-04-04T12:19:13Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "3b2539bc-62bd-4bb6-a17a-6989ceb68af4",
        "parentId" : "562bbc19-0e6f-4f91-822f-ca45c4a9f23c",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "I'd say `envVars.get` is fine the way it is. Micro-optimising things is usually not a good idea. ",
        "createdAt" : "2017-04-05T10:53:27Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ca3f6f11b41a94de3bda710911218863225b8d3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +33,37 @@\n  def getenv(): Map[String, String] = envVars\n  def getenv(key: String): String   = envVars.get(key)\n\n  def nanoTime(): scala.Long = time.scalanative_nano_time"
  },
  {
    "id" : "6975a3a9-03f7-41db-bea4-d8c4387acd11",
    "prId" : 606,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/606#pullrequestreview-30564962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64513bcd-7d7a-4add-9db9-4bff596548f2",
        "parentId" : null,
        "authorId" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "body" : "Made a comment on #367 since it looks like the reason this workaround is needed.",
        "createdAt" : "2017-04-03T16:24:21Z",
        "updatedAt" : "2017-04-05T20:47:40Z",
        "lastEditedBy" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ca3f6f11b41a94de3bda710911218863225b8d3",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +45,49 @@  private lazy val envVars: Map[String, String] = {\n    // workaround since `while(ptr(0) != null)` causes segfault\n    def isDefined(ptr: Ptr[CString]): Boolean = {\n      val s: CString = ptr(0)\n      s != null"
  },
  {
    "id" : "ef81d7af-a97d-4af3-805d-008e99d7b882",
    "prId" : 591,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/591#pullrequestreview-31014647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13545cf2-1844-4652-8dd2-dc7037780bd6",
        "parentId" : null,
        "authorId" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "body" : "Scala Native",
        "createdAt" : "2017-03-28T17:44:54Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "tags" : [
        ]
      },
      {
        "id" : "fe82fcd8-0c21-4332-9664-8beeb9cc0b5f",
        "parentId" : "13545cf2-1844-4652-8dd2-dc7037780bd6",
        "authorId" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "body" : "sysProps.setProperty(\"java.vm.specification.vendor\", \"Scala Native\")",
        "createdAt" : "2017-03-29T15:14:08Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "tags" : [
        ]
      },
      {
        "id" : "a030c6c6-ad25-431d-9eb6-6c67b755eebc",
        "parentId" : "13545cf2-1844-4652-8dd2-dc7037780bd6",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "We do not strictly adhere to JVM requirements, only to Scala requirements. But at the same time seeing different values there might confuse the apps that previously were never run outside the reference environment. We should keep it to be \"Oracle Corporation\", given that we strive for reasonable source compatibility wrt JDK 8.",
        "createdAt" : "2017-04-05T10:48:20Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "22a738e8b340af2978ddc4409dc335585fd05dcf",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +31,35 @@    sysProps.setProperty(\"java.version\", \"1.8\")\n    sysProps.setProperty(\"java.vm.specification.version\", \"1.8\")\n    sysProps.setProperty(\"java.vm.specification.vendor\", \"Oracle Corporation\")\n    sysProps.setProperty(\"java.vm.specification.name\",\n                         \"Java Virtual Machine Specification\")"
  },
  {
    "id" : "2e5702f4-c8e1-4c3c-abb8-b63bf348d1b3",
    "prId" : 591,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/591#pullrequestreview-30506561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "410ec830-4a3a-4563-9ba3-b2c5cf4f7d65",
        "parentId" : null,
        "authorId" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "body" : "Does Windows provide a way to override this via an environment variable? Not having the same behavior of parsing LANG by default feels wrong.",
        "createdAt" : "2017-04-03T12:45:41Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "tags" : [
        ]
      },
      {
        "id" : "1800db5a-c8cc-406d-a95a-bb086624d064",
        "parentId" : "410ec830-4a3a-4563-9ba3-b2c5cf4f7d65",
        "authorId" : "74d14712-a7ea-4a53-bbe5-6783ae0afd1f",
        "body" : "Windows doesn't provide locale through any environment variables. User language can be changed in the \"Control Panel\" and we can fetch it using WinAPI.",
        "createdAt" : "2017-04-03T12:49:14Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "74d14712-a7ea-4a53-bbe5-6783ae0afd1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "22a738e8b340af2978ddc4409dc335585fd05dcf",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +44,48 @@      sysProps.setProperty(\"file.separator\", \"\\\\\")\n      sysProps.setProperty(\"path.separator\", \";\")\n      val userLang    = fromCString(Platform.windowsGetUserLang())\n      val userCountry = fromCString(Platform.windowsGetUserCountry())\n      sysProps.setProperty(\"user.language\", userLang)"
  },
  {
    "id" : "29aceb09-ab4b-48e0-8f4b-ab631376c6e5",
    "prId" : 591,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/591#pullrequestreview-30597893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d5c283-e37b-4629-b36d-5c52c45f3704",
        "parentId" : null,
        "authorId" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "body" : "Ideally this locale parsing code should live in Locale.fromLanguageTag, should we create a ticket for that?",
        "createdAt" : "2017-04-03T12:47:31Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "d1cbb5a4-1605-48d2-8efe-eeb6295c931f",
        "tags" : [
        ]
      },
      {
        "id" : "6aed6dd9-0c55-4525-b644-01b591173dc9",
        "parentId" : "37d5c283-e37b-4629-b36d-5c52c45f3704",
        "authorId" : "74d14712-a7ea-4a53-bbe5-6783ae0afd1f",
        "body" : "That is a nice idea, would make the code easier to read.",
        "createdAt" : "2017-04-03T12:50:19Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "74d14712-a7ea-4a53-bbe5-6783ae0afd1f",
        "tags" : [
        ]
      },
      {
        "id" : "857673d5-e915-4985-a050-0ac4d0971a5a",
        "parentId" : "37d5c283-e37b-4629-b36d-5c52c45f3704",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "There is some parsing code in Apache Harmony - I guess I should have added that method implementation in the previous PR. There is a test setup and it is pretty much the reverse of toString.",
        "createdAt" : "2017-04-03T18:35:40Z",
        "updatedAt" : "2017-04-10T21:46:57Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "22a738e8b340af2978ddc4409dc335585fd05dcf",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +54,58 @@      val userLocale = getenv(\"LANG\")\n      if (userLocale != null) {\n        val userLang = userLocale.takeWhile(_ != '_')\n        // this mess will be updated when Regexes get implemented\n        val userCountry = userLocale"
  }
]