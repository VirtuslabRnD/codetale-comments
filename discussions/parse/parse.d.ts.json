[
  {
    "id" : "de59db9b-99b6-490a-901f-93158863d08e",
    "prId" : 5489,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b079a7f-9acb-4338-97b4-83906db24d31",
        "parentId" : null,
        "authorId" : "1609933c-6bf0-431a-832a-25b28924fee2",
        "body" : ":( These are all just empty besides optional at?\n",
        "createdAt" : "2015-08-24T21:56:32Z",
        "updatedAt" : "2015-08-25T19:22:21Z",
        "lastEditedBy" : "1609933c-6bf0-431a-832a-25b28924fee2",
        "tags" : [
        ]
      }
    ],
    "commit" : "52d4af6fdc464ad803a387597c5efed838c7ac7c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +462,466 @@        interface ResetOptions extends SilentOption { }\n\n        interface SortOptions extends SilentOption { }\n    }\n"
  },
  {
    "id" : "368a0cff-c1cb-4f98-9e77-2312e019e39e",
    "prId" : 9987,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9c4cd12-fda1-4608-8248-8432c20b009b",
        "parentId" : null,
        "authorId" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "body" : "Is the spelling correct? `clazz` or `class`?\n",
        "createdAt" : "2016-07-06T18:16:34Z",
        "updatedAt" : "2016-07-12T16:31:22Z",
        "lastEditedBy" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "tags" : [
        ]
      },
      {
        "id" : "38ad2fae-c1c3-4da3-9778-6eea65ee5052",
        "parentId" : "d9c4cd12-fda1-4608-8248-8432c20b009b",
        "authorId" : "fc1fd66a-6f05-4ea3-b2c1-ec4028438d20",
        "body" : "All correct: I did not want to use a key word as parameter name (can you even do that in typescript?), so I used a classical Java tactic and named it clazz.\n",
        "createdAt" : "2016-07-07T09:37:16Z",
        "updatedAt" : "2016-07-12T16:31:22Z",
        "lastEditedBy" : "fc1fd66a-6f05-4ea3-b2c1-ec4028438d20",
        "tags" : [
        ]
      }
    ],
    "commit" : "802aa924e4b994958364b12af1a0e0a25e22e7a0",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +325,329 @@        static saveAll<T extends Object>(list: T[], options?: Object.SaveAllOptions): Promise<T[]>;\n\n        static registerSubclass<T extends Object>(className: string, clazz: new (options?: any) => T): void;\n\n        initialize(): void;"
  },
  {
    "id" : "e1b17d92-f4f7-4e8b-83d9-940c9beda448",
    "prId" : 9987,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aea1d12-e9f1-4a15-9999-a086fbca10cb",
        "parentId" : null,
        "authorId" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "body" : "why `any`?\n",
        "createdAt" : "2016-07-06T21:16:04Z",
        "updatedAt" : "2016-07-12T16:31:22Z",
        "lastEditedBy" : "1dafe895-0dee-4056-9e2a-aadb53c1825d",
        "tags" : [
        ]
      },
      {
        "id" : "cefbd769-38f5-48aa-b8d1-b2e64e159bd4",
        "parentId" : "6aea1d12-e9f1-4a15-9999-a086fbca10cb",
        "authorId" : "fc1fd66a-6f05-4ea3-b2c1-ec4028438d20",
        "body" : "From the [docs](https://parse.com/docs/js/api/classes/Parse.Cloud.FunctionResponse.html):\n\n> If success is called, will return a successful response with the optional argument to the caller.\n\nAs a matter of fact, one can pass basically any object to the caller, for example [the official docs call `success` with a `float` and `error` with a `string`](https://parse.com/docs/cloudcode/guide#cloud-code-cloud-functions).\n",
        "createdAt" : "2016-07-07T09:49:48Z",
        "updatedAt" : "2016-07-12T16:31:22Z",
        "lastEditedBy" : "fc1fd66a-6f05-4ea3-b2c1-ec4028438d20",
        "tags" : [
        ]
      }
    ],
    "commit" : "802aa924e4b994958364b12af1a0e0a25e22e7a0",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +856,860 @@\n        interface FunctionResponse {\n            success?: (response: any) => void;\n            error?: (response: any) => void;\n        }"
  }
]