[
  {
    "id" : "c5008ce5-75c0-415e-8ed4-d3c17ab224e5",
    "prId" : 8422,
    "prUrl" : "https://github.com/apache/kafka/pull/8422#pullrequestreview-387715433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06c2cf7a-450f-4e40-a710-ee6b51e04840",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Why do we want the starting offset to be 0 for message version 2?",
        "createdAt" : "2020-04-04T14:58:49Z",
        "updatedAt" : "2020-04-04T16:50:41Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "d4aabbe2-7289-4afb-adae-5e980e77b60d",
        "parentId" : "06c2cf7a-450f-4e40-a710-ee6b51e04840",
        "authorId" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "body" : "That's a good question which I should have discussed. v2 batches should be created with relative offsets/baseOffset 0, and then they should be stamped in validateMessagesAndAssignOffsetsCompressed. If we use a startingOffset of 42 we generate a batch that will not pass validation as the relative offset of its first message is 42. A better solution is to have a startingOffset of 42 in the stamping phase and a starting  offset of 0 as the baseOffset for the builder (all of the LogTest code uses 0 for multiple batches).",
        "createdAt" : "2020-04-04T15:35:02Z",
        "updatedAt" : "2020-04-04T16:50:41Z",
        "lastEditedBy" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "tags" : [
        ]
      },
      {
        "id" : "c8d9e0dc-26e7-46fc-b169-746efd82e61d",
        "parentId" : "06c2cf7a-450f-4e40-a710-ee6b51e04840",
        "authorId" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "body" : "I adjusted the comment as the benchmark will mutate the batch and causing failures in later iterations. Starting with baseOffset 0 solves this problem in a way which does not require `@Setup(Level.Invocation)` which has numerous gotchas with respect to accurate measurements.",
        "createdAt" : "2020-04-04T16:15:30Z",
        "updatedAt" : "2020-04-04T16:50:41Z",
        "lastEditedBy" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "tags" : [
        ]
      },
      {
        "id" : "4aec448f-4816-4ec7-a968-528bb76cc033",
        "parentId" : "06c2cf7a-450f-4e40-a710-ee6b51e04840",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Did we miss a `as` after `0`?",
        "createdAt" : "2020-04-04T16:30:15Z",
        "updatedAt" : "2020-04-04T16:50:41Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "82ed5722-4c92-4bc5-b844-c7f7896c68b9",
        "parentId" : "06c2cf7a-450f-4e40-a710-ee6b51e04840",
        "authorId" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "body" : "Fixed",
        "createdAt" : "2020-04-04T16:50:16Z",
        "updatedAt" : "2020-04-04T16:50:41Z",
        "lastEditedBy" : "6c4430fc-3795-49d6-9c36-cf6aa694824e",
        "tags" : [
        ]
      }
    ],
    "commit" : "921fa1c48f0815f971ce40b7280133150d867c6e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +102,106 @@        // For v2 batches we use starting offset = 0 as these batches are relative to the base\n        // offset and measureValidation will mutate these batches between iterations\n        startingOffset = messageVersion == 2 ? 0 : 42;\n\n        if (bufferSupplierStr.equals(\"NO_CACHING\")) {"
  }
]