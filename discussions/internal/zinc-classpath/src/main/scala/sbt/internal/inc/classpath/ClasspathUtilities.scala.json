[
  {
    "id" : "cd745022-34a9-4d16-af09-5426a1aa7aea",
    "prId" : 505,
    "prUrl" : "https://github.com/sbt/zinc/pull/505#pullrequestreview-103301095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41a0694-a345-4388-9266-28bf2e6e139e",
        "parentId" : null,
        "authorId" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "body" : "We actually should make even the addition of `loaderLibraryOnly` conditional on `autoScalaLibrary := true`. In the Scala build, we have that setting disabled (because the scala-library we want on the classpath is actually a regular sub-project in our build, not the one in our reference Scala version).\r\n\r\nHere's an example of how we get the unwanted class on our classpath: https://github.com/scala/scala/pull/6300#issuecomment-372495182. So far, we have worked around by forking tests.\r\n",
        "createdAt" : "2018-03-13T01:48:18Z",
        "updatedAt" : "2018-03-19T10:06:16Z",
        "lastEditedBy" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "tags" : [
        ]
      },
      {
        "id" : "29833d77-cd36-4f43-ab24-0f28761ab2d7",
        "parentId" : "b41a0694-a345-4388-9266-28bf2e6e139e",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "ok. That sounds like a bug on sbt's Run or TestFramework. By the time someone called `makeLoader(...)` with `instance` I think it's ok to include `loaderLibraryOnly`. If `autoScalaLibrary` is `false` then we have to be careful not to create `ScalaInstance` based loader basically.\r\n",
        "createdAt" : "2018-03-13T05:28:17Z",
        "updatedAt" : "2018-03-19T10:06:16Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9397b6aaf94ac3cfab386e3abd11c0ef9c2ceaff",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +82,86 @@   */\n  def makeLoader(classpath: Seq[File], instance: ScalaInstance): ClassLoader =\n    filterByClasspath(classpath, makeLoader(classpath, instance.loaderLibraryOnly, instance))\n\n  def makeLoader(classpath: Seq[File], instance: ScalaInstance, nativeTemp: File): ClassLoader ="
  }
]