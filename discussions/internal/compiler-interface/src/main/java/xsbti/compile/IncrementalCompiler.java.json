[
  {
    "id" : "e80231df-cc5d-40b8-b750-11c6302fb12f",
    "prId" : 236,
    "prUrl" : "https://github.com/sbt/zinc/pull/236#pullrequestreview-23727403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a08fcce0-179a-4949-b36d-fdbf903521f3",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "I have not yet been able to reproduce this and file a bug report.",
        "createdAt" : "2017-02-24T14:41:24Z",
        "updatedAt" : "2017-02-26T14:48:08Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "18a8bda4271c7dd578e8bbce248f3a6eed05eeee",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +97,101 @@                          Reporter reporter,\n                          CompileOrder compileOrder,\n                          // Has to be boxed to override in Scala,\n                          // this is a bug of the Scala compiler 2.12\n                          java.lang.Boolean skip,"
  },
  {
    "id" : "9413019d-15aa-4bf1-8c1a-8202abbba68d",
    "prId" : 236,
    "prUrl" : "https://github.com/sbt/zinc/pull/236#pullrequestreview-23887078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "077794b1-f404-4526-a85d-014e4d86ac9c",
        "parentId" : null,
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "We should phase Maybes out and use java.util.Optional.",
        "createdAt" : "2017-02-25T16:05:46Z",
        "updatedAt" : "2017-02-26T14:48:08Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "4414e323-6cc0-4dd1-ae8c-42fe06656b21",
        "parentId" : "077794b1-f404-4526-a85d-014e4d86ac9c",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "I think this is a bad idea, because `java.util.Optional` was introduced in JDK8. If we use it, we force all our users to run the compiiler bridge in JDK8. I also think it's better to be consistent with the sbt interface and keep it.",
        "createdAt" : "2017-02-25T18:05:15Z",
        "updatedAt" : "2017-02-26T14:48:08Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "39590353-bc31-4437-ad3e-846c5ddf00fa",
        "parentId" : "077794b1-f404-4526-a85d-014e4d86ac9c",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "Zinc (and sbt 1.0) is based on Scala 2.12, so we've already made the commitment to JDK 8 and above. The latest `Position` already uses java.util.Optional for example - https://github.com/sbt/util/blob/a12045ed4282b26179584593bf553a06b42ad1cc/internal/util-interface/src/main/java/xsbti/Position.java",
        "createdAt" : "2017-02-26T16:37:44Z",
        "updatedAt" : "2017-02-26T16:37:44Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "8e01c78e-fb70-46f8-bb38-5a82fe230c34",
        "parentId" : "077794b1-f404-4526-a85d-014e4d86ac9c",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "@eed3si9n Are you sure you want to make that commitment? We also compile to 2.11, so the folks that want to use that won't be able to run it on JDK7. Honestly, I think that a lot of people are stuck in it yet.\r\n  \r\nWhat I propose is that we keep this out of this PR and discuss it separately in another issue.",
        "createdAt" : "2017-02-26T16:39:29Z",
        "updatedAt" : "2017-02-26T16:39:29Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "9207d9ef-4508-41dc-ab1e-481a76bbc29c",
        "parentId" : "077794b1-f404-4526-a85d-014e4d86ac9c",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "ok. Let's take it somewhere else.",
        "createdAt" : "2017-02-26T16:41:22Z",
        "updatedAt" : "2017-02-26T16:41:22Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "18a8bda4271c7dd578e8bbce248f3a6eed05eeee",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +92,96 @@                          String[] scalacOptions,\n                          String[] javacOptions,\n                          Maybe<CompileAnalysis> previousAnalysis,\n                          Maybe<MiniSetup> previousSetup,\n                          PerClasspathEntryLookup perClasspathEntryLookup,"
  },
  {
    "id" : "13c4be24-994a-4baf-a9cc-2daf0083e0e4",
    "prId" : 30,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5cf7ddd-b2bd-4013-8e54-20ef7e6facdd",
        "parentId" : null,
        "authorId" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "body" : "Will `newScalaCompiler` and `compileInterfaceJar` be restored or do you intend to remove them?\n",
        "createdAt" : "2015-11-13T10:03:10Z",
        "updatedAt" : "2015-11-13T11:58:58Z",
        "lastEditedBy" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "tags" : [
        ]
      },
      {
        "id" : "4c9b8f5b-2dcd-42df-a5ea-4b1e383f28a3",
        "parentId" : "b5cf7ddd-b2bd-4013-8e54-20ef7e6facdd",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "We need some mechanism to provide `AnalyzingCompiler`, otherwise this API is not useful.\n",
        "createdAt" : "2015-11-13T10:06:12Z",
        "updatedAt" : "2015-11-13T11:58:58Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "183b62fb5ff8c4886df58d2f5415db12f58aadeb",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +58,62 @@\t* @param instance The ScalaInstance to compile the compiler interface for.\n\t* @param log The logger to use during compilation. */\n\t// void compileInterfaceJar(String label, File sourceJar, File targetJar, File interfaceJar, ScalaInstance instance, Logger log);\n}"
  }
]