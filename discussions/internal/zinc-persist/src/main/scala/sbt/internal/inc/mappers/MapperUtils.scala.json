[
  {
    "id" : "c699b18d-7385-41f2-a827-1647f1a146d8",
    "prId" : 351,
    "prUrl" : "https://github.com/sbt/zinc/pull/351#pullrequestreview-49986320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45f34772-d4c3-4773-b0f4-14d297e0c6e4",
        "parentId" : null,
        "authorId" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "body" : "I don't think that's super important, but maybe we should use something inside Unicode's PUA here?",
        "createdAt" : "2017-07-14T07:24:43Z",
        "updatedAt" : "2017-07-14T08:44:06Z",
        "lastEditedBy" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "tags" : [
        ]
      },
      {
        "id" : "c7ef8c6d-90bf-47e7-9a38-9dc4493c12ce",
        "parentId" : "45f34772-d4c3-4773-b0f4-14d297e0c6e4",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "This is the unicode symbol used internally for the synthesized macro names by sbt. It's safe to be used because the text format uses UTF8 (we force it when we write and read) and protobuf also uses unicode (https://developers.google.com/protocol-buffers/docs/proto, look for \"unicode\" and \"UTF\").\r\n  \r\nGiven the fact that this symbol is rarely used, I think it's perfect for this scenario. Some SO questions point to it as a good way to disambiguate names or use it for \"marking\" string boundaries.",
        "createdAt" : "2017-07-14T08:02:11Z",
        "updatedAt" : "2017-07-14T08:44:06Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "690b7a4336756812e8ed53470ee660c64f4f7880",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@\n  /** Defines a marker that tells the utils that the relativized path is empty. */\n  private final val RELATIVE_MARKER = \"\\u2603\\u2603\\u2603\"\n  private final val MARKER_LENGTH = RELATIVE_MARKER.length()\n"
  }
]