[
  {
    "id" : "14b7d2e8-ca90-4aa2-854f-a172154c65ee",
    "prId" : 759,
    "prUrl" : "https://github.com/sbt/zinc/pull/759#pullrequestreview-398711728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ed726fd-449f-4e60-8374-7fdceca22d6d",
        "parentId" : null,
        "authorId" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "body" : "Okay as a defensive backstop, but we should require the inputs to this method to be valid classfile paths. My fix to `fullName` and `processDependency` _should_ get us there.",
        "createdAt" : "2020-04-22T23:44:48Z",
        "updatedAt" : "2020-04-23T02:26:56Z",
        "lastEditedBy" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "tags" : [
        ]
      },
      {
        "id" : "c1b82bcd-f767-44c4-9e28-ce5b201d296c",
        "parentId" : "0ed726fd-449f-4e60-8374-7fdceca22d6d",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "Yea. For this PR I just wanted to get AppVeyor going, but I'd be happy to remove this part if/when it's no longer needed.",
        "createdAt" : "2020-04-23T02:11:40Z",
        "updatedAt" : "2020-04-23T02:26:56Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b13fb2724b73bed9f0a2981bdf34810082fecc8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +172,176 @@        case None => // The compiler outputs class files in a classes directory (the default)\n          // This lookup could be improved if a hint where to look is given.\n          if (classFilePath.contains(\"<\")) None\n          else\n            outputDirs"
  },
  {
    "id" : "72eab054-0a4a-4947-9838-14d6893d5ed0",
    "prId" : 758,
    "prUrl" : "https://github.com/sbt/zinc/pull/758#pullrequestreview-398813467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a46292cc-cbb0-4aa8-b1a2-a1877ab5b3f0",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "```[error] /home/travis/build/sbt/zinc/internal/compiler-bridge/src/main/scala/xsbt/CallbackGlobal.scala:229:24: type mismatch;\r\n[error]  found   : encodedName.type (with underlying type String)\r\n[error]  required: ?{def start: ?}\r\n[error] Note that implicit conversions are not applicable because they are ambiguous:\r\n[error]  both method stringToTermName in trait Names of type (s: String)ZincCompiler.this.TermName\r\n[error]  and method stringToTypeName in trait Names of type (s: String)ZincCompiler.this.TypeName\r\n[error]  are possible conversion functions from encodedName.type to ?{def start: ?}\r\n[error]         b.append(chrs, encodedName.start, nSize)\r\n[error]                        ^\r\n```",
        "createdAt" : "2020-04-23T07:05:16Z",
        "updatedAt" : "2020-04-23T10:45:55Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      }
    ],
    "commit" : "b645682e3bbe51bc39d367f4f8f7bdc1cf24ff19",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +227,231 @@        val capacity = size + nSize\n        b = new java.lang.StringBuffer(capacity)\n        b.append(chrs, encodedName.start, nSize)\n      } else {\n        val next = if (sym.owner.isPackageObjectClass) sym.owner else sym.effectiveOwner.enclClass"
  }
]