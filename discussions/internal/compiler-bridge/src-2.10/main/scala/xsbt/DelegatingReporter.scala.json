[
  {
    "id" : "bf7acdf2-4c31-403c-9eec-739a1663d72d",
    "prId" : 224,
    "prUrl" : "https://github.com/sbt/zinc/pull/224#pullrequestreview-20825911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce65ebac-79d4-4654-9dff-5150b0a0760d",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Why `java.util.Optional` over `Option`? I don't like to hypothesize and I think I see your inner thoughts in this decision, but is it really worth it to clutter Scala's API with `Optional` for binary compatibility? Or is it because the consumer is a Java source? I haven't seen Java sources in this PR so that's why I'm discarding this option to make my point.\r\n  \r\nI wonder whether it would be useful to ask the Compiler team that they promise binary compatibility *forever* in easy-to-implement and recurrent classes like `Option`.",
        "createdAt" : "2017-02-08T13:28:16Z",
        "updatedAt" : "2017-02-17T19:28:43Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "63c0729d-c434-4ea5-81a5-1b0f03f2af0a",
        "parentId" : "ce65ebac-79d4-4654-9dff-5150b0a0760d",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "This is tracking the change introduced in https://github.com/sbt/util/pull/71/commits/f76e3aa2bb27dd82c53d15acb4907b01da31455a.\r\nThere are parts of sbt that is backed by Java API and by convention they are  put in `xsbti` package. We used to roll out own `Optional` called `xsbti.Maybe` but I am gradually switching over to `java.util.Optional` since I can now assume JDK8. `class PositionImpl` just implements `xsbti. Position`.",
        "createdAt" : "2017-02-08T18:02:18Z",
        "updatedAt" : "2017-02-17T19:28:43Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "76be6f64182be9b1f0b9b1438ed9eb5675b0e1f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +6,10 @@import xsbti.{ F0, Logger, Maybe }\nimport java.io.File\nimport java.util.Optional\n\nprivate object DelegatingReporter {"
  },
  {
    "id" : "9733ca4a-df90-430d-b876-e6b088b7d89f",
    "prId" : 224,
    "prUrl" : "https://github.com/sbt/zinc/pull/224#pullrequestreview-20756817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "577f3cc9-6871-44c7-876a-496580f34322",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "üëç ",
        "createdAt" : "2017-02-08T13:28:37Z",
        "updatedAt" : "2017-02-17T19:28:43Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "76be6f64182be9b1f0b9b1438ed9eb5675b0e1f9",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +102,106 @@    }\n  private[this] def position(sourcePath0: Option[String], sourceFile0: Option[File], line0: Option[Int], lineContent0: String, offset0: Option[Int], pointer0: Option[Int], pointerSpace0: Option[String]) =\n    new PositionImpl(sourcePath0, sourceFile0, line0, lineContent0, offset0, pointer0, pointerSpace0)\n\n  import xsbti.Severity.{ Info, Warn, Error }"
  }
]