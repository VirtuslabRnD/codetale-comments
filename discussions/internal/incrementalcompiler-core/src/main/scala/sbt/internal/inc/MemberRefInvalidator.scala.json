[
  {
    "id" : "d380aeda-7116-4595-b0a1-28e00925a2fb",
    "prId" : 86,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf877c48-b4a2-4d8a-8870-2ea5e42a7f25",
        "parentId" : null,
        "authorId" : "6f938ccf-9240-4d03-badc-3b4107983b16",
        "body" : "The whole comment for this class needs to be updated since it describes the strategy as being implemented as `T => Set[File]` whereas now it's `String => Set[String]`.\n",
        "createdAt" : "2016-03-20T22:21:02Z",
        "updatedAt" : "2016-03-30T20:01:11Z",
        "lastEditedBy" : "6f938ccf-9240-4d03-badc-3b4107983b16",
        "tags" : [
        ]
      },
      {
        "id" : "0c0fefda-a08e-433d-9b97-322c5852737b",
        "parentId" : "bf877c48-b4a2-4d8a-8870-2ea5e42a7f25",
        "authorId" : "4167f1ed-f741-4b02-8ee7-480849a794e7",
        "body" : "I've pushed a commit that updates docs.\n",
        "createdAt" : "2016-03-25T19:56:40Z",
        "updatedAt" : "2016-03-30T20:01:11Z",
        "lastEditedBy" : "4167f1ed-f741-4b02-8ee7-480849a794e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "733649ad297dcbefe0335c0938e016d2b1bc8bdd",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +44,48 @@ * dependencies unconditionally. On the other hand, if api change is due to modified name hashes\n * of regular members then we'll invalidate sources that use those names.\n */\nprivate[inc] class MemberRefInvalidator(log: Logger) {\n  def get(memberRef: Relation[String, String], usedNames: Relation[String, String], apiChange: APIChange,"
  }
]