[
  {
    "id" : "45c2a57a-b37d-4b63-ab5a-150357291a3e",
    "prId" : 294,
    "prUrl" : "https://github.com/sbt/zinc/pull/294#pullrequestreview-34618522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ac49eb5-bfbf-4a46-ab9e-6698426de975",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "Is this a scalafmt bug? It's sub 100 columns (it's 62). /cc @olafurpg",
        "createdAt" : "2017-04-25T11:53:49Z",
        "updatedAt" : "2017-05-04T08:42:39Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "a278d0aa-7b37-4a71-844c-933ab7f2f809",
        "parentId" : "8ac49eb5-bfbf-4a46-ab9e-6698426de975",
        "authorId" : "d2ae0786-b2f5-44a9-bbe4-9fe16f0f0ec5",
        "body" : "Scalafmt is too eager at breaking down curly brace lambdas. I've known about this for a long time and iirc someone complained about it on gitter sometime but it has never been reported. I suspect it's not too hard to fix, so I invite you to open an issue ;)\r\n\r\nHowever,  scalafmt will not try to move a curly brace lambda into a single line if there already is a newline inside the block.  ",
        "createdAt" : "2017-04-25T15:47:32Z",
        "updatedAt" : "2017-05-04T08:42:39Z",
        "lastEditedBy" : "d2ae0786-b2f5-44a9-bbe4-9fe16f0f0ec5",
        "tags" : [
        ]
      },
      {
        "id" : "1e43a150-e0a8-4547-8345-83dfad9b50bc",
        "parentId" : "8ac49eb5-bfbf-4a46-ab9e-6698426de975",
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "https://github.com/scalameta/scalafmt/issues/913",
        "createdAt" : "2017-04-25T16:35:05Z",
        "updatedAt" : "2017-05-04T08:42:39Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      }
    ],
    "commit" : "36b262f56245ffef20eab9552f755d0d1c073fc2",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +55,59 @@    as.flatMap { a =>\n      simpleName(a.base).filter(pred)\n    }.toSet\n  def defAnnotations(s: Structure, pred: String => Boolean): Set[String] =\n    defAnnotations(s.declared, pred) ++ defAnnotations(s.inherited, pred)"
  }
]