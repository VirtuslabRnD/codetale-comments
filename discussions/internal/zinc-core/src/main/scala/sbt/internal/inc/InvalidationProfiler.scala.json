[
  {
    "id" : "2f232a1c-bee4-4a07-b564-c105d40a731b",
    "prId" : 585,
    "prUrl" : "https://github.com/sbt/zinc/pull/585#pullrequestreview-149623884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3db7fe1-6e53-4a08-9fc7-abc3ed932d72",
        "parentId" : null,
        "authorId" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "body" : "From the implementation I guess this is being used when no profiling should be done?",
        "createdAt" : "2018-08-27T07:23:06Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "tags" : [
        ]
      },
      {
        "id" : "b968dded-24e8-46c4-880f-df0f807cef45",
        "parentId" : "f3db7fe1-6e53-4a08-9fc7-abc3ed932d72",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Yes",
        "createdAt" : "2018-08-27T08:29:41Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "11092ad4ce518da8e5dd37e3769c47bb4cafaade",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@\nobject InvalidationProfiler {\n  final val empty: InvalidationProfiler = new InvalidationProfiler {\n    override def profileRun: RunProfiler = RunProfiler.empty\n    override def registerRun(run: zprof.ZincRun): Unit = ()"
  },
  {
    "id" : "eb4e721e-c506-4773-a12c-4a962cf13702",
    "prId" : 585,
    "prUrl" : "https://github.com/sbt/zinc/pull/585#pullrequestreview-149625963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39b74e41-9bac-4c73-9611-27ae3da9d82a",
        "parentId" : null,
        "authorId" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "body" : "What `kind`s are allowed here? Is there any other implementation I can look at to see what\r\nis applicable here?",
        "createdAt" : "2018-08-27T07:32:54Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "tags" : [
        ]
      },
      {
        "id" : "2fe86ba4-f492-4d63-b37a-11e235c6f91e",
        "parentId" : "39b74e41-9bac-4c73-9611-27ae3da9d82a",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "It's in generic on purpose so that we can easily involve it in the future, even though we only have one implementation. The kinds are defined in https://github.com/sbt/zinc/pull/585/files#diff-de86f02542b47ffddbb8687a94316daeR259",
        "createdAt" : "2018-08-27T08:36:35Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "11092ad4ce518da8e5dd37e3769c47bb4cafaade",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +216,220 @@\n  def registerEvent(\n      kind: String,\n      inputs: Iterable[String],\n      outputs: Iterable[String],"
  },
  {
    "id" : "7cb6d660-e37d-4d28-b964-684b354dfaa3",
    "prId" : 585,
    "prUrl" : "https://github.com/sbt/zinc/pull/585#pullrequestreview-149628382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74659c08-5e2d-4948-8188-7dfdab174491",
        "parentId" : null,
        "authorId" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "body" : "Same as with `runs`. This grows unbounded, right?",
        "createdAt" : "2018-08-27T07:34:36Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "tags" : [
        ]
      },
      {
        "id" : "ae11df9a-f79d-45a4-beed-02ba41d3d34e",
        "parentId" : "74659c08-5e2d-4948-8188-7dfdab174491",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "What do you mean by this grows unbounded? In every run, we create a new `RunProfiler` so that new profile wont' see events from the past",
        "createdAt" : "2018-08-27T08:35:34Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "13bfee90-562d-4b28-92b4-7c2f0c562992",
        "parentId" : "74659c08-5e2d-4948-8188-7dfdab174491",
        "authorId" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "body" : "Ah, thanks :+1: Misunderstood that.",
        "createdAt" : "2018-08-27T08:44:35Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "tags" : [
        ]
      }
    ],
    "commit" : "11092ad4ce518da8e5dd37e3769c47bb4cafaade",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@    }\n\n    private final var currentEvents: List[zprof.InvalidationEvent] = Nil\n    def registerEvent(\n        kind: String,"
  },
  {
    "id" : "253b1e90-ef06-435d-a7ab-f2e3c0b90d2f",
    "prId" : 585,
    "prUrl" : "https://github.com/sbt/zinc/pull/585#pullrequestreview-149601455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "361586dc-9ba3-4af6-b374-4b564cc97964",
        "parentId" : null,
        "authorId" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "body" : "Same as with `runs`. This grows unbounded, right?",
        "createdAt" : "2018-08-27T07:34:42Z",
        "updatedAt" : "2018-08-27T09:16:48Z",
        "lastEditedBy" : "3958efd0-eed4-4c47-8bf4-09a7251a0610",
        "tags" : [
        ]
      }
    ],
    "commit" : "11092ad4ce518da8e5dd37e3769c47bb4cafaade",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +168,172 @@    }\n\n    private final var cycles: List[zprof.CycleInvalidation] = Nil\n    def registerCycle(\n        invalidatedClasses: Iterable[String],"
  }
]