[
  {
    "id" : "ff1f947b-2d77-437f-bc5a-677c7fa87219",
    "prId" : 965,
    "prUrl" : "https://github.com/root-project/root/pull/965#pullrequestreview-62116842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "723f902f-bff9-4d78-b1f2-2d624a8ff43b",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "FYI, the Close is redundant (it is executed as part of the TFile destructor).",
        "createdAt" : "2017-09-12T12:45:56Z",
        "updatedAt" : "2017-09-12T12:45:56Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "c5837255-1f64-4313-88d0-d088d167dada",
        "parentId" : "723f902f-bff9-4d78-b1f2-2d624a8ff43b",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I know, but I prefer not to rely on that implicit behavior, at least on the test.",
        "createdAt" : "2017-09-12T12:48:33Z",
        "updatedAt" : "2017-09-12T12:48:33Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1bf4b49aa70ca6403b419bba3c2135e8815081c",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +296,300 @@      EXPECT_EQ(6, f->GetCompressionLevel());\n\n      f->Close();\n      delete f;\n   }"
  },
  {
    "id" : "48103462-e0a4-47a4-985b-0362fb204a32",
    "prId" : 1103,
    "prUrl" : "https://github.com/root-project/root/pull/1103#pullrequestreview-67039059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b6a4a8-426e-41a4-94cb-4a46de6ca6d1",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "The presence of comments reminds me of a potential limitation - what if a string like this is specified?\r\n\"return /* hello! */ 3\"\r\nIf the thing explodes, I see 2 options:\r\n1) We strip out comments\r\n2) We state very clearly that comments are not supported, even if we can stand some of them\r\n\r\n2) is much easier than 1) since the latter is basically a treatment of C++ code as string which systematically leads to trouble (the only thing I would fully trust here would be an interface to cling which would return preprocessed code, but this is unfeasible for 6.12)",
        "createdAt" : "2017-10-03T19:15:25Z",
        "updatedAt" : "2017-10-04T11:31:52Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "1fe49af7-c18d-4fbb-ace6-6e887ecb819f",
        "parentId" : "b0b6a4a8-426e-41a4-94cb-4a46de6ca6d1",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "If we can strip out comments, it's the best solution. However, if the compiler understands the comment (and it will in the example above), then there should be no problems. Only comments that extend to the end of the line are a bit problematic, but I added a newline to avoid problems there. What's the main problem that we cannot solve is a comment with \"return\" inside. For that to work, we need to strip out comments. ",
        "createdAt" : "2017-10-04T11:50:19Z",
        "updatedAt" : "2017-10-04T11:50:19Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "8f2c8445-0ce7-4c45-a984-1dbc700bdd5d",
        "parentId" : "b0b6a4a8-426e-41a4-94cb-4a46de6ca6d1",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Code manipulation such as stripping out comments can only lead to trouble, and it doesn't really add anything to the feature (users can just put their comments outside of the string).\r\n\r\nSee my comment in the main PR thread: in my opinion we can either explicitly state we do not support comments in expression strings, or not say anything and hope that users do not write `return` or branch names in the comments in the expression string.",
        "createdAt" : "2017-10-04T11:58:28Z",
        "updatedAt" : "2017-10-04T11:58:28Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "7489c483451685beb884f12744b0a3bb693e9e00",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +180,184 @@   auto d = tdf.Define(\"my_return_x\", \"3.0\")\n               .Define(\"return_y\", \"4.0 // with a comment\")\n               .Define(\"v\", \"std::array<double, 2> v{my_return_x, return_y}; return v; // also with comment\")\n               .Define(\"r\", \"double r2 = 0.0; for (auto&& w : v) r2 += w*w; return sqrt(r2);\");\n   auto m = d.Max(\"r\");"
  }
]