[
  {
    "id" : "c657183a-a575-4d5f-8137-f0f2e2e74701",
    "prId" : 3216,
    "prUrl" : "https://github.com/root-project/root/pull/3216#pullrequestreview-192670665",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e44fc002-5e60-4922-be95-f3f0b81c10fd",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Removed newline",
        "createdAt" : "2019-01-08T07:37:30Z",
        "updatedAt" : "2019-01-18T01:49:15Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "54b7b12d-c706-45d1-954a-988fbb8eef05",
        "parentId" : "e44fc002-5e60-4922-be95-f3f0b81c10fd",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Done.",
        "createdAt" : "2019-01-15T14:26:13Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6283268671b82aac87b50dfedcb684160f0d09aa",
    "line" : 400,
    "diffHunk" : "@@ -1,1 +613,617 @@   }\n   fValues.erase(iReader);\n}"
  },
  {
    "id" : "6698d310-67d1-4920-951a-d57506e152d4",
    "prId" : 3216,
    "prUrl" : "https://github.com/root-project/root/pull/3216#pullrequestreview-192168065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c3660e5-e566-44da-a099-4b6b388ad34f",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "`for (auto& val : fValues)`?",
        "createdAt" : "2019-01-14T14:10:46Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6283268671b82aac87b50dfedcb684160f0d09aa",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +314,318 @@Bool_t TTreeReader::SetProxies() {\n\n   for (size_t i = 0; i < fValues.size(); ++i) {\n      ROOT::Internal::TTreeReaderValueBase* reader = fValues[i];\n      reader->CreateProxy();"
  },
  {
    "id" : "b246397b-f4ad-42a1-939a-b31dcbb29113",
    "prId" : 3216,
    "prUrl" : "https://github.com/root-project/root/pull/3216#pullrequestreview-192200447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "992f3276-3336-49f5-8c0a-1491111a9cb9",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Won't this raise warnings about signed/unsigned comparisons? Maybe `~0ULL` is better than `-1LL` here.",
        "createdAt" : "2019-01-14T14:12:23Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "441e61a0-c56b-4d0c-b2c8-41faa414a34d",
        "parentId" : "992f3276-3336-49f5-8c0a-1491111a9cb9",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "this is existing code ... (so no warning at the moment).",
        "createdAt" : "2019-01-14T15:15:15Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6283268671b82aac87b50dfedcb684160f0d09aa",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +334,338 @@      const auto curFile = fTree->GetCurrentFile();\n      if (curFile && fTree->GetTree()->GetReadCache(curFile, true)) {\n         if (!(-1LL == fEndEntry && 0ULL == fBeginEntry)) {\n            // We need to avoid to pass -1 as end entry to the SetCacheEntryRange method\n            const auto lastEntry = (-1LL == fEndEntry) ? fTree->GetEntriesFast() : fEndEntry;"
  },
  {
    "id" : "ce3425f2-db47-4a60-9d2d-061e958e9fff",
    "prId" : 3216,
    "prUrl" : "https://github.com/root-project/root/pull/3216#pullrequestreview-192200669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09847f7a-87f0-4011-b32a-649e8511da2f",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Shouldn't this be an `enum` for the sake of clarity?",
        "createdAt" : "2019-01-14T14:15:52Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "b051ed7a-f868-40d7-b360-1c31b12044e2",
        "parentId" : "09847f7a-87f0-4011-b32a-649e8511da2f",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "correct but out of the scope of this PR.",
        "createdAt" : "2019-01-14T15:15:39Z",
        "updatedAt" : "2019-01-18T01:49:16Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6283268671b82aac87b50dfedcb684160f0d09aa",
    "line" : 340,
    "diffHunk" : "@@ -1,1 +506,510 @@      }\n\n      if (loadResult == -4) {\n         // The TChainElement corresponding to the entry is missing or\n         // the TTree is missing from the file."
  }
]