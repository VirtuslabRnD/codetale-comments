[
  {
    "id" : "08f6edfb-90f3-4527-a660-19e4fed96f83",
    "prId" : 1048,
    "prUrl" : "https://github.com/root-project/root/pull/1048#pullrequestreview-64806459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee05c5e1-c4f3-4e3a-b248-433a3276ec70",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "What happens when it's already defined? Should we redefine? It looks like this silently ignores already defined columns, which may be unintuitive for users.",
        "createdAt" : "2017-09-25T06:27:50Z",
        "updatedAt" : "2017-09-25T20:17:21Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "77e67377-aeb4-4356-afc3-0985198fe176",
        "parentId" : "ee05c5e1-c4f3-4e3a-b248-433a3276ec70",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "The redefinition or, more in general, bogus definition is handled by TLoopManager::AddColumnAlias: https://github.com/root-project/root/pull/1048/files#diff-600cca72f8a33c06aa6afa8f9fdfc4e4R481 \r\nThe case of redefinition of an alias to a different column is considered",
        "createdAt" : "2017-09-25T06:48:27Z",
        "updatedAt" : "2017-09-25T20:17:21Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d381c2214ee0e0d12fe58f64a437c9bb588d6e8",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +72,76 @@      if (-1 != bNameRegex.Index(paddedExpr.c_str(), &paddedExprLen)) {\n         // if not already found among the other columns\n         if (std::find(usedBranches.begin(), usedBranches.end(), col) == usedBranches.end())\n            usedBranches.emplace_back(col);\n      }"
  },
  {
    "id" : "8a0323db-be66-40fe-a20e-2a200b8877df",
    "prId" : 1103,
    "prUrl" : "https://github.com/root-project/root/pull/1103#pullrequestreview-67036343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dca84343-c147-4c33-a111-8a82e012cb87",
        "parentId" : null,
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "This is smart. Perhaps we can add a comment to remind us that we now need something which is able to deal with the deduction of a potential return value and its type.",
        "createdAt" : "2017-10-03T18:56:06Z",
        "updatedAt" : "2017-10-04T11:31:51Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "d8b4250b-981b-411b-9154-2ced256f1fff",
        "parentId" : "dca84343-c147-4c33-a111-8a82e012cb87",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Not sure what you mean here. Can you give a bit more context on what the \"something\" means?",
        "createdAt" : "2017-10-04T11:45:30Z",
        "updatedAt" : "2017-10-04T11:45:30Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7489c483451685beb884f12744b0a3bb693e9e00",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +111,115 @@   static unsigned int iNs = 0U;\n   std::stringstream dummyDecl;\n   dummyDecl << \"namespace __tdf_\" << std::to_string(iNs++) << \"{ auto __tdf_lambda = []() {\";\n\n   // Declare variables with the same name as the column used by this transformation"
  }
]