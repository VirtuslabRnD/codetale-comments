[
  {
    "id" : "a9986bd7-063c-4dd1-ad96-98deccd7aa53",
    "prId" : 2157,
    "prUrl" : "https://github.com/root-project/root/pull/2157#pullrequestreview-126780182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe05964e-4e17-45aa-97cb-6756e22aea93",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "It should probably be noted somewhere that this routine does not yet handle 'friend of friends' (and of course, also not yet, the fact that a TTree/TChain can be in multiple place in this friend (indirect) collection).",
        "createdAt" : "2018-06-06T18:14:25Z",
        "updatedAt" : "2018-06-07T20:21:33Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "85ffa696-8f23-45fb-89a7-de90f05b12b2",
        "parentId" : "fe05964e-4e17-45aa-97cb-6756e22aea93",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "will add a note in the doxygen doc",
        "createdAt" : "2018-06-07T13:30:44Z",
        "updatedAt" : "2018-06-07T20:21:33Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "93892f3fc40c15c9d1f7d636c2148d59d9ce03bd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +94,98 @@////////////////////////////////////////////////////////////////////////////////\n/// Get and store the names, aliases and file names of the friends of the tree.\n/// \\param[in] tree The main tree whose friends to \n///\n/// Note that \"friends of friends\" and circular references in the lists of friends are not supported."
  },
  {
    "id" : "ea311143-8e0b-4492-a593-ef99d3569af2",
    "prId" : 2157,
    "prUrl" : "https://github.com/root-project/root/pull/2157#pullrequestreview-126774100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42da0a70-1e36-4798-908a-2fd355006517",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Opening a file can be an 'expensive' operation if the file is remote.  However it might be to hard to update the code to avoid 'wasting' this opening by using this file(handle) later on.",
        "createdAt" : "2018-06-06T18:16:13Z",
        "updatedAt" : "2018-06-07T20:21:33Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "204a6fbb-ed6d-4a4e-9e1f-87998b79934e",
        "parentId" : "42da0a70-1e36-4798-908a-2fd355006517",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "That is a fair point, but anyway this search for the name of the tree (and consequently the opening of the file) will only happen when the user does not specify that name.",
        "createdAt" : "2018-06-07T13:16:19Z",
        "updatedAt" : "2018-06-07T20:21:33Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "93892f3fc40c15c9d1f7d636c2148d59d9ce03bd",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +146,150 @@\n   ::TDirectory::TContext ctxt(gDirectory);\n   std::unique_ptr<TFile> f(TFile::Open(fFileNames[0].c_str()));\n   TIter next(f->GetListOfKeys());\n   while (TKey *key = (TKey *)next()) {"
  },
  {
    "id" : "0968bf97-ff85-41f9-9fd7-85e1de295fae",
    "prId" : 2796,
    "prUrl" : "https://github.com/root-project/root/pull/2796#pullrequestreview-164614888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0db1f6d5-1850-4d11-98b7-ab82393a5efd",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Why return the path of the first element rather than the path of the current element?",
        "createdAt" : "2018-10-15T08:49:31Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "a052c344-722a-4c24-9f5a-c428f2669251",
        "parentId" : "0db1f6d5-1850-4d11-98b7-ab82393a5efd",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "because the processing did not start?\r\n",
        "createdAt" : "2018-10-15T09:00:15Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "a96c793f-0bc1-4379-a423-97a105dafb55",
        "parentId" : "0db1f6d5-1850-4d11-98b7-ab82393a5efd",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Fair enough.  Might this routine be called at any other point in the processing? -> Answering my question: this is actually an internal routine, so no.",
        "createdAt" : "2018-10-15T09:09:31Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "9e9cef48-6746-4bd4-818c-17cb939acb7a",
        "parentId" : "0db1f6d5-1850-4d11-98b7-ab82393a5efd",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : ":) Thanks philippe for these thoughts and commenting about them!!!!",
        "createdAt" : "2018-10-15T09:17:04Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f24f2dc583757fbb87bd7f95e5543a540481412",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +114,118 @@static std::string GetTreeFullPath(const TTree &tree)\n{\n   // Case 1: this is a TChain: we get the name out of the first TChainElement\n   if (0 == strcmp(\"TChain\", tree.ClassName())) {\n      auto &chain = dynamic_cast<const TChain&>(tree);"
  },
  {
    "id" : "dc241928-ab14-4044-a04d-0c972dfc46c2",
    "prId" : 2796,
    "prUrl" : "https://github.com/root-project/root/pull/2796#pullrequestreview-164615018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbc0e768-46e9-409c-9f9d-37b9dca6b46d",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "The path within the TFile (and the alternative name if any) is in GetTitle()",
        "createdAt" : "2018-10-15T08:51:49Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "0c12e685-6c00-4b24-afe8-0e4a4a7afd9d",
        "parentId" : "dbc0e768-46e9-409c-9f9d-37b9dca6b46d",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Do you mean of the chain element?\r\nI get a full path name within the file with the \"GetName\" method: I am a bit confused.",
        "createdAt" : "2018-10-15T09:01:01Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "922e8b0f-47d6-4f06-98e6-7fb406676b78",
        "parentId" : "dbc0e768-46e9-409c-9f9d-37b9dca6b46d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Indeed, I mis-remembered and inverted the semantic and the name and title.",
        "createdAt" : "2018-10-15T09:06:37Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "3c87040a-713c-4b54-8342-35c09a4b528a",
        "parentId" : "dbc0e768-46e9-409c-9f9d-37b9dca6b46d",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "cool! Thanks a lot for reading the code and suggesting improvements!",
        "createdAt" : "2018-10-15T09:17:25Z",
        "updatedAt" : "2018-10-15T11:24:58Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f24f2dc583757fbb87bd7f95e5543a540481412",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +119,123 @@      auto files = chain.GetListOfFiles();\n      if (files && 0 != files->GetEntries()) {\n         return files->At(0)->GetName();\n      }\n   }"
  },
  {
    "id" : "67f1613a-4dd1-4178-a48f-2290f7f9f85c",
    "prId" : 4879,
    "prUrl" : "https://github.com/root-project/root/pull/4879#pullrequestreview-353321293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f75f9d5-eff6-4f1e-b3a3-29735c598bbd",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Can you please add a comment explaining that for the case in which the name of the TTree is contained as part of the filename, TFile::GetName happens to return the TTree name, and TChain::GetName is empty/useless? It's really obscure :sweat_smile: ",
        "createdAt" : "2020-01-28T15:42:33Z",
        "updatedAt" : "2020-02-05T08:52:05Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "e384a79e-5c3b-4d7c-9f64-e25e9115c8bb",
        "parentId" : "9f75f9d5-eff6-4f1e-b3a3-29735c598bbd",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "It is :D I put a comment :)",
        "createdAt" : "2020-01-29T09:48:43Z",
        "updatedAt" : "2020-02-05T08:52:05Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "af3e5e8b-3e84-40d4-a8d4-3b2890af0a33",
        "parentId" : "9f75f9d5-eff6-4f1e-b3a3-29735c598bbd",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "It looks to me like the comment is over logic that is the same as before: `for (auto f: chain->GetListOfFiles()) fileNames.emplace_back(f->GetTitle())`, or equivalent.\r\n\r\nI think the obscure part is that `realName` is `chainFiles->First()->GetName()` instead of `frTree->GetName()`.\r\n\r\nRelated: does `chain->GetListOfFiles()->First()->GetName()` (note that `GetName()` is called on a `TFile`) return the name of the `TTree` also in the case in which the tree name is _not_ part of the filename?",
        "createdAt" : "2020-01-31T17:28:24Z",
        "updatedAt" : "2020-02-05T08:52:05Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "5f590a7d-4c9c-4e09-80b2-4ed21d09fb67",
        "parentId" : "9f75f9d5-eff6-4f1e-b3a3-29735c598bbd",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Yep, it does. I put such a case in the tests!",
        "createdAt" : "2020-02-04T21:40:54Z",
        "updatedAt" : "2020-02-05T08:52:05Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d8499b07dd3fb7da459472a1c18e5af70763bf",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +348,352 @@         // Get name of the trees building the chain\n         const auto chainFiles = static_cast<TChain*>(frTree)->GetListOfFiles();\n         const auto realName = chainFiles->First()->GetName();\n         friendNames.emplace_back(std::make_pair(realName, alias));\n         // Get filenames stored in the title member"
  },
  {
    "id" : "89d06a77-f0b0-4f0b-b11e-f222552f30ca",
    "prId" : 4953,
    "prUrl" : "https://github.com/root-project/root/pull/4953#pullrequestreview-355125507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba69b44b-1a37-43bd-928a-369e5a58c072",
        "parentId" : null,
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "I would rather EnableImplicitMT until TTreeProcessorMT is adapted for explicit multithreading. \r\n\r\nThis may work, but you don't have any reason to maintain an instance of TThreadExecutor when what you want is to set up a pool of threads.\r\n\r\n",
        "createdAt" : "2020-02-07T10:52:40Z",
        "updatedAt" : "2020-02-07T10:52:49Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      },
      {
        "id" : "9b390388-be5d-49a4-9325-7bbf39d700ac",
        "parentId" : "ba69b44b-1a37-43bd-928a-369e5a58c072",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Could you elaborate? Where does the pool come from? Is it created by `EnableImplicitMT` upfront if you call it? And why is creating an instance of `TThreadExecutor` bad in `TTreeProcessorMT`?",
        "createdAt" : "2020-02-07T10:56:49Z",
        "updatedAt" : "2020-02-07T10:56:49Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "ee3e56b6-751a-4df3-8bad-cf99516a61f8",
        "parentId" : "ba69b44b-1a37-43bd-928a-369e5a58c072",
        "authorId" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "body" : "Please someone (@xvallspl @bluehood @stwunsch) tell me exactly what to do: everybody in this discussion seems to have a different opinion. From my point of view, the logic is wrong in this code anyway. But I don't have any strong opinion about how to fix the issue, and to be honest I don't really care. I'm in this loop only because it make a test crashing on Windows... I can also close this PR and let you guys decide how to fix this issue...",
        "createdAt" : "2020-02-07T11:06:36Z",
        "updatedAt" : "2020-02-07T11:06:36Z",
        "lastEditedBy" : "23a1739a-fdf1-4508-8ccf-74a4e80d9852",
        "tags" : [
        ]
      },
      {
        "id" : "c24107e2-9f4e-4c88-8443-0959b16adf61",
        "parentId" : "ba69b44b-1a37-43bd-928a-369e5a58c072",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "@bellenot please bear with us a little while we figure it out :smile: ",
        "createdAt" : "2020-02-07T11:25:49Z",
        "updatedAt" : "2020-02-07T11:25:49Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "2cd34174-6855-4369-8a24-1432dea1ab35",
        "parentId" : "ba69b44b-1a37-43bd-928a-369e5a58c072",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "I mistook the file I was commenting on :man_facepalming: ",
        "createdAt" : "2020-02-07T12:39:31Z",
        "updatedAt" : "2020-02-07T12:40:23Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      }
    ],
    "commit" : "aee1a386a8d376b47c0631f1216c76d17c5d1426",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +492,496 @@   const std::vector<std::vector<std::string>> &friendFileNames = fFriendInfo.fFriendFileNames;\n\n   TThreadExecutor pool;\n   // If an entry list or friend trees are present, we need to generate clusters with global entry numbers,\n   // so we do it here for all files."
  },
  {
    "id" : "e0a29da8-b1d4-4e87-86c8-311fdc786cc3",
    "prId" : 5270,
    "prUrl" : "https://github.com/root-project/root/pull/5270#pullrequestreview-385437918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9859dfe6-2c9a-4437-86a0-e288910c4064",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "```suggestion\r\n/// \\param[in] treeNames Name of the tree for each file in `fileNames`.\r\n/// \\param[in] fileNames Files to be opened.\r\n/// \\param[in] friendInfo xxx No idea what this is.\r\n/// \\param[in] nEntries Number of entries to be processed.\r\n/// \\param[in] friendEntries xxx Why do we need that? \r\nvoid TTreeView::MakeChain(const std::vector<std::string> &treeNames, const std::vector<std::string> &fileNames,\r\n```",
        "createdAt" : "2020-04-01T09:36:42Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "658d6485-6f39-4527-ad08-92a2ad7ebebe",
        "parentId" : "9859dfe6-2c9a-4437-86a0-e288910c4064",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Maybe it's just an internal function, but certainly doesn't do any harm.",
        "createdAt" : "2020-04-01T09:41:11Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "364768da-33fd-4a8a-a4aa-f76123faa187",
        "parentId" : "9859dfe6-2c9a-4437-86a0-e288910c4064",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Yes, TTreeView is an internal helper class. Thanks though, committed!",
        "createdAt" : "2020-04-01T10:00:46Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c4f270961bb31445d220b23cd4c1034a63bf595",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +49,53 @@/// \\param[in] nEntries Number of entries to be processed.\n/// \\param[in] friendEntries Number of entries in each friend. Expected to have same ordering as friendInfo.\nvoid TTreeView::MakeChain(const std::vector<std::string> &treeNames, const std::vector<std::string> &fileNames,\n                          const FriendInfo &friendInfo, const std::vector<Long64_t> &nEntries,\n                          const std::vector<std::vector<Long64_t>> &friendEntries)"
  },
  {
    "id" : "fbe7d314-dd09-4bf6-aa33-a15fa5aead0c",
    "prId" : 5270,
    "prUrl" : "https://github.com/root-project/root/pull/5270#pullrequestreview-385524003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "So when you do `GetName` on a TFile that contains exactly one tree, it returns the name of the tree?",
        "createdAt" : "2020-04-01T10:31:08Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "c5570c3a-15d5-428a-9668-82a84173d1c3",
        "parentId" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "It's not a `TFile` thing, it's a \"file-coming-from-TChain\" thing. Line 286 was supposed to clarify this.",
        "createdAt" : "2020-04-01T10:32:25Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "aa76fa8e-3221-402c-82cf-a02ab81c5b05",
        "parentId" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "So it is the `TChain` that sets the names of its files to be the names of the trees each file contains (which form the chain)?",
        "createdAt" : "2020-04-01T10:35:48Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "3233a64e-9e2e-4e90-bf49-564e9826c560",
        "parentId" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "note that this logic predates my commit, so I am not the best person to ask. my understanding is that yes, it's the TChain that does this.",
        "createdAt" : "2020-04-01T10:46:18Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "03865f3e-9da4-4913-84bd-6a9a5439ce72",
        "parentId" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Ok thanks. I would do a slight rewording of the comment: `// Case 1: this is a TChain: for each file it contains, GetName returns the name of the tree in that file`.",
        "createdAt" : "2020-04-01T10:54:55Z",
        "updatedAt" : "2020-04-01T12:12:52Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "1adfd437-8784-47c6-93a9-1f0da9de2b62",
        "parentId" : "62858e16-2085-4904-b589-3b5500f8f0ef",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "fixed",
        "createdAt" : "2020-04-01T12:13:04Z",
        "updatedAt" : "2020-04-01T12:13:04Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c4f270961bb31445d220b23cd4c1034a63bf595",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +293,297 @@      std::vector<std::string> treeNames;\n      for (TObject *f : *files)\n         treeNames.emplace_back(f->GetName());\n\n      return treeNames;"
  },
  {
    "id" : "18c4513d-2841-4be1-a403-a1bcf3e6be96",
    "prId" : 5278,
    "prUrl" : "https://github.com/root-project/root/pull/5278#pullrequestreview-386194368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a5661da-6ed8-4a51-8d7c-70383c73baf9",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "I don't remember what we converged on, but does it make sense to add a `\\note` that if a thread pool already exists, the argument doesn't have any effect?",
        "createdAt" : "2020-04-02T07:29:55Z",
        "updatedAt" : "2020-04-02T07:30:24Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "25687dbe-c344-4058-8232-8284f3f07275",
        "parentId" : "3a5661da-6ed8-4a51-8d7c-70383c73baf9",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "if a thread-pool already exists, and the size is different than the one required, you get a warning. but that's included in \"same as for TThreadExecutor\", I'd rather point to the one source of truth than duplicate information",
        "createdAt" : "2020-04-02T07:40:17Z",
        "updatedAt" : "2020-04-02T07:40:18Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "5d6ee2d8-22c2-40d9-87a3-3caf5ecd500b",
        "parentId" : "3a5661da-6ed8-4a51-8d7c-70383c73baf9",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "LGTM",
        "createdAt" : "2020-04-02T08:07:57Z",
        "updatedAt" : "2020-04-02T08:07:57Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22397ac3a904a48a1fc5421488c5c8112c7427c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +419,423 @@/// \\param[in] nThreads Number of threads to create in the underlying thread-pool. The semantics of this argument are\n///                     the same as for TThreadExecutor.\nTTreeProcessorMT::TTreeProcessorMT(std::string_view filename, std::string_view treename, UInt_t nThreads)\n   : fFileNames({std::string(filename)}),\n     fTreeNames(treename.empty() ? FindTreeNames() : std::vector<std::string>{std::string(treename)}), fFriendInfo(), fPool(nThreads)"
  },
  {
    "id" : "c4566182-a0b0-4133-b386-52ecb1443ef7",
    "prId" : 5667,
    "prUrl" : "https://github.com/root-project/root/pull/5667#pullrequestreview-421098462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5739ac5-48b7-435d-a8aa-be08a288e9db",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "```suggestion\r\n   TChain chain;\r\n```",
        "createdAt" : "2020-05-29T15:59:08Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "419726e6-f7b1-497b-bd50-be8d9ecff98c",
        "parentId" : "b5739ac5-48b7-435d-a8aa-be08a288e9db",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "I think a `unique_ptr` makes it clear that we might not need the `TChain` depending on the situation",
        "createdAt" : "2020-05-29T16:03:04Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "d473f772-d6b4-43cd-814b-46b4adc8f220",
        "parentId" : "b5739ac5-48b7-435d-a8aa-be08a288e9db",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "fair enough.",
        "createdAt" : "2020-05-29T16:17:22Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fcd48d3ed211ac84ff8106807c58d46a03d9d7",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +70,74 @@   const auto nFiles = clusters.size();\n\n   std::unique_ptr<TChain> chain;\n   using NextFn_t = Long64_t (*)(Long64_t &, TEntryList &, TChain *);\n   // A function that advances TEntryList and returns global entry numbers or -1 if we reached the end"
  },
  {
    "id" : "9f653582-32da-4ffd-a835-ab6a0cd600ca",
    "prId" : 5667,
    "prUrl" : "https://github.com/root-project/root/pull/5667#pullrequestreview-421120167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe8d84c6-fa80-4f1d-8cc6-705503600c1e",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Are those ending up being Cluster in the TTree sense or more of an arbitrary range of entries?",
        "createdAt" : "2020-05-29T16:03:58Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "da53cd05-c19f-4940-810a-3ced2345ef3a",
        "parentId" : "fe8d84c6-fa80-4f1d-8cc6-705503600c1e",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "they are clusters in the TTree sense, but filtered to only entries that are present in the TEntryList",
        "createdAt" : "2020-05-29T16:05:32Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "cc0bb0f3-70cb-4da2-98cb-a52e33360409",
        "parentId" : "fe8d84c6-fa80-4f1d-8cc6-705503600c1e",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I see.  I missed the input argument's meaning (which is documented well .. i.e. my bad)",
        "createdAt" : "2020-05-29T16:22:01Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "59b7ec7e-3462-43b0-be68-8f619317a25d",
        "parentId" : "fe8d84c6-fa80-4f1d-8cc6-705503600c1e",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "but actually your comment made me realize that we are splitting up too much, will fix",
        "createdAt" : "2020-05-29T16:48:45Z",
        "updatedAt" : "2020-05-30T13:41:28Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fcd48d3ed211ac84ff8106807c58d46a03d9d7",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +100,104 @@   Long64_t entry = entryList.GetEntry(elistEntry);\n\n   std::vector<std::vector<EntryCluster>> elistClusters;\n\n   for (auto fileN = 0u; fileN < nFiles; ++fileN) {"
  }
]