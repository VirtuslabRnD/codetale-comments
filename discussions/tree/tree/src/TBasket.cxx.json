[
  {
    "id" : "6a3e7a38-1a4b-4630-9b48-7c1e7629daee",
    "prId" : 1003,
    "prUrl" : "https://github.com/root-project/root/pull/1003#pullrequestreview-65652974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc6214e5-a5c9-4be6-88fc-ff129ab9cd6a",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Assert that if mustGenerateOffsets then fDisplacement == nullptr;",
        "createdAt" : "2017-09-27T19:05:30Z",
        "updatedAt" : "2017-10-18T04:45:59Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "01a2f124439d7488e1e565965bab7bc1241511ee",
    "line" : 366,
    "diffHunk" : "@@ -1,1 +905,909 @@      Bool_t mustGenerateOffsets = fEntryOffset && fNevBuf &&\n                                   (fIOBits & static_cast<UChar_t>(TBasket::EIOBits::kGenerateOffsetMap)) &&\n                                   CanGenerateOffsetArray();\n      // We currently believe that in all cases when offsets can be generated, then the\n      // displacement array must be zero."
  },
  {
    "id" : "e1cdfcf8-5bd7-41af-8cc0-10809ce5f971",
    "prId" : 6036,
    "prUrl" : "https://github.com/root-project/root/pull/6036#pullrequestreview-449101571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b11f3923-0320-4747-b992-c08e69f37777",
        "parentId" : null,
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "The PR messages says that the look-ahead window is the next 3 baskets",
        "createdAt" : "2020-07-15T13:17:36Z",
        "updatedAt" : "2020-07-23T15:31:12Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "d8bc4780-b1ba-4de4-b757-ac9128bfdbda",
        "parentId" : "b11f3923-0320-4747-b992-c08e69f37777",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "indeed. I tweak the code and not the text.",
        "createdAt" : "2020-07-15T16:05:46Z",
        "updatedAt" : "2020-07-23T15:31:12Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad0894f8ee708f44bf3b9bddc08f79cb93745aa9",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +751,755 @@\n   Int_t max_size = basketbytes[basketnumber];\n   for(Int_t b = basketnumber + 1; (b < maxbaskets) && (b < (basketnumber+10)); ++b) {\n      max_size = std::max(max_size, basketbytes[b]);\n   }"
  }
]