[
  {
    "id" : "ccdce003-1f8c-46a7-bda2-2ac04a6bee53",
    "prId" : 8660,
    "prUrl" : "https://github.com/root-project/root/pull/8660#pullrequestreview-713192772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a737be2a-478a-4e6c-ade9-6609da866a16",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "this logic is much simpler that what is done in `Add`. One thing I see it's missing is handling the case in which `elist` has sublists (totally ok on my side, maybe it warrants a mention in the method description).\r\n\r\n@pcanal do we need to take care of something else that `Add` takes care of?",
        "createdAt" : "2021-07-20T13:15:36Z",
        "updatedAt" : "2021-07-20T13:40:56Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "8cc4f25f-ce5f-4ceb-9b81-a0f24ecf1a2c",
        "parentId" : "a737be2a-478a-4e6c-ade9-6609da866a16",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "With the current signature there is nothing more to do.  The complexity in the regular case is the \"or merge with existing\" part.  Since here, by contract, it is just an add, we are done.  (One would need to reintroduce that complexity, if this routine was 'AddAt' to merge with an existing entry list as the same index.",
        "createdAt" : "2021-07-22T20:10:37Z",
        "updatedAt" : "2021-07-22T20:10:37Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e5a201bc1deab48e1883e0e8913eb407cacd236",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +576,580 @@   }\n   fLists->Add(elistcopy);\n}\n\n////////////////////////////////////////////////////////////////////////////////"
  }
]