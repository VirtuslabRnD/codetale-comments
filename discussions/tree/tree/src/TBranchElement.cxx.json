[
  {
    "id" : "6ef41068-c199-4629-99f5-4f2af9c178e8",
    "prId" : 2521,
    "prUrl" : "https://github.com/root-project/root/pull/2521#pullrequestreview-150107519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dac35c1-11a7-496c-957b-ed382f7364de",
        "parentId" : null,
        "authorId" : "a4098cc8-1677-4408-8eb5-cabf1875c2bd",
        "body" : "Is this check thread-safe?",
        "createdAt" : "2018-08-28T12:52:56Z",
        "updatedAt" : "2018-08-28T12:52:56Z",
        "lastEditedBy" : "a4098cc8-1677-4408-8eb5-cabf1875c2bd",
        "tags" : [
        ]
      },
      {
        "id" : "dccb2388-9098-4996-a699-715533949fc4",
        "parentId" : "0dac35c1-11a7-496c-957b-ed382f7364de",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "No, but it does not need to.  Only one thread should call SetAddress on the same branch object at a time.",
        "createdAt" : "2018-08-28T12:57:11Z",
        "updatedAt" : "2018-08-28T12:57:11Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "806decfbd6a3d5d29acd52b58db93102c3331f5b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +5248,5252 @@   // We do this only once because it depends only on\n   // the type of our object, not on its address.\n   if (!fInitOffsets) {\n      // R__LOCKGUARD(gInterpreterMutex);\n      InitializeOffsets();"
  },
  {
    "id" : "cf9a8e0f-f085-4d89-85de-e540dce4f972",
    "prId" : 7286,
    "prUrl" : "https://github.com/root-project/root/pull/7286#pullrequestreview-600936117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c031ef3b-eb24-45b1-ac2b-b417bffa7e99",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "How can that happen, why is this not an error / inconsistency that should be diagnosed?",
        "createdAt" : "2021-03-01T13:40:49Z",
        "updatedAt" : "2021-03-02T22:50:28Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "73484a57-b7af-45cd-9a99-9ddd097cd773",
        "parentId" : "c031ef3b-eb24-45b1-ac2b-b417bffa7e99",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "bah ... \"Technically\" the user can screw with the list of branches ..",
        "createdAt" : "2021-03-01T16:38:34Z",
        "updatedAt" : "2021-03-02T22:50:28Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "42f6af2ad3d5063d76a91b41221663a6f815ac92",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1148,1152 @@   for (Int_t i = 0; i < nbranches; ++i) {\n      TBranchElement* bre = (TBranchElement*) fBranches.At(i);\n      if (!bre)\n         continue;\n      if (fType == 3) {"
  }
]