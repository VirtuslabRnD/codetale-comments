[
  {
    "id" : "a009b0b0-c9e3-4e73-9538-fd51b13d4c8a",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-348638439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This (doing serialization on nullptr to get the size) implies that all the low level routine all contains ```if (buffer != nullptr) {```.  Maybe (later) we can optimize this by making the Serialize* routine templated on whether they are counting or not (giving also the opportunity to do some of the counting at compile time).",
        "createdAt" : "2019-12-12T19:14:29Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "8ef60bab-0fa3-452c-a85e-c9946d873063",
        "parentId" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "ping.",
        "createdAt" : "2020-01-17T22:58:16Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "db6631eb-d0bf-4ade-af0b-390c3083f907",
        "parentId" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I added a [TODO](https://github.com/root-project/root/pull/4674/commits/98d53d59e96aa110ef105ba7537069af2b069442)",
        "createdAt" : "2020-01-27T12:51:36Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@{\n   const auto &descriptor = fDescriptorBuilder.GetDescriptor();\n   auto szHeader = descriptor.SerializeHeader(nullptr);\n   auto buffer = std::unique_ptr<unsigned char[]>(new unsigned char[szHeader]);\n   descriptor.SerializeHeader(buffer.get());"
  },
  {
    "id" : "1af339e5-7f53-4d27-ac21-c46fab97f961",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-331470602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b6554e2-c072-47ef-a383-b72d618c6d21",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "You may want to specific in the doc string what this is meant to clone (data, meta, file descriptor, etc.)?",
        "createdAt" : "2019-12-12T19:29:02Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 336,
    "diffHunk" : "@@ -1,1 +334,338 @@}\n\nstd::unique_ptr<ROOT::Experimental::Detail::RPageSource> ROOT::Experimental::Detail::RPageSourceFile::Clone() const\n{\n   auto clone = new RPageSourceFile(fNTupleName, fOptions);"
  },
  {
    "id" : "b2b21cab-a9a4-4cdc-9086-0f998206c383",
    "prId" : 4877,
    "prUrl" : "https://github.com/root-project/root/pull/4877#pullrequestreview-359967903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddf687fe-7a4d-4298-a376-5def0c17b6e3",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Shouldn't RRawFile::Create return a unique_ptr?",
        "createdAt" : "2020-02-13T16:57:31Z",
        "updatedAt" : "2020-02-13T16:57:31Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "3c8b732c-8051-4b48-aae5-844703afe655",
        "parentId" : "ddf687fe-7a4d-4298-a376-5def0c17b6e3",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Indeed, addressed in #5018 ",
        "createdAt" : "2020-02-17T09:44:26Z",
        "updatedAt" : "2020-02-17T09:44:26Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "4b16b3ce-b88d-4dd6-9d89-faa6987e2681",
        "parentId" : "ddf687fe-7a4d-4298-a376-5def0c17b6e3",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "thanks.",
        "createdAt" : "2020-02-17T21:14:30Z",
        "updatedAt" : "2020-02-17T21:14:30Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f4a095809aa059c0cd5566593bf7f37274552e8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +211,215 @@   : RPageSourceFile(ntupleName, options)\n{\n   fFile = std::unique_ptr<ROOT::Internal::RRawFile>(ROOT::Internal::RRawFile::Create(path));\n   R__ASSERT(fFile);\n   fReader = Internal::RMiniFileReader(fFile.get());"
  },
  {
    "id" : "1444d0b2-55c3-454c-a0c3-7914531feb9a",
    "prId" : 5377,
    "prUrl" : "https://github.com/root-project/root/pull/5377#pullrequestreview-438319505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba4aed4c-e9c7-4380-9d90-b03be5aaf6c0",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "The 0.25 is likely to be a not-necessary-irrelevant tuning parameter (may need to be adjusted base on link/hardware latency and speed and user tolerance for 'extra' cost) ... i.e. may need to be eventually modifiable at run-time.",
        "createdAt" : "2020-06-24T18:56:48Z",
        "updatedAt" : "2020-06-29T15:55:03Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "0458cdb4-7869-4a0f-b420-6cba8d85ff27",
        "parentId" : "ba4aed4c-e9c7-4380-9d90-b03be5aaf6c0",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Another related tuning possibility is rounding up or down to fit the device block size.  ",
        "createdAt" : "2020-06-24T18:59:11Z",
        "updatedAt" : "2020-06-29T15:55:03Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "03d4f4ed-9f64-4c9f-9598-88d85da049eb",
        "parentId" : "ba4aed4c-e9c7-4380-9d90-b03be5aaf6c0",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Yep, I added a TODO:\r\n\r\n    // TODO(jblomer): Eventually we may want to select the parameter at runtime according to link latency and speed,\r\n    // memory consumption, device block size.",
        "createdAt" : "2020-06-26T13:59:28Z",
        "updatedAt" : "2020-06-29T15:55:03Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c9e7c8ebfa10154ea784232e4e0490855cc14b0",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +425,429 @@   // TODO(jblomer): Eventually we may want to select the parameter at runtime according to link latency and speed,\n   // memory consumption, device block size.\n   float maxOverhead = 0.25 * float(activeSize);\n   std::vector<std::size_t> gaps;\n   for (unsigned i = 1; i < onDiskPages.size(); ++i) {"
  },
  {
    "id" : "a27b8c53-4240-47f7-90d8-be3a3370521b",
    "prId" : 6106,
    "prUrl" : "https://github.com/root-project/root/pull/6106#pullrequestreview-566309171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2dd87ff-8f3b-4765-90e8-db9cb8296eab",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__LOG_DEBUG`? :-)",
        "createdAt" : "2020-12-15T19:46:17Z",
        "updatedAt" : "2020-12-15T19:54:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "8486d83f-46bc-4a54-9cf9-a0377a29645f",
        "parentId" : "f2dd87ff-8f3b-4765-90e8-db9cb8296eab",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Removed altogether in #7025",
        "createdAt" : "2021-01-12T14:15:17Z",
        "updatedAt" : "2021-01-12T14:15:17Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3ba2aa25fe80be3a3ab4d0c5b404e686ee4978b",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +372,376 @@      fCounters->fNPageLoaded.Inc();\n   } else {\n      //printf(\"GETTING CLUSTER %ld\\n\", clusterId);\n      if (!fCurrentCluster || (fCurrentCluster->GetId() != clusterId) || !fCurrentCluster->ContainsColumn(columnId))\n         fCurrentCluster = fClusterPool->GetCluster(clusterId, fActiveColumns);"
  },
  {
    "id" : "15b7e4ce-c331-4eeb-87a1-9de8454ea335",
    "prId" : 6106,
    "prUrl" : "https://github.com/root-project/root/pull/6106#pullrequestreview-566304967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48182afa-323b-4fb8-87a6-005e8adca2a8",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "`R__LOG_DEBUG`?",
        "createdAt" : "2020-12-15T19:46:29Z",
        "updatedAt" : "2020-12-15T19:54:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "00c4e211-858f-475b-9949-305e551b0552",
        "parentId" : "48182afa-323b-4fb8-87a6-005e8adca2a8",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Removed altogether in #7025",
        "createdAt" : "2021-01-12T14:12:54Z",
        "updatedAt" : "2021-01-12T14:12:54Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3ba2aa25fe80be3a3ab4d0c5b404e686ee4978b",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +382,386 @@\n      ROnDiskPage::Key key(columnId, pageNo);\n      //printf(\"POPULATE cluster %ld column %ld page %ld\\n\", clusterId, columnId, pageNo);\n      auto onDiskPage = fCurrentCluster->GetOnDiskPage(key);\n      R__ASSERT(onDiskPage);"
  },
  {
    "id" : "8dcaaf8d-ec95-485d-a47f-044001d79c95",
    "prId" : 6106,
    "prUrl" : "https://github.com/root-project/root/pull/6106#pullrequestreview-552358605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38b6ab95-c7a9-43fc-ba15-9bbcd6a09d36",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Ouch. Add a FIXME that we want to hand-over buffers, or does this not work because the pages in the cluster are continuous?",
        "createdAt" : "2020-12-15T19:50:20Z",
        "updatedAt" : "2020-12-15T19:54:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3ba2aa25fe80be3a3ab4d0c5b404e686ee4978b",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +631,635 @@                  // We cannot simply map the onDiskPage because the cluster pool and the page pool have different\n                  // life times\n                  memcpy(pageBufferPacked, onDiskPage->GetAddress(), bytesPacked);\n               }\n"
  },
  {
    "id" : "e28b55c9-79d2-4097-8238-b6f3806e65b4",
    "prId" : 6106,
    "prUrl" : "https://github.com/root-project/root/pull/6106#pullrequestreview-566305321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c98f85f-eaf8-485c-948f-d857e8c66cad",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "This seems to be an almost copy of `RPageSourceFile::PopulatePageFromCluster`. Can you refactor to reuse the same code in both cases?",
        "createdAt" : "2020-12-15T19:53:23Z",
        "updatedAt" : "2020-12-15T19:54:38Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "671ef54d-3592-4c91-8ee4-c2c5c5740a40",
        "parentId" : "6c98f85f-eaf8-485c-948f-d857e8c66cad",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Addressed in #7025",
        "createdAt" : "2021-01-12T14:13:17Z",
        "updatedAt" : "2021-01-12T14:13:17Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3ba2aa25fe80be3a3ab4d0c5b404e686ee4978b",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +615,619 @@         R__ASSERT(onDiskPage->GetSize() == pi.fLocator.fBytesOnStorage);\n\n         auto taskFunc =\n            [this, columnId, clusterId, firstInPage, onDiskPage,\n             element = allElements.back().get(),"
  }
]