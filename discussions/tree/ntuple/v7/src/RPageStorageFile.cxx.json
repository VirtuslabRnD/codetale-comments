[
  {
    "id" : "a009b0b0-c9e3-4e73-9538-fd51b13d4c8a",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-348638439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This (doing serialization on nullptr to get the size) implies that all the low level routine all contains ```if (buffer != nullptr) {```.  Maybe (later) we can optimize this by making the Serialize* routine templated on whether they are counting or not (giving also the opportunity to do some of the counting at compile time).",
        "createdAt" : "2019-12-12T19:14:29Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "8ef60bab-0fa3-452c-a85e-c9946d873063",
        "parentId" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "ping.",
        "createdAt" : "2020-01-17T22:58:16Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "db6631eb-d0bf-4ade-af0b-390c3083f907",
        "parentId" : "55a96b9a-2d3f-43bd-bec3-81266d8ab2fe",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I added a [TODO](https://github.com/root-project/root/pull/4674/commits/98d53d59e96aa110ef105ba7537069af2b069442)",
        "createdAt" : "2020-01-27T12:51:36Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@{\n   const auto &descriptor = fDescriptorBuilder.GetDescriptor();\n   auto szHeader = descriptor.SerializeHeader(nullptr);\n   auto buffer = std::unique_ptr<unsigned char[]>(new unsigned char[szHeader]);\n   descriptor.SerializeHeader(buffer.get());"
  },
  {
    "id" : "1af339e5-7f53-4d27-ac21-c46fab97f961",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-331470602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b6554e2-c072-47ef-a383-b72d618c6d21",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "You may want to specific in the doc string what this is meant to clone (data, meta, file descriptor, etc.)?",
        "createdAt" : "2019-12-12T19:29:02Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 336,
    "diffHunk" : "@@ -1,1 +334,338 @@}\n\nstd::unique_ptr<ROOT::Experimental::Detail::RPageSource> ROOT::Experimental::Detail::RPageSourceFile::Clone() const\n{\n   auto clone = new RPageSourceFile(fNTupleName, fOptions);"
  }
]