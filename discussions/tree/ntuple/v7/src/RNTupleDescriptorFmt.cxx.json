[
  {
    "id" : "881f445d-5a9f-4611-824b-24e24697d26f",
    "prId" : 6756,
    "prUrl" : "https://github.com/root-project/root/pull/6756#pullrequestreview-531407854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a070067-2748-4718-88d7-1e95688c3bcc",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I am confused ... maybe ...   Why do we need to make an allocation just to get the element size?",
        "createdAt" : "2020-11-10T21:26:31Z",
        "updatedAt" : "2020-11-10T21:26:31Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "6d391ffc-0155-4adb-85fc-2357fd8bc77f",
        "parentId" : "2a070067-2748-4718-88d7-1e95688c3bcc",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "That's not great indeed.  We could define a static array that stores the on-disk sizes of an element of a given [column type](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumnModel.hxx#L35). Or is this too brittle?",
        "createdAt" : "2020-11-16T10:12:22Z",
        "updatedAt" : "2020-11-16T10:12:22Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "1d82d8c0-594d-46ab-9fcb-a7177a051835",
        "parentId" : "2a070067-2748-4718-88d7-1e95688c3bcc",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I guess you could also duplicate the switch statement that is already in `RColumnElementBase::Generate`",
        "createdAt" : "2020-11-16T15:06:52Z",
        "updatedAt" : "2020-11-16T15:06:52Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e8a175eb07480bdb96a4f0013063a040032285f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +114,118 @@   int compression = -1;\n   for (const auto &column : fColumnDescriptors) {\n      auto elementSize = Detail::RColumnElementBase::Generate(\n         column.second.GetModel().GetType())->GetSize();\n"
  }
]