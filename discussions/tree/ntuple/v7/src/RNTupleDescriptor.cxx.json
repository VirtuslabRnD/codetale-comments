[
  {
    "id" : "d074fbf6-64d7-4070-9e36-af97c5c03c4c",
    "prId" : 6267,
    "prUrl" : "https://github.com/root-project/root/pull/6267#pullrequestreview-477749675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "246c961a-2179-4960-9835-45a2e14ad433",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "I guess `GetParentId` can only ever return `kInvalidDescriptorId` here for top-level fields, right?",
        "createdAt" : "2020-08-28T09:13:15Z",
        "updatedAt" : "2020-08-28T13:55:37Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "f032e4c7-133a-4764-91d4-a32b76339a6c",
        "parentId" : "246c961a-2179-4960-9835-45a2e14ad433",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "The top-level fields have the so-called \"field zero\" (the invisible root) as their parent, which in turn has `kInvalidDescriptorId` as a parent if",
        "createdAt" : "2020-08-28T13:56:41Z",
        "updatedAt" : "2020-08-28T13:56:41Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "94f383dae27fde48a7759e52ffe84f6c515feecc",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +689,693 @@\n   const auto &fieldDescriptor = fFieldDescriptors.at(fieldId);\n   auto prefix = GetQualifiedFieldName(fieldDescriptor.GetParentId());\n   if (prefix.empty())\n      return fieldDescriptor.GetFieldName();"
  },
  {
    "id" : "e98a2dc6-6a55-455b-8ee1-38388d473227",
    "prId" : 6687,
    "prUrl" : "https://github.com/root-project/root/pull/6687#pullrequestreview-516264669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fc8c583-320b-4920-8e9a-07aa2824a7ef",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "What is the behavior in case Create 'fails'?",
        "createdAt" : "2020-10-23T16:04:12Z",
        "updatedAt" : "2020-10-23T16:04:12Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "e1074134-e4ce-4ca8-a677-7d8ec3daacb1",
        "parentId" : "4fc8c583-320b-4920-8e9a-07aa2824a7ef",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "An exception is thrown in `Unwrap()` (previously `R__ASSERT` was called in `Detail::RFieldBase::Create`).",
        "createdAt" : "2020-10-24T09:39:55Z",
        "updatedAt" : "2020-10-24T09:39:55Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "894f53ce97c54fb6c2e4239583227de9bc1312d0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +766,770 @@   for (const auto &topDesc : GetTopLevelFields()) {\n      auto field = Detail::RFieldBase::Create(topDesc.GetFieldName(), topDesc.GetTypeName());\n      model->AddField(field.Unwrap());\n   }\n   return model;"
  }
]