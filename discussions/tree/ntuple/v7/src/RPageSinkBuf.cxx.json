[
  {
    "id" : "6b4d8c21-d9ce-4e5f-bf88-ab92c439d039",
    "prId" : 7783,
    "prUrl" : "https://github.com/root-project/root/pull/7783#pullrequestreview-633705049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9c3b4e4-85b0-4814-aca5-c28986dc59e5",
        "parentId" : null,
        "authorId" : "a8c9d8db-0fb8-4803-8857-3254086320bb",
        "body" : "We are currently allocating and deallocating buffered pages each time a cluster is committed, but we could hold on to allocated pages across cluster commits and only deallocate them when RPageSinkBuf is destroyed. This would need some care around tracking which pages are live, checking whether they could hold the requested amount of elements, etc.",
        "createdAt" : "2021-04-12T15:53:30Z",
        "updatedAt" : "2021-04-23T15:51:41Z",
        "lastEditedBy" : "a8c9d8db-0fb8-4803-8857-3254086320bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b8188953c7ecce2bce4a0f8b856ba2590a84a07",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@ROOT::Experimental::Detail::RPageSinkBuf::CommitPageImpl(ColumnHandle_t columnHandle, const RPage &page)\n{\n   // TODO avoid frequent (de)allocations by holding on to allocated buffers in RColumnBuf\n   RPage bufPage = ReservePage(columnHandle, page.GetNElements());\n   // make sure the page is aware of how many elements it will have"
  }
]