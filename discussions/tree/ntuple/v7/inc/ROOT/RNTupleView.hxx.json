[
  {
    "id" : "652768a7-2a48-4e65-8e2f-c489a24b7dd1",
    "prId" : 7341,
    "prUrl" : "https://github.com/root-project/root/pull/7341#pullrequestreview-606108397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38ece336-f7ef-45db-8449-6bcb0f80c0f2",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "It is not clear (and/or I missed the description) why `SetOnDiskId` is called along side `ConnectPageStorage\r\n` and why sometimes only `ConnectPageStorage` is called.  Could you clarify?",
        "createdAt" : "2021-03-05T22:31:27Z",
        "updatedAt" : "2021-03-05T22:31:27Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "601147c2-44f7-47e0-b63c-8829a5e5204d",
        "parentId" : "38ece336-f7ef-45db-8449-6bcb0f80c0f2",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "The separation of `SetOnDiskId` and `ConnectPageStorage` allows for lazy/late binding. We can create fields and remember to which field ID on disk they refer to but only acquire actual I/O buffers when we really need the field.  That's handy for RDF, for example.  When an RNTuple view is created, however, the underlying field should immediately be available for reading, so we call both `SetOnDiskId` and `ConnectPageStorage` at the same time.",
        "createdAt" : "2021-03-08T09:36:42Z",
        "updatedAt" : "2021-03-08T09:36:42Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "a43dcba9ec53d36a23691b56c7c124be2127b9cc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +166,170 @@   {\n      fField.SetOnDiskId(fieldId);\n      fField.ConnectPageStorage(*pageSource);\n      for (auto &f : fField) {\n         auto subFieldId = pageSource->GetDescriptor().FindFieldId(f.GetName(), f.GetParent()->GetOnDiskId());"
  }
]