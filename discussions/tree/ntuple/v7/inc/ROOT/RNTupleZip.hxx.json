[
  {
    "id" : "e8f5ba77-1e1f-4803-ac55-05adeaf48ebe",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-349785570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "942fa93c-5c66-413f-ad70-9ffd426de7cd",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Shouldn't we use the newer compression interface rather than the encoded (100*a+l) int to selection the compression algorithm?",
        "createdAt" : "2020-01-17T22:54:05Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "d51e39bc-ffb5-44ad-baf3-092ab35692cd",
        "parentId" : "942fa93c-5c66-413f-ad70-9ffd426de7cd",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I found the `int` more handy as a compact way to pass around the compression settings (otherwise I'd need two parameters, I think: algorithm and level).  This is in any case an internal interface.",
        "createdAt" : "2020-01-21T13:35:56Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "c7dea9db-d7ec-46f8-9920-23d51647352b",
        "parentId" : "942fa93c-5c66-413f-ad70-9ffd426de7cd",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "ok.",
        "createdAt" : "2020-01-28T23:52:33Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@   /// Returns the size of the compressed data. Data is compressed in 16MB blocks and written\n   /// piecewise using the provided writer\n   size_t operator() (const void *from, size_t nbytes, int compression, Writer_t fnWriter) {\n      R__ASSERT(from != nullptr);\n"
  }
]