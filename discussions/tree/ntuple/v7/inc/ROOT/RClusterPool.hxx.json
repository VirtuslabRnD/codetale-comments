[
  {
    "id" : "3a530f30-810a-4eb4-bb63-0b8d7c06be81",
    "prId" : 5377,
    "prUrl" : "https://github.com/root-project/root/pull/5377#pullrequestreview-421395189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20eb0535-c302-415e-8967-093aeb12c6a2",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "*Please* add a comment / doc (it's crucial!) why we can use a `std::thread`, despite whatever executor library is used by the surrounding application. I.e. \"Can hide this thread from threading library because it does no CPU work, i.e. must not matter for accounting. It's a `std::thread` invoking kernel I/O operations that are meant to be extremely cheap in CPU.` or alike, just to get the point across :-)",
        "createdAt" : "2020-06-05T14:34:13Z",
        "updatedAt" : "2020-06-29T15:55:03Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c9e7c8ebfa10154ea784232e4e0490855cc14b0",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@   /// data to arrive (blocked by the kernel) and therefore can safely run in addition to the application\n   /// main threads.\n   std::thread fThreadIo;\n\n   /// Every cluster id has at most one corresponding RCluster pointer in the pool"
  }
]