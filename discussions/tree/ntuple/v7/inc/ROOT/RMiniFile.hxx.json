[
  {
    "id" : "115c5afc-560d-4161-8215-53f3b03827e1",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-345955984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8861cdb1-4bdf-460c-90e1-bc6e25b106ff",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Is it clear enough that this is different from ROOT::Experimental::Detail::RNTuple and which one to use for what purpose?",
        "createdAt" : "2020-01-17T22:43:40Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "cd21d514-559e-443e-b9c9-38e3f54f2ab2",
        "parentId" : "8861cdb1-4bdf-460c-90e1-bc6e25b106ff",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Should this be here or in its own header file?",
        "createdAt" : "2020-01-17T22:49:17Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "e9f1cafd-4993-419a-ac59-d887876dd6b6",
        "parentId" : "8861cdb1-4bdf-460c-90e1-bc6e25b106ff",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Ouch... I removed the other, largely useless `RNTuple` class.\r\n\r\nThe class name indicates a much more central role than it actually has. I think it is right in RMiniFile as the structure for anchoring an `RNTuple` in an `RFile`.  We could name it `RNTupleAnchor` or similar, but I'd like it to appear as \"RNTuple\" when you do `TFile->Map()` (or `.ls`).",
        "createdAt" : "2020-01-21T15:16:36Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@*/\n// clang-format on\nstruct RNTuple {\n   /// Allows for evolving the struct in future versions\n   std::uint32_t fVersion = 0;"
  },
  {
    "id" : "041f9718-6efa-4edb-8172-92749b7baa88",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-344880828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2f478ef-8177-438e-a6b7-5ddea28d8a62",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "As a side note, I think we still have to upgrade TStreamerInfo (and possibly TDataMember) to correctly store those as 32 bits on all platforms (on platforms where long is 32bits and that typedef happens to use long then it will be stored as 64bits).",
        "createdAt" : "2020-01-17T22:45:03Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@struct RNTuple {\n   /// Allows for evolving the struct in future versions\n   std::uint32_t fVersion = 0;\n   /// Allows for skipping the struct\n   std::uint32_t fSize = sizeof(RNTuple);"
  },
  {
    "id" : "464efef1-070b-414e-90f3-871f7c86c195",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-345887744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7493c3-e682-4154-b9bc-ec34c62b3e1e",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "If this is different from the implicit operator==, it should be noted here (humm is there even an implicit operator==?)",
        "createdAt" : "2020-01-17T22:45:59Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "646305ea-61f4-421a-989d-28d0d71d8363",
        "parentId" : "db7493c3-e682-4154-b9bc-ec34c62b3e1e",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Unfortunately there is no implicit `==` operator.  I added a clarifying comment.",
        "createdAt" : "2020-01-21T13:48:24Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\n   /// The canonical, member-wise equality test\n   bool operator ==(const RNTuple &other) const {\n      return fVersion == other.fVersion &&\n         fSize == other.fSize &&"
  },
  {
    "id" : "4192878b-b0c2-4748-9b5e-70fdd93a0755",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-351537887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7909dc96-812a-42fb-8a44-31490bdf53b4",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Is it worth noting in the name that this reads only RNTuples and/or will that class be extended later to support more types?",
        "createdAt" : "2020-01-17T22:48:56Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "9909251d-2912-4482-b9e5-ad52c2ecc595",
        "parentId" : "7909dc96-812a-42fb-8a44-31490bdf53b4",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I'm afraid it becomes a bit longish... Perhaps more generally we should discuss an RNTuple namespace (like `ROOT::RDF`) because there are more classes with generic names (e.g. `RPage`). How about `ROOT::RNTPL`?",
        "createdAt" : "2020-01-21T15:26:15Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "982c571a-55ab-4aa8-a093-fe7dcf953feb",
        "parentId" : "7909dc96-812a-42fb-8a44-31490bdf53b4",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "(Regarding the other question: there are no immediate plans to extend it but I wouldn't exclude that option either.)",
        "createdAt" : "2020-01-21T15:26:45Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "8bac8f0c-5a61-4459-ad5a-f6f6864da130",
        "parentId" : "7909dc96-812a-42fb-8a44-31490bdf53b4",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : ">  we should discuss an RNTuple namespace \r\n\r\nWhat would be in there?",
        "createdAt" : "2020-01-28T23:51:31Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "23ad1cab-33fd-4908-a773-cbf34edd5c7f",
        "parentId" : "7909dc96-812a-42fb-8a44-31490bdf53b4",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I have in mind to put in the generic classes that make only sense in RNTuple context: `RPage`, `RField`, `RValue`, `RPageStorage`, `RView`.  Some of the classes are currently prefixed by \"NTuple\", such as `RNTupleView`. Perhaps we can benefit for RDF experience for the namespace shuffle.",
        "createdAt" : "2020-01-31T14:25:24Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@*/\n// clang-format on\nclass RMiniFileReader {\nprivate:\n   /// The raw file used to read byte ranges"
  },
  {
    "id" : "a5ab5603-78d1-4c29-b478-860c9898fca3",
    "prId" : 4674,
    "prUrl" : "https://github.com/root-project/root/pull/4674#pullrequestreview-351536017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "322c0eee-363c-43fd-9ea1-21f3e065c77a",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This implies that there is only one RNTuple per TFile.    Is that a temporary restriction?",
        "createdAt" : "2020-01-17T22:51:41Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "1e841386-da21-4ffb-9382-fcf36ddf4f6c",
        "parentId" : "322c0eee-363c-43fd-9ea1-21f3e065c77a",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I added a clarification in the member comment",
        "createdAt" : "2020-01-21T13:39:00Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "18410271-5885-458e-8ef6-66278bbf2a9c",
        "parentId" : "322c0eee-363c-43fd-9ea1-21f3e065c77a",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "> writers can concurrently operate on the same file iff they use a proper TFile object for writing.\r\n\r\nAnd the proper 'locks' (in case of multiple thread) as neither File nor TFile are thread safe.\r\n\r\n> iff they use a proper\r\n\r\nDo you mean \"if\"?",
        "createdAt" : "2020-01-28T23:49:48Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "fc428e08-4ded-41cc-a228-1342b1c8308d",
        "parentId" : "322c0eee-363c-43fd-9ea1-21f3e065c77a",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "The \"concurrently\" is misleading, I removed it.  What I mean is that multiple `RNTupleWriter` objects can co-exist in a sequential program, in which case they'd need to share the `TFile` object of course.\r\n\r\nReplaced \"iff\" by \"if (and only if)\".",
        "createdAt" : "2020-01-31T14:22:33Z",
        "updatedAt" : "2020-02-03T14:47:57Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "567bf0f4837ce82f9713988215033d4d6445d5e7",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@   /// The identifier of the RNTuple; A single writer object can only write a single RNTuple but multiple\n   /// writers can operate on the same file if (and only if) they use a proper TFile object for writing.\n   std::string fNTupleName;\n   /// The file name without parent directory; only required when writing with a C file stream\n   std::string fFileName;"
  }
]