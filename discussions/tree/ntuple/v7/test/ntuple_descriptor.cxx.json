[
  {
    "id" : "199a5fcf-1eb5-4166-8973-c184299f7102",
    "prId" : 6267,
    "prUrl" : "https://github.com/root-project/root/pull/6267#pullrequestreview-477755599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37db32da-2480-4e68-b4b3-fc02e1399de7",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "unrelated to the PR, but for my education: why does a `std::vector<float>` contain a field that's called like a type? could that cause name clashes in general, or is it a feature limited to `std::vector`s?",
        "createdAt" : "2020-08-28T09:21:46Z",
        "updatedAt" : "2020-08-28T13:55:37Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "7df0b1f8-daa4-4d9c-8e83-9d711913d369",
        "parentId" : "37db32da-2480-4e68-b4b3-fc02e1399de7",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "That's currently the name choice for the child field of a collection.  Not sure yet if that is a good idea.  The inner field can be named anything (e.g. `@1` would work, too). There can be no name clash because a collection in RNTuple has exactly one sub field.",
        "createdAt" : "2020-08-28T13:59:32Z",
        "updatedAt" : "2020-08-28T13:59:32Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "2e1ca230-1d5d-40f1-a920-cf21028a103c",
        "parentId" : "37db32da-2480-4e68-b4b3-fc02e1399de7",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "I would find something like `data` more fitting (but I realize this is subjective)",
        "createdAt" : "2020-08-28T14:03:52Z",
        "updatedAt" : "2020-08-28T14:03:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "94f383dae27fde48a7759e52ffe84f6c515feecc",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +253,257 @@   EXPECT_STREQ(\"ints\", desc.GetQualifiedFieldName(fldIdInts).c_str());\n   auto fldIdJets = desc.FindFieldId(\"jets\");\n   auto fldIdInner = desc.FindFieldId(\"float\", fldIdJets);\n   EXPECT_STREQ(\"jets\", desc.GetQualifiedFieldName(fldIdJets).c_str());\n   EXPECT_STREQ(\"jets.float\", desc.GetQualifiedFieldName(fldIdInner).c_str());"
  }
]