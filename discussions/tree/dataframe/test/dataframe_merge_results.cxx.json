[
  {
    "id" : "e2cdd8cc-603f-4512-85a8-93df09dfc2de",
    "prId" : 5552,
    "prUrl" : "https://github.com/root-project/root/pull/5552#pullrequestreview-419872356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b03ead5-2a69-4298-acd1-1b97e17881aa",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "please add a test in which you get two mergeable results of the same type but from different actions and you try to merge those. an exception should be thrown in this case (no way to find it out at compile time, but we should have a way to find it out a runtime).",
        "createdAt" : "2020-05-08T16:11:34Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "0e0f37e2-6977-4396-81f2-81a4e273ff4d",
        "parentId" : "2b03ead5-2a69-4298-acd1-1b97e17881aa",
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "I'm not sure I understand \"of the same type but from different actions\". Do you mean e.g. a result from a `Max` and from a `Min` that both hold  a `double` as a result? In that case I was already planning on adding that kind of test when the design is fully sorted out",
        "createdAt" : "2020-05-11T07:41:41Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      },
      {
        "id" : "5d78bb19-b3ea-4a7b-b074-f19280e13983",
        "parentId" : "2b03ead5-2a69-4298-acd1-1b97e17881aa",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "> Do you mean e.g. a result from a Max and from a Min that both hold a double as a result?\r\n\r\nyep",
        "createdAt" : "2020-05-11T15:03:19Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "38f06870-acab-4f56-9b5b-4953cad9a5d5",
        "parentId" : "2b03ead5-2a69-4298-acd1-1b97e17881aa",
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "Added in the latest commit",
        "createdAt" : "2020-05-28T08:08:10Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea47b65282af7dc93a386fddf1001401df7fbdd",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@   EXPECT_EQ(mh.GetEntries(), 200);\n   EXPECT_DOUBLE_EQ(mh.GetMean(), 49.5);\n}\n\nTEST(RDataFrameMergeResults, MergeHisto1DModel)"
  },
  {
    "id" : "985b21d4-af95-4f85-ac50-de5b1fc38bf1",
    "prId" : 5552,
    "prUrl" : "https://github.com/root-project/root/pull/5552#pullrequestreview-425723488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5807494-78dd-480a-a69b-54337e4a5106",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "You did a very nice coverage here already, but should we have a test for every possible action that can be invoked on RDF? E.g. `Profile{1D,2D}` is not tested.",
        "createdAt" : "2020-05-29T13:36:34Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "3ac3e95a-459e-4bcc-b6be-87e124561669",
        "parentId" : "e5807494-78dd-480a-a69b-54337e4a5106",
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "Well yes, I am always in favor of testing more! I would also like to add some test with some \"reasonably complicated\" RDF graph ",
        "createdAt" : "2020-05-29T14:28:02Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      },
      {
        "id" : "ff6f7492-4227-48a7-bf48-b0de975739b2",
        "parentId" : "e5807494-78dd-480a-a69b-54337e4a5106",
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "Or make it a tutorial even",
        "createdAt" : "2020-05-29T14:28:17Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      },
      {
        "id" : "c6d96b71-7048-47cd-8551-b693b31c8d4a",
        "parentId" : "e5807494-78dd-480a-a69b-54337e4a5106",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "if you make a tutorial (which is independent of adding the tests) make sure to make it clear that this is an advanced feature, for developers",
        "createdAt" : "2020-06-01T20:27:31Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "111083e8-67ea-46f9-8b5f-c972c16f5312",
        "parentId" : "e5807494-78dd-480a-a69b-54337e4a5106",
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "I've added tests for Profile1D,2D in the C++ tests. For the python tests maybe it's better to stick with a very short number since they take longer to process. For now there are two tests, one for the Mean operation and the other for Histo1D, that also `pickle` the results a couple of times to make sure they can be serialized properly",
        "createdAt" : "2020-06-06T08:10:22Z",
        "updatedAt" : "2020-06-08T12:57:18Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea47b65282af7dc93a386fddf1001401df7fbdd",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@#include <ROOT/RDataFrame.hxx>\n#include <ROOT/RResultPtr.hxx> // GetMergeableValue\n#include <stdexcept>"
  }
]