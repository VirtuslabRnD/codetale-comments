[
  {
    "id" : "0f458928-3318-4725-aa31-0a5337259967",
    "prId" : 6266,
    "prUrl" : "https://github.com/root-project/root/pull/6266#pullrequestreview-476873585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f631b296-6dab-4772-a34a-8e25e10b055b",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "nice to have to stir things up, but feel free to disregard: a sleep for a small, random amount of time, around 10% of the total execution time",
        "createdAt" : "2020-08-27T16:27:22Z",
        "updatedAt" : "2020-09-18T07:54:08Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3efb2eab2c6c180045b7a1033f4abee5f5f112fe",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +88,92 @@   auto func = [] {\n         std::this_thread::sleep_for(std::chrono::milliseconds(std::rand() / RAND_MAX * 200));\n         ROOT::RDataFrame df(10);\n         return df.Define(\"x\", \"rdfentry_\").Mean(\"x\").GetValue();\n      };"
  },
  {
    "id" : "5663287e-9ad0-4301-9edd-8691dabd6027",
    "prId" : 6266,
    "prUrl" : "https://github.com/root-project/root/pull/6266#pullrequestreview-476873585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "992257b1-14b7-4962-a88b-e314dee57673",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "we definitely need to also test concurrent `Snapshot`s (I don't expect surprises, but it's good to have a test) and `SaveGraph` (we saw above it has these static counter thingies)",
        "createdAt" : "2020-08-27T16:40:22Z",
        "updatedAt" : "2020-09-18T07:54:08Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3efb2eab2c6c180045b7a1033f4abee5f5f112fe",
    "line" : 182,
    "diffHunk" : "@@ -1,1 +228,232 @@}\n\n#endif"
  },
  {
    "id" : "8c77779d-663d-4747-8555-955c5691ca6c",
    "prId" : 6842,
    "prUrl" : "https://github.com/root-project/root/pull/6842#pullrequestreview-534325939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "It is not useless to run with the max number of core when we can.  Could we make this to be set just for the 32 bits build?",
        "createdAt" : "2020-11-18T18:00:22Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "e40a945c-1bb1-497e-adb0-8760262cd32a",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Yep, I can do that!",
        "createdAt" : "2020-11-18T18:06:46Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "cd33ec71-3301-4cbc-8ace-36f6e1688d77",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "@pcanal What about this?",
        "createdAt" : "2020-11-18T18:13:36Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "05d4093c-b616-494e-abac-1efa304c908b",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Wouldn't the test also fails on Linux/32bits ... if there was enough cores?",
        "createdAt" : "2020-11-18T18:24:06Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "ffb532b2-c0ac-4ade-82d4-19955f4b7085",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Fails also on 64bit with enough cores ;) What is the magic preproc var for detecting 32bit?",
        "createdAt" : "2020-11-19T07:24:37Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "a5414c98-21de-4aa0-a50a-0b03206c69de",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Found it, it's `R__B64`",
        "createdAt" : "2020-11-19T08:03:49Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "4f223d35-0933-4bc0-9a0c-064c81c14a7a",
        "parentId" : "af2fc4c0-8caf-4a60-87e9-7f8ea08f9599",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can you `#include \"ROOT/RConfig.hxx\"` to make sure we see `R__B64` without relying on side-effects of other `#include`s?",
        "createdAt" : "2020-11-19T11:20:57Z",
        "updatedAt" : "2020-11-19T13:53:26Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cbd3be6ef5aff793fcec8db6e85ec86028687f5",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +21,25 @@TEST(RDFConcurrency, NestedParallelismBetweenDefineCalls)\n{\n   ROOT::EnableImplicitMT(NUM_THREADS);\n\n   // this Define will return unique values from 0 to nEntries - 1 (over all threads)"
  }
]