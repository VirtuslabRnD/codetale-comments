[
  {
    "id" : "f5309fc1-fb2d-4427-b224-9f91b983821f",
    "prId" : 2394,
    "prUrl" : "https://github.com/root-project/root/pull/2394#pullrequestreview-142274081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10e36a2f-076f-43bd-b946-ae6dd089610b",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "well done, very thorough testing!",
        "createdAt" : "2018-08-01T08:44:02Z",
        "updatedAt" : "2018-08-02T07:06:13Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa050b8d6afe003b6024521f0ff05d0e14ff9776",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +248,252 @@   EXPECT_EQ(comparison, names);\n}\n\nTEST(RDataFrameInterface, DefaultColumns)\n{"
  },
  {
    "id" : "58fdc49e-dc75-4ae4-910b-b4e0d5574722",
    "prId" : 7333,
    "prUrl" : "https://github.com/root-project/root/pull/7333#pullrequestreview-603810561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faa1bef9-65be-423d-9303-83abdbb78f45",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Do we have a similar test for the `Alias` case?",
        "createdAt" : "2021-03-02T16:26:06Z",
        "updatedAt" : "2021-03-02T16:41:52Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "fbaecb20-d019-4eda-8f22-469e8c8c2c1a",
        "parentId" : "faa1bef9-65be-423d-9303-83abdbb78f45",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "around lines 60 in this file we have similar tests for Alias. I'll add one for the case in which the alias name is not a valid C++ variable name, I think that's missing",
        "createdAt" : "2021-03-02T16:38:26Z",
        "updatedAt" : "2021-03-02T16:41:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "e2cfdbd9-a79d-4905-abdd-a4a09983e6af",
        "parentId" : "faa1bef9-65be-423d-9303-83abdbb78f45",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "done",
        "createdAt" : "2021-03-02T16:42:10Z",
        "updatedAt" : "2021-03-02T16:42:10Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "d5ffb163-5473-4c07-83b0-29d8db1043c5",
        "parentId" : "faa1bef9-65be-423d-9303-83abdbb78f45",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Go go go! :)",
        "createdAt" : "2021-03-04T08:12:26Z",
        "updatedAt" : "2021-03-04T08:12:27Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a974ba3039137b99f83e74052282ee026c738fd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +282,286 @@      df.Define(\"1\", [] { return true; });\n   } catch (const std::runtime_error &e) {\n      EXPECT_STREQ(\"RDataFrame::Define: cannot define column \\\"1\\\". Not a valid C++ variable name.\", e.what());\n   }\n   try {"
  }
]