[
  {
    "id" : "0a34efef-7011-49d6-91ea-7f4b93d8ea65",
    "prId" : 2394,
    "prUrl" : "https://github.com/root-project/root/pull/2394#pullrequestreview-142291917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "162b7694-68eb-4677-8d86-38f438b522c6",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "this could be done with a `std::transform`+lambda, i'm not sure which form would be more readable though...",
        "createdAt" : "2018-08-01T08:43:19Z",
        "updatedAt" : "2018-08-02T07:06:13Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "472a37b8-1380-469f-9bc5-e05385115db5",
        "parentId" : "162b7694-68eb-4677-8d86-38f438b522c6",
        "authorId" : "9c5b50e9-7e3c-4cab-9d54-e46d6831dd3b",
        "body" : "Maybe it's more readable as it is now?\r\n```cpp\r\nstd::vector<std::string> RLoopManager::GetFiltersNames()\r\n{\r\n   std::vector<std::string> filters;\r\n\r\n   auto pushNames= [](const RFilterBase* &filter){ return (filter->HasName() ? filter->GetName() : \"Unnamed Filter\"); };\r\n\r\n   std::tranform(fBookedFilters.begin(), fBookedFilters.end(), pushNames);\r\n   \r\n   return filters;\r\n\r\n}\r\n```",
        "createdAt" : "2018-08-01T09:15:58Z",
        "updatedAt" : "2018-08-02T07:06:13Z",
        "lastEditedBy" : "9c5b50e9-7e3c-4cab-9d54-e46d6831dd3b",
        "tags" : [
        ]
      },
      {
        "id" : "c0f395aa-a74c-4303-81b0-3a6b5e48398b",
        "parentId" : "162b7694-68eb-4677-8d86-38f438b522c6",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "agreed",
        "createdAt" : "2018-08-01T09:19:46Z",
        "updatedAt" : "2018-08-02T07:06:13Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa050b8d6afe003b6024521f0ff05d0e14ff9776",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +696,700 @@      auto name = (filter->HasName() ? filter->GetName() : \"Unnamed Filter\");\n      filters.push_back(name);\n   }\n   return filters;\n}"
  }
]