[
  {
    "id" : "4cbd209a-64bd-40ca-ae69-d710d54cd9d5",
    "prId" : 6348,
    "prUrl" : "https://github.com/root-project/root/pull/6348#pullrequestreview-490318396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d7bfe7e-01bb-4b4c-93ca-941192f50a5b",
        "parentId" : null,
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "This should only be necessary if `RNTupleColumnReader` is a `class`",
        "createdAt" : "2020-09-16T21:34:25Z",
        "updatedAt" : "2020-09-17T07:33:49Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "3ec3ab50-bfe6-4339-bb8b-d749c352e758",
        "parentId" : "8d7bfe7e-01bb-4b4c-93ca-941192f50a5b",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "indeed, I forgot to change it to a class! :+1: fixed",
        "createdAt" : "2020-09-17T07:33:56Z",
        "updatedAt" : "2020-09-17T07:33:56Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "99107f385244b7da0f89464d201e0c5b0fc5234f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +54,58 @@   }\n\npublic:\n   RNTupleColumnReader(const std::string &colName, RPageSource &source)\n      : fField(MakeField(colName, source)), fValue(fField->GenerateValue()), fLastEntry(-1)"
  },
  {
    "id" : "246f85fb-3c6f-455a-b891-346a984d14e2",
    "prId" : 6700,
    "prUrl" : "https://github.com/root-project/root/pull/6700#pullrequestreview-533246208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "454699fa-5ad8-4d29-9a9d-073c0c1c1586",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "why not adding RCardinalityField to RNTuple proper? (can you add a comment on top of the class that explains why this is here rather than in RField.hxx?)",
        "createdAt" : "2020-11-05T14:29:07Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "94ac81bc-60ef-42f8-97b0-06adcc5fb8f1",
        "parentId" : "454699fa-5ad8-4d29-9a9d-073c0c1c1586",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Comment added.",
        "createdAt" : "2020-11-18T09:21:46Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3c51ff3fcc0d5b4a666edbd4e7adde57c51d94",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +90,94 @@      fPrincipalColumn->GetCollectionInfo(clusterIndex, &collectionStart, value->Get<ClusterSize_t>());\n   }\n};\n\n/// Every RDF column is represented by exactly one RNTuple field"
  },
  {
    "id" : "bccbda1d-c97f-4afe-9e05-1b94e75523d8",
    "prId" : 6700,
    "prUrl" : "https://github.com/root-project/root/pull/6700#pullrequestreview-613026711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09fd1d05-4ea3-4b45-9878-c63c126d644c",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "This is a bit surprising, I would expect `#event.tracks.hits` to be \"the size of event.tracks.hits\", not \"the collection of sizes of hits in each element of tracks\". I would express the latter as `event.tracks.#hits`.",
        "createdAt" : "2021-03-12T11:59:30Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "a3a3e7a4-9435-460d-b052-87a5aaab15a3",
        "parentId" : "09fd1d05-4ea3-4b45-9878-c63c126d644c",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "The problem is: which size? The sum of hit sizes over all tracks?",
        "createdAt" : "2021-03-12T14:21:35Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "0cf0f2e5-e994-4c54-ba93-0fede8ea39d8",
        "parentId" : "09fd1d05-4ea3-4b45-9878-c63c126d644c",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "My mental model is \"`#var` is a performant shorthand for `var.size()`\", so `#event.tracks.hits` would actually be equivalent to `#event.tracks` (because the `vector<Track>` and the `vector<vector<float>>` return the same number when you call `.size()` on them).\r\n\r\nYour version probably makes more sense :smile: but I don't know how to explain it in plain english to users.",
        "createdAt" : "2021-03-12T15:28:48Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "25c434d4-7505-48de-b8cc-83dea3811d22",
        "parentId" : "09fd1d05-4ea3-4b45-9878-c63c126d644c",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "will have to be documented very well, but it makes sense as it is",
        "createdAt" : "2021-03-16T09:36:40Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3c51ff3fcc0d5b4a666edbd4e7adde57c51d94",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +169,173 @@   // \"__rdf_sizeof_event.tracks.hits.x\"  [std::vector<unsigned int>]\n   // \"event.tracks.hits.y\"               [std::vector<std::vector<float>>]\n   // \"__rdf_sizeof_event.tracks.hits.y\"  [std::vector<unsigned int>]\n\n   const auto &fieldDesc = desc.GetFieldDescriptor(fieldId);"
  },
  {
    "id" : "6b9784c2-f7b7-4b96-9ef1-d5190d7993e4",
    "prId" : 6700,
    "prUrl" : "https://github.com/root-project/root/pull/6700#pullrequestreview-610837199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dfd6652-2539-4032-9c2a-479cf7771b92",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "should this be in the `Internal` namespace rather than `Detail`? as far as I understand `Detail` implies that expert users might want to access the functionality, but this is not the case for `RRDFCardinalityField` (it might also apply to other types introduced by the PR)",
        "createdAt" : "2021-03-12T12:28:48Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "b8705c39-5df0-4cb0-b996-b220a3ebbd84",
        "parentId" : "8dfd6652-2539-4032-9c2a-479cf7771b92",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "Done",
        "createdAt" : "2021-03-12T14:29:28Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3c51ff3fcc0d5b4a666edbd4e7adde57c51d94",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +42,46 @@/// the collection sizes (offset(N+1) - offset(N)).  For the time being, we offer this functionality only in RDataFrame.\n/// TODO(jblomer): consider providing a general set of useful virtual fields as part of RNTuple.\nclass RRDFCardinalityField : public ROOT::Experimental::Detail::RFieldBase {\nprotected:\n   std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> CloneImpl(std::string_view /* newName */) const final"
  },
  {
    "id" : "e5f4ce78-cbba-4875-b31a-98ae67e86fcb",
    "prId" : 6700,
    "prUrl" : "https://github.com/root-project/root/pull/6700#pullrequestreview-610714436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e0822ca-30f5-4ec3-baac-d713ed27dcc6",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "```suggestion\r\n   // at this point we can assume that `name` will be found in fColumnNames, RDF is in charge validation\r\n   // TODO(jblomer): check incoming type\r\n```",
        "createdAt" : "2021-03-12T13:42:47Z",
        "updatedAt" : "2021-03-21T17:00:32Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3c51ff3fcc0d5b4a666edbd4e7adde57c51d94",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +254,258 @@{\n   // at this point we can assume that `name` will be found in fColumnNames, RDF is in charge validation\n   // TODO(jblomer): check incoming type\n   const auto index = std::distance(fColumnNames.begin(), std::find(fColumnNames.begin(), fColumnNames.end(), name));\n   auto clone = fColumnReaderPrototypes[index]->Clone();"
  }
]