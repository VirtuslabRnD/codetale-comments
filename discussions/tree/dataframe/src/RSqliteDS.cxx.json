[
  {
    "id" : "696d4c63-cfcc-44a9-a51c-51531e3750e7",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155815548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ccda2e5-f028-4bd4-a44c-803a11814773",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "as a non-sqlite expert, I really need a comment in this function and the following to understand what's going on :)",
        "createdAt" : "2018-09-17T08:26:14Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +104,108 @@{\n   return SQLITE_OPEN_READONLY;\n}\n\n////////////////////////////////////////////////////////////////////////////"
  },
  {
    "id" : "25f95c30-fc21-4b5d-95e1-64e61c5d6395",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155815548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be3c5ede-5bf3-45c5-abfa-de49c2108e2e",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "we need a long-ish explanation of how this inheritance with no inheritance work :) c++ developers won't know",
        "createdAt" : "2018-09-17T08:35:10Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +65,69 @@/// this particular VFS module. Every callback here thus casts the sqlite3_file input parameter to its \"derived\"\n/// type VfsRootFile.\nstruct VfsRootFile {\n   VfsRootFile() : pos(&c) {}\n   sqlite3_file pFile;"
  },
  {
    "id" : "d54649be-3897-4021-8dc7-62907f978088",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155815548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f21376e7-c802-4d65-b3c6-9e3d3601c4ee",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "please comment :) I can guess what's going on because I once glimpsed into the abyss of the cpython C api :P",
        "createdAt" : "2018-09-17T08:39:34Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +182,186 @@   // This global struct contains the function pointers to all the callback operations that act on an open database.\n   // It is passed via the pFile struct back to sqlite so that it can call back to the functions provided above.\n   static const sqlite3_io_methods io_methods = {\n      1, // version\n      VfsRdOnlyClose,"
  },
  {
    "id" : "543b3452-ec10-4e12-8863-94d131e50165",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-156233329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "138b7df0-729a-4253-b2e5-42622f4dafce",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "This and many functions above are not following our coding style for the function prototypes.\r\nI also don't see the point in declaring these function `static` if they are already inside an unnamed namespace. Isn't that implied?",
        "createdAt" : "2018-09-17T11:16:17Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "d4411488-594e-4de0-85c6-4e694f1a31ac",
        "parentId" : "138b7df0-729a-4253-b2e5-42622f4dafce",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "I removed the `static` keyword from the function definitions. Regarding the prototype, as the functions are callback functions, the prototype is imposed by the sqlite library.",
        "createdAt" : "2018-09-17T19:49:51Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      },
      {
        "id" : "dd63f414-896e-4225-9179-65f792939247",
        "parentId" : "138b7df0-729a-4253-b2e5-42622f4dafce",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I am talking here only about the coding style (i.e., putting each argument in a new line), that cannot be imposed by SQLite.",
        "createdAt" : "2018-09-18T06:25:14Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "17b6786f-1827-4dba-87fe-daf825c03d66",
        "parentId" : "138b7df0-729a-4253-b2e5-42622f4dafce",
        "authorId" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "body" : "As for the code style, this must have been picked up from older commits and is meanwhile resolved.",
        "createdAt" : "2018-09-18T07:27:13Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "6cd3c9bc-f261-444d-81ab-c00c917f2197",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +175,179 @@/// Fills a new VfsRootFile struct enclosing a Davix file\nint VfsRdOnlyOpen(sqlite3_vfs * /*vfs*/, const char *zName, sqlite3_file *pFile, int flags, int * /*pOutFlags*/)\n{\n   // Storage for the VfsRootFile structure has been already allocated by sqlite, so we use placement new\n   VfsRootFile *p = new (pFile) VfsRootFile();"
  },
  {
    "id" : "0ccfa20c-89e5-4ea4-8449-c32db519e95b",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155873852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5b1f379-6279-4196-ba87-aa4b49a06dad",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "These 3 `if`s could be combined into a single one, no?\r\n```\r\nif (flags & (SQLITE_OPEN_READWRITE | SQLITE_OPEN_DELETEONCLOSE | SQLITE_OPEN_EXCLUSIVE))\r\n   return SQLITE_IOERR;\r\n```",
        "createdAt" : "2018-09-17T11:18:19Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +206,210 @@\n   if (flags & (SQLITE_OPEN_READWRITE | SQLITE_OPEN_DELETEONCLOSE | SQLITE_OPEN_EXCLUSIVE))\n      return SQLITE_IOERR;\n\n   Davix::DavixError *err = nullptr;"
  },
  {
    "id" : "043eb34c-de3a-4222-8c29-afe1895576d8",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155873852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05800a96-d2ad-4573-a2c8-ec7ba658514f",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Coding style isn't followed here too. Indentation is wrong.",
        "createdAt" : "2018-09-17T11:22:19Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +244,248 @@   if (flags == SQLITE_ACCESS_READWRITE) {\n      return SQLITE_OPEN_READONLY;\n   }\n   return SQLITE_OK;\n}"
  },
  {
    "id" : "8916be94-adff-45ad-8243-e6a77de22c5a",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-155873852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eba45c5-5451-45ff-bd9a-d6c108761e98",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "Please consider using `compare()` here instead of `find()`.\r\nhttps://en.cppreference.com/w/cpp/string/basic_string/compare",
        "createdAt" : "2018-09-17T11:37:37Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 344,
    "diffHunk" : "@@ -1,1 +352,356 @@      return true;\n   return false;\n}\n\n} // anonymous namespace"
  },
  {
    "id" : "32288457-b6b5-423d-a412-077433ba1694",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-156728669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81b1db63-4809-4e18-b90f-ef15270248a4",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "`nullptr`?",
        "createdAt" : "2018-09-18T14:49:56Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      },
      {
        "id" : "2defd085-ddf2-48eb-93d9-10f2c7638ae3",
        "parentId" : "81b1db63-4809-4e18-b90f-ef15270248a4",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "No, he's setting the integer (pointed to by `pResOut`) to the value `0`. Same for the others.",
        "createdAt" : "2018-09-19T09:02:55Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "72a96bb6-06fe-4ab9-a1b8-9e159f0c19a3",
        "parentId" : "81b1db63-4809-4e18-b90f-ef15270248a4",
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "True! Oops, my bad. Did not notice the `*` in front.",
        "createdAt" : "2018-09-19T09:21:50Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +147,151 @@int VfsRdOnlyCheckReservedLock(sqlite3_file * /*pFile*/, int *pResOut)\n{\n   *pResOut = 0;\n   return SQLITE_OK;\n}"
  },
  {
    "id" : "5c5220ee-99d3-4f88-b34e-5008a4979bb4",
    "prId" : 2608,
    "prUrl" : "https://github.com/root-project/root/pull/2608#pullrequestreview-156402505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8e8d28a-693a-4c0b-97a8-7ede3a064f2c",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "`nullptr`?",
        "createdAt" : "2018-09-18T14:52:37Z",
        "updatedAt" : "2018-10-08T17:31:20Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13fac612a009f2c725fe2392f80c822fb8629d27",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +241,245 @@int VfsRdOnlyAccess(sqlite3_vfs * /*vfs*/, const char * /*zPath*/, int flags, int *pResOut)\n{\n   *pResOut = 0;\n   if (flags == SQLITE_ACCESS_READWRITE) {\n      return SQLITE_OPEN_READONLY;"
  }
]