[
  {
    "id" : "069060cb-eafb-4037-afd9-b6910d3022ad",
    "prId" : 5344,
    "prUrl" : "https://github.com/root-project/root/pull/5344#pullrequestreview-391573904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7675f7f-cf83-4a55-9ba9-e470bdf09ece",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Is it the intent to 'force' a copy of the expression upon a call to this function even in case where the user argument was a temporary that could have been moved into place?",
        "createdAt" : "2020-04-10T14:47:45Z",
        "updatedAt" : "2020-04-14T09:16:55Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "86ba4e4f-781b-4a9f-9ac2-2dea03107dfd",
        "parentId" : "e7675f7f-cf83-4a55-9ba9-e470bdf09ece",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "so, previous code was completely wrong, because it only worked if the argument passed to the constructor was an rvalue. the new version always takes a copy, it's true, but i'd rather have that than complicating the class with a template constructor...this code is far away from any hot path.",
        "createdAt" : "2020-04-10T17:49:32Z",
        "updatedAt" : "2020-04-14T09:16:55Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac6a8547b6bd4b5c6d0e2c89e3f73925f2ff37bf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +96,100 @@\npublic:\n   RCustomColumn(RLoopManager *lm, std::string_view name, F expression, const ColumnNames_t &columns,\n                 unsigned int nSlots, const RDFInternal::RBookedCustomColumns &customColumns, bool isDSColumn = false)\n      : RCustomColumnBase(lm, name, nSlots, isDSColumn, customColumns), fExpression(std::move(expression)),"
  }
]