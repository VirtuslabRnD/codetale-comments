[
  {
    "id" : "7dad5061-e697-4a23-a276-6dcf2a42df80",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466557367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "553f5344-6011-46fb-ad76-a2ed932dfda6",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Am I supposed to be able to mutate the returned `T&` as user of this class?",
        "createdAt" : "2020-08-13T07:40:45Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "effa4254-5216-46ff-b58a-50769df22ec1",
        "parentId" : "553f5344-6011-46fb-ad76-a2ed932dfda6",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "yes",
        "createdAt" : "2020-08-13T08:35:28Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "637e3c1e-4aef-4bce-8b5d-6f622ed98360",
        "parentId" : "553f5344-6011-46fb-ad76-a2ed932dfda6",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "👍 ",
        "createdAt" : "2020-08-13T08:39:22Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@   virtual ~RColumnReaderBase() = default;\n   /// Return the column value for the given entry. Called at most once per entry.\n   virtual T &Get(Long64_t entry) = 0;\n   /// Perform clean-up operations if needed. Called at the end of a processing task.\n   virtual void Reset() {}"
  },
  {
    "id" : "43fcbaec-7455-4f1d-8dfd-bfab4a385c6a",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466556438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "901b1950-1c08-44ba-8993-963506fd4fc8",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Is this being called through its base class pointer? If no, there's a chance for devirtualisation, if yes, it restricts future extensions.",
        "createdAt" : "2020-08-13T07:45:43Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "470f62ba-7ec7-440e-add1-34e81ed1ddcb",
        "parentId" : "901b1950-1c08-44ba-8993-963506fd4fc8",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "> Is this being called through its base class pointer?\r\n\r\nat the moment, always, in the future, sometimes. in any case, this is not a class designed/thought for extension, so it's `final`. `final` should be the default actually :D if we will ever want to allow inheritance from `RDefineReader`, we can always remove the `final`.\r\n",
        "createdAt" : "2020-08-13T08:38:04Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@/// Column reader for defined (aka custom) columns.\ntemplate <typename T>\nclass R__CLING_PTRCHECK(off) RDefineReader final : public RColumnReaderBase<T> {\n   /// Non-owning reference to the node responsible for the custom column. Needed when querying custom values.\n   RDFDetail::RCustomColumnBase &fCustomColumn;"
  },
  {
    "id" : "5049d535-67c2-4cb4-8612-e71bec544a67",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466513676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1192a55-5642-4661-8b51-f66e12aea6af",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "I remember this baby ... 😄 ",
        "createdAt" : "2020-08-13T07:59:35Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@            if ((char *)&readerArray[i + 1] - (char *)&readerArray[i] != sizeof(T)) {\n               fStorageType = EStorageType::kSparse;\n               break;\n            }\n         }"
  },
  {
    "id" : "6a96245c-5905-40ce-974b-d13906474f76",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466559371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa123f3f-ad82-4aaa-88d6-8bfdf071d68e",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "```suggestion\r\n            fRVec.clear();\r\n```",
        "createdAt" : "2020-08-13T08:02:13Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "0a6d474e-89a7-48c8-bebc-fa80eef4808e",
        "parentId" : "fa123f3f-ad82-4aaa-88d6-8bfdf071d68e",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "they are not equivalent. `clear` does not reduce the vector's capacity, `swap` with an empty vector does. I am not sure we want to keep all `fRVec` data members to the maximum size they need through the event loop, it might cost some ram.",
        "createdAt" : "2020-08-13T08:41:07Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@         } else {\n            RVec<T> emptyVec{};\n            std::swap(fRVec, emptyVec);\n         }\n      } else {"
  },
  {
    "id" : "5ad289c3-e2c9-4278-a5d1-e24ea345620c",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466699317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "154dc864-d5ce-46d4-98da-d7bb17a6e59e",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "No idea if this makes any difference in terms of optimisations that can be applied.\r\n```suggestion\r\n            fRVec.assign(readerArray.begin(), readerArray.end());\r\n```",
        "createdAt" : "2020-08-13T08:05:24Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "a4243a87-45f9-4de0-90b6-775a3c6c9e7a",
        "parentId" : "154dc864-d5ce-46d4-98da-d7bb17a6e59e",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "`fRVec` might not have the right size",
        "createdAt" : "2020-08-13T08:42:00Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "c7b49f08-6ea8-4cc1-bbaf-1b526f6c2387",
        "parentId" : "154dc864-d5ce-46d4-98da-d7bb17a6e59e",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "It will resize if necessary, but changing it won't probably gain anything. In the current version, the visual impression of the four cases is the same, so it's easy to read. 👍 ",
        "createdAt" : "2020-08-13T11:59:13Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "565f290e-26c8-476a-8059-eb4efa03720d",
        "parentId" : "154dc864-d5ce-46d4-98da-d7bb17a6e59e",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "ah, I did not realize `assign` would resize as needed. uhm then a reader might be surprised by the `swap`. I'll add your suggestion",
        "createdAt" : "2020-08-13T12:08:49Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +181,185 @@         if (readerArraySize > 0) {\n            RVec<T> rvec(readerArray.begin(), readerArray.end());\n            std::swap(fRVec, rvec);\n         } else {\n            RVec<T> emptyVec{};"
  },
  {
    "id" : "8e9bcd76-bcb1-416c-8b06-d5736f316804",
    "prId" : 6170,
    "prUrl" : "https://github.com/root-project/root/pull/6170#pullrequestreview-466560161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "502cf22c-ea26-4053-9d1e-5bd0f292a00a",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "```suggestion\r\n            fRVec.clear();\r\n```",
        "createdAt" : "2020-08-13T08:05:58Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "cfed7d4f-0eab-443d-8f68-9bffab249138",
        "parentId" : "502cf22c-ea26-4053-9d1e-5bd0f292a00a",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "see my comment above",
        "createdAt" : "2020-08-13T08:42:08Z",
        "updatedAt" : "2020-08-13T12:31:25Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea74c4c1d8478252e59e07d1ecb876e2772fd3a",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +184,188 @@         } else {\n            RVec<T> emptyVec{};\n            std::swap(fRVec, emptyVec);\n         }\n      }"
  }
]