[
  {
    "id" : "2fcc3796-3e65-492f-8e8e-4361a0676e66",
    "prId" : 6380,
    "prUrl" : "https://github.com/root-project/root/pull/6380#pullrequestreview-493634821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2843c7f-173f-43ca-b810-d81140c383e0",
        "parentId" : null,
        "authorId" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "body" : "Maybe this signature could benefit from a variadic template rather than a vector to input the handles? \r\n```\r\ntemplate <typename T, typename... Ts>\r\nvoid RunGraphs(RResultHandle firstgraph, RResultHandle... othergraphs)\r\n```\r\nIt would save some copies in passing the vector by value and the interface would become ```ROOT::RDF::RunGraphs(graph1,graph2,graph3)```\r\nAt the same time it could make it more difficult to write the implementation code for the function. As you prefer  :smile: ",
        "createdAt" : "2020-09-22T15:50:54Z",
        "updatedAt" : "2020-09-23T09:38:22Z",
        "lastEditedBy" : "82ce2c80-31ff-4f7b-91f0-fff78777d7f9",
        "tags" : [
        ]
      },
      {
        "id" : "df698c96-50e0-4672-8afd-d69320dd46c7",
        "parentId" : "d2843c7f-173f-43ca-b810-d81140c383e0",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "The problem is that you want to make book keeping in a complex analysis for which you need a container. Therefore, a signature ala `RunGraphs(p1, p2, ...)` is not very helpful. But indeed, we can add a variadic overload, if we like! However, I don't see yet the requirement.",
        "createdAt" : "2020-09-22T16:18:30Z",
        "updatedAt" : "2020-09-23T09:38:22Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fa41fa0b68c38d05f25b0fe950c3704c9407c4d",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +170,174 @@/// ~~~\n// clang-format on\nvoid RunGraphs(std::vector<RResultHandle> handles);\n\n} // namespace RDF"
  }
]