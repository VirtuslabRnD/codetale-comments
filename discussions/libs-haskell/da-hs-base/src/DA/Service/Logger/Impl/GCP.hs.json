[
  {
    "id" : "454f8193-8158-4e80-8aec-9819e16496ac",
    "prId" : 8439,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb7768d4-4a71-4826-91a6-0941a294da19",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This should also have a check that `newMachineIdPath` does not yet exist. We don’t want to overwrite an already existing file. It’s probably rarely an issue but better be safe than sorry.",
        "createdAt" : "2021-01-14T19:28:51Z",
        "updatedAt" : "2021-01-15T10:06:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "6663646f-10c0-43c8-aad1-16939834ca81",
        "parentId" : "eb7768d4-4a71-4826-91a6-0941a294da19",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I added the check, that's a good idea. I'll also test locally before merging.",
        "createdAt" : "2021-01-14T20:12:25Z",
        "updatedAt" : "2021-01-15T10:06:28Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f0b8d0f0d24e6a7afed7fb7587f940c63d65767",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +176,180 @@        hasNewMachineId <- doesFileExist newMachineIdPath\n        when (hasMachineId && not hasNewMachineId) $ do\n          copyFile machineIdPath newMachineIdPath\n          removeFile machineIdPath\n    gcpLogChan <- newTChanIO"
  },
  {
    "id" : "2e014e11-4f1b-41c9-ae56-1a949e46faf4",
    "prId" : 4506,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31e2fd2d-ea00-4a50-9e48-79861ba3400a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Definitely not something for this PR but I somewhat wonder if we might be better off in the long term just writing stuff to a `sqlite` database instead of messing around with a bunch of files pretending we can safely lock them.",
        "createdAt" : "2020-02-13T16:07:09Z",
        "updatedAt" : "2020-02-14T15:06:45Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a27bf271bc01ccd6f378a901ed930f5ba85959ce",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +125,129 @@\nsentDataFile :: GCPState -> FilePath\nsentDataFile GCPState{..} =\n    gcpDamlDir </> (\".sent_data_\" <> unGCPTag gcpTag)\n"
  },
  {
    "id" : "4d33443d-417b-41d6-b8a6-187ebab32688",
    "prId" : 2102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76439189-b49e-40ce-b5c7-93dd75424ce7",
        "parentId" : null,
        "authorId" : null,
        "body" : "save -> safe",
        "createdAt" : "2019-07-11T13:14:37Z",
        "updatedAt" : "2019-07-11T13:17:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f5a13e9b-40e4-4e33-8d7b-9d449cbbce82",
        "parentId" : "76439189-b49e-40ce-b5c7-93dd75424ce7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Writing text without a typechecker is hard.",
        "createdAt" : "2019-07-11T13:21:01Z",
        "updatedAt" : "2019-07-11T13:21:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a8cbc961-b0ea-4692-8ae2-1095b7902f41",
        "parentId" : "76439189-b49e-40ce-b5c7-93dd75424ce7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "https://github.com/digital-asset/daml/pull/2107",
        "createdAt" : "2019-07-11T13:23:30Z",
        "updatedAt" : "2019-07-11T13:23:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dc43d88c2f53bdb63af24071fc1afad79b08650",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +75,79 @@    , gcpSentDataFileLock :: Lock\n    -- ^ Lock for accessing sendData.\n    -- Note that this is not save if there are multiple damlc executables\n    -- running. However, we can handle a corrupted data file gracefully\n    -- and cross-platform file locking is annoying so we do not bother"
  },
  {
    "id" : "6cb889d8-486d-4467-ae23-b6c29ca78627",
    "prId" : 1492,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d575802-a7d7-43d2-8f3d-c65287e546b3",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Thanks! This annoyed me too.",
        "createdAt" : "2019-06-03T12:17:32Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +357,361 @@        res <- try $ do\n            res <- sendLogs [optOut]\n            when (null res) $ writeFile fp \"\"\n        case res of\n            Left (err :: SomeException) -> logException hnd err"
  },
  {
    "id" : "9f4a963f-8e3a-4d3a-bb39-eed983264d64",
    "prId" : 1492,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3bc6a4f-694e-46bc-90bc-1b2abe717e2a",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Should this be somewhere shared? With the rest of the log functions?",
        "createdAt" : "2019-06-03T12:18:17Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "0441ae7c-7529-4707-a96e-5ef891e6dfc1",
        "parentId" : "d3bc6a4f-694e-46bc-90bc-1b2abe717e2a",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Should it also record the stack trace? Does displayException usually include that?",
        "createdAt" : "2019-06-03T12:18:35Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "8caca4b1-2c50-4a0c-a8c6-996afb3959ec",
        "parentId" : "d3bc6a4f-694e-46bc-90bc-1b2abe717e2a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You don’t get a stack trace for where the exception was thrown unless you compile with profiling info. I suppose we could include the location of the call to `logException` but I am not sure that’s particularly useful.\r\nI generally tend to keep these helpers local until I actually need them somewhere else.",
        "createdAt" : "2019-06-03T12:24:19Z",
        "updatedAt" : "2019-06-03T12:24:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "def1b376-b2ca-4474-b761-91a8d99e833a",
        "parentId" : "d3bc6a4f-694e-46bc-90bc-1b2abe717e2a",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Fair enough on both counts.",
        "createdAt" : "2019-06-03T12:43:55Z",
        "updatedAt" : "2019-06-03T12:43:55Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +312,316 @@\nlogException :: Exception e => Lgr.Handle m -> e -> m ()\nlogException handle e = Lgr.logJson handle Lgr.Error $ displayException e\n\n"
  },
  {
    "id" : "20e4c12f-905e-4e23-b608-ccc8433bf2ad",
    "prId" : 1492,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53a9ccb3-7170-4f59-87a4-6fbcb0a4a63f",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Thanks!",
        "createdAt" : "2019-06-03T12:18:44Z",
        "updatedAt" : "2019-06-03T12:19:17Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e0c09b95ae9fc4cd7dbd427aa3f5254b615ae0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +51,55 @@import Data.Time as Time\nimport Data.UUID (UUID)\nimport qualified Data.UUID as UUID\nimport Control.Concurrent.Extra\nimport Control.Monad.Managed"
  }
]