[
  {
    "id" : "be2bf34b-d11b-469e-927b-ebb4086e9c7b",
    "prId" : 9414,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3737cf66-cc89-42cb-a353-ba8d880cb5ca",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Does moving `--party` after `script` work as well? I expect for users it’s probably more intuitive in most cases to throw everything at the end.",
        "createdAt" : "2021-04-16T07:27:51Z",
        "updatedAt" : "2021-04-16T09:56:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d49c8f3c-d849-4578-9d34-70f6c095a21a",
        "parentId" : "3737cf66-cc89-42cb-a353-ba8d880cb5ca",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "That doesn't work by default. There's an optparse-applicative option ([`subparserInline`](https://hackage.haskell.org/package/optparse-applicative-0.16.1.0/docs/Options-Applicative.html#v:subparserInline)) to enable this. It's a global switch though. At a quick test it seems to cause issues with other commands. E.g. it breaks `daml start` with \r\n```\r\nInvalid option `--dar'\r\nUsage: daml run-jar JAR [--logback-config ARG] [ARG]\r\n```\r\n\r\nThe documentation states\r\n> NOTE: When this option is used, preferences for the subparser which effect the parser behaviour (such as noIntersperse) are ignored.\r\n\r\nIIUC this also disables `forwardOptions` which we rely on to forward flags to wrapped executables.",
        "createdAt" : "2021-04-16T09:24:36Z",
        "updatedAt" : "2021-04-16T09:56:58Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "99c690d85e10c5c021c4e76288c415a7b48b2e2a",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +453,457 @@                          [ \"daml ledger export\"\n                          , \"--host localhost --port \" <> show sandboxPort\n                          , \"--party Alice\"\n                          , \"script\"\n                          , \"--output \" <> exportDir <> \" --sdk-version \" <> sdkVersion"
  },
  {
    "id" : "483b141d-d586-477b-ac56-93eaa5098678",
    "prId" : 7871,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "914a5879-dd24-4613-80c5-6efae43d7462",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Don't we have a helper function for creating such tokens in one of the tests you wrote recently?",
        "createdAt" : "2020-11-04T14:09:34Z",
        "updatedAt" : "2020-11-04T14:23:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "000526e0-7add-402e-ac3c-b0d08221e13f",
        "parentId" : "914a5879-dd24-4613-80c5-6efae43d7462",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "The new http json api tests create the sandbox and http json api with a configurable secret. But there is no function exported for creating a token. I think the Assistant/IntegrationTests.hs are quite messy right now and would benefit from factoring out a few commonly used functions such as the token creation.",
        "createdAt" : "2020-11-04T14:42:00Z",
        "updatedAt" : "2020-11-04T14:42:00Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "48fe9f1f-27a9-4b4e-a723-7ff198c9c361",
        "parentId" : "914a5879-dd24-4613-80c5-6efae43d7462",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Ok, thanks for the clarification. Do you have some concrete ideas for such refactorings? If so, please go ahead. If not, let's chat about it.",
        "createdAt" : "2020-11-04T16:16:54Z",
        "updatedAt" : "2020-11-04T16:16:54Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "261069ff4803bb78a5154fadd5de3ddf16548fc6",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +312,316 @@              -- The hard-coded secret for testing is \"secret\".\n              let token =\n                    JWT.encodeSigned\n                      (JWT.HMACSecret \"secret\")\n                      mempty"
  },
  {
    "id" : "3b78eafb-da64-4788-b3df-6d65c3973ee3",
    "prId" : 7871,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6b80ac7-fa2c-44bd-b64d-37ee464d2485",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Would it simplify things if built an aeson parser here? If so, let's do that in a separate PR.",
        "createdAt" : "2020-11-04T14:20:54Z",
        "updatedAt" : "2020-11-04T14:23:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "69e5bde8-4c1d-4baf-bd60-30f8229e7be8",
        "parentId" : "b6b80ac7-fa2c-44bd-b64d-37ee464d2485",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "yes, definitely clearer. Let's do a cleanup PR that adds some clarity to the assistant integration tests.",
        "createdAt" : "2020-11-04T14:56:54Z",
        "updatedAt" : "2020-11-04T14:56:55Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "261069ff4803bb78a5154fadd5de3ddf16548fc6",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +367,371 @@                          HashMap.lookup \"newFieldName\" payload @?= Just \"Alice\"\n                      other -> assertFailure $ \"Bad result in response: \" <> show other\n                other -> assertFailure $ \"Expected JSON object in response body: \" <> show other\n\n              -- waitForProcess' will block on Windows so we explicitly kill the process."
  },
  {
    "id" : "a52590a8-a335-44e4-840c-a07202314e76",
    "prId" : 7871,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2107be7a-f9f0-41b3-a26a-c30a49c5e1f4",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Will this work on Windows? Are do we need to send a separate ENTER press?",
        "createdAt" : "2020-11-04T14:23:17Z",
        "updatedAt" : "2020-11-04T14:23:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "a74405d4-11f9-4f3b-853d-68cb0900e1b9",
        "parentId" : "2107be7a-f9f0-41b3-a26a-c30a49c5e1f4",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "It should work because of the extra `flush`. The extra `ENTER` just forces the flush on Windows, but we're not checking for an extra `ENTER` to start the rebuild on Windows.",
        "createdAt" : "2020-11-04T14:31:11Z",
        "updatedAt" : "2020-11-04T14:31:11Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "c4d4ddd2-b9fc-4a3c-a78e-33f332d9e237",
        "parentId" : "2107be7a-f9f0-41b3-a26a-c30a49c5e1f4",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Ah, that makes sense. Thanks.",
        "createdAt" : "2020-11-04T16:17:20Z",
        "updatedAt" : "2020-11-04T16:17:20Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "261069ff4803bb78a5154fadd5de3ddf16548fc6",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +345,349 @@                  , \"  pure ()\"\n                  ]\n              maybe (fail \"No start process stdin handle\") (\\h -> hPutChar h 'r' >> hFlush h) startStdIn\n              threadDelay 25000000\n              initialRequest <- parseRequest $ \"http://localhost:\" <> show jsonApiPort <> \"/v1/query\""
  },
  {
    "id" : "38420c24-774a-499a-ac08-5a7bfb8790ea",
    "prId" : 7700,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64f76621-b1e8-4ead-a706-f129291609c3",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should move this into a separate package once we add more tests involving the JSON API.",
        "createdAt" : "2020-10-20T16:07:40Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "81b9befd-fd8f-47f6-9f9a-9b55b1c52876",
        "parentId" : "64f76621-b1e8-4ead-a706-f129291609c3",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "agreed.",
        "createdAt" : "2020-10-20T17:05:06Z",
        "updatedAt" : "2020-10-21T14:02:15Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8eedbfa7487539c8c7d7f663d13ec5fef4dda3a",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +387,391 @@            withCreateProcess startProc $ \\_ _ _ startPh ->\n              race_ (waitForProcess' startProc startPh) $ do\n                let token =\n                      JWT.encodeSigned\n                        (JWT.HMACSecret \"secret\")"
  },
  {
    "id" : "17f15fe1-8656-40c4-8fed-45e7a39b8917",
    "prId" : 7301,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a467672b-6ca1-4658-bbfd-ddb6a6e95fc7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "The `Script` type is apparently too much for `data-dependencies` to handle. This isn’t actually what we want to test here so using a type synynym as a replacement is good enough.",
        "createdAt" : "2020-09-02T11:22:45Z",
        "updatedAt" : "2020-09-02T11:22:46Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1d6a8e173f94891967ab9bc9e5381c7c037dfc6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +158,162 @@        writeFileUTF8 (tmpDir </> \"proj\" </> \"A.daml\") $ unlines\n          [ \"module A where\"\n          , \"import Main (Asset)\"\n          , \"type X = Asset\"\n          ]"
  },
  {
    "id" : "9f46e324-78f0-45d1-9f90-d033206e001e",
    "prId" : 6877,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40c38e9-1f52-4a11-aabf-c6776781b03a",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Shouldn't the name of the project be `foobar`?",
        "createdAt" : "2020-07-27T13:54:44Z",
        "updatedAt" : "2020-07-27T14:03:59Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "fcb18147-a6fe-4a4e-a92d-56abb13cfd3f",
        "parentId" : "d40c38e9-1f52-4a11-aabf-c6776781b03a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "No, `quickstart-java` is like the old `create-daml-app` in that it has a hardcoded name so this is a cheap way of making sure we pick up the right template.",
        "createdAt" : "2020-07-27T14:03:50Z",
        "updatedAt" : "2020-07-27T14:06:52Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "200f6d47bf9183f810c1ffea79c1a24d0b286498",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +566,570 @@              callCommandSilent \"daml new foobar quickstart-java\"\n              contents <- readFileUTF8 \"foobar/daml.yaml\"\n              assertInfixOf \"name: quickstart\" contents\n    ]\n"
  },
  {
    "id" : "ee4e0a54-fc86-420f-a26c-d7b8bcd0b096",
    "prId" : 5630,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "503c4ae6-152f-462d-b256-f611ec578575",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "So to clarify, this does not create a sandbox port file but does find a free port and pass that as the `ledger-port` to the JSON API?",
        "createdAt" : "2020-04-20T14:57:22Z",
        "updatedAt" : "2020-04-20T14:57:22Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "3d3d8f31-b041-40c4-872b-f85c9f8c0e38",
        "parentId" : "503c4ae6-152f-462d-b256-f611ec578575",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "The assistant uses the --port-file option internally so it does technically create a portfile but not one visible to the user.",
        "createdAt" : "2020-04-20T14:59:26Z",
        "updatedAt" : "2020-04-20T14:59:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5d60ddce-6c83-40bc-a9a0-7ac07598a5e4",
        "parentId" : "503c4ae6-152f-462d-b256-f611ec578575",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Ok. In my testing the sandbox does not remove its port file on termination (a bug I think), so I'm wondering if that file will be visible to the user and if we need to clean it up.",
        "createdAt" : "2020-04-20T15:03:35Z",
        "updatedAt" : "2020-04-20T15:03:35Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "b7c77357-5bdd-467a-b336-2b212918ea3d",
        "parentId" : "503c4ae6-152f-462d-b256-f611ec578575",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "daml-helper creates a temp file and cleans it up itself.",
        "createdAt" : "2020-04-20T15:04:26Z",
        "updatedAt" : "2020-04-20T15:04:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c79d7560258e5aa814d195921109a03722ecf27",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +336,340 @@                  [ \"daml\"\n                  , \"start\"\n                  , \"--sandbox-port=0\"\n                  , \"--sandbox-option=--ledgerid=MyLedger\"\n                  , \"--json-api-port=0\""
  },
  {
    "id" : "0d73799e-9b17-4693-a030-df7a090dde7f",
    "prId" : 5507,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88f1128c-e77a-4046-87e2-9e7d0ae56317",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This test is quite long now. I don’t think it makes much sense to split it up but I think it would be nice to use `testCaseSteps` to make the individual steps a bit more explicit.",
        "createdAt" : "2020-04-09T05:30:37Z",
        "updatedAt" : "2020-04-11T19:22:26Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "7d4f19cb-4d36-4723-b0d7-22511bc64be5",
        "parentId" : "88f1128c-e77a-4046-87e2-9e7d0ae56317",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Done now",
        "createdAt" : "2020-04-10T21:53:49Z",
        "updatedAt" : "2020-04-11T19:22:26Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "e854eec01ea6cee5425c06d485a565c92ed461eb",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +553,557 @@        let cdaDir = tmpDir </> \"create-daml-app\"\n\n        -- First test the base application (without the user-added feature).\n        withCurrentDirectory cdaDir $ do\n          step \"Build DAML model for base application\""
  },
  {
    "id" : "db31fb49-92e6-49ad-9b03-c2acb27a58ac",
    "prId" : 5389,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We did try running things manually on Windows right? Judging from the number of support requests that I see, things are going to blow up pretty badly if things don’t work on Windows.\r\n\r\nNot quite sure what we do about this in the long-term, I guess we have to fix `rules_nodejs` :cry: ",
        "createdAt" : "2020-04-02T18:18:37Z",
        "updatedAt" : "2020-04-02T18:37:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "796aa1b2-871e-4945-905c-281243435fbe",
        "parentId" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I agree that we need to make sure this works on Windows. I don't have a Windows machine handy myself. Let's discuss this tomorrow morning.\r\n\r\nI'm afraid fixing `rules_nodejs` is a bullet we have to bite. And that sucks a lot! 😿",
        "createdAt" : "2020-04-02T18:40:40Z",
        "updatedAt" : "2020-04-02T18:40:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8fa44af2-043d-4561-8dba-bd95889bc19c",
        "parentId" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I just started testing, we get up to the `daml2ts` step which fails so I guess the good news is users “finish” quickstart on Windws in about 1 minute :tada: \r\n\r\nI know what the issue is and will fix it but I’m getting a bit tired so might have to wait until tomorrow.",
        "createdAt" : "2020-04-02T19:35:44Z",
        "updatedAt" : "2020-04-02T19:35:44Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a184504a-1290-427e-84cf-c3778457a5e2",
        "parentId" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "First fix in https://github.com/digital-asset/daml/pull/5391, now need to figure out how to build the npm packages on Linux and then copy them over to Windows. Very disappointed that Github does not have a vomitting emoji.",
        "createdAt" : "2020-04-02T19:49:39Z",
        "updatedAt" : "2020-04-02T19:49:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "05faad2d-aa05-4ab4-9e92-d623253ae6d8",
        "parentId" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "With #5391, I managed to go through the first section of the GTG on Windows :tada: I’m not going through the messaging feature for now but given that this seems more of the same, I expect no issues there.",
        "createdAt" : "2020-04-02T20:22:12Z",
        "updatedAt" : "2020-04-02T20:22:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9d9ad9ee-b055-4301-8cb9-d017bc92b12a",
        "parentId" : "51750d5d-53e7-44d9-a970-143484a9a970",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Awesome, thanks @cocreature !",
        "createdAt" : "2020-04-02T21:26:54Z",
        "updatedAt" : "2020-04-02T21:26:54Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "1634d1e6a8267b79cd5fe0399a026fc5a1afb513",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +556,560 @@\ncreateDamlAppTests :: TestTree\ncreateDamlAppTests = testGroup \"create-daml-app\" [gettingStartedGuideTest | not isWindows]\n  where\n    gettingStartedGuideTest = testCase \"Getting Started Guide\" $"
  },
  {
    "id" : "6cb233db-9f53-43f9-bd32-0951c78e9000",
    "prId" : 5389,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e371b4e-0ffd-4de4-90b1-0112017190c9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We should add `assertFileExists` to `DA.Test.Util` at some point.",
        "createdAt" : "2020-04-02T18:25:35Z",
        "updatedAt" : "2020-04-02T18:37:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "15914382-e5d4-476c-8d75-b722153ea652",
        "parentId" : "5e371b4e-0ffd-4de4-90b1-0112017190c9",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'll take care of it.",
        "createdAt" : "2020-04-02T18:36:41Z",
        "updatedAt" : "2020-04-02T18:37:32Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "1634d1e6a8267b79cd5fe0399a026fc5a1afb513",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +578,582 @@          callCommandSilent \"daml build\"\n          callCommandSilent \"daml codegen ts -o daml-ts .daml/dist/create-daml-app-0.1.0.dar\"\n        doesFileExist (cdaDir </> \"ui\" </> \"build\" </> \"index.html\") >>=\n          assertBool \"ui/build/index.html does not yet exist\" . not\n        withCurrentDirectory (cdaDir </> \"ui\") $ do"
  },
  {
    "id" : "7ac0147b-468f-449d-914b-cb341a33067a",
    "prId" : 5389,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "This is slightly different to the manual test procedure - do we not want the package.json inside the create-daml-app dir created after `daml new`?",
        "createdAt" : "2020-04-02T18:45:09Z",
        "updatedAt" : "2020-04-02T18:48:31Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "14d1c088-b431-4a10-8ffd-8ff1e06b07e1",
        "parentId" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "IMO, this is an improvement of the manual test procedure we discussed yesterday. We can even have the `package.json` we use to trick `yarn` into using our packages outside of the project. Doesn't that sound better?",
        "createdAt" : "2020-04-02T18:51:29Z",
        "updatedAt" : "2020-04-02T18:51:29Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "303c81e1-931a-45d7-bf41-6447b20aec81",
        "parentId" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Not sure if it's better or worse, but I didn't know that this package.json would have an effect here since you call `daml codegen ts` in the `create-daml-app` directory.",
        "createdAt" : "2020-04-02T18:57:29Z",
        "updatedAt" : "2020-04-02T18:57:29Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "5c929001-13ec-4ab4-9f96-620eada116b4",
        "parentId" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "`daml codegen ts` itself does not care about this itself at all. It calls `yarn install` in `daml-ts`, which then does its magic and searches for a workspace `package.json` somewhere along the path to the root directory.\r\n\r\nThe advantage of what we're doing here is that we don't need to mess around with the directory produced by `daml new` at all. The only thing we mess around with is tricking `yarn install` into picking up our libraries. In fact, this approach can be used to share a single `node_modules` folder as a cache between multiple test runs without weirdly copying it around. I already have big plans for using this to make the `daml2ts` tests faster.",
        "createdAt" : "2020-04-02T19:06:39Z",
        "updatedAt" : "2020-04-02T19:06:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8a95c6e5-8cbe-4cac-babc-d15fa5d9b990",
        "parentId" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "> I already have big plans for using this to make the `daml2ts` tests faster.\r\n\r\nI’ll only approve if they get faster by at least 30x.",
        "createdAt" : "2020-04-02T19:08:07Z",
        "updatedAt" : "2020-04-02T19:08:07Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e8a601fd-7be4-4819-928f-e87139b7d0ea",
        "parentId" : "c65e9ed3-abe8-49ed-bc8a-3444db72e2b1",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should only measure the sum of all `yarn install` steps for this benchmark. If this change doesn't make it 30x fast, then I'll add more test cases until it does make it 30x faster. And I'll add them each in a separate PR. That's what I call two birds with one stone. 🤓",
        "createdAt" : "2020-04-02T19:10:23Z",
        "updatedAt" : "2020-04-02T19:10:23Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "1634d1e6a8267b79cd5fe0399a026fc5a1afb513",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +566,570 @@        BSL.writeFile (tmpDir </> \"package.json\") $ Aeson.encode $ object\n          [ \"private\" .= True\n          , \"workspaces\" .= [\"create-daml-app/daml-ts\", \"create-daml-app/ui\" :: String]\n          , \"resolutions\" .= object\n              [ pkgName .= (\"file:\" ++ tsLib)"
  },
  {
    "id" : "78e140c8-7fda-441d-bac4-418ed6259770",
    "prId" : 5273,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b028112-2dcb-49b6-ae78-e1c7070c4304",
        "parentId" : null,
        "authorId" : null,
        "body" : "This should be fine as long as we never add a space in a template name.",
        "createdAt" : "2020-03-30T11:38:44Z",
        "updatedAt" : "2020-03-30T11:39:35Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "466d41c1-5b82-45d7-9509-0eff2862de3c",
        "parentId" : "9b028112-2dcb-49b6-ae78-e1c7070c4304",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Spaces in template names seems like a pretty terrible UX so I’m happy to have that blow up in tests :slightly_smiling_face: ",
        "createdAt" : "2020-03-30T11:44:25Z",
        "updatedAt" : "2020-03-30T11:44:26Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a025ec56aad37716cf5f8cc85113ce2fe7a45f8",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +472,476 @@    [ testCase name $ do\n          withTempDir $ \\dir -> withCurrentDirectory dir $ do\n              callCommandQuiet $ unwords [\"daml\", \"new\", \"foobar\", name]\n              withCurrentDirectory (dir </> \"foobar\") $ callCommandQuiet \"daml build\"\n    | name <- templateNames"
  },
  {
    "id" : "5d39ed77-976c-4704-9688-3bdd12e9e6a9",
    "prId" : 5225,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36112f2d-00de-4a79-9777-7c59a03a8b0a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I recently wrote a `DA.Test.Sandbx` module exactly for managing sandbox in tests. Let’s please use that.",
        "createdAt" : "2020-03-27T07:33:02Z",
        "updatedAt" : "2020-03-27T17:24:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d4db63259ee00af10a40ad04d1b5e3a64d75dc",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +505,509 @@\n-- | Start a sandbox on any free port\nwithSandboxOnFreePort :: (Int -> IO ()) -> IO ()\nwithSandboxOnFreePort f = do\n  port :: Int <- fromIntegral <$> getFreePort"
  },
  {
    "id" : "3ab85a12-b721-4414-865c-d6778b33309e",
    "prId" : 5225,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbda789c-9489-4579-bd80-960310dda64a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Please don’t add more things to the integration tests that don’t absolutely need to be there. The integration tests are for testing an installed SDK and commands that rely on that. So it’s useful to test things like `daml start` that actually shell out to various SDK processes and rely on the assistant for that but it doesn’t buy us anything here.\r\n\r\nThe integration tests are already very slow and a nightmare to work with (they rebuild the world, `-p` doesn’t work, …). For this test, I would recommend that you add them to `//daml-assistant/daml-helper:tests`.",
        "createdAt" : "2020-03-27T07:35:17Z",
        "updatedAt" : "2020-03-27T17:24:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d4db63259ee00af10a40ad04d1b5e3a64d75dc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +73,77 @@    , cleanTests cleanDir\n    , deployTest deployDir\n    , fetchTest tmpDir\n    , codegenTests codegenDir damlTypesDir\n    ]"
  },
  {
    "id" : "50c396f6-82b7-41ea-9fdd-5ce7d88e4b87",
    "prId" : 5225,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9f8415d-f8c8-4143-b15a-52ae1896ec42",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This seems very hacky, why not simply parse the DAR directly? The packaging tests have an example, see https://github.com/digital-asset/daml/blob/1872c668a554e2ec7cff8bc8838e3895a253962f/compiler/damlc/tests/src/DA/Test/Packaging.hs#L760",
        "createdAt" : "2020-03-27T07:36:44Z",
        "updatedAt" : "2020-03-27T17:24:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "10d4db63259ee00af10a40ad04d1b5e3a64d75dc",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +524,528 @@\n-- | Using `daml inspect-dar`, discover the main package-identifier of a dar.\ngetMainPidByInspecingDar :: FilePath -> String -> IO String\ngetMainPidByInspecingDar dar projName = do\n  stdout <- callCommandForStdout $ unwords [\"daml damlc inspect-dar\", dar ]"
  },
  {
    "id" : "dacdf940-8c7f-45ea-b7df-11c671ea1cde",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0da6ff9-b56c-4db3-8158-16aa52f58c85",
        "parentId" : null,
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Unfortunately, doing this is the only way I've found to reliably get at the directory containing yarn.",
        "createdAt" : "2020-03-25T16:43:28Z",
        "updatedAt" : "2020-03-25T16:45:52Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "f1b166c0-5eb0-4571-88a0-1b3bd1fdd227",
        "parentId" : "f0da6ff9-b56c-4db3-8158-16aa52f58c85",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "That's fine. We're doing this in other places too.",
        "createdAt" : "2020-03-25T17:17:09Z",
        "updatedAt" : "2020-03-25T17:50:49Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +46,50 @@    -- We manipulate global state via the working directory and\n    -- the environment so running tests in parallel will cause trouble.\n    yarn : damlTypesPath : args <- getArgs\n    withTempDir $ \\tmpDir -> do\n    oldPath <- getSearchPath"
  },
  {
    "id" : "49e1de4b-d8da-46a9-a7bf-c02d72ab82ec",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56e496bc-da91-408f-8126-b1a1413a131b",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why did you move this above the explaining comment?",
        "createdAt" : "2020-03-25T17:16:45Z",
        "updatedAt" : "2020-03-25T17:50:49Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "86b2ce76-7504-41a0-a8f6-014f2060566f",
        "parentId" : "56e496bc-da91-408f-8126-b1a1413a131b",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "~Actually, I introduced the explaining comment 😄~ Oops, I lie. I'll move the comment above the action.",
        "createdAt" : "2020-03-25T18:21:56Z",
        "updatedAt" : "2020-03-25T18:23:01Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +43,47 @@main :: IO ()\nmain = do\n    setEnv \"TASTY_NUM_THREADS\" \"1\" True\n    -- We manipulate global state via the working directory and\n    -- the environment so running tests in parallel will cause trouble."
  },
  {
    "id" : "12f83fa1-e6f7-4948-84f3-db8254e05ccc",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "800463c9-fadf-47d3-8306-e25ab381cc6e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Isn't that how it looks like?\r\n```suggestion\r\n                            -- SDK version is 0.0.0-SDKVERSION; daml2ts needs\r\n```",
        "createdAt" : "2020-03-25T17:19:51Z",
        "updatedAt" : "2020-03-25T17:50:49Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +509,513 @@                          createDirectoryIfMissing True \"generated\"\n                          withCurrentDirectory \"generated\" $ do\n                            -- SDK version is 0.0.0; daml2ts needs\n                            -- 'daml-types' to be here in the filesystem...\n                            copyDirectory damlTypes \"daml-types\""
  },
  {
    "id" : "cd9d8ac3-e082-45b1-b6d4-ced7c577a405",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed97f44e-ab70-4ca2-9ad2-1207659aedbf",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why not spend more 💵s?\r\n```suggestion\r\n                            BSL.writeFile \"package.json\" $ encode $\r\n                            -- ... and this package.json so it can find it.\r\n                              object\r\n                                [ \"private\" .= True\r\n                                , \"workspaces\" .= [T.pack lang]\r\n                                , \"resolutions\" .= HMS.fromList ([(\"@daml/types\", \"file:daml-types\")] :: [(T.Text, T.Text)])\r\n                                ]\r\n```",
        "createdAt" : "2020-03-25T17:21:44Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "cca0ee8a-fe28-4c1b-b3e6-0337cf1f8597",
        "parentId" : "ed97f44e-ab70-4ca2-9ad2-1207659aedbf",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Lol :) Ok",
        "createdAt" : "2020-03-25T18:26:38Z",
        "updatedAt" : "2020-03-25T18:26:38Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +519,523 @@                                , \"resolutions\" .= HMS.fromList ([(\"@daml/types\", \"file:daml-types\")] :: [(T.Text, T.Text)])\n                                ]\n                              )\n                        callCommandQuiet $\n                          unwords [ \"daml\", \"codegen\", lang"
  },
  {
    "id" : "b4dd8079-ffce-4b8c-9033-22ef1224b8d9",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7069117c-eb34-448d-b730-9e700e9eadaf",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Can you please leave _one_ comment that explains what we're doing here, namely making `@daml-types-0.0.9-SDKVERSION` available to yarn, instead of having multiple comments spread out below.\r\n\r\nOther than that, very nice solution!",
        "createdAt" : "2020-03-25T17:26:11Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "7715287c-8456-41ff-900e-967ce447188e",
        "parentId" : "7069117c-eb34-448d-b730-9e700e9eadaf",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Ok",
        "createdAt" : "2020-03-25T18:25:45Z",
        "updatedAt" : "2020-03-25T18:25:45Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +506,510 @@                        let darFile = projectDir </> \".daml/dist/proj-\" ++ lang ++ \"-0.0.1.dar\"\n                            outDir  = projectDir </> \"generated\" </> lang\n                        when (lang == \"ts\") $ do\n                          createDirectoryIfMissing True \"generated\"\n                          withCurrentDirectory \"generated\" $ do"
  },
  {
    "id" : "4aaf044d-6dd0-4b50-83d2-57420ce530d9",
    "prId" : 3696,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4229a7ce-9dd3-4c96-80e4-e886b7843e02",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Can we have a tracking ticket for this please? 😬 ",
        "createdAt" : "2019-12-02T19:59:55Z",
        "updatedAt" : "2019-12-04T14:02:25Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "4c5ecc19-fbe2-4a5c-b04d-34aa65c276fa",
        "parentId" : "4229a7ce-9dd3-4c96-80e4-e886b7843e02",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I opened https://github.com/digital-asset/daml/issues/3704 and added a warning when you invoke `damlc migrate`.",
        "createdAt" : "2019-12-02T20:20:27Z",
        "updatedAt" : "2019-12-04T14:02:25Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "cd43344e-1a7f-4f84-b4b0-f8131f840ea6",
        "parentId" : "4229a7ce-9dd3-4c96-80e4-e886b7843e02",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The warning is a great idea. 👍 ",
        "createdAt" : "2019-12-02T20:22:32Z",
        "updatedAt" : "2019-12-04T14:02:25Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "72ee178dfa935c138612161f3bdfb610910e1412",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +187,191 @@    -- we didn’t include daml-prim from all SDK versions, are broken completely\n    -- now that we split daml-prim into multiple packages. Therefore, we\n    -- disable this for now.\n\n    -- See https://github.com/digital-asset/daml/issues/3704"
  }
]