[
  {
    "id" : "0220dd80-962f-4751-b2b3-9b9034e8181a",
    "prId" : 1409,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17b0905c-f2f8-44d5-a32c-9468acd2af5c",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m not sure I understand this function. Doesn’t setting `check` to `True` accomplish this? I don’t see how we can fall into the `Just projectPath` of `withProjectRoot` but have `mbProjectPath` be `Nothing`.",
        "createdAt" : "2019-05-28T12:43:07Z",
        "updatedAt" : "2019-05-28T12:44:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d8645dc2-d8a7-4b17-8e2c-1e9691e30437",
        "parentId" : "17b0905c-f2f8-44d5-a32c-9468acd2af5c",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "`withExpectProjectRoot` is internally the same as `withProjectRoot` with `check` set to `True`.If `check` is `True` then `withProjectRoot` will always provide `Just pPath` (or terminate the program). `withExpectProjectRoot` just makes this explicit in the types, so that the use-site doesn't have to worry about this. ",
        "createdAt" : "2019-05-28T12:54:41Z",
        "updatedAt" : "2019-05-28T12:54:41Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "255da2c4-1ccf-4673-aedc-f6166cb8d407",
        "parentId" : "17b0905c-f2f8-44d5-a32c-9468acd2af5c",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m still confused. It looks like the only case where you use the additional argument in `withProjectRoot` is `withExpectProjectRoot` and there it will always be `Just`.",
        "createdAt" : "2019-05-28T13:01:21Z",
        "updatedAt" : "2019-05-28T13:01:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b6844612-2df7-4720-ba5d-662990c3712c",
        "parentId" : "17b0905c-f2f8-44d5-a32c-9468acd2af5c",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I'm afraid I don't understand the question.\r\n\r\nThe motivation is this:\r\n\r\nBefore the use-site looked like this\r\n```\r\n    withProjectRoot' projectOpts $ \\_ -> do\r\n        projectPath <- maybe getProjectPath (pure . Just . unwrapProjectPath) (projectRoot projectOpts)\r\n        case projectPath of\r\n            ...\r\n```\r\nI.e. the project path discovery had to be repeated and there was always a case match on `projectPath`, which could be `Nothing` or `Just ...`.\r\n\r\nNow it looks like this\r\n```\r\n    withExpectProjectRoot (projectRoot projectOpts) \"daml test\" $ \\pPath _ -> do\r\n```\r\nI.e. the project path is directly available without repeating the discovery or having to do additional case matches.\r\n\r\nWe can do this because\r\n\r\n> It's an error to run damlc test outside a project if --files is not specified.\r\n",
        "createdAt" : "2019-05-28T13:24:31Z",
        "updatedAt" : "2019-05-28T13:24:31Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "2d57dea6-509a-4230-8571-1b8ba3eac47d",
        "parentId" : "17b0905c-f2f8-44d5-a32c-9468acd2af5c",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ah I see, I missed the change in `runTestsInProjectOrFiles`. LGTM :+1:",
        "createdAt" : "2019-05-28T13:27:14Z",
        "updatedAt" : "2019-05-28T13:27:14Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd5dc4f06ee964293f58572c5bc9d7738e6bd799",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +177,181 @@\n-- | Same as 'withProjectRoot' but always requires project root.\nwithExpectProjectRoot\n    :: Maybe ProjectPath  -- ^ optionally specified project root\n    -> String  -- ^ command name for error message"
  },
  {
    "id" : "b316e97c-dafc-44b3-be4b-5ef2c22d9e5c",
    "prId" : 1401,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16c88cea-425c-4888-a660-1942c78c334b",
        "parentId" : null,
        "authorId" : null,
        "body" : "I'm not a fan of bringing this into daml-project-config, since this is very much tied with damlc command-line option parsing.",
        "createdAt" : "2019-05-27T10:18:02Z",
        "updatedAt" : "2019-05-27T15:41:25Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8788e608-2653-4a8f-b03a-a6012c09344a",
        "parentId" : "16c88cea-425c-4888-a660-1942c78c334b",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Is it? I would argue that having an argument that enforces that `withProjectRoot` is run in a project and errors out if that is not the case is quite reasonable even if you completely ignore the CLI option parsing. The `String` argument might be a bit tied to details in damlc but it seems sufficiently general that I believe that this API would be useful for any tool invoked by the assistant so `daml-project-config` is not a bad place for this.",
        "createdAt" : "2019-05-27T10:40:27Z",
        "updatedAt" : "2019-05-27T15:41:25Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2d9ca047-923d-48d3-a8e3-b59457fd5fd4",
        "parentId" : "16c88cea-425c-4888-a660-1942c78c334b",
        "authorId" : null,
        "body" : "Ok, that makes sense. :+1:",
        "createdAt" : "2019-05-27T11:04:28Z",
        "updatedAt" : "2019-05-27T15:41:25Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "1fa158154d4ffa2f8af5a90e9160a33463d34b97",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +141,145 @@-- | Whether we should check if a command is invoked inside of a project.\n-- The string is the command name used in error messages\ndata ProjectCheck = ProjectCheck String Bool\n\n-- | This function changes the working directory to the project root and calls"
  },
  {
    "id" : "b362aab0-5453-4541-9282-ee6daef154aa",
    "prId" : 337,
    "prUrl" : "https://github.com/digital-asset/daml/pull/337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "698e4a03-b299-477e-853c-76f88dbc442c",
        "parentId" : null,
        "authorId" : "18b7038d-baff-4c33-be33-76f4534dc9ed",
        "body" : ":tada: ",
        "createdAt" : "2019-04-10T06:36:28Z",
        "updatedAt" : "2019-04-10T08:58:45Z",
        "lastEditedBy" : "18b7038d-baff-4c33-be33-76f4534dc9ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "c63dc83e702244360b482149bc1bc3dfc388c2b4",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +60,64 @@-- | File name of config file in DAML_PROJECT (the project path).\nprojectConfigName :: FilePath\nprojectConfigName = \"daml.yaml\"\n\n-- | File name of config file in DAML_SDK (the sdk path)"
  }
]