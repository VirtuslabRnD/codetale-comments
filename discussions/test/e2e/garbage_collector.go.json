[
  {
    "id" : "9480d7e4-3196-4fac-998e-cee4ff41b836",
    "prId" : 38676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38676#pullrequestreview-23868701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "209c851b-d145-4206-a45c-c7830ffdf531",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I would prefer constructForegroundOptions() or just foregroundOptions() or just foreground(), but I guess you're just being consistent, so don't change this in this PR.",
        "createdAt" : "2017-02-25T00:09:29Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b51f79eb-285a-4075-a9e9-66292a1e706b",
        "parentId" : "209c851b-d145-4206-a45c-c7830ffdf531",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I'll keep that in mind.",
        "createdAt" : "2017-02-25T22:37:22Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cb266340ac5d702a650ea30c730bb909cd99b5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +36,40 @@)\n\nfunc getForegroundOptions() *metav1.DeleteOptions {\n\tpolicy := metav1.DeletePropagationForeground\n\treturn &metav1.DeleteOptions{PropagationPolicy: &policy}"
  },
  {
    "id" : "97b7032d-7d4b-4d62-8750-ad97e6f8fb9d",
    "prId" : 38676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38676#pullrequestreview-24058959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5ebea5-c80e-45f9-a2be-b9cdaede24f9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "this error case seems wrong? You expect the object to not get deleted?",
        "createdAt" : "2017-02-25T00:39:50Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ba3bf2f1-6413-4a19-8751-4ca317b1ba60",
        "parentId" : "1f5ebea5-c80e-45f9-a2be-b9cdaede24f9",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "rc1 should get deleted.\r\n\r\nrc1 initially has 100 dependents, 50 of which also have rc2 as an owner. rc2 is not deleted. When a foreground deletion of rc1 is issued, rc1 should be deleted after the 50 pods that solely depend on rc1 are deleted. The remaining pods should only have rc2 as the owner.\r\n\r\nThis behavior is described in the [proposal](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/synchronous-garbage-collection.md), starts with \"if an object has multiple owners...\".",
        "createdAt" : "2017-02-27T00:46:39Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "fd07f32f-c034-468f-a571-cabc8bd577d6",
        "parentId" : "1f5ebea5-c80e-45f9-a2be-b9cdaede24f9",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, right. OK.",
        "createdAt" : "2017-02-27T18:32:08Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cb266340ac5d702a650ea30c730bb909cd99b5",
    "line" : 264,
    "diffHunk" : "@@ -1,1 +634,638 @@\t\t\t\tframework.Logf(\"%#v\", pod.ObjectMeta)\n\t\t\t}\n\t\t\tframework.Failf(\"failed to delete rc %s, err: %v\", rc1Name, err)\n\t\t}\n\t\t// half of the pods should still exist,"
  },
  {
    "id" : "55e04619-6fe8-4338-8289-89bdf2d6f471",
    "prId" : 35676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35676#pullrequestreview-12399153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ede6c670-583c-4330-abb1-2fd4a076c911",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Add a By that lets us know you wait for the new replica set to be created.",
        "createdAt" : "2016-12-02T12:34:11Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "a3f2b805-3c24-49ef-b1f1-1908b2a92080",
        "parentId" : "ede6c670-583c-4330-abb1-2fd4a076c911",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "done",
        "createdAt" : "2016-12-12T06:57:34Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "777977612b4b10bfd9d1fc26fa23669b89b8911f",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +341,345 @@\t\t\tframework.Failf(\"Failed to create deployment: %v\", err)\n\t\t}\n\t\t// wait for deployment to create some rs\n\t\tBy(\"Wait for the Deployment to create new ReplicaSet\")\n\t\terr = wait.PollImmediate(500*time.Millisecond, 1*time.Minute, func() (bool, error) {"
  },
  {
    "id" : "4f31ad0d-1f56-44ad-8eb9-1fa961e5e104",
    "prId" : 35676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35676#pullrequestreview-12399173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f9715c2-3112-4601-a1c2-d4978b81f527",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Can you make sure that the replica sets you are listing are owned by the provided deployment?",
        "createdAt" : "2016-12-02T12:41:02Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "15d018d4-5a9e-42bd-8dce-bba5e8e64542",
        "parentId" : "3f9715c2-3112-4601-a1c2-d4978b81f527",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "done",
        "createdAt" : "2016-12-12T06:57:56Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "777977612b4b10bfd9d1fc26fa23669b89b8911f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +107,111 @@) (bool, error) {\n\tvar ret = true\n\trs, err := clientSet.Extensions().ReplicaSets(f.Namespace.Name).List(v1.ListOptions{})\n\tif err != nil {\n\t\treturn false, fmt.Errorf(\"Failed to list rs: %v\", err)"
  },
  {
    "id" : "75cb009f-63af-4477-a8b5-3ae38c4bd5df",
    "prId" : 35676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35676#pullrequestreview-11716183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f127fde4-f71c-4bb7-a2ee-bdc0bd830485",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Could you add another test case for Orphan?",
        "createdAt" : "2016-12-07T00:55:04Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "777977612b4b10bfd9d1fc26fa23669b89b8911f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +356,360 @@\n\t\tBy(\"delete the deployment\")\n\t\tdeleteOptions := getNonOrphanOptions()\n\t\tdeleteOptions.Preconditions = v1.NewUIDPreconditions(string(createdDeployment.UID))\n\t\tif err := deployClient.Delete(deployment.ObjectMeta.Name, deleteOptions); err != nil {"
  },
  {
    "id" : "a5d5db8c-2b00-4a64-89e9-160217b19bc4",
    "prId" : 35676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35676#pullrequestreview-13710762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f79ca761-30c0-42c3-89c0-5351661da695",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Could you add a test to test \"orphan\", similar to this [test](https://github.com/kubernetes/kubernetes/blob/v1.6.0-alpha.0/test/e2e/garbage_collector.go#L170)?",
        "createdAt" : "2016-12-20T00:46:19Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "a0e098d6-70b3-4095-88e2-c61a6682b28a",
        "parentId" : "f79ca761-30c0-42c3-89c0-5351661da695",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "done",
        "createdAt" : "2016-12-20T08:28:16Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "777977612b4b10bfd9d1fc26fa23669b89b8911f",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +377,381 @@\n\t\tgatherMetrics(f)\n\t})\n\n\tIt(\"should orphan RS created by deployment when deleteOptions.OrphanDependents is true\", func() {"
  },
  {
    "id" : "c114a702-a9e8-4da7-85e1-dace5a8b8e6e",
    "prId" : 35676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35676#pullrequestreview-14245585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b68764-37cf-4550-bec8-4b02b10d322c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "nit: can you realign the newlines?",
        "createdAt" : "2016-12-22T23:11:59Z",
        "updatedAt" : "2016-12-23T00:43:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "777977612b4b10bfd9d1fc26fa23669b89b8911f",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +97,101 @@}\n\n// verifyRemainingDeploymentsAndReplicaSets verifies if the number of the remaining deployment\n// and rs are deploymentNum and rsNum. It returns error if the\n// communication with the API server fails."
  },
  {
    "id" : "daa0e41e-7cb5-4a89-b2ad-82bce00406bc",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81dd498a-af4d-4609-8015-df527cdbd76f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I already commented on the PR this is from, right?\n",
        "createdAt" : "2016-07-12T21:47:23Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "eb45b371-4c90-4de5-8d2b-dfc68cb93e8f",
        "parentId" : "81dd498a-af4d-4609-8015-df527cdbd76f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes.\n",
        "createdAt" : "2016-07-13T06:15:46Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : null,
    "diffHunk" : "@@ -1,1 +98,102 @@}\n\nvar _ = framework.KubeDescribe(\"Garbage collector\", func() {\n\tf := framework.NewDefaultFramework(\"gc\")\n\tIt(\"[Feature:GarbageCollector] should delete pods created by rc when not orphaning\", func() {"
  },
  {
    "id" : "46fc9c85-b2b0-4611-b317-1e9b605196c3",
    "prId" : 27151,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83327dfa-2471-42e1-a9ed-a12f4b2e45f9",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Add a comment what the return values are.\n",
        "createdAt" : "2016-07-07T08:35:31Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a5b3c43a0e17283b67d4901ec0ddd44026f3c98",
    "line" : null,
    "diffHunk" : "@@ -1,1 +76,80 @@// controllers and pods are rcNum and podNum. It returns error if the\n// communication with the API server fails.\nfunc verifyRemainingObjects(f *framework.Framework, clientSet clientset.Interface, rcNum, podNum int) (bool, error) {\n\trcClient := clientSet.Core().ReplicationControllers(f.Namespace.Name)\n\tpods, err := clientSet.Core().Pods(f.Namespace.Name).List(api.ListOptions{})"
  },
  {
    "id" : "685cf7e3-d1fc-478b-a156-31f9862f7a06",
    "prId" : 27151,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db323806-09a3-47f7-87da-67d5bcb0a18e",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Replicas: 1 (or maybe try with 2)\n",
        "createdAt" : "2016-07-07T08:37:51Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "748e1073-d5af-4d93-8990-1a6d7542c476",
        "parentId" : "db323806-09a3-47f7-87da-67d5bcb0a18e",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Set to 2.\n",
        "createdAt" : "2016-07-07T21:02:43Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a5b3c43a0e17283b67d4901ec0ddd44026f3c98",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}"
  },
  {
    "id" : "bd1137f5-9078-4224-a1a4-4b0b089fa00f",
    "prId" : 27151,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "041ad564-a712-4240-ab24-d2544a51efef",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "if len(pod.Items) != rc.Spec.Replicas\n",
        "createdAt" : "2016-07-07T08:39:15Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "a191452f-e271-4857-b511-f265019c18fc",
        "parentId" : "041ad564-a712-4240-ab24-d2544a51efef",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is on purpose. I want to see if the gc handles correctly if a user deletes the rc before it reaches stasis. I'll add a comment.\n",
        "createdAt" : "2016-07-07T20:57:57Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a5b3c43a0e17283b67d4901ec0ddd44026f3c98",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\t// rc manager work properly if the rc is deleted before it reaches\n\t\t\t// stasis.\n\t\t\tif len(pods.Items) > 0 {\n\t\t\t\treturn true, nil\n\t\t\t} else {"
  },
  {
    "id" : "e8eca371-6fa5-4526-8e88-088e32ae49cf",
    "prId" : 27151,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "... so I'm wondering if you really need a dedicated e2e test. What happens if you just start up a cluster with the garbage collector on and run the rest of the e2e tests?\n",
        "createdAt" : "2016-07-08T16:55:18Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d1095c5e-120b-44c2-a860-25427d9fe345",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "By \"the rest of the e2e tests\", do you mean the tests we run in the submit-queue? Those might timeout, because orphaning is taking more time now, which is free before we have gc.\n",
        "createdAt" : "2016-07-08T17:27:02Z",
        "updatedAt" : "2016-07-08T17:27:24Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "b6421a86-1225-4b82-8a69-255bb1589ca4",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Or do you mean the rest of gc e2e tests? These two tests are just sanity checks, I'll add stress tests later, and these tests can be removed then.\n",
        "createdAt" : "2016-07-08T17:37:10Z",
        "updatedAt" : "2016-07-08T17:37:10Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "53721393-64cd-4c2c-acc2-4f637236504a",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I mean the regular e2e test suite. If it times out, we probably need\nto fix that :)\n\nOn Fri, Jul 8, 2016 at 10:27 AM, Chao Xu notifications@github.com wrote:\n\n> In test/e2e/garbage_collector.go\n> https://github.com/kubernetes/kubernetes/pull/27151#discussion_r70109761\n> :\n> \n> > -   if len(pods.Items) != podNum {\n> > -       ret = false\n> > -       By(fmt.Sprintf(\"expected %d pods, got %d pods\", podNum, len(pods.Items)))\n> > -   }\n> > -   rcs, err := rcClient.List(api.ListOptions{})\n> > -   if err != nil {\n> > -       return false, fmt.Errorf(\"Failed to list replication controllers: %v\", err)\n> > -   }\n> > -   if len(rcs.Items) != rcNum {\n> > -       ret = false\n> > -       By(fmt.Sprintf(\"expected %d RCs, got %d RCs\", rcNum, len(rcs.Items)))\n> > -   }\n> > -   return ret, nil\n> >   +}\n> >   +\n> >   +var _ = framework.KubeDescribe(\"Garbage collector\", func() {\n> \n> By \"the rest of the e2e tests\", do you mean the tests we run in the\n> submit-queue? Those might timeout, because orphaning is taking more time\n> now, which is free before we have gc.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27151/files/6b1ebb1c63d4cdc3e91657049a3d60b4aadc6ebd#r70109761,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAngloXs85yhZsZjJQfNXaSA199_pEz3ks5qTohwgaJpZM4IydTA\n> .\n",
        "createdAt" : "2016-07-08T22:00:17Z",
        "updatedAt" : "2016-07-08T22:00:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "dd8e1be6-8016-44b8-88bd-3427d72b796c",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Sure, but let's wait until the GC is more stable. I don't want to add another source of flake to the regular e2e suite now.\n",
        "createdAt" : "2016-07-08T22:06:55Z",
        "updatedAt" : "2016-07-08T22:06:55Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ecd5b5ed-6558-4e6a-ae71-f105f96dba3b",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't understand-- you have to launch a special cluster for this anyway,\nso it won't be affecting the current test jobs?\n\nOn Fri, Jul 8, 2016 at 3:07 PM, Chao Xu notifications@github.com wrote:\n\n> In test/e2e/garbage_collector.go\n> https://github.com/kubernetes/kubernetes/pull/27151#discussion_r70148050\n> :\n> \n> > -   if len(pods.Items) != podNum {\n> > -       ret = false\n> > -       By(fmt.Sprintf(\"expected %d pods, got %d pods\", podNum, len(pods.Items)))\n> > -   }\n> > -   rcs, err := rcClient.List(api.ListOptions{})\n> > -   if err != nil {\n> > -       return false, fmt.Errorf(\"Failed to list replication controllers: %v\", err)\n> > -   }\n> > -   if len(rcs.Items) != rcNum {\n> > -       ret = false\n> > -       By(fmt.Sprintf(\"expected %d RCs, got %d RCs\", rcNum, len(rcs.Items)))\n> > -   }\n> > -   return ret, nil\n> >   +}\n> >   +\n> >   +var _ = framework.KubeDescribe(\"Garbage collector\", func() {\n> \n> Sure, but let's wait until the GC is more stable. I don't want to add\n> another source of flake to the regular e2e suite now.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27151/files/6b1ebb1c63d4cdc3e91657049a3d60b4aadc6ebd#r70148050,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAnglr4KI0_NrxYhL7Rb4sr1dtK1d50Gks5qTsoIgaJpZM4IydTA\n> .\n",
        "createdAt" : "2016-07-09T04:56:19Z",
        "updatedAt" : "2016-07-09T04:56:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "07e90a98-0e44-446b-994c-17a9e5d0bc42",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "If I'm not mistaken @caesarxuchao wants to run it in a separate kubemark job: kubernetes/test-infra#132\n",
        "createdAt" : "2016-07-11T08:12:43Z",
        "updatedAt" : "2016-07-11T08:12:43Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "e3f11ac1-238c-480f-aa7e-6984e28f0675",
        "parentId" : "35d8e147-12b1-4c0c-accb-10b1cf3ff635",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes, the stress test will be run as a kubemark job. These two tests are just sanity check.\n\nAlso, the regular e2e tests don't test explicitly setting DeleteOptions.OrphanDependents, these two tests test that.\n",
        "createdAt" : "2016-07-11T17:01:42Z",
        "updatedAt" : "2016-07-11T17:01:42Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a5b3c43a0e17283b67d4901ec0ddd44026f3c98",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@}\n\nvar _ = framework.KubeDescribe(\"Garbage collector\", func() {\n\tf := framework.NewDefaultFramework(\"gc\")\n\tIt(\"[Feature:GarbageCollector] should delete pods created by rc when not orphaning\", func() {"
  },
  {
    "id" : "dac3116f-2a4e-4a5d-b9d4-08dfbe03876b",
    "prId" : 15428,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d1ccd5b-574f-4281-ad52-d6433b6e5ae4",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Add a comment that this needs to be longer than\ngcCheckPeriod\nin gc_controller.go?\n\nBTW why did you say that this test takes 6-7 minutes? Is it because creating the pods takes a long time?\n",
        "createdAt" : "2015-10-13T19:15:00Z",
        "updatedAt" : "2015-10-15T15:19:47Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "986f0e7c-13ec-4310-af4c-9d27958dedf0",
        "parentId" : "4d1ccd5b-574f-4281-ad52-d6433b6e5ae4",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It's because we rate limit clients and each pod requires two requests (one to create and one to set to failed).\n",
        "createdAt" : "2015-10-13T19:36:31Z",
        "updatedAt" : "2015-10-15T15:19:47Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "402e68e05cff969caeaa5769644d51cda80660a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\t// in pkg/controller/gc/gc_controller.go which is currently\n\t\t// 20 seconds.\n\t\ttime.Sleep(30 * time.Second)\n\n\t\tpods, err := f.Client.Pods(f.Namespace.Name).List(labels.Everything(), fields.Everything())"
  }
]