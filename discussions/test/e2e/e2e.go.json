[
  {
    "id" : "4220781c-ce53-4808-ba56-da3e95cf67ae",
    "prId" : 84524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84524#pullrequestreview-315120956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ed61a7-6186-4e39-b20a-85c3ae7f1f4a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Can we just skip appending the progress reporter if the URL is empty? ",
        "createdAt" : "2019-11-11T18:08:21Z",
        "updatedAt" : "2019-11-11T18:09:29Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "d352c492-bb62-469a-a600-c0ad060c6912",
        "parentId" : "88ed61a7-6186-4e39-b20a-85c3ae7f1f4a",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "That means we also don't log to stdout but maybe that's okay? ",
        "createdAt" : "2019-11-11T18:08:32Z",
        "updatedAt" : "2019-11-11T18:09:29Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "2c2c7271-40b8-4091-b23b-eada8f898d87",
        "parentId" : "88ed61a7-6186-4e39-b20a-85c3ae7f1f4a",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Or maybe logging to stdout should be a separate ginko reporter that's enabled by default?  ",
        "createdAt" : "2019-11-11T18:08:47Z",
        "updatedAt" : "2019-11-11T18:12:24Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ef81f18f-1675-43c0-8a01-1122e4eed1b7",
        "parentId" : "88ed61a7-6186-4e39-b20a-85c3ae7f1f4a",
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "I'm not sure I understand the motivation to decouple the URL and stdout printing; all the logic to count/gather/serialize would be the same. Even if we reused this datatype and had one for stdout printing and one for posting to URLs, then the memory footprint and processing overhead would be double (one for each of the reporters).\r\n\r\nWhat is the desired endgoal; you want the ability to disable this functionality?",
        "createdAt" : "2019-11-11T19:14:33Z",
        "updatedAt" : "2019-11-11T19:14:34Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "edaad12f-a55d-4e73-a76d-1cb3ff633c9b",
        "parentId" : "88ed61a7-6186-4e39-b20a-85c3ae7f1f4a",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Yes --  it sounds like the new progress reporter is actually doing two things: reporting progress via stdout and reporting progress by sending a POST request to a URL. Based on how ginkgo deals with custom reports, it sounds like they should be decoupled. Reporting to stdout can be on by default but still optional. \r\n\r\nI won't block on this though but something we should consider in the future.  ",
        "createdAt" : "2019-11-11T19:53:03Z",
        "updatedAt" : "2019-11-11T19:53:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed1d5270b35d0fc090ba1b9391d84b53f4127293",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +104,108 @@\n\t// Stream the progress to stdout and optionally a URL accepting progress updates.\n\tr = append(r, e2ereporters.NewProgressReporter(framework.TestContext.ProgressReportURL))\n\n\tklog.Infof(\"Starting e2e run %q on Ginkgo node %d\", framework.RunID, config.GinkgoConfig.ParallelNode)"
  },
  {
    "id" : "180fd4b5-f158-4034-b63b-a5433d4ba2c9",
    "prId" : 77427,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77427#pullrequestreview-233714998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2daefb93-c778-49f8-98d7-697e7dec6f61",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "@andrewsykim case + 1",
        "createdAt" : "2019-05-04T01:03:41Z",
        "updatedAt" : "2019-05-07T00:15:42Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "da7507500f4dd21a8dbb7e13b29812e495bd296c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +127,131 @@\n\tif err := framework.WaitForDaemonSets(c, metav1.NamespaceSystem, int32(framework.TestContext.AllowedNotReadyNodes), framework.TestContext.SystemDaemonsetStartupTimeout); err != nil {\n\t\te2elog.Logf(\"WARNING: Waiting for all daemonsets to be ready failed: %v\", err)\n\t}\n"
  },
  {
    "id" : "2dd2eb36-dcba-4c4d-b58b-f68420e02fc6",
    "prId" : 74905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74905#pullrequestreview-210837399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdd57243-bf0c-4d12-8300-c4840d679ce1",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this greatly simplifies things, given a client set exists here.\r\n\r\njust to confirm:\r\n\r\nthe flags values are fetched earlier than this function, here under `init()`:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/e2e/e2e_test.go#L56\r\n\r\nso at this point the value is defaulted to -1 already?\r\n",
        "createdAt" : "2019-03-05T15:41:57Z",
        "updatedAt" : "2019-03-05T15:46:12Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "9f47b9c3-d4e2-4c62-bad1-2705497f6e91",
        "parentId" : "cdd57243-bf0c-4d12-8300-c4840d679ce1",
        "authorId" : "b0af83a5-aab3-42a9-9f4b-63e513d410c7",
        "body" : "Yes at this point the value of the flag is passed through. So if not specified it's `-1`. If specified then that value is used. Also, if it's specified to be `-1` then this logic is still called. ",
        "createdAt" : "2019-03-05T15:54:56Z",
        "updatedAt" : "2019-03-05T15:54:56Z",
        "lastEditedBy" : "b0af83a5-aab3-42a9-9f4b-63e513d410c7",
        "tags" : [
        ]
      },
      {
        "id" : "daf88c8a-66a9-4b88-82a2-5b264af0904f",
        "parentId" : "cdd57243-bf0c-4d12-8300-c4840d679ce1",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Much better imo.  ",
        "createdAt" : "2019-03-05T18:19:30Z",
        "updatedAt" : "2019-03-05T18:19:48Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dfaed9f7eae4dbd4786c6e3ad8e3b011ad2b0ad",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +105,109 @@\t// If NumNodes is not specified then auto-detect how many are scheduleable and not tainted\n\tif framework.TestContext.CloudConfig.NumNodes == framework.DefaultNumNodes {\n\t\tframework.TestContext.CloudConfig.NumNodes = len(framework.GetReadySchedulableNodesOrDie(c).Items)\n\t}\n"
  },
  {
    "id" : "f2bb37c5-a420-4666-b7c3-de1de43fff08",
    "prId" : 68483,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68483#pullrequestreview-164297145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e349de1a-0082-4661-8321-e0e3040cc05f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Do we really need to hard smash in provider code?  \r\nWhat are we using?  and given that they are moving out of tree what do we need other then a string? \r\n\r\n/cc @dims ",
        "createdAt" : "2018-09-24T21:39:38Z",
        "updatedAt" : "2018-10-11T09:37:15Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "67f0411b-adfb-47f9-89dd-59b25629662c",
        "parentId" : "e349de1a-0082-4661-8321-e0e3040cc05f",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "looks like we are only referring to aws here because some of the CI jobs run the AWS specific tests, so we'll probably fail on say on vmware specific tests (but won't know until someone tries to run them)",
        "createdAt" : "2018-09-25T00:09:26Z",
        "updatedAt" : "2018-10-11T09:37:15Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "32677177-283a-4d10-9407-fa3a371982eb",
        "parentId" : "e349de1a-0082-4661-8321-e0e3040cc05f",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "test/e2e has traditionally contained tests that only work on certain providers. Is that really changing?\r\n\r\nIn this PR, I am only trying to untangle the code so that the the provider-specific tests are separate, optional packages. But I don't want to break the existing testing, so yes, the test/e2e.test binary still needs to import the same support code for different providers as before. For example, `_ \"k8s.io/kubernetes/test/e2e/framework/providers/aws\"` makes is possible to say `--provider=aws`.\r\n",
        "createdAt" : "2018-09-25T06:47:46Z",
        "updatedAt" : "2018-10-11T09:37:15Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "b8db5b15-785d-436d-8eab-fad7be362153",
        "parentId" : "e349de1a-0082-4661-8321-e0e3040cc05f",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So I'm pretty against the idea of bin smashing in provider specifics into the main framework. In the long run, this is antithetical to where we want to go with provider code.  \r\n\r\nIf anything we want to excise it and wrap any kube specific are with an extension label, such as [storage] ",
        "createdAt" : "2018-10-12T15:35:22Z",
        "updatedAt" : "2018-10-12T15:39:38Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "97101a6a86ea54959aa0eb20f3154f2d5fc290d6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@\n\t// ensure that cloud providers are loaded\n\t_ \"k8s.io/kubernetes/test/e2e/framework/providers/aws\"\n\t_ \"k8s.io/kubernetes/test/e2e/framework/providers/azure\"\n\t_ \"k8s.io/kubernetes/test/e2e/framework/providers/gce\""
  },
  {
    "id" : "eb0ac34c-8589-4c9d-8e06-7d0c2dec579b",
    "prId" : 59990,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59990#pullrequestreview-98736856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7ac042-caa5-4016-9d15-0c4076381527",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "If you intend to submit this as alpha, you will also have to whitelist the alpha test project to be able to use the alpha disk api",
        "createdAt" : "2018-02-22T00:27:01Z",
        "updatedAt" : "2018-02-22T22:24:15Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8a96e0ea-b072-429b-aa3e-190554ad8d8c",
        "parentId" : "0d7ac042-caa5-4016-9d15-0c4076381527",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Yep, I intend to submit this as beta, but will do this for the regular test project",
        "createdAt" : "2018-02-22T01:03:45Z",
        "updatedAt" : "2018-02-22T22:24:15Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "51f048b7-9b8f-4731-84b0-ea21985404c2",
        "parentId" : "0d7ac042-caa5-4016-9d15-0c4076381527",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "For beta you don't need to whitelist right?",
        "createdAt" : "2018-02-22T04:55:02Z",
        "updatedAt" : "2018-02-22T22:24:15Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "48752a45-da5f-42f8-aaa9-d610b10a7603",
        "parentId" : "0d7ac042-caa5-4016-9d15-0c4076381527",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "We do",
        "createdAt" : "2018-02-22T21:35:56Z",
        "updatedAt" : "2018-02-22T22:24:15Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "c08abb719f9b706b0909e424408080c8dc3f9a09",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\t}\n\n\t\tgceAlphaFeatureGate, err := gcecloud.NewAlphaFeatureGate([]string{\n\t\t\tgcecloud.AlphaFeatureNetworkEndpointGroup,\n\t\t\tgcecloud.AlphaFeatureGCEDisk,"
  },
  {
    "id" : "c2198c4f-f92f-407f-a929-879f71cbe1c9",
    "prId" : 52667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52667#pullrequestreview-65767532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "085a40d3-5d6b-4fe4-a2de-3434d40ffe61",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Do you plan to remove this in the future?",
        "createdAt" : "2017-09-28T06:55:39Z",
        "updatedAt" : "2017-09-28T06:57:44Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "9b2274c2-b8a4-436d-9d49-9c72d7174f24",
        "parentId" : "085a40d3-5d6b-4fe4-a2de-3434d40ffe61",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "yes, we plan to remove this from k/k and we shall do it as soon as we build the ci jobs on k/f and testing works from there.",
        "createdAt" : "2017-09-28T07:04:06Z",
        "updatedAt" : "2017-09-28T07:04:06Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec629ca126e14f3bf7b6251f7351cef4aeb348a8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +35,39 @@\truntimeutils \"k8s.io/apimachinery/pkg/util/runtime\"\n\tclientset \"k8s.io/client-go/kubernetes\"\n\tfederationtest \"k8s.io/kubernetes/federation/test/e2e\"\n\t\"k8s.io/kubernetes/pkg/cloudprovider/providers/azure\"\n\tgcecloud \"k8s.io/kubernetes/pkg/cloudprovider/providers/gce\""
  },
  {
    "id" : "ffe1000c-e84e-48c4-beb8-2226e1ecd2f2",
    "prId" : 39738,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39738#pullrequestreview-17158795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b82b2d4-a147-401a-89b8-e06b523e1f90",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Should this be only if FEDERATION=true?",
        "createdAt" : "2017-01-18T04:18:35Z",
        "updatedAt" : "2017-01-19T02:31:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "aa800f95-cb12-49eb-a1bf-3b5257fed7a3",
        "parentId" : "7b82b2d4-a147-401a-89b8-e06b523e1f90",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "This variable `federationtest.FederationSuite` is created and called just so that the e2e_federation package is included in e2e package during compilation. It wouldn't have any impact at runtime, so using this variable inside if FEDERATION=true will not be of any use.",
        "createdAt" : "2017-01-18T06:28:07Z",
        "updatedAt" : "2017-01-19T02:31:41Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "85c3f0d6a066466f07a2481bec56a42d91c41473",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +156,160 @@\n\t// Reference federation test to make the import valid.\n\tfederationtest.FederationSuite = commontest.FederationE2E\n\n\treturn nil"
  },
  {
    "id" : "3ec38c6f-9e8f-440d-8de2-f17aad7a7daa",
    "prId" : 37094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37094#pullrequestreview-9244053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "476320b7-a396-4fa8-bd15-57d409c596a2",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "whoa interesting, so we need this for e2e.go to work ? that might be an issue.  \n",
        "createdAt" : "2016-11-18T15:23:35Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "79202656bc34ecde65a3abb45dc54ef4ec480342",
    "line" : null,
    "diffHunk" : "@@ -1,1 +269,273 @@// to flip to Ready, log its output and delete it.\nfunc runKubernetesServiceTestContainer(c clientset.Interface, ns string) {\n\tpath := \"test/images/clusterapi-tester/pod.yaml\"\n\tp, err := podFromManifest(path)\n\tif err != nil {"
  },
  {
    "id" : "c954931e-8368-48bf-ae50-897f2e1063e2",
    "prId" : 37094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37094#pullrequestreview-10627126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "679372e3-642c-4aec-b734-51f818ba5996",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "hmm looks like these imports are ordered funny?  but not breaking any concrete fmt so its ok i guess.",
        "createdAt" : "2016-11-29T17:30:32Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "bf7c5764-fb44-4251-a253-a45eecfc130b",
        "parentId" : "679372e3-642c-4aec-b734-51f818ba5996",
        "authorId" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "body" : "Alphabetical? c < r < u?",
        "createdAt" : "2016-11-29T18:22:11Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "tags" : [
        ]
      },
      {
        "id" : "84014b42-0010-4d3f-b2bd-f109ace7cffb",
        "parentId" : "679372e3-642c-4aec-b734-51f818ba5996",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "yup, the blocks are each sorted separately... makes sense.  ",
        "createdAt" : "2016-11-29T19:29:54Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "0f220dc2-7016-4303-a8a4-e65d59464bf2",
        "parentId" : "679372e3-642c-4aec-b734-51f818ba5996",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "please re-order. ",
        "createdAt" : "2016-11-29T20:10:53Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "79202656bc34ecde65a3abb45dc54ef4ec480342",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +35,39 @@\tclientset \"k8s.io/kubernetes/pkg/client/clientset_generated/release_1_5\"\n\tgcecloud \"k8s.io/kubernetes/pkg/cloudprovider/providers/gce\"\n\t\"k8s.io/kubernetes/pkg/runtime\"\n\t\"k8s.io/kubernetes/pkg/util/logs\"\n\truntimeutils \"k8s.io/kubernetes/pkg/util/runtime\""
  },
  {
    "id" : "9d060485-4e95-45f0-8632-34137f570a8e",
    "prId" : 37094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37094#pullrequestreview-10612187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24bbb648-9780-49e7-853d-99ce5835db86",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "nit: why are we renaming this?",
        "createdAt" : "2016-11-29T17:31:30Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "86453877-8a52-4588-8a0e-bdd0cb306b5b",
        "parentId" : "24bbb648-9780-49e7-853d-99ce5835db86",
        "authorId" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "body" : "Two packages called runtime now.",
        "createdAt" : "2016-11-29T18:21:42Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "tags" : [
        ]
      },
      {
        "id" : "584407d7-f172-4ebf-9beb-5c5bcd469428",
        "parentId" : "24bbb648-9780-49e7-853d-99ce5835db86",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "gotcha",
        "createdAt" : "2016-11-29T19:19:20Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "79202656bc34ecde65a3abb45dc54ef4ec480342",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +226,230 @@// This function is called on each Ginkgo node in parallel mode.\nfunc RunE2ETests(t *testing.T) {\n\truntimeutils.ReallyCrash = true\n\tlogs.InitLogs()\n\tdefer logs.FlushLogs()"
  },
  {
    "id" : "e765908e-255f-49e1-9f82-c0d3a4761cef",
    "prId" : 37094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37094#pullrequestreview-10617910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4559884-4ad3-4e98-b197-309b0bfa20ba",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "ah i see, so the reason we are moving `waitForPodCondition` to exported is so that  the `runKubernetesService...` function can be internalized to e2e.go , which thus decoupled framework from generated.  makes sense.",
        "createdAt" : "2016-11-29T18:22:10Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "0dc2f47f-0020-444e-91eb-a119ffeeea9c",
        "parentId" : "f4559884-4ad3-4e98-b197-309b0bfa20ba",
        "authorId" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "body" : "Moved all the things",
        "createdAt" : "2016-11-29T19:38:40Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "tags" : [
        ]
      }
    ],
    "commit" : "79202656bc34ecde65a3abb45dc54ef4ec480342",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +286,290 @@\t}()\n\ttimeout := 5 * time.Minute\n\tif err := framework.WaitForPodCondition(c, ns, p.Name, \"clusterapi-tester\", timeout, testutils.PodRunningReady); err != nil {\n\t\tframework.Logf(\"Pod %v took longer than %v to enter running/ready: %v\", p.Name, timeout, err)\n\t\treturn"
  },
  {
    "id" : "22372fc2-3f8a-4bd1-a71e-cace659dd06c",
    "prId" : 37094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37094#pullrequestreview-10628736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "715a9871-5785-42fd-b9d8-9528bdb59524",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Is this what we're doing now?  Seems weird that we're hard coding version into clientset? \r\n\r\n/cc @deads2k ",
        "createdAt" : "2016-11-29T20:10:41Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "7d70c0f6-1cda-4770-b4ee-a162e90ebddd",
        "parentId" : "715a9871-5785-42fd-b9d8-9528bdb59524",
        "authorId" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "body" : "That's from one of the several rebases that I had over the life of this PR so far. You can see it's that way in master presently.",
        "createdAt" : "2016-11-29T20:12:02Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "tags" : [
        ]
      },
      {
        "id" : "ee84df9c-daf8-4d01-9956-99cbb1ae6032",
        "parentId" : "715a9871-5785-42fd-b9d8-9528bdb59524",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Is this what we're doing now? Seems weird that we're hard coding version into clientset?\r\n\r\nIt's how the external client is versioned at the moment.  We are transitioning to use the versioned client so that we can eventually make use of the `kubernetes/client-go` client.\r\n\r\nUsing the internal client is now discouraged in non-api server locations.",
        "createdAt" : "2016-11-29T20:18:34Z",
        "updatedAt" : "2016-12-02T18:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "79202656bc34ecde65a3abb45dc54ef4ec480342",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +33,37 @@\t\"k8s.io/kubernetes/pkg/api\"\n\t\"k8s.io/kubernetes/pkg/api/v1\"\n\tclientset \"k8s.io/kubernetes/pkg/client/clientset_generated/release_1_5\"\n\tgcecloud \"k8s.io/kubernetes/pkg/cloudprovider/providers/gce\"\n\t\"k8s.io/kubernetes/pkg/runtime\""
  },
  {
    "id" : "3106d84a-9629-422c-8092-5a120ff8cf66",
    "prId" : 35284,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35284#pullrequestreview-7361832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae0e9b2b-c279-4357-a93b-7ed533a7a7f1",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Will this break other existing tests?\n\nCC @kubernetes/sig-cluster-federation\n",
        "createdAt" : "2016-11-07T06:30:05Z",
        "updatedAt" : "2017-04-07T12:40:16Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8bc39dd1a1bb3ae676b8b5c82a72317c1ecb78d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\t\treturn fmt.Errorf(\"error parsing GCE/GKE region from zone %q: %v\", zone, err)\n\t\t}\n\t\tmanagedZones := []string{} // Manage all zones in the region\n\t\tif !framework.TestContext.CloudConfig.MultiZone {\n\t\t\tmanagedZones = []string{zone}"
  },
  {
    "id" : "fb7193c4-b7a4-4d55-bc74-a27e50e4bd83",
    "prId" : 20771,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "603564f6-be51-4101-9ad4-9c0f82ca18ef",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "Should have comment explanation.\n",
        "createdAt" : "2016-02-08T21:45:37Z",
        "updatedAt" : "2016-02-14T04:37:13Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff3f9f6bcc70ccf93a5fa6b2d889b1efa327480a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +218,222 @@// not remove them (see RemoveCleanupAction) but it does run unlocked, so they\n// may remove themselves.\nfunc RunCleanupActions() {\n\tlist := []func(){}\n\tfunc() {"
  },
  {
    "id" : "2f57ff44-e1a3-41d9-bbc6-508f5f604cd7",
    "prId" : 19624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40977209-8b54-48fd-a601-0c82cab69e0d",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "2016?\n",
        "createdAt" : "2016-01-14T23:23:33Z",
        "updatedAt" : "2016-01-28T23:08:22Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef5f1012f687cd633f29b5e9b2b1c7ded2145195",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@/*\nCopyright 2015 The Kubernetes Authors All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");"
  },
  {
    "id" : "b5ad8aa5-ca33-4b33-89f1-b9db2fc5b31a",
    "prId" : 19624,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03069def-ac0c-4052-8ea5-5ddbbc1b453c",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "s/TestE2E/RunE2ETests/\n",
        "createdAt" : "2016-01-29T00:45:19Z",
        "updatedAt" : "2016-01-29T00:45:19Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef5f1012f687cd633f29b5e9b2b1c7ded2145195",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +201,205 @@})\n\n// TestE2E checks configuration parameters (specified through flags) and then runs\n// E2E tests using the Ginkgo runner.\n// If a \"report directory\" is specified, one or more JUnit test reports will be"
  }
]