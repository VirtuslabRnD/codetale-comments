[
  {
    "id" : "11aa65aa-6100-4938-bc2a-c30d8c5f5fae",
    "prId" : 20771,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd439cd1-ac1c-4f09-9fc0-f700e93b20de",
        "parentId" : null,
        "authorId" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "body" : "xref issue filed against Ginkgo.\n",
        "createdAt" : "2016-02-09T17:36:59Z",
        "updatedAt" : "2016-02-14T04:37:13Z",
        "lastEditedBy" : "d513ff43-94d3-4f43-8358-1fb8132b6aae",
        "tags" : [
        ]
      },
      {
        "id" : "8d71f16c-5caf-48ec-9df0-fb1ecbee30a5",
        "parentId" : "fd439cd1-ac1c-4f09-9fc0-f700e93b20de",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "can you update this comment with the xref?\n",
        "createdAt" : "2016-02-11T19:51:38Z",
        "updatedAt" : "2016-02-14T04:37:13Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2d443749-9eee-4bd7-bea7-caacda0a2ca9",
        "parentId" : "fd439cd1-ac1c-4f09-9fc0-f700e93b20de",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "https://github.com/onsi/ginkgo/issues/222 - added to next push\n",
        "createdAt" : "2016-02-14T04:28:23Z",
        "updatedAt" : "2016-02-14T04:37:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff3f9f6bcc70ccf93a5fa6b2d889b1efa327480a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +88,92 @@// beforeEach gets a client and makes a namespace.\nfunc (f *Framework) beforeEach() {\n\t// The fact that we need this feels like a bug in ginkgo.\n\t// https://github.com/onsi/ginkgo/issues/222\n\tf.cleanupHandle = AddCleanupAction(f.afterEach)"
  },
  {
    "id" : "db0808d4-8293-4d7d-8626-40a58e46670a",
    "prId" : 19258,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a62cc39c-e95a-477b-8123-87afcc683716",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "I don't understand this line. You're casting `received` to `metricsForE2E`. But shouldn't you also call something like `PrintHumanReadable` on it?\n",
        "createdAt" : "2016-01-05T11:22:57Z",
        "updatedAt" : "2016-01-05T11:22:57Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "eb9719a7-d95f-4afe-aba0-bf2cd8b59f83",
        "parentId" : "a62cc39c-e95a-477b-8123-87afcc683716",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Yup. received has a type MetricsCollection which does not have PrintHumanReadable method, and metricsForE2E implements Summary interface (i.e. implement PrintHumanReadable and PrintJSON). It's a simple 'wrapper' type for MetricsCollection that adds those methods to them.\n",
        "createdAt" : "2016-01-05T11:31:44Z",
        "updatedAt" : "2016-01-05T11:31:44Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "03fc8ba40a6e17524a3e107101f8c99cc46d96ba",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +172,176 @@\t\t\t\tLogf(\"MetricsGrabber failed grab metrics. Skipping metrics gathering.\")\n\t\t\t} else {\n\t\t\t\tsummaries = append(summaries, (*metricsForE2E)(&received))\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "fc789de2-2b8c-4740-bdcb-3558f1589bff",
    "prId" : 19142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8f3ed86-1a10-4530-97cd-cc46dba6671f",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "yeah - I think that we should always pass exactly one type\n",
        "createdAt" : "2015-12-29T08:50:10Z",
        "updatedAt" : "2015-12-29T09:26:55Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df78a239879db73d6ca831e850c289e38393a8b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +162,166 @@\t}\n\n\toutputTypes := strings.Split(testContext.OutputPrintType, \",\")\n\tfor _, printType := range outputTypes {\n\t\tswitch printType {"
  },
  {
    "id" : "c4eb3101-d8ff-4f4a-9c3f-3074ed2b9670",
    "prId" : 19142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fba9c533-030a-4f3c-92e2-315b244a7786",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think that structure:\n\nfor i := range summaries {\n  switch printType {\n    case \"hr\": Logf(summaries[i].PrintHumanReadable())\n    case \"json\": Logf(summaries[i].PrintJSON())\n    default: Logf(...)\n  }\n}\n\nis more readable and shorter. WDYT?\n",
        "createdAt" : "2015-12-29T08:52:01Z",
        "updatedAt" : "2015-12-29T09:26:55Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e9dec2d1-5ed4-4943-918a-8b64bb8821a5",
        "parentId" : "fba9c533-030a-4f3c-92e2-315b244a7786",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Code yes, but actually I didn't want to interleave summaries with garbage. I wanted to have all human readable first, then jsons, then whatever.\n",
        "createdAt" : "2015-12-29T08:55:10Z",
        "updatedAt" : "2015-12-29T09:26:55Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "0ca58d0e-c60b-49cd-affb-749a22270e27",
        "parentId" : "fba9c533-030a-4f3c-92e2-315b244a7786",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Agree - this is also why I think that one type of logs is enough (then there is no such problem).\n",
        "createdAt" : "2015-12-29T08:57:01Z",
        "updatedAt" : "2015-12-29T09:26:55Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df78a239879db73d6ca831e850c289e38393a8b",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +173,177 @@\t\t\t\tLogf(summaries[i].PrintJSON())\n\t\t\t}\n\t\tdefault:\n\t\t\tLogf(\"Unknown ouptut type: %v. Skipping.\", printType)\n\t\t}"
  },
  {
    "id" : "41be11c6-da15-4eba-8853-1bafdb068bd0",
    "prId" : 16505,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3f0a55f-732a-4c08-b392-af660f536ada",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Please add empty line before this line and add some comment what exactly it does.\nDoes it print this data, does it verify it, etc.\n",
        "createdAt" : "2015-10-30T10:09:05Z",
        "updatedAt" : "2015-11-02T12:35:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "09f1a3ab-d176-469d-90b0-6aba5ca16b75",
        "parentId" : "e3f0a55f-732a-4c08-b392-af660f536ada",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2015-11-02T09:58:24Z",
        "updatedAt" : "2015-11-02T12:35:59Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfe391d4eed271de16c30ea40ff24c345d03b0c1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +43,47 @@\t// If set to true framework will start a goroutine monitoring resource usage of system add-ons.\n\t// It will read the data every 30 seconds from all Nodes and print summary during afterEach.\n\tGatherKubeSystemResourceUsageData bool\n\tgatherer                          containerResourceGatherer\n}"
  }
]