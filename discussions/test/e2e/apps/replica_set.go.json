[
  {
    "id" : "b96ca6cd-d6b6-4fea-a0eb-579849764ae3",
    "prId" : 101261,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101261#pullrequestreview-640520136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b1833a1-30c8-4b57-96b6-5399155c1297",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Do we want to `failed to verify ReplicaSets` to distinguish from line 535?",
        "createdAt" : "2021-04-20T11:07:28Z",
        "updatedAt" : "2021-04-22T22:31:36Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "ffa594c9-5db0-4226-a90a-b47650f6bd71",
        "parentId" : "1b1833a1-30c8-4b57-96b6-5399155c1297",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "We could distinguish those errors by `Verify that ReplicaSets have been deleted` at line542 but it is a nice idea to put some words (`after DeleteCollection` or something).",
        "createdAt" : "2021-04-20T23:55:55Z",
        "updatedAt" : "2021-04-22T22:31:36Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "11eca39ff66c974dc9e4aed83211628bdea1b062",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +545,549 @@\tginkgo.By(\"After DeleteCollection verify that ReplicaSets have been deleted\")\n\trsList, err = c.AppsV1().ReplicaSets(\"\").List(context.TODO(), metav1.ListOptions{LabelSelector: \"e2e=\" + e2eValue})\n\tframework.ExpectNoError(err, \"failed to list ReplicaSets\")\n\tframework.ExpectEqual(len(rsList.Items), 0, \"filtered list should have no replicas\")\n}"
  },
  {
    "id" : "32063c84-9c16-4bc6-a78d-763486a44c89",
    "prId" : 101261,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101261#pullrequestreview-656107342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dac5c40-6e93-4846-81b8-4c8cc9d0354b",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "nit: Not pod creation but pods did not come up to Running State",
        "createdAt" : "2021-05-10T19:22:53Z",
        "updatedAt" : "2021-05-10T19:25:58Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "41f5c744-e4c7-43db-8495-625cb58418a1",
        "parentId" : "8dac5c40-6e93-4846-81b8-4c8cc9d0354b",
        "authorId" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "body" : "Good point. The test is following a similar pattern as the Conformance tests for other resources.\r\nI will keep this in mind for the next test of this kind.\r\n",
        "createdAt" : "2021-05-10T21:39:03Z",
        "updatedAt" : "2021-05-10T21:39:03Z",
        "lastEditedBy" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "tags" : [
        ]
      }
    ],
    "commit" : "11eca39ff66c974dc9e4aed83211628bdea1b062",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +529,533 @@\tginkgo.By(\"Verify that the required pods have come up\")\n\terr = e2epod.VerifyPodsRunning(c, ns, \"sample-pod\", false, replicas)\n\tframework.ExpectNoError(err, \"Failed to create pods: %s\", err)\n\tr, err := rsClient.Get(context.TODO(), rsName, metav1.GetOptions{})\n\tframework.ExpectNoError(err, \"failed to get ReplicaSets\")"
  },
  {
    "id" : "da3c18c7-d7b7-47e1-83b9-b21905e49f2d",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-651725997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74c13c0e-cb17-49d2-812a-85b4a76fe59b",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "need this log?",
        "createdAt" : "2021-05-04T19:34:48Z",
        "updatedAt" : "2021-05-04T19:34:48Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "2bd59776-76f0-4e25-87f8-7ea89e7ee29d",
        "parentId" : "74c13c0e-cb17-49d2-812a-85b4a76fe59b",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "If the test was to flake at some point the idea was to have a reference point to help debug what status conditions we have at this point of the test and what we validate with the watch below.",
        "createdAt" : "2021-05-04T22:35:54Z",
        "updatedAt" : "2021-05-04T22:35:54Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +651,655 @@\t})\n\tframework.ExpectNoError(err, \"Failed to update status. %v\", err)\n\tframework.Logf(\"updatedStatus.Conditions: %#v\", updatedStatus.Status.Conditions)\n\n\tginkgo.By(\"watching for the ReplicaSet status to be updated\")"
  },
  {
    "id" : "668a0d68-c875-43a1-888c-2dca9233380b",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-651726230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "462dc47b-66e0-458c-a080-df0760b60d5e",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "one more",
        "createdAt" : "2021-05-04T19:37:03Z",
        "updatedAt" : "2021-05-04T19:37:03Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "c07367d3-49d8-4a10-a1c0-13824c648856",
        "parentId" : "462dc47b-66e0-458c-a080-df0760b60d5e",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "see comment above for line 602",
        "createdAt" : "2021-05-04T22:36:29Z",
        "updatedAt" : "2021-05-04T22:36:29Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +689,693 @@\tpatchedReplicaSet, err := rsClient.Patch(context.TODO(), rsName, types.MergePatchType, payload, metav1.PatchOptions{}, \"status\")\n\tframework.ExpectNoError(err, \"Failed to patch status. %v\", err)\n\tframework.Logf(\"Patched status conditions: %#v\", patchedReplicaSet.Status.Conditions)\n\n\tginkgo.By(\"watching for the Replicaset status to be patched\")"
  },
  {
    "id" : "8587ba24-b7ee-46a0-8447-2cf7db00f708",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-657353497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1054e2b0-5a0b-44dd-9e99-c5479c3dac61",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Is the goal here just to hit `/status` endpoint? I ask because to get status sub-resource, `.Get()` method should have been enough similar to the approach you followed below.",
        "createdAt" : "2021-05-10T19:39:55Z",
        "updatedAt" : "2021-05-10T19:52:39Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "7af98b5d-3a37-4f35-848d-9a2c8fa30dcf",
        "parentId" : "1054e2b0-5a0b-44dd-9e99-c5479c3dac61",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "@ravisantoshgudimetla I'm on the same team has @Riaankl and wrote this test to be part of conformance.\r\n\r\nYes, the goal is to hit the `/status` endpoint. The `.Get()` method can't access the status sub-resource, so it requires the dynamic client.",
        "createdAt" : "2021-05-10T21:06:31Z",
        "updatedAt" : "2021-05-10T21:06:31Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "6eeb724c-82f9-42a4-97a8-b2337c2b09f3",
        "parentId" : "1054e2b0-5a0b-44dd-9e99-c5479c3dac61",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "You mean to update? Then it is fair.",
        "createdAt" : "2021-05-12T00:29:56Z",
        "updatedAt" : "2021-05-12T00:33:31Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +621,625 @@\tframework.ExpectNoError(err, \"Failed to create pods: %s\", err)\n\n\tginkgo.By(\"Getting /status\")\n\trsResource := schema.GroupVersionResource{Group: \"apps\", Version: \"v1\", Resource: \"replicasets\"}\n\trsStatusUnstructured, err := f.DynamicClient.Resource(rsResource).Namespace(ns).Get(context.TODO(), rsName, metav1.GetOptions{}, \"status\")"
  },
  {
    "id" : "e33a9f11-c081-4d76-b018-83f1b80f631b",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-657353497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42f647cd-f989-4334-bd57-d003be29fb6f",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "We usually expect the controller to update the status not by other actor. So, I am wondering if we are just hitting this to increase the coverage where as we in reality this cannot and shouldn't happen",
        "createdAt" : "2021-05-10T19:48:55Z",
        "updatedAt" : "2021-05-10T19:52:39Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "8c2b1dfc-8619-4814-8bd4-013e5cfe9f48",
        "parentId" : "42f647cd-f989-4334-bd57-d003be29fb6f",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I am wondering if you can mimic the patch by modifying the spec and watch if the status subresource has been patched instead of manually updating the status",
        "createdAt" : "2021-05-10T19:51:38Z",
        "updatedAt" : "2021-05-10T19:52:39Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "9d3e5b8a-89fe-4916-9046-adf2036ad67c",
        "parentId" : "42f647cd-f989-4334-bd57-d003be29fb6f",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "The process of checking `/status` endpoints has gone through a number of discussions in conformance meetings for [Service Status endpoints](https://github.com/kubernetes/kubernetes/issues/94867) and [API Service Status](https://github.com/ii/kubernetes/blob/apiservice-status-endpoints/test/e2e/apimachinery/aggregator.go#L546-L670). \r\n\r\nI'm trying to have a clean common pattern for testing any `/status` endpoint no matter the resource.",
        "createdAt" : "2021-05-10T21:20:08Z",
        "updatedAt" : "2021-05-10T21:20:09Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "fbe63470-0403-4f0e-ae28-eb5b9e2690ec",
        "parentId" : "42f647cd-f989-4334-bd57-d003be29fb6f",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Thank you for providing the context. I am fine with the approach after going through the [comments](https://github.com/kubernetes/kubernetes/issues/94867#issuecomment-759016564) in the issue linked.",
        "createdAt" : "2021-05-12T00:30:49Z",
        "updatedAt" : "2021-05-12T00:33:31Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +633,637 @@\tframework.Logf(\"Replicaset %s has Conditions: %v\", rsName, rsStatus.Status.Conditions)\n\n\tginkgo.By(\"updating the Replicaset Status\")\n\tvar statusToUpdate, updatedStatus *appsv1.ReplicaSet\n"
  },
  {
    "id" : "f07c52d9-45f0-47a3-ac5c-b0aa55f457fd",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-662746222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5c07063-e5f8-490d-9ed5-7611a0f045c6",
        "parentId" : null,
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "@ravisantoshgudimetla Thanks for the earlier review. I've updated this section as there was a potential bug where I had an extra `return`. Also, line 627-8 includes the object for the event now.\r\n\r\nCan I get another lgtm? TIA\r\n",
        "createdAt" : "2021-05-19T03:50:02Z",
        "updatedAt" : "2021-05-19T03:50:02Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +678,682 @@\t\tobject := strings.Split(fmt.Sprintf(\"%v\", event.Object), \"{\")[0]\n\t\tframework.Logf(\"Observed %v event: %+v\", object, event.Type)\n\t\treturn false, nil\n\t})\n\tframework.ExpectNoError(err, \"failed to locate replicaset %v in namespace %v\", testReplicaSet.ObjectMeta.Name, ns)"
  },
  {
    "id" : "70786efa-1ed2-44ef-98e5-f44c4f7c6485",
    "prId" : 101260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101260#pullrequestreview-662746822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e71ea86-8f51-44ee-9e24-0985a4b8a7f3",
        "parentId" : null,
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "@ravisantoshgudimetla same as line 624-9",
        "createdAt" : "2021-05-19T03:52:04Z",
        "updatedAt" : "2021-05-19T03:52:04Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "31f30383d83ec2d17e6b7de7394724bd16857a24",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +713,717 @@\t\t}\n\t\tobject := strings.Split(fmt.Sprintf(\"%v\", event.Object), \"{\")[0]\n\t\tframework.Logf(\"Observed %v event: %+v\", object, event.Type)\n\t\treturn false, nil\n\t})"
  },
  {
    "id" : "b2d91f84-229c-4106-970d-f4dcc4325143",
    "prId" : 99380,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99380#pullrequestreview-597774736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f05b76-4784-409a-84af-c309b820db3e",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "- Do we want to verify that the patch applied correctly with a get?\r\n- Do we want to wait (`e2ereplicaset.WaitForReadyReplicaSet`)?",
        "createdAt" : "2021-02-24T15:44:59Z",
        "updatedAt" : "2021-02-24T19:59:06Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "baa159c9-2af9-45c6-a729-9b67194f1481",
        "parentId" : "34f05b76-4784-409a-84af-c309b820db3e",
        "authorId" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "body" : "I do not think SIG Apps want `e2ereplicaset.WaitForReadyReplicaSet` in the tests. Last time I had to remove it.\r\nYour thoughts @soltysh ?",
        "createdAt" : "2021-02-24T17:29:40Z",
        "updatedAt" : "2021-02-24T19:59:06Z",
        "lastEditedBy" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "tags" : [
        ]
      },
      {
        "id" : "cf23dc94-233f-4714-a475-ddd18820ab06",
        "parentId" : "34f05b76-4784-409a-84af-c309b820db3e",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@Riaankl we can do the first one at least then?",
        "createdAt" : "2021-02-24T17:50:31Z",
        "updatedAt" : "2021-02-24T19:59:06Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "7a126817-3384-4c35-a5d8-4bb83f8c9f50",
        "parentId" : "34f05b76-4784-409a-84af-c309b820db3e",
        "authorId" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "body" : "Yes, sorry. Two different issues. A `get` make sense.\r\nAdded and tested it.\r\nThank you. \r\n",
        "createdAt" : "2021-02-24T18:05:41Z",
        "updatedAt" : "2021-02-24T19:59:06Z",
        "lastEditedBy" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e6ba4d2b17dd58d8d9dc3bbdefa54be85ee6040",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +475,479 @@\t_, err = f.ClientSet.AppsV1().ReplicaSets(ns).Patch(context.TODO(), rsName, types.StrategicMergePatchType, []byte(rsPatch), metav1.PatchOptions{})\n\tframework.ExpectNoError(err, \"failed to patch ReplicaSet\")\n\n\trs, err = c.AppsV1().ReplicaSets(ns).Get(context.TODO(), rsName, metav1.GetOptions{})\n\tframework.ExpectNoError(err, \"Failed to get replicaset resource: %v\", err)"
  },
  {
    "id" : "fafa1c55-964f-4af2-afce-ab4a0916a137",
    "prId" : 98987,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98987#pullrequestreview-588996607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b0f84df-8fab-46aa-976e-9513c6b41477",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "i know we don't want to wait for the operation to complete, but left a question to @soltysh in the previous thread asking if we still need to do the `Get` and verify if the patch succeeded. ( i know we are checking if the `Patch` operation returns an error or not, but if should we confirm that with a Get )",
        "createdAt" : "2021-02-11T20:51:27Z",
        "updatedAt" : "2021-02-11T20:59:46Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "8d8ce287-8b1c-4ef5-a743-12e6eb7d85b9",
        "parentId" : "8b0f84df-8fab-46aa-976e-9513c6b41477",
        "authorId" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "body" : "You are correct @Dims I should only have removed the last line.\r\nReplace the `get` check.\r\nThank you.\r\n",
        "createdAt" : "2021-02-11T21:01:33Z",
        "updatedAt" : "2021-02-11T21:01:33Z",
        "lastEditedBy" : "53d7f6d1-52e4-4b09-bbe9-0301c7d86286",
        "tags" : [
        ]
      },
      {
        "id" : "73ab952f-8ce3-4470-b8c5-ad3307faf489",
        "parentId" : "8b0f84df-8fab-46aa-976e-9513c6b41477",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "👍🏾 ",
        "createdAt" : "2021-02-11T21:22:25Z",
        "updatedAt" : "2021-02-11T21:22:25Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c721d8cf65132b45d0a75da56034c317c26a119f",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +407,411 @@\t_, err = c.AppsV1().ReplicaSets(ns).Patch(context.TODO(), rsName, types.StrategicMergePatchType, []byte(rsScalePatchPayload), metav1.PatchOptions{}, \"scale\")\n\tframework.ExpectNoError(err, \"Failed to patch replicaset: %v\", err)\n\n\trs, err = c.AppsV1().ReplicaSets(ns).Get(context.TODO(), rsName, metav1.GetOptions{})\n\tframework.ExpectNoError(err, \"Failed to get replicaset resource: %v\", err)"
  },
  {
    "id" : "f8d83727-79c5-46ac-8e73-bf133cb13f5e",
    "prId" : 98987,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98987#pullrequestreview-589370001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8cb9a34-fafe-4761-a0cf-dd9844e01837",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Nit: unnecessary empty line. ",
        "createdAt" : "2021-02-12T11:14:01Z",
        "updatedAt" : "2021-02-12T11:14:22Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c721d8cf65132b45d0a75da56034c317c26a119f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +26,30 @@\tautoscalingv1 \"k8s.io/api/autoscaling/v1\"\n\t\"k8s.io/apimachinery/pkg/types\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\tapierrors \"k8s.io/apimachinery/pkg/api/errors\""
  },
  {
    "id" : "5740a106-c9cb-4641-b9e0-616e909446b1",
    "prId" : 69675,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69675#pullrequestreview-170397601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9164aeba-6ecb-478e-b4e2-957e62e4c65c",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "A Pod is created, then a Replica Set (RS) whose label selector will match the Pod.  The RS MUST either adopt the Pod or delete and replace it with a new Pod.  When the labels on one of the Pods owned by the RS change to no longer match the RS's label selector, the RS MUST release the Pod and update the Pod's owner references",
        "createdAt" : "2018-10-31T18:16:40Z",
        "updatedAt" : "2018-10-31T18:50:58Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81936320b6dc7a8c6fa72fded1ce00ffa059597",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +109,113 @@\t\tDescription: A Pod is created, then a Replica Set (RS) whose label selector will match the Pod. The RS MUST either adopt the Pod or delete and replace it with a new Pod. When the labels on one of the Pods owned by the RS change to no longer match the RS's label selector, the RS MUST release the Pod and update the Pod's owner references\n\t*/\n\tframework.ConformanceIt(\"should adopt matching pods on creation and release no longer matching pods\", func() {\n\t\ttestRSAdoptMatchingAndReleaseNotMatching(f)\n\t})"
  },
  {
    "id" : "9e1403a0-59b1-4f24-ac54-1199093186bf",
    "prId" : 49289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49289#pullrequestreview-51315957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b08299a1-fe6c-4eb0-bfc6-39312d2b126d",
        "parentId" : null,
        "authorId" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "body" : "Golint comments: should have a package comment, unless it's in another file for this package. [More info](https://golang.org/wiki/CodeReviewComments#package-comments). <!-- golint -->",
        "createdAt" : "2017-07-20T20:09:04Z",
        "updatedAt" : "2017-07-22T10:43:51Z",
        "lastEditedBy" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e93ed27bd90728dc840b9bfd67b5c4c35affe48",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage apps\n\nimport ("
  }
]