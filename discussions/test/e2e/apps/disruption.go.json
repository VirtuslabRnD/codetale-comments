[
  {
    "id" : "736012a7-50c0-4a6c-bdaa-1e8803e13329",
    "prId" : 99290,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99290#pullrequestreview-606544936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b0907b8-540e-432c-8a27-c79fc3ae2b33",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "can you drop the `policyv1beta1 \"k8s.io/api/policy/v1beta1\"` import to ensure everything in this file is using the v1 API? it looks like https://github.com/kubernetes/kubernetes/pull/84740 failed the ga-only conformance run so I think some calls are still using the beta API.",
        "createdAt" : "2021-03-08T15:51:53Z",
        "updatedAt" : "2021-03-09T15:30:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d71f80ed-0e93-48d0-8552-b8f07ca86dfc",
        "parentId" : "0b0907b8-540e-432c-8a27-c79fc3ae2b33",
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "So I think the test failures in #84740 is primarily because the feature flag wasn't updated, so the disruption controller isn't running in those tests. I have updated this PR to address that and will also update #84740.\r\nAnother issue here is that some of the pdb e2e tests use the eviction API, which of course is not GA. So I will look at the tests being promoted to conformance in #84740 and make sure those doesn't rely on Eviction. But this means we still need to import `policyv1beta1 \"k8s.io/api/policy/v1beta1\"` here.",
        "createdAt" : "2021-03-08T17:37:28Z",
        "updatedAt" : "2021-03-09T15:30:52Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      },
      {
        "id" : "5e2903b2-266f-4cf3-97b0-3a853c013178",
        "parentId" : "0b0907b8-540e-432c-8a27-c79fc3ae2b33",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Another issue here is that some of the pdb e2e tests use the eviction API, which of course is not GA. So I will look at the tests being promoted to conformance in #84740 and make sure those doesn't rely on Eviction. But this means we still need to import `policyv1beta1 \"k8s.io/api/policy/v1beta1\"` here.\r\n\r\nah, that makes sense for the import. I think we'll want to continue exercising the subresource in the test, there's little use for the PDB API otherwise",
        "createdAt" : "2021-03-08T17:42:34Z",
        "updatedAt" : "2021-03-09T15:30:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "66e722765a216db5288498b0a21bcededf8d9236",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@\tv1 \"k8s.io/api/core/v1\"\n\tpolicyv1 \"k8s.io/api/policy/v1\"\n\tpolicyv1beta1 \"k8s.io/api/policy/v1beta1\"\n\tapierrors \"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\""
  },
  {
    "id" : "30cce789-3566-4de3-a5b1-101d3c93e016",
    "prId" : 92991,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92991#pullrequestreview-456520660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e688f441-075e-467e-a572-3941c732bc86",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "`DeletionTimestamp` is a pointer so this needs to be `pod.ObjectMeta.DeletionTimestamp == nil`",
        "createdAt" : "2020-07-28T08:55:49Z",
        "updatedAt" : "2020-07-28T09:05:40Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "bdfba416-520a-41d3-ab1d-6489108a0e80",
        "parentId" : "e688f441-075e-467e-a572-3941c732bc86",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "sent a PR to fix it https://github.com/kubernetes/kubernetes/pull/93501",
        "createdAt" : "2020-07-28T10:56:14Z",
        "updatedAt" : "2020-07-28T10:56:14Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a527c10edc00968ec5462753f633599d0a192aa6",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +492,496 @@\t\tfor i := range pods.Items {\n\t\t\tpod := pods.Items[i]\n\t\t\tif podutil.IsPodReady(&pod) && pod.ObjectMeta.DeletionTimestamp.IsZero() {\n\t\t\t\tready++\n\t\t\t}"
  },
  {
    "id" : "9a3976f5-a309-4a71-8418-52eb6b62caa8",
    "prId" : 90321,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90321#pullrequestreview-396936848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a052c68d-cfce-439e-a170-ac5e41f4e777",
        "parentId" : null,
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "Thanks.\r\n/lgtm",
        "createdAt" : "2020-04-21T02:01:27Z",
        "updatedAt" : "2020-04-21T02:01:31Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "47e4f51da2a2a15f46d5ab134fa672adcedb3561",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +608,612 @@\tpdbStatusResource := policyv1beta1.SchemeGroupVersion.WithResource(\"poddisruptionbudgets\")\n\tunstruct, err := dc.Resource(pdbStatusResource).Namespace(ns).Get(context.TODO(), name, metav1.GetOptions{}, \"status\")\n\tframework.ExpectNoError(err)\n\tpdb, err := unstructuredToPDB(unstruct)\n\tframework.ExpectNoError(err, \"Getting the status of the pdb %s in namespace %s\", name, ns)"
  },
  {
    "id" : "a28a3fc9-74af-40c3-a942-67a4331e52fc",
    "prId" : 87205,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87205#pullrequestreview-342929000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e874b996-db30-440a-afc8-a1858cdb0f3d",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "How about adding `framework.Logf(\"current healthy count(%d) is different from expected healthy count(%d)\", pdb.Status.CurrentHealthy, healthyCount)` for digging easily?\r\nThe log will be output maximum 15 times as current interval and timeout, but it would be fine if we want to debug.",
        "createdAt" : "2020-01-15T00:38:53Z",
        "updatedAt" : "2020-01-15T00:39:27Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "4673731c0bc70aa813ab264e911b0042df8a5f91",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +413,417 @@\t\t}\n\t\tif pdb.Status.CurrentHealthy != healthyCount {\n\t\t\treturn false, nil\n\t\t}\n\t\treturn true, nil"
  },
  {
    "id" : "00e4b418-b27d-47e5-b9a5-f0caaa7d22dd",
    "prId" : 86366,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86366#pullrequestreview-339366045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87590b55-ccaf-4031-9773-b02fed072e7a",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "is this returning address of a temporary variable?",
        "createdAt" : "2020-01-07T07:53:48Z",
        "updatedAt" : "2020-01-07T16:48:20Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "facf009d-738c-4a88-8c35-983dbe5b4af0",
        "parentId" : "87590b55-ccaf-4031-9773-b02fed072e7a",
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "Yeah, it is taking the address of the iteration variable. It works in this situation due to the early return after the assignment, but we should avoid this. I have updated the PR.",
        "createdAt" : "2020-01-07T16:50:56Z",
        "updatedAt" : "2020-01-07T16:50:57Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "81a6cf284783dba51db495a65ca1338e2a829b11",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +378,382 @@\t\t\tp := podList.Items[i]\n\t\t\tif podutil.IsPodReady(&p) {\n\t\t\t\tpod = &p\n\t\t\t\treturn true, nil\n\t\t\t}"
  },
  {
    "id" : "fbb4ec3d-7420-48dc-9e9a-80e2bb2ca355",
    "prId" : 85819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85819#pullrequestreview-325782158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b528253f-9a5f-44eb-89e9-3709d6c064be",
        "parentId" : null,
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "corev1 is a better name here.",
        "createdAt" : "2019-12-02T20:54:23Z",
        "updatedAt" : "2020-02-18T19:19:43Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      },
      {
        "id" : "9687c52c-63a0-4634-8496-da40490d1bf3",
        "parentId" : "b528253f-9a5f-44eb-89e9-3709d6c064be",
        "authorId" : "77d9a573-96ca-4cd7-807c-2fcd0c1c44d9",
        "body" : "`corev1` violates the import-aliases rule :disappointed: \r\n> ERROR wrong alias for import \"k8s.io/api/core/v1\" should be v1 in file test/e2e/apps/disruption.go\r\n",
        "createdAt" : "2019-12-02T22:20:12Z",
        "updatedAt" : "2020-02-18T19:19:43Z",
        "lastEditedBy" : "77d9a573-96ca-4cd7-807c-2fcd0c1c44d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b757ca16e2bddf72b06655caa61189289c459259",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +27,31 @@\n\tappsv1 \"k8s.io/api/apps/v1\"\n\tv1 \"k8s.io/api/core/v1\"\n\tpolicyv1beta1 \"k8s.io/api/policy/v1beta1\"\n\tapierrors \"k8s.io/apimachinery/pkg/api/errors\""
  },
  {
    "id" : "5f70efc4-f257-4baf-ac6b-1be9b4054cc9",
    "prId" : 85819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85819#pullrequestreview-339433037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3808f30-3551-458e-ba3b-40a78018f99a",
        "parentId" : null,
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "Why do we check `DisruptionsAllowed` on the PDB returned from `updatePDBOrDie` but we fetch the PDB again before checking the `DisruptedPods`?",
        "createdAt" : "2020-01-07T19:02:43Z",
        "updatedAt" : "2020-02-18T19:19:43Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b757ca16e2bddf72b06655caa61189289c459259",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +129,133 @@\t\t// fetch again to make sure the update from API was effective\n\t\tupdated := getPDBStatusOrDie(dc, ns, defaultName)\n\t\tframework.ExpectHaveKey(updated.Status.DisruptedPods, pod.Name, \"Expecting the DisruptedPods have %s\", pod.Name)\n\n\t\tginkgo.By(\"Patching PodDisruptionBudget status\")"
  },
  {
    "id" : "b03ae350-6f24-49b5-9dab-1b3e9eb9cc07",
    "prId" : 69867,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69867#pullrequestreview-223871264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a50c3281-f18f-4954-b451-b152c83fe052",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "move this definition of `e` near Evict ?",
        "createdAt" : "2019-03-18T07:04:56Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "1a0aa562-295e-43b2-b46f-db2facea79eb",
        "parentId" : "a50c3281-f18f-4954-b451-b152c83fe052",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "+1",
        "createdAt" : "2019-03-19T22:08:00Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "8b6229b6-f9d5-4387-a164-2ff30795a795",
        "parentId" : "a50c3281-f18f-4954-b451-b152c83fe052",
        "authorId" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "body" : "moved as requested",
        "createdAt" : "2019-04-08T14:14:23Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3537eed826c5e3d4b329d73e156e45ec165fe513",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\t\t},\n\t\t}\n\t\terr = cs.CoreV1().Pods(ns).Evict(e)\n\t\tgomega.Expect(err).Should(gomega.MatchError(\"Cannot evict pod as it would violate the pod's disruption budget.\"))\n"
  },
  {
    "id" : "4f671cb0-c151-4394-beff-1489764f22bd",
    "prId" : 69867,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69867#pullrequestreview-227106313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "633f092c-a708-44a5-9a24-0d4db41fe984",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "nit: I felt it is nice to pass PDB name as one argument of the function instead of static \"foo\" to understand the relation.\r\nCurrent test scenario is readable, so current way also is good for me.",
        "createdAt" : "2019-04-15T16:59:21Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "82b26fbd-cdf3-45f3-86cd-37ee9ed1f913",
        "parentId" : "633f092c-a708-44a5-9a24-0d4db41fe984",
        "authorId" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "body" : "Hi, perhaps but it has been passed as a static \"foo\" in all of the existing tests so I've tried to keep it consistent with them.",
        "createdAt" : "2019-04-16T10:19:29Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3537eed826c5e3d4b329d73e156e45ec165fe513",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +262,266 @@func updatePDBMinAvailableOrDie(cs kubernetes.Interface, ns string, minAvailable intstr.IntOrString) {\n\terr := retry.RetryOnConflict(retry.DefaultRetry, func() error {\n\t\told, err := cs.PolicyV1beta1().PodDisruptionBudgets(ns).Get(\"foo\", metav1.GetOptions{})\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "b840fbfa-0f96-4d55-a1f2-085c1ec10eaf",
    "prId" : 69867,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69867#pullrequestreview-227320426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6319daf-e5ea-48a2-af30-ad83596bbe1e",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "nit: ditto",
        "createdAt" : "2019-04-15T16:59:49Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "360bd6e0-bd20-45b4-a6a7-e38501ddb8ba",
        "parentId" : "b6319daf-e5ea-48a2-af30-ad83596bbe1e",
        "authorId" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "body" : "Do you feel that this code is acceptable?",
        "createdAt" : "2019-04-16T10:20:17Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "tags" : [
        ]
      },
      {
        "id" : "21971c9e-6173-406c-95f9-7a888ea2931d",
        "parentId" : "b6319daf-e5ea-48a2-af30-ad83596bbe1e",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Yes, looks good for me.",
        "createdAt" : "2019-04-16T16:51:04Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "3537eed826c5e3d4b329d73e156e45ec165fe513",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +389,393 @@\tginkgo.By(\"Waiting for the pdb to be processed\")\n\terr := wait.PollImmediate(framework.Poll, schedulingTimeout, func() (bool, error) {\n\t\tpdb, err := cs.PolicyV1beta1().PodDisruptionBudgets(ns).Get(\"foo\", metav1.GetOptions{})\n\t\tif err != nil {\n\t\t\treturn false, err"
  },
  {
    "id" : "6b2f9894-0ab7-461a-b873-b9dff61f6203",
    "prId" : 69867,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69867#pullrequestreview-234910649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "329ed3ba-9975-4dab-b8eb-27cef3c9a198",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "is the blocking if PDB doesnt allow it , a new behavior ?",
        "createdAt" : "2019-05-08T06:19:56Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "5365f63c-d771-4696-8928-056f7e19039c",
        "parentId" : "329ed3ba-9975-4dab-b8eb-27cef3c9a198",
        "authorId" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "body" : "It’s the standard behavior of the pdb to block an eviction unless it’s conditions have been satisfied.",
        "createdAt" : "2019-05-08T07:47:47Z",
        "updatedAt" : "2019-05-14T11:32:08Z",
        "lastEditedBy" : "432aa3ee-3ef4-47fa-895d-a138c2545ba5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3537eed826c5e3d4b329d73e156e45ec165fe513",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +199,203 @@\t}\n\n\tginkgo.It(\"should block an eviction until the PDB is updated to allow it\", func() {\n\t\tginkgo.By(\"Creating a pdb that targets all three pods in a test replica set\")\n\t\tcreatePDBMinAvailableOrDie(cs, ns, intstr.FromInt(3))"
  },
  {
    "id" : "3587c46e-d4c2-4aeb-a2d0-0a8fbd865b48",
    "prId" : 49289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49289#pullrequestreview-51315957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28325a40-8107-46a8-9725-a419010787eb",
        "parentId" : null,
        "authorId" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "body" : "Golint comments: should have a package comment, unless it's in another file for this package. [More info](https://golang.org/wiki/CodeReviewComments#package-comments). <!-- golint -->",
        "createdAt" : "2017-07-20T20:09:04Z",
        "updatedAt" : "2017-07-22T10:43:51Z",
        "lastEditedBy" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e93ed27bd90728dc840b9bfd67b5c4c35affe48",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage apps\n\nimport ("
  }
]