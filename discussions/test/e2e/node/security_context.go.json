[
  {
    "id" : "7bc45a3f-0ae3-419a-9b05-02b23acfd0e2",
    "prId" : 88247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88247#pullrequestreview-360817364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "I guess `err != nil` case is intentionally ignored here.\r\nIt is necessary to add comment which explains why here to avoid adding `err != nil` check in the future.",
        "createdAt" : "2020-02-18T23:08:17Z",
        "updatedAt" : "2020-02-18T23:09:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "67a67a05-2c4d-4b04-893d-87e5f1021cdb",
        "parentId" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "Yes, if we get error reading this file, we assume that selinux is not in enforced mode, and skip the test.\r\n\r\nPerhaps we could use something like this instead?\r\n```go\r\nisEnforced, _ := tk.ReadFile...\r\nif isEnforced == \"1\" {\r\n...\r\n```\r\n\r\n@oomichi Let me know if that's OK with you.",
        "createdAt" : "2020-02-19T01:10:55Z",
        "updatedAt" : "2020-02-19T01:10:55Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      },
      {
        "id" : "a6c22571-b635-490c-82eb-51b19b7456de",
        "parentId" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "I guess the best way is `No such file or directory` error is handled as ignored and the other `err` leads an exception.\r\n",
        "createdAt" : "2020-02-19T01:47:55Z",
        "updatedAt" : "2020-02-19T01:47:55Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "7b108119-0ebd-4351-aee4-8b7364bf0c03",
        "parentId" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "Not sure what you mean by exception -- `f,Failf(\"can't read file: %v\", err)`?\r\n\r\nIn both cases, I guess, we have to skip the test (rather than fail it), which is what the current code does.\r\n\r\nI'll add error reporting",
        "createdAt" : "2020-02-19T02:55:21Z",
        "updatedAt" : "2020-02-19T02:55:21Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      },
      {
        "id" : "5c7dc39a-0761-4baa-b5f6-3e80f5c1de04",
        "parentId" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "Oh well, the error is actually already logged by `tk.ReadFileViaContainer()` itself, so I'm not sure what else to do here.",
        "createdAt" : "2020-02-19T03:10:02Z",
        "updatedAt" : "2020-02-19T03:10:02Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      },
      {
        "id" : "2f0e954d-039b-4157-955c-598c116ed0e5",
        "parentId" : "a1a8f54b-7da8-42db-98eb-0e55e781cabf",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "except maybe what I suggested [above](https://github.com/kubernetes/kubernetes/pull/88247#discussion_r381026024), i.e. ignoring the error in a more straightforward way",
        "createdAt" : "2020-02-19T03:11:31Z",
        "updatedAt" : "2020-02-19T03:11:32Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      }
    ],
    "commit" : "70a28579988915a7832118aa199ab713e05c696b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +272,276 @@\n\t// for this to work, SELinux should be in enforcing mode, so let's check that\n\tisEnforced, err := tk.ReadFileViaContainer(pod.Name, \"test-container\", \"/sys/fs/selinux/enforce\")\n\tif err == nil && isEnforced == \"1\" {\n\t\t_, err = tk.ReadFileViaContainer(pod.Name, \"test-container\", testFilePath)"
  },
  {
    "id" : "5b01afc2-dcef-40bb-882c-c03850ff5ffb",
    "prId" : 88247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88247#pullrequestreview-360783358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f0c391f-8731-4ebf-b26c-be9de9871cac",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "ditto",
        "createdAt" : "2020-02-18T23:08:48Z",
        "updatedAt" : "2020-02-18T23:09:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "7f264341-dff6-4928-8389-6b1e7fb71d8f",
        "parentId" : "7f0c391f-8731-4ebf-b26c-be9de9871cac",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "(see above)",
        "createdAt" : "2020-02-19T01:12:26Z",
        "updatedAt" : "2020-02-19T01:19:11Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      }
    ],
    "commit" : "70a28579988915a7832118aa199ab713e05c696b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +254,258 @@\t}\n\tf.TestContainerOutput(\"Pod with same MCS label reading test file\", pod, 0, []string{testContent})\n\n\t// Confirm that the same pod with a different MCS\n\t// label cannot access the volume"
  }
]