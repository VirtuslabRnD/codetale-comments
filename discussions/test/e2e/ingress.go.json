[
  {
    "id" : "ddf264f1-5328-4c97-a807-a1347dae75df",
    "prId" : 39094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39094#pullrequestreview-14151195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59428882-ff79-4118-8ed3-5ec16a6ce41f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "isn't that `v1` usually?",
        "createdAt" : "2016-12-22T09:30:44Z",
        "updatedAt" : "2016-12-22T09:30:44Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9daf098f-5d77-4969-ae8f-c099c81f5775",
        "parentId" : "59428882-ff79-4118-8ed3-5ec16a6ce41f",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> isn't that v1 usually?\r\n\r\nit is more confusing to read that way as you start adding more.  \"Which v1\" is a question I don't want to mess with.",
        "createdAt" : "2016-12-22T12:42:38Z",
        "updatedAt" : "2016-12-22T12:42:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "28487872-e0a3-4e5c-b759-17926680c09d",
        "parentId" : "59428882-ff79-4118-8ed3-5ec16a6ce41f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Am not against legacyv1 or apiv1. Just a question of consistency throughout the codebase. Feel free to rename it everywhere.",
        "createdAt" : "2016-12-22T13:11:54Z",
        "updatedAt" : "2016-12-22T13:11:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a4cfc09f16be00c4ca474ad6c855472d3797f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +22,26 @@\t\"time\"\n\n\tlegacyv1 \"k8s.io/kubernetes/pkg/api/v1\"\n\trbacv1alpha1 \"k8s.io/kubernetes/pkg/apis/rbac/v1alpha1\"\n\t\"k8s.io/kubernetes/pkg/runtime/schema\""
  },
  {
    "id" : "5a193ccd-9bfd-4de1-a936-58e0b7c65b40",
    "prId" : 26821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c37d5dc-1603-4d0c-82e9-af158276738a",
        "parentId" : null,
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "Are gcloud commands flaky ? Retries useful ?\n",
        "createdAt" : "2016-06-10T20:40:03Z",
        "updatedAt" : "2016-06-16T18:55:52Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "72540cad-79c4-4a9d-b273-e406d34332bf",
        "parentId" : "3c37d5dc-1603-4d0c-82e9-af158276738a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "yeah we retry the overall cleanup call https://github.com/kubernetes/kubernetes/pull/26821/files#diff-ec4b96325ef379121837e76bb579c833R198\n",
        "createdAt" : "2016-06-10T21:24:23Z",
        "updatedAt" : "2016-06-16T18:55:52Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "da6f964be44d273dac7f60938c9f850f97d3b78c",
    "line" : 570,
    "diffHunk" : "@@ -1,1 +470,474 @@\targList := append([]string{\"compute\", resource, \"delete\", name, fmt.Sprintf(\"--project=%v\", project), \"-q\"}, args...)\n\toutput, err := exec.Command(\"gcloud\", argList...).CombinedOutput()\n\tif err != nil {\n\t\tframework.Logf(\"Error deleting %v, output: %v\\nerror: %+v\", resource, string(output), err)\n\t}"
  },
  {
    "id" : "249a2d65-768e-4735-a0a2-59a3d03c0cdf",
    "prId" : 26821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b2ed565-574d-4de3-b8ff-e894370d0131",
        "parentId" : null,
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "Are gcloud commands flaky ? Retries useful ?\n",
        "createdAt" : "2016-06-10T20:40:13Z",
        "updatedAt" : "2016-06-16T18:55:52Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "da6f964be44d273dac7f60938c9f850f97d3b78c",
    "line" : 617,
    "diffHunk" : "@@ -1,1 +514,518 @@\nfunc (cont *GCEIngressController) staticIP(name string) string {\n\toutput, err := exec.Command(\"gcloud\", \"compute\", \"addresses\", \"create\", name, \"--global\").CombinedOutput()\n\tframework.Logf(string(output))\n\tExpectNoError(err)"
  },
  {
    "id" : "a9fc0f68-3579-4717-898e-e5ac1e973ed6",
    "prId" : 26821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8becf51-12b9-4b94-b31c-814416203072",
        "parentId" : null,
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "Would parallelization help when deleting all these gcloud resources ?\n",
        "createdAt" : "2016-06-10T20:41:07Z",
        "updatedAt" : "2016-06-16T18:55:52Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "52750470-d805-4f90-b451-d2523b6423ba",
        "parentId" : "a8becf51-12b9-4b94-b31c-814416203072",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Most cases we don't need to delete them, the lb controller will. on when the controller doesn't, the test cleansup and fails. Dont think its an operation worth optimizing.\n",
        "createdAt" : "2016-06-10T21:25:15Z",
        "updatedAt" : "2016-06-16T18:55:52Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "da6f964be44d273dac7f60938c9f850f97d3b78c",
    "line" : 648,
    "diffHunk" : "@@ -1,1 +543,547 @@\t\t\t\tmsg += fmt.Sprintf(\"%v\\n\", f.Name)\n\t\t\t\tif del {\n\t\t\t\t\tgcloudDelete(\"forwarding-rules\", f.Name, cont.Project, \"--global\")\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "c7f8ce82-5f4c-4d8a-8153-e9994e2623b4",
    "prId" : 17614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999cf3d2-b858-4ec8-a554-9d1767ccc31e",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Nit: shouldn't this be lbControllerName?\n",
        "createdAt" : "2015-11-24T04:48:46Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "62e03ff8-9941-4756-a3c0-3b7bcea515d0",
        "parentId" : "999cf3d2-b858-4ec8-a554-9d1767ccc31e",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Both the controller and the pod have the same name, because there's an insipid sidecar container in there that's not worth including in the controller name.\n",
        "createdAt" : "2015-11-24T23:24:39Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c553b15534757a6efc7eb99fff5f2aa7fd7e8fef",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +69,73 @@\n\t// Name of the loadbalancer controller within the cluster addon\n\tlbContainerName = \"l7-lb-controller\"\n\n\t// If set, the test tries to perform an HTTP GET on each url endpoint of"
  },
  {
    "id" : "4bd32357-f3cc-4a12-875c-b3abb67a4183",
    "prId" : 17614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a56168b-9316-4701-a574-54161057ba22",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "v0.5.1\n",
        "createdAt" : "2015-11-25T00:12:57Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "c553b15534757a6efc7eb99fff5f2aa7fd7e8fef",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +274,278 @@\trc.Spec.Replicas = 1\n\n\t// These command line params are only recognized by v0.51 and above.\n\ttestArgs := []string{\n\t\t// Pass namespace uid so the controller will tag resources with it."
  },
  {
    "id" : "feaa4204-eb76-4e4a-93a1-4da136ec9b56",
    "prId" : 17614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b12f3a83-3f7a-4b11-aef6-21c557dc9d92",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I'm taking the easy way out. I don't want to duplicate code or try to solve the problem with more hacks. I think it'll get solved when we have a more general solution for external resource cleanup. Thoughts? \n",
        "createdAt" : "2015-11-25T04:04:03Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "9614b69a-4d64-4492-9fb4-38ef285aac08",
        "parentId" : "b12f3a83-3f7a-4b11-aef6-21c557dc9d92",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Hacky length limit test is better than none. Is `foo-app-X` significant?\n",
        "createdAt" : "2015-11-25T17:58:14Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "2b69b4b8-0bc5-4542-a71a-4627e9591cc0",
        "parentId" : "b12f3a83-3f7a-4b11-aef6-21c557dc9d92",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Yeah we can lose that.\n\nTo clarify, the name namespace currently is 'e2e-test-glbc-5chars', which won't cause problems. The 5 chars limit is from the master (ingress strategy). If we make this arbitrarily long, it will, and the right way to solve this is by asking the controller what resources it created before deleting the Ingress, then checking that those exact resources are deleted. \n\nI should probably add that in the comment in case it starts to fail for this reason when I'm no longer around or something. \n",
        "createdAt" : "2015-11-25T19:09:58Z",
        "updatedAt" : "2015-11-30T19:30:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c553b15534757a6efc7eb99fff5f2aa7fd7e8fef",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +243,247 @@\t// the name construction logic from the controller cross-repo. We will not\n\t// need to be so paranoid about leaked resources once we figure out a solution\n\t// for issues like #16337. Currently, all names should fall within 63 chars.\n\ttestName := fmt.Sprintf(\"k8s-fw-foo-app-X-%v--%v\", cont.ns, cont.UID)\n\tif len(testName) > nameLenLimit {"
  },
  {
    "id" : "89e93b43-ed0b-48e8-944f-cbd66d1fb66a",
    "prId" : 16979,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "376c9cf8-9925-4faf-8a25-469c719ede62",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "\"only used in debugging\" but this is set to true?\n",
        "createdAt" : "2015-11-16T23:07:54Z",
        "updatedAt" : "2015-11-17T02:58:15Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "064497ec-1999-4ec3-b36c-a3e5cf27f7c4",
        "parentId" : "376c9cf8-9925-4faf-8a25-469c719ede62",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I meant only set to false to debug, clarified comment\n",
        "createdAt" : "2015-11-17T02:58:18Z",
        "updatedAt" : "2015-11-17T02:58:18Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb4106fe29dfe23655431aa1be47dc18bae2f29a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +68,72 @@\t// If set, the test tries to perform an HTTP GET on each url endpoint of\n\t// the Ingress. Only set to false to short-circuit test runs in debugging.\n\tverifyHTTPGET = true\n\n\t// On average it takes ~6 minutes for a single backend to come online."
  },
  {
    "id" : "518b7df2-2368-48d3-9313-75ab277943f5",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf65fa13-4d9c-4dd2-85fe-388b4671d4b4",
        "parentId" : null,
        "authorId" : null,
        "body" : "You might consider reducing this.  5sec?  That would shave 15 seconds off the running time of this test, on average.\nWith 200 tests, every 15 sec counts :-)\n",
        "createdAt" : "2015-10-30T17:44:24Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "fe4fe67a-f3f0-4f25-b531-04b57fe40fb1",
        "parentId" : "bf65fa13-4d9c-4dd2-85fe-388b4671d4b4",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I had it at 5 previously but that's 180 lines of log spam. Thoughts? \n",
        "createdAt" : "2015-10-30T23:39:01Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0837f4a1-01ee-4f82-9c9a-4c71eb17c9f1",
        "parentId" : "bf65fa13-4d9c-4dd2-85fe-388b4671d4b4",
        "authorId" : null,
        "body" : "Fair enough. Leave as 30 sec.\n",
        "createdAt" : "2015-11-02T19:38:09Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@\t// time, and fail if the average is too high.\n\tlbPollTimeout  = 15 * time.Minute\n\tlbPollInterval = 30 * time.Second\n\n\t// One can scale this test by tweaking numApps and numIng, the former will"
  },
  {
    "id" : "d94f5c7b-ce8d-4549-a9ea-9a547a961ffc",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d55e4e9-32be-4cae-b03c-c7b749f22ca8",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: This seems like a very useful utility for more than just this test.  Suggest factoring it out into e2e/util library.  In the process you'll want to improve its decoupling by passing in appPrefix, httpContainerPort, testImage etc as parameters.\nHappy to do all this in a follow-on PR if you prefer.  Just create an issue to track that.\n",
        "createdAt" : "2015-10-30T18:21:23Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@// createApp will create a single RC and Svc. The Svc will match pods of the\n// RC using the selector: 'name'=<name arg>\nfunc createApp(c *client.Client, ns string, i int) {\n\tname := fmt.Sprintf(\"%v%d\", appPrefix, i)\n\tl := map[string]string{}"
  },
  {
    "id" : "4fee6399-82c2-47ea-bfd6-7788b1082c65",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67ce4c14-0bb3-458c-94f2-b1ddc54bbe5b",
        "parentId" : null,
        "authorId" : null,
        "body" : "Similar to above comment, this would make a great library function in e2e/util\n",
        "createdAt" : "2015-10-30T18:22:26Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +169,173 @@\n// gcloudUnmarshal unmarshals json output of gcloud into given out interface.\nfunc gcloudUnmarshal(resource, regex string, out interface{}) {\n\toutput, err := exec.Command(\"gcloud\", \"compute\", resource, \"list\",\n\t\tfmt.Sprintf(\"--regex=%v\", regex), \"-q\", \"--format=json\").CombinedOutput()"
  },
  {
    "id" : "5d470aab-16df-470b-8b92-c7960940e09e",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5c39c80-11aa-4b63-9a91-7a132d48a3f4",
        "parentId" : null,
        "authorId" : null,
        "body" : "Gomega assertions are slightly more terse, and arguably more standard:\nhttps://onsi.github.io/gomega/#making-assertions\nhttps://onsi.github.io/gomega/#provided-matchers\nBut I don't feel too strongly about this.  Just an idea.\n",
        "createdAt" : "2015-10-30T19:34:19Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8f46d437-dcaa-4aa1-ade7-d23f36f45193",
        "parentId" : "b5c39c80-11aa-4b63-9a91-7a132d48a3f4",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I think i'd have to encode it as Expect(numApps<numIng).NotToEqual(false) or something, which is weird\n",
        "createdAt" : "2015-10-30T23:50:55Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@\t\t//\t  foo0.bar.com: /foo0\n\t\t//\t  foo1.bar.com: /foo1\n\t\tif numApps < numIng {\n\t\t\tFailf(\"Need more apps than Ingress\")\n\t\t}"
  },
  {
    "id" : "43e502e7-7287-4596-80eb-017784f8541f",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daed5c71-406a-4ce4-8a08-709e752cbcfe",
        "parentId" : null,
        "authorId" : null,
        "body" : "Please make the error message more obvious, e.g. \"Failed to clean up cloud resources - expected none but found backend services ....\"\nGomega assertions might be convenient here:\nhttps://onsi.github.io/gomega/#making-assertions\nhttps://onsi.github.io/gomega/#provided-matchers\n",
        "createdAt" : "2015-10-30T19:47:37Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "1b5a57bd-a706-40cf-81bd-0e709c351cf1",
        "parentId" : "daed5c71-406a-4ce4-8a08-709e752cbcfe",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "This isn't a failure actually, it's just polling on GLBC to cleanup resources. I think it'll be weird if it keeps printing \"Failed to cleanup resources\" 2/3 times and then passes. I'll add an assert.\n",
        "createdAt" : "2015-10-30T23:59:52Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "7cdae510-0918-498b-a02f-6232a18e0f90",
        "parentId" : "daed5c71-406a-4ce4-8a08-709e752cbcfe",
        "authorId" : null,
        "body" : "Fair enough.\n",
        "createdAt" : "2015-11-02T20:34:03Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +189,193 @@\t\t\tmsg += fmt.Sprintf(\"%v\\n\", b.Name)\n\t\t}\n\t\treturn fmt.Errorf(\"Found backend services:\\n%v\", msg)\n\t}\n\tfwList := []compute.ForwardingRule{}"
  },
  {
    "id" : "95ef176c-2197-47cd-975e-ad06feb32f1a",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08a13f03-f3af-4d6e-b8cf-cd23c2048fd1",
        "parentId" : null,
        "authorId" : null,
        "body" : "Same comment as above.\n",
        "createdAt" : "2015-10-30T19:47:47Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\t\tmsg += fmt.Sprintf(\"%v\\n\", f.Name)\n\t\t}\n\t\treturn fmt.Errorf(\"Found forwarding rules:\\n%v\", msg)\n\t}\n\treturn nil"
  },
  {
    "id" : "60dfd802-2c96-4c0a-81e4-92433de45c63",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23603450-cfbd-4fb9-96e4-5bf764750aa9",
        "parentId" : null,
        "authorId" : null,
        "body" : "Admittedly other tests are not very consistent about this, but using a By() clause rather than a simple Log() here doesn't seem to make much sense?\n",
        "createdAt" : "2015-10-30T20:00:35Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "d2d60769-a2f4-4b4e-ba4a-c73923b6b8c1",
        "parentId" : "23603450-cfbd-4fb9-96e4-5bf764750aa9",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I use By when something of importance has occurred (in this case the loadbalancer acquiring an IP) because it prints out a bold STEP which sort of makes sense, it's the successful completion of a step in the test\n",
        "createdAt" : "2015-10-31T00:02:06Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "bda37ccf-1f2e-4513-bbc9-fd942782ba1e",
        "parentId" : "23603450-cfbd-4fb9-96e4-5bf764750aa9",
        "authorId" : null,
        "body" : "Fair enough.\n",
        "createdAt" : "2015-11-02T19:39:11Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 272,
    "diffHunk" : "@@ -1,1 +270,274 @@\t\t\taddress, err := waitForIngressAddress(client, ing.Namespace, ing.Name, lbPollTimeout)\n\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t\tBy(fmt.Sprintf(\"Found address %v for ingress %v, took %v to come online\",\n\t\t\t\taddress, ing.Name, time.Since(start)))\n\t\t\tcreationTimes = append(creationTimes, time.Since(start))"
  },
  {
    "id" : "96ac837f-ff57-4a6c-ac48-2f2d90bad1ff",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dc0a880-d1fc-4438-aa8c-89f696875f7d",
        "parentId" : null,
        "authorId" : null,
        "body" : "Under what conditions is this true?  Worth an explanatory comment?\n",
        "createdAt" : "2015-10-30T20:01:20Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e1ffdc6b-1b15-4745-a9e5-fd4f6b5b8bfb",
        "parentId" : "2dc0a880-d1fc-4438-aa8c-89f696875f7d",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "never today, till we've exetended the api to include non-http Ingress\n",
        "createdAt" : "2015-10-31T00:02:29Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : null,
    "diffHunk" : "@@ -1,1 +277,281 @@\t\t\tfor _, rules := range ing.Spec.Rules {\n\t\t\t\t// As of Kubernetes 1.1 we only support HTTP Ingress.\n\t\t\t\tif rules.IngressRuleValue.HTTP == nil {\n\t\t\t\t\tcontinue\n\t\t\t\t}"
  }
]