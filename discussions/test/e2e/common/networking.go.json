[
  {
    "id" : "cb7d5858-e682-45ab-9cab-29bf1f026e61",
    "prId" : 96460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96460#pullrequestreview-530139696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65971b8d-cc1f-4439-8c4e-22cc4749d797",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "right but there's another instance of outdated \"disruptive\" comment above this",
        "createdAt" : "2020-11-13T15:07:45Z",
        "updatedAt" : "2020-11-13T16:08:27Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      }
    ],
    "commit" : "19cf272b377409cb1376406934e53e4639c20b1b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +129,133 @@\n\t\t// [Disruptive] because it conflicts with tests that call CheckSCTPModuleLoadedOnNodes\n\t\tginkgo.It(\"should function for intra-pod communication: sctp [LinuxOnly][Feature:SCTPConnectivity][Disruptive]\", func() {\n\t\t\tconfig := e2enetwork.NewNetworkingTestConfig(f, e2enetwork.EnableSCTP)\n\t\t\tcheckPodToPodConnectivity(config, \"sctp\", e2enetwork.EndpointSCTPPort)"
  },
  {
    "id" : "4ee458fc-fc41-4aba-b758-d8fb2417a944",
    "prId" : 93837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93837#pullrequestreview-466135294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f353dfdf-7946-4092-b564-68abd162b1b7",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "... note, this first 'shot' doesn't change the test semantics, but it allows us to separate the test output between successful nodes , and potentially problematic ones, meaning its very natural to browse the diagnostic results.",
        "createdAt" : "2020-08-12T17:41:04Z",
        "updatedAt" : "2020-09-03T01:50:24Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "81219ca9d2524176708c28ed34fdb750abc7bdab",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\t\tfailedPodsByHost := map[string][]*v1.Pod{}\n\t\t\t// First time, we'll quickly try all pods, breadth first.\n\t\t\tfor _, endpointPod := range config.EndpointPods {\n\t\t\t\tframework.Logf(\"Breadth first check of %v on host %v...\", endpointPod.Status.PodIP, endpointPod.Status.HostIP)\n\t\t\t\tif err := config.DialFromTestContainer(protocol, endpointPod.Status.PodIP, port, 1, 0, sets.NewString(endpointPod.Name)); err != nil {"
  },
  {
    "id" : "115d95f3-bdce-4588-9529-132aa1451dab",
    "prId" : 93837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93837#pullrequestreview-466136039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bd43e28-98a3-42f6-b6d6-a86aebff8f27",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "this struct is aggregated later, so that the end resulting test , all errors are printed out together, and ratio  of polls that failed is available , so that you can clearly know wether a cluster is in catastrophic state or wether there's just a few problematic nodes",
        "createdAt" : "2020-08-12T17:42:09Z",
        "updatedAt" : "2020-09-03T01:50:24Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "81219ca9d2524176708c28ed34fdb750abc7bdab",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +44,48 @@\t\t\t\t}\n\t\t\t}\n\t\t\terrors := []error{}\n\t\t\t// Second time, we pass through pods more carefully...\n\t\t\tframework.Logf(\"Going to retry %v out of %v pods....\", len(failedPodsByHost), len(config.EndpointPods))"
  },
  {
    "id" : "2bb75b6b-ec91-41d3-a5fe-722a18d3ec2d",
    "prId" : 93837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93837#pullrequestreview-466142271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b405a170-9ddf-4024-a0fd-c8d609c25661",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "if *one* node is down, all the pods from that node will be shown together.",
        "createdAt" : "2020-08-12T17:49:16Z",
        "updatedAt" : "2020-09-03T01:50:24Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "20ac24db-17c1-4fcc-99d1-954c365bfb69",
        "parentId" : "b405a170-9ddf-4024-a0fd-c8d609c25661",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "(imo) this isn't fundamentally changing the tests because, there is no order guarantee in the conformance definition.  that said, if we want it randomly ordered by pod, i can still do that explicitly.  \r\n\r\nNote that the default is going to be polling like 80 times for a 6 node cluster (nodes^2 + 30) , so this test is *highly stable* in terms of retries, so the ordering isn't a sensitive thing at all. ",
        "createdAt" : "2020-08-12T17:50:47Z",
        "updatedAt" : "2020-09-03T01:50:24Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "81219ca9d2524176708c28ed34fdb750abc7bdab",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +47,51 @@\t\t\t// Second time, we pass through pods more carefully...\n\t\t\tframework.Logf(\"Going to retry %v out of %v pods....\", len(failedPodsByHost), len(config.EndpointPods))\n\t\t\tfor host, failedPods := range failedPodsByHost {\n\t\t\t\tframework.Logf(\"Doublechecking %v pods in host %v which werent seen the first time.\", len(failedPods), host)\n\t\t\t\tfor _, endpointPod := range failedPods {"
  },
  {
    "id" : "5dc19abc-4827-4431-887a-c9266fa34816",
    "prId" : 93837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93837#pullrequestreview-481428285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edda37ec-013d-4b92-a90c-3ee9242a8c1e",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "This log message seems duplicated with line 55 to explain what error happens on each DialFromTestContainer() call.",
        "createdAt" : "2020-09-02T23:37:04Z",
        "updatedAt" : "2020-09-03T01:50:24Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "3d8c0cd1-258c-483d-8108-4477050ec15c",
        "parentId" : "edda37ec-013d-4b92-a90c-3ee9242a8c1e",
        "authorId" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "body" : "👍 ",
        "createdAt" : "2020-09-03T01:50:30Z",
        "updatedAt" : "2020-09-03T01:50:31Z",
        "lastEditedBy" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "81219ca9d2524176708c28ed34fdb750abc7bdab",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +63,67 @@\t\t\t\tframework.Logf(\"pod polling failure summary:\")\n\t\t\t\tfor _, e := range errors {\n\t\t\t\t\tframework.Logf(\"Collected error: %v\", e)\n\t\t\t\t}\n\t\t\t\tframework.Failf(\"failed,  %v out of %v connections failed\", len(errors), len(config.EndpointPods))"
  },
  {
    "id" : "f7036a77-37d1-42fa-b743-f9bef45ea48a",
    "prId" : 78731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78731#pullrequestreview-259544093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43ebc397-c9df-4a70-b388-7b707e40446d",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "I think I am OK with this change now. One lingering question. Changing to not use hostNetwork is a substantial change to these tests. Should we be updating the Release: meta data here to include 1.16, because we are making a substantial change to the test? The reality is that the previous versions of the tests were not really even testing what they said they were testing. But I still think that we probably should list both - the docs say:\r\n> Release: indicates the Kubernetes release that the test was added to the conformance test suite. If the test was modified in subsequent releases then those releases should be included as well (comma separated)\r\n\r\n@timothysc @spiffxp do you agree we should update the Release to \"v1.9, v1.16\" here?\r\n",
        "createdAt" : "2019-07-09T14:32:59Z",
        "updatedAt" : "2019-11-26T14:42:36Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      }
    ],
    "commit" : "e465e1089d102e112a677dbe2270b67a91db6618",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\t/*\n\t\t\tRelease : v1.9, v1.18\n\t\t\tTestname: Networking, intra pod http\n\t\t\tDescription: Create a hostexec pod that is capable of curl to netcat commands. Create a test Pod that will act as a webserver front end exposing ports 8080 for tcp and 8081 for udp. The netserver service proxies are created on specified number of nodes.\n\t\t\tThe kubectl exec on the webserver container MUST reach a http port on the each of service proxy endpoints in the cluster and the request MUST be successful. Container will execute curl command to reach the service port within specified max retry limit and MUST result in reporting unique hostnames."
  },
  {
    "id" : "083362c5-3036-416e-be0c-9cc9daa4e978",
    "prId" : 73204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73204#pullrequestreview-198087497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why is this LinuxOnly?",
        "createdAt" : "2019-01-24T06:26:37Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0c558b56-ffcf-4a54-bc2d-3f05e6b53e61",
        "parentId" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "These tests are spawning pods with HostNetwork enabled, which is unsuported on Windows, so they won't be able to start on Windows. Additionally, we're adding Windows-equivalent tests, which just spawns the pods without the HostNetwork set[ 1]. They are currently passing.\r\n\r\n[1] https://github.com/kubernetes/kubernetes/pull/71468",
        "createdAt" : "2019-01-24T12:08:07Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "e05cf9b4-61ed-41fc-8bd4-450017759ba5",
        "parentId" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@bclau let's add a note in the description. say `This test is marked LinuxOnly since HostNetwork is not supported on other platforms like Windows`?",
        "createdAt" : "2019-01-24T12:19:12Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "e5e09798-e973-4510-b3d7-45380ef9a582",
        "parentId" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Done.",
        "createdAt" : "2019-01-24T15:17:40Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "80ec68c6-fdf6-44d4-8507-133757824074",
        "parentId" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Please see #69525\r\n\r\nI'm concerned about changes to networking tests without review of SIG Network. We can mark this LinuxOnly for now, but I wouldn't assume that running without host networking does what the test intended",
        "createdAt" : "2019-01-30T03:25:15Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7ce60e87-9456-4aac-862f-113de628ce08",
        "parentId" : "2e025e47-2341-4f4d-90cf-d264ca78190e",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "For the time being, that PR you've mentioned is shelved in favor of another PR: https://github.com/kubernetes/kubernetes/pull/71468\r\n\r\nThe PR I mentioned adds a commit [0] which adds the same networking tests in question but spawning the pods without HostNetworking and leaving the original tests' behaviour unchanged.\r\n\r\nIdeally, we wouldn't have to have separate tests for the same thing, but until an agreement is reached, I think it should be acceptable.\r\n\r\nAnd fwiw, those tests added in the mentioned PR are passing when using Windows Server 2019 with the 3 types of networking solutions I've tried recently: azure-vnet-cni, flannel l2bridge, flannel overlay.\r\n\r\n[0] https://github.com/kubernetes/kubernetes/pull/71468/commits/d0ff2f4564bc3757903ce0578a0fbab8c51e9202",
        "createdAt" : "2019-01-30T13:54:55Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa08878f8cb1d077135b7b19d63c6acbaf4c42",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\t\tThis test is marked LinuxOnly since HostNetwork is not supported on other platforms like Windows.\n\t\t*/\n\t\tframework.ConformanceIt(\"should function for intra-pod communication: http [LinuxOnly] [NodeConformance]\", func() {\n\t\t\tconfig := framework.NewCoreNetworkingTestConfig(f)\n\t\t\tfor _, endpointPod := range config.EndpointPods {"
  }
]