[
  {
    "id" : "4895eb75-324c-427e-8edf-4927b90bd7a5",
    "prId" : 96551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96551#pullrequestreview-530331395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15171bba-dcd8-4b01-93a6-99e3f23539f8",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "keeping it as a regular test for now. Also added `[NodeConformance]` so it will run during the PR validation",
        "createdAt" : "2020-11-13T19:04:01Z",
        "updatedAt" : "2020-11-13T19:54:45Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "3af0ab440aec36fad41729e3d585c8404717591e",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\tThe runtimeclasses resource must support create, get, list, watch, update, patch, delete, and deletecollection.\n\t*/\n\tginkgo.It(\" [NodeConformance] should support RuntimeClasses API operations\", func() {\n\t\t// Setup\n\t\trcVersion := \"v1\""
  },
  {
    "id" : "1673dd99-c990-4824-b388-a2351b54d6e9",
    "prId" : 96551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96551#pullrequestreview-530492687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f8750fd-950c-4aae-be39-e0626804e751",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "as long as the handler is opaque to the conformance test and we do not drive any behavior implied to any specific handler, i am fine having this in conformance.  can we keep a note in the test that makes it clear that we should _never_ test a particular handler under conformance?",
        "createdAt" : "2020-11-13T19:47:15Z",
        "updatedAt" : "2020-11-13T19:54:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "bec17645-6c86-4384-a439-00016bb9d050",
        "parentId" : "4f8750fd-950c-4aae-be39-e0626804e751",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "added the comment",
        "createdAt" : "2020-11-13T19:55:04Z",
        "updatedAt" : "2020-11-13T19:55:04Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "4463b073-0cb3-4a1f-875f-6971710ec272",
        "parentId" : "4f8750fd-950c-4aae-be39-e0626804e751",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "this looks fine, but also note that there isn't any requirement that handlers be unique across runtime classes.",
        "createdAt" : "2020-11-14T00:18:59Z",
        "updatedAt" : "2020-11-14T00:35:10Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "3af0ab440aec36fad41729e3d585c8404717591e",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\t//\n\t\t// All CRUD operations in this test are limited to the objects with the label test=f.UniqueName\n\t\trc := runtimeclasstest.NewRuntimeClass(f.UniqueName+\"-handler\", f.UniqueName+\"-conformance-runtime-class\")\n\t\trc.SetLabels(map[string]string{\"test\": f.UniqueName})\n\t\trc2 := runtimeclasstest.NewRuntimeClass(f.UniqueName+\"-handler2\", f.UniqueName+\"-conformance-runtime-class2\")"
  }
]