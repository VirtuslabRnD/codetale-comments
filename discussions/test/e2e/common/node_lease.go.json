[
  {
    "id" : "88898b32-b9cb-47c7-b61e-5927dbd0c379",
    "prId" : 84998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84998#pullrequestreview-315351254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6965402-5d7a-4de8-9d69-4180ae327d1a",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Should this be a conformance test?",
        "createdAt" : "2019-11-08T21:33:04Z",
        "updatedAt" : "2019-11-12T08:12:10Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "efea11be-3eae-44ca-a577-e67a592cb895",
        "parentId" : "e6965402-5d7a-4de8-9d69-4180ae327d1a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "We don't create conformance test from scratch.\r\nAt some point it probably should be, but we need to create it as is and after proving its stability promote it to conformance.",
        "createdAt" : "2019-11-12T08:10:16Z",
        "updatedAt" : "2019-11-12T08:12:10Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07200a0764271af5fa9199305089e79475c409e5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\t})\n\n\t\tginkgo.It(\"should have OwnerReferences set\", func() {\n\t\t\tleaseClient := f.ClientSet.CoordinationV1().Leases(v1.NamespaceNodeLease)\n\t\t\tvar ("
  },
  {
    "id" : "4a993e03-c639-4eb8-a04f-ffef57b4e6bc",
    "prId" : 75206,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75206#pullrequestreview-213048420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "931b4aa2-879d-4be9-93b6-5ad8e78b9549",
        "parentId" : null,
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "Why do we need `2*leaseDuration` here? I think `leaseDuration` is enough?",
        "createdAt" : "2019-03-11T19:22:20Z",
        "updatedAt" : "2019-03-11T19:26:41Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      },
      {
        "id" : "1d59516c-be63-4757-aae5-4796279fad09",
        "parentId" : "931b4aa2-879d-4be9-93b6-5ad8e78b9549",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "to ensure the kubelet is no longer updating the Node object *on* a `leaseDuration` interval, we wait it to be unchanged for significantly longer",
        "createdAt" : "2019-03-11T19:42:04Z",
        "updatedAt" : "2019-03-11T19:42:05Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "460e0e5f-c431-4da7-9964-4c57bb2ef525",
        "parentId" : "931b4aa2-879d-4be9-93b6-5ad8e78b9549",
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "ACK",
        "createdAt" : "2019-03-11T19:48:45Z",
        "updatedAt" : "2019-03-11T19:48:45Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b0099785e70712d8dee215e089726d1c248e0d3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +112,116 @@\t\t\t\tswitch {\n\t\t\t\tcase currentHeartbeatTime == lastHeartbeatTime:\n\t\t\t\t\tif currentObserved.Sub(lastObserved) > 2*leaseDuration {\n\t\t\t\t\t\t// heartbeat hasn't changed while watching for at least 2*leaseDuration, success!\n\t\t\t\t\t\tframework.Logf(\"node status heartbeat is unchanged for %s, was waiting for at least %s, success!\", currentObserved.Sub(lastObserved), 2*leaseDuration)"
  },
  {
    "id" : "03e4b752-8ed3-4741-9cdf-68337c7dd3ca",
    "prId" : 69753,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69753#pullrequestreview-168960178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da09d783-4cb8-4fb2-831f-898ad4f9777a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think we have some existing utility functions written for this. Maybe try searching something for `WaitForNodeToBeReady`...",
        "createdAt" : "2018-10-26T18:38:20Z",
        "updatedAt" : "2018-11-07T19:59:54Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5a0a1bbf-7f2d-4ee8-88c9-08060d6e3aba",
        "parentId" : "da09d783-4cb8-4fb2-831f-898ad4f9777a",
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "The util function is handy. But here we need to get the heartbeat time in order to compare with the next heartbeat time, and check the heartbeat time difference.",
        "createdAt" : "2018-10-26T19:10:15Z",
        "updatedAt" : "2018-11-07T19:59:54Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "98fc4a107a8e6da008669b2792044a154f4a75a7",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +83,87 @@\n\t\tIt(\"the kubelet should report node status infrequently\", func() {\n\t\t\tBy(\"wait until node is ready\")\n\t\t\tframework.WaitForNodeToBeReady(f.ClientSet, nodeName, 5*time.Minute)\n"
  }
]