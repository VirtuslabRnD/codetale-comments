[
  {
    "id" : "87e0dc60-17d6-4a27-b3a2-de3aa5f6e303",
    "prId" : 93459,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93459#pullrequestreview-460227927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e25b214b-607c-4d54-95af-872584461462",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Isn't there the possibility that the kubelet has already updated the pod's ready condition back to true here?",
        "createdAt" : "2020-07-27T17:47:01Z",
        "updatedAt" : "2020-11-06T19:29:07Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "f25b2899-c728-4fdb-be8e-72620ede0b14",
        "parentId" : "e25b214b-607c-4d54-95af-872584461462",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "I might be wrong, but from my understand the response from the API server (in this case `podStatusUpdate`) is basically the same as the request. If that 's true then it should be fine to do this, otherwise I'll remove the checks after the update (so the endpoint is hit)",
        "createdAt" : "2020-07-29T04:22:37Z",
        "updatedAt" : "2020-11-06T19:29:07Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      },
      {
        "id" : "968f40ed-c670-41d4-bd4f-eb4a486c4c13",
        "parentId" : "e25b214b-607c-4d54-95af-872584461462",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Ah, I misread the code, and thought we were doing a separate retrieval",
        "createdAt" : "2020-08-03T17:53:39Z",
        "updatedAt" : "2020-11-06T19:29:07Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f4527956947007cbe50bd2fd0817df888f9d42",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +1003,1007 @@\t\tframework.ExpectNoError(err, \"failed to update PodStatus of Pod %s in namespace %s\", testPodName, testNamespaceName)\n\n\t\tginkgo.By(\"check the Pod again to ensure its Ready conditions are False\")\n\t\tpodStatusFieldPatchCount = 0\n\t\tpodStatusFieldPatchCountTotal = 2"
  },
  {
    "id" : "039219fc-d5fb-4430-98d6-32c5255ffd15",
    "prId" : 93086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93086#pullrequestreview-451036139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94a27a52-f0f1-42e9-8381-070cc56d745a",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "It seems difficult to say this test is stable to become conformance test according to the testgrid result.\r\nhttps://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-e2e-gci-gce/1281513716512198658 is an example.\r\n\r\n/cc @oomichi",
        "createdAt" : "2020-07-17T22:06:29Z",
        "updatedAt" : "2020-07-17T22:06:29Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "feb54045-7a2f-47df-bddd-9a92aa3bbf25",
        "parentId" : "94a27a52-f0f1-42e9-8381-070cc56d745a",
        "authorId" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "body" : "Looking at a couple recent fails here:\r\n\r\n<img width=\"870\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31331/87846516-9a1fc380-c924-11ea-87fe-fc278086370d.png\">\r\n\r\n<img width=\"730\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31331/87846555-d5ba8d80-c924-11ea-900f-5006351ede43.png\">\r\n\r\nWill look into this next week.",
        "createdAt" : "2020-07-18T06:31:27Z",
        "updatedAt" : "2020-07-18T06:31:27Z",
        "lastEditedBy" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "tags" : [
        ]
      }
    ],
    "commit" : "44cd9d3cfe74ceb5f61c0129957637ebf9dfb507",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +839,843 @@\t\tThe set of pods is deleted and MUST NOT show up when listed by its label selector.\n\t*/\n\tframework.ConformanceIt(\"should delete a collection of pods\", func() {\n\t\tpodTestNames := []string{\"test-pod-1\", \"test-pod-2\", \"test-pod-3\"}\n"
  },
  {
    "id" : "244c0628-268c-4d98-af00-bef595843105",
    "prId" : 92479,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92479#pullrequestreview-441164209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7f776f-894b-4733-8d8d-a48dde24c0e2",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "FWIW I think this is a good pattern to follow for looking for a level-driven result instead of edge-driven",
        "createdAt" : "2020-07-01T20:11:12Z",
        "updatedAt" : "2020-07-01T21:05:28Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcd7d08616592d6af4adab303dc3483d66b7a95e",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +858,862 @@\t\t// wait as required for all 3 pods to be found\n\t\tginkgo.By(\"waiting for all 3 pods to be located\")\n\t\terr := wait.PollImmediate(podRetryPeriod, podRetryTimeout, checkPodListQuantity(f, \"type=Testing\", 3))\n\t\tframework.ExpectNoError(err, \"3 pods not found\")\n"
  },
  {
    "id" : "336aefa9-0ea7-4df1-809f-ef6c7b0ea9d4",
    "prId" : 90942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90942#pullrequestreview-454626333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40b1c0f3-ba2f-4916-833a-4475c79f8e2d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This test is flaking. See https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/93398/pull-kubernetes-e2e-gce-ubuntu-containerd/1286493826562658304/ as an example",
        "createdAt" : "2020-07-24T04:16:56Z",
        "updatedAt" : "2020-07-24T04:16:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "642bed3c6c116891c98171f2a321f0c0f0afe2e5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +877,881 @@\t})\n\n\tginkgo.It(\"should run through the lifecycle of Pods and PodStatus\", func() {\n\t\tpodResource := schema.GroupVersionResource{Group: \"\", Version: \"v1\", Resource: \"pods\"}\n\t\ttestNamespaceName := f.Namespace.Name"
  },
  {
    "id" : "9f5dca36-831e-4004-9852-175b5d301f54",
    "prId" : 85671,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85671#pullrequestreview-324153120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e248eb50-8343-4cbe-bb03-593d3d3120b4",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Please keep a blank line for the readability.",
        "createdAt" : "2019-11-28T08:00:30Z",
        "updatedAt" : "2019-11-28T10:06:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "d015600f-ba47-4857-aca1-219868ee5156",
        "parentId" : "e248eb50-8343-4cbe-bb03-593d3d3120b4",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "Sure",
        "createdAt" : "2019-11-28T09:29:43Z",
        "updatedAt" : "2019-11-28T10:06:02Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ac2783bc8ab71d18f48e2b4847eece62490fab",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +837,841 @@\t\t// Sleep for 10 seconds.\n\t\ttime.Sleep(maxReadyStatusUpdateTolerance)\n\t\tframework.ExpectEqual(podClient.PodIsReady(podName), false, \"Expect pod's Ready condition to be false with only one condition in readinessGates equal to True\")\n\n\t\tginkgo.By(fmt.Sprintf(\"patching pod status with condition %q to true\", readinessGate2))"
  },
  {
    "id" : "ad3ea860-b51f-4e34-bb5d-c8e32a0b1509",
    "prId" : 75952,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75952#pullrequestreview-226210727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aafc6fef-504b-4d0e-aac2-3db16061dba2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Why can't you just use status.RestartCount below and push a portion of this logic below?  This seems unnecessary. ",
        "createdAt" : "2019-04-12T17:17:54Z",
        "updatedAt" : "2019-04-12T17:17:57Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "40537aa3-38e6-4176-98b5-672b6a38a9b3",
        "parentId" : "aafc6fef-504b-4d0e-aac2-3db16061dba2",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "So, this function basically measures the amount of time that passes between the Nth-1 run and the Nth run. For that, need 4 bits of information:\r\n\r\n- RestartCount for the Nth-1 run and RestartCount for the Nth run. We need that information in order to detect when the RestartCount is incremented, and thus, we know that the Pod restarted.\r\n- the moment in which the Nth-1 run ended. This block of code is getting that exact information (+ the Nth-1 RestartCount)\r\n- the moment in which the Nth run started. This information we can get once the RestartCount incremented, as you can see below.\r\n\r\nIndeed, we can get the last 2 pieces of information when the RestartCount increments and the Pod's status is either Running or Terminated, but once the state transition Terminated -> Waiting occurs, it overwrites the LastTerminationState, needed information which is then lost.\r\n\r\nI know that the code is basically duplicated, but in this manner we get all the information required without any risk of losing any. The loss of information was basically the source of the flakiness.",
        "createdAt" : "2019-04-12T17:50:59Z",
        "updatedAt" : "2019-04-12T17:51:45Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e44961e47d36378710a16f606f41236cf70d989a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +137,141 @@\t\t\t\tpreviousFinishedAt = status.LastTerminationState.Terminated.FinishedAt.Time\n\t\t\t}\n\t\t\tpreviousRestartCount = status.RestartCount\n\t\t}\n"
  },
  {
    "id" : "e75a3ee1-b7d9-4e37-aa1d-0c4359fe6cd1",
    "prId" : 73064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73064#pullrequestreview-205592099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4042cf23-e676-42aa-9c90-03d86d08f101",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also add a `default:` case so the list can proceed if the channel is full",
        "createdAt" : "2019-02-20T06:25:44Z",
        "updatedAt" : "2019-02-27T05:55:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "12943ce1ac389e1ef52500e2cd2fda78c683fb1b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +205,209 @@\t\t\t\t\tselect {\n\t\t\t\t\tcase listCompleted <- true:\n\t\t\t\t\t\tframework.Logf(\"observed the pod list\")\n\t\t\t\t\t\treturn podList, err\n\t\t\t\t\tdefault:"
  },
  {
    "id" : "e56937cf-54f1-47b1-8579-d0e1a3731e7f",
    "prId" : 31829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4cc23f5-b051-4f88-ab8b-46120e54baab",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "This doesn't work, does it?\n\nThis gets the logs N times, but the logs will always be the same because it's a `RestartNever` container.\n\nWe need to actually _run_ the pod/container multiple distinct times in order for environment changes to take effect.\n",
        "createdAt" : "2016-08-31T22:58:17Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "0a637ab0-8e2e-46b0-94c8-d869b57d78d1",
        "parentId" : "d4cc23f5-b051-4f88-ab8b-46120e54baab",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Huh...it actually would work because `MatchContainerOutput` creates and delete the pod each time. \n",
        "createdAt" : "2016-08-31T23:05:34Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ff63711a-e21c-4b5a-b66b-6bef464b00bf",
        "parentId" : "d4cc23f5-b051-4f88-ab8b-46120e54baab",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yeah, I left it that way in the interest of making fewer changes, but I can split the MatchContainerOutput function if you'd prefer...\n",
        "createdAt" : "2016-08-31T23:11:16Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "e37a7524-5d91-495e-9425-87945dfa0da8",
        "parentId" : "d4cc23f5-b051-4f88-ab8b-46120e54baab",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Whoops, I was confused. Seeing that it's a podspec, not reference to a running pod, passed into that function makes it all make sense.\n\nThanks for explaining!\n",
        "createdAt" : "2016-08-31T23:18:58Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9a2c07c2007531d35af33931af114fd90540af3",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +447,451 @@\t\t\t\"FOOSERVICE_PORT_8765_TCP_ADDR=\",\n\t\t}\n\t\tframework.ExpectNoErrorWithRetries(func() error {\n\t\t\treturn f.MatchContainerOutput(pod, containerName, expectedVars, ContainSubstring)\n\t\t}, maxRetries, \"Container should have service environment variables set\")"
  },
  {
    "id" : "7789295b-9359-4644-ad32-8b680b165665",
    "prId" : 31829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75070a72-75fc-4a3b-ab49-60d27e4eda69",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: Add comment to explain why retries are needed.\n",
        "createdAt" : "2016-08-31T23:06:32Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "004d96cb-e83f-4446-84ba-460872a66cb7",
        "parentId" : "75070a72-75fc-4a3b-ab49-60d27e4eda69",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Done.\n",
        "createdAt" : "2016-08-31T23:13:32Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9a2c07c2007531d35af33931af114fd90540af3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +437,441 @@\t\t// It's possible for the Pod to be created before the Kubelet is updated with the new\n\t\t// service. In that case, we just retry.\n\t\tconst maxRetries = 3\n\t\texpectedVars := []string{\n\t\t\t\"FOOSERVICE_SERVICE_HOST=\","
  }
]