[
  {
    "id" : "871b4816-716c-480a-afd7-1635b9da9f23",
    "prId" : 102866,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102866#pullrequestreview-684631384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cfdfd62-edac-4400-8643-b4b404f76d46",
        "parentId" : null,
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "I seem to recall that skipping based on feature flags is not allowed for conformance tests.\r\n\r\ncc @chewong @dims @derekwaynecarr \r\n\r\nif I'm wrong lgtm",
        "createdAt" : "2021-06-15T23:30:32Z",
        "updatedAt" : "2021-06-15T23:30:32Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      },
      {
        "id" : "88900729-9b35-45ce-b4fd-294fd4085462",
        "parentId" : "6cfdfd62-edac-4400-8643-b4b404f76d46",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "skipping is not allowed under any circumstances for `[Conformance]` but this is not a conformance test (which would use `framework.ConformanceIt`).\r\n\r\nEDIT: it's not allowed so as to ensure the same set of tests pass on every cluster, doing otherwise would sort of defeat the point of testing common behavior ü§∑‚Äç‚ôÇÔ∏è \r\n\r\nI don't think `[NodeConformance]` has ever become part of a program like cncf/k8s-conformance, so what is allowed is up to SIG Node.",
        "createdAt" : "2021-06-16T00:36:00Z",
        "updatedAt" : "2021-06-16T00:37:39Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "62ed0254-6881-4061-8b85-f2b3e9aee5b7",
        "parentId" : "6cfdfd62-edac-4400-8643-b4b404f76d46",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Asked on the Conformance slack channel and it seems NodeConformance is targeted at CRI conformance, not Kubernetes conformance, so this should be okay. https://kubernetes.slack.com/archives/C78F00H99/p1623803503028500",
        "createdAt" : "2021-06-16T00:53:38Z",
        "updatedAt" : "2021-06-16T00:53:38Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff0f83b4b2d5f3741a046885aa1c3940e98ec8a3",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t// The ExecProbeTimeout feature gate exists to allow backwards-compatibility with pre-1.20 cluster behaviors, where readiness probe timeouts were ignored\n\t\t// If ExecProbeTimeout feature gate is disabled, timeout enforcement for exec readiness probe is disabled, so we should skip this test\n\t\te2eskipper.SkipUnlessExecProbeTimeoutEnabled()\n\n\t\tcmd := []string{\"/bin/sh\", \"-c\", \"sleep 600\"}"
  },
  {
    "id" : "accf7921-7370-4c86-86f8-a4a7fce05683",
    "prId" : 100200,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100200#pullrequestreview-630449744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a736765-22aa-4afb-a170-3c08c5ef5e68",
        "parentId" : null,
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "@andrewsykim @SergeyKanzhelev are these comment changes an improvement?",
        "createdAt" : "2021-04-07T18:56:51Z",
        "updatedAt" : "2021-04-07T19:38:42Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a43067915c7aaccbbdeddd6552028959a8a88c2",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +253,257 @@\t*/\n\tginkgo.It(\"should be restarted with a failing exec liveness probe that took longer than the timeout\", func() {\n\t\t// The ExecProbeTimeout feature gate exists to allow backwards-compatibility with pre-1.20 cluster behaviors using dockershim, where livenessProbe timeouts were ignored\n\t\t// If ExecProbeTimeout feature gate is disabled on a dockershim cluster, timeout enforcement for exec livenessProbes is disabled, but a failing liveness probe MUST still trigger a restart\n\t\t// Note ExecProbeTimeout=false is not recommended for non-dockershim clusters (e.g., containerd), and this test will fail if run against such a configuration"
  },
  {
    "id" : "32e8241e-8c51-4942-b728-62bfbe6024ee",
    "prId" : 100200,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100200#pullrequestreview-630698208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8de7482-cba6-4e1a-be80-98f8ebbd5ebd",
        "parentId" : null,
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "@andrewsykim You asked why we aren't running this test in an ExecProbeTimeout=false scenario only. The main reason is that not all ExecProbeTimeout=false scenarios will pass this new test (e.g., containerd). I think the value of this new test is to guarantee that a failing probe fails *no matter what*. Since we have tests that validate timeouts fire as expected, this test should in practice be a reproduction of that pod restart condition (pod restarted due to timeout), but this additional test coverage will ensure that certain pre-1.20 behaviors (containerd, for example) will be caught right away in E2E tests if they resurface for any weird reason.",
        "createdAt" : "2021-04-07T22:17:25Z",
        "updatedAt" : "2021-04-07T22:17:25Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a43067915c7aaccbbdeddd6552028959a8a88c2",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +252,256 @@\t\tDescription: A Pod is created with liveness probe with a Exec action on the Pod. If the liveness probe call does not return within the timeout specified, liveness probe MUST restart the Pod. When ExecProbeTimeout feature gate is disabled and cluster is using dockershim, the timeout is ignored BUT a failing liveness probe MUST restart the Pod.\n\t*/\n\tginkgo.It(\"should be restarted with a failing exec liveness probe that took longer than the timeout\", func() {\n\t\t// The ExecProbeTimeout feature gate exists to allow backwards-compatibility with pre-1.20 cluster behaviors using dockershim, where livenessProbe timeouts were ignored\n\t\t// If ExecProbeTimeout feature gate is disabled on a dockershim cluster, timeout enforcement for exec livenessProbes is disabled, but a failing liveness probe MUST still trigger a restart"
  },
  {
    "id" : "7e58e387-676e-4f8d-8907-aa9649e6d6bf",
    "prId" : 100050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100050#pullrequestreview-609247002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c793a78c-a999-4e12-9fe5-a94936e9878f",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "should the same apply for the next test?",
        "createdAt" : "2021-03-10T17:55:15Z",
        "updatedAt" : "2021-03-10T23:03:16Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "e09622c9-9895-41d0-8a97-d4591bf9d0d1",
        "parentId" : "c793a78c-a999-4e12-9fe5-a94936e9878f",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "reading https://github.com/kubernetes/kubernetes/pull/94115\r\nmy assumption is - yes",
        "createdAt" : "2021-03-10T18:01:40Z",
        "updatedAt" : "2021-03-10T23:03:16Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "ff8dffec-0101-47c5-b7e3-2a77c552b958",
        "parentId" : "c793a78c-a999-4e12-9fe5-a94936e9878f",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "updated to add the tag to the next test too.",
        "createdAt" : "2021-03-10T23:03:34Z",
        "updatedAt" : "2021-03-10T23:03:34Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9facaec82546809d7b867fb06c01f9a87e67d77",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\tDescription: A Pod is created with liveness probe with a Exec action on the Pod. If the liveness probe call does not return within the timeout specified, liveness probe MUST restart the Pod.\n\t*/\n\tginkgo.It(\"should be restarted with an exec liveness probe with timeout [MinimumKubeletVersion:1.20] [NodeConformance]\", func() {\n\t\t// The ExecProbeTimeout feature gate exists to allow backwards-compatibility with pre-1.20 cluster behaviors, where livenessProbe timeouts were ignored\n\t\t// If ExecProbeTimeout feature gate is disabled, timeout enforcement for exec livenessProbes is disabled, so we should skip this test"
  },
  {
    "id" : "0839c1a3-659d-4472-922d-0573cc94ea0e",
    "prId" : 100036,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100036#pullrequestreview-608170475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6db31f8-602d-4e04-8493-b9b59dd088ff",
        "parentId" : null,
        "authorId" : "07ccbf11-fca4-40b2-afdb-22b32c6be709",
        "body" : "Does it also make sense to remove NodeConformance?",
        "createdAt" : "2021-03-09T22:28:40Z",
        "updatedAt" : "2021-03-09T22:28:40Z",
        "lastEditedBy" : "07ccbf11-fca4-40b2-afdb-22b32c6be709",
        "tags" : [
        ]
      },
      {
        "id" : "54ed907f-b133-43b3-825a-5afd90caa0d3",
        "parentId" : "c6db31f8-602d-4e04-8493-b9b59dd088ff",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@chewong nope. this is still useful in `NodeConformance`.",
        "createdAt" : "2021-03-09T22:31:21Z",
        "updatedAt" : "2021-03-09T22:31:21Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "5482c9d4-019d-4b95-9067-b16652da8568",
        "parentId" : "c6db31f8-602d-4e04-8493-b9b59dd088ff",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "we are also checking the flag now. so should work fine.",
        "createdAt" : "2021-03-09T22:31:57Z",
        "updatedAt" : "2021-03-09T22:31:58Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c76fe9c14a6914e292dcde4c48bce082f0c94d7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\tDescription: A Pod is created with liveness probe with a Exec action on the Pod. If the liveness probe call does not return within the timeout specified, liveness probe MUST restart the Pod.\n\t*/\n\tginkgo.It(\"should be restarted with an exec liveness probe with timeout [NodeConformance]\", func() {\n\t\t// The ExecProbeTimeout feature gate exists to allow backwards-compatibility with pre-1.20 cluster behaviors, where livenessProbe timeouts were ignored\n\t\t// If ExecProbeTimeout feature gate is disabled, timeout enforcement for exec livenessProbes is disabled, so we should skip this test"
  },
  {
    "id" : "adeddd5b-a8a0-4d4e-961f-411cbcb03ea5",
    "prId" : 99998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99998#pullrequestreview-646017151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34327443-1bcf-4ec4-be3a-fe8ebf87b815",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "```suggestion\r\n\t\t\tInitialDelaySeconds: 0,\r\n\t\t\t// PeriodSeconds is set to a large value to make sure that the first execution of readiness probe\r\n\t\t\t// will happen before the first period passed.\r\n```",
        "createdAt" : "2021-04-27T15:34:38Z",
        "updatedAt" : "2021-04-28T05:07:18Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "bac1e7d9-da51-4913-9d6a-2402b5f17680",
        "parentId" : "34327443-1bcf-4ec4-be3a-fe8ebf87b815",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "nit: just add a comment to highlight the intent",
        "createdAt" : "2021-04-27T15:35:09Z",
        "updatedAt" : "2021-04-28T05:07:18Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcd582030fdb1e3a5ac74c7b01a99fbfd9069a68",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +402,406 @@\t\treadinessProbe := &v1.Probe{\n\t\t\tHandler:             execHandler([]string{\"/bin/cat\", \"/tmp/health\"}),\n\t\t\tInitialDelaySeconds: 0,\n\t\t\t// PeriodSeconds is set to a large value to make sure that the first execution of readiness probe\n\t\t\t// will happen before the first period passed."
  },
  {
    "id" : "c31cfc80-7c86-4cd6-9e17-d0b008bab9e3",
    "prId" : 99375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99375#pullrequestreview-606886798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c32d2285-b22d-4e8c-b6d2-38a870768ab6",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "There's no equivalent for StartupProbes so I'll add another test similar to the one above tomorrow.\r\n\r\nThe node-alpha job seems to be broken and isn't running any tests. :/ I'm not sure if the annotation above is enough, I based the selector on the job config: https://github.com/kubernetes/test-infra/blob/6d5f7e5d77c83aa14d299bbd228bca77bdf0ecb1/config/jobs/kubernetes/sig-node/sig-node-presubmit.yaml#L194",
        "createdAt" : "2021-03-05T01:51:27Z",
        "updatedAt" : "2021-03-12T00:41:17Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "323b414d-a3e2-4a1e-a511-22952d01b48d",
        "parentId" : "c32d2285-b22d-4e8c-b6d2-38a870768ab6",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "https://github.com/kubernetes/kubernetes/issues/98220 is the problem. I will see if I can run the e2es locally using the workaround.",
        "createdAt" : "2021-03-05T23:39:48Z",
        "updatedAt" : "2021-03-12T00:41:17Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "213f0ffd-7109-4317-ba5a-afa28c1a87c1",
        "parentId" : "c32d2285-b22d-4e8c-b6d2-38a870768ab6",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "For this to work you will need to enable `--runtime-config=api/all=true` on the job... but it will NOT work for Node tests.",
        "createdAt" : "2021-03-06T01:03:24Z",
        "updatedAt" : "2021-03-12T00:41:17Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "5a3f0f91-abcb-481c-93be-4278dd46777a",
        "parentId" : "c32d2285-b22d-4e8c-b6d2-38a870768ab6",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "@knabben I changed the annotation to run these as part of the pull-kubernetes-e2e-gce-alpha-features job which has this set. PR to add it: https://github.com/kubernetes/test-infra/pull/21242",
        "createdAt" : "2021-03-09T02:45:23Z",
        "updatedAt" : "2021-03-12T00:41:17Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "7df1259d091322f2817b2db243f76470f61a3a7e",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +447,451 @@\n\t\t// 10s delay + 10s period + 5s grace period = 25s < 30s << pod-level timeout 500\n\t\tRunLivenessTest(f, pod, 1, time.Second*30)\n\t})\n"
  },
  {
    "id" : "8f1e2ae5-f3b5-4c83-a9ac-467e4890b6cf",
    "prId" : 98376,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98376#pullrequestreview-605701818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ac32102-fb30-40ae-a523-77bad3188c59",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "nit: this is a suuuper long line. these are slightly more difficult to review on github.com. consider splitting this up.",
        "createdAt" : "2021-03-06T00:38:07Z",
        "updatedAt" : "2021-03-06T13:43:53Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "b203fb0565607f37f907cc89e2d257e93ae4e9b8",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +414,418 @@\t\t}\n\t\tif readyIn > 5*time.Second {\n\t\t\tframework.Failf(\"Pod became ready in %v, more than 5s after startupProbe succeeded. It means that the delay readiness probes were not initiated immediately after startup finished.\", readyIn)\n\t\t}\n\t})"
  }
]