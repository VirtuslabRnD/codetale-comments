[
  {
    "id" : "0e62467c-3e81-417f-bbac-5b7926196996",
    "prId" : 88923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88923#pullrequestreview-378148411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "963d4537-96a2-415a-b024-f671227ef830",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Confirmed this 4 parts are last ones what `Name:` instead of `Testname:` under test/e2e with `$ grep \"\\sName: \" * -R | grep -v '\"'`",
        "createdAt" : "2020-03-19T22:56:15Z",
        "updatedAt" : "2020-03-19T22:57:01Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "40d80195f261a76d43cb5c6ff17f758cd3947dae",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +190,194 @@\t\t\t/*\n\t\t\t\tRelease: v1.15\n\t\t\t\tTestname: Container Runtime, TerminationMessagePath, non-root user and non-default path\n\t\t\t\tDescription: Create a pod with a container to run it as a non-root user with a custom TerminationMessagePath set. Pod redirects the output to the provided path successfully. When the container is terminated, the termination message MUST match the expected output logged in the provided custom path.\n\t\t\t\t[LinuxOnly]: Tagged LinuxOnly due to use of 'uid' and unable to mount files in Windows Containers."
  },
  {
    "id" : "c6eac7f5-a167-4a55-8c57-627ae4481c7d",
    "prId" : 88531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88531#pullrequestreview-366078136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc580dac-031a-46b3-bf1f-ef5e080a2ffd",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i'd add an annotation here explaining the error in more detail:\r\n`...err, \"could not read the Docker configuration file\")`",
        "createdAt" : "2020-02-27T23:46:14Z",
        "updatedAt" : "2020-02-27T23:46:15Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a8183d2620ce37299eda3eefd8f6715e8ea6b7a",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +299,303 @@\t\t\t\t\tif framework.TestContext.DockerConfigFile != \"\" {\n\t\t\t\t\t\tcontents, err := ioutil.ReadFile(framework.TestContext.DockerConfigFile)\n\t\t\t\t\t\tframework.ExpectNoError(err)\n\t\t\t\t\t\tauth = string(contents)\n\t\t\t\t\t}"
  },
  {
    "id" : "49d03c0f-5d0b-472a-8445-fbe4966de579",
    "prId" : 87680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87680#pullrequestreview-351297261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5700032-3ac8-4ab1-822a-36fe3de874a5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this requires changing the conformance.txt file as well... see the verify CI job failure",
        "createdAt" : "2020-01-30T19:28:43Z",
        "updatedAt" : "2020-01-30T19:28:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "00fc5069-7808-48ec-a181-71e30c6a40a7",
        "parentId" : "a5700032-3ac8-4ab1-822a-36fe3de874a5",
        "authorId" : "ed080bdf-4bd8-475e-92b0-4b84327afe2e",
        "body" : "thank you for your comment. sorry, I can't find error messages about conformance.txt in https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/87680/pull-kubernetes-verify/1222686544863694851 could you please show me the point?",
        "createdAt" : "2020-01-31T05:15:21Z",
        "updatedAt" : "2020-01-31T05:15:21Z",
        "lastEditedBy" : "ed080bdf-4bd8-475e-92b0-4b84327afe2e",
        "tags" : [
        ]
      },
      {
        "id" : "0fc2e39d-6077-400e-9697-d9cbdc8b7de5",
        "parentId" : "a5700032-3ac8-4ab1-822a-36fe3de874a5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sorry, I was wrong... the description isn't pulled into test/conformance/testdata/conformance.txt",
        "createdAt" : "2020-01-31T05:18:07Z",
        "updatedAt" : "2020-01-31T05:18:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d9f9fca89ffe041ba78b8c5d4fc4783a6bea1b4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +42,46 @@\t\t\t\tRelease : v1.13\n\t\t\t\tTestname: Container Runtime, Restart Policy, Pod Phases\n\t\t\t\tDescription: If the restart policy is set to 'Always', Pod MUST be restarted when terminated, If restart policy is 'OnFailure', Pod MUST be started only if it is terminated with non-zero exit code. If the restart policy is 'Never', Pod MUST never be restarted. All these three test cases MUST verify the restart counts accordingly.\n\t\t\t*/\n\t\t\tframework.ConformanceIt(\"should run with the expected status [NodeConformance]\", func() {"
  },
  {
    "id" : "b6685136-f695-4b05-a167-a72780550737",
    "prId" : 77840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77840#pullrequestreview-239334833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec7f2cb9-e528-4fcb-8c64-45ee952f26c9",
        "parentId" : null,
        "authorId" : "2ff9f571-9905-4e07-aa90-b34fb1ffc5ea",
        "body" : "may be have separate const for invalidtag",
        "createdAt" : "2019-05-13T23:39:14Z",
        "updatedAt" : "2019-05-31T09:05:59Z",
        "lastEditedBy" : "2ff9f571-9905-4e07-aa90-b34fb1ffc5ea",
        "tags" : [
        ]
      },
      {
        "id" : "9069799a-c78f-469e-87d9-7eea517b018e",
        "parentId" : "ec7f2cb9-e528-4fcb-8c64-45ee952f26c9",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Yeah, `const` might be another good option or rather `k8s.gcr.io/invalid-image:invalid-tag\"` as it was. I was preferring to use `imageutils` for all valid and invalid aspects. As reviewer, if you insist to use const, we can update.",
        "createdAt" : "2019-05-20T07:42:40Z",
        "updatedAt" : "2019-05-31T09:05:59Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "3377737af29473f500849b5aefedf8c93c3eefeb",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +360,364 @@\n\t\t\tginkgo.It(\"should not be able to pull non-existing image from gcr.io [NodeConformance]\", func() {\n\t\t\t\timage := imageutils.GetE2EImage(imageutils.Invalid)\n\t\t\t\timagePullTest(image, false, v1.PodPending, true, false)\n\t\t\t})"
  },
  {
    "id" : "7e61a8f4-b91e-4812-8fc2-0f4ce3a15873",
    "prId" : 75134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75134#pullrequestreview-226956230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We need to add the description above to why this is LinuxOnly.",
        "createdAt" : "2019-03-26T19:44:32Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "3c533599-915f-41fb-bf3a-d28fac89d42b",
        "parentId" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We are debating on if this really should be LinuxOnly, because we'd expect this behavior to hold true across OS distros.  Right now the limitation is `Cannot mount files in Windows Containers.`.  Ideally we would like to outline if there is another way to get around this problem. ",
        "createdAt" : "2019-03-26T19:49:15Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "34adb617-b753-4f41-b1b6-0a18f03190aa",
        "parentId" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Or at least link to a detailed document that outlines the details of the failure. ",
        "createdAt" : "2019-03-26T19:55:14Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "9e86c9f5-46ed-468d-a442-5a8f73c63017",
        "parentId" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "That document is being worked on:\r\n\r\n    https://github.com/kubernetes/community/pull/3521\r\n    https://github.com/kubernetes/community/pull/3522\r\n\r\nEven if we're expecting this behaviour to be upheld across OS distros, at this very moment it is not working on Windows, and should still include ``[LinuxOnly]`` until it is.\r\n\r\nAdding a test that fails on Windows without that tag will cause all the Windows testgrid dashboard to go red, and everyone will have to include this test in their skip regex. The common practice for all of us is to exclude anything that is ``[LinuxOnly]``, which is why that tag was introduced in the first place.",
        "createdAt" : "2019-03-28T11:19:04Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "e9dbfab5-db88-455c-a2c8-77fb3736488e",
        "parentId" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "[LinuxOnly] comment added into Conformance doc.",
        "createdAt" : "2019-03-28T13:19:23Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "db4a29d6-30b9-44ff-84cf-4af9161308bf",
        "parentId" : "8a85e636-7e4d-484a-8c24-bf0c31436d48",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This test is expected to be LinuxOnly. I'm pretty sure I reviewed all tests currently tagged with LinuxOnly",
        "createdAt" : "2019-04-16T02:05:16Z",
        "updatedAt" : "2019-04-16T02:05:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "82822f10e1b073fca0556094b6a26da74bf0a293",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\t\t\tRelease: v1.15\n\t\t\t\tName: Container Runtime, TerminationMessage, from container's log output of failing container\n\t\t\t\tDescription: Create a pod with an container. Container's output is recorded in log and container exits with an error. When container is terminated, termination message MUST match the expected output recorded from container's log.\n\t\t\t\t[LinuxOnly]: Cannot mount files in Windows Containers.\n\t\t\t*/"
  },
  {
    "id" : "0d6a5f41-4477-4a0c-ad87-474058369c34",
    "prId" : 75134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75134#pullrequestreview-220011956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa19420c-f250-4b75-962c-7a1ec2f15b43",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Same comment on LinuxOnly. ",
        "createdAt" : "2019-03-26T19:49:42Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "448e10cd-1429-4aef-a965-fcf62a9d1a6e",
        "parentId" : "fa19420c-f250-4b75-962c-7a1ec2f15b43",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Done.\r\n",
        "createdAt" : "2019-03-28T13:19:02Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "82822f10e1b073fca0556094b6a26da74bf0a293",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\t\t\tDescription: Create a pod with an container. Container's output is recorded in log and container exits successfully without an error. When container is terminated, terminationMessage MUST have no content as container succeed.\n\t\t\t\t[LinuxOnly]: Cannot mount files in Windows Containers.\n\t\t\t*/\n\t\t\tframework.ConformanceIt(\"should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance]\", func() {\n\t\t\t\tcontainer := v1.Container{"
  },
  {
    "id" : "c6b2c5d8-f8d7-45af-9cb8-d1615e543795",
    "prId" : 75134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75134#pullrequestreview-222341738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b3ad325-c919-4028-be60-700255b6c55f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Same comment on LinuxOnly.",
        "createdAt" : "2019-03-26T19:56:52Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "45687a57-fa23-4e8d-84a3-e6d9d798bbbe",
        "parentId" : "1b3ad325-c919-4028-be60-700255b6c55f",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Thanks for reviewing @timothysc. [LinuxOnly] comment is added into Conformance doc.\r\n",
        "createdAt" : "2019-03-28T13:18:50Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "0f15251c-49e8-4241-b9a1-d1a7b213be03",
        "parentId" : "1b3ad325-c919-4028-be60-700255b6c55f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Regarding whether files cannot be mounted, I think this points to that we need to enable the concept of TerminationMessage on Windows without relying on the specific mechanism (for instance, by mounting a directory in the kubelet on windows and potentially having a different path).   Can you link to a roadmap entry / issue to fix this in the future here?",
        "createdAt" : "2019-04-02T19:41:38Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "622db135-8ba6-4c6f-a924-84aca5affe26",
        "parentId" : "1b3ad325-c919-4028-be60-700255b6c55f",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "This has been added into KEP.\r\nhttps://github.com/kubernetes/enhancements/blob/master/keps/sig-windows/20190103-windows-node-support.md\r\n\r\nAssociated PR:  https://github.com/kubernetes/community/pull/3521",
        "createdAt" : "2019-04-03T11:49:02Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "c4ee9ab1-a886-4ad3-a279-b15abba27208",
        "parentId" : "1b3ad325-c919-4028-be60-700255b6c55f",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "> \r\n> \r\n> Regarding whether files cannot be mounted, I think this points to that we need to enable the concept of TerminationMessage on Windows without relying on the specific mechanism (for instance, by mounting a directory in the kubelet on windows and potentially having a different path). Can you link to a roadmap entry / issue to fix this in the future here?\r\n\r\nIndeed, this will eventually have to be supported on Windows, and we will be able to address this once we have containerd support in. \r\n\r\nRight now, there isn't a feasible way to do it. Indeed, we could instead mount a folder, but then there would be a UX issue: as a User, how do you know where to write the Termination Message? On Linux, it's a bit more straight-forward and obvious, you have a file: ``/dev/termination-file``, you know that that's the right file. But if you mount a folder instead...  ¯\\_(ツ)_/¯  You don't see any file there, so there will be some initial confusion about it. Then, after researching and learning what you can do instead, you'll still have to inspect that Pod's configuration to see what the path would be.\r\n\r\nPlus, I think there might be some other issues, if multiple volumes would be mounted on the same base path (let's say ``/dev`` would be mounted for the Termination Message file, then another volume would have to be mounted in ``/dev/some-folder``, not sure how this will be handled).",
        "createdAt" : "2019-04-03T17:11:43Z",
        "updatedAt" : "2019-04-15T11:09:49Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "82822f10e1b073fca0556094b6a26da74bf0a293",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +233,237 @@\t\t\t\tDescription: Create a pod with an container. Container's output is recorded in a file and the container exits successfully without an error. When container is terminated, terminationMessage MUST match with the content from file.\n\t\t\t\t[LinuxOnly]: Cannot mount files in Windows Containers.\n\t\t\t*/\n\t\t\tframework.ConformanceIt(\"should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance]\", func() {\n\t\t\t\tcontainer := v1.Container{"
  },
  {
    "id" : "72b91ac9-8517-43ac-9ba3-9ed98f0dc2a7",
    "prId" : 75101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75101#pullrequestreview-219960430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df8262e1-895b-41eb-8bdf-7275df679080",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Why exactly is this LinuxOnly?  SecurityContext?  \r\n\r\n",
        "createdAt" : "2019-03-11T16:26:18Z",
        "updatedAt" : "2019-04-04T01:45:48Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e545991f-b184-477f-b172-f616540190e0",
        "parentId" : "df8262e1-895b-41eb-8bdf-7275df679080",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Yes, here SecurityContext and RunAsUser are the key reason of [LinuxOnly] tag.",
        "createdAt" : "2019-03-12T06:14:52Z",
        "updatedAt" : "2019-04-04T01:45:48Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "4a290272-8a5e-4a91-9e2b-b4aa70bb6abe",
        "parentId" : "df8262e1-895b-41eb-8bdf-7275df679080",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Correct, plus it is expecting the /dev/termination-custom-log file to be mounted in the container, which cannot be done ATM with Windows Containers.",
        "createdAt" : "2019-03-28T11:21:10Z",
        "updatedAt" : "2019-04-04T01:45:48Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "295f43b1fa50f8a07c9dae33f8848e2938a8c738",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +181,185 @@\t\t\t\t[LinuxOnly]: Tagged LinuxOnly due to use of 'uid' and unable to mount files in Windows Containers.\n\t\t\t*/\n\t\t\tframework.ConformanceIt(\"should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance]\", func() {\n\t\t\t\tcontainer := v1.Container{\n\t\t\t\t\tImage:                  framework.BusyBoxImage,"
  },
  {
    "id" : "1210577d-05f0-4645-bf5d-9042b3a68315",
    "prId" : 74655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74655#pullrequestreview-209327119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87cd83a3-aa8e-4b7a-9090-3f54a5217c87",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "isn't this the same as `framework.NodeOSDistroIs(\"windows\")`, which avoids passing the flag?",
        "createdAt" : "2019-02-28T20:53:36Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "16b8c0b1-bd36-4c71-80ae-f423cd06f982",
        "parentId" : "87cd83a3-aa8e-4b7a-9090-3f54a5217c87",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Given that the specified image needs to be aligned with the command, I like windowsImage as a parameter. I could also imagine an enum, for call site readability, but that would introduce the need to check for other values, so I don't really recommend it.",
        "createdAt" : "2019-02-28T21:45:32Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5f2ec4b6ab25e67712dc29a6035e32b55688bed",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +233,237 @@\t\t\timagePullTest := func(image string, hasSecret bool, expectedPhase v1.PodPhase, expectedPullStatus bool, windowsImage bool) {\n\t\t\t\tcommand := []string{\"/bin/sh\", \"-c\", \"while true; do sleep 1; done\"}\n\t\t\t\tif windowsImage {\n\t\t\t\t\t// -t: Ping the specified host until stopped.\n\t\t\t\t\tcommand = []string{\"ping\", \"-t\", \"localhost\"}"
  },
  {
    "id" : "d1161a4d-86c1-44c0-be6f-190a912e6067",
    "prId" : 74655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74655#pullrequestreview-209666139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "833311db-73a7-411d-bc20-2fd6c2757c38",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "aren't we supposed to test this on Windows too?\r\nEDIT: looks like no. negative test.\r\n\r\n",
        "createdAt" : "2019-03-01T16:20:40Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5f2ec4b6ab25e67712dc29a6035e32b55688bed",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +365,369 @@\t\t\t})\n\n\t\t\tIt(\"should not be able to pull from private registry without secret [NodeConformance]\", func() {\n\t\t\t\timage := \"gcr.io/authenticated-image-pulling/alpine:3.7\"\n\t\t\t\timagePullTest(image, false, v1.PodPending, true, false)"
  },
  {
    "id" : "53a3577c-2a65-4c58-adcc-e2f65ba2a61e",
    "prId" : 74655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74655#pullrequestreview-210873518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "FWIW I get why this is changed to true, but busybox/windows test?  This specific test is a little weird and needs better description IMO.  I don't understand why this is windows specific, or why the logic exists above.",
        "createdAt" : "2019-03-05T14:22:41Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "441235d2-fb56-4da3-9406-cd3c57a8eb6e",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the busybox here that is pulled will end up being Windows based (manifest list), though a comment is not present about this in the code.\r\n\r\n@bclau might as well use an official Microsoft image here?\r\n",
        "createdAt" : "2019-03-05T15:46:18Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "5da1881c-724d-4f5f-bbdd-910cafd062a9",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "why not push the same `v1` image we now have on GCR to the docker hub account....?\r\n",
        "createdAt" : "2019-03-05T16:02:05Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2ae2adc1-0034-471c-b1a4-965b484e233a",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Indeed, the pulled image is manifest list with only Windows images. This is the Windows equivalent test of \"should be able to pull image from docker hub [LinuxOnly] [NodeConformance]\"",
        "createdAt" : "2019-03-05T16:14:36Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "1f0c6e72-d866-4c81-b76f-91724bca7eae",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@PatrickLang let's wait for this conversation to be resolved before we wrap up this PR",
        "createdAt" : "2019-03-05T17:15:43Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "b7039ae6-e498-4615-a512-6f430c8cdd68",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "@neolit123  I understand that using the official msft image is better and we can moving forward but we are using busybox in many tests so far. we don't want to make all these changes now 2 days before code freeze. are you ok with that? we can file an issue and fix for 1.15",
        "createdAt" : "2019-03-05T18:25:42Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      },
      {
        "id" : "ed0e02fb-473c-4e9e-a350-2e98c1edbe3e",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@michmike i don't want to block anything.\r\n@timothysc questioned the usage of busybox, so i proposed solutions.\r\n\r\nalso i'm not an approver for `/test` so the final call is not mine.\r\n\r\n",
        "createdAt" : "2019-03-05T18:30:33Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "89d2e6a8-9352-40dd-b717-14d027f83fc2",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "i agree with your proposal, i was just asking to postpone it a little bit :)",
        "createdAt" : "2019-03-05T19:06:55Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      },
      {
        "id" : "d91258b4-2bfd-4ae1-bc92-839ea382557c",
        "parentId" : "9492118e-755d-44a6-ac0f-16d58bad0a7b",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Just put a //TODO: and open an issue to resolve in 1.15 and let's call it a day.  \r\nbecause it's weird. ",
        "createdAt" : "2019-03-05T19:23:31Z",
        "updatedAt" : "2019-03-05T22:40:17Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5f2ec4b6ab25e67712dc29a6035e32b55688bed",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +362,366 @@\t\t\t\t// TODO(claudiub): Switch to nanoserver image manifest list.\n\t\t\t\timage := \"e2eteam/busybox:1.29\"\n\t\t\t\timagePullTest(image, false, v1.PodRunning, false, true)\n\t\t\t})\n"
  },
  {
    "id" : "5d640dc6-930d-46bc-bfed-f10360916494",
    "prId" : 73204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73204#pullrequestreview-197515900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73b4976e-32a8-48ea-a347-d089444937ae",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Since these don't seem inherently LinuxOnly, please add TODO comments to make it possible to also run them on Windows nodes",
        "createdAt" : "2019-01-28T23:00:50Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "4ad5742a-677e-47f9-a6f2-69d8ff2c5f73",
        "parentId" : "73b4976e-32a8-48ea-a347-d089444937ae",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Done, but this is the only test which is currently being Windows-ified (https://github.com/kubernetes/kubernetes/pull/72777), so I only added the TODO to this test.\r\n\r\nAll the other tests will require additional features or tests or both to be added in the future (e.g.: The non-root tests will be addressed when the RunAsUsername feature will be merged, but it will require new tests).",
        "createdAt" : "2019-01-29T12:02:11Z",
        "updatedAt" : "2019-02-04T12:24:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa08878f8cb1d077135b7b19d63c6acbaf4c42",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdescription: \"should be able to pull image from gcr.io [LinuxOnly]\",\n\t\t\t\t\timage:       \"gcr.io/google-containers/debian-base:0.4.0\",\n\t\t\t\t\tphase:       v1.PodRunning,"
  }
]