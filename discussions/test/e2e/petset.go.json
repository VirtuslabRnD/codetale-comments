[
  {
    "id" : "b6c6e4ea-20b8-48ee-ad0f-3601187b1aae",
    "prId" : 37243,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37243#pullrequestreview-9792555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04dc8332-aad3-4531-84e7-d8783874295a",
        "parentId" : null,
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "References \"pet\", but I can see other places in this file where that is the case as well. Do we want to change the wording in a follow-up later on?",
        "createdAt" : "2016-11-22T19:37:01Z",
        "updatedAt" : "2016-11-22T23:37:18Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      },
      {
        "id" : "89a941bf-4cc4-4238-a09a-76212853cb48",
        "parentId" : "04dc8332-aad3-4531-84e7-d8783874295a",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Yeah I can change this in this PR, in a separate commit",
        "createdAt" : "2016-11-22T22:48:32Z",
        "updatedAt" : "2016-11-22T23:37:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "00301ad9-43c0-4900-9708-7784614d67c4",
        "parentId" : "04dc8332-aad3-4531-84e7-d8783874295a",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Changed my mind, this will be a follow-up PR",
        "createdAt" : "2016-11-22T23:29:41Z",
        "updatedAt" : "2016-11-22T23:37:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "997bd2ce-b5d2-445b-8fcf-13bc1fa03eef",
        "parentId" : "04dc8332-aad3-4531-84e7-d8783874295a",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "See https://github.com/kubernetes/kubernetes/pull/37330",
        "createdAt" : "2016-11-23T01:33:50Z",
        "updatedAt" : "2016-11-23T01:33:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0744033d8c2a3bf3d46dbdefd5ae665bf10eca69",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +141,145 @@\t\t})\n\n\t\tIt(\"should handle healthy pet restarts during scale\", func() {\n\t\t\tBy(\"Creating statefulset \" + psName + \" in namespace \" + ns)\n\t\t\tps.Spec.Replicas = 2"
  },
  {
    "id" : "4c59828e-478b-47d0-8f28-85f7f18e4c3c",
    "prId" : 35739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35739#pullrequestreview-6503491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c02c5f14-e9db-4720-9de6-47a3d3c8c246",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "so we're not renaming the part after the \"/\"?\n",
        "createdAt" : "2016-10-28T00:59:00Z",
        "updatedAt" : "2016-10-31T19:49:23Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "a7b73369-cf3c-487d-bcb3-f2aca5eef5d1",
        "parentId" : "c02c5f14-e9db-4720-9de6-47a3d3c8c246",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "I think we can let it be for now and think about it when we're updating the examples?\n",
        "createdAt" : "2016-10-31T18:58:12Z",
        "updatedAt" : "2016-10-31T19:49:23Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      },
      {
        "id" : "b2796280-8a4a-4ed8-a1dd-b5a7c584b2b9",
        "parentId" : "c02c5f14-e9db-4720-9de6-47a3d3c8c246",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm ok with letting it be inverted just for this PR.\n",
        "createdAt" : "2016-10-31T19:02:24Z",
        "updatedAt" : "2016-10-31T19:49:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c3792a4db912547aa4c93c7acee25ebb431e1a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +891,895 @@\t\t\tNamespace: ns,\n\t\t\tAnnotations: map[string]string{\n\t\t\t\t\"pod.alpha.kubernetes.io/initialized\": \"false\",\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "508437f6-041d-4d36-86d6-6d09c0888bd9",
    "prId" : 35158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35158#pullrequestreview-4992802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eb1a222-c939-4452-a28d-7269e1200c60",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "this error is useless, it's the infamous \"timed out waiting for condition\". Maybe pipe the actual error reported from db or something? Or say timed out trying to read back value foo from replicated mysql slave...\n",
        "createdAt" : "2016-10-20T00:39:00Z",
        "updatedAt" : "2016-10-20T03:21:13Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "6193d06f-844c-4402-912e-323cc0807ea3",
        "parentId" : "4eb1a222-c939-4452-a28d-7269e1200c60",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "Fixed by changing `pollReadWithTimeout` to return easier to read errors.\n",
        "createdAt" : "2016-10-20T01:49:38Z",
        "updatedAt" : "2016-10-20T03:21:13Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbc282c5b8a17325ddbeeb9d8f9ecc0283174b0d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +227,231 @@\n\t\t\tBy(\"Reading value under foo from member with index 2\")\n\t\t\tif err := pollReadWithTimeout(pet, 2, \"foo\", \"bar\"); err != nil {\n\t\t\t\tframework.Failf(\"%v\", err)\n\t\t\t}"
  },
  {
    "id" : "da9a433f-c04a-4c74-9f78-d3e2ff26d766",
    "prId" : 34454,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34454#pullrequestreview-3775822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "981c10c0-8ec6-49b0-99aa-84d4dfb3234f",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "move the error check to right after it's returned \n",
        "createdAt" : "2016-10-11T22:14:26Z",
        "updatedAt" : "2016-11-21T09:46:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c09e969e082114b4e778e8e7a883a4ebdf84e51b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +345,349 @@\n\t\t\t})\n\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t})\n\t})"
  },
  {
    "id" : "5aba671a-ac3c-4d0f-b9e4-d7bf0bbbe599",
    "prId" : 32868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32868#pullrequestreview-2851479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed0db712-a314-4d7e-99fd-664dfac76fd8",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "can you please add one that does a scale up, scale down, scale up (without waiting for anything inbetween), and checks that we converge to the final replica count in order? (i.e going from 3->5, 5->2, 2->4 should not ever create pets 4,3 in that order)\n",
        "createdAt" : "2016-10-04T21:57:20Z",
        "updatedAt" : "2016-11-21T09:21:52Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "74945b3e-ad2b-4fc2-abe4-d9769966da07",
        "parentId" : "ed0db712-a314-4d7e-99fd-664dfac76fd8",
        "authorId" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "body" : "done\n",
        "createdAt" : "2016-10-05T06:20:02Z",
        "updatedAt" : "2016-11-21T09:21:52Z",
        "lastEditedBy" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "tags" : [
        ]
      }
    ],
    "commit" : "36d1af6145267ae924b5d0f53af9c263092020e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +278,282 @@\t\t\t\tif event.Type != watch.Deleted {\n\t\t\t\t\treturn false, nil\n\t\t\t\t}\n\t\t\t\tpod := event.Object.(*api.Pod)\n\t\t\t\tif pod.Name == expectedOrder[0] {"
  },
  {
    "id" : "2a62b81c-66f7-486f-9ff0-728d66fac0cb",
    "prId" : 32868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32868#pullrequestreview-9407447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d970710c-a668-4382-aafd-f9788b8fdae9",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "One more question: is 10s long enough?\n",
        "createdAt" : "2016-11-18T23:12:16Z",
        "updatedAt" : "2016-11-21T09:21:52Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "b940aba0-a54b-4f0b-b157-1c01cbbf24da",
        "parentId" : "d970710c-a668-4382-aafd-f9788b8fdae9",
        "authorId" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "body" : "10 second used across all stateful set tests to ensure that number of pods didnt change, i think this is more than enough for controller to see replica update and at least create new pod",
        "createdAt" : "2016-11-21T08:39:16Z",
        "updatedAt" : "2016-11-21T09:21:52Z",
        "lastEditedBy" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "tags" : [
        ]
      }
    ],
    "commit" : "36d1af6145267ae924b5d0f53af9c263092020e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +237,241 @@\t\t\tpst.waitForRunningAndNotReady(ps.Spec.Replicas, ps)\n\t\t\tpst.update(ps.Namespace, ps.Name, func(ps *apps.StatefulSet) { ps.Spec.Replicas = 3 })\n\t\t\tpst.confirmPetCount(1, ps, 10*time.Second)\n\n\t\t\tBy(\"Scaling up stateful set \" + psName + \" to 3 replicas and waiting until all of them will be running in namespace \" + ns)"
  },
  {
    "id" : "932d345d-7854-433b-b8cc-3e4177cc2347",
    "prId" : 31777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31777#pullrequestreview-110149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce13d32c-1d40-4f8d-a1c3-ca9b7a514755",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please describe what we expect to happen in a comment. This is going to race with the petset controller which deletes/recreates pods in parallel right? overall it might work out because of the polling, but feels sketchy. \n\nWe want to prove that in 2minutes the pod enteres failed, and gets recreatd by the petset controller. A more exact way to do this would be via watch (either use `watch.until` or setup your own watch like eg test/e2e/daemon_restart.go), you will get both a delete event, and a recreate for the new pet. \n\nmaybe its sufficient to just poll till the uid changes at least once?\n",
        "createdAt" : "2016-09-14T15:27:54Z",
        "updatedAt" : "2016-09-21T09:03:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0c920af6-b1dc-4941-a085-62be3b1046ab",
        "parentId" : "ce13d32c-1d40-4f8d-a1c3-ca9b7a514755",
        "authorId" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "body" : "Yes, the idea was to exit either because a pod was evicted or removed. But i see that it is potential case for a flake. Thanks for the suggestion, i will rework this part\n",
        "createdAt" : "2016-09-15T07:54:26Z",
        "updatedAt" : "2016-09-21T09:03:26Z",
        "lastEditedBy" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0981963d9433e75b37803c1be1b74bccdd7900d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +332,336 @@\t\t\t\t}\n\t\t\t\treturn true, nil\n\t\t\t}\n\t\t\tframework.Logf(\"Observed pet pod in namespace: %v, name: %v, uid: %v, status phase: %v. Waiting for petset controller to delete.\",\n\t\t\t\tpod.Namespace, pod.Name, pod.UID, pod.Status.Phase)"
  },
  {
    "id" : "82bd44a3-6fe5-4c39-b775-bca2f504c28b",
    "prId" : 31777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31777#pullrequestreview-790333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "238d140d-c890-4b0e-9457-0d4ee8632a55",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please log saying \"observed delete of pet with name blah uid blah\"\n",
        "createdAt" : "2016-09-20T16:47:58Z",
        "updatedAt" : "2016-09-21T09:03:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0981963d9433e75b37803c1be1b74bccdd7900d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +330,334 @@\t\t\t\tif initialPetPodUID == \"\" {\n\t\t\t\t\treturn false, nil\n\t\t\t\t}\n\t\t\t\treturn true, nil\n\t\t\t}"
  },
  {
    "id" : "acb7bcc9-9144-4b40-be9c-00627f12c206",
    "prId" : 31777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31777#pullrequestreview-2096640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9141164-d9aa-4c88-a9a9-c98a8dbb7051",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "vagratn == minikube? in that case, do the other petset tests also require similar treatment? \n",
        "createdAt" : "2016-09-28T17:21:30Z",
        "updatedAt" : "2016-09-28T17:21:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "76ba28b6-2ce8-4b82-a07a-83dba8018644",
        "parentId" : "d9141164-d9aa-4c88-a9a9-c98a8dbb7051",
        "authorId" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "body" : "Other tests are using persistent volumes and there was no dynamic storage provisioner for vagrant cluster. But i enabled hostpath provisioner (https://github.com/kubernetes/kubernetes/pull/32264) and now all petset tests should pass with 1 node vagrant cluster for sure.\n\nI will try them and submit PR.\n",
        "createdAt" : "2016-09-29T08:57:50Z",
        "updatedAt" : "2016-09-29T08:57:50Z",
        "lastEditedBy" : "7ab0c2e3-7a16-47e0-9ccf-0e1bbb697d37",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0981963d9433e75b37803c1be1b74bccdd7900d",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +263,267 @@\n\tBeforeEach(func() {\n\t\tframework.SkipUnlessProviderIs(\"gce\", \"vagrant\")\n\t\tBy(\"creating service \" + headlessSvcName + \" in namespace \" + f.Namespace.Name)\n\t\theadlessService := createServiceSpec(headlessSvcName, \"\", true, labels)"
  },
  {
    "id" : "6ba7f7c2-2315-470d-8b00-a218a32fd433",
    "prId" : 26559,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dafbec51-1fdc-4af4-aa68-eac29467cd24",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Can't this just be assigned above?\n",
        "createdAt" : "2016-06-01T16:17:20Z",
        "updatedAt" : "2016-06-01T16:17:20Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "a9a21fb1-0d99-49d3-a439-bae837ec08e7",
        "parentId" : "dafbec51-1fdc-4af4-aa68-eac29467cd24",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This seems to be a common pattern in tests to assing client in BeforeEach. I wanted to be consistent with other places, e.g.:\nhttps://github.com/kubernetes/kubernetes/blob/master/test/e2e/daemon_set.go#L85\nhttps://github.com/kubernetes/kubernetes/blob/master/test/e2e/kubectl.go#L179\n...\n(there are 19 such places)\n\nIf you think we should change that, can I send a separate PR to fix all of those in one, and for this one leave as is?\n",
        "createdAt" : "2016-06-01T16:27:13Z",
        "updatedAt" : "2016-06-01T16:27:13Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3637af97-bdb2-45cc-9070-eaae19e93c7c",
        "parentId" : "dafbec51-1fdc-4af4-aa68-eac29467cd24",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Yea. I didn't realize it was that wide spread.\n",
        "createdAt" : "2016-06-01T16:46:35Z",
        "updatedAt" : "2016-06-01T16:46:35Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ab3f1e1d5f6a7795ec0dbd50dfaa0298d1113c6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +63,67 @@\t\tframework.SkipUnlessProviderIs(\"gce\")\n\n\t\tc = f.Client\n\t\tns = f.Namespace.Name\n\t})"
  },
  {
    "id" : "8a2a2755-df96-40f0-ad71-693f1c689aa1",
    "prId" : 25848,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "670aa1f5-0fc5-4844-adf9-96e6001a3672",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "You'll want to add `framework.SkipUnlessProviderIs(\"gce\")` here.\n",
        "createdAt" : "2016-05-19T16:40:52Z",
        "updatedAt" : "2016-05-27T01:46:39Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "80890bb7-02b3-4fdb-9b42-18328f153426",
        "parentId" : "670aa1f5-0fc5-4844-adf9-96e6001a3672",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "added to beforeEach\n",
        "createdAt" : "2016-05-23T23:26:38Z",
        "updatedAt" : "2016-05-27T01:46:39Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d57575762b8da8d925db931675eda6bacd12c293",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +69,73 @@\t})\n\n\tframework.KubeDescribe(\"Basic PetSet functionality\", func() {\n\t\tpsName := \"pet\"\n\t\tlabels := map[string]string{"
  }
]