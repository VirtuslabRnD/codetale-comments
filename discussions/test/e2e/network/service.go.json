[
  {
    "id" : "41728c13-6519-416b-8d81-3136c657e87c",
    "prId" : 99202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99202#pullrequestreview-593555551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e3f1164-943f-4d3e-8ffc-4c2b65da684c",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Don't we want to use CreateSync() as you use in other places?",
        "createdAt" : "2021-02-18T16:04:27Z",
        "updatedAt" : "2021-02-18T16:04:27Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "32a7475e-5413-43b4-8a50-c06e3ad6785c",
        "parentId" : "3e3f1164-943f-4d3e-8ffc-4c2b65da684c",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I wanted to do that, but I need to change the function signature to pass the podClient() or the framework variable to call CreateSync() so I took the conservative option\r\n\r\n```\r\ntest/e2e/network/loadbalancer.go:               hostExec := launchHostExecPod(f.ClientSet, f.Namespace.Name, \"ilb-host-exec\")\r\ntest/e2e/network/service.go:    hostExecPod := launchHostExecPod(c, ns, \"verify-service-up-host-exec-pod\")\r\ntest/e2e/network/service.go:    hostExecPod := launchHostExecPod(c, ns, \"verify-service-down-host-exec-pod\")\r\ntest/e2e/network/service.go:            hostExec := launchHostExecPod(f.ClientSet, f.Namespace.Name, \"hostexec\")\r\ntest/e2e/network/service.go:// launchHostExecPod launches a hostexec pod in the given namespace and waits\r\ntest/e2e/network/service.go:func launchHostExecPod(client clientset.Interface, ns, name string) *v1.Pod {\r\n```\r\n\r\nwhatever do you think is better",
        "createdAt" : "2021-02-18T16:59:16Z",
        "updatedAt" : "2021-02-18T16:59:16Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "a6f140c8-37aa-426b-9dfe-b2e0bba6957f",
        "parentId" : "3e3f1164-943f-4d3e-8ffc-4c2b65da684c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - I'm fine with doing that now, and cleaning this up later.",
        "createdAt" : "2021-02-18T19:07:11Z",
        "updatedAt" : "2021-02-18T19:07:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d614c9c50c31d564d9407e734ff030eeaa76341",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2455,2459 @@\t_, err := c.CoreV1().Pods(ns).Create(context.TODO(), pod, metav1.CreateOptions{})\n\tframework.ExpectNoError(err, \"failed to create pod %s in namespace %s\", name, ns)\n\terr = e2epod.WaitTimeoutForPodReadyInNamespace(c, name, ns, framework.PodStartTimeout)\n\tframework.ExpectNoError(err)\n}"
  },
  {
    "id" : "c76cd0fa-c6ae-4429-8784-945208d54e97",
    "prId" : 98018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98018#pullrequestreview-577934000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a89e79de-ef98-4332-8eb0-6e1aa1c68ba0",
        "parentId" : null,
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "suggest move this  after create service(line 2976). use `defer` to confirm service will be removed whether processe failed after service  \r\ncreated. ",
        "createdAt" : "2021-01-14T13:03:38Z",
        "updatedAt" : "2021-03-01T23:06:52Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "2381c8f1-9e66-4dc8-a696-b0090695de7d",
        "parentId" : "a89e79de-ef98-4332-8eb0-6e1aa1c68ba0",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "After the test runs the e2e framework cleans up any resources especially those in the test namespace ",
        "createdAt" : "2021-01-21T20:06:58Z",
        "updatedAt" : "2021-03-01T23:06:52Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "469b01ed-fd35-4736-90ca-80036ad8a725",
        "parentId" : "a89e79de-ef98-4332-8eb0-6e1aa1c68ba0",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "which place? @heyste \r\n\r\nthis place?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/b3dd01da497f4f9f81ffb2ebf275ff08cbfebaa2/test/e2e/network/service.go#L744-L754",
        "createdAt" : "2021-01-28T02:05:47Z",
        "updatedAt" : "2021-03-01T23:06:52Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "d1377248-359d-4295-9727-7dd4f3423e3f",
        "parentId" : "a89e79de-ef98-4332-8eb0-6e1aa1c68ba0",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "leaving it for e2e framework clean is also ok. :)",
        "createdAt" : "2021-01-28T02:16:19Z",
        "updatedAt" : "2021-03-01T23:06:52Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e9c44f00e0ee74e4d2dde1c250e79983ea4a036",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +2393,2397 @@\t\tframework.Logf(\"Service %s patched\", testSvcName)\n\n\t\tginkgo.By(\"deleting the service\")\n\t\terr = cs.CoreV1().Services(ns).Delete(context.TODO(), testSvcName, metav1.DeleteOptions{})\n\t\tframework.ExpectNoError(err, \"failed to delete the Service. %v\", err)"
  },
  {
    "id" : "2f5622c0-4605-4291-bfb1-42e4a3286943",
    "prId" : 98018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98018#pullrequestreview-601268519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "588a2ff2-f560-4c00-a590-d5cc0017cd90",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "this looks funny :) `err` twice ",
        "createdAt" : "2021-03-01T23:32:13Z",
        "updatedAt" : "2021-03-01T23:32:13Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "a04e001b-f23d-403d-82c9-df8b9d429539",
        "parentId" : "588a2ff2-f560-4c00-a590-d5cc0017cd90",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "just a nit. no need to fix right now",
        "createdAt" : "2021-03-01T23:33:12Z",
        "updatedAt" : "2021-03-01T23:33:12Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e9c44f00e0ee74e4d2dde1c250e79983ea4a036",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +2282,2286 @@\t\t}\n\t\tlbStatusJSON, err := json.Marshal(lbStatus)\n\t\tframework.ExpectNoError(err, \"Failed to marshal JSON. %v\", err)\n\t\t_, err = svcClient.Patch(context.TODO(), testSvcName, types.MergePatchType,\n\t\t\t[]byte(`{\"metadata\":{\"annotations\":{\"patchedstatus\":\"true\"}},\"status\":{\"loadBalancer\":`+string(lbStatusJSON)+`}}`),"
  },
  {
    "id" : "a8391b53-7897-4dfa-8b31-229f98c134f8",
    "prId" : 96296,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96296#pullrequestreview-525214686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "726994c1-f613-40fa-8db0-52fcc61f6cf2",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "What is this? C? :slightly_smiling_face: ",
        "createdAt" : "2020-11-06T13:03:45Z",
        "updatedAt" : "2020-11-21T23:58:18Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "7bd87082-8651-4fab-abaf-a56ebc97dbab",
        "parentId" : "726994c1-f613-40fa-8db0-52fcc61f6cf2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I cherry picked the previous test, learning something new every day :)\r\n\r\nhttps://golang.org/doc/effective_go.html#commentary",
        "createdAt" : "2020-11-06T14:41:35Z",
        "updatedAt" : "2020-11-21T23:58:18Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e4642211ac6dc239b6ec2335f86e87696bdedf4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1180,1184 @@\t})\n\n\t/*\n\t\tCreate a ClusterIP service with an External IP that is not assigned to an interface.\n\t\tThe IP ranges here are reserved for documentation according to"
  },
  {
    "id" : "90bc6e42-87fd-4a9a-9586-558407f062ef",
    "prId" : 92163,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92163#pullrequestreview-438775331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "777fddd4-e3c1-4b86-bf03-edf99e533303",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Let's move this function to jig.go (make it method of jig the same way as GetEndpointNodes is.",
        "createdAt" : "2020-06-25T13:19:17Z",
        "updatedAt" : "2020-06-25T13:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0af4572b-8928-493a-81e6-82e518a0b633",
        "parentId" : "777fddd4-e3c1-4b86-bf03-edf99e533303",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "Currently we already have a similar method, i.e. `jig.GetEndpointNodesWithIP(corev1.NodeInernalIP)`ï¼Œit returns a map of node names -> list of internal IPs and would return empty list if no IP found.\r\n\r\nI put the function `getEndpointNodesWithInternalIP` here because I think this function would only be used here, and it returns a map of node names -> ip(rather than a list of IP) and it would return an error if no IP found.",
        "createdAt" : "2020-06-28T12:20:51Z",
        "updatedAt" : "2020-06-28T12:20:51Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b9f11c9a9524eddd3ffa3ece7c70d7da3ea4780",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +711,715 @@// getEndpointNodesWithInternalIP returns a map of nodenames:internal-ip on which the\n// endpoints of the Service are running.\nfunc getEndpointNodesWithInternalIP(jig *e2eservice.TestJig) (map[string]string, error) {\n\tnodesWithIPs, err := jig.GetEndpointNodesWithIP(v1.NodeInternalIP)\n\tif err != nil {"
  },
  {
    "id" : "0118477b-ee97-413c-98b5-15f6048cbe3c",
    "prId" : 91559,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91559#pullrequestreview-426563361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This in total with the previous for may cause timeouts in 5k-node tests, as we're effectively probing every single node in the cluster. Given you touch this already, maybe we should already add a condition that no more than N (=100?) are actually probed?",
        "createdAt" : "2020-06-02T13:32:06Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "cb0c4025-1f0c-4d0b-9d31-d2b4138ddae1",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "I think it was never the case, we're capping # nodes that we fetch in line 3257:\r\n```\r\n\t\tnodes, err := e2enode.GetBoundedReadySchedulableNodes(cs, e2eservice.MaxNodesForEndpointsTests)\r\n```\r\n\r\nBut, looking at the code again, I don't think that your code is correct. Neither the old one seems correct.\r\nTo be more precise, I think both incorrectly compute the endpointNodeMap. Because of the capping above, the `nodes` will contain a random subset of all nodes. Given that, it's likely (and almost certain in large cluster) that you will get a subset of nodes on which your service is not running. Then the endpointNodeMap will be empty, which won't make the test to fail, but it neither will work correctly. This has to be addressed \r\n",
        "createdAt" : "2020-06-02T15:43:39Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      },
      {
        "id" : "03932752-a911-4b39-b637-3b2e90e9cdff",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "Nice catch! I want to know if it is guranteed that the cluster always have a node with endpoint and a node without endpoint? If so, I guess we can make the `endpointNodeMap` from the endpoint node names returned by jig, and make the `noEndpointNodeMap` by iterating all nodes until we have selected no more than N nodes without endpoint? ",
        "createdAt" : "2020-06-02T18:41:23Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "31d137ba-582a-47e1-9856-edd5baa885d2",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "Yes, you can assume it's guaranteed. Moreover, we'll have only a single node with the endpoint, so as long as len(nodes) >=2 the code for computing `noEndpointNodeMap` is correct. Only the `endpointNodeMap` computation needs to be fixed and what you proposed makes sens (take it from endpointNodeMap)",
        "createdAt" : "2020-06-03T08:43:47Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      },
      {
        "id" : "71aa3a6c-dab6-4e74-9914-ab553633acd7",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "@mm4tt please check the latest commit",
        "createdAt" : "2020-06-03T11:16:34Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "ef19db34-1af2-47e9-a751-99091b30e5a8",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The fact that we were never capping number of nodes doesn't mean we shouldn't change that now (I know we were never capping it). But if we want to enable it at 5k-node clusters, we should cap it probably.",
        "createdAt" : "2020-06-04T10:40:34Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "ea0e2849-485f-47fb-8fd1-e890c2087c61",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "@wojtek-t if what @mm4tt said was right\r\n\r\n> we'll have only a single node with the endpoint\r\n\r\nthe number of nodes with endpoints is always one, and we get the list of nodes without endpoints by getting bounded nodes first:\r\n```go\r\nnodes, err := e2enode.GetBoundedReadySchedulableNodes(cs, e2eservice.MaxNodesForEndpointsTests /* 3 */)\r\n```\r\nthen filter out the node with endpoint:\r\n```go\r\n// it is assumed that there is only a single node with the endpoint\r\nfor _, n := range nodes.Items {\r\n    ips := e2enode.GetAddresses(&n, v1.NodeInternalIP)\r\n    if len(ips) < 1 {\r\n        framework.Failf(\"No internal ip found for node %s\", n.Name)\r\n    }\r\n    if _, ok := endpointNodeMap[n.Name]; !ok {\r\n        noEndpointNodeMap[n.Name] = ips[0]\r\n    }\r\n}\r\n```\r\nI guess the number of nodes is already capped?",
        "createdAt" : "2020-06-04T12:20:16Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "39942f1f-c80f-44a7-bd5c-238564fd9e89",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@mm4tt - where do you get it from that there is one node with endpoint? I can't really see any pod and/or endpoint being created in that test (I must be missing something...)",
        "createdAt" : "2020-06-04T12:39:28Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "30fd9424-d019-423b-80e6-7a572b52eac2",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Matt pointed me on this offline. So indeed doing that here doesn't make sense.\r\n\r\nBut it makes sense to do that for \"noEndpointMap\", because we will have those 5000 iterations there.",
        "createdAt" : "2020-06-05T07:55:40Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a259eb9e-24f6-4f41-a941-4406b8a2a1d1",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "currently we only iterate over `e2eservice.MaxNodesForEndpointsTests`, which is 3, nodes and filter out the node with endpoint to get `noEndpointMap`. I guess this is OK?\r\n\r\nthe 5000 iterations actually happens when we want to get a list of nodes with endpoint from node names: https://github.com/kubernetes/kubernetes/pull/91559/files#diff-cd7b1fed55944b797c43381ad94b421fR283-R289",
        "createdAt" : "2020-06-05T08:10:34Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "71b7a648-579c-4b04-b43b-e00e69416bbb",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "perhaps we can using label selector here? like\r\n```go\r\n\tnamesList := make([]string, 0, nodeNames.Len())\r\n\tfor name := range nodeNames {\r\n\t\tnamesList = append(namesList, name)\r\n\t}\r\n\treq, err := labels.NewRequirement(v1.LabelHostname, selection.In, namesList)\r\n\ts := labels.NewSelector()\r\n\tallNodes, err := j.Client.CoreV1().Nodes().List(ctx, metav1.ListOptions{\r\n\t\tLabelSelector: s.Add(*req).String(),\r\n\t})\r\n```",
        "createdAt" : "2020-06-05T08:12:12Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "4b584da7-344e-4a20-86e2-5093afe78580",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "@wojtek-t I have updated the code as described above, could you check it again?",
        "createdAt" : "2020-06-07T13:19:40Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "fb789de1-ab88-40ee-ba4f-9d043ccb06f1",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "added explicit comment there - with this you risk exceeding allowed length of URL params\r\n\r\nIt's fine to simply list *all* nodes.",
        "createdAt" : "2020-06-08T14:09:54Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "daba4ed4-788b-4b61-ba18-b6267d0a91c0",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "That seems fine now.\r\n\r\nBut I would like to get back to my original comment and ensure that we don't send O(5k) requests in serial here (or rather not here, but for \"noEndpoint map\" - and instead limit to the first 100 or sth (i.e. min(#such nodes, 100)).",
        "createdAt" : "2020-06-08T16:21:57Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2dba8245-39b7-4f6f-bd67-5fddb22083b5",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "according to this line https://github.com/knight42/kubernetes/blob/53f19bc4db12c9071471ab5e30c5cffc983bcf2b/test/e2e/network/service.go#L3257, the number of nodes we iterate at https://github.com/knight42/kubernetes/blob/53f19bc4db12c9071471ab5e30c5cffc983bcf2b/test/e2e/network/service.go#L3301 is `e2eservice.MaxNodesForEndpointsTests`, which is 3.\r\n\r\nand I am a bit confused that we don't send any request to apiserver here, `e2enode.GetAddresses()` just extracts the corresponding ip address from the status field of `v1.Node`.",
        "createdAt" : "2020-06-08T17:16:44Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "a5a46093-f8f4-4ea4-8e86-6e94429abe98",
        "parentId" : "81ccd0a9-32ea-4e26-b684-cafb144967a2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Which is fine - because we send request to list nodes before.\r\n\r\nRe Bounded nodes - yes, that solves my concern, thanks.",
        "createdAt" : "2020-06-08T19:42:15Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "708fb6b457d94c770890731e53090a975f53679a",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +3324,3328 @@\t\t}\n\n\t\tfor nodeName, nodeIP := range endpointNodeMap {\n\t\t\tginkgo.By(fmt.Sprintf(\"checking kube-proxy health check fails on node with endpoint (%s), public IP %s\", nodeName, nodeIP))\n\t\t\tvar body string"
  },
  {
    "id" : "3e13ba53-075b-48d4-b4ae-1a5ae8aed8ec",
    "prId" : 91559,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91559#pullrequestreview-426946994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9132820-f298-4584-9cde-20807eab4a2d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "And second thing: as part of NewNetworkingTestConfig above, what happens we also require external IP address:\r\nhttps://github.com/kubernetes/kubernetes/blob/72fb952dd6cf54f56925853005198957aaf1584d/test/e2e/framework/network/utils.go#L649\r\n\r\n@mm4tt - I think this will work, because we have public heapster node, right? Or should it also be changed?",
        "createdAt" : "2020-06-09T06:28:31Z",
        "updatedAt" : "2020-06-09T06:32:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9f2a6711-ccf1-4f59-bcbb-7b314ac352d7",
        "parentId" : "b9132820-f298-4584-9cde-20807eab4a2d",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "I am not pretty sure, but from these lines https://github.com/kubernetes/kubernetes/blob/72fb952dd6cf54f56925853005198957aaf1584d/test/e2e/framework/network/utils.go#L671-L674, it looks like `config.ExternalAddr` is only used to determine `config.NodeIP` and `config.NodeIP` would be set to an internal IP if `config.ExternalAddr` is empty.",
        "createdAt" : "2020-06-09T07:08:29Z",
        "updatedAt" : "2020-06-09T07:08:29Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "cc17233d-9060-4054-a86f-7ec21fd5e6ea",
        "parentId" : "b9132820-f298-4584-9cde-20807eab4a2d",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "Yes, we have a heapster node with public ip, and will always have it in our tests (e.g. to provide ssh bastion functionality)",
        "createdAt" : "2020-06-09T09:14:36Z",
        "updatedAt" : "2020-06-09T09:14:36Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      }
    ],
    "commit" : "708fb6b457d94c770890731e53090a975f53679a",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +3315,3319 @@\t\tdialCmd := \"clientip\"\n\n\t\tconfig := e2enetwork.NewNetworkingTestConfig(f, false, false)\n\n\t\tginkgo.By(fmt.Sprintf(\"endpoints present on nodes %v, absent on nodes %v\", endpointNodeMap, noEndpointNodeMap))"
  },
  {
    "id" : "41616997-fbee-43c0-a8c6-f3868934ff33",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-394106794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00d9459e-0f87-4069-b0d0-a1559fed21f0",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@JacobTanenbaum unncessary newline",
        "createdAt" : "2020-04-15T18:50:06Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "8f5dafd8-22c1-45a8-ad9a-ec8ce4e174d1",
        "parentId" : "00d9459e-0f87-4069-b0d0-a1559fed21f0",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "fixed",
        "createdAt" : "2020-04-15T20:22:26Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +1301,1305 @@\t\terr = <-errorChannel\n\t\tframework.ExpectNoError(err, \"pod communication failed\")\n\n\t})\n"
  },
  {
    "id" : "e2b3007b-e42f-4791-a4bc-6f7885dd4ca7",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-403662693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b789ae61-0035-4d59-b674-6961c4a1d2a3",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "nit , should we do the sanity check at the beginning, before initializing the variables?\r\n\r\n```\r\nhostPort := net.JoinHostPort(host, strconv.Itoa(port))\r\nurl := fmt.Sprintf(\"udp://%s\", hostPort)\r\n```",
        "createdAt" : "2020-04-27T18:27:44Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "860fec69-b6b5-4e3f-a249-6411b708206d",
        "parentId" : "b789ae61-0035-4d59-b674-6961c4a1d2a3",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "added the sanity check above the variable initialization ",
        "createdAt" : "2020-04-30T16:02:19Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +527,531 @@\tconst threshold = 10\n\n\t// Sanity check inputs, because it has happened.  These are the only things\n\t// that should hard fail the test - they are basically ASSERT()s.\n\tif host == \"\" {"
  },
  {
    "id" : "9ec43a1b-7282-4c0d-b01d-e9215c2d904b",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-408291245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24cbb32c-1cdc-4f06-8681-eab8cbb93679",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "`ginkgo.By(\"creating a UDP service \" + serviceName + \" with type=NodePort in namespace \" + ns)`\r\n",
        "createdAt" : "2020-05-07T20:52:46Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "803e1923-1b29-4233-ac6d-0b2e6c5d1222",
        "parentId" : "24cbb32c-1cdc-4f06-8681-eab8cbb93679",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "done",
        "createdAt" : "2020-05-08T14:45:54Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +1250,1254 @@\t\tnodeIP, err := e2enode.PickIP(cs) // for later\n\t\tframework.ExpectNoError(err)\n\n\t\t// Create a NodePort service\n\t\tudpJig := e2eservice.NewTestJig(cs, ns, serviceName)"
  },
  {
    "id" : "ae998618-f5c4-4364-a549-0d0355776717",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-408293144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88cd2c3f-d923-47b1-b282-48e2218741a2",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "`ginkgo.By(\"creating a backend pod for the service \" + serviceName)`",
        "createdAt" : "2020-05-07T20:55:26Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "5fbc7cad-8d39-4f00-b1e1-c0061da5e69c",
        "parentId" : "88cd2c3f-d923-47b1-b282-48e2218741a2",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "done",
        "createdAt" : "2020-05-08T14:48:35Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +1264,1268 @@\t\t// Add a backend pod to the service\n\t\tginkgo.By(\"creating a backend pod for the service \" + serviceName)\n\t\tserverPod1 := newAgnhostPod(serverPod1Name, \"netexec\", fmt.Sprintf(\"--udp-port=%d\", 80))\n\t\tserverPod1.Labels = udpJig.Labels\n\t\t_, err = cs.CoreV1().Pods(ns).Create(context.TODO(), serverPod1, metav1.CreateOptions{})"
  },
  {
    "id" : "6a5b3e62-424f-4969-874e-f06a3b7c0cd3",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-408292239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1001a143-32ff-4dd2-b0e0-a9e5a04dd178",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "`ginkgo.By(fmt.Sprintf(\"checking NodePort service %s on node name %s with public IP %s\", serviceName, nodeName, nodeIP))`\r\n",
        "createdAt" : "2020-05-07T21:02:09Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "8b433776-1921-48e5-83ea-bf176f71b677",
        "parentId" : "1001a143-32ff-4dd2-b0e0-a9e5a04dd178",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "done",
        "createdAt" : "2020-05-08T14:47:17Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +1277,1281 @@\t\t// Check that the pod reveives the traffic\n\t\tginkgo.By(\"Sending UDP traffic to NodePort service \" + serviceName + \" on node with publicIP \" + nodeIP)\n\t\terrorChannel := make(chan error)\n\t\tsignal := make(chan struct{}, 1)\n\t\tgo continuousEcho(nodeIP, int(udpService.Spec.Ports[0].NodePort), 3*time.Second, 20, signal, errorChannel)"
  },
  {
    "id" : "69628c39-a223-4a01-a5a5-8848f1487324",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-408291902",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34a69ff2-8b1c-4438-b8d7-9cb4b748ac47",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "`ginkgo.By(\"creating a second pod for the service \" + serviceName)`\r\n\r\n",
        "createdAt" : "2020-05-07T21:02:43Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "a90c39da-cee8-4e56-b82f-cd90463f2207",
        "parentId" : "34a69ff2-8b1c-4438-b8d7-9cb4b748ac47",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "done",
        "createdAt" : "2020-05-08T14:46:49Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +1283,1287 @@\t\t// Create a second pod\n\t\tginkgo.By(\"creating a second pod for the service \" + serviceName)\n\t\tserverPod2 := newAgnhostPod(serverPod2Name, \"netexec\", fmt.Sprintf(\"--udp-port=%d\", 80))\n\t\tserverPod2.Labels = udpJig.Labels\n\t\t_, err = cs.CoreV1().Pods(ns).Create(context.TODO(), serverPod2, metav1.CreateOptions{})"
  },
  {
    "id" : "f4bad998-bd01-45ca-8172-229c64a3d184",
    "prId" : 90180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90180#pullrequestreview-409426223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6929352-13f7-4471-bc22-760b3b677d57",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "reading the code it may happen that only the first pods answers all the UDP requests.\r\nHow can we guarantee in the test that maxAttemps lasts  enough to check both pods?\r\nmaybe signaling `continuousEcho` that we have a new pod and he has to send another round of udp packets?\r\n",
        "createdAt" : "2020-05-08T22:30:05Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "fe9ba46f-59c8-45f5-b17f-2138899c2b34",
        "parentId" : "e6929352-13f7-4471-bc22-760b3b677d57",
        "authorId" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "body" : "@aojea added a signal so continuousEcho() sends some packets waits and continues",
        "createdAt" : "2020-05-11T18:32:54Z",
        "updatedAt" : "2020-05-13T20:46:29Z",
        "lastEditedBy" : "1d448ca4-67df-492a-9e1d-11f07f840d09",
        "tags" : [
        ]
      }
    ],
    "commit" : "59082e80e39f202df7ffefa359e309411e5313cc",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +1299,1303 @@\n\t\t// Check that there are no errors\n\t\terr = <-errorChannel\n\t\tframework.ExpectNoError(err, \"pod communication failed\")\n"
  },
  {
    "id" : "4155f8bd-aff4-4cdd-ad89-76e60690aac8",
    "prId" : 89442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89442#pullrequestreview-380821833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6b12b86-561f-49e1-abde-4f84263ed464",
        "parentId" : null,
        "authorId" : "628143cf-73c8-4c51-bd38-d4079089c756",
        "body" : "If we make it private here, is the TODO still valid?",
        "createdAt" : "2020-03-25T01:28:01Z",
        "updatedAt" : "2020-03-25T20:25:14Z",
        "lastEditedBy" : "628143cf-73c8-4c51-bd38-d4079089c756",
        "tags" : [
        ]
      },
      {
        "id" : "e6af882c-a052-4965-9ee4-6bd265d5ca3d",
        "parentId" : "e6b12b86-561f-49e1-abde-4f84263ed464",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "/cc @wongma7 \r\nfor this TODO",
        "createdAt" : "2020-03-25T01:36:57Z",
        "updatedAt" : "2020-03-25T20:25:14Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      },
      {
        "id" : "3a91a756-0c50-4c2d-8442-f9c7518428fe",
        "parentId" : "e6b12b86-561f-49e1-abde-4f84263ed464",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "The test itself doesn't seem cloud provider specific, so I don't think we should remove this TODO at this time.",
        "createdAt" : "2020-03-25T02:29:43Z",
        "updatedAt" : "2020-03-25T20:25:14Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7398c83afdfbf0497b8b924b9af6af40ab6c6f2b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +3438,3442 @@// restartApiserver restarts the kube-apiserver.\nfunc restartApiserver(namespace string, cs clientset.Interface) error {\n\t// TODO: Make it work for all providers.\n\tif !framework.ProviderIs(\"gce\", \"gke\", \"aws\") {\n\t\treturn fmt.Errorf(\"unsupported provider for RestartApiserver: %s\", framework.TestContext.Provider)"
  },
  {
    "id" : "5621b0c3-0326-438d-adf9-3b40f1f3d458",
    "prId" : 89421,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89421#pullrequestreview-388210166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20df3c27-574a-4a45-82b7-29d7014a7bc9",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually - a question on that change.\r\nDon't we also need to update some timeouts for our scale tests before doing this change?",
        "createdAt" : "2020-04-01T18:05:22Z",
        "updatedAt" : "2020-04-06T12:37:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3ee21c72-cc61-4896-8c2a-07ce3c921407",
        "parentId" : "20df3c27-574a-4a45-82b7-29d7014a7bc9",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "I'll run some manual tests to figure it out",
        "createdAt" : "2020-04-03T11:08:01Z",
        "updatedAt" : "2020-04-06T12:37:16Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      },
      {
        "id" : "4dc5a87c-3a78-479a-9412-409a60fabfff",
        "parentId" : "20df3c27-574a-4a45-82b7-29d7014a7bc9",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "I described the tests I ran in https://github.com/kubernetes/test-infra/pull/17105 (which just merged).\r\nThey took 2.5h with netLB tests, so it looks like we don't need to update any timeouts. ",
        "createdAt" : "2020-04-06T12:42:31Z",
        "updatedAt" : "2020-04-06T12:42:31Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      }
    ],
    "commit" : "0817af735c8e3c1deb6c3261ae46d083704a489e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1152,1156 @@\t})\n\n\tginkgo.It(\"should be able to change the type and ports of a service [Slow]\", func() {\n\t\t// requires cloud load-balancer support\n\t\te2eskipper.SkipUnlessProviderIs(\"gce\", \"gke\", \"aws\")"
  },
  {
    "id" : "a58157d3-02e0-49e7-94c4-5c8398f664c1",
    "prId" : 89215,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89215#pullrequestreview-377378813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "471a2cde-8fb8-4a58-961f-0e7779768dcb",
        "parentId" : null,
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "ref:https://github.com/kubernetes/kubernetes/issues/79686\r\n/lgtm \r\nfor this change",
        "createdAt" : "2020-03-19T02:20:42Z",
        "updatedAt" : "2020-03-19T02:21:10Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "7499d80fd83c66b1ca7e85c55fa914982844249f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +936,940 @@\t\tframework.ExpectNoError(err, \"Error in listing pods associated with pause pod deployments\")\n\n\t\tframework.ExpectNotEqual(pausePods.Items[0].Spec.NodeName, pausePods.Items[1].Spec.NodeName)\n\n\t\tserviceAddress := net.JoinHostPort(serviceIP, strconv.Itoa(servicePort))"
  },
  {
    "id" : "c61d2fc6-52f4-4347-8540-2eaf0bd931a7",
    "prId" : 88778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88778#pullrequestreview-368403821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11aed0b2-d796-4325-b0aa-2d14358bbe57",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "you need to create an Endpoints object here. By not setting a selector, we tell the endpoints controller to not do anything with this service. Instead, we manually manage the endpoints (creating them here).\r\n\r\nIf you do it this way, it will be flaky because you will race in your updates with the EndpointsController.",
        "createdAt" : "2020-03-03T23:37:09Z",
        "updatedAt" : "2020-03-24T22:22:53Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      }
    ],
    "commit" : "f64d348505eee3fc184b5e2fb0193ebb4944129f",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +2722,2726 @@\t\t}\n\n\t\tginkgo.By(\"listing all Endpoints\")\n\t\tendpointsList, err := f.ClientSet.CoreV1().Endpoints(\"\").List(context.TODO(), metav1.ListOptions{LabelSelector: \"testendpoint-static=true\"})\n\t\tframework.ExpectNoError(err, \"failed to list Endpoints\")"
  },
  {
    "id" : "485baf84-a5c4-44e9-a69e-e646259841f3",
    "prId" : 88409,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88409#pullrequestreview-363282025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79e0a7a8-0553-4b79-b1eb-e7eae1f66fda",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "should we add a `sleep` between requests?\r\nAffinityConfirmCount is 15 , is it enough?",
        "createdAt" : "2020-02-24T10:17:03Z",
        "updatedAt" : "2020-02-24T10:17:04Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "64c4876ccd013b309777d594ed3b14bee8cabf6e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +116,120 @@\tserviceIPPort := net.JoinHostPort(serviceIP, strconv.Itoa(servicePort))\n\tcurl := fmt.Sprintf(`curl -q -s --connect-timeout 2 http://%s/`, serviceIPPort)\n\tcmd := fmt.Sprintf(\"for i in $(seq 0 %d); do echo; %s ; done\", AffinityConfirmCount, curl)\n\ttimeout := AffinityTimeout\n\tif execPod == nil {"
  },
  {
    "id" : "b9b960aa-b7a4-4006-a327-26ebfe9cd9f4",
    "prId" : 88409,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88409#pullrequestreview-363282879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baab065b-755f-402a-8f44-2ed433b4d161",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "should we make `timeout` depend on `interval`?  i.e `timeout := 4*interval` ?\r\n",
        "createdAt" : "2020-02-24T10:18:24Z",
        "updatedAt" : "2020-02-24T10:18:24Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "64c4876ccd013b309777d594ed3b14bee8cabf6e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +124,128 @@\t// interval considering a maximum of 2 seconds per connection\n\tinterval := 2 * AffinityConfirmCount * time.Second\n\tif pollErr := wait.PollImmediate(interval, timeout, func() (bool, error) {\n\t\tif execPod != nil {\n\t\t\tstdout, err := framework.RunHostCmd(execPod.Namespace, execPod.Name, cmd)"
  },
  {
    "id" : "2295569a-de30-4821-823b-1afed9af95de",
    "prId" : 88196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88196#pullrequestreview-366882593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "628c2264-2b89-4e85-94eb-9a5b37fc5e05",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "maybe this can be added with a `defer e2epod.DeletePodOrFail(cs, ns, name1)` just after wue create the pod?",
        "createdAt" : "2020-03-01T17:59:36Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ce1767f4-eec3-4502-bd44-6cb8dc413c16",
        "parentId" : "628c2264-2b89-4e85-94eb-9a5b37fc5e05",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Fixed.",
        "createdAt" : "2020-03-01T20:03:51Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce43a1c96e631c3ce95453c083c193ba8528d9d",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +3919,3923 @@\n\t\tginkgo.By(\"deleting the pod\")\n\t\te2epod.DeletePodOrFail(cs, ns, name1)\n\t\tdelete(names, name1)\n\t\tginkgo.By(\"validating endpoints do not exist anymore\")"
  },
  {
    "id" : "798e7440-a127-4d61-abfb-72e331e6ad15",
    "prId" : 88196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88196#pullrequestreview-368934630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3595b4d1-b111-4849-8739-4827df77a16b",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "should this defer go after the L3470 where the service is created?",
        "createdAt" : "2020-03-01T18:02:53Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "86996ea7-e256-4252-a68d-21e082b54e3d",
        "parentId" : "3595b4d1-b111-4849-8739-4827df77a16b",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Fixed.",
        "createdAt" : "2020-03-01T20:23:24Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      },
      {
        "id" : "56fcb3c2-cf51-450e-954f-743705a8e84b",
        "parentId" : "3595b4d1-b111-4849-8739-4827df77a16b",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "my bad, I think that I gave you a wrong review, it should be \r\n\r\n```\r\n_, err = jig.CreateSCTPServiceWithPort(nil, 5060)\r\nframework.ExpectNoError(err)\r\ndefer func() {\r\n```\r\nif the service creation errors we shouldn't have to delete it.",
        "createdAt" : "2020-03-03T22:46:23Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "dda89f64-80f7-4f52-a554-e1e5890af323",
        "parentId" : "3595b4d1-b111-4849-8739-4827df77a16b",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Fixed.",
        "createdAt" : "2020-03-04T16:34:16Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce43a1c96e631c3ce95453c083c193ba8528d9d",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +3888,3892 @@\t\t_, err = jig.CreateSCTPServiceWithPort(nil, 5060)\n\t\tframework.ExpectNoError(err)\n\t\tdefer func() {\n\t\t\terr := cs.CoreV1().Services(ns).Delete(context.TODO(), serviceName, metav1.DeleteOptions{})\n\t\t\tframework.ExpectNoError(err, \"failed to delete service: %s in namespace: %s\", serviceName, ns)"
  },
  {
    "id" : "d4fca0c4-eda9-4b77-9ecd-31821fcb009c",
    "prId" : 88196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88196#pullrequestreview-368748974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21b033a1-95b2-41f6-a7f0-2daf03aee7c8",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "mostly curiosity, why do we need a map if we only create one pod?",
        "createdAt" : "2020-03-03T22:48:46Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "973fe57e-90a3-44a1-8f64-5d5c53714b68",
        "parentId" : "21b033a1-95b2-41f6-a7f0-2daf03aee7c8",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Yeah, I copied this pattern (no surprise, I know). So, there is this safety defer() to delete the pod if anything goes wrong. But actually later in the test we delete the pod as a normal step in the test case. So, when the defer() runs after the normal deletion of the pod it should not try to delete the pod again.",
        "createdAt" : "2020-03-04T12:49:12Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce43a1c96e631c3ce95453c083c193ba8528d9d",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +3901,3905 @@\n\t\tginkgo.By(\"creating a pod for the service\")\n\t\tnames := map[string]bool{}\n\n\t\tname1 := \"pod1\""
  },
  {
    "id" : "f667990a-fdd2-4be0-a161-05fadce9c4fe",
    "prId" : 88196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88196#pullrequestreview-397952057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c64eb26-7af9-4b1b-89dd-fbfee6556a15",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I remember vaguely that hostexec pods doesn't need sudo, I have to recheck",
        "createdAt" : "2020-03-03T22:55:58Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "27e957fd-4fa4-437b-94be-279020d90835",
        "parentId" : "9c64eb26-7af9-4b1b-89dd-fbfee6556a15",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Please update me with your findings.",
        "createdAt" : "2020-03-04T14:27:06Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      },
      {
        "id" : "a6e57fc9-b809-40b0-b410-b71a2afbe948",
        "parentId" : "9c64eb26-7af9-4b1b-89dd-fbfee6556a15",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "`\"It should recreate its iptables rules if they are deleted\"` uses `sudo iptables-save`",
        "createdAt" : "2020-04-21T14:33:44Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "e164936c-f5f9-48e1-963d-799e515535e7",
        "parentId" : "9c64eb26-7af9-4b1b-89dd-fbfee6556a15",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "Thank you!",
        "createdAt" : "2020-04-22T08:18:54Z",
        "updatedAt" : "2020-05-28T19:54:55Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce43a1c96e631c3ce95453c083c193ba8528d9d",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +3988,3992 @@\n\t\tginkgo.By(\"dumping iptables rules on the node\")\n\t\tcmd = \"sudo iptables-save\"\n\t\tframework.Logf(\"Executing cmd %q on node %v\", cmd, node.Name)\n\t\tresult, err := hostExec.IssueCommandWithResult(cmd, node)"
  },
  {
    "id" : "7384b1b8-da02-4962-b60a-3e7ad2617008",
    "prId" : 86856,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86856#pullrequestreview-339470881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4aaaadd-a5ab-40b4-9f3f-23b01efba153",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Is the test explicitly looking for the `kubernetes` service, or just any service?",
        "createdAt" : "2020-01-07T18:22:32Z",
        "updatedAt" : "2020-01-07T20:44:49Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "bb4962d5-97a2-4251-8065-c0c1debfeedb",
        "parentId" : "b4aaaadd-a5ab-40b4-9f3f-23b01efba153",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "Explicitly the Kubernetes service, since it will always exist (to make it a short concise test)",
        "createdAt" : "2020-01-07T19:56:05Z",
        "updatedAt" : "2020-01-07T20:44:49Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "c53006b1a2cb286d841aefdf137e325dd07592cd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2636,2640 @@\t})\n\n\tginkgo.It(\"should find a service from listing all namespaces\", func() {\n\t\tginkgo.By(\"fetching services\")\n\t\tsvcs, _ := f.ClientSet.CoreV1().Services(\"\").List(metav1.ListOptions{})"
  },
  {
    "id" : "0ebc26ac-9271-4cb4-8ae0-3f51b692749c",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c990ca48-3bc9-47d2-991f-66456fb6b3db",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:07:37Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +133,137 @@\t\t}()\n\t\t_, err := jig.CreateTCPServiceWithPort(nil, 80)\n\t\tframework.ExpectNoError(err)\n\n\t\terr = e2eendpoints.ValidateEndpointsPorts(cs, ns, serviceName, e2eendpoints.PortsByPodName{})"
  },
  {
    "id" : "867ae0a7-0ab1-4072-a192-a23fdb648895",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd64ce9-2c1b-4237-b7f6-bc18e08cb87f",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Why delete `CreateServiceWithServicePort()`?\r\nAlso, it looks like we are not building the service with the labels `foo=bar` and `baz=blah`.\r\n",
        "createdAt" : "2019-10-15T17:12:48Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +132,136 @@\t\t\tframework.ExpectNoError(err, \"failed to delete service: %s in namespace: %s\", serviceName, ns)\n\t\t}()\n\t\t_, err := jig.CreateTCPServiceWithPort(nil, 80)\n\t\tframework.ExpectNoError(err)\n"
  },
  {
    "id" : "ca9c0af1-1f7e-4147-9039-2bf367ff1499",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff5bf35c-d2ee-48e7-b829-abcd4b141171",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:14:44Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +204,208 @@\t\t\t}\n\t\t})\n\t\tframework.ExpectNoError(err)\n\n\t\tport1 := 100"
  },
  {
    "id" : "f4e29af0-36a3-44b3-a928-c17c266126be",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a61baa3a-df67-4ceb-b049-05d775b26ab3",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "How are we specifying the labels here (`foo=bar`)?\r\nit looks like they are not being set.",
        "createdAt" : "2019-10-15T17:15:54Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +190,194 @@\n\t\tginkgo.By(\"creating service \" + serviceName + \" in namespace \" + ns)\n\t\t_, err := jig.CreateTCPService(func(service *v1.Service) {\n\t\t\tservice.Spec.Ports = []v1.ServicePort{\n\t\t\t\t{"
  },
  {
    "id" : "996c3940-2de9-43e1-b65b-c88669aac34e",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1582100-e5c3-456b-a8d6-62caf4303262",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:10Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +277,281 @@\t\tservicePort := 8080\n\t\ttcpService, err := jig.CreateTCPServiceWithPort(nil, int32(servicePort))\n\t\tframework.ExpectNoError(err)\n\t\tdefer func() {\n\t\t\tframework.Logf(\"Cleaning up the sourceip test service\")"
  },
  {
    "id" : "c0e43302-aafb-4845-84c4-c9dd6415a7f5",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61c1e099-f52b-47a4-a038-cba953784553",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:20Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +348,352 @@\t\tservicePort := 8080\n\t\tsvc, err := jig.CreateTCPServiceWithPort(nil, int32(servicePort))\n\t\tframework.ExpectNoError(err)\n\t\tserviceIP := svc.Spec.ClusterIP\n\t\tframework.Logf(\"hairpin-test cluster ip: %s\", serviceIP)"
  },
  {
    "id" : "68ab4f20-e642-4c7d-9456-6b9589d0ff30",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ef7bd6f-2125-41b8-963e-a985c08e4cd3",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:30Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +366,370 @@\t\tginkgo.By(\"Checking if the pod can reach itself\")\n\t\terr = jig.CheckServiceReachability(svc, pod)\n\t\tframework.ExpectNoError(err)\n\t})\n"
  },
  {
    "id" : "85aba384-0fdc-448e-8eb6-93705a77357f",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c60fc475-a7cb-4260-b9ad-70a167502b1c",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:44Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +546,550 @@\t\tframework.ExpectNoError(err)\n\t\terr = jig.CreateServicePods(2)\n\t\tframework.ExpectNoError(err)\n\t\texecPod := e2epod.CreateExecPodOrFail(cs, ns, \"execpod\", nil)\n\t\terr = jig.CheckServiceReachability(nodePortService, execPod)"
  },
  {
    "id" : "bc815888-4b4b-4dcd-ac01-5269abbc06bb",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc554bea-f69b-4f30-9cdd-e388e42dbfce",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:52Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +549,553 @@\t\texecPod := e2epod.CreateExecPodOrFail(cs, ns, \"execpod\", nil)\n\t\terr = jig.CheckServiceReachability(nodePortService, execPod)\n\t\tframework.ExpectNoError(err)\n\t})\n"
  },
  {
    "id" : "a073451f-a749-48ec-9bab-0cd2edf0c243",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc285c8-841a-47f4-b2a6-e4fee8c8b7b2",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:16:59Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +584,588 @@\n\t\tnodeIP, err := e2enode.PickIP(cs) // for later\n\t\tframework.ExpectNoError(err)\n\n\t\t// Test TCP and UDP Services.  Services with the same name in different"
  },
  {
    "id" : "e053761c-136c-46e2-8110-e05056a310a1",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f480fa78-52d9-4934-9113-8d86f0b02772",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:05Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +592,596 @@\t\ttcpJig := e2eservice.NewTestJig(cs, ns1, serviceName)\n\t\ttcpService, err := tcpJig.CreateTCPService(nil)\n\t\tframework.ExpectNoError(err)\n\n\t\tginkgo.By(\"creating a UDP service \" + serviceName + \" with type=ClusterIP in namespace \" + ns2)"
  },
  {
    "id" : "55587faa-462d-4099-b96b-197d4da8ef30",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daac97f3-6e65-48b3-8c13-899c60cddcd9",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:12Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +597,601 @@\t\tudpJig := e2eservice.NewTestJig(cs, ns2, serviceName)\n\t\tudpService, err := udpJig.CreateUDPService(nil)\n\t\tframework.ExpectNoError(err)\n\n\t\tginkgo.By(\"verifying that TCP and UDP use the same port\")"
  },
  {
    "id" : "9e894f04-cf99-4393-94e6-c363007f3640",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e835ca60-68a1-4667-8eb5-1915a7374014",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:18Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +608,612 @@\t\tginkgo.By(\"creating a pod to be part of the TCP service \" + serviceName)\n\t\t_, err = tcpJig.Run(nil)\n\t\tframework.ExpectNoError(err)\n\n\t\tginkgo.By(\"creating a pod to be part of the UDP service \" + serviceName)"
  },
  {
    "id" : "ee994e1c-02f8-48ca-86aa-be75358bdf4c",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8c4fdfa-f577-46df-98f7-c3db71d0ba83",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:25Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +612,616 @@\t\tginkgo.By(\"creating a pod to be part of the UDP service \" + serviceName)\n\t\t_, err = udpJig.Run(nil)\n\t\tframework.ExpectNoError(err)\n\n\t\t// Change the services to NodePort."
  },
  {
    "id" : "41e1df13-9e2a-47b9-9ebe-06bf3685c2a0",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dfb0f29-73a4-4087-a8d4-ed836f6db344",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:36Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +620,624 @@\t\t\ts.Spec.Type = v1.ServiceTypeNodePort\n\t\t})\n\t\tframework.ExpectNoError(err)\n\t\ttcpNodePort := int(tcpService.Spec.Ports[0].NodePort)\n\t\tframework.Logf(\"TCP node port: %d\", tcpNodePort)"
  },
  {
    "id" : "07119854-3b4d-4829-9c0e-3b63d0d0a05f",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1033220f-a2f5-4e2f-8c3f-7f72b20b37cd",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:17:47Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +628,632 @@\t\t\ts.Spec.Type = v1.ServiceTypeNodePort\n\t\t})\n\t\tframework.ExpectNoError(err)\n\t\tudpNodePort := int(udpService.Spec.Ports[0].NodePort)\n\t\tframework.Logf(\"UDP node port: %d\", udpNodePort)"
  },
  {
    "id" : "d3d87db9-2108-429a-ad9a-167f2eae9110",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1e4e724-f4cf-42e8-9919-2cc4d85147ab",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:09Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +672,676 @@\t\t\ts.Spec.Type = v1.ServiceTypeLoadBalancer\n\t\t})\n\t\tframework.ExpectNoError(err)\n\n\t\tif loadBalancerSupportsUDP {"
  },
  {
    "id" : "99001e1c-ba87-4b81-9c92-19434be4b891",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea7256e1-12c5-4342-b0ee-7c5920a98481",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:16Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +679,683 @@\t\t\t\ts.Spec.Type = v1.ServiceTypeLoadBalancer\n\t\t\t})\n\t\t\tframework.ExpectNoError(err)\n\t\t}\n\t\tserviceLBNames = append(serviceLBNames, cloudprovider.DefaultLoadBalancerName(tcpService))"
  },
  {
    "id" : "34405f33-0684-40dd-a078-52af6addb9bd",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a44a262e-a966-4f21-b67b-3ce58098ff67",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:23Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +689,693 @@\t\t// Wait for the load balancer to be created asynchronously\n\t\ttcpService, err = tcpJig.WaitForLoadBalancer(loadBalancerCreateTimeout)\n\t\tframework.ExpectNoError(err)\n\t\tif int(tcpService.Spec.Ports[0].NodePort) != tcpNodePort {\n\t\t\tframework.Failf(\"TCP Spec.Ports[0].NodePort changed (%d -> %d) when not expected\", tcpNodePort, tcpService.Spec.Ports[0].NodePort)"
  },
  {
    "id" : "de5b7560-eb7e-45bd-8f6a-0465e985965b",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1c08def-8345-46ef-8715-3652a679a02c",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:30Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +722,726 @@\t\t\t// 2nd one should be faster since they ran in parallel.\n\t\t\tudpService, err = udpJig.WaitForLoadBalancer(loadBalancerCreateTimeout)\n\t\t\tframework.ExpectNoError(err)\n\t\t\tif int(udpService.Spec.Ports[0].NodePort) != udpNodePort {\n\t\t\t\tframework.Failf(\"UDP Spec.Ports[0].NodePort changed (%d -> %d) when not expected\", udpNodePort, udpService.Spec.Ports[0].NodePort)"
  },
  {
    "id" : "bb26a18d-95d9-4acd-b247-a95a9aeba364",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32e46af2-8e52-4aee-bd75-806b76d8d6ea",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:36Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +753,757 @@\t\tginkgo.By(\"changing the TCP service's NodePort\")\n\t\ttcpService, err = tcpJig.ChangeServiceNodePort(tcpNodePort)\n\t\tframework.ExpectNoError(err)\n\t\ttcpNodePortOld := tcpNodePort\n\t\ttcpNodePort = int(tcpService.Spec.Ports[0].NodePort)"
  },
  {
    "id" : "e0a58887-c2d7-4aa6-b178-ac5113ac6700",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bacff11e-0149-4688-9fea-915f2594efb1",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:44Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 306,
    "diffHunk" : "@@ -1,1 +766,770 @@\t\tginkgo.By(\"changing the UDP service's NodePort\")\n\t\tudpService, err = udpJig.ChangeServiceNodePort(udpNodePort)\n\t\tframework.ExpectNoError(err)\n\t\tudpNodePortOld := udpNodePort\n\t\tudpNodePort = int(udpService.Spec.Ports[0].NodePort)"
  },
  {
    "id" : "c33dbc24-1635-4d83-9c25-70f0ad7edb6c",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ac15364-75a2-4a42-9fbb-4f9c5227100d",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "could you add a simple annotation here as well, please?",
        "createdAt" : "2019-10-15T17:18:58Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 319,
    "diffHunk" : "@@ -1,1 +803,807 @@\t\t\ts.Spec.Ports[0].Port++\n\t\t})\n\t\tframework.ExpectNoError(err)\n\t\tsvcPortOld := svcPort\n\t\tsvcPort = int(tcpService.Spec.Ports[0].Port)"
  },
  {
    "id" : "118572e0-b729-4b0c-995d-758568df24c4",
    "prId" : 83549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83549#pullrequestreview-302056351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95a2a50d-02ff-489f-b1bb-40c8c7eddcbc",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "How are labels being set here?",
        "createdAt" : "2019-10-15T17:19:56Z",
        "updatedAt" : "2019-10-18T12:37:29Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b366457f018067d00b09d95b41d6001b0cb7db",
    "line" : 872,
    "diffHunk" : "@@ -1,1 +1984,1988 @@\n\t\tginkgo.By(\"creating a service with no endpoints\")\n\t\t_, err = jig.CreateTCPServiceWithPort(nil, int32(port))\n\t\tframework.ExpectNoError(err)\n"
  },
  {
    "id" : "6856dfd4-b596-4817-b13a-e18a2619b2a4",
    "prId" : 81955,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81955#pullrequestreview-279910494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f26ac05d-9709-4aff-81d8-81cd8e741875",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "```\r\nconst serviceName = ...\r\nconst ns = ...\r\n```",
        "createdAt" : "2019-08-27T01:10:59Z",
        "updatedAt" : "2019-08-27T01:13:51Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d91e9e2b6317aac9dfaa1a4cfae676d27e17f7b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +350,354 @@\n\tginkgo.It(\"should allow pods to hairpin back to themselves through services\", func() {\n\t\tserviceName := \"hairpin-test\"\n\t\tns := f.Namespace.Name\n"
  },
  {
    "id" : "4d640f48-4eb8-4627-9c46-9352e1e5248b",
    "prId" : 80805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80805#pullrequestreview-269402204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9db8a9c-5ddc-4b49-83c7-f8b386d0a5a3",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "We might want to put `framework.ExpectNoError(err)` for the previous call.",
        "createdAt" : "2019-07-31T20:56:11Z",
        "updatedAt" : "2019-08-01T03:23:04Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "79f5a6e1-a82f-45d9-b1e0-05dd54bb7f8e",
        "parentId" : "a9db8a9c-5ddc-4b49-83c7-f8b386d0a5a3",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "I was not clear with this suggestion but added `framework.ExpectNoError(err)` for metab1.LabelSelector statement along with other effective change in error checking statements.",
        "createdAt" : "2019-08-01T05:29:16Z",
        "updatedAt" : "2019-08-01T05:29:17Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf1597f6653a170cf8b4f13399f08d231d381c88",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +2203,2207 @@\t\tdeployment, err = cs.AppsV1().Deployments(namespace).Get(deployment.Name, metav1.GetOptions{})\n\t\tframework.ExpectNoError(err, \"Error in retriving pause pod deployment\")\n\t\tlabelSelector, err := metav1.LabelSelectorAsSelector(deployment.Spec.Selector)\n\t\tframework.ExpectNoError(err, \"Error in setting LabelSelector as selector from deployment\")\n"
  },
  {
    "id" : "d43cf270-a22a-44a0-aaa2-881ea2484e83",
    "prId" : 80595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80595#pullrequestreview-269140455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78d5343f-a220-4564-a832-27335dabf961",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this is a very nice win potentially :-)",
        "createdAt" : "2019-07-26T19:35:08Z",
        "updatedAt" : "2019-08-01T22:16:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "92748140-7bce-43e7-a1a5-9de8aef08eb9",
        "parentId" : "78d5343f-a220-4564-a832-27335dabf961",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "`/clientip` part of the command line doesn't parse for me when looking at curl man pages.  Do you have a reference?  ",
        "createdAt" : "2019-07-31T15:59:30Z",
        "updatedAt" : "2019-08-01T22:16:33Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "790adbee-5107-4bd1-9b1b-6070b9c193b8",
        "parentId" : "78d5343f-a220-4564-a832-27335dabf961",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, that's because `clientip` is the endpoint exposed in the image, is part of the url, agnhost is a meta image that consolidated several images using subcommands. In this test it is using the `netexec` subcommand\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/80595/files#diff-ed43f6fc75eb8ad508358ecf71f2b271R159\r\n\r\nthat starts a webserver with different endpoints:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blame/master/test/images/agnhost/README.md#L309\r\n\r\n",
        "createdAt" : "2019-07-31T16:38:09Z",
        "updatedAt" : "2019-08-01T22:16:33Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "48f1756b93196f7a12d0ea35ab570905d5202f09",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2322,2326 @@\n\te2elog.Logf(\"Waiting up to %v to get response from %s\", timeout, serviceAddress)\n\tcmd := fmt.Sprintf(`curl -q -s --connect-timeout 30 %s/clientip`, serviceAddress)\n\tfor start := time.Now(); time.Since(start) < timeout; time.Sleep(2 * time.Second) {\n\t\tstdout, err = framework.RunHostCmd(pausePod.Namespace, pausePod.Name, cmd)"
  },
  {
    "id" : "5cda8c16-bb3b-4930-89fe-c2dab53f6989",
    "prId" : 79667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79667#pullrequestreview-257865554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bd8c352-1dcb-463a-ade7-05a92347e304",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "`execpod-`? should it be more descriptive?",
        "createdAt" : "2019-07-03T09:59:49Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "6e2940bb-5914-41af-8e04-e3290b0d0ed8",
        "parentId" : "0bd8c352-1dcb-463a-ade7-05a92347e304",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "`execpod` seems expressive and `e2epod.CreateExecPodOrFail()` generates unique execpod name. (replaced `execpod-` with `execpod` in latest commit)\r\nAny suggestion on specific naming to these execpods for different scenarios? (mostly we are using this pod to make curl requests to endpoints)",
        "createdAt" : "2019-07-04T07:17:51Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "1438a3c8fc88d6422b716326dc8f9b19921743f5",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +1371,1375 @@\t\tginkgo.By(\"Waiting for endpoints of Service with DNS name \" + svcName)\n\n\t\texecPod := e2epod.CreateExecPodOrFail(f.ClientSet, f.Namespace.Name, \"execpod-\", nil)\n\t\texecPodName := execPod.Name\n\t\tcmd := fmt.Sprintf(\"curl -q -s --connect-timeout 2 http://%s:%d/\", svcName, port)"
  },
  {
    "id" : "019f4380-1d4d-4369-8ea5-101c88da0a68",
    "prId" : 79667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79667#pullrequestreview-261493904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e2368be-38c4-40b0-90d5-ab84f8bdb505",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "I don't think we should do this from *every* node. What if someone wants to run the conformance suite against a cluster with 3000 nodes? This would be a very long and expensive test. Similarly, we should restrict the NodePort checks to just a couple nodes. Can we go back to using just 2 nodes, and doing all the checks with just two nodes? Then it's easy to use nodeSelector to ensure scheduling on different nodes, and we don't run into issues with massive clusters. Plus, there can be tainted nodes, etc. I guess that's an issue for using nodeSelectors too - if we pick one and its tainted it won't schedule.\r\n\r\nWe could use pod anti-affinity and then verify they are scheduled on two different pods, and error out if not. That gets around the taints causing a problem.\r\n\r\nSo...let's go with that - use anti-affinity but only 2 pods.",
        "createdAt" : "2019-07-11T14:47:53Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "446c6f8d-f2ab-4a0d-8035-9701180f1d12",
        "parentId" : "1e2368be-38c4-40b0-90d5-ab84f8bdb505",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Thanks for pointing this gotcha. Using podAntiAffinity with HARD requirement to schedule pause pod in different node and considering only 2 nodes.",
        "createdAt" : "2019-07-12T22:08:07Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "1438a3c8fc88d6422b716326dc8f9b19921743f5",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +315,319 @@\n\t\tginkgo.By(\"Creating pause pod deployment\")\n\t\tdeployment := jig.CreatePausePodDeployment(\"pause-pod\", ns, int32(nodeCounts))\n\n\t\tdefer func() {"
  },
  {
    "id" : "05a544a3-1da2-40ba-a13f-15207cc26761",
    "prId" : 79667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79667#pullrequestreview-261988236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9400ebb-c296-42b1-82a1-d2fb3b4b8f01",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "+1 nice",
        "createdAt" : "2019-07-15T18:10:43Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      }
    ],
    "commit" : "1438a3c8fc88d6422b716326dc8f9b19921743f5",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +332,336 @@\t\tframework.ExpectNoError(err, \"Error in listing pods associated with pause pod deployments\")\n\n\t\tgomega.Expect(pausePods.Items[0].Spec.NodeName).ToNot(gomega.Equal(pausePods.Items[1].Spec.NodeName))\n\n\t\tserviceAddress := net.JoinHostPort(serviceIP, strconv.Itoa(servicePort))"
  },
  {
    "id" : "40e3cec9-845e-491b-be09-4961bbcdbf7b",
    "prId" : 78410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78410#pullrequestreview-244025574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e54ea99f-b4c5-4c4b-94f0-19e9f0445649",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "use constant from service helper package??",
        "createdAt" : "2019-05-30T19:21:07Z",
        "updatedAt" : "2019-05-30T19:24:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "fc813acc-8f56-430d-a23f-319eb71b6e78",
        "parentId" : "e54ea99f-b4c5-4c4b-94f0-19e9f0445649",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "oh, I see the constant doesn't exist yet haha sorry ",
        "createdAt" : "2019-05-30T19:21:42Z",
        "updatedAt" : "2019-05-30T19:24:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "2b8e4b81-6634-4990-9006-3e1d475eee52",
        "parentId" : "e54ea99f-b4c5-4c4b-94f0-19e9f0445649",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Exactly --- I filed https://github.com/kubernetes/kubernetes/issues/78549 to track the followup.",
        "createdAt" : "2019-05-30T20:56:25Z",
        "updatedAt" : "2019-05-30T20:56:26Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9ed5702be3738e034aff731dd32aeb6d0ced4bc",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +1946,1950 @@\t\tfoundFinalizer := false\n\t\tfor _, finalizer := range svc.Finalizers {\n\t\t\tif finalizer == \"service.kubernetes.io/load-balancer-cleanup\" {\n\t\t\t\tfoundFinalizer = true\n\t\t\t}"
  },
  {
    "id" : "9e685aad-8af0-4e74-be71-6aca24acbe46",
    "prId" : 78410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78410#pullrequestreview-244025623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c51bf91c-4e12-4bb8-a97e-3ac715f0f0be",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "same here, use constant?",
        "createdAt" : "2019-05-30T19:21:26Z",
        "updatedAt" : "2019-05-30T19:24:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "885031fa-4a8a-4dbd-a883-5fc7132cc989",
        "parentId" : "c51bf91c-4e12-4bb8-a97e-3ac715f0f0be",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Filed https://github.com/kubernetes/kubernetes/issues/78549 to track the followup.",
        "createdAt" : "2019-05-30T20:56:30Z",
        "updatedAt" : "2019-05-30T20:56:31Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9ed5702be3738e034aff731dd32aeb6d0ced4bc",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1874,1878 @@\n\t\tginkgo.By(\"Manually add load balancer cleanup finalizer to service\")\n\t\tsvc.Finalizers = append(svc.Finalizers, \"service.kubernetes.io/load-balancer-cleanup\")\n\t\tif _, err := cs.CoreV1().Services(svc.Namespace).Update(svc); err != nil {\n\t\t\tframework.Failf(\"Failed to add finalizer to service %s/%s: %v\", svc.Namespace, svc.Name, err)"
  },
  {
    "id" : "195162ee-94ed-42d4-b2a2-55ec753810d5",
    "prId" : 78410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78410#pullrequestreview-244025767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e63e0947-e631-4ddd-88e5-fc082504a183",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Is there a real LB to verify against? Maybe other tests verify this enough",
        "createdAt" : "2019-05-30T19:24:12Z",
        "updatedAt" : "2019-05-30T19:24:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "352b82a6-d733-4931-899d-cb04f081de8e",
        "parentId" : "e63e0947-e631-4ddd-88e5-fc082504a183",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Right, @prameshj raised similar point offline. We have other LB tests that actually verify against real LBs (e.g. checking the actual LB resources and make sure they are cleaned up). But it is valid point that it would be better to check it here.  https://github.com/kubernetes/kubernetes/issues/78549 will track this work as followup if that is ok.",
        "createdAt" : "2019-05-30T20:56:48Z",
        "updatedAt" : "2019-05-30T20:56:49Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9ed5702be3738e034aff731dd32aeb6d0ced4bc",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1867,1871 @@\n\t\tdefer func() {\n\t\t\twaitForServiceDeletedWithFinalizer(cs, svc.Namespace, svc.Name)\n\t\t}()\n"
  },
  {
    "id" : "978f9773-375e-496a-8337-8b371294745a",
    "prId" : 77865,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77865#pullrequestreview-266724046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39ab097d-2f28-43a4-b2e3-4f0ae3a1abf1",
        "parentId" : null,
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Once TODO: is addressed, we can promote in separate PR.",
        "createdAt" : "2019-07-25T15:52:43Z",
        "updatedAt" : "2019-08-14T10:38:50Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c64fc9d98580710524814dcf365ed1044a3f841",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +916,920 @@\t\tDescription: Create a service of type ClusterIP to accept TCP requests. Service creation MUST be successful by assigning ClusterIP to the service.\n\t\tWhen service type is updated to NodePort to support two protocols i.e. TCP and UDP for same assigned service port 80, service update MUST be successful by allocating two NodePorts to the service.\n\t\tTODO: Test Service reachability, good to include this check in Conformance perspective.\n\t*/\n\tginkgo.It(\"should be able to update NodePorts with two same port numbers but different protocols\", func() {"
  },
  {
    "id" : "2223b14f-242a-409a-ab5b-eeb7062b192c",
    "prId" : 74394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74394#pullrequestreview-212532314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e0a7286-8fac-49e6-958b-f6a5dc5e5524",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "If the poll fails more than once, this will end up concatenating multiple response bodies together, as opposed to the old code which always only returned the last HTTP response",
        "createdAt" : "2019-03-08T17:39:15Z",
        "updatedAt" : "2019-03-12T15:09:02Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "40541884-1a64-405a-8f47-a6bc3d9537fb",
        "parentId" : "6e0a7286-8fac-49e6-958b-f6a5dc5e5524",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "nice catch",
        "createdAt" : "2019-03-09T00:47:18Z",
        "updatedAt" : "2019-03-12T15:09:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "de25d6cb9577b00b24ca2baf0187b34f483a0d6c",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +2106,2110 @@\t\t\t\t}\n\t\t\t\tbody.Reset()\n\t\t\t\tbody.Write(result.Body)\n\t\t\t\treturn false, nil\n\t\t\t}"
  },
  {
    "id" : "99d91a20-0d76-45bb-a949-4b9304ec8fc7",
    "prId" : 61188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61188#pullrequestreview-107785545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27a098dc-fb03-47a4-9b7b-387b7d78aab1",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "This is something we should put into util. But I guess it is fine for now :)",
        "createdAt" : "2018-03-28T17:36:46Z",
        "updatedAt" : "2018-03-28T17:54:35Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "d042dd00-92c9-4d94-810f-c972269873e1",
        "parentId" : "27a098dc-fb03-47a4-9b7b-387b7d78aab1",
        "authorId" : "80560558-3a5b-4f4a-99dd-e7c57c8394b7",
        "body" : "This makes perfect sense. Actually not only this function but also default settings and constants should go to service_util too. But that will cause some change. I will clean it up after this PR get merged.",
        "createdAt" : "2018-03-28T17:48:51Z",
        "updatedAt" : "2018-03-28T17:54:35Z",
        "lastEditedBy" : "80560558-3a5b-4f4a-99dd-e7c57c8394b7",
        "tags" : [
        ]
      },
      {
        "id" : "6c227722-43c3-44e8-a8b8-0f06c7529d74",
        "parentId" : "27a098dc-fb03-47a4-9b7b-387b7d78aab1",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "SGTM",
        "createdAt" : "2018-03-28T17:56:26Z",
        "updatedAt" : "2018-03-28T17:56:26Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "4655f52329b7102cde72be2986844650d5c5c378",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +68,72 @@)\n\nfunc getServeHostnameService(name string) *v1.Service {\n\tsvc := defaultServeHostnameService.DeepCopy()\n\tsvc.ObjectMeta.Name = name"
  },
  {
    "id" : "4808f24a-8418-433b-b328-f6ead6f0179f",
    "prId" : 56724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56724#pullrequestreview-81030861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "166c4e0e-7ca9-404e-b27e-d220d9836356",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Humm..Still need `return false, nil`?",
        "createdAt" : "2017-12-04T23:53:36Z",
        "updatedAt" : "2017-12-05T00:07:15Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "d416301e-ddbb-4cde-a6bd-76ad40e8eead",
        "parentId" : "166c4e0e-7ca9-404e-b27e-d220d9836356",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "Ah, yes! thanks",
        "createdAt" : "2017-12-04T23:56:25Z",
        "updatedAt" : "2017-12-05T00:07:15Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "f922935f2f98907c53232e4950098c2bc0c2bd8b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1455,1459 @@\n\t\t\tif !strings.Contains(stdout, \"hello\") {\n\t\t\t\tframework.Logf(\"Expected output to contain 'hello', got %q; retrying...\", stdout)\n\t\t\t\treturn false, nil\n\t\t\t}"
  },
  {
    "id" : "26c4dff8-d6be-4acf-8dcb-a5f0ce35cb21",
    "prId" : 55426,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55426#pullrequestreview-75562655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "423b01e6-b249-4e8f-bbb4-034a5662bb2e",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks! Probably worth to have a TODO comment?",
        "createdAt" : "2017-11-09T19:33:25Z",
        "updatedAt" : "2017-11-09T19:42:30Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "50c5717f-4313-4000-99cb-feb64ce3b00b",
        "parentId" : "423b01e6-b249-4e8f-bbb4-034a5662bb2e",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Done. Copied over the TODO from my previous PR.",
        "createdAt" : "2017-11-09T19:43:16Z",
        "updatedAt" : "2017-11-09T19:43:16Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "913721ebee1ba6238cfc840ef798655356ea4b18",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +485,489 @@\t\t// requires cloud load-balancer support\n\t\tframework.SkipUnlessProviderIs(\"gce\", \"gke\", \"aws\")\n\t\tif framework.ProviderIs(\"gke\", \"gce\") {\n\t\t\t// Skipping this test for too large clusters due to issue #52495.\n\t\t\t// TODO(MrHohn): Get rid of this when gce-side load-balancer improvements are done."
  },
  {
    "id" : "b89ddaf2-a1bc-43b6-9ec5-d964db698215",
    "prId" : 55275,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55275#pullrequestreview-74935919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74919a44-7d2a-477e-ab1a-c923bd222374",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks for the PR!\r\n\r\nI am hesitate about which exact tests should we skip --- not all of ESIPP tests will create LB (like `should work for type=NodePort` does not). Also, should we skip other non-ESIPP tests that also create LB (like `should only allow access from service loadbalancer source ranges` and `should be able to change the type and ports of a service`)?",
        "createdAt" : "2017-11-07T22:34:00Z",
        "updatedAt" : "2017-11-07T22:34:00Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "0db36889-054b-4d3b-a10a-bd2ce252380c",
        "parentId" : "74919a44-7d2a-477e-ab1a-c923bd222374",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "All the tests that seem to be failing (https://k8s-testgrid.appspot.com/sig-scalability-gce#gce-scale-correctness) are also the ones in this suite. So I think this is fine.",
        "createdAt" : "2017-11-07T22:38:05Z",
        "updatedAt" : "2017-11-07T22:38:05Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "c27161c9-3c3e-45d7-8eab-96c7ced42637",
        "parentId" : "74919a44-7d2a-477e-ab1a-c923bd222374",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Oh.. But I think you're right about the type=NodePort one.\r\nWrt the others on LB, let's keep them for now as they're passing.",
        "createdAt" : "2017-11-07T22:40:35Z",
        "updatedAt" : "2017-11-07T22:40:35Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "04394d76-a37d-470a-8495-090c9071e4fe",
        "parentId" : "74919a44-7d2a-477e-ab1a-c923bd222374",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "So do you suggest adding this check for each of the e2e's except that one?",
        "createdAt" : "2017-11-07T22:42:18Z",
        "updatedAt" : "2017-11-07T22:42:18Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "7ff0f04e-fb7a-4297-b52a-ad637f9be02f",
        "parentId" : "74919a44-7d2a-477e-ab1a-c923bd222374",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "I think it is fine :) It may be too messy to separate them.",
        "createdAt" : "2017-11-07T22:43:35Z",
        "updatedAt" : "2017-11-07T22:43:35Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "9356c7870998a5591a51ec5da97e58e5b50e7f07",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1453,1457 @@\t\t// Skipping this test for too large clusters due to issue #52495.\n\t\t// TODO(MrHohn): Get rid of this when gce-side load-balancer improvements are done.\n\t\tframework.SkipUnlessNodeCountIsAtMost(framework.GCPMaxInstancesInInstanceGroup)\n\n\t\tcs = f.ClientSet"
  },
  {
    "id" : "897f7a23-96ec-4f40-b731-701f142cc5f0",
    "prId" : 54248,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54248#pullrequestreview-70663234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b9dc161-1b81-45db-8483-a6576cf7cf7c",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Does this mean we were not actually using the 2hr timeout till now?",
        "createdAt" : "2017-10-19T19:57:47Z",
        "updatedAt" : "2017-10-19T19:57:47Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "75f51721-a8a7-4145-ae95-2a39b44cb546",
        "parentId" : "7b9dc161-1b81-45db-8483-a6576cf7cf7c",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "This is specifically for ILB test. For the other LB tests we are using 2hr :)",
        "createdAt" : "2017-10-19T19:59:37Z",
        "updatedAt" : "2017-10-19T19:59:37Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f216be89408da4579b1cf998dedca5dd1121333",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1346,1350 @@\t\tcreateTimeout := framework.LoadBalancerCreateTimeoutDefault\n\t\tif nodes := framework.GetReadySchedulableNodesOrDie(cs); len(nodes.Items) > framework.LargeClusterMinNodesNumber {\n\t\t\tcreateTimeout = framework.LoadBalancerCreateTimeoutLarge\n\t\t}\n"
  },
  {
    "id" : "4754d11e-bf3f-4057-8711-0f1b33ab4e37",
    "prId" : 54248,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54248#pullrequestreview-70678382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "471b3abf-4d58-4685-97e6-0ed7b7d645fd",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Btw - instead of totally disabling the test, can we create an LB but with only GCPMaxInstancesInInstanceGroup instances in the target pool?",
        "createdAt" : "2017-10-19T20:00:42Z",
        "updatedAt" : "2017-10-19T20:00:42Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "40d1678b-cf0c-4809-80d5-d002ec946ec7",
        "parentId" : "471b3abf-4d58-4685-97e6-0ed7b7d645fd",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "*InstanceGroup.\r\n\r\nIt could be done, but it would need to be within service/ingress controllers. However, you would then run into other issues. ESIPP would not function properly because a subset of your pods could be on the ignored instances.  Non-ESIPP load balancers would work but the load would be imbalanced.",
        "createdAt" : "2017-10-19T20:07:28Z",
        "updatedAt" : "2017-10-19T20:07:29Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      },
      {
        "id" : "4d5703fc-248f-42c1-828d-2f6fce695e17",
        "parentId" : "471b3abf-4d58-4685-97e6-0ed7b7d645fd",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Sounds reasonable. What does ESIPP stand for btw? :)",
        "createdAt" : "2017-10-19T20:49:19Z",
        "updatedAt" : "2017-10-19T20:49:19Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "0d9a688d-9980-4c33-b9f7-be551f998fa6",
        "parentId" : "471b3abf-4d58-4685-97e6-0ed7b7d645fd",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "ESIPP=External Source IP Preservation :)",
        "createdAt" : "2017-10-19T20:52:19Z",
        "updatedAt" : "2017-10-19T20:52:19Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f216be89408da4579b1cf998dedca5dd1121333",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1341,1345 @@\t\tframework.SkipUnlessProviderIs(\"azure\", \"gke\", \"gce\")\n\t\tif framework.ProviderIs(\"gke\", \"gce\") {\n\t\t\tframework.SkipUnlessNodeCountIsAtMost(framework.GCPMaxInstancesInInstanceGroup)\n\t\t}\n"
  }
]