[
  {
    "id" : "f9993eff-08ab-4064-82f5-6f5ee9af5a64",
    "prId" : 80682,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80682#pullrequestreview-274799300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "@spiffxp  is `[Provider:GCE]` equivalent to `framework.ProviderIs(\"gce\", \"gke\")` in the e2e framework?",
        "createdAt" : "2019-07-31T18:32:13Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "786557bd-075d-4370-9075-812c117d9f77",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "I completely made the tag up out of whole cloth but I feel like we're going to want some way to signify that we want these provider-specific tests to run.  I could do something like `[Feature:GCEProvider]` as well, but this would exclude it from all of the release-master-blocking tests, almost all of which run in GCE and need this tested anyway.  Open to feedback on a more appropriate way to do things here",
        "createdAt" : "2019-07-31T21:20:10Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "bf189174-b260-4339-a7cf-cf5f17c3c717",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "I don't see how this can go up for approval right now, this new test will fail on other providers. I think we need to add a skip in the new test if it's not GCE or GKE. I don't know that we need to decide on a label for it right now.",
        "createdAt" : "2019-08-06T22:32:04Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "f2e20de8-2442-431a-9275-047f3539dc68",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "This test isn't intended to be a Conformance test though, the Conformance part of it will still pass just fine.  This was in service of allowing other tests to be promoted to Conformance (see https://github.com/kubernetes/kubernetes/pull/74977)",
        "createdAt" : "2019-08-07T21:04:39Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "25d9cefe-6db1-4827-8f10-25a5451cf191",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "But why are we adding a failing e2e test (regardless of any conformance question)?",
        "createdAt" : "2019-08-08T16:03:05Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "649de65b-0c3c-48f6-a19b-6b702be0987b",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Once we decide on the best way to do this, please update the documentation\r\nhttps://github.com/kubernetes/community/blob/master/contributors/devel/sig-testing/e2e-tests.md#kinds-of-tests",
        "createdAt" : "2019-08-08T18:00:22Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "76b9c343-f11e-4323-8587-cc4860c955c0",
        "parentId" : "053db519-0527-49ec-874a-9b00c9abe5ff",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "https://github.com/kubernetes/kubernetes/pull/80682#discussion_r309370687 Addressed.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/20010af0de0184410107fb4c7d2f0c4d74db5f15/test/e2e/network/dns.go#L65",
        "createdAt" : "2019-08-14T10:31:40Z",
        "updatedAt" : "2019-08-16T16:42:41Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "78741f149a513f1335dcfd0dde38bb982bdd5fa2",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +62,66 @@\n\t// Added due to #8512. This is critical for GCE and GKE deployments.\n\tginkgo.It(\"should provide DNS for the cluster [Provider:GCE]\", func() {\n\t\tframework.SkipUnlessProviderIs(\"gce\", \"gke\")\n"
  },
  {
    "id" : "be4c33e4-e9d4-4979-9634-6958e809481c",
    "prId" : 74983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74983#pullrequestreview-221861238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "982b6cf9-a258-43a3-ae6c-acdaec5ca3a9",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is an excellent description!",
        "createdAt" : "2019-04-02T19:36:54Z",
        "updatedAt" : "2019-04-02T19:36:55Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f5c3a2980b53a5524f30b19de515b0c6de7f970",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +260,264 @@\t\tTestname: DNS, for ExternalName Services\n\t\tDescription: Create a service with externalName. Pod MUST be able to resolve the address for this service via CNAME. When externalName of this service is changed, Pod MUST resolve to new DNS entry for the service.\n\t\tChange the service type from externalName to ClusterIP, Pod MUST resolve DNS to the service by serving A records.\n\t*/\n\tframework.ConformanceIt(\"should provide DNS for ExternalName services\", func() {"
  },
  {
    "id" : "263e7ad6-6840-4e1d-9cef-d045ff9b6a7f",
    "prId" : 74977,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74977#pullrequestreview-280606472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5cac302-acf2-43b1-a727-5dd9501d9ec4",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "let me check if this will work for IPv6,\r\nmaybe we can use this https://github.com/kubernetes/kubernetes/blob/8e05e8346aaff7797bc4acaa94669915a8672b12/test/e2e/framework/networking_utils.go#L83",
        "createdAt" : "2019-08-26T08:14:14Z",
        "updatedAt" : "2019-09-05T20:45:34Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "e17b7a25-2f94-4a9b-bd04-79b3c44c7265",
        "parentId" : "c5cac302-acf2-43b1-a727-5dd9501d9ec4",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "the test seems to pass, but don't know if we should switch to an IPv6 address if the cluster is IPv6. I think that a simple if will be enough an easier to read since is a hardcoded value\r\n\r\n```\r\ntestServerIP := \"1.1.1.1\"\r\nif framework.TestContext.IPFamily == \"ipv6 {\r\n    testServerIP = \"2001:beef::1\"\r\n}\r\n```",
        "createdAt" : "2019-08-26T09:07:41Z",
        "updatedAt" : "2019-09-05T20:45:34Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "96405153-d1a0-45bd-b79a-0bcc6c0c8ad3",
        "parentId" : "c5cac302-acf2-43b1-a727-5dd9501d9ec4",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Seems good to me above suggestion but as @aojea mentioned, should we switch to an IPv6 address or not, remain in question. I would update code asap get clarity.",
        "createdAt" : "2019-08-26T17:01:34Z",
        "updatedAt" : "2019-09-05T20:45:34Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "c5c11684-9d5b-4762-bd1d-9617858d5c1f",
        "parentId" : "c5cac302-acf2-43b1-a727-5dd9501d9ec4",
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "It doesn't actually need to execute DNS requests, it just uses agnhost to see if the configuration change is made. I expect the configuration change will work regardless of the IP family setting (though actual DNS requests might not...).",
        "createdAt" : "2019-08-28T00:52:24Z",
        "updatedAt" : "2019-09-05T20:45:34Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "439dda15-188e-4889-a390-a7e252fcebe6",
        "parentId" : "c5cac302-acf2-43b1-a727-5dd9501d9ec4",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "I see. While addressing #80193 this should be taken care.",
        "createdAt" : "2019-08-28T06:09:23Z",
        "updatedAt" : "2019-09-05T20:45:34Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb07002d41cbe2dfe1906cd73d7ec6cc5b99ce29",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +406,410 @@\tframework.ConformanceIt(\"should support configurable pod DNS nameservers\", func() {\n\t\tginkgo.By(\"Creating a pod with dnsPolicy=None and customized dnsConfig...\")\n\t\ttestServerIP := \"1.1.1.1\"\n\t\ttestSearchPath := \"resolv.conf.local\"\n\t\ttestAgnhostPod := f.NewAgnhostPod(f.Namespace.Name, \"pause\")"
  },
  {
    "id" : "b1222dce-9b30-4419-8f7f-0bc8e4a49d67",
    "prId" : 72729,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72729#pullrequestreview-207003826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10260f41-f646-4e23-bc1d-76ac6a5fe3da",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I know you didn't create this, but this dupe is weird.  \r\n\r\nAlso, what's the latest base image we use now-a-days @BenTheElder @ixdy ? ",
        "createdAt" : "2019-01-25T20:33:12Z",
        "updatedAt" : "2019-02-12T12:48:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "49b6ffb3-3e86-426d-9370-12580710df81",
        "parentId" : "10260f41-f646-4e23-bc1d-76ac6a5fe3da",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "debian-base is based on stretch.",
        "createdAt" : "2019-01-25T20:49:12Z",
        "updatedAt" : "2019-02-12T12:48:54Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "aef10f6b-e4f5-4c5e-b7af-ed24bac81726",
        "parentId" : "10260f41-f646-4e23-bc1d-76ac6a5fe3da",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm not sure what this discussion means. We should update these images? Add newer ones while maintaining old ones? If there's an AI from this, please file an issue.",
        "createdAt" : "2019-02-22T20:03:13Z",
        "updatedAt" : "2019-02-22T20:03:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb9c594f98e0256f677de3e8c3f4e653fdfcf605",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\t\tnamesToResolve = append(namesToResolve, \"metadata\")\n\t\t}\n\t\twheezyProbeCmd, wheezyFileNames := createProbeCommand(namesToResolve, nil, \"\", \"wheezy\", f.Namespace.Name, framework.TestContext.ClusterDNSDomain)\n\t\tjessieProbeCmd, jessieFileNames := createProbeCommand(namesToResolve, nil, \"\", \"jessie\", f.Namespace.Name, framework.TestContext.ClusterDNSDomain)\n\t\tBy(\"Running these commands on wheezy: \" + wheezyProbeCmd + \"\\n\")"
  },
  {
    "id" : "50e1768c-c170-4989-8297-8ea7c56a64cf",
    "prId" : 59771,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59771#pullrequestreview-98829095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "290b332f-8537-4664-bba6-01de83a32d5d",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Most of the other parts are moving codes. Real change is in here.",
        "createdAt" : "2018-02-23T07:28:12Z",
        "updatedAt" : "2018-02-23T07:28:12Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "a042ee345638d679db7afcdb1a230b56ea9c62d8",
    "line" : 317,
    "diffHunk" : "@@ -1,1 +220,224 @@\t})\n\n\tIt(\"should support configurable pod resolv.conf\", func() {\n\t\tBy(\"Preparing a test DNS service with injected DNS names...\")\n\t\ttestInjectedIP := \"1.1.1.1\""
  }
]