[
  {
    "id" : "cbe48ca5-e436-4498-b09c-5c7600f9ecd8",
    "prId" : 99916,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99916#pullrequestreview-605891466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56b3d7c1-6b96-4313-ae7f-dff4e4655378",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "the test is failing here",
        "createdAt" : "2021-03-07T22:19:54Z",
        "updatedAt" : "2021-03-08T17:45:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "17beeaf47a6653d0765fc75b2b88f9d3849343ef",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +67,71 @@\n\t\tendpointSubset := endpoints.Subsets[0]\n\t\tendpointSlice, err := cs.DiscoveryV1().EndpointSlices(namespace).Get(context.TODO(), name, metav1.GetOptions{})\n\t\tframework.ExpectNoError(err, \"error creating EndpointSlice resource\")\n\t\tif len(endpointSlice.Ports) != len(endpointSubset.Ports) {"
  },
  {
    "id" : "e3631778-d6cd-478f-961f-de52b5e0d96e",
    "prId" : 95019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95019#pullrequestreview-549697435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Sadly I think we need something a bit more advanced here. As an example, we do need to ensure that we're not just creating endpoints for every pod in the cluster. Duplicate endpoints are fine, but endpoints referring to Pods that are not in this Service are not, I don't think we have sufficient coverage for that yet. I think we previously got around this with a check to ensure that all Pods we expected were referenced with Endpoints. That combined with this check to ensure there were no excess endpoints was sufficient, now it's not.",
        "createdAt" : "2020-09-23T21:02:00Z",
        "updatedAt" : "2020-09-23T21:02:00Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "5c1ee888-f750-4dae-9f22-4b3c242d864f",
        "parentId" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I think wojtek added some helper recently along this lines, will check tomorrow, \r\n",
        "createdAt" : "2020-09-23T21:06:49Z",
        "updatedAt" : "2020-09-23T21:06:49Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "dd387735-7737-42c3-8727-db65fe64ddfc",
        "parentId" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "is not all deduplicationg and matchin addresses done in ?\r\nhttps://github.com/kubernetes/kubernetes/blob/beef6ae51245515ed9c68090b9288d986a882c7b/test/e2e/network/endpointslice.go#L314-L317\r\n\r\nIIUIC that functions calls this `hasMatchingEndpointSlices()` just to return the slices, and then it seems to do all dedup that you mention",
        "createdAt" : "2020-09-24T06:51:01Z",
        "updatedAt" : "2020-09-24T06:51:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "34cf1d56-c11a-4baf-85c1-42def2b0927c",
        "parentId" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Sorry for the delay on this! I think there's one more place that needs to change:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/4aef5b8f4c073d24debe8ee85f738a875a8d967e/test/e2e/network/endpointslice.go#L548-L555\r\n\r\nCurrently `numIPs` is based on `len(pods)`. If we changed that logic to instead count the number of unique IPs with something like a set I think that would fix the flakiness here.",
        "createdAt" : "2020-12-10T21:54:16Z",
        "updatedAt" : "2020-12-10T23:04:04Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "621537c5-9eb9-4a15-b3e9-2002c2b2c043",
        "parentId" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "but these are Endpoints, not Slices, len(pods) has to match the number of addresses, the Endpoints doesn't have duplicates, right?",
        "createdAt" : "2020-12-10T23:32:15Z",
        "updatedAt" : "2020-12-10T23:32:15Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ceb99442-f8ad-46dd-a202-4f7f518f9980",
        "parentId" : "4e5914dd-ca97-405b-8236-0b6e788d7fac",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "ðŸ¤¦ you're completely right. Maybe what we'd run into there would be one older EndpointSlice with fewer endpoints than the newer one. Even still, this should fix the majority of flaky tests.",
        "createdAt" : "2020-12-10T23:37:52Z",
        "updatedAt" : "2020-12-10T23:37:52Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "beef6ae51245515ed9c68090b9288d986a882c7b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +526,530 @@\t// valid and tests should only fail here if less EndpointSlices than\n\t// expected are added.\n\tif actualNumEndpoints < numEndpoints {\n\t\tframework.Logf(\"EndpointSlices for %s/%s Service have %d/%d endpoints\", ns, svcName, actualNumEndpoints, numEndpoints)\n\t\treturn esList.Items, false"
  },
  {
    "id" : "4c237d2f-4566-4eda-9126-44eed8aff2cc",
    "prId" : 93907,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93907#pullrequestreview-465493090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "680b3cf9-303b-43bd-a15e-81706c75d0a3",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "do you have to modify any of the callers of `hasMatchingEndpointSlices` with the `numSlices`?",
        "createdAt" : "2020-08-11T22:51:30Z",
        "updatedAt" : "2020-08-11T22:51:30Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "b27aceed-6b9f-4e2f-884c-5e429a51e166",
        "parentId" : "680b3cf9-303b-43bd-a15e-81706c75d0a3",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I don't think so. I changed this function from \"has exactly n slices\" to \"has at least n slices\", so all previously passing tests should still pass here.",
        "createdAt" : "2020-08-11T23:24:23Z",
        "updatedAt" : "2020-08-11T23:24:23Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "17ff005c4b1dea6d4e6d8825f49c54a04ae828f8",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +502,506 @@\t// valid and tests should only fail here if less EndpointSlices than\n\t// expected are added.\n\tif len(esList.Items) < numSlices {\n\t\tframework.Logf(\"Expected at least %d EndpointSlices for Service %s/%s, got %d\", numSlices, ns, svcName, len(esList.Items))\n\t\tfor i, epSlice := range esList.Items {"
  },
  {
    "id" : "ff773d86-6494-47bd-be3a-0db2f5c27570",
    "prId" : 84208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84208#pullrequestreview-308916481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad30047d-a0f2-4257-acfa-629ffc9b591b",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "nit: comment",
        "createdAt" : "2019-10-23T17:57:12Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "fd4045c5-ab7b-4c8e-a588-49eb0c7873e1",
        "parentId" : "ad30047d-a0f2-4257-acfa-629ffc9b591b",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Fixed, thanks!",
        "createdAt" : "2019-10-30T01:01:46Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d2fc09ee81828dc1846125fc0c84a417d2fb98c",
    "line" : 410,
    "diffHunk" : "@@ -1,1 +408,412 @@\n// ensurePodTargetRef ensures that a Pod matches the provided target reference.\nfunc ensurePodTargetRef(pod *v1.Pod, targetRef *v1.ObjectReference) {\n\tif targetRef == nil {\n\t\tframework.Failf(\"Expected TargetRef to not be nil\")"
  },
  {
    "id" : "8105c5d8-4389-4d54-9b42-2e2ad3e0cbc8",
    "prId" : 84208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84208#pullrequestreview-308916542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e8dbe16-88b5-41e6-943f-a5e7a066e1c3",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "nit: create pods before services.\r\nThat might be make the test slightly faster",
        "createdAt" : "2019-10-29T18:09:04Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "b09cc94a-c243-4ba1-8440-2e3f29cce864",
        "parentId" : "6e8dbe16-88b5-41e6-943f-a5e7a066e1c3",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Good catch, that does seem to help.",
        "createdAt" : "2019-10-30T01:02:09Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d2fc09ee81828dc1846125fc0c84a417d2fb98c",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\n\t\tginkgo.It(\"should create Endpoints and EndpointSlices for Pods matching a Service\", func() {\n\t\t\tpod1 := podClient.Create(&v1.Pod{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName: \"pod1\","
  },
  {
    "id" : "8458ebe9-dd6e-4a72-8cb2-546792ae1145",
    "prId" : 84208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84208#pullrequestreview-308917202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83330b63-1168-4b76-9290-bd285b2c58e8",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Consider having a overarching poll, instead of waiting per object.\r\nThis may be more fault tolerant. \r\n```\r\nwait.Poll(\r\n     pod is ready?\r\n     getEndpoints\r\n     getEndpointSlice\r\n     getMatchingEndpoint\r\n     parse \r\n)\r\n    \r\n\r\n```\r\n",
        "createdAt" : "2019-10-29T18:24:44Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "538aa1dd-45c2-4fb5-ab40-38e3860c8e38",
        "parentId" : "83330b63-1168-4b76-9290-bd285b2c58e8",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Good idea. Mostly did this, except split it up into one for both pods, and one for Endpoints and EndpointSlices for each test case, hopefully that makes sense.",
        "createdAt" : "2019-10-30T01:05:15Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d2fc09ee81828dc1846125fc0c84a417d2fb98c",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@// and takes some shortcuts with the assumption that those test cases will be\n// the only caller of this function.\nfunc expectEndpointsAndSlices(cs clientset.Interface, ns string, svc *v1.Service, pods []*v1.Pod, numSubsets, numSlices int, namedPort bool) {\n\tendpointSlices := []discoveryv1alpha1.EndpointSlice{}\n\tendpoints := &v1.Endpoints{}"
  },
  {
    "id" : "8a2950a9-9208-438d-b9c2-58b52e62a045",
    "prId" : 84208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84208#pullrequestreview-314424847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4621cf6-1529-4ab3-9463-ada92e19dd3f",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "is this needed?",
        "createdAt" : "2019-11-08T19:51:40Z",
        "updatedAt" : "2019-11-12T18:22:53Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d2fc09ee81828dc1846125fc0c84a417d2fb98c",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +219,223 @@\t\tpodsByIP[pod.Status.PodIP] = pod\n\t\tif len(pod.Spec.Containers) != 1 {\n\t\t\tframework.Failf(\"Expected pod to have 1 container, got %d\", len(pod.Spec.Containers))\n\t\t}\n\t}"
  }
]