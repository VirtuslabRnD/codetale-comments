[
  {
    "id" : "c0d4f76d-e133-474f-9dbc-a985c23db335",
    "prId" : 102963,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102963#pullrequestreview-687915337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "any objections to delete this test given the new one below?",
        "createdAt" : "2021-06-17T20:59:57Z",
        "updatedAt" : "2021-06-17T20:59:57Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "a7b52ae0-84ed-4168-8d5e-b1e11ab01999",
        "parentId" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I'll keep both, one test direct IP connectivity, the other tests that you also resolve www.google.com",
        "createdAt" : "2021-06-17T22:01:14Z",
        "updatedAt" : "2021-06-17T22:01:14Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ba5c062c-58ec-4d2d-82e9-5eb593f8a4b0",
        "parentId" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "also, if we are pedantic, google.com is not really ipv4 or ipv6, it will depend on the resolver",
        "createdAt" : "2021-06-17T22:04:37Z",
        "updatedAt" : "2021-06-17T22:04:37Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ecc8f48d-2869-4ad9-8086-04231c96799d",
        "parentId" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "fair point, I'm just gonna put it under a new ginkgo.It",
        "createdAt" : "2021-06-17T22:07:34Z",
        "updatedAt" : "2021-06-17T22:07:34Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "13c7697a-a209-4886-9583-07fa5dad7252",
        "parentId" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "you have to add it a Feature tag or it will be running by default, or do you want to filter based on the description?",
        "createdAt" : "2021-06-17T22:14:21Z",
        "updatedAt" : "2021-06-17T22:14:21Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "276063c0-7ab0-462f-88ee-d39bf11bf85e",
        "parentId" : "f665d34a-cc7b-4b5e-81d3-0eb0c9fd8519",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I updated the feature filters to `[Feature:Internet-*]`. I don't think the existing feature tags `Networking-*` are useful since they are too generic and they don't seem to used much outside this package.",
        "createdAt" : "2021-06-20T14:59:52Z",
        "updatedAt" : "2021-06-20T14:59:52Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "afea48d23f0e0d1c37c99d278c015ddef391b8a1",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +82,86 @@\n\tginkgo.It(\"should provide Internet connection for containers [Feature:Networking-IPv4]\", func() {\n\t\tginkgo.By(\"Running container which tries to connect to 8.8.8.8\")\n\t\tframework.ExpectNoError(\n\t\t\tcheckConnectivityToHost(f, \"\", \"connectivity-test\", \"8.8.8.8\", 53, 30))"
  },
  {
    "id" : "5759bab6-b0da-4af8-af93-5880b94f0bbb",
    "prId" : 98124,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98124#pullrequestreview-571247261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c03311c0-c787-4e8f-9e18-fa04b5423e2c",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "EDIT: edited comment to make more sense:\r\n\r\nIt seems like the correct layering here is to do `s/command/args/` in general, the command here should likely be passed as the args (docker CMD) instead of command (ENTRYPOINT), leaving room for entrypoint hijinks later.\r\n\r\nThis also avoids the args = `[]string{\"pause}` defaulting that seems to be WAI when the CMD isn't specified.\r\n\r\nAside: the naming of these things continues to be really unfortunate and the inconsistency doesn't help ðŸ˜ž . It's really ~ \"ArgV\" and \"AppendedToArgV\" :/",
        "createdAt" : "2021-01-18T06:17:14Z",
        "updatedAt" : "2021-01-18T06:20:44Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "bef12c9c-c5b0-46ec-833a-93ae88dee974",
        "parentId" : "c03311c0-c787-4e8f-9e18-fa04b5423e2c",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "i just tried to urbandictionary `WAI` and couldnt figure out what it is :) ? ",
        "createdAt" : "2021-01-19T13:36:34Z",
        "updatedAt" : "2021-01-19T13:36:35Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d757f1c527b28c3cd963329e4add239ddcfb60c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +53,57 @@\tpod := e2epod.NewAgnhostPod(f.Namespace.Name, podName, nil, nil, nil)\n\tpod.Spec.Containers[0].Command = command\n\tpod.Spec.Containers[0].Args = nil // otherwise 'pause` is magically an argument to nc, which causes all hell to break loose\n\tpod.Spec.NodeName = nodeName\n\tpod.Spec.RestartPolicy = v1.RestartPolicyNever"
  },
  {
    "id" : "c21107a9-6406-4987-bc39-12468ed89b86",
    "prId" : 95378,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95378#pullrequestreview-504824160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9483e07-11e4-423b-94f6-f612c84b5cb5",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I would also log the result, so we can see what iptables rules are there\r\n```\r\nframework.Logf(\"host %s iptables rules, %s\",  host, result)\r\n```",
        "createdAt" : "2020-10-08T06:44:29Z",
        "updatedAt" : "2020-10-09T15:59:50Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "40397c78-d979-4a4e-9f6d-3b7b9132eb73",
        "parentId" : "c9483e07-11e4-423b-94f6-f612c84b5cb5",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "But there are normally _a lot_ of iptables rules, and they're normally interesting for debugging.\r\n\r\nThough I guess maybe since this is a `[Disruptive]` test and so only runs in periodics maybe we should err on the side of more pre-emptive debugging...",
        "createdAt" : "2020-10-08T12:21:15Z",
        "updatedAt" : "2020-10-09T15:59:50Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "0dd07b3c-21e7-421c-890c-ffecfea98fa9",
        "parentId" : "c9483e07-11e4-423b-94f6-f612c84b5cb5",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I didn't notice that you are already logging the `iptables-save -t nat` below, that should be enough",
        "createdAt" : "2020-10-08T14:09:31Z",
        "updatedAt" : "2020-10-09T15:59:50Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "55e6eebae2d2977297e407177e9b82b9b6d89412",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +478,482 @@\t\t// chains.\n\n\t\tginkgo.By(\"dumping iptables rules on node \" + host)\n\t\tresult, err := e2essh.SSH(\"sudo iptables-save\", host, framework.TestContext.Provider)\n\t\te2essh.LogResult(result)"
  },
  {
    "id" : "0a88de66-e6e7-4e61-8545-e0a491c87261",
    "prId" : 95276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95276#pullrequestreview-503883791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "430b512a-09c1-4871-af2e-0821a60dc172",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "nit, it is not really stopped, the service is removed, but not a big deal, at least the message is different and will help to spot easier where the test fails",
        "createdAt" : "2020-10-06T07:16:01Z",
        "updatedAt" : "2020-10-06T07:16:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "db2711e9-36ea-4d66-95ec-135e1ba9f7e3",
        "parentId" : "430b512a-09c1-4871-af2e-0821a60dc172",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "ok, will keep for now since its lgtm ",
        "createdAt" : "2020-10-07T13:34:13Z",
        "updatedAt" : "2020-10-07T13:34:14Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8630dc924ad67a110baec00147f3e66d7e9ee8cb",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +379,383 @@\t\t\terr = config.DialFromNode(\"udp\", config.NodeIP, config.NodeUDPPort, config.MaxTries, config.MaxTries, sets.NewString())\n\t\t\tif err != nil {\n\t\t\t\tframework.Failf(\"Failure validating that node port service STOPPED removed properly: %v\", err)\n\t\t\t}\n\t\t})"
  },
  {
    "id" : "db930e8c-460c-49a0-ac43-4a2c2d2b3463",
    "prId" : 94812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94812#pullrequestreview-523795045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12fa7b12-8b97-4fc4-9470-c0769275f49b",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Last time I checked this is also true for all protocols, is that not the case?",
        "createdAt" : "2020-11-04T18:51:41Z",
        "updatedAt" : "2020-11-04T22:37:15Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "d5bc4d94-3c5f-4eba-8101-4bb436aaa223",
        "parentId" : "12fa7b12-8b97-4fc4-9470-c0769275f49b",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I had a problem with the test, I' ve opened an issue with more details about the specific problemand it only happens with UDP #95565",
        "createdAt" : "2020-11-04T22:53:13Z",
        "updatedAt" : "2020-11-04T22:56:35Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +439,443 @@\t\t// xref: #95565\n\t\tginkgo.It(\"should function for pod-Service(hostNetwork): udp\", func() {\n\t\t\te2eskipper.Skipf(\"skip because pods can not reach the endpoint in the same host if using UDP and hostNetwork #95565\")\n\t\t\tconfig := e2enetwork.NewNetworkingTestConfig(f, e2enetwork.EndpointsUseHostNetwork)\n\t\t\tginkgo.By(fmt.Sprintf(\"dialing(udp) %v --> %v:%v (config.clusterIP)\", config.TestContainerPod.Name, config.ClusterIP, e2enetwork.ClusterUDPPort))"
  },
  {
    "id" : "89f532ca-eddb-40b1-89dc-f83948dff3eb",
    "prId" : 94232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94232#pullrequestreview-480181048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52450062-0a14-4355-b3d3-a11cec1e172f",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I think it could be important here to note the original motivation for this test as well. Maybe add a comment about ensuring that connectivity is retained after 1/2 Services targeting a Pod is deleted.",
        "createdAt" : "2020-09-01T22:37:45Z",
        "updatedAt" : "2020-09-01T23:36:44Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "45520302-b715-4199-b2b2-e5e0fe04c636",
        "parentId" : "52450062-0a14-4355-b3d3-a11cec1e172f",
        "authorId" : "795a7242-f965-4c9a-b641-070356320c29",
        "body" : "That is a good point! I will add a clarifying comment. ",
        "createdAt" : "2020-09-01T23:21:53Z",
        "updatedAt" : "2020-09-01T23:36:44Z",
        "lastEditedBy" : "795a7242-f965-4c9a-b641-070356320c29",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6428ae214e349c7f38663cda60cea8b13954122",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +229,233 @@\t\t// This test ensures that in a situation where multiple services exist with the same selector,\n\t\t// deleting one of the services does not affect the connectivity of the remaining service\n\t\tginkgo.It(\"should function for multiple endpoint-Services with same selector\", func() {\n\t\t\tconfig := e2enetwork.NewNetworkingTestConfig(f, false, false)\n\t\t\tginkgo.By(\"creating a second service with same selector\")"
  },
  {
    "id" : "2cbacd63-9a73-464f-864f-68debb8616fa",
    "prId" : 94232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94232#pullrequestreview-480580418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5fe02ba-376c-4a84-ad4f-0d87c4be99d6",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "nit, instead of nodeIP it can be svc2.NodeIP or something that helps to differentiate from the first service.\r\nThis will help debugging in case of failures",
        "createdAt" : "2020-09-02T08:07:06Z",
        "updatedAt" : "2020-09-02T08:07:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6428ae214e349c7f38663cda60cea8b13954122",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +245,249 @@\t\t\tconfig.DialFromEndpointContainer(\"http\", svc2.Spec.ClusterIP, e2enetwork.ClusterHTTPPort, config.MaxTries, 0, config.EndpointHostnames())\n\n\t\t\tginkgo.By(fmt.Sprintf(\"dialing(http) %v (endpoint) --> %v:%v (nodeIP)\", config.EndpointPods[0].Name, config.NodeIP, httpPort))\n\t\t\tconfig.DialFromEndpointContainer(\"http\", config.NodeIP, httpPort, config.MaxTries, 0, config.EndpointHostnames())\n"
  },
  {
    "id" : "da5933dc-b99d-4427-a512-175384ff3560",
    "prId" : 94232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94232#pullrequestreview-480581045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "542b54e5-2c27-40c6-9407-a8365e9221f2",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "same comment as above, something to distinguish in the comment this is the NodePort of the second svc",
        "createdAt" : "2020-09-02T08:07:53Z",
        "updatedAt" : "2020-09-02T08:07:53Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6428ae214e349c7f38663cda60cea8b13954122",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +255,259 @@\t\t\tconfig.DialFromEndpointContainer(\"http\", svc2.Spec.ClusterIP, e2enetwork.ClusterHTTPPort, config.MaxTries, 0, config.EndpointHostnames())\n\n\t\t\tginkgo.By(fmt.Sprintf(\"dialing(http) %v (endpoint) --> %v:%v (nodeIP)\", config.EndpointPods[0].Name, config.NodeIP, httpPort))\n\t\t\tconfig.DialFromEndpointContainer(\"http\", config.NodeIP, httpPort, config.MaxTries, 0, config.EndpointHostnames())\n\t\t})"
  },
  {
    "id" : "ba78be37-d63c-4c06-8b09-47075da689ab",
    "prId" : 73964,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73964#pullrequestreview-203488787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be1cdc77-ade2-4a6d-af57-d67eea5516c4",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "`/swaggerapi` and `/openapi/v2` aren't exact the same (swagger v1.2 vs v2), but it's okay here since we only check url existence",
        "createdAt" : "2019-02-13T21:24:26Z",
        "updatedAt" : "2019-02-13T22:36:25Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "1c77f762-eb95-4901-998a-e1736e510ec0",
        "parentId" : "be1cdc77-ade2-4a6d-af57-d67eea5516c4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes, it's just an existence check",
        "createdAt" : "2019-02-13T22:46:39Z",
        "updatedAt" : "2019-02-13T22:46:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "61340fbb30b728e7e202b4fa121dfc0573ffece9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t\tframework.Logf(\"using newer openapi path for 1.14+ server\")\n\t\t\topenapiPath = \"/openapi/v2\"\n\t\t}\n\n\t\ttests := []struct {"
  }
]