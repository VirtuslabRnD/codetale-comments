[
  {
    "id" : "db424e7d-2279-44f7-b5ad-24b6e1058f94",
    "prId" : 99696,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99696#pullrequestreview-604131596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb768abd-df89-40a5-9e8d-019d0e0eea98",
        "parentId" : null,
        "authorId" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "body" : "Isn't this set unnecessary as it currently is, since `nil` and `[]networkingv1.NetworkPolicyIngressRule{}` are treated the same by networkpolicies?\r\n\r\nInstead, why not use nil/non-nil for this field to track policy types?   i.e. something like\r\n\r\n```\r\nif policy.Spec.Ingress == nil {\r\n    policy.Spec.Ingress = []networkingv1.NetworkPolicyIngressRule{}\r\n    policy.Spec.PolicyTypes = append(policy.Spec.PolicyTypes, networkingv1.PolicyTypeIngress)\r\n}\r\n```\r\n\r\nand drop the `SetSpecPolicyTypes` function, eliminating the error case of accidentally calling one without the other.",
        "createdAt" : "2021-03-03T11:58:04Z",
        "updatedAt" : "2021-03-05T11:23:37Z",
        "lastEditedBy" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "tags" : [
        ]
      },
      {
        "id" : "40d9d132-7aa5-449d-89a9-650fb4ae3bfe",
        "parentId" : "eb768abd-df89-40a5-9e8d-019d0e0eea98",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "good point üëç \r\nupdated.",
        "createdAt" : "2021-03-04T14:02:53Z",
        "updatedAt" : "2021-03-05T11:23:37Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd2af69ef96c1a787af7a975b00ff263b21f7bbf",
    "line" : 568,
    "diffHunk" : "@@ -1,1 +65,69 @@\treturn func(policy *networkingv1.NetworkPolicy) {\n\t\tif policy.Spec.Ingress == nil {\n\t\t\tpolicy.Spec.Ingress = []networkingv1.NetworkPolicyIngressRule{}\n\t\t\tpolicy.Spec.PolicyTypes = append(policy.Spec.PolicyTypes, networkingv1.PolicyTypeIngress)\n\t\t}"
  },
  {
    "id" : "f24eedb7-a94b-4ff8-99d5-50e3d8208022",
    "prId" : 99696,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99696#pullrequestreview-604855425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75d3be8f-1631-47cf-9a00-dbdb1b273349",
        "parentId" : null,
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "The SetObjectMetaName is the same in all functions, maybe it can be moved directly to `CreateNetworkPolicy(name string, fn ...SetFunc)`",
        "createdAt" : "2021-03-05T01:44:16Z",
        "updatedAt" : "2021-03-05T11:23:37Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "2245766d-f6a3-4cc8-85a1-96dd394ecaf6",
        "parentId" : "75d3be8f-1631-47cf-9a00-dbdb1b273349",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "what if I want create networkpolicy whith out object name. like this \r\nhttps://github.com/kubernetes/kubernetes/blob/7a4914014521369be9e5162b869476fdfc7ea2f9/test/e2e/network/netpol/network_policy_api.go#L53-L59\r\n\r\nhere create policy with GenerateName. I want keep it. And I can also add other direct func to offer this param.\r\n",
        "createdAt" : "2021-03-05T07:05:35Z",
        "updatedAt" : "2021-03-05T11:23:37Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd2af69ef96c1a787af7a975b00ff263b21f7bbf",
    "line" : 363,
    "diffHunk" : "@@ -1,1 +42,46 @@}\n\nfunc SetObjectMetaName(name string) SetFunc {\n\treturn func(policy *networkingv1.NetworkPolicy) {\n\t\tpolicy.ObjectMeta.Name = name"
  },
  {
    "id" : "42bf61cf-581b-4240-8a3b-ec1571045fb7",
    "prId" : 99696,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99696#pullrequestreview-604729015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ab09a32-77a4-4f14-9e9f-b218bd918e81",
        "parentId" : null,
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "Same for SpecPodSelectorMatchLabels, the only dynamic part are the network policy rules",
        "createdAt" : "2021-03-05T01:48:10Z",
        "updatedAt" : "2021-03-05T11:23:37Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd2af69ef96c1a787af7a975b00ff263b21f7bbf",
    "line" : 521,
    "diffHunk" : "@@ -1,1 +54,58 @@}\n\nfunc SetSpecPodSelectorMatchLabels(targetLabels map[string]string) SetFunc {\n\treturn func(policy *networkingv1.NetworkPolicy) {\n\t\tpolicy.Spec.PodSelector = metav1.LabelSelector{"
  }
]