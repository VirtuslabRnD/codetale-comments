[
  {
    "id" : "33d1eaa9-0eb1-456f-b1ac-e96c07ac2b81",
    "prId" : 102354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102354#pullrequestreview-686209230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fd4466d-81cc-49d2-b370-4dc743562859",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "This is the part that I'm finding difficult to understand, so each pod has its own service?\r\n",
        "createdAt" : "2021-06-17T10:59:53Z",
        "updatedAt" : "2021-06-17T10:59:53Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "d550cfd0-71c7-4b57-96a6-2f62786b4589",
        "parentId" : "2fd4466d-81cc-49d2-b370-4dc743562859",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "If it is that way, then I finally got it.\r\nPods have assigned a service by name convention, creation happened after, but now we need the IP, so convention is not longer enough to probe them",
        "createdAt" : "2021-06-17T11:13:18Z",
        "updatedAt" : "2021-06-17T13:56:54Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "667b805f-7b27-4c35-9955-cffdfaa385bf",
        "parentId" : "2fd4466d-81cc-49d2-b370-4dc743562859",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Yuppp",
        "createdAt" : "2021-06-17T11:52:03Z",
        "updatedAt" : "2021-06-17T11:52:03Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7f97f552b63977f2b87c56c09fa945d92af2386",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +181,185 @@\tName       string\n\tContainers []*Container\n\tServiceIP  string\n}\n"
  },
  {
    "id" : "b36b0faf-33c4-4b35-9ee3-77dca8636ebd",
    "prId" : 98077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98077#pullrequestreview-668928298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "775a5c71-1c62-42db-8871-f2028838b6c3",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "we should have timeout be in Duration so the suffix is not needed and convert on usage with .Second()",
        "createdAt" : "2021-05-25T17:11:03Z",
        "updatedAt" : "2021-05-25T17:18:37Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "6e87ee33-72b6-4d04-ad4d-1dd139282245",
        "parentId" : "775a5c71-1c62-42db-8871-f2028838b6c3",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "i considered that, but the issue winds up being that theres a very nasty behaviour with the probe function, wherein actually if you do anything *other* then seconds iirc, it hangs *forever* which causes all the tests to fail.\r\nSo maybe we can consider this in a follow on PR a little more carefully ?",
        "createdAt" : "2021-05-26T01:09:49Z",
        "updatedAt" : "2021-05-26T01:10:00Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "eb08da95-cc14-4138-a6ad-3fa5ffd51f6f",
        "parentId" : "775a5c71-1c62-42db-8871-f2028838b6c3",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "https://github.com/kubernetes/kubernetes/issues/102334 <-- i think this is worth thinking about / batching w/ other polish offs, if that works for you @bowei  ? Also a good first issue i think for someone to tackle and look at holistically w/ the struct thing ",
        "createdAt" : "2021-05-26T12:00:53Z",
        "updatedAt" : "2021-05-26T12:00:53Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8651fcb25a7a432c429d00ffa975555ad002010f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +49,53 @@// GetProbeTimeoutSeconds returns a timeout for how long the probe should work before failing a check, and takes windows heuristics into account, where requests can take longer sometimes.\nfunc (m *Model) GetProbeTimeoutSeconds() int {\n\ttimeoutSeconds := 1\n\tif framework.NodeOSDistroIs(\"windows\") {\n\t\ttimeoutSeconds = 3"
  },
  {
    "id" : "1b8ae460-8a87-4786-819e-9c8f76ad5139",
    "prId" : 98077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98077#pullrequestreview-668928628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "528199b2-a73b-4de0-b36a-6edfe962c5c4",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "if we make `NumberOfWorkers` and `TimeoutSeconds` part of the `Model` struct, so they are initialised directly from the `NewModel` or `NewWindowsModel`  you save the getters\r\nBut this is just up to you :)",
        "createdAt" : "2021-05-25T20:33:34Z",
        "updatedAt" : "2021-05-25T20:33:55Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "eac7303a-70e7-433e-9ff6-52d6b25da7d0",
        "parentId" : "528199b2-a73b-4de0-b36a-6edfe962c5c4",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "i think these will still be functions eventually bc we'll have different timeouts for udp and so on....  Windows on UDP is going to be its own animal :) :) ",
        "createdAt" : "2021-05-26T01:11:11Z",
        "updatedAt" : "2021-05-26T01:11:11Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "34e3a474-7507-48d4-96a4-847e760f1021",
        "parentId" : "528199b2-a73b-4de0-b36a-6edfe962c5c4",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "No strong opinion, about the implementation but we should reflect that in comments, having the same tests with different parameters is not good, basically we are modifying the test behaviour to pass , that means that the feature is different in each platform",
        "createdAt" : "2021-05-26T06:14:51Z",
        "updatedAt" : "2021-05-26T06:14:52Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "24b0551b-54be-45b1-8f6a-1da746f31b50",
        "parentId" : "528199b2-a73b-4de0-b36a-6edfe962c5c4",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "ok, can we do that here https://github.com/kubernetes/kubernetes/issues/102334 ?",
        "createdAt" : "2021-05-26T12:01:14Z",
        "updatedAt" : "2021-05-26T12:01:15Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8651fcb25a7a432c429d00ffa975555ad002010f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +57,61 @@\n// GetWorkers returns the number of workers suggested to run when testing, taking windows heuristics into account, where parallel probing is flakier.\nfunc (m *Model) GetWorkers() int {\n\tnumberOfWorkers := 3\n\tif framework.NodeOSDistroIs(\"windows\") {"
  },
  {
    "id" : "3c4afbc2-1363-4dd5-a7b4-4629e6bb19d6",
    "prId" : 97897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97897#pullrequestreview-566187265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2b4850e-137f-4094-b009-85accf2b3b3f",
        "parentId" : null,
        "authorId" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "body" : "This is cool, never tried `porter` before -- what does it do?",
        "createdAt" : "2021-01-11T21:47:03Z",
        "updatedAt" : "2021-01-13T18:34:32Z",
        "lastEditedBy" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "tags" : [
        ]
      },
      {
        "id" : "5c28fedd-97d1-45ac-8b46-72138fe1f5c7",
        "parentId" : "f2b4850e-137f-4094-b009-85accf2b3b3f",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "Porter is the default method used by `networkpolicy/` tests, you set a variable like SERVE_SCTP_PORT_80|81 and it uses the proto/port from the variables instead of arguments in the command line:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/fec1a366c3b17b5d46b79ddac0b8bb04dfd212ee/test/e2e/network/network_policy.go#L2024\r\n\r\nOne issue with `netexec` is even if you pass only the `--sctp-port` a TCP 8080 and UDP 8081 are used, if you change the sctp port in another container it will die with a bind address issue, to reduce the complex I change it to `porter` when SCTP is used:\r\n\r\nfor xref: https://kubernetes.slack.com/archives/C09QZ4DQB/p1610316853393700 ",
        "createdAt" : "2021-01-11T23:06:52Z",
        "updatedAt" : "2021-01-13T18:34:32Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "fd244245-e98b-412d-8e17-dc5d8dace0d1",
        "parentId" : "f2b4850e-137f-4094-b009-85accf2b3b3f",
        "authorId" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "body" : "👍 ",
        "createdAt" : "2021-01-12T11:41:39Z",
        "updatedAt" : "2021-01-13T18:34:32Z",
        "lastEditedBy" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "425e544a6644e22e19165fb560b3faaf21553104",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +285,289 @@\t\t\tValue: \"foo\",\n\t\t})\n\t\tcmd = []string{\"/agnhost\", \"porter\"}\n\tdefault:\n\t\tframework.Failf(\"invalid protocol %v\", c.Protocol)"
  },
  {
    "id" : "a3f5e2e5-109f-4907-b0fd-0d0725940631",
    "prId" : 91592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91592#pullrequestreview-521176050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f5cc8e9-2391-40e6-aa44-cbf166de4d5d",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "question, does it makes sense have a pod listening in multiple protocols, i.e. tcp and udp ?\r\nagnhost supports it",
        "createdAt" : "2020-10-30T21:33:22Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "3989b823-5801-4f93-a8eb-7b85b7cde7ed",
        "parentId" : "3f5cc8e9-2391-40e6-aa44-cbf166de4d5d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "@eth0XFEED %^ ",
        "createdAt" : "2020-10-31T17:50:59Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "f3415524-edf4-4d24-bc9a-ab5a4eff8bd3",
        "parentId" : "3f5cc8e9-2391-40e6-aa44-cbf166de4d5d",
        "authorId" : "1424b13d-a68a-4116-a258-20ac0ee80867",
        "body" : "@aojea i think we have the pod listening for both protocols now but its being accomplished in a multiple container per pod strategy. \r\n\r\nDo i understand correct that you would like to see single container in pod which is binding to both types of protocol sockets ? ",
        "createdAt" : "2020-10-31T18:22:04Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "1424b13d-a68a-4116-a258-20ac0ee80867",
        "tags" : [
        ]
      },
      {
        "id" : "be730b53-0e21-48f8-8d15-64fc0a4b7c0a",
        "parentId" : "3f5cc8e9-2391-40e6-aa44-cbf166de4d5d",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "No no no, no suggesting anything, just that iirc agnhost supports it without multiple containers, is just adding more flags to the agnhost command ... Was wondering if you were aware of this",
        "createdAt" : "2020-10-31T19:06:11Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "272b25bb-4f84-44a5-9276-d7ac4541eef1",
        "parentId" : "3f5cc8e9-2391-40e6-aa44-cbf166de4d5d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "I think the separate containers for different port affords us more flexibility long term, but I could see this going either way ",
        "createdAt" : "2020-10-31T22:34:09Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "36ae8fd91a66409546f4751bfaf36f67941abc8f",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +267,271 @@\n// Spec returns the kube container spec\nfunc (c *Container) Spec() v1.Container {\n\tvar (\n\t\t// agnHostImage is the image URI of AgnHost"
  },
  {
    "id" : "fb735e0e-ce06-4af3-89d0-2058137bd05d",
    "prId" : 91592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91592#pullrequestreview-550847525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acaef04e-7b31-4ebb-b20b-558aefa6355a",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "A comment will help here, so you pass an array with X namespaces, Y pods, Z ports and W protocols and this will output, IIUIC a model will be created with:\r\nX namespaces and Y pods in each namespace\r\neach pod will have W*Z containers, each container listening in one port/protocol",
        "createdAt" : "2020-12-06T16:26:41Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "369b1e78-4017-4187-a69d-e3d5aa46350f",
        "parentId" : "acaef04e-7b31-4ebb-b20b-558aefa6355a",
        "authorId" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "body" : "👍 ",
        "createdAt" : "2020-12-08T12:23:59Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "926b3d62-1827-40fe-b6db-0be5877e79d0",
        "tags" : [
        ]
      },
      {
        "id" : "46f3a5d9-f8cf-46db-a517-804a56b5cbbc",
        "parentId" : "acaef04e-7b31-4ebb-b20b-558aefa6355a",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "done pushing shortly",
        "createdAt" : "2020-12-12T17:24:45Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "2fb72029-8ee5-48cd-8c04-fcff5640070a",
        "parentId" : "acaef04e-7b31-4ebb-b20b-558aefa6355a",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "pushedd",
        "createdAt" : "2020-12-12T17:29:57Z",
        "updatedAt" : "2020-12-23T12:44:21Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "36ae8fd91a66409546f4751bfaf36f67941abc8f",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@\t// build the entire \"model\" for the overall test, which means, building\n\t// namespaces, pods, containers for each protocol.\n\tfor _, ns := range namespaces {\n\t\tvar pods []*Pod\n\t\tfor _, podName := range podNames {"
  }
]