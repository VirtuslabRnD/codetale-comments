[
  {
    "id" : "1a3851db-96c5-410c-b7ad-1f68539fdf11",
    "prId" : 95503,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95503#pullrequestreview-513195142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "This test just touches API surfaces and checks the status codes are 200.\r\nIs it fine to do that without checking actual API behaviors?\r\nI mean POST API could create something and the corresponding test needs to check something is created in general. And the same checks should be implemented for the other APIs also to check API behaviors.",
        "createdAt" : "2020-10-14T21:30:12Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "609a6539-b46a-401c-b8de-eb004cd6fa94",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "The goal of the test is to confirm that the proxy is passing valid requests through and returns a valid responses back for the list of endpoints below. When planning this test the [feedback](https://app.slack.com/client/T09NY5SBT/C09QZ4DQB) was to run [porter](https://github.com/kubernetes/kubernetes/tree/master/test/images/agnhost/porter) from the standard agnhost test image.\r\n\r\n```\r\n                     endpoint                    |                          path                           |      kind\r\n ------------------------------------------------+---------------------------------------------------------+-----------------\r\n  connectCoreV1PutNamespacedPodProxyWithPath     | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n  connectCoreV1PostNamespacedPodProxyWithPath    | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n  connectCoreV1PatchNamespacedPodProxyWithPath   | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n  connectCoreV1OptionsNamespacedPodProxyWithPath | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n  connectCoreV1HeadNamespacedPodProxyWithPath    | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n  connectCoreV1DeleteNamespacedPodProxyWithPath  | /api/v1/namespaces/{namespace}/pods/{name}/proxy/{path} | PodProxyOptions\r\n```\r\n\r\n```\r\n                      endpoint                      |                            path                             |        kind\r\n----------------------------------------------------|-------------------------------------------------------------|---------------------\r\n connectCoreV1PutNamespacedServiceProxyWithPath     | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n connectCoreV1PostNamespacedServiceProxyWithPath    | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n connectCoreV1PatchNamespacedServiceProxyWithPath   | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n connectCoreV1OptionsNamespacedServiceProxyWithPath | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n connectCoreV1HeadNamespacedServiceProxyWithPath    | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n connectCoreV1DeleteNamespacedServiceProxyWithPath  | /api/v1/namespaces/{namespace}/services/{name}/proxy/{path} | ServiceProxyOptions\r\n```",
        "createdAt" : "2020-10-14T22:22:53Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "efdb2968-8e55-4c8a-b4ab-58afb2f402f2",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "> The goal of the test is to confirm that the proxy is passing valid requests through and returns a valid responses back for the list of endpoints below.\r\n\r\nI am raising what is a valid response here.\r\nCurrent test checks response code (HTTP200) only, doesn't the response body contain any values? ",
        "createdAt" : "2020-10-14T22:38:44Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "71070141-1d84-4ebf-a4d2-3559f9c3d275",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "Currently porter will respond with `foo` to any request in the response body. Updating the test to check for that as well.",
        "createdAt" : "2020-10-14T23:00:25Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "80334c4c-0e91-47a2-be65-25959a75a7c0",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Is this verifying whether the correct verb is being received by porter? e.g. If I send a POST and it arrives at the container as a GET, that is incorrect.",
        "createdAt" : "2020-10-20T19:31:08Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "4a10a258-e939-4785-bd04-99bbedf6ea3f",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "At the moment it isn't and I agree that shouldn't happen. Will consider how to update the test for this,",
        "createdAt" : "2020-10-20T20:03:48Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "5461d852-5a17-4196-8f06-cf655c1bd45d",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "I did check the above scenario when I was checking the base proxy endpoints for pods. I was just reflecting the response method back to the client.\r\n```\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/gorilla/mux\"\r\n\t\"log\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc responseFunction(w http.ResponseWriter, r *http.Request) {\r\n\tfmt.Fprintf(w, \"responseFunction: %v -> %v\", r.Method, r.RequestURI)\r\n\tfmt.Printf(\"responseFunction: \\n%v -> %v\\n\", r.Method, r.RequestURI)\r\n}\r\n\r\nfunc handleRequests() {\r\n\tr := mux.NewRouter()\r\n\tr.HandleFunc(\"/\", responseFunction).Methods(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\")\r\n\tlog.Fatal(http.ListenAndServe(\":80\", r))\r\n}\r\n\r\nfunc main() {\r\n\thandleRequests()\r\n}\r\n```\r\nShould porter be updated to support this requirement? or should the test use another method?",
        "createdAt" : "2020-10-20T20:53:58Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      },
      {
        "id" : "8e49784b-d569-4b9e-a6dc-1b2d86b69c58",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "body" : "During the conformance subproject meeting: @johnbelamaric suggested that we update the correct command (or add a new one, or add a flag) to agnhost image to support the above.",
        "createdAt" : "2020-10-20T21:43:30Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "tags" : [
        ]
      },
      {
        "id" : "ce4f8192-c1b8-420d-8433-63cf7be42ef6",
        "parentId" : "60fac176-ce67-459c-865a-f788d14b57ce",
        "authorId" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "body" : "From conformance sub-project meeting today, @johnbelamaric suggested adding a flag option that would support this use case.\r\n\r\nCurrent idea is that it would return a json payload that would include both the http method that porter received and the standard response for that port.",
        "createdAt" : "2020-10-20T22:59:54Z",
        "updatedAt" : "2021-01-18T00:03:40Z",
        "lastEditedBy" : "23d83a23-a06a-4542-a52f-6096ea5648ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c1f3b7d5dfe6f3c3577ac89e425a529495c6953",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +336,340 @@\t\t\t// For all methods other than HEAD the response body returns 'foo' with the received http method\n\t\t\thttpVerbs := []string{\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"}\n\t\t\tfor _, httpVerb := range httpVerbs {\n\n\t\t\t\turlString := f.ClientConfig().Host + \"/api/v1/namespaces/\" + ns + \"/pods/agnhost/proxy/some/path/with/\" + httpVerb"
  },
  {
    "id" : "2d17804c-cabb-4de8-b61b-327e747a34fe",
    "prId" : 77156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77156#pullrequestreview-231406347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "384c4020-ac34-471a-96b1-26a53c977547",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Related to https://github.com/kubernetes/kubernetes/issues/77045",
        "createdAt" : "2019-04-27T02:56:44Z",
        "updatedAt" : "2019-04-27T14:05:50Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "774c15f2beb712910ac86fe5ab8aa27f1c9eb29f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +27,31 @@\t\"time\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\""
  },
  {
    "id" : "a137bea9-838b-4039-9d58-79509e98579b",
    "prId" : 61289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61289#pullrequestreview-104656250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0f435ba-aabc-4906-b425-a3dc00c97966",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the value is set in BeforeEach, so is only valid to check inside the It() blocks",
        "createdAt" : "2018-03-16T17:34:52Z",
        "updatedAt" : "2018-03-16T17:34:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "640126d762c5508badce8657f9c38e736cd45f37",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\t*/\n\t\tframework.ConformanceIt(\"should proxy logs on node with explicit kubelet port \", func() {\n\t\t\tif skipPrefixProxyTests {\n\t\t\t\tframework.Skipf(\"/proxy prefix removed on newer server version\")\n\t\t\t}"
  }
]