[
  {
    "id" : "c9b5ca7f-9492-46bb-9d29-739857a28723",
    "prId" : 84861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84861#pullrequestreview-313679297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "364ce85a-3eb4-4e5f-b30e-6dc84cfe7db9",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "If this is a new test it needs to be added as an e2e and soak for a bit before we promote it (can't be flaky). are there any existing e2e tests for this?",
        "createdAt" : "2019-11-07T22:19:34Z",
        "updatedAt" : "2019-11-15T14:20:17Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "17c5d2b0-b8ac-4d78-8d76-0a1372b4273e",
        "parentId" : "364ce85a-3eb4-4e5f-b30e-6dc84cfe7db9",
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "I would suggest a separate PR that adds this as an e2e test that uses the beta API. That way we get a signal on flakiness. then the PR to promote to GA would only promote, not implement that test",
        "createdAt" : "2019-11-07T22:26:27Z",
        "updatedAt" : "2019-11-15T14:20:17Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      }
    ],
    "commit" : "69282dc4d84a390de451f92c1d20f9672f21b7fe",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\tnew field is defaulted, but old default stays.\n\t*/\n\tframework.ConformanceIt(\"custom resource defaulting for requests and from storage works \", func() {\n\t\tconfig, err := framework.LoadConfig()\n\t\tframework.ExpectNoError(err, \"loading config\")"
  },
  {
    "id" : "40b9745c-9396-4f7a-811d-5f22ff74004d",
    "prId" : 81864,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81864#pullrequestreview-280537999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74e3acbe-c65d-4eec-8f58-66b183484de6",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "can we use the WatchUnsafe version of the call (assuming it is faster?)",
        "createdAt" : "2019-08-27T23:35:46Z",
        "updatedAt" : "2019-08-29T18:51:12Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "c7d8e093-1669-4ac2-bc8a-7f8d85df963f",
        "parentId" : "74e3acbe-c65d-4eec-8f58-66b183484de6",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "updated to use WatchUnsafe",
        "createdAt" : "2019-08-28T00:32:15Z",
        "updatedAt" : "2019-08-29T18:51:12Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7919e64ff337e7404fbf32d5d84c553008c210b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\t\tlabeled custom resource definitions.\n\t\t*/\n\t\tframework.ConformanceIt(\"listing custom resource definition objects works \", func() {\n\t\t\ttestListSize := 10\n\t\t\tconfig, err := framework.LoadConfig()"
  },
  {
    "id" : "d38ad731-b8d0-40a9-9e38-151eac8e5d26",
    "prId" : 81240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81240#pullrequestreview-273377677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3963cbd1-e0a7-46fe-aca8-0a2e73dc11d4",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "imperative form is better for source code:\r\n> Create CRD and wait for the...\r\n",
        "createdAt" : "2019-08-09T22:03:17Z",
        "updatedAt" : "2019-08-14T06:08:22Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "472555152c4b3e1068ac5499dcb7a10d68f5198b",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +58,62 @@\t\t\trandomDefinition := fixtures.NewRandomNameCustomResourceDefinition(v1beta1.ClusterScoped)\n\n\t\t\t// Create CRD and waits for the resource to be recognized and available.\n\t\t\trandomDefinition, err = fixtures.CreateNewCustomResourceDefinition(randomDefinition, apiExtensionClient, f.DynamicClient)\n\t\t\tframework.ExpectNoError(err, \"creating CustomResourceDefinition\")"
  },
  {
    "id" : "4f30809a-5719-4daf-9d74-165e83a56553",
    "prId" : 81240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81240#pullrequestreview-274406116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1902fb6-a599-46d9-80ca-dec35110e402",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Nice cleanup.",
        "createdAt" : "2019-08-13T16:28:48Z",
        "updatedAt" : "2019-08-14T06:08:22Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "472555152c4b3e1068ac5499dcb7a10d68f5198b",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +52,56 @@\n\t\t\tconfig, err := framework.LoadConfig()\n\t\t\tframework.ExpectNoError(err, \"loading config\")\n\t\t\tapiExtensionClient, err := clientset.NewForConfig(config)\n\t\t\tframework.ExpectNoError(err, \"initializing apiExtensionClient\")"
  },
  {
    "id" : "19547fbd-6d44-4d04-9e13-87136a2da082",
    "prId" : 81240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81240#pullrequestreview-274522643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6af63ed2-9b5e-4556-a55b-a9a411944fbe",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "after calling deletecollection with the label selector, verify `crd` (unlabeled CRD) still exists?",
        "createdAt" : "2019-08-13T20:02:12Z",
        "updatedAt" : "2019-08-14T06:08:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "472555152c4b3e1068ac5499dcb7a10d68f5198b",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +122,126 @@\t\t\t// Use delete collection to remove the CRDs\n\t\t\terr = fixtures.DeleteCustomResourceDefinitions(selectorListOpts, apiExtensionClient)\n\t\t\tframework.ExpectNoError(err, \"deleting CustomResourceDefinitions\")\n\t\t\t_, err = apiExtensionClient.ApiextensionsV1beta1().CustomResourceDefinitions().Get(crd.Name, metav1.GetOptions{})\n\t\t\tframework.ExpectNoError(err, \"getting remaining CustomResourceDefinition\")"
  },
  {
    "id" : "7829c4b6-1af3-4641-8cc1-af0dbf054c1a",
    "prId" : 81240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81240#pullrequestreview-274632833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "381f001b-d9f9-4f67-b4a7-e7eb5dc3e802",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "make sure both the `updated` and `patched` conditions are present (the patch didn't remove the earlier update)",
        "createdAt" : "2019-08-14T01:34:41Z",
        "updatedAt" : "2019-08-14T06:08:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "472555152c4b3e1068ac5499dcb7a10d68f5198b",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\t\tframework.ExpectNoError(err, \"patching CustomResourceDefinition status\")\n\t\t\texpectCondition(updated.Status.Conditions, updateCondition)\n\t\t\texpectCondition(patched.Status.Conditions, patchCondition)\n\t\t})\n\t})"
  }
]