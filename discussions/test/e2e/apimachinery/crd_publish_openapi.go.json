[
  {
    "id" : "dccb484b-3649-483d-8839-739d9279a5f8",
    "prId" : 95954,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95954#pullrequestreview-525242482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdd363cb-2a2c-4bdb-922f-6e44a5b3e1b3",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "Can we remove the need for stripping unsupported formats since we now have control over the formats from strfmt?",
        "createdAt" : "2020-11-05T07:45:43Z",
        "updatedAt" : "2020-11-09T09:27:03Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      },
      {
        "id" : "40f46d89-dc73-497a-8ebb-9daa098fc2ed",
        "parentId" : "bdd363cb-2a2c-4bdb-922f-6e44a5b3e1b3",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I think so",
        "createdAt" : "2020-11-06T15:04:36Z",
        "updatedAt" : "2020-11-09T09:27:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f29ba9ec-8c95-40fc-a619-8dc9829ff50e",
        "parentId" : "bdd363cb-2a2c-4bdb-922f-6e44a5b3e1b3",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Am not convinced though. It is another safety net without value to remove it.",
        "createdAt" : "2020-11-06T15:12:42Z",
        "updatedAt" : "2020-11-09T09:27:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "f63b6772cacf3ed430069f3c8157f9121038091e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +686,690 @@\t}\n\tkubeOut := kubeopenapispec.Schema{}\n\tif err := validation.ConvertJSONSchemaPropsWithPostProcess(&internal, &kubeOut, validation.StripUnsupportedFormatsPostProcess); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "d4b53b85-9b6e-4964-9a59-3f1927f73c7b",
    "prId" : 89505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89505#pullrequestreview-400600181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f56d1b5-cda4-4781-b5ee-83157d328d67",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this modified a conformance test and introduced a test that has been flaking. This needs to be done in a non-conformance test first to demonstrate the test is stable. ",
        "createdAt" : "2020-04-27T02:46:59Z",
        "updatedAt" : "2020-04-27T02:47:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4672b650-5fa2-4f77-8b5e-a511f9cd3a59",
        "parentId" : "7f56d1b5-cda4-4781-b5ee-83157d328d67",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "@liggitt should I remove this test from the conformance tests first?",
        "createdAt" : "2020-04-27T02:59:26Z",
        "updatedAt" : "2020-04-27T02:59:26Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "04b88b51-7a91-4f54-a922-a59fa73c1c2f",
        "parentId" : "7f56d1b5-cda4-4781-b5ee-83157d328d67",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Yes, revert the conformance test to its previous state and isolate the new test in a non-conformance e2e test (marked as flaky until the test has been deflaked)",
        "createdAt" : "2020-04-27T03:06:41Z",
        "updatedAt" : "2020-04-27T03:06:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "397f107a0886999e0d45955dfe460112edd9ac5e",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +128,132 @@\n\t\tginkgo.By(\"kubectl explain works for CR with the same resource name as built-in object\")\n\t\tif err := verifyKubectlExplain(f.Namespace.Name, customServiceShortName+\".spec\", `(?s)DESCRIPTION:.*Specification of CustomService.*FIELDS:.*dummy.*<string>.*Dummy property`); err != nil {\n\t\t\tframework.Failf(\"%v\", err)\n\t\t}"
  },
  {
    "id" : "8748f069-7cc1-45dc-8e7a-803755b885ba",
    "prId" : 79636,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79636#pullrequestreview-257643481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d41a2f2c-8444-4f88-ba3e-a49dcad2dc82",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this expect argument is really odd. Our tests are too entangled.",
        "createdAt" : "2019-07-03T17:42:43Z",
        "updatedAt" : "2019-07-03T17:42:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "990c656adbb35e907f56b869a4c4ecddb583f0c5",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +406,410 @@\nfunc setupCRD(f *framework.Framework, schema []byte, groupSuffix string, versions ...string) (*crd.TestCrd, error) {\n\texpect := schema\n\tif schema == nil {\n\t\t// to be backwards compatible, we expect CRD controller to treat"
  },
  {
    "id" : "3feda48d-2ef4-47dc-a7d2-62565821ff6d",
    "prId" : 77927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77927#pullrequestreview-237814593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c3e712b-b520-486e-984a-90feeb117e8a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the input schema was nil, doesn't that mean we should set OpenAPIV3Schema to nil?",
        "createdAt" : "2019-05-15T13:19:15Z",
        "updatedAt" : "2019-05-15T20:24:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fb477f5a-0197-496c-a3d0-510ae69ce5b0",
        "parentId" : "0c3e712b-b520-486e-984a-90feeb117e8a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "oh, nevermind, I see the fallback below",
        "createdAt" : "2019-05-15T13:19:31Z",
        "updatedAt" : "2019-05-15T20:24:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a90cab07f94064e3ef2a1e3ec0ecfa04ba7cbc6a",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +337,341 @@\t}\n\n\tif schema == nil {\n\t\tschema = []byte(`type: object`)\n\t}"
  },
  {
    "id" : "c100ea65-a2e1-4e20-a5c6-cab6f433889e",
    "prId" : 77927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77927#pullrequestreview-240817471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ec86929-f394-4142-875b-51549977001f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this changed behavior... previously if nil was passed in, we did not set a validation schema on the CRD. the defaulting to `type:object` was only done in the value passed to waitForDefinition",
        "createdAt" : "2019-05-22T18:56:56Z",
        "updatedAt" : "2019-05-22T18:56:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a90cab07f94064e3ef2a1e3ec0ecfa04ba7cbc6a",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +337,341 @@\t}\n\n\tif schema == nil {\n\t\tschema = []byte(`type: object`)\n\t}"
  },
  {
    "id" : "115af5ef-083d-4245-a89c-ea9b81ed6ae1",
    "prId" : 77825,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77825#pullrequestreview-239696783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1eff50b-82a3-420c-b059-db1320bf787b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Are there any places where the gate is set via the test framework?",
        "createdAt" : "2019-05-20T18:54:14Z",
        "updatedAt" : "2019-05-23T19:25:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "db1d8552-ab86-4548-9e23-864101888a18",
        "parentId" : "c1eff50b-82a3-420c-b059-db1320bf787b",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "yes, previously alpha [pull](https://github.com/kubernetes/test-infra/pull/11618/files) and [CI](https://github.com/kubernetes/test-infra/pull/12070/files) jobs looked for regex and enabled `api/all=true`. With this change now the test runs in non-alpha jobs (e.g. [blocking presubmit](https://github.com/kubernetes/test-infra/blob/339ad5a261b51893e26fb62213b9de9d2a9dd97f/config/jobs/kubernetes/sig-gcp/sig-gcp-gce-config.yaml#L21-L58)) which don't modify gates. I'll open a pull to remove the regex pattern from alpha jobs",
        "createdAt" : "2019-05-20T20:03:45Z",
        "updatedAt" : "2019-05-23T19:25:29Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "979368ac7dcc34428d61b2fe192f738841783ef5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +50,54 @@)\n\nvar _ = SIGDescribe(\"CustomResourcePublishOpenAPI\", func() {\n\tf := framework.NewDefaultFramework(\"crd-publish-openapi\")\n"
  },
  {
    "id" : "63e93531-fb75-4c32-8240-f7db51771e1b",
    "prId" : 76388,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76388#pullrequestreview-225709310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d875a936-2ed0-4593-a4e8-c15d05d6fea7",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "this could be a TODO for the e2e framework or client-go to expose the underlying HTTP client",
        "createdAt" : "2019-04-11T18:21:50Z",
        "updatedAt" : "2019-04-11T18:28:20Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "b88a99da0c46339f48f571facc60b064ffab2c20",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +450,454 @@\nfunc waitForOpenAPISchema(c k8sclientset.Interface, pred func(*spec.Swagger) (bool, string)) error {\n\tclient := c.CoreV1().RESTClient().(*rest.RESTClient).Client\n\turl := c.CoreV1().RESTClient().Get().AbsPath(\"openapi\", \"v2\").URL()\n\tlastMsg := \"\""
  }
]