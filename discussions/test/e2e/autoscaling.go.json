[
  {
    "id" : "fbb52ed3-52ce-40f2-8c4c-cdafe1d70be2",
    "prId" : 11685,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e723dfc-57a5-427d-822a-7835c704cda7",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Why in 200 MB chunks?\n",
        "createdAt" : "2015-07-22T11:26:30Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "ba81a21f-5e5e-4637-a6a8-659e0f4ab206",
        "parentId" : "2e723dfc-57a5-427d-822a-7835c704cda7",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "It's arbitrary value. Do you have a better one?\n",
        "createdAt" : "2015-07-22T15:21:51Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b6d2c6aef038d3472f427167adf33fa53d0f96e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\tImage:     \"gcr.io/google_containers/pause\",\n\t\tReplicas:  5 * gigabytes,\n\t\tMemLimit:  200 * 1024 * 1024,\n\t}\n\texpectNoError(RunRC(*config))"
  },
  {
    "id" : "13b6dfbd-af94-4f5f-8db5-c1dff7951eec",
    "prId" : 11685,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc51c51-0e32-4d28-9574-1a2aec2d8459",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Please make the API of consume/reserve cpu consistent: the should both take either cores or milicores. The same applies to consume/reserve mem (MG vs. GB).\n",
        "createdAt" : "2015-07-22T11:30:49Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "22fa9e63-b00c-47e0-9766-2424a4e0b77a",
        "parentId" : "ffc51c51-0e32-4d28-9574-1a2aec2d8459",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "There is no possibility to consume fractional part of the core on the other hand it is not possible to schedule pod which limit equals to 1 core so that the API is not consistent. Since it is temporary solution until #11570 is done let's leave it as it is now.\n\nI'll change memory reservation to use gigabytes instead.\n",
        "createdAt" : "2015-07-22T15:21:12Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b6d2c6aef038d3472f427167adf33fa53d0f96e",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@\nfunc ConsumeMemory(f *Framework, id string, gigabytes int) {\n\tBy(fmt.Sprintf(\"Running RC which consumes %v GB of memory\", gigabytes))\n\tconfig := &RCConfig{\n\t\tClient:    f.Client,"
  },
  {
    "id" : "f7b7cf06-7bd8-4f51-8b6a-779dcc50c2d0",
    "prId" : 11685,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38c3350f-e6c2-49a9-b265-8614c8f86fd8",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "In future, it should be integrated with kube-up/kube-down scripts.\n",
        "createdAt" : "2015-07-22T11:34:56Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "49e51f19-b143-476e-9c7f-7efdf8ce7091",
        "parentId" : "38c3350f-e6c2-49a9-b265-8614c8f86fd8",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "I'll add TODO comment.\n",
        "createdAt" : "2015-07-22T15:21:27Z",
        "updatedAt" : "2015-07-22T15:26:18Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b6d2c6aef038d3472f427167adf33fa53d0f96e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +81,85 @@\t// TODO integrate with kube-up.sh script once it will support autoscaler setup.\n\tBy(\"Setting up autoscaler to scale based on \" + metric)\n\t_, err := exec.Command(\"gcloud\", \"preview\", \"autoscaler\",\n\t\t\"--zone=\"+testContext.CloudConfig.Zone,\n\t\t\"create\", \"e2e-test-autoscaler\","
  }
]