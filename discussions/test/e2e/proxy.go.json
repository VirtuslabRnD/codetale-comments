[
  {
    "id" : "a73f036d-6a08-4164-a9a7-87cd464326dc",
    "prId" : 28850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4703d95d-990b-443f-af78-286e6d044bfb",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "the porter image is used infrequently enough (only 2 or 3 times in my search) that I thought it was prudent to detail what it does.\n",
        "createdAt" : "2016-07-12T17:10:33Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50e986fad8098d508e305918169cc8d049eada0",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +112,116 @@\t\t}(service.Name)\n\n\t\t// Make an RC with a single pod. The 'porter' image is\n\t\t// a simple server which serves the values of the\n\t\t// environmental variables below."
  },
  {
    "id" : "08b60b22-da03-4468-bc55-e218570ec649",
    "prId" : 28850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76952489-bd68-4eee-b6a4-ed728e8b8312",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "this needs work. I think I know what it's doing, but I'm not 100% sure what the goal is.\n",
        "createdAt" : "2016-07-12T17:10:57Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "c52d3a10-3c7a-4a6b-a506-3232d11ba385",
        "parentId" : "76952489-bd68-4eee-b6a4-ed728e8b8312",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it just starts a pod that serves content (determined by envvars in the podspec) over tls/non-tls ports\n",
        "createdAt" : "2016-07-25T18:09:26Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50e986fad8098d508e305918169cc8d049eada0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +70,74 @@\n\t// using the porter image to serve content, access the content\n\t// (of multiple pods?) from multiple (endpoints/services?)\n\tIt(\"should proxy through a service and a pod [Conformance]\", func() {\n\t\tstart := time.Now()"
  },
  {
    "id" : "a8e6e893-f41c-4bce-b18c-8527860e45c9",
    "prId" : 28850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f7f0d45-6e6f-4ef4-8958-203a29dbf4d3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the intent was to make the proxy deal with lots of different requests simultaneously... your change inverts that and makes the proxy deal with lots of identical requests simultaneously\n",
        "createdAt" : "2016-07-12T17:40:01Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "65b1e85b-1e30-47aa-9ba3-cda27a466107",
        "parentId" : "3f7f0d45-6e6f-4ef4-8958-203a29dbf4d3",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "I can flip it back the other way if that kind of simultaneity is important, but with a 0.2second pause in between each request, almost none of them were ever actually running simultaneously. They mostly seem to take ~2-10 milliseconds to complete when not stepping on each other.\n",
        "createdAt" : "2016-07-12T17:53:18Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50e986fad8098d508e305918169cc8d049eada0",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\t\t\t}(i, path, val)\n\t\t\t}\n\t\t\twg.Wait()\n\t\t}\n"
  },
  {
    "id" : "f707d9ff-ae7c-46e8-a0a2-06e9343336f3",
    "prId" : 28850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae8efe7e-025c-4611-be29-da42204bf134",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Don't we have the `By(...)` construct for this output?\n",
        "createdAt" : "2016-07-13T06:16:46Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "af558add-3998-4515-863d-c6ca55a96f15",
        "parentId" : "ae8efe7e-025c-4611-be29-da42204bf134",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "Interesting. This is literally my first interactions with the ginkgo library. I'll see what it looks like when I convert text to `By()`s.\n",
        "createdAt" : "2016-07-13T07:42:29Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50e986fad8098d508e305918169cc8d049eada0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +232,236 @@\t\t}\n\t\td := time.Since(start)\n\t\tframework.Logf(\"setup took %v, starting test cases\", d)\n\t\tnumberTestCases := len(expectations)\n\t\ttotalAttempts := numberTestCases * proxyAttempts"
  },
  {
    "id" : "eb459da7-f292-48a5-8925-788d129f8592",
    "prId" : 28850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf0b5e1-faa1-4d39-832b-79decfacdb04",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "+1 for unblocking the client side QPS limitation\n",
        "createdAt" : "2016-07-25T18:11:32Z",
        "updatedAt" : "2016-07-25T21:41:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b50e986fad8098d508e305918169cc8d049eada0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +55,59 @@func proxyContext(version string) {\n\toptions := framework.FrameworkOptions{\n\t\tClientQPS: -1.0,\n\t}\n\tf := framework.NewFramework(\"proxy\", options, nil)"
  },
  {
    "id" : "674fe383-a6e3-46b3-ab4b-abf5685a0687",
    "prId" : 12913,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7ac2adb-af75-4292-ba12-351ed28d8fcd",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "you could always format it with the const\n\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/master/ports/ports.go#L28\n",
        "createdAt" : "2015-08-19T15:10:15Z",
        "updatedAt" : "2015-08-19T15:11:39Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "5692e58e-ef6f-496e-b936-10b8877a3a7b",
        "parentId" : "d7ac2adb-af75-4292-ba12-351ed28d8fcd",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I don't understand what you mean.\n",
        "createdAt" : "2015-08-19T17:11:07Z",
        "updatedAt" : "2015-08-19T17:11:07Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "d3385625-5227-455c-8854-ffc036698011",
        "parentId" : "d7ac2adb-af75-4292-ba12-351ed28d8fcd",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Kind of a nit/suggestion. What I mean is the next line could be:\n\n``` go\nIt(\"should proxy logs on node with explicit kubelet port\", func() {\n     nodeProxyTest(f, version, fmt.Sprintf(\":%v/logs/\", ports.KubeletPort))\n})\n```\n\nThen no need for the comment and we only have one thing to keep in sync which is the pkg/master/ports constants.\n",
        "createdAt" : "2015-08-19T17:27:43Z",
        "updatedAt" : "2015-08-19T17:27:43Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "7e6da76f-2d49-4dfd-a208-d25a876da4a2",
        "parentId" : "d7ac2adb-af75-4292-ba12-351ed28d8fcd",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "This will be no longer true and each Kubelet will be able to have different port.\n",
        "createdAt" : "2015-08-19T17:34:47Z",
        "updatedAt" : "2015-08-19T17:34:47Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "33c894a6ae1a9aba51bd725e2176759206e7f0ec",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +53,57 @@\tprefix := \"/api/\" + version\n\n\t// Port here has to be kept in sync with default kubelet port.\n\tIt(\"should proxy logs on node with explicit kubelet port\", func() { nodeProxyTest(f, version, \":10250/logs/\") })\n"
  },
  {
    "id" : "0eb23a10-10e4-4250-af27-bff245eea0b8",
    "prId" : 9698,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89648709-226e-4ec7-947f-463113e17190",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "nit, a number of `Path(...).` on different lines will make this easier to read.\n",
        "createdAt" : "2015-06-12T22:55:35Z",
        "updatedAt" : "2015-06-13T00:17:52Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "14450090-e252-4a0c-bec1-3b8a8186f138",
        "parentId" : "89648709-226e-4ec7-947f-463113e17190",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, but then the trailing / gets eaten and it doesn't work. Will add a comment.\n",
        "createdAt" : "2015-06-12T23:46:36Z",
        "updatedAt" : "2015-06-13T00:17:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e29245f710b0aa5d1136ae4d639837e28f1df9d5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +46,50 @@\t\tExpect(err).NotTo(HaveOccurred())\n\t\t// AbsPath preserves the trailing '/'.\n\t\tbody, err := f.Client.Get().AbsPath(prefix + \"/proxy/nodes/\" + node + \":10250/logs/\").Do().Raw()\n\t\tif len(body) > 0 {\n\t\t\tif len(body) > 100 {"
  }
]