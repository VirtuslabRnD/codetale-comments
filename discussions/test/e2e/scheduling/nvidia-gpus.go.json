[
  {
    "id" : "c1fdebdd-8aee-4d5d-ada5-50a2103337fc",
    "prId" : 76401,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76401#pullrequestreview-232816649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b4ce684-33c2-4fa3-8bc6-865040a4ff78",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Maybe add a simple comment on why we need to run jo for 5 times? I guess it is to make sure the job runs long enough to experience node recreation?",
        "createdAt" : "2019-05-02T00:47:04Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "49facfeb-99c0-4f0c-92c0-8218a2b61174",
        "parentId" : "4b4ce684-33c2-4fa3-8bc6-865040a4ff78",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "Thanks, updated.",
        "createdAt" : "2019-05-02T01:02:33Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a70a0b42412eca027ae7b4aee5769c83f1ca80f",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +198,202 @@\t_ = SetupNVIDIAGPUNode(f, false)\n\t// Job set to have 5 completions with parallelism of 1 to ensure that it lasts long enough to experience the node recreation\n\tcompletions := int32(5)\n\tginkgo.By(\"Starting GPU job\")\n\tStartJob(f, completions)"
  },
  {
    "id" : "06ed3770-b8b7-4b81-95dd-a044960ef707",
    "prId" : 76401,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76401#pullrequestreview-238133335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This seems pretty fragile. What does \"cuda-vector-add\" actually run?",
        "createdAt" : "2019-05-15T22:31:50Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "5bdd1012-3c16-4826-8e00-991cd506df26",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "cuda-vector-add points to this image: https://github.com/kubernetes/kubernetes/blob/master/test/utils/image/manifest.go#L206\r\nand runs a cuda program the same as this: https://github.com/tpn/cuda-samples/blob/master/v8.0/0_Simple/vectorAdd/vectorAdd.cu",
        "createdAt" : "2019-05-15T23:44:08Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      },
      {
        "id" : "97dbe7b0-5927-493a-b814-649dfeac7ee3",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Looks like this won't catch if you fail to free devices:\r\n\r\nhttps://github.com/tpn/cuda-samples/blob/master/v8.0/0_Simple/vectorAdd/vectorAdd.cu#L168-L188",
        "createdAt" : "2019-05-15T23:45:33Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "1398b50b-04fb-44b3-9d02-1b4afbaae29a",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I guess that's caught by the `Expect(job.Status.Failed).To(BeZero())` check",
        "createdAt" : "2019-05-15T23:46:39Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "532b79b4-f8c0-4e27-9747-e474f93e979f",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "Yea, that should catch, but do you think this should check for \"DONE\" instead of \"PASSED\" to ensure that this device freeing is caught here? The original purpose of the job was to ensure that a cuda pod requiring the nvidia driver could run, which is why I assumed the original job checks for PASSED.",
        "createdAt" : "2019-05-16T00:03:18Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      },
      {
        "id" : "1e1691e1-aa13-48b2-a558-5203bb742706",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This seems fine.",
        "createdAt" : "2019-05-16T00:33:53Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "200ab13d-eedf-48ca-9d62-0aabb2ce6e3d",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This seems fine as is. Thanks.",
        "createdAt" : "2019-05-16T00:33:57Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8de7637f-cbef-4387-bff3-d9ae5937ac1d",
        "parentId" : "06621243-1e10-434b-b5a4-ce0d47e4e131",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "Thanks for going through my PR!",
        "createdAt" : "2019-05-16T00:37:25Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a70a0b42412eca027ae7b4aee5769c83f1ca80f",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +268,272 @@\t\tlogs, err := framework.GetPodLogs(f.ClientSet, ns, podName, \"vector-addition\")\n\t\tframework.ExpectNoError(err, \"Should be able to get logs for pod %v\", podName)\n\t\tregex := regexp.MustCompile(\"PASSED\")\n\t\tif regex.MatchString(logs) {\n\t\t\tsuccesses++"
  },
  {
    "id" : "cdd6157c-29f2-4b0c-90c0-c77587161423",
    "prId" : 76401,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76401#pullrequestreview-238572201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd84f89-7328-41d0-bc70-0b3e172973d3",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Why don't we check this `job.Status.Failed` at line 206?\r\n`job.Status.Failed` doesn't seem to be updated after line 204, am I missing something?",
        "createdAt" : "2019-05-16T17:37:02Z",
        "updatedAt" : "2019-05-16T18:41:25Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "735ea410-134d-4fe1-bdb9-dcad47bd7b44",
        "parentId" : "edd84f89-7328-41d0-bc70-0b3e172973d3",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "There is the node recreation that happens in between line 204 and here. We want to ensure that when nodes are recreated during the job, it doesn't fail.",
        "createdAt" : "2019-05-16T18:43:08Z",
        "updatedAt" : "2019-05-16T18:43:08Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a70a0b42412eca027ae7b4aee5769c83f1ca80f",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +224,228 @@\tginkgo.By(\"Done with gpu job\")\n\n\tgomega.Expect(job.Status.Failed).To(gomega.BeZero(), \"Job pods failed during node recreation: %v\", job.Status.Failed)\n\n\tVerifyJobNCompletions(f, completions)"
  },
  {
    "id" : "4d667a3b-9d85-47ed-84ad-9119371858bc",
    "prId" : 65468,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65468#pullrequestreview-132166058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e23ba355-3fbc-4e9d-81a5-a93065fef869",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Do we also want to remove COS from testNvidiaGPUsOnCOS() function name and the test func description in line 177?",
        "createdAt" : "2018-06-26T17:52:25Z",
        "updatedAt" : "2018-06-26T19:12:36Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "01f76b9a-101a-4692-8254-355860b07d0d",
        "parentId" : "e23ba355-3fbc-4e9d-81a5-a93065fef869",
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "Updated.",
        "createdAt" : "2018-06-26T18:22:24Z",
        "updatedAt" : "2018-06-26T19:12:36Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      },
      {
        "id" : "54630c1c-531d-4774-9ad4-664a0bea2040",
        "parentId" : "e23ba355-3fbc-4e9d-81a5-a93065fef869",
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Maybe also remove \"on Container Optimized OS only\" on line 177?",
        "createdAt" : "2018-06-26T19:05:46Z",
        "updatedAt" : "2018-06-26T19:12:36Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "bf146a55-f99e-4434-941b-123a22472e7f",
        "parentId" : "e23ba355-3fbc-4e9d-81a5-a93065fef869",
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "Done.",
        "createdAt" : "2018-06-26T19:13:18Z",
        "updatedAt" : "2018-06-26T19:13:18Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      }
    ],
    "commit" : "af3bc705b5e511e15f7935abf427bd213e8ef1dd",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +68,72 @@}\n\nfunc logOSImages(f *framework.Framework) {\n\tnodeList, err := f.ClientSet.CoreV1().Nodes().List(metav1.ListOptions{})\n\tframework.ExpectNoError(err, \"getting node list\")"
  },
  {
    "id" : "e551335e-2e4a-4fce-80aa-2422ebd72301",
    "prId" : 53541,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53541#pullrequestreview-68689353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff4845ac-6b52-4ea6-a9a3-a2d5a5035127",
        "parentId" : null,
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "Can you link me to what the final output is supposed to look like? Would it be useful to provide a sample link in the code?",
        "createdAt" : "2017-10-11T04:04:22Z",
        "updatedAt" : "2017-11-14T00:24:56Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      },
      {
        "id" : "1bab4b50-ed1a-4846-8453-665e626003c1",
        "parentId" : "ff4845ac-6b52-4ea6-a9a3-a2d5a5035127",
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "I added the example summary output in the PR description.",
        "createdAt" : "2017-10-11T17:42:23Z",
        "updatedAt" : "2017-11-14T00:24:56Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae36f8ee95d23689ad2889c8b16025c999726a8f",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +209,213 @@\tconstraints := make(map[string]framework.ResourceConstraint)\n\t// For now, just gets summary. Can pass valid constraints in the future.\n\tsummary, err := rsgather.StopAndSummarize([]int{50, 90, 100}, constraints)\n\tf.TestSummaries = append(f.TestSummaries, summary)\n\tframework.ExpectNoError(err, \"getting resource usage summary\")"
  },
  {
    "id" : "022698f5-a239-48ca-8053-aa5152407666",
    "prId" : 53353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53353#pullrequestreview-66954527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2c0c923-8bca-40fe-b959-31436f22d505",
        "parentId" : null,
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "It looks like this whole SIGDescribe block is a duplicate of the one above after this change.",
        "createdAt" : "2017-10-04T00:18:04Z",
        "updatedAt" : "2017-10-04T00:18:04Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      },
      {
        "id" : "cc348f7c-6939-460a-b2b4-282cda800572",
        "parentId" : "d2c0c923-8bca-40fe-b959-31436f22d505",
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "No, this is for device plugins, the one above is for testing the older gpu integration.",
        "createdAt" : "2017-10-04T03:40:34Z",
        "updatedAt" : "2017-10-04T03:40:34Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fecd04924d9992645a12e1f42c638b2b459f0de",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +205,209 @@})\n\nvar _ = SIGDescribe(\"[Feature:GPUDevicePlugin]\", func() {\n\tf := framework.NewDefaultFramework(\"device-plugin-gpus\")\n\tIt(\"run Nvidia GPU Device Plugin tests on Container Optimized OS only\", func() {"
  },
  {
    "id" : "80f0da14-fc96-4310-9a2e-f7707b153c94",
    "prId" : 52375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52375#pullrequestreview-62313321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "576cd0d3-62df-4d95-adc9-739b29ead14d",
        "parentId" : null,
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "Can we move this test to a function?",
        "createdAt" : "2017-09-13T01:58:04Z",
        "updatedAt" : "2017-09-13T01:58:29Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      }
    ],
    "commit" : "06b31849e1e5b52a3b39076c2e81818c32e63754",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +248,252 @@\t\t// 2. Verifies that when the device plugin DaemonSet is removed, resource capacity drops to zero.\n\t\tBy(\"Deleting device plugin daemonset\")\n\t\tds := dsFromManifest(dsYamlUrl)\n\t\tfalseVar := false\n\t\terr := f.ClientSet.Extensions().DaemonSets(f.Namespace.Name).Delete(ds.Name, &metav1.DeleteOptions{OrphanDependents: &falseVar})"
  },
  {
    "id" : "bd75a057-e68c-4eba-a7c3-9e56439b6c26",
    "prId" : 52375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52375#pullrequestreview-62448405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65d7a915-40c6-4cc7-9b66-2cfd3735d6c0",
        "parentId" : null,
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "This is failing: https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/logs/ci-kubernetes-e2e-gce-device-plugin-gpu/20",
        "createdAt" : "2017-09-13T14:03:29Z",
        "updatedAt" : "2017-09-13T14:04:17Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      }
    ],
    "commit" : "06b31849e1e5b52a3b39076c2e81818c32e63754",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +256,260 @@\t\tEventually(func() bool {\n\t\t\treturn !areGPUsAvailableOnAllSchedulableNodes(f)\n\t\t}, 5*time.Minute, time.Second).Should(BeTrue())\n\n\t\t// 3. Restarts the device plugin DaemonSet. Verifies GPU resource is successfully advertised"
  }
]