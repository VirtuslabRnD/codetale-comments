[
  {
    "id" : "3fd02ddb-d346-4a22-91c9-e16deeb46af4",
    "prId" : 10376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "parentId" : null,
        "authorId" : null,
        "body" : "Old code, but I'm pretty sure that you need to handle closed channels in the above for loop.  Github wouldn't let me put this comment there, so it's here :-)\n",
        "createdAt" : "2015-06-26T15:35:28Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "29bdf79e-74f6-486b-9196-dce3cfc323e1",
        "parentId" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Nothing closes those channels, so it should be fine.\n",
        "createdAt" : "2015-06-26T23:29:31Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a8c51055-45f7-4b2c-aa6a-f63ba8b256b8",
        "parentId" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "authorId" : null,
        "body" : "As it stands at the moment, the second for loop will silently deadlock if total is not equal to the sum of errs and duration.  Wouldn't it be better to put a basic timeout on these reads so that you could produce a decent failure message, rather than a silent deadlock.\ne.g here's a simple implementation:\nhttp://blog.golang.org/go-concurrency-patterns-timing-out-and\n",
        "createdAt" : "2015-06-29T20:14:28Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ddbd7433-977b-4ccb-8ccf-20e73b662491",
        "parentId" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "authorId" : null,
        "body" : "PS:  I realize that with the corrent code, this _shouldn't_ happen, but, you know, bugs.\n",
        "createdAt" : "2015-06-29T20:15:13Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ed431193-e913-4ae2-b212-41ac5a1c4a81",
        "parentId" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If I use that pattern here, I have basically the same problem that makes ginkgo's timeout feature useless - outstanding goroutines which might use a *Framework pointer that is deallocated.\n",
        "createdAt" : "2015-06-29T21:27:09Z",
        "updatedAt" : "2015-06-29T21:27:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "70eb1ba2-cbec-4020-8c60-f8c10d977524",
        "parentId" : "26f2c61e-2243-4fc1-a640-14bbc2869283",
        "authorId" : null,
        "body" : "Fair enough.  Add a log message that says \"If this deadlocks, call @lavalamp \" :-)\n",
        "createdAt" : "2015-06-29T21:44:21Z",
        "updatedAt" : "2015-06-29T21:44:21Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "358e90969a1d00cd52148fadd85d38c0902c3708",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +178,182 @@}\n\ntype endpointQuery struct {\n\tendpointsName string\n\tendpoints     *api.Endpoints"
  },
  {
    "id" : "cb68d551-25cf-4d9f-8e56-69d1c390577c",
    "prId" : 10376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e72b70c-eae9-406c-b463-66a0e3efdd1c",
        "parentId" : null,
        "authorId" : null,
        "body" : "Indentation?\n",
        "createdAt" : "2015-06-26T15:48:31Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "3e511d70-6847-483e-b34f-1cc7905d776b",
        "parentId" : "3e72b70c-eae9-406c-b463-66a0e3efdd1c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "gofmt does the indentation :)\n",
        "createdAt" : "2015-06-26T23:29:27Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "72877c6e-042d-4f11-8631-6f6a22667fb6",
        "parentId" : "3e72b70c-eae9-406c-b463-66a0e3efdd1c",
        "authorId" : null,
        "body" : "Fair enough - seems it got confused.\n",
        "createdAt" : "2015-06-29T20:15:47Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "358e90969a1d00cd52148fadd85d38c0902c3708",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +185,189 @@\ntype endpointQueries struct {\n\trequests map[string]*endpointQuery\n\n\tstop        chan struct{}"
  },
  {
    "id" : "e33149c3-78f7-46b5-a149-67d6613bec01",
    "prId" : 10376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6600cbd-e4ce-4d35-bda9-b53b3cda1c45",
        "parentId" : null,
        "authorId" : null,
        "body" : "This is just to check for failures on the above make's, right?  Probably worth a comment explaining.\n",
        "createdAt" : "2015-06-26T15:50:45Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "82560441-69a1-40e3-b354-40d8beb35ca6",
        "parentId" : "e6600cbd-e4ce-4d35-bda9-b53b3cda1c45",
        "authorId" : null,
        "body" : "Noooo!  Sorry - I get it.  Ignore above.\n",
        "createdAt" : "2015-06-26T15:51:17Z",
        "updatedAt" : "2015-06-29T20:33:31Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "358e90969a1d00cd52148fadd85d38c0902c3708",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\tseenChan:    make(chan *api.Endpoints, 100),\n\t}\n\tgo eq.join()\n\treturn eq\n}"
  }
]