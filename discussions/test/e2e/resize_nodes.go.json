[
  {
    "id" : "6d766703-7e70-4b47-9ad7-7ca5c4e0040b",
    "prId" : 44842,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44842#pullrequestreview-34327538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ab5fe4f-dbfa-4f7f-8d46-3ea12ecbf9fe",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Do we need gofmt in our e2e code?",
        "createdAt" : "2017-04-24T14:56:46Z",
        "updatedAt" : "2017-04-25T01:45:12Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "8f998785-c394-42a5-a1bf-3f7a6e583b53",
        "parentId" : "0ab5fe4f-dbfa-4f7f-8d46-3ea12ecbf9fe",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "Already run",
        "createdAt" : "2017-04-24T15:01:05Z",
        "updatedAt" : "2017-04-25T01:45:12Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      },
      {
        "id" : "da6bce7d-3063-464d-978c-13dd3cfadfab",
        "parentId" : "0ab5fe4f-dbfa-4f7f-8d46-3ea12ecbf9fe",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "@sorry, it just seems not gofmt'd :)\r\nUpdate: I reviewed the PR on my phone. The code format on phone looks different from that on PC...",
        "createdAt" : "2017-04-24T15:13:51Z",
        "updatedAt" : "2017-04-25T02:17:24Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4376599ba8826989b82221e2529e9e6fd7e1be9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +37,41 @@\tpodNotReadyTimeout     = 1 * time.Minute\n\tpodReadyTimeout        = 2 * time.Minute\n\ttestPort               = 9376\n)\n"
  },
  {
    "id" : "b50b22b6-018c-4acd-a0ee-76bd36231c36",
    "prId" : 35581,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35581#pullrequestreview-6169295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e685f378-f7ad-444e-bde3-d0b85d0b4bee",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "can you actually check that it has a rfc 1918 prefix?  (10, 172.16, 192.168), or, if you don't think it's worth it please add a comment. If you check it, and it isn't a private ip, you should log an error and stick the ip in externalIP instead.  I don't think it matter which we trust if both this and --api-server turns out to be an external ip. \n",
        "createdAt" : "2016-10-27T17:23:24Z",
        "updatedAt" : "2016-10-27T22:12:32Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "f67e19c5-62b5-41ff-b21e-fed53d4c999e",
        "parentId" : "e685f378-f7ad-444e-bde3-d0b85d0b4bee",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "I've added a TODO for now.\n",
        "createdAt" : "2016-10-27T22:14:08Z",
        "updatedAt" : "2016-10-27T22:14:08Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      },
      {
        "id" : "5ce9b5c3-37f0-4a2f-9520-aa6fe6bfc4f9",
        "parentId" : "e685f378-f7ad-444e-bde3-d0b85d0b4bee",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "You can also just add (since you're re-uping anyway i guess)\n\n``` go\n    internalIPs := []string{\"10.\", \"172.\", \"192.168.\"}\n    for _, cidrs := range internalIPs {\n        if strings.HasPrefix(ip, cidrs) {\n            fmt.Printf(\"internal %v\\n\", ip)\n        }\n    }\n```\n\nslightly inaccurate because the 172 is a /12, but meh\n",
        "createdAt" : "2016-10-28T00:12:43Z",
        "updatedAt" : "2016-10-28T00:12:44Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f2f4ddab4a6ae49c21d025dce95df0e0f5276f8",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +284,288 @@\t\tframework.Failf(\"There are more than 1 endpoints for kubernetes service: %+v\", eps)\n\t}\n\tmaster.internalIP = eps.Subsets[0].Addresses[0].IP\n\n\t// Populate the external IP/hostname."
  },
  {
    "id" : "24962859-aa8d-4486-bea2-b8cad11c7220",
    "prId" : 35581,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35581#pullrequestreview-6170977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c63d532-5c1d-4c0f-bb0b-e8ede589fc92",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "this is not going to be enough right? you need at least host:port. It's less likely for a non standard port in the hostname case, but likely in the ip case.\n",
        "createdAt" : "2016-10-28T00:06:28Z",
        "updatedAt" : "2016-10-28T00:12:44Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "709c8551-6565-4c3d-bb72-80954064a15e",
        "parentId" : "0c63d532-5c1d-4c0f-bb0b-e8ede589fc92",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "Since it is being used to form an iptables rule, doesn't the host field actually suffice? \n",
        "createdAt" : "2016-10-28T00:20:18Z",
        "updatedAt" : "2016-10-28T00:20:18Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      },
      {
        "id" : "95c464ae-dcb1-47e7-85cb-51a430246443",
        "parentId" : "0c63d532-5c1d-4c0f-bb0b-e8ede589fc92",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I guess, if you assume we want to drop all traffic to the ip, what does the rule do? does it match on port? \n",
        "createdAt" : "2016-10-28T00:22:51Z",
        "updatedAt" : "2016-10-28T00:22:51Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "bef99377-783f-4db4-8511-71734a9979a5",
        "parentId" : "0c63d532-5c1d-4c0f-bb0b-e8ede589fc92",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "`sudo iptables --insert OUTPUT --destination <IP> --jump REJECT`\n",
        "createdAt" : "2016-10-28T00:24:54Z",
        "updatedAt" : "2016-10-28T00:24:54Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      },
      {
        "id" : "e33b78cf-5e5f-4150-b032-aed5970950ad",
        "parentId" : "0c63d532-5c1d-4c0f-bb0b-e8ede589fc92",
        "authorId" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "body" : "I think we're blocking off the entire IP address from the looks of it. \nThanks for the review. I'll add the internal/externalIP mechanism you suggested above and re-up.\n",
        "createdAt" : "2016-10-28T00:27:39Z",
        "updatedAt" : "2016-10-28T00:27:39Z",
        "lastEditedBy" : "e535b047-00fc-4269-992a-b8d65bd7c57b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f2f4ddab4a6ae49c21d025dce95df0e0f5276f8",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +293,297 @@\tif net.ParseIP(url.Host) != nil {\n\t\t// TODO: Check that it is external IP (not having a reserved IP address as per RFC1918).\n\t\tmaster.externalIP = url.Host\n\t} else {\n\t\tmaster.hostname = url.Host"
  },
  {
    "id" : "8c8f5d86-0e00-451d-9832-069c80abd422",
    "prId" : 20102,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0889007f-a4d1-4d12-9c94-1c79bda7c060",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "does this actually work? or does it immediately call CoreDump when the `if` block ends?\n",
        "createdAt" : "2016-01-26T01:53:46Z",
        "updatedAt" : "2016-01-26T01:53:46Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "eedf3f3c-78d1-4e0f-abcb-0847ae976858",
        "parentId" : "0889007f-a4d1-4d12-9c94-1c79bda7c060",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "oh, this is probably OK. I was misreading an example in a for loop.\n",
        "createdAt" : "2016-01-26T01:55:04Z",
        "updatedAt" : "2016-01-26T01:55:04Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7164e88a3a62dfc3ad58e8886fd546e90a875953",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +47,51 @@\tif testContext.ReportDir != \"\" {\n\t\tCoreDump(testContext.ReportDir)\n\t\tdefer CoreDump(testContext.ReportDir)\n\t}\n\tif testContext.Provider == \"gce\" || testContext.Provider == \"gke\" {"
  },
  {
    "id" : "979af812-70ba-4137-9022-cdd562b86fdd",
    "prId" : 19731,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75cb81e5-c5d6-4a32-9525-476b5515b88e",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I think there's a test that already does 1, 3 in a slightly less destructive way than dropping all traffic+sleep+undropping, can you just have it do 2 as well (https://github.com/kubernetes/kubernetes/blob/master/test/e2e/resize_nodes.go#L501)? \n",
        "createdAt" : "2016-01-19T18:12:15Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "ec249d03-d75b-4fd7-804b-1553abcc22fa",
        "parentId" : "75cb81e5-c5d6-4a32-9525-476b5515b88e",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Yeah. I was planning to do that too. But that test is trying to observe pod eviction. Then I could not verify if the pod change from NotReady to Ready after recovery.   \n",
        "createdAt" : "2016-01-19T18:58:42Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "e7d3454c-387b-4420-b377-d510b7554133",
        "parentId" : "75cb81e5-c5d6-4a32-9525-476b5515b88e",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "That test should wait till all addons+static pods+pods on the node at the start of the test are ready, if it does not that is a bug. \n\nRegarding your pods (that you create in the test), you're not actually marking them ready right? you're just leaving it to the kubelet, so isn't this like any other kubelet-readiness test i.e is there already a test that checks that pods can successfully go from ready -> not ready -> ready today without the netsplit? \n",
        "createdAt" : "2016-01-19T19:35:42Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "20b4003a-507e-4d9b-8ed0-9ea3cdd9746b",
        "parentId" : "75cb81e5-c5d6-4a32-9525-476b5515b88e",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I believe the e2e framework waits for all node/pod to be ready before it starts and checks node readiness after each test. \n\nBefore #17741, only kubelet manipulates pod status. Now nodecontroller can also mark pod notready. Hence kubelet cannot assume its pod status cache is always valid, this is fixed in #18410.  If just to test #18410, we still need to change pod status without telling kubelet and see if it could correct it. \n\nBasically this test wants to test #17741 and #18410\n",
        "createdAt" : "2016-01-19T20:02:32Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "041a7eed-45df-4281-917d-5ff1ec1acfc2",
        "parentId" : "75cb81e5-c5d6-4a32-9525-476b5515b88e",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Alright, just be prepared if you get assigned a readiness bug :)\n",
        "createdAt" : "2016-01-20T05:05:15Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9611986509573993b6f03205753752a730200860",
    "line" : null,
    "diffHunk" : "@@ -1,1 +613,617 @@\t\t\t// 1. Node is marked NotReady after timeout by nodecontroller (40seconds)\n\t\t\t// 2. All pods on node are marked NotReady shortly after #1\n\t\t\t// 3. Node and pods return to Ready after connectivivty recovers\n\t\t\tIt(\"All pods on the unreachable node should be marked as NotReady upon the node turn NotReady \"+\n\t\t\t\t\"AND all pods should be mark back to Ready when the node get back to Ready before pod eviction timeout\", func() {"
  },
  {
    "id" : "8edaf200-d1e7-453e-bb6a-53ff611f965c",
    "prId" : 19731,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27f13f55-095a-4b3d-bc63-c3b09a0fa775",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "The section between this By and the next feels like it can be isolated into a function (in one case it's notready->ready and the other its ready->notready). Is that easy?\n",
        "createdAt" : "2016-01-23T02:48:22Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9611986509573993b6f03205753752a730200860",
    "line" : 306,
    "diffHunk" : "@@ -1,1 +687,691 @@\t\t\t\t\t}\n\n\t\t\t\t\tBy(\"Expect to observe node and pod status change from NotReady to Ready after network connectivity recovers\")\n\t\t\t\t\texpectNodeReadiness(true, newNode)\n\t\t\t\t\tif err = waitForMatchPodsCondition(c, podOpts, \"Running and Ready\", podReadyTimeout, podRunningReady); err != nil {"
  },
  {
    "id" : "868c90bb-fa30-45bb-aca6-88fa76e61098",
    "prId" : 19731,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd332e92-550b-4d53-b4fc-7e5e17c6475c",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "can you clarify that this returns ip+port for ssh? either via comment or name change\n",
        "createdAt" : "2016-01-23T02:48:25Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "ef664a46-2fd5-46c6-b0fd-086abd0bf344",
        "parentId" : "cd332e92-550b-4d53-b4fc-7e5e17c6475c",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Done\n",
        "createdAt" : "2016-01-25T18:18:29Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "9611986509573993b6f03205753752a730200860",
    "line" : null,
    "diffHunk" : "@@ -1,1 +358,362 @@// Return node external IP concatenated with port 22 for ssh\n// e.g. 1.2.3.4:22\nfunc getNodeExternalIP(node *api.Node) string {\n\tLogf(\"Getting external IP address for %s\", node.Name)\n\thost := \"\""
  },
  {
    "id" : "a2cb1e56-af58-4bfb-9b3b-ee5cc6d523db",
    "prId" : 19731,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "473b94d1-384f-42be-b83f-1898a497fcb5",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Can you move the block and unblock functions into e2e/utils?\n\n```\ntype netsplitHelper struct { timeout time.Time }\n\nfunc (n *netsplitHelper) Block() error {}\nfunc (n *netsplitHelper)Unblock() error {}\n```\n\nI'm alright with a follow up pr that does this, I gather many tests can use this functionality (I have one in mind already). \n",
        "createdAt" : "2016-01-26T22:30:00Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "159bbaba-be68-4aba-b121-982b587fa770",
        "parentId" : "473b94d1-384f-42be-b83f-1898a497fcb5",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I can do a follow up PR. No need to make this one too complex. \n",
        "createdAt" : "2016-01-26T22:56:16Z",
        "updatedAt" : "2016-01-28T22:03:25Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "9611986509573993b6f03205753752a730200860",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +296,300 @@}\n\nfunc blockNetwork(from string, to string) {\n\tLogf(\"block network traffic from %s to %s\", from, to)\n\tiptablesRule := fmt.Sprintf(\"OUTPUT --destination %s --jump REJECT\", to)"
  },
  {
    "id" : "86875b0b-ebcc-474d-bd61-29f8a72521ab",
    "prId" : 19731,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2c71ab7-58f8-462b-b85f-9c7dc67ea93b",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Use the IP instead of host name... This is to avoid external DNS dependancy for iptables.\n",
        "createdAt" : "2016-01-28T22:12:10Z",
        "updatedAt" : "2016-01-28T22:12:10Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "9611986509573993b6f03205753752a730200860",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +344,348 @@\t\t\tFailf(\"There are more than 1 endpoints for kubernetes service: %+v\", eps)\n\t\t}\n\t\tmaster = eps.Subsets[0].Addresses[0].IP\n\tcase \"gke\":\n\t\tmaster = strings.TrimPrefix(testContext.Host, \"https://\")"
  },
  {
    "id" : "55fec393-68f8-4b52-8408-69ff94ceb238",
    "prId" : 17044,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61da5653-2f15-48a6-a917-e1dbe927616e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Wouldn't this lead to some races?\nIf the new node was just added, kube-system pods that are supposed to be running on that node may not have been created yet - or am I missing something?\n",
        "createdAt" : "2015-11-10T08:00:31Z",
        "updatedAt" : "2015-11-10T08:00:31Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "fb556232-7aa7-4603-83fb-79dac369798a",
        "parentId" : "61da5653-2f15-48a6-a917-e1dbe927616e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "The trouble is that when you kill a node, and add a new one things get rescheduled, so things like influx and kube-dns aren't running yet.  And subsequent tests fail because they expect those containers to already be up and running.\n",
        "createdAt" : "2015-11-10T18:03:32Z",
        "updatedAt" : "2015-11-10T18:03:32Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9e65ce6f6fb880bdc3960d15db4301d24b5cf7f",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +417,421 @@\t\t\t// the cluster is restored to health\n\t\t\tBy(\"waiting for system pods to successfully restart\")\n\t\t\tpods, err := framework.Client.Pods(\"kube-system\").List(labels.Everything(), fields.Everything())\n\t\t\tExpect(err).NotTo(HaveOccurred())\n"
  },
  {
    "id" : "efe1ab15-c3d0-43ca-bcab-4935961e3cf6",
    "prId" : 16048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66f20c2c-9290-4c95-87a8-febb8056abe5",
        "parentId" : null,
        "authorId" : null,
        "body" : "Can we move these two functions to e2e/util now that they're being used across multiple tests.  They're definitely not specific to resize_nodes.\n",
        "createdAt" : "2015-10-30T20:11:07Z",
        "updatedAt" : "2015-11-02T22:05:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3943c5afe202609356cd5dea0ca1ed768ee8ac00",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +113,117 @@}\n\nfunc svcByName(name string, port int) *api.Service {\n\treturn &api.Service{\n\t\tObjectMeta: api.ObjectMeta{"
  },
  {
    "id" : "1eaec2a8-bb48-40ca-af66-bb18e6bd32eb",
    "prId" : 11789,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f488f6b1-82ac-4f9b-bb73-de3f7c526e86",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "if I'm understanding this code correctly, there are potentially cases where we pass an empty string to --destination (like if KUBE_MASTER_IP is not set). is that valid behavior?\n",
        "createdAt" : "2015-07-27T22:00:44Z",
        "updatedAt" : "2015-07-27T22:00:44Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a79b0b26-c106-43d8-ae1e-af2ce5ae4569",
        "parentId" : "f488f6b1-82ac-4f9b-bb73-de3f7c526e86",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "I think it's simply a different assumption. We used to assume that `KUBE_MASTER` is set; now, we assume that `KUBE_MASTER_IP` is set (which works for more providers).\n\nDid you want me to add a check at the beginning of the test for this? It would be a fail-safe for future situations / providers that don't have `KUBE_MASTER_IP` set, so would it be all right to do in a future PR if so?\n",
        "createdAt" : "2015-07-28T17:45:17Z",
        "updatedAt" : "2015-07-28T17:45:17Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "6946528b-9bdb-4fe4-b58a-951a3b1e241c",
        "parentId" : "f488f6b1-82ac-4f9b-bb73-de3f7c526e86",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it'd probably be good to verify that `KUBE_MASTER_IP` is set (and fail the test if not), but sure, that can be a separate PR.\n",
        "createdAt" : "2015-07-29T22:58:27Z",
        "updatedAt" : "2015-07-29T22:58:27Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd9e09ba004649ef1c8eea455015e51a4fb41481",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +330,334 @@\t}\n\tBy(fmt.Sprintf(\"block network traffic from node %s to the master\", node.Name))\n\tiptablesRule := fmt.Sprintf(\"OUTPUT --destination %s --jump DROP\",\n\t\tstrings.TrimPrefix(testContext.Host, \"https://\"))\n\tdefer func() {"
  },
  {
    "id" : "9bd6c280-456e-4adc-8e92-913f72780131",
    "prId" : 10745,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aefcaac1-ede6-4b26-ab1e-d4de6a3704ca",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "I was going to suggest you draw these constants out to the top of the file.... but I really don't know whether it matters. Up to you.\n",
        "createdAt" : "2015-07-27T17:55:55Z",
        "updatedAt" : "2015-07-28T16:42:49Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "eb4dc57e-7416-43a4-a3ed-f2747a036f9d",
        "parentId" : "aefcaac1-ede6-4b26-ab1e-d4de6a3704ca",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think it makes a lot of sense where the constant is used more than once.  My gut feel is that when it is only used inside one function, it is more helpful to have the value visible right there.  Happy to change, but that is MHO!\n\nOf course, resizeNodeNotReadyTimeout is only used once, so per that rule it should be in-function.  I'm going to wave my hands here about how it is thematically related to resizeNodeReadyTimeout!\n",
        "createdAt" : "2015-07-28T16:42:40Z",
        "updatedAt" : "2015-07-28T16:42:49Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "a4bbad81-9950-4002-98a5-29613f0368f9",
        "parentId" : "aefcaac1-ede6-4b26-ab1e-d4de6a3704ca",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "I'm convinced (and entertained)!\n",
        "createdAt" : "2015-07-28T17:27:31Z",
        "updatedAt" : "2015-07-28T17:27:31Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "62bb38af214a3773294212b9ebd529fd254d23fa",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +105,109 @@\nfunc waitForGroupSize(size int) error {\n\ttimeout := 4 * time.Minute\n\tfor start := time.Now(); time.Since(start) < timeout; time.Sleep(5 * time.Second) {\n\t\tcurrentSize, err := groupSize()"
  },
  {
    "id" : "828ac54b-d428-464c-b3da-0533010ca8cc",
    "prId" : 10718,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb732c95-3354-4d50-86ae-9f2c3d32ad35",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: I would have preferred a constant defined at the head of this file, but I can live with this as it is.\n",
        "createdAt" : "2015-07-06T23:29:52Z",
        "updatedAt" : "2015-07-06T23:29:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "86640ab3e3319bcc81a487181db2636f7e0bf6c7",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +336,340 @@\t\t// TODO: Use IP address for all clouds?\n\t\t// TODO: Avoid hard-coding this\n\t\tdestination = \"172.20.0.9\"\n\t}\n"
  },
  {
    "id" : "f37629eb-9533-40cc-909c-28914249adbb",
    "prId" : 10197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84d3ca3a-b336-4b75-9048-9f26b976f826",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "was changing the name of the test intended here?\n",
        "createdAt" : "2015-06-23T00:00:20Z",
        "updatedAt" : "2015-06-25T16:51:43Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "42d7404d-4325-4390-b59b-f5779a84c308",
        "parentId" : "84d3ca3a-b336-4b75-9048-9f26b976f826",
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "Intentional, yes. Tho perhaps not exactly related to the goal of this PR.\nThe previous name was ambiguous so I changed it to something that made more sense to me. The comment above it indicates that the test needs to be refactored anyway. So it'll probably get renamed shortly.\n",
        "createdAt" : "2015-06-23T01:22:56Z",
        "updatedAt" : "2015-06-25T16:51:43Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a09cfcee115a345c703f9a87a3418da6620f92",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +495,499 @@\t\t\t// 2. when a node joins the cluster, it can host new pods.\n\t\t\t// Factor out the cases into two separate tests.\n\t\t\tIt(\"[replication controller] recreates pods scheduled on the unreachable minion node \"+\n\t\t\t\t\"AND allows scheduling of pods on a minion after it rejoins the cluster\", func() {\n"
  },
  {
    "id" : "8e50898a-8635-4df1-ad25-4cbe0cfe4901",
    "prId" : 9922,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01d06ef5-a3f7-4cad-9a57-d70535335704",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "this should probably be\n\n```\n} else if testContext.Provider == \"aws\" {\n```\n\nOr do we not have that plumbed through?\nIf it isn't there, this is fine for now, but it'd be nice to leave a TODO to be explicit about what provider this test is running on.\n",
        "createdAt" : "2015-06-19T23:44:05Z",
        "updatedAt" : "2015-06-24T23:01:22Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "03367221-e94f-4449-8b62-07ac013290b6",
        "parentId" : "01d06ef5-a3f7-4cad-9a57-d70535335704",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Well the idea here is that most cloudproviders should just implement the interface (and we should pull it up out of cloudprovider/aws into cloudprovider).  We would eliminated the gcloud call and the provider-switching.  We could also check whether the provider implemented the interface rather than comparing vs a known list.\n\nFor now though, I'll add a comment to say \"//Supported by aws\" so we know which provider this is :-)\n",
        "createdAt" : "2015-06-20T00:29:46Z",
        "updatedAt" : "2015-06-24T23:01:22Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "0cfabd9c-e938-4bfa-9bb8-121ed7f356c9",
        "parentId" : "01d06ef5-a3f7-4cad-9a57-d70535335704",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "SGTM.\n",
        "createdAt" : "2015-06-20T00:41:48Z",
        "updatedAt" : "2015-06-24T23:01:22Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "4461daa218fc3b4d2e91c701461fe0fb7528644a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\t}\n\t\treturn err\n\t} else {\n\t\t// Supported by aws\n\t\tinstanceGroups, ok := testContext.CloudConfig.Provider.(aws_cloud.InstanceGroups)"
  },
  {
    "id" : "53d7cf62-d91a-4072-aab9-a3402e5fb1db",
    "prId" : 9922,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05c7c404-cc15-46b7-9634-8a49e2c997b2",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Same comment about explicit provider here.\n",
        "createdAt" : "2015-06-19T23:44:35Z",
        "updatedAt" : "2015-06-24T23:01:22Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "4461daa218fc3b4d2e91c701461fe0fb7528644a",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\t}\n\t\treturn currentSize, nil\n\t} else {\n\t\t// Supported by aws\n\t\tinstanceGroups, ok := testContext.CloudConfig.Provider.(aws_cloud.InstanceGroups)"
  },
  {
    "id" : "7e94f602-baf7-4ed4-a98f-db3ee6a7ffdf",
    "prId" : 9671,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d67acf87-e063-4fd3-8012-67b529651cf6",
        "parentId" : null,
        "authorId" : null,
        "body" : "What namespace is the pod in?\n",
        "createdAt" : "2015-06-13T19:22:41Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ebbc2be3-6150-45a9-b716-47b986833b71",
        "parentId" : "d67acf87-e063-4fd3-8012-67b529651cf6",
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "This function only creates an API object. It is created in a given namespace in createServeHostnamePodOnNode\n",
        "createdAt" : "2015-06-15T09:09:45Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      },
      {
        "id" : "f903d045-e094-4829-9032-811c61f5fc40",
        "parentId" : "d67acf87-e063-4fd3-8012-67b529651cf6",
        "authorId" : null,
        "body" : "OK\n",
        "createdAt" : "2015-06-16T05:02:15Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a02752ad125941ee375edb9978611a33ddcd35ca",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +127,131 @@}\n\nfunc newPodOnNode(podName, nodeName string, image string) *api.Pod {\n\treturn &api.Pod{\n\t\tObjectMeta: api.ObjectMeta{"
  },
  {
    "id" : "78d21796-4c6a-4134-a13a-660cd4d51d0e",
    "prId" : 9671,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "480fded4-c18c-4008-bac6-a3b885540081",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "need to fail if host is still empty here.\n",
        "createdAt" : "2015-06-17T22:22:18Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "35933e5c-d9cc-480b-a6bc-1922f47d8d60",
        "parentId" : "480fded4-c18c-4008-bac6-a3b885540081",
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "ok\n",
        "createdAt" : "2015-06-18T11:43:02Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      }
    ],
    "commit" : "a02752ad125941ee375edb9978611a33ddcd35ca",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\t\tbreak\n\t\t}\n\t}\n\tif host == \"\" {\n\t\tFailf(\"Couldn't get the external IP of host %s with addresses %v\", node.Name, node.Status.Addresses)"
  },
  {
    "id" : "1678f7f6-233a-4c94-914c-d26ded4e2754",
    "prId" : 9671,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09f2b7ee-13d3-4cb7-9adf-a65ec49e7387",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Shouldn't you only defer this if adding the drop command was successful?\n",
        "createdAt" : "2015-06-17T22:24:20Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "a02752ad125941ee375edb9978611a33ddcd35ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +284,288 @@\t// Use the IP address instead.\n\tiptablesRule := fmt.Sprintf(\"OUTPUT --destination %s --jump DROP\", testContext.CloudConfig.MasterName)\n\tdefer func() {\n\t\t// This code will execute even if setting the iptables rule failed.\n\t\t// It is on purpose because we may have an error even if the new rule"
  },
  {
    "id" : "3255b0c2-25c6-4758-9e41-98e101919ac6",
    "prId" : 9671,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9032f2a4-9210-4a25-94ff-5d1d170903c1",
        "parentId" : null,
        "authorId" : null,
        "body" : "I think, although I'm not 100% sure, that this will prevent your deferred delete from firing.\n",
        "createdAt" : "2015-06-18T00:02:25Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "04e88407-a973-45ce-8afe-f2ad919c5c6f",
        "parentId" : "9032f2a4-9210-4a25-94ff-5d1d170903c1",
        "authorId" : null,
        "body" : "I checked this up, and I was wrong.  Fail causes a panic, which causes deferred to be called as usual.  So you're all good.\n\n\"Fail (and therefore Gomega, since it uses fail) will record a failure for the current space and panic. This allows Ginkgo to stop the current spec in its tracks - no subsequent assertions (or any code for that matter) will be called. Ordinarily Ginkgo will rescue this panic itself and move on to the next test.\"\n",
        "createdAt" : "2015-06-18T00:52:04Z",
        "updatedAt" : "2015-06-18T14:39:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "48b2fb1a-bade-4afb-a580-6c4fa40cd222",
        "parentId" : "9032f2a4-9210-4a25-94ff-5d1d170903c1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes-- deferred things still run when there's a panic unwinding the stack. double-panicing is a bad idea, though.\n",
        "createdAt" : "2015-06-19T19:14:20Z",
        "updatedAt" : "2015-06-19T19:14:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8ebad213-2523-4c55-af3f-43bbb7f34206",
        "parentId" : "9032f2a4-9210-4a25-94ff-5d1d170903c1",
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "@lavalamp , you are absolutely right. I reported #10157\nI'll fix it after 1.0 (unless it causes problems earlier).\n",
        "createdAt" : "2015-06-20T17:35:15Z",
        "updatedAt" : "2015-06-20T17:35:15Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      }
    ],
    "commit" : "a02752ad125941ee375edb9978611a33ddcd35ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +321,325 @@\tdropCmd := fmt.Sprintf(\"sudo iptables --insert %s\", iptablesRule)\n\tif _, _, code, err := SSH(dropCmd, host, testContext.Provider); code != 0 || err != nil {\n\t\tFailf(\"Expected 0 exit code and nil error when running %s on %s, got %d and %v\",\n\t\t\tdropCmd, node.Name, code, err)\n\t}"
  },
  {
    "id" : "bcde1067-d9a7-49d2-9b60-b52563ef7d61",
    "prId" : 8862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bafda9e-fcf1-461d-a353-aceacf45f17c",
        "parentId" : null,
        "authorId" : null,
        "body" : "You'll need to notify the user that the test has been skipped here.  Ideally we would tell the Ginkgo test framework that the test has been skipped, but I don't think that's currently possible.  So I'd suggest failing (Failf(...)) with a message along the lines of:\n\n\"Resize test not supported on provider %s.   You can avoid this failure by using ginkgo.skip=Resize in your environment.\"\n",
        "createdAt" : "2015-06-01T19:52:47Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "3acd64ab-2199-4671-a95c-9146b01e9b51",
        "parentId" : "6bafda9e-fcf1-461d-a353-aceacf45f17c",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I've added ensuring correct provider with failure in BeforeEach.\n",
        "createdAt" : "2015-06-02T08:46:57Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f11ea662cf6880941bfb087e50969ab837f2d4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +256,260 @@\t\tAfterEach(func() {\n\t\t\tif !providerIs(supportedProviders...) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tBy(\"restoring the original node instance group size\")"
  },
  {
    "id" : "661f96bb-9700-46d7-ac30-7ff484321a7c",
    "prId" : 8862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c5ee8db-296a-41d8-bc2a-97f308e28cd2",
        "parentId" : null,
        "authorId" : null,
        "body" : "As per previous comment on this topic.\n",
        "createdAt" : "2015-06-01T20:06:55Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "75567fe8-7df6-4217-9399-f71eda12ce96",
        "parentId" : "2c5ee8db-296a-41d8-bc2a-97f308e28cd2",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Done\n",
        "createdAt" : "2015-06-02T09:05:52Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f11ea662cf6880941bfb087e50969ab837f2d4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +344,348 @@\t\ttestName = \"should survive network partition.\"\n\t\tIt(testName, func() {\n\t\t\tif testContext.CloudConfig.NumNodes < 2 {\n\t\t\t\tBy(fmt.Sprintf(\"skipping %s test, which requires at lease 2 nodes (not %d)\",\n\t\t\t\t\ttestName, testContext.CloudConfig.NumNodes))"
  },
  {
    "id" : "1f25cac7-7ec6-4905-87d3-dc8714a79814",
    "prId" : 8862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ea7ac9e-bad7-471d-959f-9f6eaa8f24f0",
        "parentId" : null,
        "authorId" : null,
        "body" : "The above 10+ lines are a cut 'n paste of the previous test?  Please factor this out into a shared function rather than promote cargo culting.\n",
        "createdAt" : "2015-06-01T20:08:22Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "5f6f16bc-099d-44aa-8197-1aaa51ba2e06",
        "parentId" : "9ea7ac9e-bad7-471d-959f-9f6eaa8f24f0",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I've factored-out method waitForPodsCreatedRunningResponding. It is used many times in these tests. I hope it is good enough now.\n",
        "createdAt" : "2015-06-02T09:50:45Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f11ea662cf6880941bfb087e50969ab837f2d4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +359,363 @@\t\t\tExpect(err).NotTo(HaveOccurred())\n\n\t\t\tBy(\"cause network partition on one node\")\n\t\t\tnodelist, err := c.Nodes().List(labels.Everything(), fields.Everything())\n\t\t\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "19034f13-0674-4560-b327-f2011a2db2c3",
    "prId" : 8862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a88f24b0-e675-4b33-90c1-45ee76c3848d",
        "parentId" : null,
        "authorId" : null,
        "body" : "Each of the By clauses in this test seem to warrant their own function?  This one is getting very long.\n",
        "createdAt" : "2015-06-01T20:11:28Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "fac55e95-a3ba-44b4-94f8-f958b006313c",
        "parentId" : "a88f24b0-e675-4b33-90c1-45ee76c3848d",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I've factored-out method waitForPodsCreatedRunningResponding. The code looks much better now.\n",
        "createdAt" : "2015-06-02T09:50:13Z",
        "updatedAt" : "2015-06-02T11:13:10Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f11ea662cf6880941bfb087e50969ab837f2d4",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +400,404 @@\t\t\twaitForNodeToBe(c, node.Name, true, 2*time.Minute)\n\n\t\t\tBy(\"verify wheter new pods can be created on the re-attached node\")\n\t\t\terr = resizeReplicationController(c, ns, name, replicas+1)\n\t\t\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "9ff2032c-fd9b-4682-ab5d-d34656d1df9e",
    "prId" : 8243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d087ddb-4ebb-4aea-9a66-b67ebacab3ff",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "same comment about affirmative logging here\n",
        "createdAt" : "2015-05-14T21:33:55Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "d33be57a-1894-4bea-a01a-d7b2edc36c88",
        "parentId" : "3d087ddb-4ebb-4aea-9a66-b67ebacab3ff",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Done.\n",
        "createdAt" : "2015-05-15T08:15:00Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef965a60f2422902d52e719553114e86b03c4a86",
    "line" : null,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\tif len(nodes.Items) == size {\n\t\t\tLogf(\"Cluster has reached the desired size %d\", size)\n\t\t\treturn nil\n\t\t}\n\t\tLogf(\"Waiting for cluster size %d, current size %d\", size, len(nodes.Items))"
  },
  {
    "id" : "7abb1e96-c4ce-4ca8-982b-2050f2dac8c8",
    "prId" : 8243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a68616-ec35-4bd3-88f9-c62bc20102be",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Do you have a sense of how long it takes to wait for the cluster to reconcile its size here? I fear that this test will take twice as long as we want it because the observed state takes a while to catch up. If it's slow, could you please file a bug on that component (nodecontroller? on master?) to make it either watch or poll more frequently?\n",
        "createdAt" : "2015-05-14T21:37:35Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "529cfe88-e155-4abe-b998-3f58ff5e4265",
        "parentId" : "e6a68616-ec35-4bd3-88f9-c62bc20102be",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "From my observations, it takes up to 2 minutes to resize MIG (resizing down takes more then up), and about up to 1 minute to change cluster size. I think these duration are resonable, and we don't need to change anything for now.\n",
        "createdAt" : "2015-05-15T13:06:00Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef965a60f2422902d52e719553114e86b03c4a86",
    "line" : null,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t\tFailf(\"Couldn't restore the original node instance group size: %v\", err)\n\t\t}\n\t\tif err := waitForClusterSize(c, testContext.CloudConfig.NumNodes); err != nil {\n\t\t\tFailf(\"Couldn't restore the original cluster size: %v\", err)\n\t\t}"
  },
  {
    "id" : "99b66c23-39d2-4567-944c-81d2068eaab3",
    "prId" : 8243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "647c650d-b813-40a8-abce-cbd83c48e7ee",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "nit: I think you need to run gofmt, as I believe `replicas + 1` should be shrunk down to `replicas+1` (as below)\n",
        "createdAt" : "2015-05-14T21:45:25Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "3c63a0d6-5366-4c07-926f-7fb009c86c21",
        "parentId" : "647c650d-b813-40a8-abce-cbd83c48e7ee",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "verify-gofmt.sh was not complaining, but I've changed it.\n",
        "createdAt" : "2015-05-15T07:47:53Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "403a4fd7-4b94-470d-a33c-e8b9d5eeb59a",
        "parentId" : "647c650d-b813-40a8-abce-cbd83c48e7ee",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Personally I like more whitespaces, but this doesn't matter. Please make it uniform across the file one way or another.\n",
        "createdAt" : "2015-05-15T13:52:47Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "82229ab0-65ee-42af-821d-9e00a7b2133f",
        "parentId" : "647c650d-b813-40a8-abce-cbd83c48e7ee",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Weird, this is enforced by gofmt internally in Google, but apparently not externally. Carry on.\n",
        "createdAt" : "2015-05-15T21:21:05Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef965a60f2422902d52e719553114e86b03c4a86",
    "line" : null,
    "diffHunk" : "@@ -1,1 +320,324 @@\t\terr = resizeNodeInstanceGroup(replicas + 1)\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\terr = waitForNodeInstanceGroupSize(replicas + 1)\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\terr = waitForClusterSize(c, replicas+1)"
  },
  {
    "id" : "de18ccf3-3f42-4ad2-b0ea-651b65a82cc8",
    "prId" : 8243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f4a8972-80c3-485b-9f94-7ccfeb313663",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Because this `for` loop is sequential, this part of the test alone could take 5 minutes times the number of pods, when really we want it to only take 5 minutes total. Could you either parallelize this with channels, or, if that's too much work, add a TODO to do this?\n",
        "createdAt" : "2015-05-15T21:54:57Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "12bc2171-528f-44ee-a797-19fc71dcfae9",
        "parentId" : "9f4a8972-80c3-485b-9f94-7ccfeb313663",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Added TODO.\n",
        "createdAt" : "2015-05-19T21:50:16Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef965a60f2422902d52e719553114e86b03c4a86",
    "line" : null,
    "diffHunk" : "@@ -1,1 +190,194 @@\tBy(\"ensuring each pod is running\")\n\te := []error{}\n\tfor _, pod := range pods.Items {\n\t\t// TODO: make waiting parallel.\n\t\terr := waitForPodRunningInNamespace(c, pod.Name, pod.Namespace)"
  },
  {
    "id" : "66fac8cb-e13c-4ceb-b6e9-bb39a056c44a",
    "prId" : 8243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db00ebca-a8ea-4910-a603-5f02dbb7aeaa",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "You could put all of these calls within the `Expect(...)`, so that they would look like:\n\n``` go\nExpect(resizeNodeInstanceGroup(replicas - 1)).NotTo(HaveOccurred())\n```\n\nHowever, that then reads the exact opposite of what we want, which is ultra-confusing. @roberthbailey any Golang advice here?\n",
        "createdAt" : "2015-05-21T02:27:04Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "c0369f37-2d26-4e09-904c-ec5e3cc3e1d0",
        "parentId" : "db00ebca-a8ea-4910-a603-5f02dbb7aeaa",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "We've chosen elsewhere in our e2e tests to use the pattern that is here, because it's the least worst option (although I agree that it seems silly to have the err variable in the function scope when it could be constrained to the function call). \n",
        "createdAt" : "2015-05-21T17:50:41Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "84b5750d-493c-4d5f-a649-1cd1a12727f0",
        "parentId" : "db00ebca-a8ea-4910-a603-5f02dbb7aeaa",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Ack, thanks; consider this comment resolved.\n",
        "createdAt" : "2015-05-21T18:02:33Z",
        "updatedAt" : "2015-05-22T06:38:00Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef965a60f2422902d52e719553114e86b03c4a86",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\tExpect(err).NotTo(HaveOccurred())\n\n\t\tBy(fmt.Sprintf(\"decreasing cluster size to %d\", replicas-1))\n\t\terr = resizeNodeInstanceGroup(replicas - 1)\n\t\tExpect(err).NotTo(HaveOccurred())"
  }
]