[
  {
    "id" : "8da01cc8-e3ce-483b-962d-2a0fa9d100a2",
    "prId" : 47138,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47138#pullrequestreview-42759614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e46c444-7bbe-4a8f-908e-e7734746bb65",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The recreate isn't necessary to get ",
        "createdAt" : "2017-06-07T22:55:46Z",
        "updatedAt" : "2017-06-07T22:57:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "debdff84-a83b-433d-a2a3-84bb2e86a43d",
        "parentId" : "4e46c444-7bbe-4a8f-908e-e7734746bb65",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Not necessary today, id prefer to future proof.  Ie someone changes how namespace protections work.  This test shouldn't depend on us allowing you to access things outside a namespace ",
        "createdAt" : "2017-06-07T23:20:32Z",
        "updatedAt" : "2017-06-07T23:20:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ad1f80fdcd77edcdd53abec3641c04c80fd9b1e",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +164,168 @@\n\tBy(\"Recreating the namespace\")\n\tnamespace, err = f.CreateNamespace(\"nsdeletetest\", nil)\n\tExpect(err).NotTo(HaveOccurred())\n"
  },
  {
    "id" : "4066a344-d9b0-4888-a596-e387dfa2ba8b",
    "prId" : 47138,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47138#pullrequestreview-42756174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b271f48a-7e50-43fa-bc17-5960a3dbbddb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Same here",
        "createdAt" : "2017-06-07T22:55:51Z",
        "updatedAt" : "2017-06-07T22:57:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ad1f80fdcd77edcdd53abec3641c04c80fd9b1e",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +222,226 @@\n\tBy(\"Recreating the namespace\")\n\tnamespace, err = f.CreateNamespace(\"nsdeletetest\", nil)\n\tExpect(err).NotTo(HaveOccurred())\n"
  },
  {
    "id" : "7c77eafa-497e-4548-b98c-05915c6b7923",
    "prId" : 10658,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce4caec-2282-4554-b765-9250e112ff96",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Since `n` is an integer perhaps this could be `%d` ?\n",
        "createdAt" : "2015-07-02T01:39:24Z",
        "updatedAt" : "2015-07-02T01:39:24Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f3c9e01e50698664fba20192229c3e880609ea",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\t\tdefer wg.Done()\n\t\t\tdefer GinkgoRecover()\n\t\t\t_, err = createTestingNS(fmt.Sprintf(\"nslifetest-%v\", n), c)\n\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t}(n)"
  },
  {
    "id" : "7e89ae5f-8e95-416e-86ef-d8d830fa5d41",
    "prId" : 10658,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20f90cb5-a4e4-4f4f-a673-e04e9b5ed17c",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Since we know that `nsName` is a string this could be `%s` or `%q`\n",
        "createdAt" : "2015-07-02T01:40:35Z",
        "updatedAt" : "2015-07-02T01:40:35Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f3c9e01e50698664fba20192229c3e880609ea",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +74,78 @@\t\t\t\tdefer GinkgoRecover()\n\t\t\t\tExpect(c.Namespaces().Delete(nsName)).To(Succeed())\n\t\t\t\tLogf(\"namespace : %v api call to delete is complete \", nsName)\n\t\t\t}(item.Name)\n\t\t}"
  }
]