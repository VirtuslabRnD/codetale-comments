[
  {
    "id" : "238f3b77-b7b8-4120-9319-3661c2b653c0",
    "prId" : 79238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79238#pullrequestreview-254546293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1360dc0-3d8d-46e5-bf4f-5db9f409ff81",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "same concern about assuming that `image` will be `agnhost` here",
        "createdAt" : "2019-06-26T02:00:25Z",
        "updatedAt" : "2019-06-26T20:34:12Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "75be3b36-ecf8-41b3-b681-351549cb10d5",
        "parentId" : "f1360dc0-3d8d-46e5-bf4f-5db9f409ff81",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "The assumption is correct, the ``image`` variable is defined just above (https://github.com/kubernetes/kubernetes/pull/79238/commits/46b32be8bf06ba318e25e095f44b87c9571cc467#diff-8877b0fe1bb72e9deb2a6289ac74a846R46) and it points to ``frameworkServeHostnameImage``, which is now ``agnhost``.\r\n\r\nI was going to rename ``frameworkServeHostnameImage`` to something else, but that would have generated a lot of useless churn which would have made it harder to review, and, the name ``frameworkServeHostnameImage`` still makes sense: it's an image which can serve hostname.",
        "createdAt" : "2019-06-26T11:36:58Z",
        "updatedAt" : "2019-06-26T20:34:12Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "c752ea8134bfd5f46996aca22215c7fa2c84c43c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +69,73 @@\t\t\t\t\t\t\tName:            daemonSetName,\n\t\t\t\t\t\t\tImage:           image,\n\t\t\t\t\t\t\tArgs:            []string{\"serve-hostname\"},\n\t\t\t\t\t\t\tPorts:           []v1.ContainerPort{{ContainerPort: 9376}},\n\t\t\t\t\t\t\tSecurityContext: &v1.SecurityContext{},"
  },
  {
    "id" : "c2f10e3b-2666-41f0-8821-fa9260de4aeb",
    "prId" : 68881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68881#pullrequestreview-158806503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39478ae6-d304-42d5-beaa-97cfa06ccf0e",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "Is this specific to e2e or are daemonsets pods designed to not tolerate any taints ",
        "createdAt" : "2018-09-25T15:57:20Z",
        "updatedAt" : "2018-09-25T15:57:25Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "4e1c9243-1508-4687-93ff-a436e7cd5b93",
        "parentId" : "39478ae6-d304-42d5-beaa-97cfa06ccf0e",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "specific to e2e which only add default taints.",
        "createdAt" : "2018-09-26T01:48:09Z",
        "updatedAt" : "2018-09-26T01:48:09Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fe15010cffd12bd3b736d6bbfe08503b5d55d01",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\t}\n\t\t// DaemonSet Pods are expected to run on all the nodes in e2e.\n\t\tnodeNames = append(nodeNames, node.Name)\n\t}\n"
  }
]