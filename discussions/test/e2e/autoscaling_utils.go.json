[
  {
    "id" : "75cb08eb-d715-4d89-b2d9-392f4deac418",
    "prId" : 38463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38463#pullrequestreview-12230640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a097449-17ca-4593-a9e1-a4b0968f2c2f",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Did you check whether there is no similar function in test utils?",
        "createdAt" : "2016-12-09T13:41:33Z",
        "updatedAt" : "2016-12-09T13:57:28Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "3e412313-89bb-467e-b105-95d115b95122",
        "parentId" : "6a097449-17ca-4593-a9e1-a4b0968f2c2f",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "There was! Fixed.",
        "createdAt" : "2016-12-09T13:58:27Z",
        "updatedAt" : "2016-12-09T13:58:27Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b070e1724f785776469101ec7a261db5a6cd252",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +397,401 @@\tframework.ExpectNoError(framework.RunRC(controllerRcConfig))\n\n\t// Wait for endpoints to propagate for the controller service.\n\tframework.ExpectNoError(framework.WaitForServiceEndpointsNum(\n\t\tc, ns, controllerName, 1, startServiceInterval, startServiceTimeout))"
  },
  {
    "id" : "b91bb65c-3065-4cb4-8e78-27424cdd3d61",
    "prId" : 14036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afdbfdd4-e69e-4392-83fa-55c978fbc499",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "My intuition here is that this value should be higher but let's tune it in the future as a 'stabilization' effort.\n",
        "createdAt" : "2015-09-16T13:12:30Z",
        "updatedAt" : "2015-09-16T13:12:52Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "e837209f158c23fbdf7d992f3bbc3c970bb62f14",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +32,36 @@\tsleepTime                = 30 * time.Second\n\trequestSizeInMillicores  = 100\n\trequestSizeInMegabytes   = 100\n\tport                     = 80\n\ttargetPort               = 8080"
  },
  {
    "id" : "43c4dade-affe-4ec1-b68f-5d26c1661631",
    "prId" : 13786,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6ed916c-4dbe-4be0-84bf-b1ff1ba69329",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "why do you need to call it here?\n",
        "createdAt" : "2015-09-10T11:08:27Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "8b2a7e64-3186-4701-a186-e04186e58f9c",
        "parentId" : "f6ed916c-4dbe-4be0-84bf-b1ff1ba69329",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "when err (from sending post request) is not nil, then we need defer GinkgoRecover().\nsendOneConsumeCPUrequest is always in a new gorutine.\n",
        "createdAt" : "2015-09-10T11:16:33Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      },
      {
        "id" : "ff80ad3e-cdbe-4a33-8d5b-2ed85504b592",
        "parentId" : "f6ed916c-4dbe-4be0-84bf-b1ff1ba69329",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Ok. Right\n",
        "createdAt" : "2015-09-10T11:19:56Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d199ddabfc963c5c7d19aecfbed41b742c5a8b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +147,151 @@// sendOneConsumeCPURequest sends POST request for cpu consumption\nfunc (rc *ResourceConsumer) sendOneConsumeCPURequest(millicores int, durationSec int) {\n\tdefer GinkgoRecover()\n\t_, err := rc.framework.Client.Post().\n\t\tPrefix(\"proxy\")."
  },
  {
    "id" : "9075aac2-3c80-41fa-8a97-7158fa84aef8",
    "prId" : 13786,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed644a87-b1a8-4739-9cff-ea3151c37344",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Isn't it done in a different PR?\n",
        "createdAt" : "2015-09-10T12:10:05Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "658b17f6-7a9b-4f65-8d4f-9aed226bd12e",
        "parentId" : "ed644a87-b1a8-4739-9cff-ea3151c37344",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "yes. sorry\n",
        "createdAt" : "2015-09-10T12:32:25Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d199ddabfc963c5c7d19aecfbed41b742c5a8b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +31,35 @@\tconsumptionTimeInSeconds = 30\n\tsleepTime                = 30 * time.Second\n\trequestSizeInMillicores  = 100\n\trequestSizeInMegabytes   = 100\n\tport                     = 80"
  },
  {
    "id" : "b49007f3-3d44-4561-8c27-de7095fc75be",
    "prId" : 13786,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6984cd7a-67e3-458b-af32-892d7c8e2b8c",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Where is the namespace deleted?\n",
        "createdAt" : "2015-09-10T12:15:37Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "fb47cb40-3ad4-447f-aa9c-885c83bee1ad",
        "parentId" : "6984cd7a-67e3-458b-af32-892d7c8e2b8c",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "namespace for suite is automatically deleted in horizontal_pod_autoscaling.go.\nwhen tests are done there is info \"STEP: Destroying namespace \"e2e-tests-horizontal-pod-autoscaling-xxxxx\" for this suite\"\n",
        "createdAt" : "2015-09-10T12:24:57Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      },
      {
        "id" : "dd6e0e75-c029-4aea-82d7-3d685012b134",
        "parentId" : "6984cd7a-67e3-458b-af32-892d7c8e2b8c",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "Deletion of experimental objects when Namespace is removed. #13553\n",
        "createdAt" : "2015-09-10T12:42:52Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      },
      {
        "id" : "d93610c6-1c87-4071-a10e-0043960fb166",
        "parentId" : "6984cd7a-67e3-458b-af32-892d7c8e2b8c",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Ok, so if the namespace is deleted why to bother about RC and service?\n",
        "createdAt" : "2015-09-10T12:54:14Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "2c677b38-ed5c-4b48-8b52-3678c19e9c54",
        "parentId" : "6984cd7a-67e3-458b-af32-892d7c8e2b8c",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "The service may still consume resources so you may want to stop the consumption explicitly.\n",
        "createdAt" : "2015-09-10T13:00:47Z",
        "updatedAt" : "2015-09-18T07:38:52Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6d199ddabfc963c5c7d19aecfbed41b742c5a8b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +203,207 @@\trc.stopMem <- 0\n\texpectNoError(DeleteRC(rc.framework.Client, rc.framework.Namespace.Name, rc.name))\n\texpectNoError(rc.framework.Client.Services(rc.framework.Namespace.Name).Delete(rc.name))\n}\n"
  },
  {
    "id" : "fa2fb3be-455e-4e17-826f-4e96ddd622be",
    "prId" : 13640,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cd00102-86b8-4b44-b673-c53bc8f6808d",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I would rename it: ConsumingRC -> ResourceConsumer.\n",
        "createdAt" : "2015-09-07T12:42:33Z",
        "updatedAt" : "2015-09-08T11:29:37Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "f2a38a18-37c8-433a-bfa7-be239572e195",
        "parentId" : "5cd00102-86b8-4b44-b673-c53bc8f6808d",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "done\n",
        "createdAt" : "2015-09-08T09:15:59Z",
        "updatedAt" : "2015-09-08T11:29:37Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ddbb7d96b60ebe25c870d502090a11323ba2dcf",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +49,53 @@type ResourceConsumer struct {\n\tname      string\n\tframework *Framework\n\tchannel   chan int\n\tstop      chan int"
  },
  {
    "id" : "22834d9f-3db4-4cca-ad79-003e2c373adf",
    "prId" : 13640,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1011810-ebd2-4d47-bb9f-ff7a3d51912c",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Pleas comment what is the unit of cpu argument (milicores?)\n",
        "createdAt" : "2015-09-08T10:05:44Z",
        "updatedAt" : "2015-09-08T11:29:37Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "bbb44b65-fd9f-4d68-9b85-c6916327784d",
        "parentId" : "f1011810-ebd2-4d47-bb9f-ff7a3d51912c",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "done\n",
        "createdAt" : "2015-09-08T11:30:08Z",
        "updatedAt" : "2015-09-08T11:30:08Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ddbb7d96b60ebe25c870d502090a11323ba2dcf",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +54,58 @@}\n\n// NewResourceConsumer creates new ResourceConsumer\n// cpu argument is in milicores\nfunc NewResourceConsumer(name string, replicas int, cpu int, framework *Framework) *ResourceConsumer {"
  },
  {
    "id" : "c6f24a9f-bc3c-4c5a-8d3e-71e01e395794",
    "prId" : 13640,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea6f90cd-a97f-414b-b8c6-5f4e3b66775b",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "@socaa This is a very bad pattern when you clean up here resources created by someone else. Please move this call to test/e2e/horizontal_pod_autoscaling.go\n",
        "createdAt" : "2015-09-09T13:09:02Z",
        "updatedAt" : "2015-09-09T13:09:02Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "807cd495-6911-473e-b37c-195d668e4060",
        "parentId" : "ea6f90cd-a97f-414b-b8c6-5f4e3b66775b",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "Horizontal Pod Autoscaler is deleted along with namespace (changes in new PR: #13786 )\n",
        "createdAt" : "2015-09-10T10:12:30Z",
        "updatedAt" : "2015-09-10T10:12:30Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ddbb7d96b60ebe25c870d502090a11323ba2dcf",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +143,147 @@\texpectNoError(DeleteRC(rc.framework.Client, rc.framework.Namespace.Name, rc.name))\n\texpectNoError(rc.framework.Client.Services(rc.framework.Namespace.Name).Delete(rc.name))\n\texpectNoError(rc.framework.Client.Experimental().HorizontalPodAutoscalers(rc.framework.Namespace.Name).Delete(rc.name, api.NewDeleteOptions(0)))\n}\n"
  },
  {
    "id" : "b30f3d53-a299-48e7-9844-5cf2a7e47e41",
    "prId" : 13243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2b9ecc0-563f-44ee-afdb-f5561d10f434",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Please, no communication under a mutex.\n",
        "createdAt" : "2015-08-28T09:13:36Z",
        "updatedAt" : "2015-09-03T07:17:53Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "146e84e0-5d9b-46f8-b86f-229445c95bd1",
        "parentId" : "c2b9ecc0-563f-44ee-afdb-f5561d10f434",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "done\n",
        "createdAt" : "2015-08-28T13:59:50Z",
        "updatedAt" : "2015-09-03T07:17:53Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f282efb117034362ed64204bec9ea561c01492d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +102,106 @@// sendOneConsumeCPUrequest sends POST request for cpu consumption\nfunc (rc *ConsumingRC) sendOneConsumeCPUrequest(milicores int, durationSec int) {\n\t_, err := rc.framework.Client.Post().\n\t\tPrefix(\"proxy\").\n\t\tNamespace(rc.framework.Namespace.Name)."
  },
  {
    "id" : "7db47a65-3e58-4443-9a13-ccde0d1dbf8b",
    "prId" : 13243,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c13f5d9-d8c3-4150-9291-b1fa77b1f100",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "I would:\n- ask pods to consume resources much longer (>1 min).\n- update them frequently so that your use case with autoscaling is satisfied.\n- calculate the sleep time based on the amount of time the communication used. \n- consider sending requests on multiple goroutines/threads.\n",
        "createdAt" : "2015-08-28T09:35:24Z",
        "updatedAt" : "2015-09-03T07:17:53Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "ec07c5df-b509-453a-a2d0-12938e524004",
        "parentId" : "7c13f5d9-d8c3-4150-9291-b1fa77b1f100",
        "authorId" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "body" : "Changed to:\n- new http request is sending on a new gorutine \n- consumption time a bit longer (from 10s to 30s)\n",
        "createdAt" : "2015-08-28T13:59:45Z",
        "updatedAt" : "2015-09-03T07:17:53Z",
        "lastEditedBy" : "d4951272-1c91-4016-b5cc-db25a2ce6a83",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f282efb117034362ed64204bec9ea561c01492d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@\t\t\treturn\n\t\t}\n\t}\n}\n"
  }
]