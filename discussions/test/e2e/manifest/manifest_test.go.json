[
  {
    "id" : "46c2bb39-563a-42d0-8b16-e0cb1e361fdd",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-95587805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d16cee97-a787-4d88-a5af-172e5f5a3bd9",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Great to have unit test :)",
        "createdAt" : "2018-02-09T21:57:24Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "9a275afa-1178-4e70-a4d5-62ed0c80c8b5",
        "parentId" : "d16cee97-a787-4d88-a5af-172e5f5a3bd9",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes! :)",
        "createdAt" : "2018-02-09T22:54:25Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2018 The Kubernetes Authors.\n"
  },
  {
    "id" : "3e553bcb-75fa-4290-8043-6a1eda0cb24f",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-97072363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "886169b3-bfd9-431e-ae3e-62e91ecd7b28",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Do you want to use [`ioutil.TempDir()`](https://golang.org/pkg/io/ioutil/#TempDir)? Something like:\r\n\r\n```go\r\ntmpDir, err := ioutil.TempDir(\"\", \"mcie2e\")\r\nif err != nil {\r\n    ...\r\n}\r\ndefer os.RemoveAll(tmpDir)\r\nif err := IngressToManifest(ing, filepath.Join(tmpDir, \"ing.yaml\")); err != nil {\r\n   ...\r\n}\r\n```\r\n\r\nAlternatively you can use [`ioutil.TempFile`](https://golang.org/pkg/io/ioutil/#TempFile) too.",
        "createdAt" : "2018-02-10T23:52:39Z",
        "updatedAt" : "2018-02-10T23:56:55Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "b539077c-e084-4a6c-a5d3-1e0b601c93a9",
        "parentId" : "886169b3-bfd9-431e-ae3e-62e91ecd7b28",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Thanks.\r\nThis ensures that the test cleans up after it is run!",
        "createdAt" : "2018-02-16T02:51:58Z",
        "updatedAt" : "2018-02-16T02:56:09Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@\ting := &extensions.Ingress{}\n\t// Write the ingress to a file and ensure that there is no error.\n\tif err := IngressToManifest(ing, \"/tmp/ing.yaml\"); err != nil {\n\t\tt.Fatalf(\"Error in creating file: %s\", err)\n\t}"
  },
  {
    "id" : "13ed388f-9d71-43e7-923e-fd0274b1c532",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-97072363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "152bdfe4-9f61-4969-b075-1a49ef1108fa",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same here.",
        "createdAt" : "2018-02-10T23:53:04Z",
        "updatedAt" : "2018-02-10T23:56:55Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "df24a295-5e72-40e5-a03f-6d1c37efb6a4",
        "parentId" : "152bdfe4-9f61-4969-b075-1a49ef1108fa",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "done",
        "createdAt" : "2018-02-16T02:52:01Z",
        "updatedAt" : "2018-02-16T02:56:09Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@\t}\n\t// Writing it again should not return an error.\n\tif err := IngressToManifest(ing, \"/tmp/ing.yaml\"); err != nil {\n\t\tt.Fatalf(\"Error in creating file: %s\", err)\n\t}"
  }
]