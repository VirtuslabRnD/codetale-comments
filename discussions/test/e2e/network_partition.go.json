[
  {
    "id" : "655017e6-afff-4a96-b749-e691054e7cd0",
    "prId" : 41133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41133#pullrequestreview-22915683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Have you run this test? IIUC marking it `Feature:` means it doesn't run.",
        "createdAt" : "2017-02-18T08:38:24Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "7f6277cd-2024-4313-8f8d-303ae7299ebe",
        "parentId" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Also, does this test actually enable UseTaintBasedEvictions?",
        "createdAt" : "2017-02-18T08:55:34Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "d9c3e15e-7cc5-402d-84d4-740604a9db7f",
        "parentId" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I run it locally. `Feature` only applies to Jenkins - those can be easily run by hand. This test doesn't enable anything - one need to create appropriate cluster to make it work (we may consider creating a dedicated suite to test taint-based evictions)",
        "createdAt" : "2017-02-20T08:33:20Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "52c39446-ef7e-4e20-aa19-6f24cd0c67e8",
        "parentId" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Is there any way we can have the continuous build start testing this now, even though it is not enabled by default? That would help prevent other people from breaking the feature.",
        "createdAt" : "2017-02-20T23:13:17Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "60483f6b-a751-4ba8-b093-0e4491c1e773",
        "parentId" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Yes - we need to create a new suite for this though.",
        "createdAt" : "2017-02-21T09:04:38Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "95233411-5be4-4903-bbd5-fda7d31834c3",
        "parentId" : "1cbdc323-7e3a-49af-9a4e-111b715f78d6",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "@gmarek filed kubernetes/test-infra#1946 for this",
        "createdAt" : "2017-02-21T09:58:14Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d6086217f36bcea6024115f81642d6dfdcaf8b",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +494,498 @@\t\t\t// 2. All pods on node are marked NotReady shortly after #1\n\t\t\t// 3. After enough time passess all Pods are evicted from the given Node\n\t\t\tIt(\"[Feature:TaintEviction] All pods on the unreachable node should be marked as NotReady upon the node turn NotReady \"+\n\t\t\t\t\"AND all pods should be evicted after eviction timeout passes\", func() {\n\t\t\t\tBy(\"choose a node - we will block all network traffic on this node\")"
  },
  {
    "id" : "8cc8dd4b-bdc3-4798-b805-fe24d0f4073d",
    "prId" : 41133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41133#pullrequestreview-22905292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5c76359-22b2-41ae-b4cb-c564d5bfdadb",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "You should be checking for the absence of both the unreachable and not-ready taints, right?",
        "createdAt" : "2017-02-18T09:12:13Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "3efd3c85-3666-4897-8e67-1048620ba425",
        "parentId" : "b5c76359-22b2-41ae-b4cb-c564d5bfdadb",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-20T08:48:18Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "c1b80472-795c-41e2-bd9b-238d404b903d",
        "parentId" : "b5c76359-22b2-41ae-b4cb-c564d5bfdadb",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I don't see where you are checking for the absence of the unreachable and not-ready taints.",
        "createdAt" : "2017-02-20T23:24:47Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "3dfc6268-f99a-4f53-a5c0-f7527167623b",
        "parentId" : "b5c76359-22b2-41ae-b4cb-c564d5bfdadb",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I added it to `framework.isNodeConditionSetAsExpected` function, which is called by `framework.IsNodeConditionSetAsExpected`, which in turn is called by `expectNodeReadiness`",
        "createdAt" : "2017-02-21T09:07:40Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d6086217f36bcea6024115f81642d6dfdcaf8b",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +606,610 @@\n\t\t\t\t\tBy(\"Expect to observe node status change from NotReady to Ready after network connectivity recovers\")\n\t\t\t\t\texpectNodeReadiness(true, newNode)\n\t\t\t\t}()\n"
  },
  {
    "id" : "c64e913e-1cd7-4326-9457-552c117139d3",
    "prId" : 41133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41133#pullrequestreview-22916053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "You should be checking for the presence of the unreachable taint (and absence of the not-ready taint), right?",
        "createdAt" : "2017-02-18T09:13:24Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "6c88de71-4169-4df5-a8be-84190cea5da1",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Also can you test eviction due to notReady in addition to eviction due to unreachable?\r\n",
        "createdAt" : "2017-02-18T09:28:28Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "a633585a-fb55-4e0b-a309-b3ae4735dc8c",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I'm not sure how to trigger `notReady` condition... @yujuhong ",
        "createdAt" : "2017-02-20T08:38:20Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "1be6153d-15cf-415a-a79e-5d5c4b063f16",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I don't see where you are checking for the presence of the unreachable taint (and absence of the not-ready taint).",
        "createdAt" : "2017-02-20T23:25:59Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "00a41a42-d044-4e81-a0b1-56b034020b8d",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "See above.",
        "createdAt" : "2017-02-21T09:08:01Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "2cafbe30-1eb9-4ba6-852f-b1a83dc0d465",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Unless I'm misunderstanding, you're not \"checking for the presence of the unreachable taint and absence of the not-ready taint.\" You're just skipping the taint checks if first argument is false.",
        "createdAt" : "2017-02-21T09:58:11Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "60ddca9c-c86d-4e86-9b80-0411aeb27a89",
        "parentId" : "fc88622f-bfd4-482a-b503-fde1deb12dfa",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Oh, right - I mixed it with checking for absence after cleanup.",
        "createdAt" : "2017-02-21T10:00:01Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d6086217f36bcea6024115f81642d6dfdcaf8b",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +612,616 @@\n\t\t\t\tBy(\"Expect to observe node and pod status change from Ready to NotReady after network partition\")\n\t\t\t\texpectNodeReadiness(false, newNode)\n\t\t\t\tframework.ExpectNoError(wait.Poll(1*time.Second, timeout, func() (bool, error) {\n\t\t\t\t\treturn framework.NodeHasTaint(c, node.Name, nodepkg.UnreachableTaintTemplate)"
  }
]