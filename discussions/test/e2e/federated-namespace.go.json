[
  {
    "id" : "00d6a9ad-715c-4afe-bf68-63a30db01e7e",
    "prId" : 31418,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05770964-4812-4213-a847-59d7ada0c2ac",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm wondering whether instead of duplication code, would it be possible to pass:\n\"NamespacerInterface\"\nas an argument.\n\nThen it should be possible to call it with both:\n- f.FederationClientset_1_4.Core().Namespaces()\n- clientset.Core().Namespaces()\n",
        "createdAt" : "2016-08-25T08:37:51Z",
        "updatedAt" : "2016-08-25T08:37:51Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc693590-0ead-4dd0-8de8-c6c0d432a83a",
        "parentId" : "05770964-4812-4213-a847-59d7ada0c2ac",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "No, the interfaces are not compatible:\n\n```\n./federated-namespace.go:58: cannot use f.FederationClientset_1_4.Core().Namespaces() (type \"k8s.io/kubernetes/federation/client/clientset_generated/federation_release_1_4/typed/core/v1\".NamespaceInterface) as type \"k8s.io/kubernetes/pkg/client/clientset_generated/release_1_3/typed/core/v1\".NamespaceInterface in argument to deleteAllTestNamespaces:\n    \"k8s.io/kubernetes/federation/client/clientset_generated/federation_release_1_4/typed/core/v1\".NamespaceInterface does not implement \"k8s.io/kubernetes/pkg/client/clientset_generated/release_1_3/typed/core/v1\".NamespaceInterface (wrong type for Patch method)\n        have Patch(string, \"k8s.io/kubernetes/pkg/api\".PatchType, []byte, ...string) (*\"k8s.io/kubernetes/pkg/api/v1\".Namespace, error)\n        want Patch(string, \"k8s.io/kubernetes/pkg/api\".PatchType, []byte) (*\"k8s.io/kubernetes/pkg/api/v1\".Namespace, error)\n```\n",
        "createdAt" : "2016-08-25T08:56:01Z",
        "updatedAt" : "2016-08-25T08:56:01Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "0a39721a-51d9-4ae7-91cf-d1df0303d7fb",
        "parentId" : "05770964-4812-4213-a847-59d7ada0c2ac",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "We can fix the interfaces and remove duplicated code later.\n",
        "createdAt" : "2016-08-25T08:56:48Z",
        "updatedAt" : "2016-08-25T08:56:48Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "363c47d3-a43e-484b-923a-f5180f6efebb",
        "parentId" : "05770964-4812-4213-a847-59d7ada0c2ac",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Hmm - this is so weird that we have two interfaces for the same thing that are a bit different.\n@quinton-hoole ^^\n\nAnyway - let's merge as is for now.\n",
        "createdAt" : "2016-08-25T09:05:14Z",
        "updatedAt" : "2016-08-25T09:05:14Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "99cb1d77029c10af6bddd747f737162331ee700d",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +95,99 @@})\n\nfunc deleteAllTestNamespacesFed14(clientset *federation_release_1_4.Clientset) {\n\tlist, err := clientset.Core().Namespaces().List(api.ListOptions{})\n\tif err != nil {"
  },
  {
    "id" : "b7932abb-bbb1-4860-9f4f-79a14d9e96c1",
    "prId" : 30496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf5d96c8-008d-412c-9a1c-8319eba2042e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This will not work, because if namespace doesn't exist it will return err that is specific to \"no exist\". And thus it will break the whole poll loop which will never succeed.\nYou should check if err != \"no exists\" (it should be somewhere in pkg/api/errors or sth like that.\n",
        "createdAt" : "2016-08-12T08:37:02Z",
        "updatedAt" : "2016-08-23T09:15:31Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "367db6a4-4962-4a08-8f91-7441a5eea4ce",
        "parentId" : "bf5d96c8-008d-412c-9a1c-8319eba2042e",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Done.\n",
        "createdAt" : "2016-08-12T09:45:34Z",
        "updatedAt" : "2016-08-23T09:15:31Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "309630b5480aaf9c732bf7b26e140b95d85a98a0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +82,86 @@\t\t\t\t\t_, err := client.Core().Namespaces().Get(ns.Name)\n\t\t\t\t\tif err != nil && !errors.IsNotFound(err) {\n\t\t\t\t\t\treturn false, err\n\t\t\t\t\t}\n\t\t\t\t\tif err != nil {"
  },
  {
    "id" : "e44cdc93-1fdf-417c-b317-fab840155c11",
    "prId" : 30496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86238130-b05b-444c-b47f-8af1dc2a1a9a",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "ingress -> namespace\n",
        "createdAt" : "2016-08-23T23:35:30Z",
        "updatedAt" : "2016-08-23T23:35:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "309630b5480aaf9c732bf7b26e140b95d85a98a0",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@)\n\n// Create/delete ingress api objects\nvar _ = framework.KubeDescribe(\"Federation namespace [Feature:Federation]\", func() {\n\tf := framework.NewDefaultFederatedFramework(\"federation-namespace\")"
  },
  {
    "id" : "1a9b9e03-141e-48a2-bcd4-7a5ba2b7d766",
    "prId" : 30496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff47903a-c18d-43bf-bda1-cc5acf7a6d5c",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "fwiw, another way to do this is to set GenerateName instead of Name here. Ex: https://github.com/kubernetes/kubernetes/blob/28ded18c4cb461eb5e7214e08255ffbe21f7c188/test/e2e/framework/util.go#L960\n",
        "createdAt" : "2016-08-23T23:35:33Z",
        "updatedAt" : "2016-08-23T23:35:33Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "309630b5480aaf9c732bf7b26e140b95d85a98a0",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\t\t\tns := api_v1.Namespace{\n\t\t\t\tObjectMeta: api_v1.ObjectMeta{\n\t\t\t\t\tName: api.SimpleNameGenerator.GenerateName(namespacePrefix),\n\t\t\t\t},\n\t\t\t}"
  },
  {
    "id" : "5af8904d-ed42-4b55-8bd1-a72fedadab38",
    "prId" : 30496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c17c31ae-a984-4feb-bcc6-f604af6e9a63",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Do you plan to add a test for all resources in the namespace should be deleted when the namespace is deleted? (We would need extra logic in federation namespace controller for that).\n",
        "createdAt" : "2016-08-23T23:42:58Z",
        "updatedAt" : "2016-08-23T23:42:58Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "309630b5480aaf9c732bf7b26e140b95d85a98a0",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\t\tframework.ExpectNoError(err, \"Not all namespaces created\")\n\n\t\t\terr = f.FederationClientset_1_4.Core().Namespaces().Delete(ns.Name, &api.DeleteOptions{})\n\t\t\tframework.ExpectNoError(err, \"Failed to delete namespace %s\", ns.Name)\n\t\t})"
  }
]