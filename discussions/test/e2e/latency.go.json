[
  {
    "id" : "cacf5440-2a25-44ee-9b19-4e1a8bbc3fa0",
    "prId" : 14925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "One thing @gmarek and I have discussed a lot is whether there should be assertions on each latency measurement here.  My personal opinion is that logging something is much less useful than making assertions on it.\n",
        "createdAt" : "2015-10-01T22:19:08Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "6c180048-93cc-4ad7-bcfd-0d3e289c70b3",
        "parentId" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "To be clear - I'm not against assertions on each step, but I'm concerned about possibility of making them useful, as there's a big variance in most of them (except scheduleLatency, which should be 1s or less). If you can do it useful and not flaky, I'm all for it.\n",
        "createdAt" : "2015-10-02T05:28:11Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "f5653b7c-5bd6-4f1b-9553-a920cab8173c",
        "parentId" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "The variances for most of these measurements worry me. While I agree having assertions would be a better solution I don't believe there is a stable enough number to choose that would avoid flakes. Since scheduleLatency should be <= 1s I'll add an assertion for it.\n",
        "createdAt" : "2015-10-02T13:29:22Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "6e49e49c-7267-4a00-9a6f-40851abd6c19",
        "parentId" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@gmarek @wojtek-t My concern is that unless we have assertions encoded into the test it will possible for someone who doesn't know about this test or doesn't realize that their patch affects the result of it, E2E shows green, and it gets merged when it actually makes a regressive change.  That was what happened with #13052.  The consequence is that it makes it harder to understand when something is really done.  Since there is variance in the measurements as @ashcrow points out, maybe we should relax the assertions a little bit to accomodate for it, but I think we need to at least have a safety net to catch major regressions before they go in.\n",
        "createdAt" : "2015-10-02T16:54:48Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "885d4709-c8cd-4883-82f0-019d0191a6d3",
        "parentId" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "@pmorie as in use an agreed upon ceiling for each assertion?\n",
        "createdAt" : "2015-10-02T17:23:31Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "e666759c-9125-4101-8964-718ea7443c7a",
        "parentId" : "b88ba0fc-7bb8-4a7d-8d21-5dcab427475f",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@ashcrow Yeah, as in identify the 'true' threshold, and back off the threshold from that to account for variance.  I suspect this will be less of a problem once we can use a separate QPS for events.\n",
        "createdAt" : "2015-10-02T17:59:10Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0bc75bf22ab8834e428fd3f47db0cab3e56283",
    "line" : null,
    "diffHunk" : "@@ -1,1 +268,272 @@\tpodStartupLatency := PodStartupLatency{Latency: extractLatencyMetrics(e2eLatencies)}\n\t// TODO: Switch it to 5 seconds once we are sure our tests are passing.\n\tpodStartupThreshold := 8 * time.Second\n\texpectNoError(VerifyPodStartupLatency(podStartupLatency, podStartupThreshold))\n"
  },
  {
    "id" : "aad8e231-aa74-4828-9509-2b6d847a08d8",
    "prId" : 14925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88cfd982-7b31-4692-8de0-03eaf4076b80",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "There is huge intersection between the code if this test and the code in density. Is it possible to refactor it to avoid code duplication?\n",
        "createdAt" : "2015-10-02T06:23:03Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a7dc9679-02a1-44a8-9999-cce2f6b1854a",
        "parentId" : "88cfd982-7b31-4692-8de0-03eaf4076b80",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "I created `logSuspiciousLatency` in `test/e2e/util.go` which I believe will take care of both use cases.\n",
        "createdAt" : "2015-10-02T14:44:54Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0bc75bf22ab8834e428fd3f47db0cab3e56283",
    "line" : null,
    "diffHunk" : "@@ -1,1 +273,277 @@\t// Log suspicious latency metrics/docker errors from all nodes that had slow startup times\n\tlogSuspiciousLatency(startLatencies, nil, nodeCount, c)\n}"
  },
  {
    "id" : "e89dd8ba-9909-404c-b0a2-a16f4b417206",
    "prId" : 14925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f0897ed-5351-487e-afc5-b781960ade9a",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is no longer needed.\n",
        "createdAt" : "2015-10-08T13:43:20Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "04834b84-56fb-4c16-a383-f1ec51059eef",
        "parentId" : "6f0897ed-5351-487e-afc5-b781960ade9a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I see it's still present in density.go, so let's leave it here too for consistency.\n",
        "createdAt" : "2015-10-08T13:44:24Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d5b49867-f04e-4623-a502-ed1ee7fd737e",
        "parentId" : "6f0897ed-5351-487e-afc5-b781960ade9a",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "As in leave it in both places?\n",
        "createdAt" : "2015-10-08T14:06:27Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "c91c7dbd-08c8-4442-a542-7560b7c504cd",
        "parentId" : "6f0897ed-5351-487e-afc5-b781960ade9a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "yes - let's leave it\nI can clean it up at some point.\n",
        "createdAt" : "2015-10-08T14:07:54Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0bc75bf22ab8834e428fd3f47db0cab3e56283",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@\t\t// generally means events) can affect the current run. Thus we wait for all\n\t\t// terminating namespace to be finally deleted before starting this test.\n\t\texpectNoError(checkTestingNSDeletedExcept(c, ns))\n\n\t\tuuid = string(util.NewUUID())"
  },
  {
    "id" : "70c6e129-f305-4e04-8a24-bcb25fa6d854",
    "prId" : 14925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "090476ed-e756-43d4-8bcd-793f186b839a",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Those vars are used only in a single place each - can you please remove them and use the value instead there?\n",
        "createdAt" : "2015-10-08T13:47:23Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0bc75bf22ab8834e428fd3f47db0cab3e56283",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +235,239 @@\t\t\twatchLatency           = podLatencyData{name, podNode, watchTs.Time.Sub(runTs.Time)}\n\t\t\tscheduleToWatchLatency = podLatencyData{name, podNode, watchTs.Time.Sub(scheduleTs.Time)}\n\t\t\te2eLatency             = podLatencyData{name, podNode, watchTs.Time.Sub(createTs.Time)}\n\t\t)\n"
  },
  {
    "id" : "10b59260-33da-481b-b333-9d5df5614f1b",
    "prId" : 14925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de142386-c2aa-4a26-a8d0-111142b34eae",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "All the arrays here are sorted - if you want to test maximum - it's enough to check the last element of each array.\n",
        "createdAt" : "2015-10-08T13:50:33Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b1a04023-83b7-46f9-b4df-0b9f50a23d59",
        "parentId" : "de142386-c2aa-4a26-a8d0-111142b34eae",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "Done.\n",
        "createdAt" : "2015-10-08T14:59:46Z",
        "updatedAt" : "2015-10-09T13:31:26Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f0bc75bf22ab8834e428fd3f47db0cab3e56283",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +263,267 @@\ttestMaximumLatencyValue(watchLatencies, 8*time.Second, \"watchLatencies\")\n\ttestMaximumLatencyValue(scheduleToWatchLatencies, 5*time.Second, \"scheduleToWatchLatencies\")\n\ttestMaximumLatencyValue(e2eLatencies, 5*time.Second, \"e2eLatencies\")\n\n\t// Test whether e2e pod startup time is acceptable."
  }
]