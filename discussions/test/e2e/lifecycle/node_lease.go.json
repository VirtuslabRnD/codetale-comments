[
  {
    "id" : "e381d82b-6219-4cda-b864-6a887b86c299",
    "prId" : 70034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70034#pullrequestreview-172715002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27767cfa-6a03-4948-8b44-95f87d82c9da",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should the test be skipped if there are more than one MIG?",
        "createdAt" : "2018-11-07T21:20:00Z",
        "updatedAt" : "2018-11-08T04:32:01Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e1af3f28-d10e-4a6c-8a14-952106bf13d1",
        "parentId" : "27767cfa-6a03-4948-8b44-95f87d82c9da",
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "I am not entirely sure about the reasoning here. I copied from resize_nodes tests:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/e2e/lifecycle/resize_nodes.go#L57",
        "createdAt" : "2018-11-07T21:50:19Z",
        "updatedAt" : "2018-11-08T04:32:01Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8b12796fc0e869988d3e8db96771b63bd716c08",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\t\tsystemPodsNo = int32(len(systemPods))\n\t\tif strings.Index(framework.TestContext.CloudConfig.NodeInstanceGroup, \",\") >= 0 {\n\t\t\tframework.Failf(\"Test dose not support cluster setup with more than one MIG: %s\", framework.TestContext.CloudConfig.NodeInstanceGroup)\n\t\t} else {\n\t\t\tgroup = framework.TestContext.CloudConfig.NodeInstanceGroup"
  },
  {
    "id" : "05800e57-3fda-4b7e-b472-a3ba444fd7cd",
    "prId" : 70034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70034#pullrequestreview-172715002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b7d1fae-e325-4ea1-8122-a7e82d346293",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What's the expected latency for the lease to be deleted?",
        "createdAt" : "2018-11-07T21:33:23Z",
        "updatedAt" : "2018-11-08T04:32:01Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "1ee886cc-a679-4292-87ee-e53f84f0ceae",
        "parentId" : "5b7d1fae-e325-4ea1-8122-a7e82d346293",
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "That depends on GC. Based on my observation previously, it is deleted very soon after deleting nodes. Changing the timeout to 1m now.",
        "createdAt" : "2018-11-07T21:54:26Z",
        "updatedAt" : "2018-11-08T04:32:01Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8b12796fc0e869988d3e8db96771b63bd716c08",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\t\tExpect(len(targetNodes.Items)).To(Equal(int(targetNumNodes)))\n\n\t\t\tBy(\"verify node lease is deleted for the deleted node\")\n\t\t\tvar deletedNodeName string\n\t\t\tfor _, originalNode := range originalNodes.Items {"
  }
]