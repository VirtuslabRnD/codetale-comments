[
  {
    "id" : "957a4d9e-8f82-4a3a-97c4-e969847ae722",
    "prId" : 43296,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43296#pullrequestreview-27651821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1bfae59-a0c3-423f-9e28-cb69f1f3ef93",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@divyenpatel You should add vsphere back to all these tests once your CI environment is updated.",
        "createdAt" : "2017-03-17T17:58:47Z",
        "updatedAt" : "2017-03-17T18:00:41Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "873c0878-dab8-467c-91aa-41f8fe18c0af",
        "parentId" : "b1bfae59-a0c3-423f-9e28-cb69f1f3ef93",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "@msau42 Yes sure.\r\n\r\ncc: @BaluDontu @tusharnt",
        "createdAt" : "2017-03-17T18:04:48Z",
        "updatedAt" : "2017-03-17T18:04:48Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0ab1dcfe2583d92bce244d4dcb7e33ca7c53e3b",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +108,112 @@\tframework.KubeDescribe(\"DynamicProvisioner\", func() {\n\t\tIt(\"should create and delete persistent volumes [Slow] [Volume]\", func() {\n\t\t\tframework.SkipUnlessProviderIs(\"openstack\", \"gce\", \"aws\", \"gke\")\n\n\t\t\tBy(\"creating a StorageClass\")"
  },
  {
    "id" : "1bd6ca93-f4c2-4267-b9ce-8385e755b033",
    "prId" : 41156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41156#pullrequestreview-26361468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1a9d204-d51b-4bd1-9748-5b2a7f91311d",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "should this be \"[Slow]\"?",
        "createdAt" : "2017-03-08T16:43:13Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "3200f6aa-c737-4c09-a7b1-d3363709d51e",
        "parentId" : "b1a9d204-d51b-4bd1-9748-5b2a7f91311d",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Barring regression, this test completes in under 5 minutes.  So according to the description for the tag, I think it can be omitted. ",
        "createdAt" : "2017-03-08T21:08:00Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "71c5899d-ad3e-4c3d-9e62-a657ea270f6e",
        "parentId" : "b1a9d204-d51b-4bd1-9748-5b2a7f91311d",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Ok, I was wondering because of creating 30 claims and their provisioned pvs, and then deleting them all with a wait for each delete...",
        "createdAt" : "2017-03-08T22:14:32Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "691287fa-4719-4887-8639-273332e27e3c",
        "parentId" : "b1a9d204-d51b-4bd1-9748-5b2a7f91311d",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "L204-205: you want an `Excpect` for the `StorageClasses.Create` call and for the `StorageClasses().Delete` call. The `defer` should probably be a func() {...}",
        "createdAt" : "2017-03-10T19:46:40Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "60c235d5735c27d872737f0f59bf30b0ca9ef4f3",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +218,222 @@\t\t})\n\n\t\tIt(\"should test that deleting a claim before the volume is provisioned deletes the volume. [Volume]\", func() {\n\t\t\t// This case tests for the regressions of a bug fixed by PR #21268\n\t\t\t// REGRESSION: Deleting the PVC before the PV is provisioned can result in the PV"
  },
  {
    "id" : "9c9ac426-fc46-4b65-8fbf-54f98f5e8adf",
    "prId" : 41156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41156#pullrequestreview-25827259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0a21b80-21ba-4801-9df7-f2e013755bc5",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "do you want a `framework.SkipUnlessProviderIs(\"gce\", \"gke\")` here due to the `DeletePDWithRetry` call? Maybe this \"SkipUnless...\" should be in a BeforeEach somewhere since other `It` blocks do the same?",
        "createdAt" : "2017-03-08T17:11:02Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "60c235d5735c27d872737f0f59bf30b0ca9ef4f3",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +223,227 @@\t\t\t// not being deleted.\n\t\t\t// NOTE:  Polls until no PVs are detected, times out at 5 minutes.\n\n\t\t\tframework.SkipUnlessProviderIs(\"gce\", \"gke\")\n"
  },
  {
    "id" : "45e88bfb-84ea-4f14-a171-f77e069033cd",
    "prId" : 41156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41156#pullrequestreview-26564322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20874c43-a1a1-400d-a7a5-5da0ed163fa6",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Would be nice to create a separate pr that allows for `apierrs.IsNotFound` in `DeletePodOrFail`.",
        "createdAt" : "2017-03-11T01:12:32Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "e42a8a1c-79e8-4c6e-abba-cfe08c45f829",
        "parentId" : "20874c43-a1a1-400d-a7a5-5da0ed163fa6",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "agreed. I'll ping you with the PR when it's up",
        "createdAt" : "2017-03-13T14:34:30Z",
        "updatedAt" : "2017-03-28T14:24:52Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      }
    ],
    "commit" : "60c235d5735c27d872737f0f59bf30b0ca9ef4f3",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +299,303 @@\t\t\tBy(\"creating an external dynamic provisioner pod\")\n\t\t\tpod := startExternalProvisioner(c, ns)\n\t\t\tdefer framework.DeletePodOrFail(c, ns, pod.Name)\n\n\t\t\tBy(\"creating a StorageClass\")"
  },
  {
    "id" : "49ecd2ee-68e1-43d3-8c24-6a810d42b46a",
    "prId" : 40000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40000#pullrequestreview-19729593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85a98414-3db8-4db8-b48c-964db131d979",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "would it make sense to not have an annotation in order to test the \"default\" behavior?",
        "createdAt" : "2017-02-01T19:03:54Z",
        "updatedAt" : "2017-02-01T19:03:54Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "14d2197f-b50e-4bba-bd5e-0fffd433b41a",
        "parentId" : "85a98414-3db8-4db8-b48c-964db131d979",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "technically it **is** the same behavior",
        "createdAt" : "2017-02-02T08:08:26Z",
        "updatedAt" : "2017-02-02T08:08:27Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "587eb199e07e7fb9d836420790c7253c2d2cda1e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +175,179 @@\tif alpha {\n\t\tclaim.Annotations = map[string]string{\n\t\t\t\"volume.alpha.kubernetes.io/storage-class\": \"anything\",\n\t\t}\n\t} else {"
  },
  {
    "id" : "1398e045-4fc9-411e-b7bf-b788732d271b",
    "prId" : 35284,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35284#pullrequestreview-31536570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b55002e7-98a9-454f-882c-55c13d51d285",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should most of this go into the aws cloud provider library?",
        "createdAt" : "2017-04-07T00:18:07Z",
        "updatedAt" : "2017-04-07T12:40:16Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "adec6a37-fbed-4b29-8786-c82f8cc91965",
        "parentId" : "b55002e7-98a9-454f-882c-55c13d51d285",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "No, the test framework does not instantiate AWS cloud provider. See e.g. https://github.com/kubernetes/kubernetes/blob/master/test/e2e/pd.go#L574\r\n\r\nYes, it *should* use cloud provider, but that's for a separate PR and to be honest, I don't know how to start one. @justinsb, how hard would it be?",
        "createdAt" : "2017-04-07T11:15:38Z",
        "updatedAt" : "2017-04-07T12:40:16Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8bc39dd1a1bb3ae676b8b5c82a72317c1ecb78d",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +139,143 @@// checkAWSEBS checks properties of an AWS EBS. Test framework does not\n// instantiate full AWS provider, therefore we need use ec2 API directly.\nfunc checkAWSEBS(volume *v1.PersistentVolume, volumeType string, encrypted bool) error {\n\tdiskName := volume.Spec.AWSElasticBlockStore.VolumeID\n"
  },
  {
    "id" : "0ced5bab-25ab-482b-9d88-88acb487c6c9",
    "prId" : 32485,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32485#pullrequestreview-2476798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af9468b8-b4da-4893-852e-7f39ecedd5ee",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "So alpha here just means provisioning without storageclass right?\n",
        "createdAt" : "2016-09-30T13:07:44Z",
        "updatedAt" : "2016-10-13T13:37:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "5bf902f9-077b-4538-a02f-8e2c5d65616d",
        "parentId" : "af9468b8-b4da-4893-852e-7f39ecedd5ee",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "yes\n",
        "createdAt" : "2016-10-03T07:31:24Z",
        "updatedAt" : "2016-10-13T13:37:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c1147270566e34f206d0b693a6b7af0aecde3d",
    "line" : 316,
    "diffHunk" : "@@ -1,1 +342,346 @@\tframework.KubeDescribe(\"DynamicProvisioner Alpha\", func() {\n\t\tIt(\"should provision alpha volumes [Slow]\", func() {\n\t\t\tframework.SkipUnlessProviderIs(\"openstack\", \"gce\", \"aws\", \"gke\")\n\n\t\t\tBy(\"creating a claim with an alpha dynamic provisioning annotation\")"
  },
  {
    "id" : "24c3850e-48b6-4c1d-ad8e-81be1b79d395",
    "prId" : 32485,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32485#pullrequestreview-2322244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89d0e680-5c66-4760-bc03-8996400e6636",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Do you think it may be worth replacing this with `nil` like openstack checks because it doesn't do anything? \n",
        "createdAt" : "2016-09-30T13:09:25Z",
        "updatedAt" : "2016-10-13T13:37:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c1147270566e34f206d0b693a6b7af0aecde3d",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +270,274 @@\t\t\t\t\"500Gi\",\n\t\t\t\tfunc(volume *api.PersistentVolume) error {\n\t\t\t\t\treturn checkAWSEBS(volume, \"sc1\", false)\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "81e2e308-fa3f-4e98-86fa-e4e887d984ba",
    "prId" : 32485,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32485#pullrequestreview-2690014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "748db1a3-0db6-433a-bc1f-f2d2f4cb7855",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Intended?\n",
        "createdAt" : "2016-09-30T13:09:56Z",
        "updatedAt" : "2016-10-13T13:37:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "2f6530a2-09ec-4564-9acd-18a303f2679f",
        "parentId" : "748db1a3-0db6-433a-bc1f-f2d2f4cb7855",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I forgot to implement AWS checks. I just added them to the PR.\n",
        "createdAt" : "2016-10-04T11:05:22Z",
        "updatedAt" : "2016-10-13T13:37:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c1147270566e34f206d0b693a6b7af0aecde3d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +169,173 @@\t\treturn fmt.Errorf(\"expected encrypted volume, got %v\", *awsVolume.Encrypted)\n\t}\n\treturn nil\n}\n"
  },
  {
    "id" : "eff5b949-b2f4-45fa-8d28-db5d9efc6347",
    "prId" : 32199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bb7641a-05d8-426e-9b82-04a875f3c2df",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can you please open an issue to reenable it an link it here, so that we don't forget about i?\n",
        "createdAt" : "2016-09-07T13:13:09Z",
        "updatedAt" : "2016-09-07T13:13:09Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "cf73e8ba-86fb-45fe-8a07-a98039bb0b55",
        "parentId" : "1bb7641a-05d8-426e-9b82-04a875f3c2df",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Can you please open an issue to reenable it an link it here, so that we don't forget about i?\n\nlinked in the pull https://github.com/kubernetes/kubernetes/pull/32200 :)\n",
        "createdAt" : "2016-09-07T13:14:24Z",
        "updatedAt" : "2016-09-07T13:14:24Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec284849e1aa1dd83f770234bf67b2bf3820c399",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +116,120 @@\tframework.KubeDescribe(\"DynamicProvisioner\", func() {\n\t\tIt(\"should create and delete persistent volumes [Slow]\", func() {\n\t\t\t// added until the GKE startup includes storage.k8s.io/v1beta1\n\t\t\tframework.SkipIfProviderIs(\"gke\")\n\t\t\tframework.SkipUnlessProviderIs(\"openstack\", \"gce\", \"aws\", \"gke\")"
  },
  {
    "id" : "d65375d0-bb2a-4721-aa2b-92d7a5f08bb1",
    "prId" : 24185,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fa3d733-6b0b-4f10-8834-e412532537fd",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "is it possible to use `waitForPodTerminated` to monitor pods termination instead of sleep?\n",
        "createdAt" : "2016-04-13T13:01:44Z",
        "updatedAt" : "2016-04-18T11:07:15Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "7e78dc97-604c-4c8f-b71b-ce0ac2115473",
        "parentId" : "8fa3d733-6b0b-4f10-8834-e412532537fd",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "No, it is not. As you can see few lines above, the test _does_ wait for pod termination. And as described in the comment, when a pod is deleted all its volumes are still attached to the node and kubelet (slowly) starts detaching them. There is no event that would signalize that kubelet finished and all volumes are detached.\n",
        "createdAt" : "2016-04-13T13:25:16Z",
        "updatedAt" : "2016-04-18T11:07:15Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "d862a91d-c54b-40c9-bac4-151e61795788",
        "parentId" : "8fa3d733-6b0b-4f10-8834-e412532537fd",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "You could get fancy and retrieve the volume name from the PV object and  use it to figure out what node it gets attached to and monitor for detach. See https://github.com/kubernetes/kubernetes/blob/master/test/e2e/pd.go#L498\n",
        "createdAt" : "2016-04-13T20:44:20Z",
        "updatedAt" : "2016-04-18T11:07:15Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "8345736a-3f95-437c-9c84-e82f4ed1f2d6",
        "parentId" : "8fa3d733-6b0b-4f10-8834-e412532537fd",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Well, I _could_, but as you can notice, AWS and Cinder is not implemented there.  Common cloud volume itnerface as suggested in https://github.com/kubernetes/kubernetes/issues/21984 would help a lot (with `IsDiskAttached()` method).\n\nI'd propose fixing the flake now and polishing the timers later.\n",
        "createdAt" : "2016-04-18T11:05:37Z",
        "updatedAt" : "2016-04-18T11:07:15Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "5e38d313-f208-4b30-a0b5-2b0a78727aa4",
        "parentId" : "8fa3d733-6b0b-4f10-8834-e412532537fd",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Good point, agreed.\n",
        "createdAt" : "2016-04-18T18:08:47Z",
        "updatedAt" : "2016-04-18T18:08:47Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "3137b4cd029a2762534434cea6501c6d1fe47249",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\t\t// We've seen GCE PD detach to take more than 1 minute.\n\t\t\tBy(\"Sleeping to let kubelet destroy all pods\")\n\t\t\ttime.Sleep(3 * time.Minute)\n\n\t\t\tBy(\"deleting the claim\")"
  },
  {
    "id" : "55bef387-5fc6-44ed-8557-829d1b85cc46",
    "prId" : 21140,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81cd801e-4044-48a9-9779-f44c00f14078",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Not for this PR. But this reminds me that we need to think through the logic that triggers deletion of auto-provisioned volumes. Opened up https://github.com/kubernetes/kubernetes/issues/22975\n",
        "createdAt" : "2016-03-15T05:18:40Z",
        "updatedAt" : "2016-03-15T12:01:48Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "4402e57588522d6d94870a86ed494e3c1fbd479e",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\t\trunInPodWithVolume(c, ns, claim.Name, \"grep 'hello world' /mnt/test/data\")\n\n\t\t\t// Ugly hack: if we delete the AWS/GCE/OpenStack volume here, it will\n\t\t\t// probably collide with destruction of the pods above - the pods\n\t\t\t// still have the volume attached (kubelet is slow...) and deletion"
  }
]