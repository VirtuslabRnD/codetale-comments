[
  {
    "id" : "b88d677a-e1fe-4676-be18-8e49eaf8f326",
    "prId" : 10233,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82e9922f-52a9-46a1-907b-ae5c82fba842",
        "parentId" : null,
        "authorId" : null,
        "body" : "We're trying to standardise on using wait.Poll() for retry loops, but given that this source file has so many instances of homegrown retry loops, lets leave migration to wait.Poll() to a separate PR.\n",
        "createdAt" : "2015-06-23T17:08:29Z",
        "updatedAt" : "2015-06-23T17:50:01Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "a42ded5d-4b33-4243-967d-d1803beb812f",
        "parentId" : "82e9922f-52a9-46a1-907b-ae5c82fba842",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Very happy to convert to using `wait.Poll()` in a subsequent PR (or get readiness probes working instead).\n",
        "createdAt" : "2015-06-23T17:11:23Z",
        "updatedAt" : "2015-06-23T17:50:01Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "fc52bbb1-be97-4d8d-80f2-b7c5eb35838b",
        "parentId" : "82e9922f-52a9-46a1-907b-ae5c82fba842",
        "authorId" : null,
        "body" : "Give that we now have three separate retry loops that each retry for up to graceTime=10minutes (i.e. a total of 30 minutes), this test is at risk of becoming extremely slow to fail.  I've checked our Jenkins and in the past 100 runs the test either passed in 50-90 seconds total, or failed completely.  Can we please reduce the grace period to 90 seconds (from 10 minutes?)\n",
        "createdAt" : "2015-06-23T17:15:21Z",
        "updatedAt" : "2015-06-23T17:50:01Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "9264028b-6b9e-41d1-9920-54d5bb6086a5",
        "parentId" : "82e9922f-52a9-46a1-907b-ae5c82fba842",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "At some point a single grace period was forced upon all the loops in this test -- something I did not like. This is because some retry loops should take a short amount of total time (all the ones up to the last one) and some loops need longer e.g. to gather the logs (the last one). Before the retry timeouts were adjusted based on the functionality being tested.\n",
        "createdAt" : "2015-06-23T17:20:26Z",
        "updatedAt" : "2015-06-23T17:50:01Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "52461b772a481733e8aae1b769816e1518a48bd6",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +146,150 @@\tBy(\"Checking health of Elasticsearch service.\")\n\tvar body []byte\n\tfor start := time.Now(); time.Since(start) < graceTime; time.Sleep(5 * time.Second) {\n\t\tbody, err = f.Client.Get().\n\t\t\tNamespace(api.NamespaceDefault)."
  },
  {
    "id" : "19bd4902-9a1d-4b3e-9da8-6b2403a184f9",
    "prId" : 9727,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce2f0414-8157-4028-a82d-6414587ccfb8",
        "parentId" : null,
        "authorId" : null,
        "body" : "I think that this got renamed.\n",
        "createdAt" : "2015-06-12T21:07:01Z",
        "updatedAt" : "2015-06-12T21:07:01Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "dd87f411-99f8-49d0-8cf5-8a1ea05e8c71",
        "parentId" : "ce2f0414-8157-4028-a82d-6414587ccfb8",
        "authorId" : null,
        "body" : "Oh no, it wasn't.  Ignore above comment.\n",
        "createdAt" : "2015-06-12T21:08:24Z",
        "updatedAt" : "2015-06-12T21:08:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f4be465f-fb2b-4879-bc43-fc25a603c10d",
        "parentId" : "ce2f0414-8157-4028-a82d-6414587ccfb8",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Yes, I did wonder about that -- but checked just to make sure and I did compile and run the test.\n",
        "createdAt" : "2015-06-12T21:09:08Z",
        "updatedAt" : "2015-06-12T21:09:08Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "492d22972b3d229e228c6249a260b4a5bd4d8d0a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +171,175 @@\t// 'Not Ready' nodes, just in case (there is no need to fail the test).\n\tfilterNodes(nodes, func(node api.Node) bool {\n\t\treturn isNodeReadySetAsExpected(&node, true)\n\t})\n\tif len(nodes.Items) < 2 {"
  },
  {
    "id" : "310464a0-108a-4e4f-8409-cba051f7492d",
    "prId" : 8399,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66559394-2268-4386-85c0-e9d12001f21b",
        "parentId" : null,
        "authorId" : null,
        "body" : "Can remove this and use graceTime instead in logging.\n",
        "createdAt" : "2015-05-18T20:26:37Z",
        "updatedAt" : "2015-05-19T13:32:44Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e2101d2b-2410-4a8a-844f-6bfa9d614b50",
        "parentId" : "66559394-2268-4386-85c0-e9d12001f21b",
        "authorId" : null,
        "body" : "Sorry - I'm confused.  Ignore the above comment.\n",
        "createdAt" : "2015-05-18T20:27:32Z",
        "updatedAt" : "2015-05-19T13:32:44Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc2a5013e517b00aab6656f54712b9e15fc33f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +74,78 @@\tvar err error\n\tconst graceTime = 10 * time.Minute\n\tstart := time.Now()\n\texpectNoError(wait.Poll(5*time.Second, graceTime, func() (bool, error) {\n\t\tif _, err = s.Get(\"elasticsearch-logging\"); err == nil {"
  },
  {
    "id" : "ef812ece-8d58-4252-8bc9-26e0ba021ca7",
    "prId" : 8399,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b369b29-f211-4990-a8c9-0076e5f074d1",
        "parentId" : null,
        "authorId" : null,
        "body" : "Ideally you should return (true, err) here in cases of errors which are not worth retrying. That way you fail earlier, and get a more useful error message as output (e.g. \"malformed request x\" rather then \"timed out\").\n",
        "createdAt" : "2015-05-18T20:35:58Z",
        "updatedAt" : "2015-05-19T13:32:44Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "37c137fe-5940-47d7-834f-3bcb976434e5",
        "parentId" : "7b369b29-f211-4990-a8c9-0076e5f074d1",
        "authorId" : "95b7051f-0751-4088-8141-bc45a44ac5ca",
        "body" : "Some test cases are worth retrying, right? \nI wonder how you distinguish them:)\n",
        "createdAt" : "2015-05-19T12:19:08Z",
        "updatedAt" : "2015-05-19T13:32:44Z",
        "lastEditedBy" : "95b7051f-0751-4088-8141-bc45a44ac5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "09fc2a5013e517b00aab6656f54712b9e15fc33f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\t}\n\t\tLogf(\"Attempt to check for the existence of the Elasticsearch service failed after %v\", time.Since(start))\n\t\treturn false, nil\n\t}))\n\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "1b3b3177-346c-4719-861b-769ff547dcb6",
    "prId" : 5720,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71b21001-be00-464c-bdf2-6870f8933325",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: use `name` here.\n",
        "createdAt" : "2015-03-20T18:39:24Z",
        "updatedAt" : "2015-03-20T18:39:24Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2e7f0bd1-2edd-4ed7-8d37-1716b7c844cc",
        "parentId" : "71b21001-be00-464c-bdf2-6870f8933325",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "That's the name of the container which I want to be different from the name of the pod.\n",
        "createdAt" : "2015-03-20T18:41:13Z",
        "updatedAt" : "2015-03-20T18:41:13Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "313e7dd5-2624-456d-8d39-80049858012b",
        "parentId" : "71b21001-be00-464c-bdf2-6870f8933325",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "My bad. Had to squint my eyes a bit to see the subtle difference.\n",
        "createdAt" : "2015-03-20T18:42:35Z",
        "updatedAt" : "2015-03-20T18:42:35Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ed32aea7-3485-4cc1-8105-f5fa68af7aaf",
        "parentId" : "71b21001-be00-464c-bdf2-6870f8933325",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "But you are right. I could use `name` also for the container name. It helped me to avoid confusion to keep the container name unrelated to the pod name. We use the container name to help wait on pod success.\n",
        "createdAt" : "2015-03-20T18:45:02Z",
        "updatedAt" : "2015-03-20T18:45:02Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2980a3f132e568248293fdc92e0803863f14f50",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\t\t\tContainers: []api.Container{\n\t\t\t\t\t{\n\t\t\t\t\t\tName:    \"synth-logger\",\n\t\t\t\t\t\tImage:   \"ubuntu:14.04\",\n\t\t\t\t\t\tCommand: []string{\"bash\", \"-c\", fmt.Sprintf(\"i=0; while ((i < %d)); do echo \\\"%d %s $i %s\\\"; i=$(($i+1)); done\", countTo, i, taintName, podName)},"
  },
  {
    "id" : "efbaad73-3632-40cb-ade6-7df090446139",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fa9fc85-a74f-4bc7-83ff-cd43a519c064",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I wrote a selector recently with just a single label as `labels.OneTermEqualSelector(\"name\", \"elasticsearch-logging\")` which is different from the form you're using here. I like the shorter form better but there's a TODO in [selector.go](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/labels/selector.go#L874) saying it should be removed so I'm hesitant to tell you to switch to use it. \n",
        "createdAt" : "2015-03-13T17:27:47Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "e02e12e3-4972-4447-9f92-3a830dbc605a",
        "parentId" : "6fa9fc85-a74f-4bc7-83ff-cd43a519c064",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Ack.\n",
        "createdAt" : "2015-03-13T18:19:33Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\t// Wait for the Elasticsearch pods to enter the running state.\n\tBy(\"Checking to make sure the Elasticsearch pods are running\")\n\tlabel := labels.SelectorFromSet(labels.Set(map[string]string{\"name\": \"elasticsearch-logging\"}))\n\tpods, err := c.Pods(ns).List(label)\n\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "88a21637-9095-466b-b9bc-c18b7183b618",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0de91906-7dea-4410-a5c0-f280133a9d57",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Can you make this a TODO so it doesn't get lost?\n",
        "createdAt" : "2015-03-13T17:31:33Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : null,
    "diffHunk" : "@@ -1,1 +61,65 @@\t// TODO: For now assume we are only testing cluster logging with Elasticsearch\n\t// on GCE. Once we are sure that Elasticsearch cluster level logging\n\t// works for other providers we should widen this scope of this test.\n\tif testContext.provider != \"gce\" {\n\t\tLogf(\"Skipping cluster level logging test for provider %s\", testContext.provider)"
  },
  {
    "id" : "7ff4e7ed-c475-4824-9aed-99b247e00090",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1745b1da-d2f2-414e-8a0a-908f89c51706",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Is there a way to poll ES so that we know when it's ready to be queried rather than doing a sleep here?\n",
        "createdAt" : "2015-03-13T17:36:22Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "55e408ed-b0ed-4b0b-a6bb-1acfac7212d0",
        "parentId" : "1745b1da-d2f2-414e-8a0a-908f89c51706",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I have no way of knowing if ES has the data unless I query it. The sleep here is tuned for the 100 log lines case.\n",
        "createdAt" : "2015-03-13T17:56:35Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +224,228 @@\t}\n\n\t// Wait a bit for the log information to make it into Elasticsearch.\n\ttime.Sleep(30 * time.Second)\n"
  },
  {
    "id" : "3ce98803-306e-4d25-b7b4-bfcc86f12dd4",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5b3891b-51bc-40c6-a68e-78dc5a19fb37",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "I'm a little confused - does ES really return HTTP status as a float rather than an int?\n",
        "createdAt" : "2015-03-13T17:38:25Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "419f9647-4688-4c5a-bfd2-7bac0d9efff2",
        "parentId" : "e5b3891b-51bc-40c6-a68e-78dc5a19fb37",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Yes, as far as I can tell.\n",
        "createdAt" : "2015-03-13T17:44:41Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : null,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\t}\n\t\tbreak\n\t}\n\tExpect(err).NotTo(HaveOccurred())\n\tif int(statusCode) != 200 {"
  },
  {
    "id" : "b39da0ff-a01b-4e5d-a09f-08ad639a35ae",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32d2c816-b2a4-4567-81a4-f2a643ab2d3b",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Would BusyBox suit the needs here? We've had complaints about having to download so many large images in our e2es.\n",
        "createdAt" : "2015-03-13T17:44:25Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "116f00cc-ef83-44a5-9cb8-e292f02cf8e6",
        "parentId" : "32d2c816-b2a4-4567-81a4-f2a643ab2d3b",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "ubuntu 14.04 will already have been downloaded since it is used in the Elasticsearch and Kibana images.\n",
        "createdAt" : "2015-03-13T17:47:20Z",
        "updatedAt" : "2015-03-17T18:51:37Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\t\t\t\t{\n\t\t\t\t\t\tName:    \"synth-logger\",\n\t\t\t\t\t\tImage:   \"ubuntu:14.04\",\n\t\t\t\t\t\tCommand: []string{\"bash\", \"-c\", fmt.Sprintf(\"i=0; while ((i < %d)); do echo \\\"%d %s $i %s\\\"; i=$(($i+1)); done\", countTo, i, underscoreName, podName)},\n\t\t\t\t\t},"
  },
  {
    "id" : "1663fb35-28df-4267-bc22-466d40df6a90",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d64a1c8-a886-4fe2-89f7-515fbfe8da89",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Since you're using it in a few places, you may as well add `sleepTime = 5 * time.Second` as a const too.\n",
        "createdAt" : "2015-03-17T04:11:30Z",
        "updatedAt" : "2015-03-17T18:51:38Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "1a6160a8-e8bf-40e8-b158-97bee23d6eb7",
        "parentId" : "7d64a1c8-a886-4fe2-89f7-515fbfe8da89",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I expect to change these values as I tune the test.\n",
        "createdAt" : "2015-03-17T16:52:01Z",
        "updatedAt" : "2015-03-17T18:51:38Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@\tvar err error\n\tconst graceTime = 5 * time.Minute\n\tfor start := time.Now(); time.Since(start) < graceTime; time.Sleep(5 * time.Second) {\n\t\tif _, err = s.Get(\"elasticsearch-logging\"); err == nil {\n\t\t\tbreak"
  },
  {
    "id" : "bda0e918-fdcc-4f9f-82b9-c3580709d8d1",
    "prId" : 5269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c4305d0-1ef9-4111-8e18-2ff6f92e40db",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "If this always rounds properly, then why not use it above (`int(statusCode) != 200`) instead of doing `Abs(statusCode - 200) > 0.001`?\nAnd if this doesn't always round properly, then it probably shouldn't be relied on here :)\n",
        "createdAt" : "2015-03-17T04:22:10Z",
        "updatedAt" : "2015-03-17T18:51:38Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2042f1bf9e989288e2aebd9dfe56472fcef53620",
    "line" : null,
    "diffHunk" : "@@ -1,1 +262,266 @@\t\t\tcontinue\n\t\t}\n\t\ttotal := int(totalF)\n\t\tif total < expected {\n\t\t\tLogf(\"After %v expecting to find %d log lines but saw only %d\", time.Since(start), expected, total)"
  }
]