[
  {
    "id" : "a88b8800-82f0-4d0a-9293-59d8616c20e1",
    "prId" : 100637,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100637#pullrequestreview-624714893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a6ffe92-2538-4ccc-8b3d-7c3e2e9d8c16",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this mean that pods created from job / cronjob / replicationcontroller / custom-pod-spec-containing objects don't work properly with CSIStorageCapacity?",
        "createdAt" : "2021-03-30T20:52:39Z",
        "updatedAt" : "2021-04-21T07:58:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "64a3ae26-b053-4fd9-9138-affa93020813",
        "parentId" : "0a6ffe92-2538-4ccc-8b3d-7c3e2e9d8c16",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "The RBAC rules need to be adapted depending on how the external-provisioner gets deployed. This is basically just an example of how to do it, not necessarily what everyone has to use.",
        "createdAt" : "2021-03-30T21:21:47Z",
        "updatedAt" : "2021-04-21T07:58:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c794b5c442b18b078b287bcbb25bb18b9eb439cd",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +104,108 @@# for CSIStorageCapacity. They are sufficient for deployment via\n# StatefulSet (only needs to get Pod) and Deployment (needs to get\n# Pod and then ReplicaSet to find the Deployment).\n- apiGroups: [\"\"]\n  resources: [\"pods\"]"
  },
  {
    "id" : "84449af2-f84e-4ea6-acd8-776ff51c7d76",
    "prId" : 76192,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76192#pullrequestreview-223444679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "492c2feb-1073-4252-b02c-6a67438c6281",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Hm I'm curious why the PD CSI tests are not failing due to this?  I updated PD provisioner version yesterday",
        "createdAt" : "2019-04-05T15:56:32Z",
        "updatedAt" : "2019-04-05T15:56:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "9f876520-ac01-4146-bf93-920cd62390b8",
        "parentId" : "492c2feb-1073-4252-b02c-6a67438c6281",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "the PD driver has attacher+provisioner in the same pod, so the pod's serviceaccount has update PV permissions already from the attacher rbac https://github.com/kubernetes/kubernetes/blob/master/test/e2e/testing-manifests/storage-csi/gce-pd/controller_ss.yaml#L16",
        "createdAt" : "2019-04-05T16:17:25Z",
        "updatedAt" : "2019-04-05T16:17:25Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "eae68f92-069c-419f-9362-4a01027426c1",
        "parentId" : "492c2feb-1073-4252-b02c-6a67438c6281",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Ah thanks. We've been contemplating if requiring new rbac permissions should be considered backwards incompatible or not.  I'm a bit on the fence.  We could define it such that if you update the image, you must update the rbacs first. cc @jsafrane @pohly ",
        "createdAt" : "2019-04-05T16:31:19Z",
        "updatedAt" : "2019-04-05T16:31:19Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d7a05b08-1afc-4797-a6bc-110497c75b8f",
        "parentId" : "492c2feb-1073-4252-b02c-6a67438c6281",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "I think it should be considered backwards incompatible, but even if it were defined that way, how do you check or enforce it? I forgot to do it here, tooling to foolproof this would be quite complicated. (& when I changed leader election in the lib I got dozens of reports about permission denied from people like me who updated image w/o also updating RBAC (& it will happen again when the default becomes Leases)).",
        "createdAt" : "2019-04-05T16:49:01Z",
        "updatedAt" : "2019-04-05T16:49:01Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "e837e2d3-e317-4b37-9697-1951bfc95790",
        "parentId" : "492c2feb-1073-4252-b02c-6a67438c6281",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "My position is that a new image is compatible with a previous deployment if it can be dropped into that deployment *without* any changes of that deployment (no command line changes, no RBAC rule changes). If it is not compatible, the image has to be released with a major version bump, to warn users that there is some incompatible change.\r\n\r\nThe CI is going to test this, by dropping new images into unchanged old deployments and running the tests that this deployment is expected to pass.\r\n\r\nIf the new image can replace the old one with deployment changes and the same features still work (including alpha!) on all Kubernetes versions that we used to support with that deployment, then that's okay. Just because there was a \"1.1.0\" IMHO is not a guarantee that we'll support that branch. Our guarantee is only that the currently supported Kubernetes versions always have a supported image and that features will not stop working (again, including alpha).\r\n\r\nNot removing support for alpha features on older Kubernetes versions is perhaps debatable, but I think it is consistent with what Kubernetes does.",
        "createdAt" : "2019-04-05T19:32:45Z",
        "updatedAt" : "2019-04-05T19:32:45Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c802f810451da82be31fc813ad8b17d5fa01c535",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +29,33 @@  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]"
  }
]