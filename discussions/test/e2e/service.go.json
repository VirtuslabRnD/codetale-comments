[
  {
    "id" : "0174a8b2-b119-45ce-a3f3-5a05ea1ac681",
    "prId" : 47986,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47986#pullrequestreview-46095002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39561dde-8b91-4c75-b28e-1fa15b111cd7",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "@nicksardo Changed assignment order.",
        "createdAt" : "2017-06-23T21:16:10Z",
        "updatedAt" : "2017-06-23T21:16:10Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "c7b28b5e-3392-47a1-80f7-64ba21852713",
        "parentId" : "39561dde-8b91-4c75-b28e-1fa15b111cd7",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "Awesome, thanks!",
        "createdAt" : "2017-06-23T21:26:36Z",
        "updatedAt" : "2017-06-23T21:26:36Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cb9f5d83d768041dd55370b53018357e6019017",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1418,1422 @@\t\t\t\tif len(svc.Spec.Ports) != 0 {\n\t\t\t\t\tsvc.Spec.Ports[0].TargetPort = intstr.FromInt(int(svc.Spec.Ports[0].Port))\n\t\t\t\t\tsvc.Spec.Ports[0].Port = 8081\n\t\t\t\t}\n"
  },
  {
    "id" : "b85fa1bd-58f0-4b9c-bbf1-3a6d90deddb2",
    "prId" : 34030,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34030#pullrequestreview-2768575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56d5fe60-299e-4670-bed7-a7be24040e55",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "FYI the `Failf` will abort, so you don't really need this line.\n",
        "createdAt" : "2016-10-04T17:55:47Z",
        "updatedAt" : "2016-10-04T17:56:11Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "695ee168-6b65-4a35-b4f6-7e011a678f47",
        "parentId" : "56d5fe60-299e-4670-bed7-a7be24040e55",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Right, thanks for telling!\n",
        "createdAt" : "2016-10-04T17:58:42Z",
        "updatedAt" : "2016-10-04T17:58:42Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d500921ea38330417c70236b601fda2917307d9",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2351,2355 @@\t\t// fail the test if output format is unexpected\n\t\tframework.Failf(\"exec pod returned unexpected stdout format: [%v]\\n\", stdout)\n\t\treturn execPodIp, \"\"\n\t}\n\treturn execPodIp, outputs[1]"
  },
  {
    "id" : "2332ce94-17d6-4497-bbbe-0267528b41e4",
    "prId" : 32183,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "108e08c1-4919-491b-8330-e5c2e28997e3",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "the way we do this in ingress e2e is first poll on the resources and wait for the servicecontroller to delete them in, say, 5m. If this happens, test pass. Otherwise test fails, but at the end we delete the resources ourselves. \n",
        "createdAt" : "2016-09-07T17:15:04Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "f6a1cc6d-fd8c-4ae9-a6b2-36403633203d",
        "parentId" : "108e08c1-4919-491b-8330-e5c2e28997e3",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "@mfanjie I agree with @bprashanth - I see you have this called from AfterEac - I think we should not cleanup immediately. Lets delete the services, then keep polling to observe that servicecontroller cleans up after service deletion.\nWe cleanup only as a last resort and also fail the test if we have to cleanup.\n",
        "createdAt" : "2016-09-07T17:26:25Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "4e15c9f0-b4cf-4d91-a3f3-897ced3c26b5",
        "parentId" : "108e08c1-4919-491b-8330-e5c2e28997e3",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "the behavior you mentioned existing in current code.\nif you look at https://github.com/kubernetes/kubernetes/blob/master/test/e2e/service.go#L748-L766, the last step of the it is changing the service type back to cluster ip and waiting for the LB deletion, so the leak is only possible when error occurs during the service LB type being changed, or some panic happened before that. (we might need wrap this block and put to defer).\nIn addition, we need to clean the related resource in case the above description does not behave correctly.\nThere are two service being set LB type for the whole service e2e, tcp service, udp service for `mutability-test` , and `external-local` service, and is not reused in different It(). Only these three service LB names are put to the string array, so it results same in AfterEach or in last resort.\n",
        "createdAt" : "2016-09-08T02:26:51Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "cab74c20-0217-4aad-bbbb-efc3cdecfde6",
        "parentId" : "108e08c1-4919-491b-8330-e5c2e28997e3",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "we're adding a test that deletes an lb service, that's why i tagged Girish: https://github.com/kubernetes/kubernetes/pull/31991/files#diff-20a4e2095b63ecd60dd25e78bcd67372R1232\n",
        "createdAt" : "2016-09-10T01:04:04Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0f7075bf-d749-41a1-accb-84a5432cb333",
        "parentId" : "108e08c1-4919-491b-8330-e5c2e28997e3",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Actually the test already exists and I think we just don't cleanup the lb (https://github.com/kubernetes/kubernetes/blob/master/test/e2e/service.go#L1087) but I didn't look too close, maybe we do in some aftereach block\n",
        "createdAt" : "2016-09-10T01:07:42Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "66381c669472798912d8c05df7e1a320b1d9314f",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +2746,2750 @@func cleanupServiceGCEResources(loadBalancerName string) {\n\tif pollErr := wait.Poll(5*time.Second, lbCleanupTimeout, func() (bool, error) {\n\t\tif err := framework.CleanupGCEResources(loadBalancerName); err != nil {\n\t\t\tframework.Logf(\"Still waiting for glbc to cleanup: %v\", err)\n\t\t\treturn false, nil"
  },
  {
    "id" : "1af98b7e-19fb-4d3c-8f52-1400813ff8ec",
    "prId" : 31138,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bb62cec-15c4-4925-9c13-d800df45bf37",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "@girishkalele looks like the pattern used elsewhere is Feature:CapitalFeatureName, so this should be `[Feature:ExternalTrafficLocalOnly]`. Can you fix and update in [job spec](https://github.com/kubernetes/test-infra/blob/master/jenkins/job-configs/kubernetes-jenkins/kubernetes-e2e-gce.yaml#L165)?\n",
        "createdAt" : "2016-08-29T23:01:55Z",
        "updatedAt" : "2016-08-29T23:01:55Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "419e2241dae60b277f4d131a1745b855af10938b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +970,974 @@\t})\n\n\tIt(\"should be able to create services of type LoadBalancer and externalTraffic=localOnly [Slow][Feature:externalTrafficLocalOnly]\", func() {\n\t\t// requires cloud load-balancer support - this feature currently supported only on GCE/GKE\n\t\tframework.SkipUnlessProviderIs(\"gce\", \"gke\")"
  },
  {
    "id" : "21103b59-25ef-4860-9662-e35ea719c047",
    "prId" : 26559,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3b7048-e1d7-43a4-bf15-6b9c478fa280",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Does this really need to run before each? Can't it just be assigned above?\n",
        "createdAt" : "2016-06-01T16:16:56Z",
        "updatedAt" : "2016-06-01T16:16:56Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ab3f1e1d5f6a7795ec0dbd50dfaa0298d1113c6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +70,74 @@\n\tBeforeEach(func() {\n\t\tc = f.Client\n\t})\n"
  },
  {
    "id" : "f00851a4-c58f-48c2-9dfb-7c68d46ddcd3",
    "prId" : 19541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5d8214a-9064-407f-ac7d-02d2e52fd291",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@bprashanth could you take a look at this e2e change?\n",
        "createdAt" : "2016-01-20T18:30:50Z",
        "updatedAt" : "2016-01-31T20:40:00Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "e995cb01-bbf5-4063-9e77-de074566bdc6",
        "parentId" : "b5d8214a-9064-407f-ac7d-02d2e52fd291",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@bprashanth a friendly reminder.\n",
        "createdAt" : "2016-01-22T17:50:44Z",
        "updatedAt" : "2016-01-31T20:40:00Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b4662d8d02d98c2df4ed36e9f0b1e1e016517a",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +606,610 @@\t\t// Updating the service type shouldn't change the Status immediately. The status should be\n\t\t// updated after waitForLoadBalancerDestroy.\n\t\tif len(service.Status.LoadBalancer.Ingress) == 0 {\n\t\t\tFailf(\"got unexpected len(Status.LoadBalancer.Ingress) for NodePort service: %v\", service)\n\t\t}"
  },
  {
    "id" : "2dfd5c8e-70fb-4203-80f4-36ed5ddba9e8",
    "prId" : 18532,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48ed2dc7-d4dd-4011-aa20-47d08489a87e",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is there a reason we can't just simplify this to\n\n``` go\nnodePort2 := ServiceNodePortRange.Base + (nodePort1 + i) % ServiceNodePortRange.Size\n```\n\n? The multiple offsets with subtraction and addition is a little confusing to follow.\n",
        "createdAt" : "2015-12-11T00:19:24Z",
        "updatedAt" : "2015-12-11T00:34:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "58fd520d-7a2d-4859-9ca6-9214dde2e838",
        "parentId" : "48ed2dc7-d4dd-4011-aa20-47d08489a87e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "That doesn't give me the loop I want.  I could just linear search from base\nto base+limit if you think that would be easier to understand, but I\nthought this was not too bad - get the offset of nodePort1, increment it\nwith wraparound, add it to base.\n\nOn Thu, Dec 10, 2015 at 4:20 PM, Jeff Grafton notifications@github.com\nwrote:\n\n> In test/e2e/service.go\n> https://github.com/kubernetes/kubernetes/pull/18532#discussion_r47307011\n> :\n> \n> > @@ -504,15 +504,22 @@ var _ = Describe(\"Services\", func() {\n> >         By(\"hitting the pod through the service's LoadBalancer\")\n> >         testLoadBalancerReachable(ingress1, 80)\n> > -       By(\"changing service \" + serviceName + \" update NodePort\")\n> > -       nodePort2 := nodePort1 - 1\n> > -       if !ServiceNodePortRange.Contains(nodePort2) {\n> > -           //Check for (unlikely) assignment at bottom of range\n> > -           nodePort2 = nodePort1 + 1\n> > -       By(\"changing service \" + serviceName + \": update NodePort\")\n> > -       nodePort2 := 0\n> > -       for i := 1; i < ServiceNodePortRange.Size; i++ {\n> > -           offs1 := nodePort1 - ServiceNodePortRange.Base\n> \n> is there a reason we can't just simplify this to\n> \n> nodePort2 := ServiceNodePortRange.Base + (nodePort1 + i) % ServiceNodePortRange.Size\n> \n> ? The multiple offsets with subtraction and addition is a little confusing\n> to follow.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18532/files#r47307011.\n",
        "createdAt" : "2015-12-11T00:35:40Z",
        "updatedAt" : "2015-12-11T00:35:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "9057e064-8393-41d3-a27e-d5ee31bc4696",
        "parentId" : "48ed2dc7-d4dd-4011-aa20-47d08489a87e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think it's good enough (I also spent some time thinking why it is correct, but it seems to be).\nAnyway - I'm going to manually merge this PR to see if that helps.\n",
        "createdAt" : "2015-12-11T07:09:29Z",
        "updatedAt" : "2015-12-11T07:09:29Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "26adf984-b2db-4663-a57b-8906bbf52a00",
        "parentId" : "48ed2dc7-d4dd-4011-aa20-47d08489a87e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "If we decide that it's too complicated, we can fix that in a follow-up PR, I guess.\n",
        "createdAt" : "2015-12-11T07:10:00Z",
        "updatedAt" : "2015-12-11T07:10:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad22d00e4038eb05d29f21aabbaba4cf3c545a40",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +508,512 @@\t\tnodePort2 := 0\n\t\tfor i := 1; i < ServiceNodePortRange.Size; i++ {\n\t\t\toffs1 := nodePort1 - ServiceNodePortRange.Base\n\t\t\toffs2 := (offs1 + i) % ServiceNodePortRange.Size\n\t\t\tnodePort2 = ServiceNodePortRange.Base + offs2"
  },
  {
    "id" : "6a80249a-23d6-4f7b-a342-fb0969790c7c",
    "prId" : 15777,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d63c2dd-460a-454f-a387-57ff7b0494bc",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "never heard of `ss`; learned something new today :)\n",
        "createdAt" : "2015-10-19T15:22:49Z",
        "updatedAt" : "2015-11-17T19:49:28Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "5cbb7a87-598d-40cc-a471-908be5036505",
        "parentId" : "9d63c2dd-460a-454f-a387-57ff7b0494bc",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "`grep` before `tail`?\n",
        "createdAt" : "2015-10-19T15:45:02Z",
        "updatedAt" : "2015-11-17T19:49:28Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "222a71b3-730b-4b61-9113-9fdf658cb46a",
        "parentId" : "9d63c2dd-460a-454f-a387-57ff7b0494bc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the tail only skips a line. Should be fine.\n",
        "createdAt" : "2015-10-19T16:48:16Z",
        "updatedAt" : "2015-11-17T19:49:28Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d6c2eb8976db71f5fe8a2afc1dc365efd8fdd39",
    "line" : null,
    "diffHunk" : "@@ -1,1 +396,400 @@\n\t\thostExec := LaunchHostExecPod(f.Client, f.Namespace.Name, \"hostexec\")\n\t\tcmd := fmt.Sprintf(`ss -ant46 'sport = :%d' | tail -n +2 | grep LISTEN`, nodePort)\n\t\tstdout, err := RunHostCmd(hostExec.Namespace, hostExec.Name, cmd)\n\t\tif err != nil {"
  },
  {
    "id" : "c1561757-a3d0-4a85-819c-59e794f0b0d0",
    "prId" : 15777,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f097494-48ee-4c93-8bff-ffc059fd8928",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "don't we want to `grep` before `tail`?\n",
        "createdAt" : "2015-10-19T15:44:46Z",
        "updatedAt" : "2015-11-17T19:49:28Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "42fc1937-963d-4e5e-bb9e-3e623f9920ef",
        "parentId" : "2f097494-48ee-4c93-8bff-ffc059fd8928",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "As above. It's not a `tail -f`. Moreover, I didn't want to touch the actual test.\n",
        "createdAt" : "2015-10-19T16:54:44Z",
        "updatedAt" : "2015-11-17T19:49:28Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d6c2eb8976db71f5fe8a2afc1dc365efd8fdd39",
    "line" : null,
    "diffHunk" : "@@ -1,1 +755,759 @@\n\t\thostExec := LaunchHostExecPod(f.Client, f.Namespace.Name, \"hostexec\")\n\t\tcmd := fmt.Sprintf(`! ss -ant46 'sport = :%d' | tail -n +2 | grep LISTEN`, nodePort)\n\t\tstdout, err := RunHostCmd(hostExec.Namespace, hostExec.Name, cmd)\n\t\tif err != nil {"
  },
  {
    "id" : "f88f3fce-af0a-467d-8413-c5cf07ded9ae",
    "prId" : 14646,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb5405e8-9f7c-4ea7-81b9-ca2b5071b9c9",
        "parentId" : null,
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "Can `code == 0 && err != nil` happen? if yes, we should check for `err != nil`?\n",
        "createdAt" : "2015-09-28T13:50:54Z",
        "updatedAt" : "2015-10-04T08:58:48Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "e302be2a-90da-4ebc-a4e4-1f000009da5d",
        "parentId" : "cb5405e8-9f7c-4ea7-81b9-ca2b5071b9c9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "probably. But I this is kind of out of scope of this PR. The code is the old code, just indented.\n",
        "createdAt" : "2015-09-28T15:12:47Z",
        "updatedAt" : "2015-10-04T08:58:48Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b041d4ec1163c511c05e27a1c50c56cfa439c6e9",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +541,545 @@\t\t\tcmd := fmt.Sprintf(`test -n \"$(ss -ant46 'sport = :%d' | tail -n +2 | grep LISTEN)\"`, nodePort)\n\t\t\t_, _, code, err := SSH(cmd, hosts[0], testContext.Provider)\n\t\t\tif code != 0 {\n\t\t\t\tFailf(\"expected node port (%d) to be in use\", nodePort)\n\t\t\t}"
  },
  {
    "id" : "9a5cc584-14cb-412a-a4ca-5d54384e8b5e",
    "prId" : 14431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d9279bb-08c3-4765-860e-17fb85f45f93",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "To Tim's point about reliability of the udp loadbalancer, can you confirm that a slightly heavier test runs as expected (throw some udp load at it via netcat, increase size of message, increase qps etc). You don't have to add it to the e2e, just check that it WAI. Since you mentione that you're using it already, that might be enough. \n",
        "createdAt" : "2015-11-10T00:12:48Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "60d4fa40-4715-48cc-965f-095037963026",
        "parentId" : "9d9279bb-08c3-4765-860e-17fb85f45f93",
        "authorId" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "body" : "I have been running it in production to LB two separate UDP SSL VPNs with no issues.  To be fair though, this is just about setting up the LB to point the traffic correctly. Once that is done, there isn't a difference as far as capability from the normal k8s LB.  Any dealings with performance characteristics (beyond setup and teardown) is more a factor of GCE than k8s\n",
        "createdAt" : "2015-11-10T02:12:04Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "tags" : [
        ]
      },
      {
        "id" : "602b5298-604b-40ba-a856-35569e1c6004",
        "parentId" : "9d9279bb-08c3-4765-860e-17fb85f45f93",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Yes, but at the end we'll get user reports that say: hey I tried lb with 1mb data grams and everything came to a grinding halt, maybe it's kube-proxy? and we'd say, aha- it's a gce limitation, and waste no more time ;)\n",
        "createdAt" : "2015-11-10T03:16:52Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e6c45c395b4cda611c6b325aa70c8475d446047",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1267,1271 @@\t}\n\n\tvar buf []byte = make([]byte, len(\"SUCCESS\")+1)\n\n\t_, err = con.Read(buf)"
  },
  {
    "id" : "dbf9f35d-57c0-4380-ad1e-2700763ad16c",
    "prId" : 14431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11dd2d9-330e-4707-8a4b-fb901ed97987",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "testReachableInTime polls, are you sure you don't need to?\n",
        "createdAt" : "2015-11-10T00:14:47Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "b1d482e0-8808-4f4b-8d47-ca4e822f9354",
        "parentId" : "d11dd2d9-330e-4707-8a4b-fb901ed97987",
        "authorId" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "body" : "The test was added in before testReachableInTIme polled and I never added it.  Sure, I can add it.\n",
        "createdAt" : "2015-11-10T02:12:44Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e6c45c395b4cda611c6b325aa70c8475d446047",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1257,1261 @@\tLogf(\"Testing reachability of %v\", uri)\n\n\tcon, err := net.Dial(\"udp\", ip+\":\"+string(port))\n\tif err != nil {\n\t\treturn false, fmt.Errorf(\"Failed to connect to: %s:%d (%s)\", ip, port, err.Error())"
  },
  {
    "id" : "ca7121ef-64be-464c-ab97-0b58ded3d2e4",
    "prId" : 11077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b2b3e84-4fcf-427a-90c5-d5662d5b9ed8",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "should there be a timeout or backoff between successive retries?\n",
        "createdAt" : "2015-07-10T21:34:17Z",
        "updatedAt" : "2015-07-10T21:34:17Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "ddec0306-5163-433b-974e-1687186fed87",
        "parentId" : "5b2b3e84-4fcf-427a-90c5-d5662d5b9ed8",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "The main thing this is guarding against is conflict, which is fixed by re-fetching the service and changing the updated one. In the case of timeout, it waits on the call to actually timeout.\n",
        "createdAt" : "2015-07-10T21:38:54Z",
        "updatedAt" : "2015-07-10T21:38:54Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca4559bbdd4f91a7d02db50f18fe384c0975491",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +812,816 @@\tvar service *api.Service\n\tvar err error\n\tfor i := 0; i < 3; i++ {\n\t\tservice, err = c.Services(namespace).Get(serviceName)\n\t\tif err != nil {"
  },
  {
    "id" : "3aaf676a-f762-4575-8741-2a9e6df9f33c",
    "prId" : 11077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2a04cc9-f152-4515-abb9-939a7c2dd830",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could also be a rate-limit error, though we retry those in the client library a few times already.\n",
        "createdAt" : "2015-07-13T19:15:27Z",
        "updatedAt" : "2015-07-13T19:15:27Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca4559bbdd4f91a7d02db50f18fe384c0975491",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +822,826 @@\t\tservice, err = c.Services(namespace).Update(service)\n\n\t\tif !errors.IsConflict(err) && !errors.IsServerTimeout(err) {\n\t\t\treturn service, err\n\t\t}"
  },
  {
    "id" : "d231d008-3364-4f3f-9bae-93f3e1441fca",
    "prId" : 11077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20dcba17-3095-4122-b8a1-9b9b02bad885",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "You could also do an unsafe update, without specifying resourceVersion, or use Patch instead of Update.\n\nThat wouldn't solve the timeout problem, though.\n",
        "createdAt" : "2015-07-13T19:16:28Z",
        "updatedAt" : "2015-07-13T19:16:28Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca4559bbdd4f91a7d02db50f18fe384c0975491",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +820,824 @@\t\tupdate(service)\n\n\t\tservice, err = c.Services(namespace).Update(service)\n\n\t\tif !errors.IsConflict(err) && !errors.IsServerTimeout(err) {"
  },
  {
    "id" : "96df2c85-43c8-4659-bba2-e47e1b38ea8b",
    "prId" : 9987,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7208bda-372d-4606-923d-b51e2d2fcbf5",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I thought that \"stopping\" the RC would do this (or maybe kubectl just wraps it on the CLI to make it more user friendly). \n",
        "createdAt" : "2015-06-18T20:31:42Z",
        "updatedAt" : "2015-06-18T22:59:55Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "784ce238-9fe0-4298-9d4f-04a5209861fc",
        "parentId" : "e7208bda-372d-4606-923d-b51e2d2fcbf5",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Yeah, I think it's just a wrapper—that's where I got the idea for the name \"stop.\" Check out:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/stop.go#L100\n",
        "createdAt" : "2015-06-18T22:16:06Z",
        "updatedAt" : "2015-06-18T22:59:55Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2803fbe3434b24a623a7714b0c34b2a81eefe096",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +1172,1176 @@\tfor rcName := range t.rcs {\n\t\tBy(\"stopping RC \" + rcName + \" in namespace \" + t.Namespace)\n\t\t// First, resize the RC to 0.\n\t\told, err := t.Client.ReplicationControllers(t.Namespace).Get(rcName)\n\t\tif err != nil {"
  },
  {
    "id" : "383ac563-e25f-4ef8-aab4-060031bbac5f",
    "prId" : 9724,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cae87f1-50d3-4424-97e0-89745adefd72",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Please add comment explaining the ridiculously long timeout, with internal reference to b/21807001\n",
        "createdAt" : "2015-06-12T18:40:51Z",
        "updatedAt" : "2015-06-12T18:54:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ffa9541e-9ebb-4912-9cac-d1a5c2356752",
        "parentId" : "5cae87f1-50d3-4424-97e0-89745adefd72",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-06-12T18:54:10Z",
        "updatedAt" : "2015-06-12T18:54:10Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf9fec5bc2e5985ea03bc410c7a9deaec74d05bc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +810,814 @@func waitForLoadBalancerIngress(c *client.Client, serviceName, namespace string) (*api.Service, error) {\n\t// TODO: once support ticket 21807001 is resolved, reduce this timeout back to something reasonable\n\tconst timeout = 20 * time.Minute\n\tvar service *api.Service\n\tBy(fmt.Sprintf(\"waiting up to %v for service %s in namespace %s to have a LoadBalancer ingress point\", timeout, serviceName, namespace))"
  },
  {
    "id" : "f2833ca5-a34c-415b-95ed-b301664a761e",
    "prId" : 9724,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ecfcd74-9f2c-4648-9d60-5fcbf5c342ab",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Same as above.\n",
        "createdAt" : "2015-06-12T18:41:02Z",
        "updatedAt" : "2015-06-12T18:54:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "aa555c6b-cf5e-4865-bb1e-a703fad9b380",
        "parentId" : "4ecfcd74-9f2c-4648-9d60-5fcbf5c342ab",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-06-12T18:54:14Z",
        "updatedAt" : "2015-06-12T18:54:14Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf9fec5bc2e5985ea03bc410c7a9deaec74d05bc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +829,833 @@func waitForLoadBalancerDestroy(c *client.Client, serviceName, namespace string) (*api.Service, error) {\n\t// TODO: once support ticket 21807001 is resolved, reduce this timeout back to something reasonable\n\tconst timeout = 10 * time.Minute\n\tvar service *api.Service\n\tBy(fmt.Sprintf(\"waiting up to %v for service %s in namespace %s to have no LoadBalancer ingress points\", timeout, serviceName, namespace))"
  },
  {
    "id" : "3c5fde0f-6e5b-40a2-9809-f75360ae7b1c",
    "prId" : 9648,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f228526-e306-4529-a870-e3cbad08d7c4",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Was this `By(...)` not useful? Perhaps it's worth keeping as a log?\n",
        "createdAt" : "2015-06-11T16:28:37Z",
        "updatedAt" : "2015-06-16T06:54:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "f139319b-735a-4234-a898-68f7c279c7da",
        "parentId" : "7f228526-e306-4529-a870-e3cbad08d7c4",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "This is done.\n",
        "createdAt" : "2015-06-11T22:18:44Z",
        "updatedAt" : "2015-06-16T06:54:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "145f59f12fb831b01375df7ad0f26b837c011bce",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +1027,1031 @@\t\t\treturn false, nil\n\t\t}\n\t\tdefer resp.Body.Close()\n\t\tbody, err := ioutil.ReadAll(resp.Body)\n\t\tif err != nil {"
  },
  {
    "id" : "386930dc-3aa6-4e78-a27a-83e2b7da60c0",
    "prId" : 9648,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e1493a-91b5-43ad-8cc6-709db4cf7679",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Please add some affirmative logging here\n",
        "createdAt" : "2015-06-11T16:35:55Z",
        "updatedAt" : "2015-06-16T06:54:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "145f59f12fb831b01375df7ad0f26b837c011bce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1058,1062 @@\t\tif err != nil {\n\t\t\tLogf(\"Successfully waited for the url %s to be unreachable.\", url)\n\t\t\treturn true, nil\n\t\t}\n\t\tdefer resp.Body.Close()"
  },
  {
    "id" : "29587062-30ad-4388-b9a1-e2409ed18d6c",
    "prId" : 9648,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ccd9e16-e1b1-4d6a-8bd5-5864abe765f2",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Please add a log line here on failure (there are so many logging lines we're removing, so it would be nice to have at least one so that both (a) log output viewers and (b) code readers can really quickly see what happened).\n",
        "createdAt" : "2015-06-11T16:36:54Z",
        "updatedAt" : "2015-06-16T06:54:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "145f59f12fb831b01375df7ad0f26b837c011bce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1067,1071 @@\t\t}\n\t\tLogf(\"Able to reach service %s when should no longer have been reachable, status:%d and body: %s\", url, resp.Status, string(body))\n\t\treturn false, nil\n\t}))\n}"
  },
  {
    "id" : "142eba78-a9a7-4465-bba8-8138dc155233",
    "prId" : 7970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c62cae1-0b04-404b-ac9f-97860f375448",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Could you please add method which creates service in test/e2e/util.go and use it here?\n\nOptional: Use it in other places in this file.\n",
        "createdAt" : "2015-05-11T12:46:49Z",
        "updatedAt" : "2015-05-14T11:43:23Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "c7bcc93f-00b1-4c7e-abc9-dc38f3b478b9",
        "parentId" : "5c62cae1-0b04-404b-ac9f-97860f375448",
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "As discussed, I'll ignore this comment.\n",
        "createdAt" : "2015-05-13T14:23:30Z",
        "updatedAt" : "2015-05-14T11:43:23Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      }
    ],
    "commit" : "672819be16716ad216828a2752ed1ecaf1de1cb6",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +310,314 @@\t\t\t},\n\t\t}\n\t\t_, err := c.Services(ns).Create(service)\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\tport1 := 100"
  },
  {
    "id" : "0997349c-3765-44b1-bae3-2f7e60fe69df",
    "prId" : 6948,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "376885a7-d472-4a46-85f1-0028f9ac73bd",
        "parentId" : null,
        "authorId" : null,
        "body" : "But we already wait for the pod to be running (waitForPodRunning()) above?  What exactly are we waiting for here?\n",
        "createdAt" : "2015-04-17T19:45:16Z",
        "updatedAt" : "2015-04-17T19:45:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "521e97fc-16dd-4668-a42a-8df364a7dd02",
        "parentId" : "376885a7-d472-4a46-85f1-0028f9ac73bd",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "waitForPodRuninng makes sure the pod is in the running state. Here we are waiting for it to be reachable through the external load balancer. It might be clearer if we used a different name for the timeout here. \n",
        "createdAt" : "2015-04-17T20:33:34Z",
        "updatedAt" : "2015-04-17T20:33:34Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "6209249976e8234030d651765fb7b8c6a3088160",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +331,335 @@\t\tBy(\"hitting the pod through the service's external load balancer\")\n\t\tvar resp *http.Response\n\t\tfor t := time.Now(); time.Since(t) < podStartTimeout; time.Sleep(5 * time.Second) {\n\t\t\tresp, err = http.Get(fmt.Sprintf(\"http://%s:%d\", ip, port))\n\t\t\tif err == nil {"
  },
  {
    "id" : "5aa94f3e-42fa-4c67-bbe1-9d6eadb0cb9d",
    "prId" : 6125,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad8bb828-49d1-43d8-b4fa-61a4dced32bc",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe include 'services' in the name, so we can tell where this comes from? or 'service.go' or something like that.\n",
        "createdAt" : "2015-03-28T00:06:23Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a0dfe97c-6de4-4ba2-a6f5-9803738a99ac",
        "parentId" : "ad8bb828-49d1-43d8-b4fa-61a4dced32bc",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "also, should there be a step at some point which deletes everything from these namespaces?\n",
        "createdAt" : "2015-03-28T00:12:40Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "e6592dbc-65ee-43e2-9274-52ed19a5fb74",
        "parentId" : "ad8bb828-49d1-43d8-b4fa-61a4dced32bc",
        "authorId" : null,
        "body" : "I had to shorten then name to prevent the concatenation of namespace and name from exceeding the 61 character limit imposed by GCE.  That's essentially a bug in Kubernetes, that will have to be fixed separately.  Kubernetes just concatenates them, and fils if the result exceeds the limit of the cloud provider.  I suggest that we leave as is until that bug is fixed.\n",
        "createdAt" : "2015-03-28T00:15:22Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "887605dd-eb8a-441c-9e82-27cb16f4b28d",
        "parentId" : "ad8bb828-49d1-43d8-b4fa-61a4dced32bc",
        "authorId" : null,
        "body" : "As for deleting the namespaces, yes, I will add some additional cleanup code in AfterEach(), but that requires a PR that derekwaynecarr@ is still working on (I believe), to allow me to delete entire namespaces.\n",
        "createdAt" : "2015-03-28T00:16:46Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "b28a66b1-30e8-4c9b-a3ef-ef9dbc4ead87",
        "parentId" : "ad8bb828-49d1-43d8-b4fa-61a4dced32bc",
        "authorId" : null,
        "body" : "PS: I suggest merging as is for now, and adding namespace deletion in a second pass.  What we have here already is a vast improvement over the status quo.  Adding namespace deletion will be a further improvement.\n",
        "createdAt" : "2015-03-30T14:57:24Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a4dde6e2cb8eef4bd906bc167b9e08a4cae3cfa1",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +42,46 @@\t\tc, err = loadClient()\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\tnamespace0 = \"e2e-ns-\" + dateStamp() + \"-0\"\n\t\tnamespace1 = \"e2e-ns-\" + dateStamp() + \"-1\"\n\t})"
  },
  {
    "id" : "4f87dfbb-a0c7-43e2-9836-a2f613e004c6",
    "prId" : 6125,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "758ee39b-22fb-4282-88e5-6630a832e5d7",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "wondering if instead we should have a function in test/e2e/util.go which generates a namespace name (perhaps parameterized on test name etc as well)?\n",
        "createdAt" : "2015-03-28T00:10:23Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "48927c75-d327-4d65-b6dd-f7fe4db1896d",
        "parentId" : "758ee39b-22fb-4282-88e5-6630a832e5d7",
        "authorId" : null,
        "body" : "Agreed.  I decided to keep everything inside this test for now, just to verify that it stabilizes Jenkins e2e over the weekend.  I plan to clean all of this up nicely across all e2e tests soon, but that is a bigger and lower priority item.\n",
        "createdAt" : "2015-03-28T00:18:18Z",
        "updatedAt" : "2015-03-30T22:49:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a4dde6e2cb8eef4bd906bc167b9e08a4cae3cfa1",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +461,465 @@// dateStamp returns the current time as a string \"YYYY-MM-DDTHHMMSS\"\n// Handy for unique names across test runs\nfunc dateStamp() string {\n\tnow := time.Now()\n\treturn fmt.Sprintf(\"%04d-%02d-%02dt%02d%02d%02d\", now.Year(), now.Month(), now.Day(), now.Hour(), now.Minute(), now.Second())"
  },
  {
    "id" : "9e033969-01b0-47b9-952c-eed96ad76cf3",
    "prId" : 5772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19915224-b703-4e3c-993d-98b8743e8a4c",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Do we have a specific label we can use for this image?\n",
        "createdAt" : "2015-03-23T01:39:07Z",
        "updatedAt" : "2015-03-23T18:10:17Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "ef84218b-71df-462e-bb5c-706598d5b39a",
        "parentId" : "19915224-b703-4e3c-993d-98b8743e8a4c",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "It doesn't look like there are any: https://registry.hub.docker.com/u/kubernetes/test-webserver/tags/manage/\n\nThat shouldn't be an issue for this test since all we want is any sort of successful response to an HTTP request, but may potentially matter to the DNS test above.\n",
        "createdAt" : "2015-03-23T05:16:02Z",
        "updatedAt" : "2015-03-23T18:10:17Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "3f266e05-3612-499d-955b-57f3fffa9a07",
        "parentId" : "19915224-b703-4e3c-993d-98b8743e8a4c",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "You could consider using kubernetes/serve_hostname:1.1 which is small and just returns the hostname. \n",
        "createdAt" : "2015-03-23T05:58:36Z",
        "updatedAt" : "2015-03-23T18:10:17Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "22825b1045c346c833b3382cb87a55c295d9cb5d",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +299,303 @@\t\t\t\t\t{\n\t\t\t\t\t\tName:  \"webserver\",\n\t\t\t\t\t\tImage: \"kubernetes/test-webserver\",\n\t\t\t\t\t},\n\t\t\t\t},"
  },
  {
    "id" : "c66a556e-df0a-4074-b899-4b76a02c5b50",
    "prId" : 5772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb9ee0dc-fd72-44fc-a70a-5451faf5e8d0",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "What does test-webserver return in the body? If you use the container that reports the hostname and pin the pod you start to a known host, then you could verify that the body here is the hostname you expect (which will provide a slightly better guarantee since then we will also know that the service routing is working correctly). \n",
        "createdAt" : "2015-03-23T01:40:38Z",
        "updatedAt" : "2015-03-23T18:10:17Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "af663f70-c557-4f08-95d2-3b09c6275e0c",
        "parentId" : "cb9ee0dc-fd72-44fc-a70a-5451faf5e8d0",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "It returns an index page with links to a few sub-pages. Rather than adding the extra overhead of grabbing the hostnames and requiring this to run on a particular one, I've added a check that the string test-webserver is in the body output.\n",
        "createdAt" : "2015-03-23T05:50:21Z",
        "updatedAt" : "2015-03-23T18:10:17Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "22825b1045c346c833b3382cb87a55c295d9cb5d",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +328,332 @@\t\tdefer resp.Body.Close()\n\n\t\tbody, err := ioutil.ReadAll(resp.Body)\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\tif resp.StatusCode != 200 {"
  },
  {
    "id" : "cdee319f-645f-4111-8db6-774f17867011",
    "prId" : 5772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "parentId" : null,
        "authorId" : null,
        "body" : "Note that this will attempt to delete the pod even if it was not successfully created.  Also note that pod.Name is presumably \"\" under some circumstances when the deferred is fired.\n",
        "createdAt" : "2015-03-23T21:29:27Z",
        "updatedAt" : "2015-03-23T21:29:27Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "1558560e-c12c-4a28-a0c7-5563d532471a",
        "parentId" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Yes, it will attempt to delete the pod even if it wasn't created. But is that a problem? We don't consider it an error if we fail to delete the pod.\n\nHow could pod.Name be empty? We don't modify pod once we've created it, unless you're referring to the possibility of future code changes causing pod to be modified.\n",
        "createdAt" : "2015-03-23T21:34:20Z",
        "updatedAt" : "2015-03-23T21:34:20Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "b7c35429-26d0-4ec8-99ef-b52ffb7e1da4",
        "parentId" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "authorId" : null,
        "body" : "Regarding deletion, probably not a problem, but you could alternatively defer the delete only if you successfully created.\n\nRegarding pod.Name empty, in the code above, you initialize Pod.ObjectMeta.Name but not Pod.Name.  So until some other code sets pod.Name to something other than \"\", that's what you'll have.  I assume that  podClient.Create(pod) further down in line 314 might set pod.Name to what you want, but does it do it if the call fails?  Not sure.\n",
        "createdAt" : "2015-03-23T22:45:48Z",
        "updatedAt" : "2015-03-23T22:45:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ca531ba0-f643-46d0-bf07-091a779663ea",
        "parentId" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "I hadn't actually checked into it before since I was borrowing code from the DNS test above, but the [Pod struct](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/api/types.go#L625) doesn't have a Name field other than in the ObjectMeta sub-object. Is it being automatically pulled in?\n",
        "createdAt" : "2015-03-23T23:42:40Z",
        "updatedAt" : "2015-03-23T23:42:40Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "f157979c-aa1a-43f5-a472-fdef646b0de4",
        "parentId" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "authorId" : null,
        "body" : "That's a jolly good question, and one to which I don't have a good answer, despite having perused the golang json integration docs.  Perhaps someone who has a better understanding of how ObjectMeta works can chime in.  In the mean time I'll start digging through the code to try and work out how this all works.\n",
        "createdAt" : "2015-03-24T15:07:45Z",
        "updatedAt" : "2015-03-24T15:07:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "a041ecd1-40a8-4201-8369-a2205ab27412",
        "parentId" : "2a4689a3-c73c-4d1b-a890-cad188de21db",
        "authorId" : null,
        "body" : "Embedding: https://golang.org/doc/effective_go.html#embedding\n",
        "createdAt" : "2015-03-31T18:52:20Z",
        "updatedAt" : "2015-03-31T18:52:20Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "22825b1045c346c833b3382cb87a55c295d9cb5d",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +307,311 @@\t\tBy(\"creating pod to be part of service \" + serviceName)\n\t\tpodClient := c.Pods(api.NamespaceDefault)\n\t\tdefer func() {\n\t\t\tBy(\"deleting pod \" + pod.Name)\n\t\t\tdefer GinkgoRecover()"
  },
  {
    "id" : "f7f37e5d-bb6a-438f-ba38-c172599bc3c5",
    "prId" : 5772,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5d76804-e93e-4ca4-afa1-878c30b1403f",
        "parentId" : null,
        "authorId" : null,
        "body" : "There's a lot of duplicated code between this test and some of the others in this file.  Suggest factoring out common code (in a separate PR, which I'll probably tackle today :-) ).\n",
        "createdAt" : "2015-03-23T21:32:44Z",
        "updatedAt" : "2015-03-23T21:32:44Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "22825b1045c346c833b3382cb87a55c295d9cb5d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +250,254 @@\t}, 240.0)\n\n\tIt(\"should be able to create a functioning external load balancer\", func() {\n\t\tserviceName := \"external-lb-test\"\n\t\tns := api.NamespaceDefault"
  },
  {
    "id" : "18377154-caff-464d-a78a-23857fd82e4c",
    "prId" : 4256,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6692150-6f73-442c-bf91-e4303fa01e92",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Do we need a GinkgoRecover() call in each deferred func?\n",
        "createdAt" : "2015-02-09T21:45:11Z",
        "updatedAt" : "2015-02-09T21:45:11Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "d59b0840-e3d9-4c58-b4d5-b9d57caeb756",
        "parentId" : "f6692150-6f73-442c-bf91-e4303fa01e92",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "According to the docs, it's only needed in a goroutine.\n\nhttp://onsi.github.io/ginkgo/#marking-specs-as-failed\n\nDoes a `defer` block constitue a goroutine? I thought it was run in the main thread... I think it should be possible to write an experiment with a failure inside the `defer` block to see whether Ginkgo is actually catching the error...\n",
        "createdAt" : "2015-02-09T21:56:21Z",
        "updatedAt" : "2015-02-09T21:56:21Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "8bac4bb7-c257-4582-b105-10157f5aaef3",
        "parentId" : "f6692150-6f73-442c-bf91-e4303fa01e92",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah, @roberthbailey and I just chatted and that was my understanding as well. I believe the defer's run at the tail of the main goroutine here. We should test this case eventually, though ...\n",
        "createdAt" : "2015-02-09T21:59:35Z",
        "updatedAt" : "2015-02-09T21:59:35Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "7c0e997d-a219-44b9-a1de-a911c1716d62",
        "parentId" : "f6692150-6f73-442c-bf91-e4303fa01e92",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I must have been mis-remembering where I saw it in previous test code. \n",
        "createdAt" : "2015-02-09T22:32:40Z",
        "updatedAt" : "2015-02-09T22:32:40Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8991edf9e06051eee00400e965c1de441c7e192",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +192,196 @@\n\t\tdefer func() {\n\t\t\terr := c.Services(ns).Delete(serviceName)\n\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t}()"
  }
]