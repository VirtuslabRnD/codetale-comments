[
  {
    "id" : "06ec2bf8-a5ec-4ab5-954d-eab2093f7b93",
    "prId" : 37812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37812#pullrequestreview-10963163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93044352-7292-4a9b-993c-660c6b9845c4",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Instead of this whole logic, you can just use:\r\n``` framework.SkipUnlessNodeCountIsAtLeast ```\r\nfunction that already exists.",
        "createdAt" : "2016-12-01T13:04:39Z",
        "updatedAt" : "2016-12-01T13:26:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8b2198b4-4af1-400f-ad7f-8e9b5016f34b",
        "parentId" : "93044352-7292-4a9b-993c-660c6b9845c4",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "This should be other way round.",
        "createdAt" : "2016-12-01T13:12:05Z",
        "updatedAt" : "2016-12-01T13:26:53Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "4adb5f63-7795-4108-9349-f55af1c7db30",
        "parentId" : "93044352-7292-4a9b-993c-660c6b9845c4",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Done.",
        "createdAt" : "2016-12-01T13:27:06Z",
        "updatedAt" : "2016-12-01T13:27:06Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf92f1cdba632d6baab94866ea5d459049b045e2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\tif c.skipForBigClusters {\n\t\t\t\tframework.SkipUnlessNodeCountIsAtMost(bigClusterSize - 1)\n\t\t\t}\n\t\t\tcreatePodsOrDie(cs, ns, c.podCount)\n\t\t\tif c.replicaSetSize > 0 {"
  },
  {
    "id" : "17a8fc99-070a-4ea7-b39e-3ecfb8dcffd0",
    "prId" : 34989,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34989#pullrequestreview-4582559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4291425b-541d-4e50-891e-048ab7fc15f2",
        "parentId" : null,
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "I guess my test was the only one that was using 1.5 directly.  This rename looks easy, but what if some test _wants_ to use an old API.  For example, suppose we have some bug that was tickled specifically by, say, the 1.3 client.  Will we be able to write such tests?\n\nI'm guessing if anyone wants to write a test like that, they'll have to specifically vendor in that version of the client.\n",
        "createdAt" : "2016-10-18T00:09:19Z",
        "updatedAt" : "2016-10-18T00:09:42Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "923757f3e03009b1fba4c07152bdf3adb7e9ee69",
    "line" : null,
    "diffHunk" : "@@ -1,1 +23,27 @@\t. \"github.com/onsi/ginkgo\"\n\t. \"github.com/onsi/gomega\"\n\t\"k8s.io/client-go/kubernetes\"\n\t\"k8s.io/client-go/pkg/api/unversioned\"\n\tapi \"k8s.io/client-go/pkg/api/v1\""
  },
  {
    "id" : "28b52ce9-e72d-443a-8a3b-e51f9c49d925",
    "prId" : 32160,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1070423d-63ea-4df3-9e1b-ce67d284b4c2",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Just for completeness, can you add one more test case?\n\n```\n\"too few pods, replicaSet, percentage\",\ninstr.FromString(\"100%\")\nreplicaSetSize: 1\nshouldDeny: true\n```\n",
        "createdAt" : "2016-09-10T19:46:00Z",
        "updatedAt" : "2016-09-13T22:32:00Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "9d65e54e-539b-4160-b173-a636280959c8",
        "parentId" : "1070423d-63ea-4df3-9e1b-ce67d284b4c2",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "I had been trying to figure out how to force a controller to be at <100%.  The best I can come up with is to put an impossible node selector on it to make 0% of them be ready.  WDYT?\n",
        "createdAt" : "2016-09-12T18:32:31Z",
        "updatedAt" : "2016-09-13T22:32:00Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "138647e329dcb3c4acaf24d9a6bd9479891a17a6",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +101,105 @@\t\t\tshouldDeny:   false,\n\t\t}, {\n\t\t\tdescription:    \"enough pods, replicaSet, percentage\",\n\t\t\tminAvailable:   intstr.FromString(\"100%\"),\n\t\t\treplicaSetSize: 10,"
  },
  {
    "id" : "9358b60e-65f6-4337-aa45-e425a733756e",
    "prId" : 31722,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1797ac8a-7041-4d7b-ad18-a745afacb393",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Because I'm too lazy to check the code: am I correct in remembering that PodDisruptionAllowed starts out false, therefore this really only flips to true when the controller has updated it after it has seen the two pods? (Obviously if it starts out true, this doesn't test anything. I'm sure you thought of this, just wanted to make sure.)\n",
        "createdAt" : "2016-08-31T06:39:27Z",
        "updatedAt" : "2016-09-06T19:10:38Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "9d2c461d-a0e4-4bcc-8f13-a184045a5110",
        "parentId" : "1797ac8a-7041-4d7b-ad18-a745afacb393",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "You said you'd add a comment, but I don't see it here?\n",
        "createdAt" : "2016-09-02T00:25:32Z",
        "updatedAt" : "2016-09-06T19:10:38Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "30be5b04-0d43-478f-b256-f604d6a88c32",
        "parentId" : "1797ac8a-7041-4d7b-ad18-a745afacb393",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "I actually put it further down on the one test that is new, but I added the same comment here.\n",
        "createdAt" : "2016-09-06T18:57:25Z",
        "updatedAt" : "2016-09-06T19:10:38Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d89a4f6971ca011970eb930667fd27429b7744a",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +58,62 @@\t\t\t\treturn false, err\n\t\t\t}\n\t\t\treturn pdb.Status.PodDisruptionAllowed, nil\n\t\t})\n\t\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "6ef35aad-ee57-40cb-bb3f-f99ba0f46a8c",
    "prId" : 31722,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89d16ec6-ef1a-417e-967a-105eb51e598f",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Next test polls, presumably because condition starts out false and then becomes true. By the same reasoning, this test might pass because condition starts out false, and it would have eventually turned true, but you'll never detect that. So I think you should insert some kind of delay here (I'm not sure how long) to give it a chance to turn true, before checking to make sure it is still false.\n",
        "createdAt" : "2016-08-31T06:57:45Z",
        "updatedAt" : "2016-09-06T19:10:38Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d89a4f6971ca011970eb930667fd27429b7744a",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +81,85 @@\t})\n\n\tIt(\"should not allow an eviction when too few pods\", func() {\n\t\tcreatePodDisruptionBudgetOrDie(cs, ns, intstr.FromInt(2))\n"
  },
  {
    "id" : "f5208300-f159-4c83-841e-3c2eaa9b7a31",
    "prId" : 25921,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b667bc60-4878-4d66-a917-f544e40159da",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Should you delete the other PDB you just created first?\n",
        "createdAt" : "2016-08-14T20:33:43Z",
        "updatedAt" : "2016-08-16T22:20:59Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d60ba3c6e2b7d57441405a108fbfe2b8e38495cc",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t\t},\n\t\t}\n\t\t_, err := c.Policy().PodDisruptionBudgets(ns).Create(&pdb)\n\t\tExpect(err).NotTo(HaveOccurred())\n\t\tfor i := 0; i < 2; i++ {"
  }
]