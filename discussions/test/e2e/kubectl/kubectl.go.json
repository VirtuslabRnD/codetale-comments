[
  {
    "id" : "96b1e828-2ef5-4709-8805-8bf8333b3fe0",
    "prId" : 101295,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101295#pullrequestreview-642471643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cd4c936-d76d-4069-a7a5-43d807ddedd0",
        "parentId" : null,
        "authorId" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "body" : "@aojea made this change. It's 2 minutes now. Will monitor and bump if needed.",
        "createdAt" : "2021-04-22T17:13:08Z",
        "updatedAt" : "2021-04-22T17:13:08Z",
        "lastEditedBy" : "38ac0bf1-ca6b-4f18-9b32-48fd80cf36fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bc5364b16c7c446f9577249bd04139421c5ef65",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +112,116 @@\n\t// If this suite still flakes due to timeouts we should change this to framework.PodStartTimeout\n\tpodRunningTimeoutArg = fmt.Sprintf(\"--pod-running-timeout=%s\", framework.PodStartShortTimeout.String())\n)\n"
  },
  {
    "id" : "14697cb0-0444-4fee-aa04-f495c82e5bba",
    "prId" : 92119,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92119#pullrequestreview-434276961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ee1179a-ff1d-4c0d-96b9-0800be0be0b5",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I've already drafted the changes to these for after the e2e image is pushed",
        "createdAt" : "2020-06-19T18:41:54Z",
        "updatedAt" : "2020-06-19T19:23:31Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "279ce5d89e97a4bed8172c9e011abe8b95c92ad2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +345,349 @@\t\t\tfor _, gbAppFile := range []string{\n\t\t\t\t\"agnhost-replica-service.yaml\",\n\t\t\t\t\"agnhost-master-service.yaml\",\n\t\t\t\t\"frontend-service.yaml\",\n\t\t\t\t\"frontend-deployment.yaml.in\","
  },
  {
    "id" : "75d7d57d-d1b7-422a-8c63-f24d7f123929",
    "prId" : 90367,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90367#pullrequestreview-411128478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42a5cd5b-8f73-45b5-8e43-e7c1c6fa91dc",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "This went GA in 1.18 but is not added to the conformance suite until 1.19. This metadata actually represents when it was added to the suite. For example, someone can actually be conformant with 1.18 without meeting these tests.\r\n\r\nSame as below. Other than that this is good to go.",
        "createdAt" : "2020-05-12T23:12:25Z",
        "updatedAt" : "2020-05-13T17:05:08Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "dbb36737-6d1f-4fa6-b6f4-fe1cbf13e92c",
        "parentId" : "42a5cd5b-8f73-45b5-8e43-e7c1c6fa91dc",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "That's sort of bad, since we really want k8s provider to support that. Otherwise the `kubectl diff` feature can be broken for these cluster.",
        "createdAt" : "2020-05-13T04:08:11Z",
        "updatedAt" : "2020-05-13T17:05:08Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "64c72419-6f22-4e9d-a5f8-4060f7394336",
        "parentId" : "42a5cd5b-8f73-45b5-8e43-e7c1c6fa91dc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "tagging as conformance for 1.19 doesn't seem too problematic",
        "createdAt" : "2020-05-13T04:16:51Z",
        "updatedAt" : "2020-05-13T17:05:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3536b421-7b5d-4889-be4a-4cc18214c2ac",
        "parentId" : "42a5cd5b-8f73-45b5-8e43-e7c1c6fa91dc",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Ah retagged to 1.19",
        "createdAt" : "2020-05-13T17:06:29Z",
        "updatedAt" : "2020-05-13T17:06:29Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "7af0011884d9a41ff8ecc5d379b672bc9f5a70b2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +859,863 @@\t\t/*\n\t\t\tRelease : v1.19\n\t\t\tTestname: Kubectl, diff Deployment\n\t\t\tDescription: Create a Deployment with httpd image. Declare the same Deployment with a different image, busybox. Diff of live Deployment with declared Deployment MUST include the difference between live and declared image.\n\t\t*/"
  },
  {
    "id" : "93423a67-0108-4df3-88eb-801d0b8de023",
    "prId" : 89542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89542#pullrequestreview-387633355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b13f4e63-43a0-4a6c-a2da-1f2a27f0c011",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Don't you have to remove the deployment?",
        "createdAt" : "2020-04-02T16:21:53Z",
        "updatedAt" : "2020-04-03T00:55:07Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "8aef1188-c720-4a86-8169-cef63f8f4bb0",
        "parentId" : "b13f4e63-43a0-4a6c-a2da-1f2a27f0c011",
        "authorId" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "body" : "Removed",
        "createdAt" : "2020-04-03T23:30:57Z",
        "updatedAt" : "2020-04-03T23:30:57Z",
        "lastEditedBy" : "f40287b7-c508-4d95-b3ad-07d0de320962",
        "tags" : [
        ]
      }
    ],
    "commit" : "f448c01651df7fda732f87ae9364aeb689529735",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +882,886 @@\n\t\t\tframework.RunKubectlOrDieInput(ns, deployment, \"delete\", \"-f\", \"-\")\n\t\t})\n\t})\n"
  },
  {
    "id" : "7f51d09a-b38c-49a5-939f-5f46622916d3",
    "prId" : 89542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89542#pullrequestreview-386587980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adc5acb3-7087-4cad-89eb-763a3eabfa85",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Now you're doing `Get` twice, not super useful",
        "createdAt" : "2020-04-02T16:36:53Z",
        "updatedAt" : "2020-04-03T00:55:07Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "f448c01651df7fda732f87ae9364aeb689529735",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +906,910 @@\n\t\t\tginkgo.By(\"verifying the pod \" + podName + \" has the right image \" + httpdImage)\n\t\t\tpod, err := c.CoreV1().Pods(ns).Get(context.TODO(), podName, metav1.GetOptions{})\n\t\t\tif err != nil {\n\t\t\t\tframework.Failf(\"Failed getting pod %s: %v\", podName, err)"
  },
  {
    "id" : "4f33b0a2-e11a-46eb-af0b-5b0a1cb797e6",
    "prId" : 85967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85967#pullrequestreview-327839972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d63ad07-c532-4417-ac39-62dd72665a73",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Would this tolerate discovery errors for groups without the k8s.io suffix like core here?",
        "createdAt" : "2019-12-05T20:41:22Z",
        "updatedAt" : "2019-12-05T20:44:36Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "c61480c5-4f10-4375-acaa-6fc4d7afe96b",
        "parentId" : "3d63ad07-c532-4417-ac39-62dd72665a73",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah... though those groups are never aggregated, so the likelihood of a discovery error is almost none... but I'll update to only tolerate groups containing `.`'s\r\n",
        "createdAt" : "2019-12-05T20:43:40Z",
        "updatedAt" : "2019-12-05T20:44:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bacab3d4577eb4e56479e4eb013955089ae74832",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +457,461 @@\t\t\t\tfor gv := range discoveryErr.Groups {\n\t\t\t\t\tif strings.Contains(gv.Group, \".\") && !strings.HasSuffix(gv.Group, \".k8s.io\") {\n\t\t\t\t\t\t// tolerate discovery errors for non-k8s.io groups (like aggregated/crd groups)\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}"
  },
  {
    "id" : "ba8bfd9d-04b1-45e7-b459-67524663e2d6",
    "prId" : 84941,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84941#pullrequestreview-313575274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6cc33a7-c2e2-45f5-90f1-c4400d5c0915",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Won't it exclude e.g. core/v1 ?\r\n\r\nAlso - someone from SIG CLI and/or Apimachinery should remove this one.",
        "createdAt" : "2019-11-07T19:15:35Z",
        "updatedAt" : "2019-11-07T19:59:42Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0ec2dabd-71e8-4f6e-81eb-76ca34bac83e",
        "parentId" : "e6cc33a7-c2e2-45f5-90f1-c4400d5c0915",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Yep, this assumes no new API resources will be added to that group. Definitely not ideal, but was trying to avoid adding a long list of approved API groups here. The real goal of this test is to ensure that new API resources are added with kubectl get output that works as intended.",
        "createdAt" : "2019-11-07T19:18:02Z",
        "updatedAt" : "2019-11-07T19:59:42Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ae53a15e655a9c002f8af9c7d9834187a6a5b57",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +454,458 @@\t\t\t\t// a . in their name.\n\t\t\t\tif !strings.Contains(group.GroupVersion, \".k8s.io\") && strings.Contains(group.GroupVersion, \".\") {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n"
  },
  {
    "id" : "a41750f5-90f8-4c1d-952f-9290e89919e3",
    "prId" : 84941,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84941#pullrequestreview-313686778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3617e0d-9d07-4ba1-92d5-da7b1a45b00b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "neat.  I think that actually work. :)",
        "createdAt" : "2019-11-07T22:42:57Z",
        "updatedAt" : "2019-11-07T22:42:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ae53a15e655a9c002f8af9c7d9834187a6a5b57",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +453,457 @@\t\t\t\t// assumes that CRDs will not have a .k8s.io group and will have\n\t\t\t\t// a . in their name.\n\t\t\t\tif !strings.Contains(group.GroupVersion, \".k8s.io\") && strings.Contains(group.GroupVersion, \".\") {\n\t\t\t\t\tcontinue\n\t\t\t\t}"
  },
  {
    "id" : "208a4758-8a51-46ea-a551-f0d30094eeb2",
    "prId" : 81497,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81497#pullrequestreview-276826305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "did you run this test? I expected to either:\r\n1. have to set `x-kubernetes-preserve-unknown-fields` in the schema root to get the expected schema published\r\n2. have to set `x-kubernetes-preserve-unknown-fields` in the schema `spec` definition to get kubectl to be happy applying the data with `extraProperty` set",
        "createdAt" : "2019-08-17T19:48:38Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "87d1a192-f55d-4e7c-9a16-e23e321172b8",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "I've added it in the schema root (https://github.com/kubernetes/kubernetes/pull/81497/files#diff-6b2122024cc63dc0fd467f3320a9005eR139) which is used in 7 places. I'd like to minimize use of `x-kubernetes-preserve-unknown-fields` in our e2e test to make them a better example to users. Okay as a follow up?",
        "createdAt" : "2019-08-18T23:40:47Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "816b09a3-2f56-4f4a-9bea-899aa953ae40",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I've added it in the schema root \r\n\r\naren't you overwriting that in this test with this line: `crd.Spec.Versions[i].Schema = &apiextensionsv1.CustomResourceValidation{OpenAPIV3Schema: props}`\r\n\r\n> I'd like to minimize use of x-kubernetes-preserve-unknown-fields in our e2e test to make them a better example to users\r\n\r\nThe point of this test specifically is to test compatibility of kubectl with a partially specified schema. I think this needs to specify `x-kubernetes-preserve-unknown-fields: true` at the schema root to do that.",
        "createdAt" : "2019-08-19T20:07:56Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e5ac5e20-47f8-4c29-b598-53e84deb7205",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "(I'm also surprised `kubectl apply` did not complain about applying the extra fields with a full schema published)",
        "createdAt" : "2019-08-19T20:08:47Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e944508d-0fb5-4355-9bb5-ceb5377fa266",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "figured it out... the remnants of https://github.com/kubernetes/kubernetes/pull/78770 tolerated kubectl failure if a schema with properties was published (which it should not have... the schema publishing in the partial-schema+tolerate-unknown-fields case was fixed in https://github.com/kubernetes/kubernetes/pull/79636 but this e2e test still incorrectly tolerated kubectl failure)",
        "createdAt" : "2019-08-19T20:44:12Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9b4ee61d-d9c2-497c-b172-30facc6d77b8",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Fixed by removing `expectSuccess` conditions and adding `XPreserveUnknownFields` to root of schema.\r\n\r\nSuccess case: https://gist.github.com/jpbetz/fec17da9fb3fd17bfb5a76e36ef95cea\r\n\r\nI'm also validating that without `XPreserveUnknownFields` that the test (correctly) fails. Will report back if that is not the case.",
        "createdAt" : "2019-08-19T21:05:42Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "64b6d0d6-6bd8-42cd-a7b3-90314824426b",
        "parentId" : "d2f77749-fc70-4371-b57d-75ea2caff783",
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Without `XPreserveUnknownFields` got the failure we expect: `\"unknown field \"extraProperty\"`:\r\n\r\nhttps://gist.github.com/jpbetz/00484e16513801f981a81d7e77d9eae6",
        "createdAt" : "2019-08-19T21:31:15Z",
        "updatedAt" : "2019-08-20T01:31:34Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5abf6b5d3ee7b28f099aa1e553e759880441d946",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +953,957 @@\t\t})\n\n\t\tginkgo.It(\"should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema\", func() {\n\t\t\tginkgo.By(\"prepare CRD with partially-specified validation schema\")\n\t\t\tcrd, err := crd.CreateTestCRD(f, func(crd *apiextensionsv1.CustomResourceDefinition) {"
  },
  {
    "id" : "2c6fd667-6546-4256-94f5-4da322d0518d",
    "prId" : 80610,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80610#pullrequestreview-270889606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87d79b8d-549b-4784-95a3-8dc78407606c",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "move this down right before use",
        "createdAt" : "2019-08-05T16:58:08Z",
        "updatedAt" : "2019-08-05T16:58:59Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "8988965df193f9c07a3e00b3fef81e6e7c912c27",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +646,650 @@\t\t\tinClusterHost := strings.TrimSpace(framework.RunHostCmdOrDie(ns, simplePodName, \"printenv KUBERNETES_SERVICE_HOST\"))\n\t\t\tinClusterPort := strings.TrimSpace(framework.RunHostCmdOrDie(ns, simplePodName, \"printenv KUBERNETES_SERVICE_PORT\"))\n\t\t\tinClusterURL := net.JoinHostPort(inClusterHost, inClusterPort)\n\t\t\te2elog.Logf(\"copying %s to the %s pod\", kubectlPath, simplePodName)\n\t\t\tframework.RunKubectlOrDie(\"cp\", kubectlPath, ns+\"/\"+simplePodName+\":/tmp/\")"
  },
  {
    "id" : "ea0120a3-82ef-40fd-8084-84f24aa28838",
    "prId" : 80516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80516#pullrequestreview-266301749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdee26d6-b20e-43c6-8c1f-007fce121d49",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Could you add a comment describing what the image will log, the frequency, and the duration?",
        "createdAt" : "2019-07-24T21:49:34Z",
        "updatedAt" : "2019-07-30T18:58:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a38220e3f619a2dd6b240d422ad6460559a9b8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1298,1302 @@\t\t\tnsFlag = fmt.Sprintf(\"--namespace=%v\", ns)\n\t\t\t// Agnhost image generates logs for a total of 100 lines over 20s.\n\t\t\tframework.RunKubectlOrDie(\"run\", podName, \"--generator=run-pod/v1\", \"--image=\"+agnhostImage, nsFlag, \"--\", \"logs-generator\", \"--log-lines-total\", \"100\", \"--run-duration\", \"20s\")\n\t\t})\n\t\tginkgo.AfterEach(func() {"
  },
  {
    "id" : "edc498de-f993-4cf0-94f9-a4380186f36a",
    "prId" : 80516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80516#pullrequestreview-269877594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1146008-06ec-41f8-94f1-3d4dfa14ffa7",
        "parentId" : null,
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "👍 Though it doesn't seem strictly necessary for this change, your version of this is much easier to understand. I had to go lookup what `waitForOrFailWithDebug(1)` did and how `forEachPod` was working.",
        "createdAt" : "2019-08-01T21:02:54Z",
        "updatedAt" : "2019-08-01T21:04:36Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a38220e3f619a2dd6b240d422ad6460559a9b8",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1323,1327 @@\n\t\t\tginkgo.By(\"Waiting for log generator to start.\")\n\t\t\tif !e2epod.CheckPodsRunningReadyOrSucceeded(c, ns, []string{podName}, framework.PodStartTimeout) {\n\t\t\t\te2elog.Failf(\"Pod %s was not ready\", podName)\n\t\t\t}"
  },
  {
    "id" : "9649cf13-24ac-4833-bd5d-870f9ab29907",
    "prId" : 78098,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78098#pullrequestreview-240620021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b6b073b-f83b-40a9-950f-1a399a7a7085",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is still running `framework.RunKubectlOrDie(\"log\"...` below.\r\n\r\n@kubernetes/cncf-conformance-wg what's the protocol for removing a deprecated thing used by a conformance test? change the test in 1.15 and remove the thing in 1.16?",
        "createdAt" : "2019-05-20T13:14:46Z",
        "updatedAt" : "2019-08-29T14:11:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ed1d86f4-d297-4072-ba48-ab7ebdf21db8",
        "parentId" : "3b6b073b-f83b-40a9-950f-1a399a7a7085",
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "No, we can just change the test now and remove the thing. Conformance tests evaluate whether the subject cluster conforms. If it can't handle the new command, it's not really conforming. If it can't handle the old one, and it is within the deprecation period (the CLI deprecation policy is the longer of 12 months or 2 releases (https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-a-flag-or-cli)), then it wouldn't be considered conforming either. But 1) it's been more than 3 years so we are safely beyond that 12 months; and 2) this test isn't about backwards compat.\r\n\r\n",
        "createdAt" : "2019-05-22T10:10:59Z",
        "updatedAt" : "2019-08-29T14:11:07Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "550c2d1e-d732-4667-ac3b-0c36b9147752",
        "parentId" : "3b6b073b-f83b-40a9-950f-1a399a7a7085",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I agree the command is within rights to be removed.\r\n\r\nI just wasn't sure if 1.14 conformance tests needed to be able to run against 1.15 clusters.",
        "createdAt" : "2019-05-22T13:13:02Z",
        "updatedAt" : "2019-08-29T14:11:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6939e77277808672864b6ae43916e44bbcbe4752",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1299,1303 @@\t\t\tDescription: When a Pod is running then it MUST generate logs.\n\t\t\tStarting a Pod should have a expected log line. Also log command options MUST work as expected and described below.\n\t\t\t\t‘kubectl logs -tail=1’ should generate a output of one line, the last line in the log.\n\t\t\t\t‘kubectl --limit-bytes=1’ should generate a single byte output.\n\t\t\t\t‘kubectl --tail=1 --timestamp should generate one line with timestamp in RFC3339 format"
  },
  {
    "id" : "c33203ea-ee6c-4423-a58a-7a641d020878",
    "prId" : 77720,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77720#pullrequestreview-235930399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d50554b5-28f5-4979-af7c-bc104e2f075d",
        "parentId" : null,
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "Rename variable `endpoints` to `ep` because we need to import `endpoints` package in this file ",
        "createdAt" : "2019-05-10T05:30:18Z",
        "updatedAt" : "2019-05-20T18:49:17Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      }
    ],
    "commit" : "76f76450ca764a3244cbc6dd8545dfc454ec8661",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1077,1081 @@\t\t\t\terr := wait.Poll(framework.Poll, timeout, func() (bool, error) {\n\t\t\t\t\tep, err := c.CoreV1().Endpoints(ns).Get(name, metav1.GetOptions{})\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\t// log the real error\n\t\t\t\t\t\te2elog.Logf(\"Get endpoints failed (interval %v): %v\", framework.Poll, err)"
  },
  {
    "id" : "0f1bc088-41b1-4d11-84c6-6e3f670085eb",
    "prId" : 74832,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74832#pullrequestreview-211268393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d0d2198-3a47-4d47-8040-416aa167b34d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "suggest setting `--cache-dir=<per-createApplyCustomResource-tmp-dir>` to ensure each invocation of createApplyCustomResource() refetches schema and discovery docs",
        "createdAt" : "2019-03-06T05:38:44Z",
        "updatedAt" : "2019-03-06T05:38:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1cd2e80f-d3c5-4dfc-95a8-14d863b43f4d",
        "parentId" : "3d0d2198-3a47-4d47-8040-416aa167b34d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "actually, openapi schema fetching uses etag verification, so we don't need this",
        "createdAt" : "2019-03-06T14:46:00Z",
        "updatedAt" : "2019-03-06T14:46:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "591f00e9b3f8440e1d92c47d74ad819e47aa0a44",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +2227,2231 @@// createApplyCustomResource asserts that given CustomResource be created and applied\n// without being rejected by client-side validation\nfunc createApplyCustomResource(resource, namespace, name string, crd *framework.TestCrd) error {\n\tns := fmt.Sprintf(\"--namespace=%v\", namespace)\n\tginkgo.By(\"successfully create CR\")"
  },
  {
    "id" : "051cc86b-3465-4261-8996-bc600d249e0c",
    "prId" : 74832,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74832#pullrequestreview-211408448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d20b568-002b-44d9-b551-0311085f080d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @sttts ",
        "createdAt" : "2019-03-06T14:44:48Z",
        "updatedAt" : "2019-03-06T14:44:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e454872b-7eaa-450e-bf3e-dd82e003d4ea",
        "parentId" : "5d20b568-002b-44d9-b551-0311085f080d",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "schemaFoo is the same one that we used for e2e tests in the feature PR. Added an item in the follow-up issue to clean them up",
        "createdAt" : "2019-03-06T18:49:47Z",
        "updatedAt" : "2019-03-06T18:49:47Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "591f00e9b3f8440e1d92c47d74ad819e47aa0a44",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +2246,2250 @@}\n\nvar schemaFoo = []byte(`description: Foo CRD for Testing\ntype: object\nproperties:"
  },
  {
    "id" : "f5c3f6a0-610d-44ea-a9b8-ec9633e4bb21",
    "prId" : 73682,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73682#pullrequestreview-202284849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "822e328d-f476-48e2-9aeb-e45aadc92dd9",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "line 534-536 seems unnecessary because of line 537.",
        "createdAt" : "2019-02-04T05:31:38Z",
        "updatedAt" : "2019-02-04T20:04:27Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "2a75c5e5-6958-41af-9897-aac39a486929",
        "parentId" : "822e328d-f476-48e2-9aeb-e45aadc92dd9",
        "authorId" : "6e622ff4-e245-40c5-884b-3d200d6f1c96",
        "body" : "Agreed and fixed. I had copied some boilerplate from the check the at the end of the test which was already using kubectl logs for similar reasons. I went ahead and cleaned up those redundant checks as well.",
        "createdAt" : "2019-02-04T20:06:35Z",
        "updatedAt" : "2019-02-04T20:06:36Z",
        "lastEditedBy" : "6e622ff4-e245-40c5-884b-3d200d6f1c96",
        "tags" : [
        ]
      },
      {
        "id" : "0daacf21-7d76-4d3a-b0df-c23af22dbc76",
        "parentId" : "822e328d-f476-48e2-9aeb-e45aadc92dd9",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Nice catch, thanks for updating",
        "createdAt" : "2019-02-11T19:07:28Z",
        "updatedAt" : "2019-02-11T19:07:37Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "06fe60af5b388f74cdf1a279d20bb5b0c20e7e6c",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +530,534 @@\t\t\t\treturn strings.Contains(logOutput, \"abcd1234\"), nil\n\t\t\t})\n\t\t\tExpect(err).To(BeNil())\n\n\t\t\tExpect(c.BatchV1().Jobs(ns).Delete(\"run-test\", nil)).To(BeNil())"
  },
  {
    "id" : "9eb000ad-2cb9-4b04-a6da-4700ca0f4870",
    "prId" : 68311,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68311#pullrequestreview-153056780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a30c4f8b-0b99-438b-a891-9d1ab2995bb9",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "This seems just copy&paste mistake from line 796, so LGTM",
        "createdAt" : "2018-09-06T18:12:03Z",
        "updatedAt" : "2018-09-06T18:12:03Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f965d55eae3df142d81b0355e891eb1040abc8d4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +804,808 @@\t\t\trequiredString = \"\\\"replicas\\\": 2\"\n\t\t\tif strings.Contains(output, requiredString) {\n\t\t\t\tframework.Failf(\"Presenting %s in kubectl view-last-applied\", requiredString)\n\t\t\t}\n"
  },
  {
    "id" : "8ef66cd9-3bc6-41d0-a417-a055adc64ce0",
    "prId" : 66515,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66515#pullrequestreview-213712420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "498a3b93-3e15-4173-8145-236373f51243",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this is prettty noisy in CI, do we need to be logging this output?",
        "createdAt" : "2019-03-13T00:24:35Z",
        "updatedAt" : "2019-03-13T00:24:35Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56d577e4d49aef3ec97a69635f79eb4e73e491b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +849,853 @@\t\tIt(\"should check if cluster-info dump succeeds\", func() {\n\t\t\tBy(\"running cluster-info dump\")\n\t\t\tframework.RunKubectlOrDie(\"cluster-info\", \"dump\")\n\t\t})\n\t})"
  },
  {
    "id" : "2e2bef74-5db8-44e0-b4b0-be98c048c720",
    "prId" : 64439,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64439#pullrequestreview-123935874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c8d62fa-201f-4bec-8dc2-349994a81b36",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "So we can use `_, err = framework.WaitForJobGone(c, ns, jobName, 0)` here, right?",
        "createdAt" : "2018-05-29T10:29:37Z",
        "updatedAt" : "2018-05-29T10:29:51Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "a9a3b88e-0d39-48c5-9026-a12a85c11e2c",
        "parentId" : "9c8d62fa-201f-4bec-8dc2-349994a81b36",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yeah, I guess we could, but I've just backported what we have in master right now. ",
        "createdAt" : "2018-05-29T10:38:24Z",
        "updatedAt" : "2018-05-29T10:38:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2db115ceccad1d5268e9d4e409252971b2adf619",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1449,1453 @@\n\t\t\tBy(\"verifying the job \" + jobName + \" was deleted\")\n\t\t\t_, err = c.BatchV1().Jobs(ns).Get(jobName, metav1.GetOptions{})\n\t\t\tExpect(err).To(HaveOccurred())\n\t\t\tExpect(apierrs.IsNotFound(err)).To(BeTrue())"
  },
  {
    "id" : "de5332ce-c2ef-4177-ace5-7e92d0c5092a",
    "prId" : 56508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56508#pullrequestreview-80009633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b56d4e0e-e442-41dc-8a34-f8014f2e68e9",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "From `checkOutput` code, I don't think the order matters. Would you check again? If so, we can just append it at the end.",
        "createdAt" : "2017-11-29T19:47:31Z",
        "updatedAt" : "2017-11-30T00:55:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "d1e3694a-31ce-4ecd-9971-245823979345",
        "parentId" : "b56d4e0e-e442-41dc-8a34-f8014f2e68e9",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "The order matters here.\r\nThe index of the actual output always increases after a match, so the order matters.\r\nhttps://github.com/mengqiy/kubernetes/blob/3d5ff42cc5cc0a71668e9490ae8cb14b644d02e7/test/e2e/kubectl/kubectl.go#L1759",
        "createdAt" : "2017-11-29T21:32:25Z",
        "updatedAt" : "2017-11-30T00:55:18Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "a1c74969-6a55-4b9a-81c3-578cd0e4f6d2",
        "parentId" : "b56d4e0e-e442-41dc-8a34-f8014f2e68e9",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "ok",
        "createdAt" : "2017-11-29T21:50:32Z",
        "updatedAt" : "2017-11-30T00:55:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d1f7175ca0cff998736ecbfa7ba8ff0eb270af",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +873,877 @@\t\t\t\t\t{\"State:\", \"Running\"},\n\t\t\t\t\t{\"QoS Class:\", \"BestEffort\"},\n\t\t\t\t}...)\n\t\t\t\tcheckOutput(output, requiredStrings)\n\t\t\t})"
  },
  {
    "id" : "0f2d15ba-495b-4cf3-867e-aba6a7d18d66",
    "prId" : 56508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56508#pullrequestreview-80049497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527e6fa4-9ad9-4ce6-b88a-5d1dff5694c3",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "this err needs to be checked too",
        "createdAt" : "2017-11-30T00:44:06Z",
        "updatedAt" : "2017-11-30T00:55:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "42faa9da-5671-40fb-88d5-789993a15d2e",
        "parentId" : "527e6fa4-9ad9-4ce6-b88a-5d1dff5694c3",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Done",
        "createdAt" : "2017-11-30T00:55:37Z",
        "updatedAt" : "2017-11-30T00:55:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d1f7175ca0cff998736ecbfa7ba8ff0eb270af",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +848,852 @@\t\t\t// Pod\n\t\t\tforEachPod(func(pod v1.Pod) {\n\t\t\t\tservergte, err := framework.ServerVersionGTE(utilversion.MustParseSemantic(\"v1.9.0-alpha.2\"), c.Discovery())\n\t\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t\t\tkubectlgte, err := framework.KubectlVersionGTE(utilversion.MustParseSemantic(\"v1.9.0-alpha.2\"))"
  }
]