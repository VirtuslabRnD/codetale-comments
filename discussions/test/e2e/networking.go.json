[
  {
    "id" : "961ddfbc-dd06-4698-9b5f-a1c7da55733d",
    "prId" : 31559,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0c308b8-39ce-48a8-9504-967a168ddc26",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "This decomposes a SLOW test (1 Describe + 1 It ~20m) into 2 Describes + 15 It blocks each taking < 5m (but still ~20m serially). @kubernetes/sig-testing running this in presubmit should be fine because It runs in parallel right? \n",
        "createdAt" : "2016-08-26T22:56:18Z",
        "updatedAt" : "2016-09-07T19:53:24Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b5d7e6d93044d3dbf3ba2daeeacfe0630d0083e",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +119,123 @@\t})\n\n\t// TODO: Remove [Slow] when this has had enough bake time to prove presubmit worthiness.\n\tframework.KubeDescribe(\"Granular Checks: Services [Slow]\", func() {\n"
  },
  {
    "id" : "eae87498-752d-4f39-930b-67db2c3b3b8e",
    "prId" : 24284,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "697acea1-9098-438c-82c8-17b881e8101a",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "How did you choose this value? 10s timeout seems like a very aggressive number, especially since it is a drop from 600s. I want to make sure this isn't going to add unnecessary flakes.\n",
        "createdAt" : "2016-04-15T00:23:48Z",
        "updatedAt" : "2016-04-15T00:23:48Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "9d9b0b32-9d78-41cd-824c-d9164069a094",
        "parentId" : "697acea1-9098-438c-82c8-17b881e8101a",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "I've chosen 10s because that's what we've been using in the originating openshift test [1] and haven't had problems with flakes.  The connectivity check only starts after the pod has been verified to be up by LaunchWebserverPod and a single http call should be sub-second unless there are severe connectivity problems between the host running the tests and the target cluster.\n\n1: https://github.com/openshift/origin/blob/master/test/extended/networking/sanity.go#L11\n",
        "createdAt" : "2016-04-15T02:24:43Z",
        "updatedAt" : "2016-04-15T02:24:43Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "0a75dbb5-6a2b-4280-ae14-c70b008b8eb2",
        "parentId" : "697acea1-9098-438c-82c8-17b881e8101a",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "I don't know what I was thinking when I wrote this.   The traffic of both checks would be internal to the cluster so taking longer than 10s would indicate a severe problem.\n",
        "createdAt" : "2016-04-15T20:54:31Z",
        "updatedAt" : "2016-04-15T20:54:31Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "75c49a98d45ab721681dd86c3b163d13b5d6d8d5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +217,221 @@\tframework.KubeDescribe(\"[Flaky] Granular Checks\", func() {\n\n\t\tconnectivityTimeout := 10\n\n\t\tIt(\"should function for pod communication on a single node\", func() {"
  },
  {
    "id" : "b0c671f4-37d2-4db8-bc71-0479fbff988d",
    "prId" : 21807,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b65575d9-6789-4b87-b500-bcd10af14a05",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "The bump is to match the 2 minutes waitTimeout in the nettest container. This is to avoid the case where the container is still waiting for endpoint and the test already time out. \n",
        "createdAt" : "2016-02-25T00:49:56Z",
        "updatedAt" : "2016-02-25T02:36:09Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "01d54914-b2be-4616-bbae-af1060a12cb4",
        "parentId" : "b65575d9-6789-4b87-b500-bcd10af14a05",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please add a comment (sorry to be nitpicky, but someone will surely think this is too large and bring it down and we'll see flake again)\n",
        "createdAt" : "2016-02-25T01:42:26Z",
        "updatedAt" : "2016-02-25T02:36:09Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "66940c2d44bcdf31c13e0d75e0bef623313d6d0e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +174,178 @@\t\t// nettest containers will wait for all service endpoints to come up for 2 minutes\n\t\t// apply a 3 minutes observation period here to avoid this test to time out before the nettest starts to contact peers\n\t\ttimeout := time.Now().Add(3 * time.Minute)\n\t\tfor i := 0; !passed && timeout.After(time.Now()); i++ {\n\t\t\ttime.Sleep(2 * time.Second)"
  },
  {
    "id" : "4090d3df-0458-4af3-8562-7dfdbe4a4e98",
    "prId" : 13568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "617c9952-97fd-4466-8017-60e054b34fa1",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe want to guard on `providerIs(\"local\")` like is done on L120?\n",
        "createdAt" : "2016-02-06T01:58:57Z",
        "updatedAt" : "2016-02-12T16:51:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "4d38be68-92fa-4783-bce0-20606f61e9d3",
        "parentId" : "617c9952-97fd-4466-8017-60e054b34fa1",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "This test is intended to verify pod connectivity across nodes and I think having only one node effectively invalidates the test.  I'll add it if you insist, though, as I can't claim to be an expert on kube testing convention.\n",
        "createdAt" : "2016-02-06T02:04:07Z",
        "updatedAt" : "2016-02-12T16:51:03Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "ead1c28e-170d-4ea9-9180-a70e9ea9262d",
        "parentId" : "617c9952-97fd-4466-8017-60e054b34fa1",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I guess this depends on what we decide re: how these tests are tagged. if they're part of the default set, then they should do the right thing and skip themselves if run in an inappropriate environment.\n",
        "createdAt" : "2016-02-06T02:10:36Z",
        "updatedAt" : "2016-02-12T16:51:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "b1eb2b61-584d-4489-9db2-c37bc2e70803",
        "parentId" : "617c9952-97fd-4466-8017-60e054b34fa1",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Ok, so skip instead of fail if there's only one node?\n",
        "createdAt" : "2016-02-06T02:15:45Z",
        "updatedAt" : "2016-02-12T16:51:03Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "d8fb15e8-cb9d-473a-84a6-32b2f7f83ac5",
        "parentId" : "617c9952-97fd-4466-8017-60e054b34fa1",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "yeah, let's skip if there's only one node.\n",
        "createdAt" : "2016-02-06T02:28:14Z",
        "updatedAt" : "2016-02-12T16:51:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bca8375042ba59ee3b68ed286b465aaeff678fe",
    "line" : null,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t\texpectNoError(err)\n\n\t\t\tif len(nodes.Items) == 1 {\n\t\t\t\tSkipf(\"The test requires two Ready nodes on %s, but found just one.\", testContext.Provider)\n\t\t\t}"
  },
  {
    "id" : "52faf26b-01e1-46bc-b9e2-6684c4a4a85c",
    "prId" : 10015,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "401fd187-3115-4a73-8732-32b29d979fa1",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This could be unindented. https://github.com/golang/go/wiki/CodeReviewComments#indent-error-flow\n",
        "createdAt" : "2015-06-18T20:14:15Z",
        "updatedAt" : "2015-06-20T16:49:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "cd1c4616-f208-463f-90ba-2aa6e8beaafb",
        "parentId" : "401fd187-3115-4a73-8732-32b29d979fa1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "+1\n",
        "createdAt" : "2015-06-18T22:24:09Z",
        "updatedAt" : "2015-06-20T16:49:21Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "4ac0bf0f-81f5-48ab-8436-7caaf537c082",
        "parentId" : "401fd187-3115-4a73-8732-32b29d979fa1",
        "authorId" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "body" : "Thanks for pointing this out! I wasn't aware of this rule.\n",
        "createdAt" : "2015-06-19T09:23:07Z",
        "updatedAt" : "2015-06-20T16:49:21Z",
        "lastEditedBy" : "35dc52fd-2236-4a0d-b72a-ae03d1ba7026",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea891256159d72335cfb18eff581e7cc0c3f3e04",
    "line" : null,
    "diffHunk" : "@@ -1,1 +132,136 @@\t\t\tif !providerIs(\"local\") {\n\t\t\t\tFailf(fmt.Sprintf(\"The test requires two Ready nodes on %s, but found just one.\", testContext.Provider))\n\t\t\t}\n\t\t\tLogf(\"Only one ready node is detected. The test has limited scope in such setting. \" +\n\t\t\t\t\"Rerun it with at least two nodes to get complete coverage.\")"
  },
  {
    "id" : "579b921e-c45e-4c13-ad27-4c8df34a43e8",
    "prId" : 9052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88333fd2-0fcd-4942-b761-950f94d681e2",
        "parentId" : null,
        "authorId" : null,
        "body" : "Why is this test no longer within an It clause?\n",
        "createdAt" : "2015-07-08T21:30:18Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "d0793b51-1923-4d05-add3-9715b85ed70a",
        "parentId" : "88333fd2-0fcd-4942-b761-950f94d681e2",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "There are separate tests - each test is in an It clause below.   That way if a parallel services might fail but the simple one passes.\n",
        "createdAt" : "2015-07-10T09:24:28Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8cd5ef8443bba0df959cc6a3c8a91f3d4ae8424",
    "line" : null,
    "diffHunk" : "@@ -1,1 +112,116 @@\t\tservice        int\n\t\ttimeoutSeconds time.Duration\n\t}{\n\t\t//These are very liberal, once this test is running regularly,\n\t\t//We will DECREASE the timeout value."
  },
  {
    "id" : "8c063981-a246-4bbd-b440-17e117ff2c81",
    "prId" : 9052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14f3cb10-1264-4d34-b67c-5277d7b874da",
        "parentId" : null,
        "authorId" : null,
        "body" : "Do you actually need these two local variables?  They seem unnecessary.\n",
        "createdAt" : "2015-07-08T21:33:27Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "0890363e-2655-4175-a4e0-13713befcb8e",
        "parentId" : "14f3cb10-1264-4d34-b67c-5277d7b874da",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "copy these variables into local ones to avoid   range iterator overwritingthe value in svcSoak which leads to a very confusing scenario (you run the same test over and over again rather than running each one). **Also** its slightly more readable. \n",
        "createdAt" : "2015-07-10T09:26:17Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8cd5ef8443bba0df959cc6a3c8a91f3d4ae8424",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@\t\t//copy to local to avoid range overwriting\n\t\ttimeoutSeconds := svcSoak.timeoutSeconds\n\t\tserviceNum := svcSoak.service\n\t\tIt(fmt.Sprintf(\"should function for intrapod communication between all hosts in %v parallel services [Conformance]\", serviceNum),\n\t\t\tfunc() {"
  },
  {
    "id" : "6ea0e416-39fb-4a78-b4fe-877dd725b13e",
    "prId" : 9052,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7c02c09-11f7-4ad1-8ba3-1b3b8216e249",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I suspect we may want to wrap this in a goroutine rather than serializing.\n",
        "createdAt" : "2015-08-01T00:09:44Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "7ed930ea-2286-4f11-961c-ca4d42805bde",
        "parentId" : "a7c02c09-11f7-4ad1-8ba3-1b3b8216e249",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "actually never mind.\n",
        "createdAt" : "2015-08-01T00:10:18Z",
        "updatedAt" : "2015-10-12T15:41:27Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8cd5ef8443bba0df959cc6a3c8a91f3d4ae8424",
    "line" : null,
    "diffHunk" : "@@ -1,1 +288,292 @@\t\t\tBy(\"waiting for all of the webserver pods to transition to Running + reaching the Passing state.\")\n\n\t\t\tfor _, podName := range podNames {\n\t\t\t\terr = f.WaitForPodRunning(podName)\n\t\t\t\tExpect(err).NotTo(HaveOccurred())"
  },
  {
    "id" : "81525dff-ed51-4bca-b225-d40c7929fbe7",
    "prId" : 6341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7673f012-1792-400e-a385-c51d9e3e3a72",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Do we really want to have this log message?\n",
        "createdAt" : "2015-04-02T13:06:08Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "6d9698c2-33a5-47f7-a7cf-f5f5fe548131",
        "parentId" : "7673f012-1792-400e-a385-c51d9e3e3a72",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "I find these log messages very useful for debugging.\n",
        "createdAt" : "2015-04-02T15:31:26Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad7557ed42afbd44545bb27383e222ffdf91727",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\tpodName := fmt.Sprintf(\"%s-%d\", name, i)\n\t\tpodNames = append(podNames, podName)\n\t\tLogf(\"Creating pod %s on node %s\", podName, node.Name)\n\t\t_, err := c.Pods(ns).Create(&api.Pod{\n\t\t\tObjectMeta: api.ObjectMeta{"
  },
  {
    "id" : "e85efccc-576d-4af7-aa06-f6b8729ca885",
    "prId" : 6341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49ef74b9-3612-4885-8d1e-e191adce69e2",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "What does mean -peers arg? Shouldn't be totalPods-1?\n",
        "createdAt" : "2015-04-02T13:08:16Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "7573dcbc-b6de-4e0f-b658-b83433f9f827",
        "parentId" : "49ef74b9-3612-4885-8d1e-e191adce69e2",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "This identifies the number of peers including itself. Much of this code has already been reviewed so it's a shame that much of it is turning up in green again.\n",
        "createdAt" : "2015-04-02T15:32:32Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad7557ed42afbd44545bb27383e222ffdf91727",
    "line" : null,
    "diffHunk" : "@@ -1,1 +72,76 @@\t\t\t\t\t\t\t//peers >= totalPods should be asserted by the container.\n\t\t\t\t\t\t\t//the nettest container finds peers by looking up list of svc endpoints.\n\t\t\t\t\t\t\tfmt.Sprintf(\"-peers=%d\", totalPods),\n\t\t\t\t\t\t\t\"-namespace=\" + ns},\n\t\t\t\t\t\tPorts: []api.ContainerPort{{ContainerPort: 8080}},"
  },
  {
    "id" : "97c4c91d-fa26-4c1d-bc61-fe68bd57b85c",
    "prId" : 6341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2f1a2d3-a2f3-4b6b-9af9-6d4c77ae177d",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "\"#3580\" only\n",
        "createdAt" : "2015-04-02T13:09:31Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "d0897f76-6de2-45dc-8a21-ec7514cbb00a",
        "parentId" : "e2f1a2d3-a2f3-4b6b-9af9-6d4c77ae177d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "yup this should be skipped since its below the return if Provider==vagrant.\n",
        "createdAt" : "2015-04-02T15:25:45Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad7557ed42afbd44545bb27383e222ffdf91727",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +122,126 @@\tIt(\"should function for intra-pod communication\", func() {\n\t\tif testContext.Provider == \"vagrant\" {\n\t\t\tBy(\"Skipping test which is broken for vagrant (See https://github.com/GoogleCloudPlatform/kubernetes/issues/3580)\")\n\t\t\treturn\n\t\t}"
  },
  {
    "id" : "2a869111-c3e9-4811-86c7-ecfc012d6332",
    "prId" : 6341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c517891d-b0b6-4a98-bdd7-a385ff7d2b07",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "How about moving this also to LaunchNetTestPodPerNode()?\n",
        "createdAt" : "2015-04-02T13:16:52Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "fc4b795f-1455-4da4-a454-0711dd5cb781",
        "parentId" : "c517891d-b0b6-4a98-bdd7-a385ff7d2b07",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "since its a test, i chose to keep it in this block - and use that function as a utility instead... is that ok?  \n",
        "createdAt" : "2015-04-02T15:26:18Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad7557ed42afbd44545bb27383e222ffdf91727",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +178,182 @@\t\t}()\n\n\t\tBy(\"Waiting for the webserver pods to transition to Running state\")\n\t\tfor _, podName := range podNames {\n\t\t\terr = waitForPodRunningInNamespace(c, podName, ns)"
  },
  {
    "id" : "d3f16103-1eb9-476f-b1ae-c4d5158a5f21",
    "prId" : 6341,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cddc8e1d-4af7-41a0-92b3-48480046fa97",
        "parentId" : null,
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Maybe move this function to the test/e2e/util.go? It's useful function which starts pod on each node. As a parameter use docker image name.\n",
        "createdAt" : "2015-04-02T13:20:19Z",
        "updatedAt" : "2015-04-02T15:35:38Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad7557ed42afbd44545bb27383e222ffdf91727",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +45,49 @@})\n\nfunc LaunchNetTestPodPerNode(nodes *api.NodeList, name string, c *client.Client, ns string) []string {\n\tpodNames := []string{}\n"
  }
]