[
  {
    "id" : "b50d231e-4b17-454a-b2ac-3a6dfc538f73",
    "prId" : 23567,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae0ddb24-b2df-4a67-8568-fc170e7e9d4a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Can you merge the RestartNever with RestartAlways tests? \n",
        "createdAt" : "2016-04-08T20:41:03Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "c35e81c9-f2d7-444c-92fa-6e6e11dc1e51",
        "parentId" : "ae0ddb24-b2df-4a67-8568-fc170e7e9d4a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Merge in the same test case (and loop?)  The behavior is different and the\ntest outcomes are slightly different, but probably.\n\nOn Fri, Apr 8, 2016 at 4:41 PM, Prashanth B notifications@github.com\nwrote:\n\n> In test/e2e/pods.go\n> https://github.com/kubernetes/kubernetes/pull/23567#discussion_r59086220\n> :\n> \n> > -                       Image:   \"gcr.io/google_containers/busybox:1.24\",\n> > -                       Command: []string{\"/bin/true\"},\n> > -                   },\n> > -                   {\n> > -                       Name:    \"init2\",\n> > -                       Image:   \"gcr.io/google_containers/busybox:1.24\",\n> > -                       Command: []string{\"/bin/true\"},\n> > -                   },\n> > -               },\n> > -               Containers: []api.Container{\n> > -                   {\n> > -                       Name:  \"nginx\",\n> > -                       Image: \"gcr.io/google_containers/pause:2.0\",\n> > -                       Resources: api.ResourceRequirements{\n> > -                           Limits: api.ResourceList{\n> > -                               api.ResourceCPU:    *resource.NewMilliQuantity(100, resource.DecimalSI),\n> \n> Can you merge the RestartNever with RestartAlways tests?\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/23567/files/ad7a96fe3b9dda804fee77e41f7e14ad0b4513d7..98497e1265fe094c18542547514b0a96eee79c0a#r59086220\n",
        "createdAt" : "2016-04-13T00:45:17Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a53330700ac39ee61109c748fe665cf38581a5d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +758,762 @@\t\t\t\t\t\tResources: api.ResourceRequirements{\n\t\t\t\t\t\t\tLimits: api.ResourceList{\n\t\t\t\t\t\t\t\tapi.ResourceCPU:    *resource.NewMilliQuantity(100, resource.DecimalSI),\n\t\t\t\t\t\t\t\tapi.ResourceMemory: *resource.NewQuantity(10*1024*1024, resource.DecimalSI),\n\t\t\t\t\t\t\t},"
  },
  {
    "id" : "194a51de-e226-45cc-8cc5-f38d353d6d2f",
    "prId" : 20202,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6abdc211-0657-4f3c-9cd0-51263a1943f8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Instead of hard-coding 30, how about `int(podStartTimeout.Seconds())`?\n",
        "createdAt" : "2016-01-29T18:00:13Z",
        "updatedAt" : "2016-02-02T21:01:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6d96a04d05f546b16b4199bbc8aeda6102aedad",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +349,353 @@\n\t\tBy(\"deleting the pod gracefully\")\n\t\tif err := podClient.Delete(pod.Name, api.NewDeleteOptions(30)); err != nil {\n\t\t\tFailf(\"Failed to delete pod: %v\", err)\n\t\t}"
  },
  {
    "id" : "af09fc63-74e2-4df1-95b5-e5b32020052e",
    "prId" : 20134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dca7a08b-50dc-4538-9805-c049f7b6f2ea",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Alternatively, we could increase the `FailureThreshold`, although I think that's probably more likely to mask legitimate bugs.\n",
        "createdAt" : "2016-01-26T01:18:03Z",
        "updatedAt" : "2016-01-26T01:18:03Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "f5030e76-1d85-4d43-883f-10076485f77b",
        "parentId" : "dca7a08b-50dc-4538-9805-c049f7b6f2ea",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Yeah. I also considered setting `TimeoutSeconds`, but even that doesn't address the basic issue.\n",
        "createdAt" : "2016-01-26T01:19:05Z",
        "updatedAt" : "2016-01-26T01:19:05Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4e1c9037-4cc3-4933-b661-72d2abaf9e55",
        "parentId" : "dca7a08b-50dc-4538-9805-c049f7b6f2ea",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yeah, just saw your comment on the issue. Lets see if setting the InitialDelaySeconds helps.\n",
        "createdAt" : "2016-01-26T01:20:52Z",
        "updatedAt" : "2016-01-26T01:20:52Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "1521435fad0c761cb19364d3ac200e52958be5d6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +691,695 @@\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tInitialDelaySeconds: 30,\n\t\t\t\t\t\t\tFailureThreshold:    1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},"
  },
  {
    "id" : "ecd08914-3ce3-4cc7-98f6-66588f0c38a4",
    "prId" : 12408,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4650bf14-0583-404b-8df6-666ef00037a0",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this check is already done on L254. why is it necessary to do this again?\n",
        "createdAt" : "2015-08-10T20:51:13Z",
        "updatedAt" : "2015-08-10T23:02:23Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2c5c8bda-4531-43f1-831c-fb3e3212b098",
        "parentId" : "4650bf14-0583-404b-8df6-666ef00037a0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "When graceful deletion lands this still needs to be empty.  In graceful deletion there are more ways for deletion to not really be deletion.\n",
        "createdAt" : "2015-08-10T21:09:12Z",
        "updatedAt" : "2015-08-10T23:02:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f85fc9a7-2e51-4ed4-a032-e38a0f740482",
        "parentId" : "4650bf14-0583-404b-8df6-666ef00037a0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Also verifying the Kubelet doesn't accidentally recreate the pod when it detects deletion.\n",
        "createdAt" : "2015-08-10T21:10:07Z",
        "updatedAt" : "2015-08-10T23:02:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "42fd37ba-c83a-411d-9ef4-263af611fd87",
        "parentId" : "4650bf14-0583-404b-8df6-666ef00037a0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "No wait, it was a bad merge.\n",
        "createdAt" : "2015-08-10T21:10:52Z",
        "updatedAt" : "2015-08-10T23:02:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "e623d33343566abba9196652f3873488e20ee10d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\t\tFail(fmt.Sprintf(\"Failed to list pods to verify deletion: %v\", err))\n\t\t}\n\t\tExpect(len(pods.Items)).To(Equal(0))\n\t})\n"
  },
  {
    "id" : "b011f501-2b46-45ff-9572-fba8adfa0970",
    "prId" : 11500,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "956368b5-cffb-4a1f-9ed1-51662f5b25f1",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "did you avoid using `wait.Poll` so you could more easily print out the elapsed time?\n",
        "createdAt" : "2015-07-23T22:02:28Z",
        "updatedAt" : "2015-07-23T23:03:42Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "f77aa167-5337-498a-a092-da0a3df24da1",
        "parentId" : "956368b5-cffb-4a1f-9ed1-51662f5b25f1",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "I avoided using `wait.Poll` because it is terrible (#10307) and because it's not used here I thought I could get away with not switching to it :-)\n",
        "createdAt" : "2015-07-23T22:04:09Z",
        "updatedAt" : "2015-07-23T23:03:42Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e704004a53cd722ad44d992c892f4126c4558b6f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +63,67 @@\t// Wait for the restart state to be as desired.\n\trestarts, deadline := false, time.Now().Add(2*time.Minute)\n\tfor start := time.Now(); time.Now().Before(deadline); time.Sleep(2 * time.Second) {\n\t\tpod, err = c.Pods(ns).Get(podDescr.Name)\n\t\texpectNoError(err, fmt.Sprintf(\"getting pod %s\", podDescr.Name))"
  },
  {
    "id" : "8c907d55-7d78-488f-8fea-208bcf8a2a43",
    "prId" : 10523,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25fcd683-7031-42e4-bc7a-7fa468617a0b",
        "parentId" : null,
        "authorId" : null,
        "body" : "Unfortunately you need to do this using e2e/util/NewFramework(), and wire this into ForEach().  Let me find an example for you...\n",
        "createdAt" : "2015-06-30T20:28:36Z",
        "updatedAt" : "2015-06-30T20:28:36Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "5f021cf3-42f0-49c0-9d17-a79e79b4df6b",
        "parentId" : "25fcd683-7031-42e4-bc7a-7fa468617a0b",
        "authorId" : null,
        "body" : "Here is a reasonsable canonical example:\n\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/85ade1db0a1918f251909912c1c877b78be17c3e/test/e2e/service_latency.go#L40\n\ncc: @lavalamp in case he has any further suggestions.\n",
        "createdAt" : "2015-06-30T20:32:18Z",
        "updatedAt" : "2015-06-30T20:32:18Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "84563b93-a14f-45f3-b2c1-6938e1559de1",
        "parentId" : "25fcd683-7031-42e4-bc7a-7fa468617a0b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "lots of things use `createTestingNS` directly (despite the doc warning)... this seemed to be the most equivalent call... I can switch to `NewFramework` if you or @lavalamp deem it necessary\n",
        "createdAt" : "2015-06-30T20:35:53Z",
        "updatedAt" : "2015-06-30T20:36:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3eadcba8-3453-4209-af19-0f510c877305",
        "parentId" : "25fcd683-7031-42e4-bc7a-7fa468617a0b",
        "authorId" : null,
        "body" : "Fair enough.  Lets defer that to a separate PR.  \n",
        "createdAt" : "2015-06-30T20:51:43Z",
        "updatedAt" : "2015-06-30T20:51:43Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ecebac93951d6ec83593ca90dff27f9b78faa259",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +37,41 @@\nfunc runLivenessTest(c *client.Client, podDescr *api.Pod, expectRestart bool) {\n\tnamespace, err := createTestingNS(\"pods-liveness\", c)\n\tExpect(err).NotTo(HaveOccurred())\n\tns := namespace.Name"
  },
  {
    "id" : "8a39f8df-9fb6-49ea-a68a-97918bfebb22",
    "prId" : 9514,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "685e4af6-c5c4-4792-aeab-33a36fcf957c",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Needs to run in it's own namespace using @lavalamp's Framework.  But that's not how pods.go is wired up right now, so lets defer that to a separate PR.\n",
        "createdAt" : "2015-06-09T22:03:42Z",
        "updatedAt" : "2015-06-09T22:21:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "66ce2517-69e5-4eb4-9932-39ca36b06668",
        "parentId" : "685e4af6-c5c4-4792-aeab-33a36fcf957c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "ack.\n",
        "createdAt" : "2015-06-09T22:17:30Z",
        "updatedAt" : "2015-06-09T22:21:42Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b034a8293a1b4c3a2b0d183c62f6ec50d8cdbd6",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +159,163 @@\t})\n\tIt(\"should be schedule with cpu and memory limits\", func() {\n\t\tpodClient := c.Pods(api.NamespaceDefault)\n\n\t\tBy(\"creating the pod\")"
  },
  {
    "id" : "90202079-e5ea-4f4c-b2a7-1332eb667df2",
    "prId" : 9514,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5831fca-df9f-4222-8f74-28fb1397835c",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Don't need the UUID when it's running in its own namespace as per previous comment.  Defer to sep PR.\n",
        "createdAt" : "2015-06-09T22:04:35Z",
        "updatedAt" : "2015-06-09T22:21:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "22c9faee-5b47-4c2c-be9e-e7cdffdf20f9",
        "parentId" : "c5831fca-df9f-4222-8f74-28fb1397835c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "ack.\n",
        "createdAt" : "2015-06-09T22:17:36Z",
        "updatedAt" : "2015-06-09T22:21:42Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b034a8293a1b4c3a2b0d183c62f6ec50d8cdbd6",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +162,166 @@\n\t\tBy(\"creating the pod\")\n\t\tname := \"pod-update-\" + string(util.NewUUID())\n\t\tvalue := strconv.Itoa(time.Now().Nanosecond())\n\t\tpod := &api.Pod{"
  },
  {
    "id" : "91bf4df7-5b32-4f92-a908-cadc07a3e339",
    "prId" : 8696,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "683e2e51-1ab7-4292-9dfc-ff87e3d67af6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`ensureNamespaceExists`? optimistically creating and tolerating an IsConflict() error would save you a request in the normal case. Should probably tolerate a conflict error anyway\n",
        "createdAt" : "2015-05-28T18:12:50Z",
        "updatedAt" : "2015-05-28T18:12:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bb209fbb-36a9-4059-b0fd-c6130f892a4d",
        "parentId" : "683e2e51-1ab7-4292-9dfc-ff87e3d67af6",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "No major disagreement, but I am really tired of running 50 minute tests against GCE.\n\nThis was good enough for me now.  I think these tests should really move to the common framework longer term.\n",
        "createdAt" : "2015-05-28T19:07:24Z",
        "updatedAt" : "2015-05-28T19:07:24Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "292fe654-232f-4274-94b9-d1769c15ff0e",
        "parentId" : "683e2e51-1ab7-4292-9dfc-ff87e3d67af6",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok\n",
        "createdAt" : "2015-05-28T19:08:55Z",
        "updatedAt" : "2015-05-28T19:08:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e8b1d5e018b474c4edb6e6904b040dd7237466a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +36,40 @@\n// createNamespaceIfDoesNotExist ensures that the namespace with specified name exists, or returns an error\nfunc createNamespaceIfDoesNotExist(c *client.Client, name string) (*api.Namespace, error) {\n\tnamespace, err := c.Namespaces().Get(name)\n\tif err != nil {"
  },
  {
    "id" : "c22cf960-cf68-498a-ba8e-54fe0b9484b1",
    "prId" : 7297,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06094f76-0926-4ee3-b5e9-9ffa5ed6415c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is very important to this pattern: You must make changes to the pod you got from get (\"podOut\") and resubmit that pod. Otherwise, you could unintentionally blow away changes made by someone else.\n\n(Or something functionally equivilent like deep copy podOut over pod, but that's needless.)\n",
        "createdAt" : "2015-04-24T17:44:53Z",
        "updatedAt" : "2015-04-24T18:49:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "098dc5a7-15e0-4292-80aa-0a28e93805bf",
        "parentId" : "06094f76-0926-4ee3-b5e9-9ffa5ed6415c",
        "authorId" : null,
        "body" : "Agreed.  That's not what the original test did, so I tried to minimize changes.  But in retrospect I agree and I'll fix that.\n",
        "createdAt" : "2015-04-24T17:55:49Z",
        "updatedAt" : "2015-04-24T18:49:40Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "7433d10104ca1f49f065371cc4b22fda303ea24b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +302,306 @@\t\t\t\t}\n\t\t\t}\n\t\t\tpod.Labels[\"time\"] = value\n\t\t\tpod, err = podClient.Update(pod)\n\t\t\tif err == nil {"
  },
  {
    "id" : "9a7e5fa1-061f-4ffc-bc63-010669ed8fa4",
    "prId" : 4631,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2119c795-ac5f-48e8-bdad-071fa37e858a",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I'm not sure this comment is really necessary since the semantics of defer are well known to go developers. \n",
        "createdAt" : "2015-02-20T08:32:50Z",
        "updatedAt" : "2015-02-20T08:32:50Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2944334db197c2fd050cf0204f82798d570139d1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +125,129 @@\n\t\tBy(\"submitting the pod to kubernetes\")\n\t\t// We call defer here in case there is a problem with\n\t\t// the test so we can ensure that we clean up after\n\t\t// ourselves"
  },
  {
    "id" : "56ee3fe5-b0b8-413d-80b5-bf978bdadf64",
    "prId" : 4280,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f15a70f-117a-476a-a60b-3f5fb91f5747",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "By() takes an optional second argument that is a callback function. So this can be written as:\n\ndefer By(\"deleting the pod\", c.Pods(ns).Delete(podDescr.Name))\n",
        "createdAt" : "2015-02-10T18:22:29Z",
        "updatedAt" : "2015-02-10T18:51:42Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "73835c87-d3c4-4fa5-b726-b1213e4a4f4a",
        "parentId" : "1f15a70f-117a-476a-a60b-3f5fb91f5747",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "The only issue is that we are ignoring the return value of the Delete function if we do it this way. It might be nicer to have a wrapper func (deletePodOrDie) that checks the err value and calls Expect(err).NotTo(HaveOccurred()) on it. \n",
        "createdAt" : "2015-02-10T18:24:26Z",
        "updatedAt" : "2015-02-10T18:51:42Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "2c35f079-73f0-4813-b0bc-1f7fbb6932f3",
        "parentId" : "1f15a70f-117a-476a-a60b-3f5fb91f5747",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Well, or the super awkward to read:\n\n```\ndefer By(\"deleting the pod\", Expect(\n         c.Pods(ns).Delete(podDescr.Name)).NotTo(HaveOccurred()))\n```\n\nat that point I'd rather have an English error wrapper for the ErrorNotToHaveOccurred bit so that it looks more like:\n`defer By(\"deleting the pod\", RunOrDie(c.Pods(ns).Delete(podDescr.Name)))`\n",
        "createdAt" : "2015-02-10T18:29:39Z",
        "updatedAt" : "2015-02-10T18:51:42Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "979ecf42d20531b0379519b921c325bbb487bab6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +40,44 @@\n\t// At the end of the test, clean up by removing the pod.\n\tdefer func() {\n\t\tBy(\"deleting the pod\")\n\t\tc.Pods(ns).Delete(podDescr.Name)"
  },
  {
    "id" : "b00c60cc-2b70-4a31-9185-3ccfa19692bf",
    "prId" : 3942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad68478-abee-41ed-afaf-4a773dade6e8",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Does this image have a specific tag we can reference?\n",
        "createdAt" : "2015-02-03T00:22:55Z",
        "updatedAt" : "2015-02-03T14:45:32Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "71c8002a-ab7f-4f41-9f4d-bedfe13a4849",
        "parentId" : "3ad68478-abee-41ed-afaf-4a773dade6e8",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Yes it does. I think the current one is :1.1 and I encourage its use.\nNote that serve_hostname (no tag, or :latest which in this case means \"oldest\") is the oldest image and adds a newline character to the newline.\nNote that serve_hostname:1.0 (based on ubuntu so big) or server_hostname:1.1 (based on scratch, so small) **do not** add a newline character after the hostname.\n",
        "createdAt" : "2015-02-03T17:30:26Z",
        "updatedAt" : "2015-02-03T17:30:45Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a562b18a7ed39c151513962760baf27d388baf7",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +166,170 @@\t\t\t  \"containers\": [{\n\t\t\t\t\"name\": \"srv\",\n\t\t\t\t\"image\": \"kubernetes/serve_hostname\",\n\t\t\t\t\"ports\": [{\n\t\t\t\t  \"containerPort\": 9376,"
  },
  {
    "id" : "8849d905-77f0-4157-9095-e88880cd589a",
    "prId" : 3942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b23818e-294b-4a0b-8eb7-c5f9800e25b0",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Do we really need to use hostPort here?\n",
        "createdAt" : "2015-02-03T00:23:15Z",
        "updatedAt" : "2015-02-03T14:45:32Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a562b18a7ed39c151513962760baf27d388baf7",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +169,173 @@\t\t\t\t\"ports\": [{\n\t\t\t\t  \"containerPort\": 9376,\n\t\t\t\t  \"hostPort\": 8080\n\t\t\t\t}]\n\t\t\t  }]"
  }
]