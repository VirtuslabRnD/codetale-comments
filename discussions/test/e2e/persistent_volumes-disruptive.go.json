[
  {
    "id" : "5f65237e-6c00-4ff9-bef7-9afbc2a927c7",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13390557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1bf1b0e-b766-475a-bdda-ad1933cbcbbe",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "do you want an `Expect(len(nfsServerIP)).NotTo(BeZero())` ?",
        "createdAt" : "2016-12-16T18:58:38Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@\n\t\t\tframework.Logf(\"[BeforeEach] Configuring PersistentVolume\")\n\t\t\tnfsServerIP = nfsServerPod.Status.PodIP\n\t\t\tExpect(nfsServerIP).NotTo(BeEmpty())\n\t\t\tnfsPVconfig = persistentVolumeConfig{"
  },
  {
    "id" : "b0b3ffff-10d8-4964-855d-505986f0436f",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13390929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3db24c61-9eb2-4dce-9f96-06d3f1573d43",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "shouldn't clientNodeIP be set here so that the next time the BeforeEach is called this step is skipped?",
        "createdAt" : "2016-12-16T19:00:40Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : null,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\t\t\t\tclientNodeIP = framework.GetNodeExternalIP(clientNode)\n\t\t\t\t\tExpect(clientNodeIP).NotTo(BeEmpty())\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "d32b16a9-0117-4872-b376-d244cca8c217",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13391191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df7e27ac-5852-4325-b37e-55aa2d491141",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "see comment below... or, change this line to `if clientNode == nil {` ?",
        "createdAt" : "2016-12-16T19:01:58Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\t}\n\t\t// Get the first ready node IP that is not hosting the NFS pod.\n\t\tif clientNodeIP == \"\" {\n\t\t\tframework.Logf(\"Designating test node\")\n\t\t\tnodes := framework.GetReadySchedulableNodesOrDie(c)"
  },
  {
    "id" : "94d691c6-2556-468f-94be-39dcecfea4c9",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13419118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edc203da-f0d7-47c0-b913-93da1ae3012f",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "why the test of `kOp` here an on L249 since the block is identical? Why not unconditionally call `WaitForNodeToBeNotReady()`?",
        "createdAt" : "2016-12-16T19:09:12Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "ca4a3d87-a71b-4d15-9345-6c3c21fbcbc3",
        "parentId" : "edc203da-f0d7-47c0-b913-93da1ae3012f",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "My intent here was to cut out an unnecessary api call. When `WaitForNodeToBeNotReady()` is called on `kubelet start`, it would make a Get() call and test for a NotReady state, which would be it's expected current state.\r\n  \r\nIt also meant that the log would read like:\r\n\r\n`ssh root@0.0.0.0: command:   /etc/init.d/kubelet start`\r\n`Waiting up to 2m0s for node condition Ready to be false` \r\n`Condition Ready of node is true instead of false. Reason: KubeletReady, message: kubelet is posting ready status. WARNING: CPU hardcapping unsupported`\r\n`Waiting up to 2m0s for node condition Ready to be true`\r\n`Condition Ready of node jcope-e2e-minion-group-fmhy is false instead of true.`\r\n\r\nWhich seemed like it might be a little confusing.\r\n\r\nI could be over thinking this a bit though.  Maybe the above reasons are a bit trivial.",
        "createdAt" : "2016-12-16T21:53:03Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "cfe9ae31-d072-4295-a029-4b9031527e22",
        "parentId" : "edc203da-f0d7-47c0-b913-93da1ae3012f",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Oh, never mind, my mistake. I read too quickly and thought that you called `WaitForNodeToBeNotReady` in both blocks.",
        "createdAt" : "2016-12-16T22:00:40Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +240,244 @@\t// On restart, waiting for node NotReady prevents a race condition where the node takes a few moments to leave the\n\t// Ready state which in turn short circuits WaitForNodeToBeReady()\n\tif kOp == kStop || kOp == kRestart {\n\t\tif ok := framework.WaitForNodeToBeNotReady(c, pod.Spec.NodeName, NodeStateTimeout); !ok {\n\t\t\tframework.Failf(\"Node %s failed to enter NotReady state\", pod.Spec.NodeName)"
  },
  {
    "id" : "39a5a3ad-5534-4f12-b695-23db56bb561c",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13418383",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e36a96e-f3b1-4c1c-a117-b314fba7d7a4",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Is `clientPod` stale when this func returns, meaning a different UID? I guess the fields you reference below are still valid...",
        "createdAt" : "2016-12-16T19:11:34Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "061eb0cc-c103-4ee3-93ea-b8e4e8e52d72",
        "parentId" : "0e36a96e-f3b1-4c1c-a117-b314fba7d7a4",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "I tested this manually to make sure and found that the pod UID remains the same through a kubelet restart.  Left out re-getting the pod to avoid unnecessary api calls.",
        "createdAt" : "2016-12-16T21:36:44Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "40ba5f2f-1b1e-4373-a85d-f30cb180b14e",
        "parentId" : "0e36a96e-f3b1-4c1c-a117-b314fba7d7a4",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "ok, that interesting and good to know!",
        "createdAt" : "2016-12-16T21:55:30Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : null,
    "diffHunk" : "@@ -1,1 +169,173 @@\n\tBy(\"Restarting kubelet\")\n\tkubeletCommand(kRestart, c, clientPod)\n\n\tBy(\"Testing that written file is accessible.\")"
  },
  {
    "id" : "3b77de9e-d7ae-41b6-b3c0-fc7edfde24b8",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13555117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "592e3315-16de-4690-a86a-1e74b70c921e",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Why assign nodeName here? Won't it be filled in once the pod is running & ready?",
        "createdAt" : "2016-12-16T19:19:37Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "808ff95f-8d03-4675-856e-61a8ddd69a64",
        "parentId" : "592e3315-16de-4690-a86a-1e74b70c921e",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "From the v1 Pod.Spec [api definitions](http://kubernetes.io/docs/api-reference/v1/definitions/):\r\n> NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.\r\n\r\nUsing nodeLabels/Selectors is another option but a felt like overkill for the test.",
        "createdAt" : "2016-12-16T22:08:26Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "f46deed1-ec3e-4bd3-b69b-a1a7dd624f2b",
        "parentId" : "592e3315-16de-4690-a86a-1e74b70c921e",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "ok, I wondered if that was the reason, but I thought label/selectors would be used for that. But I agree with your comment: it is simpler.",
        "createdAt" : "2016-12-16T22:33:51Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "0cca196a-0d99-453a-8f0b-f319db311495",
        "parentId" : "592e3315-16de-4690-a86a-1e74b70c921e",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "yes, setting `pod.Spec.NodeName` is the right thing to do, we want to bypass scheduler here.",
        "createdAt" : "2016-12-19T14:09:09Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : null,
    "diffHunk" : "@@ -1,1 +205,209 @@\tpv, pvc := createPVPVC(c, pvConfig, ns, false)\n\tpod := makePod(ns, pvc.Name)\n\tpod.Spec.NodeName = nodeName\n\tframework.Logf(\"Creating nfs client Pod %s on node %s\", pod.Name, nodeName)\n\tpod, err := c.Core().Pods(ns).Create(pod)"
  },
  {
    "id" : "d93d867b-f904-4e3d-8f3d-3674a15defd4",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13394736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ff8c6c0-ac26-4c98-8850-795b95dcc44c",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "is there any need to set clientPod, pv, pvc to nil after this call?",
        "createdAt" : "2016-12-16T19:22:06Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\tAfterEach(func() {\n\t\t\tframework.Logf(\"Tearing down test spec\")\n\t\t\ttearDownTestCase(c, f, ns, clientPod, pvc, pv)\n\t\t\tpv, pvc, clientPod = nil, nil, nil\n\t\t})"
  },
  {
    "id" : "20e96788-8136-426b-b330-919ad4eca3c5",
    "prId" : 38879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38879#pullrequestreview-13555117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d75d5996-b11e-4234-ab74-4000493b425c",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "You write _SUCCESS to the volume but you never check that it's gone after unmount.",
        "createdAt" : "2016-12-19T14:07:57Z",
        "updatedAt" : "2016-12-20T20:12:21Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "da604ad9fac4f016ae754fe238ead7d1fb626891",
    "line" : null,
    "diffHunk" : "@@ -1,1 +185,189 @@\tBy(\"Expecting the volume mount to be found.\")\n\tresult, err := framework.SSH(\"mount | grep \"+string(clientPod.UID), nodeIP, framework.TestContext.Provider)\n\tExpect(err).NotTo(HaveOccurred())\n\tExpect(result.Code).To(BeZero())\n"
  }
]