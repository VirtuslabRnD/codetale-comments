[
  {
    "id" : "22a4015c-bf00-462a-a826-786ebcf6190d",
    "prId" : 96299,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96299#pullrequestreview-582683191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e121be34-422d-4291-ad77-1614596dfa5e",
        "parentId" : null,
        "authorId" : "87d7d25e-5586-44fd-93fa-024da6e91035",
        "body" : "should it be true here?",
        "createdAt" : "2021-01-31T22:22:25Z",
        "updatedAt" : "2021-05-11T18:40:08Z",
        "lastEditedBy" : "87d7d25e-5586-44fd-93fa-024da6e91035",
        "tags" : [
        ]
      },
      {
        "id" : "d30be316-1612-4e30-a2ca-3c96d12baa77",
        "parentId" : "e121be34-422d-4291-ad77-1614596dfa5e",
        "authorId" : "69dfcdb2-87bb-418a-81a7-28e458332cdd",
        "body" : "I think so, yes. Made this true.",
        "createdAt" : "2021-02-03T18:42:54Z",
        "updatedAt" : "2021-05-11T18:40:08Z",
        "lastEditedBy" : "69dfcdb2-87bb-418a-81a7-28e458332cdd",
        "tags" : [
        ]
      }
    ],
    "commit" : "564e531aa72f48afde659e5ce464d0c35d608889",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +450,454 @@\t\t// Grab apiserver, scheduler, controller-manager metrics and (optionally) nodes' kubelet metrics.\n\t\tgrabMetricsFromKubelets := TestContext.GatherMetricsAfterTest != \"master\" && !ProviderIs(\"kubemark\")\n\t\tgrabber, err := e2emetrics.NewMetricsGrabber(f.ClientSet, f.KubemarkExternalClusterClientSet, grabMetricsFromKubelets, true, true, true, TestContext.IncludeClusterAutoscalerMetrics, false)\n\t\tif err != nil {\n\t\t\tLogf(\"Failed to create MetricsGrabber (skipping metrics gathering): %v\", err)"
  },
  {
    "id" : "66efda1d-23fe-4b02-9fcd-b75743164b27",
    "prId" : 94318,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94318#pullrequestreview-485111747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "356be7b1-2abc-48aa-b669-5e1309d54f3a",
        "parentId" : null,
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Hmm, I am wondering is it possible another test that has the same namespace getting created between the gap. And by remove that namespace from namespacesToDelete, we are leaking resources?",
        "createdAt" : "2020-08-28T23:54:19Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "630e00f7-fda9-4d30-9665-c5ce083a4110",
        "parentId" : "356be7b1-2abc-48aa-b669-5e1309d54f3a",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "same comment as below (https://github.com/kubernetes/kubernetes/pull/94318#discussion_r479613474) , ginko/k8s runs tests parallely in different processes not in different goroutines. ",
        "createdAt" : "2020-09-09T15:09:29Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4ce4206674b1351dcae4d4609e23ca4e0ec0744",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +490,494 @@\t\t}\n\t\t// remove deleted namespace from namespacesToDelete map\n\t\tfor i, ns := range f.namespacesToDelete {\n\t\t\tif ns == nil {\n\t\t\t\tcontinue"
  },
  {
    "id" : "aaf05ce6-4376-403c-aedf-35c254086514",
    "prId" : 94318,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94318#pullrequestreview-485123905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "195fa96c-2210-4959-9782-648cfb766e2f",
        "parentId" : null,
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "Should we log a message and simply return if `err != nil && apierrors.IsNotFound(err)` is true?",
        "createdAt" : "2020-08-29T06:02:02Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "6f80976e-0ad9-43e9-910c-a7534552ebaa",
        "parentId" : "195fa96c-2210-4959-9782-648cfb766e2f",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "we still need to remove it from `f.namespacesToDelete` array if `IsNotFound` is true right?",
        "createdAt" : "2020-09-09T15:21:54Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4ce4206674b1351dcae4d4609e23ca4e0ec0744",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +480,484 @@\tdefer func() {\n\t\terr := f.ClientSet.CoreV1().Namespaces().Delete(context.TODO(), name, metav1.DeleteOptions{})\n\t\tif err != nil && !apierrors.IsNotFound(err) {\n\t\t\tLogf(\"error deleting namespace %s: %v\", name, err)\n\t\t\treturn"
  },
  {
    "id" : "a7b249ac-0d82-4b69-a22b-c893a76a9c90",
    "prId" : 94318,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94318#pullrequestreview-485110773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b316f5-23cd-474a-85ca-894cf26cd79a",
        "parentId" : null,
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "Modifying `f.namespacesToDelete` here is likely to race if `Framework.BeforeEach` in another goroutine is creating namespace by calling `Framework.CreateNamespace()`.",
        "createdAt" : "2020-08-29T06:05:47Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "a51bb4e7-b4fe-425d-8be6-f850de2b7c6c",
        "parentId" : "90b316f5-23cd-474a-85ca-894cf26cd79a",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "The parallelization in ginkgo/k8s is achieved via processes. i.e - each test runs in its own process, so there is no chance that `f.namespacesToDelete` will be shared between tests.",
        "createdAt" : "2020-09-09T15:08:24Z",
        "updatedAt" : "2020-09-09T15:22:39Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4ce4206674b1351dcae4d4609e23ca4e0ec0744",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +495,499 @@\t\t\t}\n\t\t\tif ns.Name == name {\n\t\t\t\tf.namespacesToDelete = append(f.namespacesToDelete[:i], f.namespacesToDelete[i+1:]...)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "30d40bdf-0cc8-4348-a720-dd1057437c25",
    "prId" : 84509,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84509#pullrequestreview-309801677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91c94ddb-f6b9-4e86-90f1-453da55b04d4",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "This part is a really hard point to remove dependency to e2epsp subpackage from the core framework.\r\nI tried to remove this part, but I found it is so difficult and gave up.",
        "createdAt" : "2019-10-30T18:31:32Z",
        "updatedAt" : "2019-10-31T09:44:30Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "de2c66a2-d16c-45c0-83e4-f25db63d89e2",
        "parentId" : "91c94ddb-f6b9-4e86-90f1-453da55b04d4",
        "authorId" : "f4cb8434-dc91-40f7-be81-f222657ddde6",
        "body" : "The CI tests passed. I think move psp.go under framework is resonable and harmless. The intention is that the framework does not use subpackages and all subpackages use the same logging framework. There are only two functions called by `framework` and `auth`, the function call from `framework` is hard to remove as you say , why don't we make psp.go as a part of framework.",
        "createdAt" : "2019-10-31T11:11:29Z",
        "updatedAt" : "2019-10-31T11:11:29Z",
        "lastEditedBy" : "f4cb8434-dc91-40f7-be81-f222657ddde6",
        "tags" : [
        ]
      }
    ],
    "commit" : "358dec9f3d85264883cc39b20d175b40ee6a0490",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +399,403 @@\n\tif err == nil && !f.SkipPrivilegedPSPBinding {\n\t\tCreatePrivilegedPSPBinding(f.ClientSet, ns.Name)\n\t}\n"
  },
  {
    "id" : "4d8faf42-5095-4790-b063-0d0ea6493078",
    "prId" : 81915,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81915#pullrequestreview-282331036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think we need a better location for this function instead of `framework.go`.\r\npossibly `/test/e2e/framework/node/runtime.go`, @oomichi WDYT?\r\n\r\n\r\n/hold\r\n",
        "createdAt" : "2019-08-30T10:59:12Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f35fd5ab-048d-4b8c-a8f7-1c0d019b7f5c",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Either of `test/e2e/framework/{node,pod}/runtime.go` works for me.",
        "createdAt" : "2019-08-30T20:21:53Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "b9ece38b-226d-42da-87ab-c03c3617ebff",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "it would also be really nice if we documented this somewhere, other than kube-up, clusters don't tend to have \"test-handler\" registered, so they're only passing whenw e run docker and ~ skip them ... (?)",
        "createdAt" : "2019-08-30T22:04:57Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "4d2caf68-de7e-46d6-b02d-61d62e7c95c7",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I understand _why_ it's like this, but it's a bit annoying to track this down and modify cluster deployments to support the test. I imagine most just don't have this setup and aren't aware of it.",
        "createdAt" : "2019-08-30T22:05:37Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "0ce7be77-c6dc-4531-8dd6-dc6cb371b837",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "> I understand _why_ it's like this, but it's a bit annoying to track this down and modify cluster deployments to support the test. I imagine most just don't have this setup and aren't aware of it.\r\n\r\nMoving it to the `test/e2e/framework/node/runtime.go` would make the e2e node package depends on the framework. I checked out several other e2e packages which do not have this dependency.",
        "createdAt" : "2019-08-31T01:41:53Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "f7c72711-9a1a-497e-a895-54eb248ed8f8",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I mean documenting somewhere that the cluster must have this magical `test-handler` configured",
        "createdAt" : "2019-08-31T02:45:37Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "a466609e-3142-4262-ad8c-26e3aa7769f7",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Makes sense. Since this PR is just moving the code that's already there & needs to get in to 1.16, can we follow up on that?\r\n\r\nI think the better approach would be to make it a variable that get's filled in by the test setup, rather than branching on the runtime, just make the handler parameter explicit (and skip the test if it's missing). But again, I'd like to get this in to 1.16 as is, and follow up with that change.",
        "createdAt" : "2019-08-31T18:42:00Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "3ff5cea8-5739-443c-98f1-4034ac9794b6",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "SGTM 👍",
        "createdAt" : "2019-08-31T19:16:36Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "cc74ca8f-76aa-4ed2-8121-8fac7496b1e2",
        "parentId" : "8f5ed773-f3c3-4466-85e2-f1117b87bc31",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "I created an issue to track this https://github.com/kubernetes/kubernetes/issues/82213",
        "createdAt" : "2019-09-01T07:20:36Z",
        "updatedAt" : "2019-09-01T08:42:33Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "702646df2441c03f435065dd20bb3d8c1c8cbcf2",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +893,897 @@\n// PreconfiguredRuntimeClassHandler returns configured runtime handler.\nfunc PreconfiguredRuntimeClassHandler() string {\n\tif TestContext.ContainerRuntime == \"docker\" {\n\t\treturn TestContext.ContainerRuntime"
  },
  {
    "id" : "f0ba49bb-ca6b-4c9f-b0be-ef525f752b5b",
    "prId" : 75989,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75989#pullrequestreview-227474817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e11e6fc5-0b14-4daa-a536-a9b98734e646",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "just one question for next work: I guess we would keep this DynamicClient because the callers are 17 like\r\n```\r\ntest/e2e$ grep f.DynamicClient * -R | wc -l\r\n17\r\n```\r\nright?\r\n",
        "createdAt" : "2019-04-16T21:44:17Z",
        "updatedAt" : "2019-04-16T21:45:28Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "bae02fb5-f73d-4e2a-8b95-3d12c0de0ed7",
        "parentId" : "e11e6fc5-0b14-4daa-a536-a9b98734e646",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think we should keep it - this dynamic client is part of client-go.\r\nwe only had agreement with api-machinery to move the aggregator.\r\n",
        "createdAt" : "2019-04-16T21:50:32Z",
        "updatedAt" : "2019-04-16T21:50:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f77de663-eada-4c3e-a904-17b5d5cfa3b5",
        "parentId" : "e11e6fc5-0b14-4daa-a536-a9b98734e646",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "@neolit123 Thanks for your explanation, that seems reasonable move :-)",
        "createdAt" : "2019-04-16T22:24:55Z",
        "updatedAt" : "2019-04-16T22:24:56Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "760a825f7cbd071c5cf4fa5249fc311ec5a5d699",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +181,185 @@\t\tf.ClientSet, err = clientset.NewForConfig(config)\n\t\tExpectNoError(err)\n\t\tf.DynamicClient, err = dynamic.NewForConfig(config)\n\t\tExpectNoError(err)\n\t\t// node.k8s.io is based on CRD, which is served only as JSON"
  },
  {
    "id" : "6680d016-4c5c-4b4c-804a-3147c98409ea",
    "prId" : 75616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75616#pullrequestreview-221289786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a70e0147-4618-4051-9ca4-26ca741549fb",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the aggregated apiserver imports, `clientset_generated/clientset` so we still have the internal client set, dependency wise.\r\n\r\nbut then it's not used too:\r\n```\r\n~/go/src/k8s.io/kubernetes/test$ grep AggregatorClient * -rnI\r\ne2e/apimachinery/aggregator.go:72:\t\taggrclient = f.AggregatorClient\r\ne2e/apimachinery/aggregator.go:106:\taggrclient := f.AggregatorClient\r\ne2e/framework/framework.go:79:\tAggregatorClient  *aggregatorclient.Clientset\r\ne2e/framework/framework.go:185:\t\tf.AggregatorClient, err = aggregatorclient.NewForConfig(config)\r\n```\r\n\r\ni think it can be removed?\r\n\r\nDynamicClient on the other hand seems fine because that's \"k8s.io/client-go/dynamic\".\r\n",
        "createdAt" : "2019-03-22T22:17:12Z",
        "updatedAt" : "2019-03-29T01:13:47Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "4ba7a3e6-9f30-4a2b-b642-bce469611d09",
        "parentId" : "a70e0147-4618-4051-9ca4-26ca741549fb",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "That seems a nice idea.\r\nAccording to https://cs.k8s.io/?q=AggregatorClient&i=nope&files=&repos= that still is used in some repos but the fact is e04b91facf180c17557a44e8e462858ea2936301 is not applied to these repos yet.\r\nSo it is nice to remove AggregatorClient also.\r\nI don't have a strong opinion we need to remove it on this PR or another PR.\r\n",
        "createdAt" : "2019-03-22T23:01:32Z",
        "updatedAt" : "2019-03-29T01:13:47Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "abc4efdb-0102-4d2d-8770-b39b31802ce0",
        "parentId" : "a70e0147-4618-4051-9ca4-26ca741549fb",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Sorry if I'm missing something here. The aggregator clientset is imported from `k8s.io/kube-aggregator` (staged directory) though, would we still consider that an internal client set?\r\n\r\nI prefer to do aggregator removal in a separate PR, someone else can take that one if they want :) ",
        "createdAt" : "2019-03-23T17:29:47Z",
        "updatedAt" : "2019-03-29T01:13:47Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ca04c139-c11f-4d69-9892-ef655b26b9b0",
        "parentId" : "a70e0147-4618-4051-9ca4-26ca741549fb",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@oomichi \r\n> So it is nice to remove AggregatorClient also.\r\n\r\n+1\r\n\r\n@andrewsykim \r\n\r\n> Sorry if I'm missing something here. The aggregator clientset is imported from k8s.io/kube-aggregator (staged directory) though, would we still consider that an internal client set?\r\n\r\nfrom my understanding the aggregated apiserver *uses* the internal clientset.\r\ne.g. `aggregatorclient \"k8s.io/kube-aggregator/pkg/client/clientset_generated/clientset\"`\r\n\r\nwaiting on @timothysc to comment on this.\r\n\r\n> I prefer to do aggregator removal in a separate PR, someone else can take that one if they want :)\r\n\r\nok, sounds good.\r\n\r\n/lgtm\r\n/hold\r\n",
        "createdAt" : "2019-03-24T17:32:37Z",
        "updatedAt" : "2019-03-29T01:13:47Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "b3ff4e17-16de-45d4-99b5-2b3bc980f7e5",
        "parentId" : "a70e0147-4618-4051-9ca4-26ca741549fb",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "+1 aim to remove all deps on any transitive deps that yank in the internal client. ",
        "createdAt" : "2019-04-01T19:00:59Z",
        "updatedAt" : "2019-04-01T19:00:59Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "1470df7a052eeed03c7ca794cb988971da98c687",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +75,79 @@\tKubemarkExternalClusterClientSet clientset.Interface\n\n\tAggregatorClient *aggregatorclient.Clientset\n\tDynamicClient    dynamic.Interface\n"
  },
  {
    "id" : "9096bf3d-b1a1-4a1d-bf1f-ac78c7570f5e",
    "prId" : 69868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69868#pullrequestreview-167221582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8db335c2-719f-4335-acd8-2b4b493570c6",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "When is namespace creation not enabled?  And if so, what namespace is used? We have lots of tests that depend on namespace name for generating unique names.",
        "createdAt" : "2018-10-22T18:11:29Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4ff58c69-94a6-4bd7-a946-73527b02f7b0",
        "parentId" : "8db335c2-719f-4335-acd8-2b4b493570c6",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "The framework supports it. Tests explicitly have to ask for it. I don't know which tests make use of that option.\r\n",
        "createdAt" : "2018-10-22T19:07:48Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "e14ed630-9b4d-4241-bbb0-7cefcdc25a4a",
        "parentId" : "8db335c2-719f-4335-acd8-2b4b493570c6",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we just use Namespace.Name and not support parallel drivers tests when it's not set?  At least in our official CI, it creates the namespaces per test and we have many other test cases depending on that behavior.",
        "createdAt" : "2018-10-23T01:00:35Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "45cd40b0-1d27-4467-b4a1-f953a746b80c",
        "parentId" : "8db335c2-719f-4335-acd8-2b4b493570c6",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "We can definitely rely on Namespace.Name and do that in our tests already.\r\n\r\nI added this fallback code merely for those tests that might have been written differently. I didn't want to leave f.UniqueName empty in that case, when it isn't that hard to come up with something that serves the same purpose.\r\n",
        "createdAt" : "2018-10-23T05:37:59Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "248df4ac5800ac5415a5cc154e448bfb640525ed",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +239,243 @@\t} else {\n\t\t// not guaranteed to be unique, but very likely\n\t\tf.UniqueName = fmt.Sprintf(\"%s-%08x\", f.BaseName, rand.Int31())\n\t}\n"
  },
  {
    "id" : "d2e557ad-86ed-4666-9aee-33e9974a67d9",
    "prId" : 68683,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68683#pullrequestreview-156412894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d63cdd53-baeb-4e51-b34d-9ae3dc407c98",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Shouldn't this be just master?",
        "createdAt" : "2018-09-18T14:08:04Z",
        "updatedAt" : "2018-09-18T16:07:08Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "18096e2d-96ce-4bcf-b3f7-2780470edbaf",
        "parentId" : "d63cdd53-baeb-4e51-b34d-9ae3dc407c98",
        "authorId" : "7c932efe-83b7-4b24-aab2-9db6d920473f",
        "body" : "That’s just a tenporary change to test the collection inside this PR only. If it works, Next we will add coredns as default in kubeup in this PR (and also bump coredns memory limit), and rerun the scale test again to observe coreDNS memory usage. ",
        "createdAt" : "2018-09-18T14:57:22Z",
        "updatedAt" : "2018-09-18T16:07:08Z",
        "lastEditedBy" : "7c932efe-83b7-4b24-aab2-9db6d920473f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ea51a551c5df7c1147a40b2a8b96ebf01e6d874",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +251,255 @@\t\tswitch TestContext.GatherKubeSystemResourceUsageData {\n\t\tcase \"master\":\n\t\t\tnodeMode = MasterAndDNSNodes\n\t\tcase \"masteranddns\":\n\t\t\tnodeMode = MasterAndDNSNodes"
  },
  {
    "id" : "e9ae65a1-b7f9-43f1-bd91-f989c92be2e2",
    "prId" : 66296,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66296#pullrequestreview-139464824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96689635-4afb-46ab-a934-dc49d4b26fbe",
        "parentId" : null,
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Could you add some comment to this method?\r\n",
        "createdAt" : "2018-07-23T12:40:13Z",
        "updatedAt" : "2018-07-23T14:25:00Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "00700427-ef19-4a4e-96a5-0da02632be75",
        "parentId" : "96689635-4afb-46ab-a934-dc49d4b26fbe",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Done",
        "createdAt" : "2018-07-23T13:11:35Z",
        "updatedAt" : "2018-07-23T14:25:00Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "a80c34b146326c84841fd1067523b76a0947c63c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +421,425 @@}\n\nfunc (f *Framework) RecordFlakeIfError(err error, optionalDescription ...interface{}) {\n\tf.flakeReport.RecordFlakeIfError(err, optionalDescription)\n}"
  },
  {
    "id" : "a2c8a1b4-d737-41df-9fc2-a8c54e4a6aec",
    "prId" : 57107,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57107#pullrequestreview-83388720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f00a623-169c-4528-9000-1bc320754089",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: just move this chunk into the if block above instead? (not sure if ns and err would ever both be nil)",
        "createdAt" : "2017-12-14T02:48:11Z",
        "updatedAt" : "2017-12-14T02:48:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "20aa1655-60a5-4b4c-8409-8e7b59ce86ce",
        "parentId" : "9f00a623-169c-4528-9000-1bc320754089",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no, if err is non-nil, we're tearing down, not setting more stuff up\r\n\r\nedit: ah, you meant including the err check... no, err and ns cannot both be nil... standard behavior there",
        "createdAt" : "2017-12-14T03:23:38Z",
        "updatedAt" : "2017-12-14T03:29:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d5288ebf380c65e165674a62235e22976560a6a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +379,383 @@\t}\n\n\tif err == nil && !f.SkipPrivilegedPSPBinding {\n\t\tCreatePrivilegedPSPBinding(f, ns.Name)\n\t}"
  },
  {
    "id" : "ca267f14-98d3-49d9-94b3-bcdf018bc95b",
    "prId" : 53541,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53541#pullrequestreview-76948175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7188af42-f2cb-440c-97a1-daaa2e7ddf54",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "The default was earlier 15s and this change seems to have caused a regression - https://github.com/kubernetes/kubernetes/issues/55818.",
        "createdAt" : "2017-11-15T22:11:22Z",
        "updatedAt" : "2017-11-15T22:11:22Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae36f8ee95d23689ad2889c8b16025c999726a8f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +207,211 @@\t\t\tMasterOnly:                  TestContext.GatherKubeSystemResourceUsageData == \"master\",\n\t\t\tResourceDataGatheringPeriod: 60 * time.Second,\n\t\t\tProbeDuration:               5 * time.Second,\n\t\t}, nil)\n\t\tif err != nil {"
  },
  {
    "id" : "88a53a58-a00f-4cdb-9899-26fffc8a7927",
    "prId" : 33981,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33981#pullrequestreview-2776871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7c6a29-bf59-4f5b-ba48-d3a79623e50d",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Shouldn't DeleteNamespace==true mean always delete namespace?\ni.e \ndelete-namespace=true, disregard everything else\ndelete-namespace=false, delete-namespace-on-failure=true, only delete namespace if test failed \ndelete-namespace=false, delete-namespace-on-failure=false, only delete namespaces if test passed\n",
        "createdAt" : "2016-10-04T18:40:50Z",
        "updatedAt" : "2016-10-04T18:41:51Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "bed3f2c8-28f7-4240-bfc8-412e3f6a50ba",
        "parentId" : "db7c6a29-bf59-4f5b-ba48-d3a79623e50d",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Either that or rename the flags so --delete-namespace doesn't need to silently expand to --delete-namespace-only-if-delete-namespace-on-failure...\n",
        "createdAt" : "2016-10-04T18:41:46Z",
        "updatedAt" : "2016-10-04T18:41:51Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "47ccd15b1dc9d02d70e8447aa85adb24293ba3b0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +315,319 @@\t\t// if delete-namespace set to false, namespace will always be preserved.\n\t\t// if delete-namespace is true and delete-namespace-on-failure is false, namespace will be preserved if test failed.\n\t\tif TestContext.DeleteNamespace && (TestContext.DeleteNamespaceOnFailure || !CurrentGinkgoTestDescription().Failed) {\n\t\t\tfor _, ns := range f.namespacesToDelete {\n\t\t\t\tBy(fmt.Sprintf(\"Destroying namespace %q for this suite.\", ns.Name))"
  },
  {
    "id" : "7f816501-f9b7-49b6-9d4b-162415afaed1",
    "prId" : 32015,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "146a53bd-06c0-4b3a-bbba-5c7e0cda503b",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "That doesn't seem to help here: https://github.com/kubernetes/kubernetes/issues/32045#issue-174946883, since the error is an aggregate :/\n",
        "createdAt" : "2016-09-05T12:24:04Z",
        "updatedAt" : "2016-09-05T12:24:04Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "84fd2cde-ecd5-4776-a724-7950fb9fc746",
        "parentId" : "146a53bd-06c0-4b3a-bbba-5c7e0cda503b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's the bug - why do we have an aggregate of length 1?  It should\nbe unwrapped, because NotFound will fail on aggregates.\n",
        "createdAt" : "2016-09-05T18:21:29Z",
        "updatedAt" : "2016-09-05T18:21:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2863d339-f061-44f0-996c-ea1d716fae28",
        "parentId" : "146a53bd-06c0-4b3a-bbba-5c7e0cda503b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think we should never return an aggregate of 1 - the cases where you\nwant that are rare.\n",
        "createdAt" : "2016-09-05T18:22:04Z",
        "updatedAt" : "2016-09-05T18:22:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1e7b60e7-3e61-4ab4-83c9-4802383b6de5",
        "parentId" : "146a53bd-06c0-4b3a-bbba-5c7e0cda503b",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "We are for the string, see [here](https://github.com/kubernetes/kubernetes/blob/master/pkg/util/errors/errors.go#L64-L66), it looks like here the actual error is being swallowed somewhere. \n",
        "createdAt" : "2016-09-06T09:56:24Z",
        "updatedAt" : "2016-09-06T09:56:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3b0c35ca2e36d6b1be4d22f74615d1bf63c97f1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +334,338 @@\t\t\tmessages := []string{}\n\t\t\tfor namespaceKey, namespaceErr := range nsDeletionErrors {\n\t\t\t\tmessages = append(messages, fmt.Sprintf(\"Couldn't delete ns: %q: %s (%#v)\", namespaceKey, namespaceErr, namespaceErr))\n\t\t\t}\n\t\t\tFailf(strings.Join(messages, \",\"))"
  },
  {
    "id" : "09d5336e-2155-441e-9d85-711cc9040b81",
    "prId" : 27390,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da2cf5dc-5497-41c9-b3fe-30f43eb05c18",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Will be good to add a TODO or a NOTE here to remove unversioned FederationClientset, so that anyone writing new code knows that they should use the versioned client set.\n",
        "createdAt" : "2016-06-15T19:41:50Z",
        "updatedAt" : "2016-06-15T19:50:13Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f388d8aad2affc57b26de7bbfe6087da55e7999",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@\n\t// TODO(mml): Remove this.  We should generally use the versioned clientset.\n\tFederationClientset     *federation_internalclientset.Clientset\n\tFederationClientset_1_3 *federation_release_1_3.Clientset\n\t// TODO: remove FederationClient, all the client access must be through FederationClientset"
  },
  {
    "id" : "c024b17a-c0d4-4330-ba5b-efd73f3c50df",
    "prId" : 26953,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95ec8adc-644c-4de0-a85e-a04605e2e0cd",
        "parentId" : null,
        "authorId" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "body" : "@madhusudancs is the plan to remove `FederationClient` and switch over the ginkgo code to use `FederationClientSet` in a subsequent PR? Is there anything blocking us from doing that now?\n",
        "createdAt" : "2016-06-07T15:32:48Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "tags" : [
        ]
      },
      {
        "id" : "b32fe293-b94b-4acf-a2ef-c47ce738889a",
        "parentId" : "95ec8adc-644c-4de0-a85e-a04605e2e0cd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "> @madhusudancs is the plan to remove FederationClient and switch over the ginkgo code to use FederationClientSet in a subsequent PR? \n\n@colhom yeah, that's the goal. \n\n> Is there anything blocking us from doing that now?\n\nI don't want to change too many changes at once. First of all there is no guarantee that any of my stuff works because of the ongoing auth problems. Second, there is a time crunch at the moment and changing too many things mean a lot more debugging time.\n",
        "createdAt" : "2016-06-07T18:59:34Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "0e2a3423-c6d8-4edb-b177-3eb29b00e6ef",
        "parentId" : "95ec8adc-644c-4de0-a85e-a04605e2e0cd",
        "authorId" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "body" : "@madhusudancs there are only two e2e tests now, simply switching from the client to the clientset would be a handful of additional lines in the diff. imho it's easier to just do this now rather than letting the deprecated field hang around and possibly attract more dependencies or subtle interactions as federation e2e grows.\n",
        "createdAt" : "2016-06-07T19:14:52Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "tags" : [
        ]
      },
      {
        "id" : "407347e5-5d6b-44eb-8663-f0c3f49c557c",
        "parentId" : "95ec8adc-644c-4de0-a85e-a04605e2e0cd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "It is definitely a line or two in the diff, but please also consider the additional debugging time required. I think getting federated service controller e2e working is the primary focus at the moment. Anything that takes even a few minutes extra without actually saving time elsewhere is out of question until that federated service e2es are merged.\n",
        "createdAt" : "2016-06-07T19:31:50Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7486d52ea08b0cd008e2aca3b582b30d148a6da",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@\n\tFederationClientset *federation_internalclientset.Clientset\n\t// TODO: remove FederationClient, all the client access must be through FederationClientset\n\tFederationClient *unversionedfederation.FederationClient\n"
  },
  {
    "id" : "b82d65e2-f03d-439c-8abf-77716ac40c17",
    "prId" : 26953,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce5c0d0-4c0b-44ce-b4b3-ea9e2b9fe669",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "We should specify in the log which one is nil FederationClient or FederationClientSet\n",
        "createdAt" : "2016-06-07T18:52:46Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "4a65705f-8e2f-488f-baf7-fa58486d6501",
        "parentId" : "dce5c0d0-4c0b-44ce-b4b3-ea9e2b9fe669",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@nikhiljindal Done.\n",
        "createdAt" : "2016-06-07T19:02:45Z",
        "updatedAt" : "2016-06-10T07:26:40Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7486d52ea08b0cd008e2aca3b582b30d148a6da",
    "line" : null,
    "diffHunk" : "@@ -1,1 +241,245 @@\t\tdefer func() {\n\t\t\tif f.FederationClient == nil {\n\t\t\t\tLogf(\"Warning: framework is marked federated, but has no federation client\")\n\t\t\t\treturn\n\t\t\t}"
  },
  {
    "id" : "8f8bb6aa-08c9-4e0b-b9de-5dc141d0f3ba",
    "prId" : 26100,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e990a746-4319-427c-b426-c7b2044b5f59",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "should there be a sleep before trying again?\n",
        "createdAt" : "2016-05-24T00:04:10Z",
        "updatedAt" : "2016-05-24T14:18:50Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "619acc7f-768c-4287-bdf6-892e9e46b741",
        "parentId" : "e990a746-4319-427c-b426-c7b2044b5f59",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Yes, there should\n",
        "createdAt" : "2016-05-24T00:08:30Z",
        "updatedAt" : "2016-05-24T14:18:50Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "56719f83b7b98fe4b407485b7e387d98c5ec8eb4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +481,485 @@\t\t\t\tLogf(\"Warning: kubectl exec encountered container not found.\\nerr=%v\\nstdout=%v\\nstderr=%v)\", err, string(stdOutBytes), string(stdErrBytes))\n\t\t\t\ttime.Sleep(2 * time.Second)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "04adc640-49f6-4cbc-b431-af77f40cfef9",
    "prId" : 26100,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a79882f2-02bc-4df4-b877-9a8043d28f74",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Sleep should happen for both \"i/o timeout\" and \"container not found\", no?\n",
        "createdAt" : "2016-05-24T17:27:27Z",
        "updatedAt" : "2016-05-24T17:27:27Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "a572bf1e-e14f-45df-92a8-2a96693875a2",
        "parentId" : "a79882f2-02bc-4df4-b877-9a8043d28f74",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "I haven't seen any i/o timeout yet. If it happens, I am not sure timeout helps.\n",
        "createdAt" : "2016-05-24T18:05:38Z",
        "updatedAt" : "2016-05-24T18:05:38Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "eb966053-47de-4b3e-a4f1-4dfc0dabda16",
        "parentId" : "a79882f2-02bc-4df4-b877-9a8043d28f74",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack\n",
        "createdAt" : "2016-05-24T18:41:44Z",
        "updatedAt" : "2016-05-24T18:41:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "56719f83b7b98fe4b407485b7e387d98c5ec8eb4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +480,484 @@\t\t\t\t// Retry on \"container not found\" errors\n\t\t\t\tLogf(\"Warning: kubectl exec encountered container not found.\\nerr=%v\\nstdout=%v\\nstderr=%v)\", err, string(stdOutBytes), string(stdErrBytes))\n\t\t\t\ttime.Sleep(2 * time.Second)\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "35bc06ca-4905-4246-888d-2cc1eeb5faba",
    "prId" : 22869,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d0444f-bcf8-478c-bb9a-e5b0ffcdb28c",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "no errors it's all going to work swimmingly? \n",
        "createdAt" : "2016-04-22T20:27:01Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "0271d957-2e5c-4dbb-82d6-21f2dbc8cfd8",
        "parentId" : "39d0444f-bcf8-478c-bb9a-e5b0ffcdb28c",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "It should fail the test if any error see below\n",
        "createdAt" : "2016-04-22T20:36:00Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "95e315e427549e96df9a4a2b0647f04018d5bdf3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +386,390 @@func (f *Framework) CreateServiceForSimpleAppWithPods(contPort int, svcPort int, appName string, podSpec func(n api.Node) api.PodSpec, count int, block bool) (error, *api.Service) {\n\tvar err error = nil\n\ttheService := f.CreateServiceForSimpleApp(contPort, svcPort, appName)\n\tf.CreatePodsPerNodeForSimpleApp(appName, podSpec, count)\n\tif block {"
  },
  {
    "id" : "2f09a2e5-6b0f-4147-bd07-feecb17bf596",
    "prId" : 22869,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0945734a-fd0e-43af-af55-a9ec7af3640d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So bail on failure. \n",
        "createdAt" : "2016-04-22T20:29:20Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "4b8de234-269d-4102-aa4a-d77eddcf9207",
        "parentId" : "0945734a-fd0e-43af-af55-a9ec7af3640d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Yeah this is a test failure - the service api call fails,  we expect no error there \n",
        "createdAt" : "2016-04-22T20:34:54Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "95e315e427549e96df9a4a2b0647f04018d5bdf3",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +429,433 @@\t\t},\n\t})\n\tExpectNoError(err)\n\treturn service\n}"
  },
  {
    "id" : "c4cda4ff-6382-47fc-ada1-ba35ac851031",
    "prId" : 22869,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d76afda-111f-4958-9acd-f25f779d47dd",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "panic? \n",
        "createdAt" : "2016-04-22T20:30:15Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "c111c21d-896c-44c9-8408-69c97a53fc13",
        "parentId" : "4d76afda-111f-4958-9acd-f25f779d47dd",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Yeah,since It's not an actual failure, but a bug in the test, it's irrelevant to ginkgo , right?\n",
        "createdAt" : "2016-04-22T20:33:38Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "27ec0994-deae-4cfd-8535-71cbb94e2a5d",
        "parentId" : "4d76afda-111f-4958-9acd-f25f779d47dd",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "b/c it'a a utility function it should probably pass an error back to be handled.  \n",
        "createdAt" : "2016-04-22T20:36:02Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "7a289bc9-6817-4484-9f57-2635b6b8f80b",
        "parentId" : "4d76afda-111f-4958-9acd-f25f779d47dd",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "+0  because even though it is a util function (i agree error is idela in that sense), there are 2 reasons why panic is more appropriate here... \n- we don't  really want to Failf, because its not a ginkgo test failure.\n- the error really is not-interprable, it is almost like a compile error - so we shouldnt cascade the error handling outside this func...  \n",
        "createdAt" : "2016-04-22T20:42:11Z",
        "updatedAt" : "2016-04-26T22:42:36Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "95e315e427549e96df9a4a2b0647f04018d5bdf3",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +397,401 @@func (f *Framework) CreateServiceForSimpleApp(contPort, svcPort int, appName string) *api.Service {\n\tif appName == \"\" {\n\t\tpanic(fmt.Sprintf(\"no app name provided\"))\n\t}\n"
  }
]