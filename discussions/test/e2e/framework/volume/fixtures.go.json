[
  {
    "id" : "7a713d41-3973-4ad6-a78b-b82183f06782",
    "prId" : 96573,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96573#pullrequestreview-530429800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "240659f3-3eef-482d-8361-d00ea1ddf059",
        "parentId" : null,
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "@chrishenzie Replying to your concern on this function:\r\nThere are two possible location I think this function could lie in other than this:\r\n1. test/e2e/storage/utils/pod.go\r\nThe problem with that is this function is being used by \"VerifyExecInPodSucceed\" and \"VerifyExecInPodFail\" which are used by \"CheckVolumeModeOfPath\".\r\nAnd this \"CheckVolumeModeOfPath\" is used by e2evolume. So ideally we dont want to put them under storage utils because that will have a situation where parent package import subpackage. This against our principle.\r\n\r\n2. test/e2e/framework/pod\r\nThis is a better place for sure. However, currently there is a dependency issue #81245 which prevent us from putting it there. So I add a comment to this. Once that is fixed we can move it over.\r\n\r\n",
        "createdAt" : "2020-11-13T21:33:39Z",
        "updatedAt" : "2020-12-11T06:54:06Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "356bea6c9fe93b45f8c6e4391a6a98ec35e34ea6",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +720,724 @@// PodExec runs f.ExecCommandInContainerWithFullOutput to execute a shell cmd in target pod\n// TODO: put this under e2epod once https://github.com/kubernetes/kubernetes/issues/81245\n// is resolved. Otherwise there will be dependency issue.\nfunc PodExec(f *framework.Framework, pod *v1.Pod, shExec string) (string, string, error) {\n\tif framework.NodeOSDistroIs(\"windows\") {"
  },
  {
    "id" : "3816a7fa-6084-4ee2-a463-0970111783c3",
    "prId" : 96573,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96573#pullrequestreview-533955309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8501357a-5179-4621-9749-963a55dc6469",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "any other tests using this besides storage? ",
        "createdAt" : "2020-11-18T16:39:32Z",
        "updatedAt" : "2020-12-11T06:54:06Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "e0e720d9-81e7-4290-b23c-95d8390414d4",
        "parentId" : "8501357a-5179-4621-9749-963a55dc6469",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Yep, CheckVolumeModeOfPath is used by testVolumeContent in e2evolume and testVolumeContent is used by TestVolumeClient(), TestVolumeClient is used by e2e/common\r\n\r\nhttps://github.com/kubernetes/kubernetes/search?q=TestVolumeClient\r\n\r\nHmm, maybe I can move everything related to it down and clear the dependency for everything uses TestVolumeClient. I will create a commit for that change to see if that makes the dependency look better",
        "createdAt" : "2020-11-18T18:19:13Z",
        "updatedAt" : "2020-12-11T06:54:06Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "cc898be0-9efb-4fb0-96f4-366ee1a1bf62",
        "parentId" : "8501357a-5179-4621-9749-963a55dc6469",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Just tried... It is too much change, almost move everything in e2evolume to storageutils.\r\nThe code has reference almost in all the function in e2evolume. I think let's make the dependency change in the next PR. And focus this PR on just restructure the testsuite. The utils definitely need some effort to clean up.",
        "createdAt" : "2020-11-18T18:51:33Z",
        "updatedAt" : "2020-12-11T06:54:06Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "59b6b359-999c-4fcf-8b29-daa30ff21bb0",
        "parentId" : "8501357a-5179-4621-9749-963a55dc6469",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "thanks, then I am ok with this PR.",
        "createdAt" : "2020-11-18T23:08:47Z",
        "updatedAt" : "2020-12-11T06:54:06Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "356bea6c9fe93b45f8c6e4391a6a98ec35e34ea6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +702,706 @@\n// CheckVolumeModeOfPath check mode of volume\nfunc CheckVolumeModeOfPath(f *framework.Framework, pod *v1.Pod, volMode v1.PersistentVolumeMode, path string) {\n\tif volMode == v1.PersistentVolumeBlock {\n\t\t// Check if block exists"
  },
  {
    "id" : "79ac4dde-525d-4dbf-ae26-257c3eabba1b",
    "prId" : 90689,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90689#pullrequestreview-406702233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22f2a6d0-2632-4fdf-80e5-168d33b57fd6",
        "parentId" : null,
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Is this format exclusive to NFS or should this be performed inside CreateStorageServer()?",
        "createdAt" : "2020-05-04T15:30:23Z",
        "updatedAt" : "2020-05-04T15:30:24Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "7f5c9edf-92df-4eb3-a70a-76a5ba8f8597",
        "parentId" : "22f2a6d0-2632-4fdf-80e5-168d33b57fd6",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "generally, when you have to pass a host:port, the IPv6 is enclosed with square brackets because it contains `:`.\r\nIt is possible that if all other storage servers use the host:port format will need the square brackets, let me check this",
        "createdAt" : "2020-05-04T20:19:52Z",
        "updatedAt" : "2020-05-04T20:19:52Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "05169b9c-2af4-4f13-a044-dbdbbe09e17e",
        "parentId" : "22f2a6d0-2632-4fdf-80e5-168d33b57fd6",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I'm not feeling confident generalizing, mainly because there is no testing with IPv6 for the other backends.\r\nWe are going to test NFS with IPv6 with KIND, and that's why we found this issue.\r\nI suggest to do the changes per provider, so we can be sure we are not breaking anything.",
        "createdAt" : "2020-05-06T14:38:14Z",
        "updatedAt" : "2020-05-06T14:38:14Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "49b6dd64-682e-408a-a4ad-c4650b3f7ffb",
        "parentId" : "22f2a6d0-2632-4fdf-80e5-168d33b57fd6",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Fair enough.  I figured it was worth asking just to be sure.",
        "createdAt" : "2020-05-06T15:00:29Z",
        "updatedAt" : "2020-05-06T15:00:29Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      }
    ],
    "commit" : "26a00f9032e2cb2412b76ebf4224753178c131a3",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +159,163 @@\tpod, host = CreateStorageServer(cs, config)\n\tif strings.Contains(host, \":\") {\n\t\thost = \"[\" + host + \"]\"\n\t}\n\treturn config, pod, host"
  },
  {
    "id" : "835c7133-8d2e-471e-b4b3-1f677d44d829",
    "prId" : 88801,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88801#pullrequestreview-369420786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d7969b9-18fe-45df-ab4c-e4db1800f4f4",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Could you add some comments about when to set slow to true or false?",
        "createdAt" : "2020-03-05T00:38:12Z",
        "updatedAt" : "2020-03-05T09:40:05Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "1bf043f3-c544-4337-aa86-0e7c64ea7e07",
        "parentId" : "5d7969b9-18fe-45df-ab4c-e4db1800f4f4",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Added extensive docs to `TestVolumeClient` / `TestVolumeClientSlow`. I don't think it's necessary to document internal `testVolumeClient`.",
        "createdAt" : "2020-03-05T09:42:06Z",
        "updatedAt" : "2020-03-05T09:42:06Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "98b9c7b5e8f9c44a5b14a70fb7a641c0c39bfa98",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +494,498 @@\nfunc testVolumeClient(f *framework.Framework, config TestConfig, fsGroup *int64, fsType string, tests []Test, slow bool) {\n\tclientPod, err := runVolumeTesterPod(f.ClientSet, config, \"client\", false, fsGroup, tests, slow)\n\tif err != nil {\n\t\tframework.Failf(\"Failed to create client pod: %v\", err)"
  },
  {
    "id" : "1e2df59e-0add-4ffc-9b90-58aafa1e379c",
    "prId" : 88016,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88016#pullrequestreview-358062805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fe3c403-8177-40d8-9f97-407d08bf119b",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "looks like some callers already do some sort of cleanup (and some dont): \r\nhttps://github.com/kubernetes/kubernetes/blob/574acbe31025bd7a298eae5dc72b0256a7a9b11a/test/e2e/storage/flexvolume.go#L68\r\n\r\nLooks like these cleanups are overlapping. Could you  remove the redundant ones? ",
        "createdAt" : "2020-02-11T19:14:39Z",
        "updatedAt" : "2020-02-13T09:24:17Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "fa6aa8c2-b502-4842-aafc-790fc7c2b499",
        "parentId" : "7fe3c403-8177-40d8-9f97-407d08bf119b",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Removed client cleanup from TestCleanup. Therefore I renamed it to TestServerCleanup. And  removed several calls to TestCleanup from tests that don't use a server.",
        "createdAt" : "2020-02-13T09:24:35Z",
        "updatedAt" : "2020-02-13T09:24:36Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "528adbefe4daf3a10629fcffa3f085c9d4952af7",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +484,488 @@\t\tframework.Failf(\"Failed to create client pod: %v\", err)\n\t}\n\tdefer func() {\n\t\te2epod.DeletePodOrFail(f.ClientSet, clientPod.Namespace, clientPod.Name)\n\t\te2epod.WaitForPodToDisappear(f.ClientSet, clientPod.Namespace, clientPod.Name, labels.Everything(), framework.Poll, framework.PodDeleteTimeout)"
  },
  {
    "id" : "8fe6c986-0b5f-4cf7-8c6c-54e283c85fe6",
    "prId" : 83727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83727#pullrequestreview-309732930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Does mean for block volume, we cannot set SELinux enabled? ",
        "createdAt" : "2019-10-16T17:24:40Z",
        "updatedAt" : "2019-10-25T07:32:35Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "1117129e-f352-4bc6-b027-eb1b27245f9b",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Actually, for block volume, we cannot make the *container* privileged. Specially if the container runtime is docker (due to the bug below).",
        "createdAt" : "2019-10-25T07:09:04Z",
        "updatedAt" : "2019-10-25T07:33:47Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "7278a203-065f-4706-a7a2-f7e28ed45bd8",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "To clarify, it shouldn't be a problem to run the test with a *unprivileged* container for block volumes. \r\n\r\nThe reason we make it *privileged* for FS volumes is that the test writes data to the host's */tmp* directory, which is not the case for block volumes.",
        "createdAt" : "2019-10-25T07:37:13Z",
        "updatedAt" : "2019-10-25T07:37:14Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "a0d80f6e-b143-4ee1-8f7c-7091b60ff69f",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is there another directory we can safely write to that does not require privileged?",
        "createdAt" : "2019-10-25T15:27:27Z",
        "updatedAt" : "2019-10-25T15:27:27Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6169d65d-7799-4e7e-8247-180049cb3635",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "> Is there another directory we can safely write to that does not require privileged?\r\n\r\nNot that I'm aware of. \r\n\r\nBy default, containers can only RW to files/directories labeled `svirt_sandbox_file_t`. So if a process breaks out of the container, it won't be able to change the host FS.\r\n\r\nWe *could* add the label above to a pre-defined directory, say */tmp/k8s-e2e*, and change the test to read/write data there, rather than the default */tmp*. See my comment https://github.com/kubernetes/kubernetes/pull/83727#discussion_r334856930. I've tried this and it worked.\r\n\r\n",
        "createdAt" : "2019-10-29T08:59:26Z",
        "updatedAt" : "2019-10-29T08:59:26Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "0af9b70a-b4c4-4dd8-9183-64c20ba2277d",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "The downside of the approach above is that we need to change the test bootstrap to do `chcon -R -t svirt_sandbox_file_t /tmp/k8s-e2e` in the host before running the test.\r\n\r\nI don't know if we are able to do that, however, this is IMO the right approach to solve our SELinux issues in e2e tests.",
        "createdAt" : "2019-10-29T09:06:26Z",
        "updatedAt" : "2019-10-29T09:06:26Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "bea52579-a12a-4dc1-9277-7a4580ee381d",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I would prefer we look into this approach of prepping a special test directory first if the environment uses SELinux. That way we can remove the privileged setting on many tests (and maybe be able to add them to the conformance suite).  But this is sufficient for now.",
        "createdAt" : "2019-10-31T00:15:21Z",
        "updatedAt" : "2019-10-31T00:15:36Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "94077f3b-7e6f-4fa0-8a5a-6573fc93f84d",
        "parentId" : "88c37a4a-b72a-4a99-8ad9-12fc3a4686fe",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Just to clarify: we can remove the privileged setting if we prep a special test directory on SELinux environments. All containers would run as *unprivileged*.\r\n\r\nFYI, I created the issue https://github.com/kubernetes/kubernetes/issues/84585 to track this.",
        "createdAt" : "2019-10-31T09:14:24Z",
        "updatedAt" : "2019-10-31T09:14:24Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e72c707727ab99f2bf18cd8efafae2b17c773ae",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +493,497 @@\t\t// host,  so the test can write data to a location like /tmp. Also, due to\n\t\t// the Docker bug below, it's not currently possible to map a device with\n\t\t// a privileged container, so we don't go privileged for block volumes.\n\t\t// https://github.com/moby/moby/issues/35991\n\t\tif privileged && test.Mode == v1.PersistentVolumeBlock {"
  },
  {
    "id" : "d04943aa-67ae-4ca9-8c09-045086764cec",
    "prId" : 80998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80998#pullrequestreview-277340085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dadc745-68df-4f32-afe3-820b01c3a942",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "ditto",
        "createdAt" : "2019-08-20T17:57:43Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c161d6a5ff000de2147a33fd62225f398d76ae2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +52,56 @@\tclientset \"k8s.io/client-go/kubernetes\"\n\t\"k8s.io/kubernetes/test/e2e/framework\"\n\te2elog \"k8s.io/kubernetes/test/e2e/framework/log\"\n\te2epod \"k8s.io/kubernetes/test/e2e/framework/pod\"\n\t\"k8s.io/kubernetes/test/e2e/storage/utils\""
  },
  {
    "id" : "a2092e7c-bb61-4e64-9069-8039a6a57726",
    "prId" : 79730,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79730#pullrequestreview-257924909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cd8fe31-2e2b-44e0-b0dc-e493ed7e5f52",
        "parentId" : null,
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "I've also introduced similar way to consolidate read/write tests for block and filesystem [here](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/utils/utils.go#L519)\r\n(This wasn't consider windows, though). \r\n\r\nWe might be able to also consolidate it, later. I started to think that actual data doesn't necessary be binary data, as I check your code. \r\n\r\n",
        "createdAt" : "2019-07-03T19:49:04Z",
        "updatedAt" : "2019-07-10T13:32:46Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "8997aad3-a998-40a8-8dec-7e7f00358184",
        "parentId" : "3cd8fe31-2e2b-44e0-b0dc-e493ed7e5f52",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Yes, I saw your `sha256sum` usage, but I decided not to use it as I would need to sum the data in the injector pod and parse it from pod output to be able to check it in the reader pod later. `echo` works well here (not sure how well it will work on Windows).",
        "createdAt" : "2019-07-04T09:13:37Z",
        "updatedAt" : "2019-07-10T13:32:46Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9e838f2e9823947bb9a5b7c5fccd9b359b4a799",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +574,578 @@\tfor i, test := range tests {\n\t\tcommands := []string{\"exec\", injectorPod.Name, fmt.Sprintf(\"--namespace=%v\", injectorPod.Namespace), \"--\"}\n\t\tif test.Mode == v1.PersistentVolumeBlock {\n\t\t\t// Block: write content\n\t\t\tdeviceName := fmt.Sprintf(\"/opt/%d\", i)"
  },
  {
    "id" : "40f5fede-7c99-4983-9f93-b14a2d610e20",
    "prId" : 78306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78306#pullrequestreview-266368160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed3cf31d-7036-4335-b014-ae743f04a633",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Can you add a comment saying that both values are optional and that which global default is used if unset?\r\n",
        "createdAt" : "2019-07-16T14:49:36Z",
        "updatedAt" : "2019-10-07T17:34:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "c8909d3c-3865-41ec-824b-799b2f3bf745",
        "parentId" : "ed3cf31d-7036-4335-b014-ae743f04a633",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "+1 with @pohly ",
        "createdAt" : "2019-07-25T02:04:56Z",
        "updatedAt" : "2019-10-07T17:34:11Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5c14323286d26490f8c12884fb1d7f36e2d9eeb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +105,109 @@\t// which is defined in test/e2e/storage/testsuites/base.go\n\tMin string\n}\n\n// TestConfig is a struct for configuration of one tests. The test consist of:"
  }
]