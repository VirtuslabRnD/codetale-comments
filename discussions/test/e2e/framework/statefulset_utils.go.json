[
  {
    "id" : "eb5b360a-302d-4626-bed3-38ab8ffc590c",
    "prId" : 47693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47693#pullrequestreview-44721478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aff170b-de39-4555-ac8c-c04a3f693ec4",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "for completenes i think you should verify both the partitions, replicas---partition are at UpdateRevision and partion-1 ---0 at CurrentRevision",
        "createdAt" : "2017-06-18T08:56:31Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "db20e68b-967e-4b3d-8b15-d8bf7894d512",
        "parentId" : "9aff170b-de39-4555-ac8c-c04a3f693ec4",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "This is used as a waiting criteria. The expectations are expressed and verified in test specs in statefulset.go.",
        "createdAt" : "2017-06-18T13:33:52Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "b898cf81a50d7b8db53373bafa9a1a0377c0e394",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +480,484 @@\t\t\t\t\t\tpods.Items[i].Labels[apps.StatefulSetRevisionLabel])\n\t\t\t\t\treturn false, nil\n\t\t\t\t}\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "c7f4544a-fd69-4d34-8dfb-4755808f6e94",
    "prId" : 47693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47693#pullrequestreview-44721497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3ecbec7-2bde-4b3f-9445-8da8c32afa48",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "nit: getStatefulSetPodOrdinal",
        "createdAt" : "2017-06-18T08:58:14Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "bef72e43-c1c9-41ba-b212-4fd6a5bb8d7b",
        "parentId" : "a3ecbec7-2bde-4b3f-9445-8da8c32afa48",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "The package makes use of the term `StatefulPod` extensively. This naming is consistent.",
        "createdAt" : "2017-06-18T13:34:54Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "b898cf81a50d7b8db53373bafa9a1a0377c0e394",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +800,804 @@var statefulPodRegex = regexp.MustCompile(\"(.*)-([0-9]+)$\")\n\nfunc getStatefulPodOrdinal(pod *v1.Pod) int {\n\tordinal := -1\n\tsubMatches := statefulPodRegex.FindStringSubmatch(pod.Name)"
  },
  {
    "id" : "1b63aa66-eb3a-4403-90d0-6bb8cb90fe3d",
    "prId" : 47693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47693#pullrequestreview-44877832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f9690d2-4c05-4c4f-92f4-54cbd49a2a4e",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "it seems we could combine WaitForPodNotReady and WaitForPodReady with a single function WaitForPod(, ...podShouldBeReady bool, ...)",
        "createdAt" : "2017-06-19T06:29:11Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "12ca251e-fd03-4597-8401-d9ece9f5c5a0",
        "parentId" : "8f9690d2-4c05-4c4f-92f4-54cbd49a2a4e",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "As we are using specification based testing I prefer the clarity of separate method calls, and separate methods are used for similar functions throughout the test spec. I see no reason to break with consistency.",
        "createdAt" : "2017-06-19T14:16:22Z",
        "updatedAt" : "2017-06-19T14:16:22Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      },
      {
        "id" : "eecb08fb-b88b-4763-9acd-e811763eff78",
        "parentId" : "8f9690d2-4c05-4c4f-92f4-54cbd49a2a4e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, this is how we do this in the rest of the code base.",
        "createdAt" : "2017-06-19T15:12:17Z",
        "updatedAt" : "2017-06-19T15:12:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b898cf81a50d7b8db53373bafa9a1a0377c0e394",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +377,381 @@\n// WaitForPodNotReady waist for the Pod named podName in set to exist and to not have a Ready condition.\nfunc (s *StatefulSetTester) WaitForPodNotReady(set *apps.StatefulSet, podName string) (*apps.StatefulSet, *v1.PodList) {\n\tvar pods *v1.PodList\n\ts.WaitForState(set, func(set2 *apps.StatefulSet, pods2 *v1.PodList) (bool, error) {"
  },
  {
    "id" : "f66725da-de65-4029-bce5-0731e15bc719",
    "prId" : 47693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47693#pullrequestreview-44852982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "601d21e0-7b14-4cbe-91c9-db28790a05db",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "do we need this check in the partitioned case `WaitForPartitionedRollingUpdate` ?",
        "createdAt" : "2017-06-19T07:12:15Z",
        "updatedAt" : "2017-06-19T13:54:15Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "3e95f407-6300-4385-9ca3-6794dd3b1ddc",
        "parentId" : "601d21e0-7b14-4cbe-91c9-db28790a05db",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "Yes because you don't want to evaluate the other conditions while a Pod is down",
        "createdAt" : "2017-06-19T13:56:51Z",
        "updatedAt" : "2017-06-19T14:16:45Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "b898cf81a50d7b8db53373bafa9a1a0377c0e394",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +406,410 @@\t\tset = set2\n\t\tpods = pods2\n\t\tif len(pods.Items) < int(*set.Spec.Replicas) {\n\t\t\treturn false, nil\n\t\t}"
  },
  {
    "id" : "cb8340ac-7296-4121-bef6-340b8a5ff45d",
    "prId" : 42367,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42367#pullrequestreview-24934967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7da2dfec-52bc-4a13-8c7a-7e848946d9ff",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Update this to also check that ss.Status.ObservedGeneration >= ss.Generation.",
        "createdAt" : "2017-03-02T10:16:46Z",
        "updatedAt" : "2017-03-03T19:25:47Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "77fc6402-8405-4617-85df-86b0c45a3579",
        "parentId" : "7da2dfec-52bc-4a13-8c7a-7e848946d9ff",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I just realized that observedGeneration is not working for StatefulSets and sent a PR: https://github.com/kubernetes/kubernetes/pull/42429",
        "createdAt" : "2017-03-02T18:26:59Z",
        "updatedAt" : "2017-03-03T19:25:47Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "a62ac66e-301d-425b-930c-df65d25adca3",
        "parentId" : "7da2dfec-52bc-4a13-8c7a-7e848946d9ff",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "@kargakis Using this code \r\n```golang\r\nif ss.Status.ObservedGeneration == nil { \r\n        Logf(\"ss observed generation is nil\")\r\n} else {\r\n        Logf(\"ss observed generation %d\",ss.Status.ObservedGeneration)\r\n}\r\nLogf(\"ss generation %d\",ss.Generation)\r\nif ssGet.Status.ObservedGeneration == nil {\r\n        Logf(\"ssGet observed generation is nil\")\r\n} else {\r\n        Logf(\"ssGet observed generation %d\",ssGet.Status.ObservedGeneration)\r\n}\r\nLogf(\"ssGet generation %d\",ssGet.Generation)\r\n```\r\nThe observed generation of both ss and ssGet are always nil. However the generation appears to increment consistently.\r\n\r\nwhat about the following\r\n```golang\r\nif  ssGet.Generation < ss.Generation {\r\n     return false, nil\r\n}\r\n```\r\n",
        "createdAt" : "2017-03-02T20:34:01Z",
        "updatedAt" : "2017-03-03T19:25:47Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      },
      {
        "id" : "3f49bf47-baa3-4785-8a60-67886628749a",
        "parentId" : "7da2dfec-52bc-4a13-8c7a-7e848946d9ff",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "@kargakis just saw the above do you want to wait until  #42429 merges before submitting this?",
        "createdAt" : "2017-03-02T21:11:47Z",
        "updatedAt" : "2017-03-03T19:25:47Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      },
      {
        "id" : "298f0938-75b8-4ac2-ad24-8ec2dedcf497",
        "parentId" : "7da2dfec-52bc-4a13-8c7a-7e848946d9ff",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Yes, I just tagged it with a manual approval since the hack changes were minimal and it should be merged when you get back online:) Once you update this helper with the new check feel free to apply lgtm",
        "createdAt" : "2017-03-03T09:37:20Z",
        "updatedAt" : "2017-03-03T19:25:47Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "08f95aff0f81139ba9ddd7f37961a6e479ef6fe2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +357,361 @@\n// WaitForStatus waits for the ss.Status.Replicas to be equal to expectedReplicas\nfunc (s *StatefulSetTester) WaitForStatus(ss *apps.StatefulSet, expectedReplicas int32) {\n\tLogf(\"Waiting for statefulset status.replicas updated to %d\", expectedReplicas)\n"
  }
]