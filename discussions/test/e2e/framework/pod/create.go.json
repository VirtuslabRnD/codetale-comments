[
  {
    "id" : "3760813c-0e26-48cc-b776-28841622b5e0",
    "prId" : 101806,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101806#pullrequestreview-654753577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "parentId" : null,
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "`runtime.GOOS != \"windows\"` will always be true because we never run the e2e binary in a windows node",
        "createdAt" : "2021-05-07T18:03:44Z",
        "updatedAt" : "2021-05-07T18:03:44Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      },
      {
        "id" : "2549236a-1cad-4c9b-b5f4-8a866100ffed",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "y, so here it fixed it, right?",
        "createdAt" : "2021-05-07T18:08:22Z",
        "updatedAt" : "2021-05-07T18:08:22Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "d7eaa1c5-7cee-4573-b70c-b5b09d7502ef",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "if it's always true then:\r\n\r\n```\r\nif podConfig.FsGroup == nil && runtime.GOOS != \"windows\" {\r\n```\r\n\r\nwould be equal to\r\n\r\n```\r\nif podConfig.FsGroup == nil {\r\n```",
        "createdAt" : "2021-05-07T18:14:14Z",
        "updatedAt" : "2021-05-07T18:14:14Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      },
      {
        "id" : "257b8f99-f6a6-4a19-979f-951ce3c7cd54",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "does \r\n\r\n```\r\n\t\tpodConfig.FsGroup = func(i int64) *int64 {\r\n\t\t\treturn &i\r\n\t\t}(1000)\r\n```\r\n\r\nwork on linux only?",
        "createdAt" : "2021-05-07T18:17:32Z",
        "updatedAt" : "2021-05-07T18:17:33Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      },
      {
        "id" : "c97ec854-66fd-4add-96ef-de32d2a070ac",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "> if it's always true then:\r\n> \r\n> ```\r\n> if podConfig.FsGroup == nil && runtime.GOOS != \"windows\" {\r\n> ```\r\n> \r\n> would be equal to\r\n> \r\n> ```\r\n> if podConfig.FsGroup == nil {\r\n> ```\r\n\r\nBut here we use NodeOSDistroIs instead runtime.GOOS?\r\n",
        "createdAt" : "2021-05-07T18:23:14Z",
        "updatedAt" : "2021-05-07T18:23:14Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "ba03d4fa-af48-4f5e-9cf5-86ad43da4910",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "fsgroup is not applicable for Windows",
        "createdAt" : "2021-05-07T18:23:43Z",
        "updatedAt" : "2021-05-07T18:23:43Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "f97a5244-5727-4906-b983-35a4b6d0e989",
        "parentId" : "81ef136f-1bb5-4c3e-9167-be3bdeb63c4a",
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "I understand now, thanks!",
        "createdAt" : "2021-05-07T18:29:33Z",
        "updatedAt" : "2021-05-07T18:29:33Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5a3ce85a8d2ec6f23587ceecaf9c38dfe66382",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +172,176 @@\n\tpodName := \"pod-\" + string(uuid.NewUUID())\n\tif podConfig.FsGroup == nil && !NodeOSDistroIs(\"windows\") {\n\t\tpodConfig.FsGroup = func(i int64) *int64 {\n\t\t\treturn &i"
  },
  {
    "id" : "478296b2-6073-4cee-ad1f-3f89da429941",
    "prId" : 101806,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101806#pullrequestreview-654810220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8210026f-f404-4996-b601-09fc6c1c140a",
        "parentId" : null,
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "with this other change:\r\n\r\n```\r\n\tvar commands []string\r\n\tif command == \"\" {\r\n\t\treturn commands\r\n\t}\r\n```\r\n\r\nis the pod still running in an endless loop?",
        "createdAt" : "2021-05-07T18:30:42Z",
        "updatedAt" : "2021-05-07T18:30:55Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      },
      {
        "id" : "5a3494ff-9670-4cbf-8786-2ec6be961d68",
        "parentId" : "8210026f-f404-4996-b601-09fc6c1c140a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I think so, without running any commands, agnhost container will keep running.",
        "createdAt" : "2021-05-07T19:01:18Z",
        "updatedAt" : "2021-05-07T19:01:18Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "c1399c49-ab20-42e8-9e14-bdb8e7ab7a56",
        "parentId" : "8210026f-f404-4996-b601-09fc6c1c140a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I also feel for most cases including linux, this command set up is not necessary. The test container most already does it.",
        "createdAt" : "2021-05-07T19:02:19Z",
        "updatedAt" : "2021-05-07T19:02:19Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "0c47bccc-e21e-4481-b379-4931f38be8a2",
        "parentId" : "8210026f-f404-4996-b601-09fc6c1c140a",
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "got it, thanks for sharing this, there was another place in the tests where we I saw sleep, I'm going to change that later",
        "createdAt" : "2021-05-07T19:37:04Z",
        "updatedAt" : "2021-05-07T19:37:05Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5a3ce85a8d2ec6f23587ceecaf9c38dfe66382",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +168,172 @@\t}\n\tif len(podConfig.Command) == 0 && !NodeOSDistroIs(\"windows\") {\n\t\tpodConfig.Command = \"trap exit TERM; while true; do sleep 1; done\"\n\t}\n"
  },
  {
    "id" : "073033af-5739-4a58-bb13-69d7d1b48d10",
    "prId" : 99888,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99888#pullrequestreview-615631604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a630a027-02d5-4619-ad64-257dd5958704",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "this part should be removed, I think. SecurityContext is already correctly configured in line 216.\r\nAlso we should avoid using runtime.GOOS.",
        "createdAt" : "2021-03-18T08:20:44Z",
        "updatedAt" : "2021-03-18T08:20:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "6e70acaf-d71c-45f6-b897-5b6bdcc38319",
        "parentId" : "a630a027-02d5-4619-ad64-257dd5958704",
        "authorId" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "body" : "sounds good, I'll add it to https://github.com/kubernetes/kubernetes/pull/100356",
        "createdAt" : "2021-03-18T16:42:22Z",
        "updatedAt" : "2021-03-18T16:42:23Z",
        "lastEditedBy" : "87fae8a2-4751-4356-ba8a-ce265708b853",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d9053014e0e8edf655d7bac774fa4eb9fb83950",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +251,255 @@\tpodSpec.Volumes = volumes\n\tif runtime.GOOS != \"windows\" {\n\t\tpodSpec.SecurityContext.SELinuxOptions = podConfig.SeLinuxLabel\n\t}\n"
  },
  {
    "id" : "99c44a98-c563-4d30-9f29-90ac7db9c75c",
    "prId" : 99154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99154#pullrequestreview-640861138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9c31b85-82f0-4239-8009-6f22aa5e29b7",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "`MakePodSec` was setting block and inline volumes correctly, so instead of copying the code to `MakePod`, I moved it to a separate function (`setVolumes`) that can be called from `MakePod` and `MakePodSec`.",
        "createdAt" : "2021-04-21T09:42:08Z",
        "updatedAt" : "2021-04-21T09:42:08Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a645592fc40fcddaec41a4628be7cf019a8feb4",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +221,225 @@}\n\nfunc setVolumes(podSpec *v1.PodSpec, pvcs []*v1.PersistentVolumeClaim, inlineVolumeSources []*v1.VolumeSource, pvcsReadOnly bool) {\n\tvar volumeMounts = make([]v1.VolumeMount, 0)\n\tvar volumeDevices = make([]v1.VolumeDevice, 0)"
  },
  {
    "id" : "4da9565d-03a3-4843-8ab2-284bd1034aed",
    "prId" : 83816,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83816#pullrequestreview-300982723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cedcf2d2-7c25-4249-9c86-210490caaad2",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Cleaning up files is a good thing but I think it would be better to organize functions in a way that makes them easier to discover. I.e., functions that create pods in create.go, functions that test for conditions in test*.go, etc.\r\n\r\nAT this moment we may only have the one file for testing/verifying but more things may find a home there later on.\r\n/hold\r\n",
        "createdAt" : "2019-10-12T03:03:19Z",
        "updatedAt" : "2019-10-12T03:03:41Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "53584068-e8f6-4e5e-84e5-4f0a021a499a",
        "parentId" : "cedcf2d2-7c25-4249-9c86-210490caaad2",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Additional comments  https://github.com/kubernetes/kubernetes/pull/83814#discussion_r334217997",
        "createdAt" : "2019-10-12T03:20:45Z",
        "updatedAt" : "2019-10-12T03:20:46Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab208e9063a0ff3895ed2ef61492dcbcbe69e887",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +67,71 @@\treturn nil\n}\n\n// CreateUnschedulablePod with given claims based on node selector\nfunc CreateUnschedulablePod(client clientset.Interface, namespace string, nodeSelector map[string]string, pvclaims []*v1.PersistentVolumeClaim, isPrivileged bool, command string) (*v1.Pod, error) {"
  },
  {
    "id" : "e2a7d98b-d17e-4a5c-9366-5c6cdbde1d99",
    "prId" : 80998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80998#pullrequestreview-278716142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e703e714-db29-486f-afc6-854b888163ca",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Could you update to use `framework.Logf()` instead of `e2elog.Logf()` because of https://github.com/kubernetes/kubernetes/issues/81427 ?",
        "createdAt" : "2019-08-20T17:57:01Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "353f44a8-e601-4cf2-99cb-7b47336d2534",
        "parentId" : "e703e714-db29-486f-afc6-854b888163ca",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "ping @timothysc @andrewsykim for consensus.\r\nJust want to double check on this. I didn't hear/see about the decision to move the functionality from e2elog back to the framework",
        "createdAt" : "2019-08-20T18:02:08Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "fa439c49-40db-4f68-a644-de560f659caa",
        "parentId" : "e703e714-db29-486f-afc6-854b888163ca",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Looking at the conversation from https://kubernetes.slack.com/archives/C9NK9KFFW/p1565813776113500?thread_ts=1565737650.112200&cid=C9NK9KFFW\r\nit seems like the `framework.Logf()` was suggested as an option in the case of dependency problems (?)",
        "createdAt" : "2019-08-20T18:05:17Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "96110021-9781-4d74-9f4a-8de4986c773b",
        "parentId" : "e703e714-db29-486f-afc6-854b888163ca",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "@oomichi coming back to https://github.com/kubernetes/kubernetes/issues/81427 (using `framework.logF()` for tests `e2elog.LogF` for framework subpkgs.\r\nTaking care of this type of PR is messy - a lot of rebasing as we touch a ton of files during refactorings. What do you think about getting this one through the door and putting me down for a cleanup of the `framework/pod` pakcage as a follow up?",
        "createdAt" : "2019-08-22T18:25:19Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "4e7364b6-fcd6-4724-be35-3eb68a399c17",
        "parentId" : "e703e714-db29-486f-afc6-854b888163ca",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "No problem if we can follow up it later with another PR.\r\nI just wanted to let you know that at the first time :-)",
        "createdAt" : "2019-08-22T21:23:29Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "8c26680e-b83f-4fc6-90cf-c6f9cd60a785",
        "parentId" : "e703e714-db29-486f-afc6-854b888163ca",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "I didn't think you were going to be so fast at replying @oomichi  :sweat_smile: \r\ncould you take a look again, please\r\n\r\nAnd will definitely follow up with the required changes for logging. ",
        "createdAt" : "2019-08-22T22:19:43Z",
        "updatedAt" : "2019-08-27T16:28:18Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c161d6a5ff000de2147a33fd62225f398d76ae2",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"k8s.io/apimachinery/pkg/util/uuid\"\n\tclientset \"k8s.io/client-go/kubernetes\"\n\te2elog \"k8s.io/kubernetes/test/e2e/framework/log\"\n\timageutils \"k8s.io/kubernetes/test/utils/image\"\n)"
  }
]