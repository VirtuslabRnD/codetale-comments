[
  {
    "id" : "bd97b069-e7d9-4737-ad25-ec475e703c51",
    "prId" : 101612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101612#pullrequestreview-662971833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "246504b9-3546-4736-8fb9-415b7993dfde",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "You can return `(pods []v1.Pod, err error)`.",
        "createdAt" : "2021-05-18T17:16:00Z",
        "updatedAt" : "2021-05-18T17:24:54Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "d3e033ea-c697-44d6-9b01-961c1e11f083",
        "parentId" : "246504b9-3546-4736-8fb9-415b7993dfde",
        "authorId" : "737e6f8b-a6c5-423b-bc22-03f745750689",
        "body" : "Yes, thought about this option. But I have decided to follow same style like in other function signatures at this package. There are three functions `WaitForPodsWithLabelScheduled`, `WaitForPodsWithLabel`, `WaitForPodsWithLabelRunningReady` witch returns (pods *v1.PodList, err error).",
        "createdAt" : "2021-05-19T09:31:39Z",
        "updatedAt" : "2021-05-19T09:31:39Z",
        "lastEditedBy" : "737e6f8b-a6c5-423b-bc22-03f745750689",
        "tags" : [
        ]
      }
    ],
    "commit" : "351f4e9c9c838e4a2f1d346afd11f3629305046d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +439,443 @@// `num` pods in namespace `ns`.\n// It returns the matching Pods or a timeout error.\nfunc WaitForNumberOfPods(c clientset.Interface, ns string, num int, timeout time.Duration) (pods *v1.PodList, err error) {\n\terr = wait.PollImmediate(poll, timeout, func() (bool, error) {\n\t\tpods, err = c.CoreV1().Pods(ns).List(context.TODO(), metav1.ListOptions{})"
  },
  {
    "id" : "c5b5fd8d-b690-4ae2-8a10-2893c096d306",
    "prId" : 101612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101612#pullrequestreview-662367250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4934b1d-34b8-4054-aa0f-2972f440a9dc",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Better add the comment back:\r\n\r\n```\r\n// ignore intermittent network error\r\n```",
        "createdAt" : "2021-05-18T17:17:35Z",
        "updatedAt" : "2021-05-18T17:24:54Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "351f4e9c9c838e4a2f1d346afd11f3629305046d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +443,447 @@\t\tpods, err = c.CoreV1().Pods(ns).List(context.TODO(), metav1.ListOptions{})\n\t\t// ignore intermittent network error\n\t\tif err != nil {\n\t\t\treturn false, nil\n\t\t}"
  },
  {
    "id" : "e67a436f-5602-4163-95cb-204521d3cbbe",
    "prId" : 89568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89568#pullrequestreview-383008350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eee8e5a8-28bf-4d86-b317-98b63f0cc42e",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "The original of here is like\r\n```\r\n 30 // Pod returns a string representing a pod in a consistent human readable format,\r\n 31 // with pod UID as part of the string.\r\n 32 func Pod(pod *v1.Pod) string {\r\n 33         return PodDesc(pod.Name, pod.Namespace, pod.UID)\r\n 34 }\r\n 35\r\n 36 // PodDesc returns a string representing a pod in a consistent human readable format,\r\n 37 // with pod UID as part of the string.\r\n 38 func PodDesc(podName, podNamespace string, podUID types.UID) string {\r\n 39         // Use underscore as the delimiter because it is not allowed in pod name\r\n 40         // (DNS subdomain format), while allowed in the container name format.\r\n 41         return fmt.Sprintf(\"%s_%s(%s)\", podName, podNamespace, podUID)\r\n 42 }\r\n```\r\n/lgtm",
        "createdAt" : "2020-03-27T16:20:36Z",
        "updatedAt" : "2020-03-27T16:20:36Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "b748c702d995dc4c26dfc1a12fb4beb5d8de91ae",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +302,306 @@\t\t\t}\n\t\t\tif !done {\n\t\t\t\tconditionNotMatch = append(conditionNotMatch, fmt.Sprintf(\"%s_%s(%s)\", pod.Name, pod.Namespace, pod.UID))\n\t\t\t}\n\t\t}"
  }
]