[
  {
    "id" : "e1661c71-3ffd-4207-be45-150c3dd5223f",
    "prId" : 60104,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60104#pullrequestreview-98038069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f71b67ac-58e8-4543-8280-33790119f960",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Do you want to `return addresses, nil` instead?",
        "createdAt" : "2018-02-21T00:13:33Z",
        "updatedAt" : "2018-02-21T00:14:07Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "94cedea11300fb2605b2917928e8b32d4ad99ad6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1262,1266 @@\t\taddresses = append(addresses, ip)\n\t}\n\treturn addresses, err\n}\n"
  },
  {
    "id" : "a8d1f84b-cb7d-4ce2-ba46-9c54426945e8",
    "prId" : 59313,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59313#pullrequestreview-94467418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "368157ce-a7fb-41ba-8337-2efcec71125d",
        "parentId" : null,
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "Short comment here?",
        "createdAt" : "2018-02-04T20:12:23Z",
        "updatedAt" : "2018-02-09T01:49:59Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      },
      {
        "id" : "45f7bfd4-f6cb-420e-995b-145e8f6c4445",
        "parentId" : "368157ce-a7fb-41ba-8337-2efcec71125d",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Sure, done.",
        "createdAt" : "2018-02-06T19:09:20Z",
        "updatedAt" : "2018-02-09T01:49:59Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb0694023fd5f5bb38062b02d5ca500e226c39fc",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +1167,1171 @@\tj.RootCAs[secretName] = cert\n}\n\n// PrepareTLSSecret creates a TLS secret and caches the cert.\nfunc (j *IngressTestJig) PrepareTLSSecret(namespace, secretName string, hosts ...string) error {"
  },
  {
    "id" : "624a5c3a-c002-4dcb-86e3-9a67c6081c7a",
    "prId" : 59313,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59313#pullrequestreview-95608731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38ac20e5-14b2-4937-b5c2-da12a02a01ce",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "TryDeleteIngress is the only caller for TryDeleteGivenIngress and all it does is call that method.\r\nDo we really need 2 methods?",
        "createdAt" : "2018-02-10T02:07:57Z",
        "updatedAt" : "2018-02-10T02:07:57Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "c41820bb-ec4c-4733-9294-0e4e74f5f5f8",
        "parentId" : "38ac20e5-14b2-4937-b5c2-da12a02a01ce",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Ah, I originally added `TryDeleteGivenIngress` for the scale test, but ended up implementing its own cleanup function. So you are right it is not needed now...And sorry for making you rebase :)",
        "createdAt" : "2018-02-10T02:14:07Z",
        "updatedAt" : "2018-02-10T02:14:07Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb0694023fd5f5bb38062b02d5ca500e226c39fc",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +1190,1194 @@// TryDeleteIngress attempts to delete the ingress resource and logs errors if they occur.\nfunc (j *IngressTestJig) TryDeleteIngress() {\n\tj.TryDeleteGivenIngress(j.Ingress)\n}\n"
  },
  {
    "id" : "fec15854-9717-43f3-8911-9e45877a4926",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-95609358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e61bbb0f-4d2a-490c-a83a-f4d8ff6dd0a8",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Could we simply name this `CreateIngress`?",
        "createdAt" : "2018-02-09T21:45:52Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "56e7ed5e-6406-453e-b726-7d7470600fc3",
        "parentId" : "e61bbb0f-4d2a-490c-a83a-f4d8ff6dd0a8",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "There already exists a `CreateIngress` method . This is specific to running the Create command. CreateIngress calls RunCreate once it has computed the ingress to create.",
        "createdAt" : "2018-02-09T22:53:31Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "02a69e27-0281-40d6-9938-38417d12ff0c",
        "parentId" : "e61bbb0f-4d2a-490c-a83a-f4d8ff6dd0a8",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Oops, you are right, I scanned too quick. Maybe `RunCreateIngress`? Just wanted to indicate this is ingress specific :)",
        "createdAt" : "2018-02-09T23:03:37Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "468634fb-4925-4fe7-bc2d-0bb4b8d7c26d",
        "parentId" : "e61bbb0f-4d2a-490c-a83a-f4d8ff6dd0a8",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Its already a member function of IngressTestJig so RunCreate should be enough?\r\nFor creating other resources like services, we can name it explicitly RunCreateService.\r\n\r\nI think RunCreate is good, but if you still feel strongly am happy to change it to RunCreateIngress.",
        "createdAt" : "2018-02-10T02:23:22Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "08440be9-b7e9-4c19-b126-1902477be6b8",
        "parentId" : "e61bbb0f-4d2a-490c-a83a-f4d8ff6dd0a8",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Yeah no worries, `RunCreate` should be enough",
        "createdAt" : "2018-02-10T02:30:57Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1134,1138 @@\n// RunCreate runs the required command to create the given ingress.\nfunc (j *IngressTestJig) RunCreate(ing *extensions.Ingress) (*extensions.Ingress, error) {\n\tif j.Class != MulticlusterIngressClassValue {\n\t\treturn j.Client.ExtensionsV1beta1().Ingresses(ing.Namespace).Create(ing)"
  },
  {
    "id" : "3e2901ec-642f-427c-988d-4d8baeab5a35",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-95587667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "918d9450-5c15-4fd7-90aa-fc992273adbe",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Name it `UpdateIngress`?",
        "createdAt" : "2018-02-09T21:47:29Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "11ff969e-839a-44dc-9c58-1001ff085471",
        "parentId" : "918d9450-5c15-4fd7-90aa-fc992273adbe",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "same as above",
        "createdAt" : "2018-02-09T22:53:40Z",
        "updatedAt" : "2018-02-10T02:44:38Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1148,1152 @@\n// RunUpdate runs the required command to update the given ingress.\nfunc (j *IngressTestJig) RunUpdate(ing *extensions.Ingress) (*extensions.Ingress, error) {\n\tif j.Class != MulticlusterIngressClassValue {\n\t\treturn j.Client.ExtensionsV1beta1().Ingresses(ing.Namespace).Update(ing)"
  },
  {
    "id" : "dc28cd44-abec-45a8-b803-46dadce99827",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-97072363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69a661c1-fd39-4358-a01f-371727159927",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Is it necessary to export this function?",
        "createdAt" : "2018-02-10T23:37:18Z",
        "updatedAt" : "2018-02-10T23:56:55Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "79cb5d6d-d1a0-4df4-852e-d1bfdb52da36",
        "parentId" : "69a661c1-fd39-4358-a01f-371727159927",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "made it private",
        "createdAt" : "2018-02-16T02:52:37Z",
        "updatedAt" : "2018-02-16T02:56:09Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1143,1147 @@\t\treturn nil, err\n\t}\n\t_, err := RunKubemciCmd(\"create\", ing.Name, fmt.Sprintf(\"--ingress=%s\", filePath))\n\treturn ing, err\n}"
  },
  {
    "id" : "51c88f65-4797-4b0a-8d23-1f3dce613ff7",
    "prId" : 59234,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59234#pullrequestreview-97072363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f62acdbd-515f-4358-8781-a468afbf7a6c",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same question here. Should these functions be internal?",
        "createdAt" : "2018-02-10T23:37:38Z",
        "updatedAt" : "2018-02-10T23:56:55Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "2eab4b07-16fd-4ddb-8209-3e8cee892fe0",
        "parentId" : "f62acdbd-515f-4358-8781-a468afbf7a6c",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "done",
        "createdAt" : "2018-02-16T02:52:30Z",
        "updatedAt" : "2018-02-16T02:56:09Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3047c1830b6546b01e6b172e65ed3a4158f4a768",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1148,1152 @@\n// RunUpdate runs the required command to update the given ingress.\nfunc (j *IngressTestJig) RunUpdate(ing *extensions.Ingress) (*extensions.Ingress, error) {\n\tif j.Class != MulticlusterIngressClassValue {\n\t\treturn j.Client.ExtensionsV1beta1().Ingresses(ing.Namespace).Update(ing)"
  },
  {
    "id" : "56e117c3-630b-4a72-8892-0503156823eb",
    "prId" : 58896,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58896#pullrequestreview-92012019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "567c90ad-de39-4f4a-846e-7ececc7ad603",
        "parentId" : null,
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "May also comment that it verifies whether it uses the correct cert.",
        "createdAt" : "2018-01-27T01:34:48Z",
        "updatedAt" : "2018-02-01T18:34:48Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      },
      {
        "id" : "23d88e11-80b4-4c67-83ea-688071881cc6",
        "parentId" : "567c90ad-de39-4f4a-846e-7ececc7ad603",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks, done.",
        "createdAt" : "2018-01-27T01:49:29Z",
        "updatedAt" : "2018-02-01T18:34:48Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "38290535d696f9dd6811044d77be6e2f38efe47f",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +1201,1205 @@\n// WaitForIngress waits till the ingress acquires an IP, then waits for its\n// hosts/urls to respond to a protocol check (either http or https). If\n// waitForNodePort is true, the NodePort of the Service is verified before\n// verifying the Ingress. NodePort is currently a requirement for cloudprovider"
  },
  {
    "id" : "5d2db2e7-2cff-4960-a948-248c10e5da08",
    "prId" : 58359,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58359#pullrequestreview-89881482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a7e9643-b96f-4d0a-a53b-a0b23a3427f1",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "acquire IP or hostname ?",
        "createdAt" : "2018-01-17T02:12:37Z",
        "updatedAt" : "2018-02-01T01:46:44Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "33408aeb-c38e-4e75-a97a-872d8230d7a4",
        "parentId" : "2a7e9643-b96f-4d0a-a53b-a0b23a3427f1",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks for the comment, I moved this function without modification, happy to improve the util logging in a separate PR.",
        "createdAt" : "2018-01-18T18:15:22Z",
        "updatedAt" : "2018-02-01T01:46:44Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "34f8e4e97bb6ce3a8baac4e01b755f69eace71fb",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1134,1138 @@\t\tipOrNameList, err := getIngressAddress(c, ns, ingName)\n\t\tif err != nil || len(ipOrNameList) == 0 {\n\t\t\tLogf(\"Waiting for Ingress %v to acquire IP, error %v\", ingName, err)\n\t\t\tif IsRetryableAPIError(err) {\n\t\t\t\treturn false, nil"
  },
  {
    "id" : "547b2527-9611-4338-b711-8ac90712be50",
    "prId" : 55047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55047#pullrequestreview-74581120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2acf1d91-7951-4397-9c23-4f3266ac3d20",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Is there any issue with circular vendoring that we have to be careful of?",
        "createdAt" : "2017-11-06T22:10:02Z",
        "updatedAt" : "2017-11-06T22:10:02Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "b57d3c36-a6ce-423a-b6c2-999d6d21ecf6",
        "parentId" : "2acf1d91-7951-4397-9c23-4f3266ac3d20",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "`pkg/annotations` has basic code that does not depend on kubernetes/kubernetes so we should be fine?",
        "createdAt" : "2017-11-06T22:15:16Z",
        "updatedAt" : "2017-11-06T22:15:16Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e1d61a0d54c0bc76c84c7fcfdf9812efc1652a3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +65,69 @@\t// TODO: All these annotations should be reused from\n\t// ingress-gce/pkg/annotations instead of duplicating them here.\n\tIngressClass = \"kubernetes.io/ingress.class\"\n\n\t// Ingress class annotation value for multi cluster ingress."
  },
  {
    "id" : "ba83daaf-6fa3-4107-9bae-7a971b37ccec",
    "prId" : 55047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55047#pullrequestreview-74580875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8fc9dfe-10b8-4f45-a9a7-17e5fe12a1e5",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "It is Ok to duplicate the constants in tests? I agree it is a double-edged sword. But the edge pointing away from us is it tells us when someone changes this constant intentionally or unintentionally in the Ingress repo.",
        "createdAt" : "2017-11-06T22:14:22Z",
        "updatedAt" : "2017-11-06T22:23:32Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e1d61a0d54c0bc76c84c7fcfdf9812efc1652a3",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +64,68 @@\t// Ingress class annotation defined in ingress repository.\n\t// TODO: All these annotations should be reused from\n\t// ingress-gce/pkg/annotations instead of duplicating them here.\n\tIngressClass = \"kubernetes.io/ingress.class\"\n"
  },
  {
    "id" : "e83136fe-01ff-41af-be02-0acc064a3a19",
    "prId" : 42555,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42555#pullrequestreview-25392500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e8bef94-6b93-467e-b19f-812bb7df8a8f",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Did you still mean to change this? Or was this to aid in testing and debugging?",
        "createdAt" : "2017-03-06T21:27:46Z",
        "updatedAt" : "2017-03-06T22:43:38Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "c2aaf187-4902-4397-980d-23d6e4a94275",
        "parentId" : "9e8bef94-6b93-467e-b19f-812bb7df8a8f",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "On purpose.  The `LoadBalancerCleanupTimeout` is 15 minutes and is already used above at 336. \r\n\r\nThis `wait.Poll(...)` is for manually deleting the static IP created during `Setup(...)`.  We want to try just enough times to make sure any propagation of deletions from above will make the ip viewed as un-used. Even polling for a minute may be overkill. ",
        "createdAt" : "2017-03-06T23:16:27Z",
        "updatedAt" : "2017-03-06T23:16:27Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bba665c81fd1438ca56a7a45f67c7887a299f8d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +355,359 @@\t// to cleanup or it might interfere with the controller, causing it to\n\t// throw out confusing events.\n\tif ipErr := wait.Poll(5*time.Second, 1*time.Minute, func() (bool, error) {\n\t\tif err := gceController.deleteStaticIPs(); err != nil {\n\t\t\tLogf(\"Failed to delete static-ip: %v\\n\", err)"
  },
  {
    "id" : "74725c41-d401-466d-b872-47e50649d88a",
    "prId" : 42555,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42555#pullrequestreview-25390930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "881eac89-fd39-421f-86a6-edcf5533e441",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "\"If del is true\".\r\n\r\nAlso, this is really gross. It's 2 functions hiding behind a boolean switch. ",
        "createdAt" : "2017-03-06T21:31:13Z",
        "updatedAt" : "2017-03-06T22:43:38Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "6da942dc-3e41-41e5-b412-42f10f2a79c2",
        "parentId" : "881eac89-fd39-421f-86a6-edcf5533e441",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "Very gross, indeed. It's also looking at the return strings of `deleteXYZ(del bool) string` to determine if resources exists. Frankly, all of it would benefit from being rebuilt.  I'm more concerned with stopping the leak of resources at the moment. ",
        "createdAt" : "2017-03-06T23:07:50Z",
        "updatedAt" : "2017-03-06T23:07:50Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bba665c81fd1438ca56a7a45f67c7887a299f8d",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +675,679 @@// Cleanup cleans up cloud resources.\n// If del is false, it simply reports existing resources without deleting them.\n// If dle is true, it deletes resources it finds acceptable (see canDelete func).\nfunc (cont *GCEIngressController) Cleanup(del bool) error {\n\t// Ordering is important here because we cannot delete resources that other"
  },
  {
    "id" : "64c2b293-ebee-4940-b139-979382525932",
    "prId" : 42020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42020#pullrequestreview-23825467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b1de652-4bd0-4b3f-b418-09deaf05a068",
        "parentId" : null,
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "These gcloud funcs are ugly and removing them in this PR would be time consuming. Reckon I create an issue about consuming the cloud provider pkg instead.",
        "createdAt" : "2017-02-24T22:21:20Z",
        "updatedAt" : "2017-03-01T19:53:41Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dc98f529669c7152b17285c9675271603b746d4",
    "line" : 548,
    "diffHunk" : "@@ -1,1 +733,737 @@\n// gcloudComputeResourceList unmarshals json output of gcloud into given out interface.\nfunc gcloudComputeResourceList(resource, regex, project string, out interface{}) {\n\t// gcloud prints a message to stderr if it has an available update\n\t// so we only look at stdout."
  }
]