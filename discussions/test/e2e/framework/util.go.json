[
  {
    "id" : "858bde2f-bbd0-498b-97c0-689e838dc522",
    "prId" : 96042,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96042#pullrequestreview-521743324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82277990-5a63-4040-938b-efb5f42acd01",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Ideally we'd remove these constants from here in favor of the values in framework.Framework.Timeouts. However, these consts are used in **too many places** throughout the test suite and changing all at once would make this PR too big (I tried that).\r\n\r\nSo the approach I found more convenient was to deprecate the consts in `util.go` and and remove them over time, once there isn't any test using them any more.",
        "createdAt" : "2020-11-02T15:38:55Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee082985c2d8568989400d214f56c020ec8b20f9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +84,88 @@)\n\n// DEPRECATED constants. Use the timeouts in framework.Framework instead.\nconst (\n\t// PodListTimeout is how long to wait for the pod to be listable."
  },
  {
    "id" : "ab63fe02-a491-4347-b82f-d9c87ab3bbdb",
    "prId" : 95166,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95166#pullrequestreview-500640713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48e76eea-ee17-4512-9ffe-92bfb0f8eee4",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "instance of what? would `apiserverURL` or `apiURL` have made more sense here?",
        "createdAt" : "2020-10-01T19:09:47Z",
        "updatedAt" : "2020-10-01T19:14:14Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "395a6d89f6bcdc10089114ba057fcccdd42a6162",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +169,173 @@// APIAddress returns a address of an instance.\nfunc APIAddress() string {\n\tinstanceURL, err := url.Parse(TestContext.Host)\n\tExpectNoError(err)\n\treturn instanceURL.Hostname()"
  },
  {
    "id" : "700f6c13-7d09-4d77-964a-3de17050a00a",
    "prId" : 95055,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95055#pullrequestreview-498662895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "> During review of PR #92127, we found that LookForStringInPodExec function does not have a container name argument. The comments on the function suggested that it intended to have container name as a parameter.\r\n\r\nI might have missed  something, but the comments here don't seem to imply that container name was an intentional parameter here initially.",
        "createdAt" : "2020-09-25T03:25:12Z",
        "updatedAt" : "2020-09-28T19:57:49Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ec3f422e-0623-4874-a124-d46d313a1312",
        "parentId" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "authorId" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "body" : "I figured it might say \"executed in pod's first container\" as opposed to \"executed in a specific pod container\" if the intent was very clear. \r\n\r\nIn any case, do you think this change is a good idea? Another alternative is to add a new function [LookForStringInPodExecToContainer](https://github.com/kubernetes/kubernetes/pull/92127/files/426d0bbcb13489c50a52dbbf3b5fef24bb2720d6#diff-eb7b79470992813ea1905e96c298b47bR511) from my earlier PR that allows specifying container name as parameter, and have LookForStringInPodExec call it.",
        "createdAt" : "2020-09-25T04:15:17Z",
        "updatedAt" : "2020-09-28T19:57:49Z",
        "lastEditedBy" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "tags" : [
        ]
      },
      {
        "id" : "c9471a09-3d31-4748-aa76-f9468c4d7c91",
        "parentId" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "> Another alternative is to add a new function LookForStringInPodExecToContainer from my earlier PR that allows specifying container name as parameter, and have LookForStringInPodExec call it.\r\n\r\nI think this might be better, that way existing callers can still use `LookForStringInPodExec` without passing in an empty container name.",
        "createdAt" : "2020-09-26T18:04:31Z",
        "updatedAt" : "2020-09-28T19:57:49Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "7dff0565-2416-4ca6-a2db-871b3076d29d",
        "parentId" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "I missed the above comment.\r\nI prefer to see a new function `LookForStringInPodExecToContainer()` which allows to specify a new container name parameter and the function is called from the existing `LookForStringInPodExec()`.",
        "createdAt" : "2020-09-28T16:24:16Z",
        "updatedAt" : "2020-09-28T19:57:49Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "73557dca-f2ab-4ffa-b778-29c4902660cb",
        "parentId" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "authorId" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "body" : "@andrewsykim @oomichi Sounds good.. I'll push an update shortly, and clarify the comments on the original function.",
        "createdAt" : "2020-09-28T17:44:44Z",
        "updatedAt" : "2020-09-28T19:57:49Z",
        "lastEditedBy" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "tags" : [
        ]
      },
      {
        "id" : "5510368c-b43d-4ff3-9cb9-10a1baa58000",
        "parentId" : "b63607da-7b7e-4adf-bb1f-240357f40dbb",
        "authorId" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "body" : "Fixed in commit https://github.com/kubernetes/kubernetes/pull/95055/commits/334cde51bfab31c9dfe812661050b4782a4654f0",
        "createdAt" : "2020-09-29T16:18:28Z",
        "updatedAt" : "2020-09-29T16:18:29Z",
        "lastEditedBy" : "a5206526-2a31-45fa-ad1d-ed7001bd6d60",
        "tags" : [
        ]
      }
    ],
    "commit" : "334cde51bfab31c9dfe812661050b4782a4654f0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +503,507 @@}\n\n// LookForStringInPodExec looks for the given string in the output of a command\n// executed in the first container of specified pod.\n// TODO(alejandrox1): move to pod/ subpkg once kubectl methods are refactored."
  },
  {
    "id" : "d3c3f304-4f91-4c2b-a972-3c8b475de9a2",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-428491856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0b72067-33de-4901-af7c-d16c43a05693",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "I would make this configurable with a sane default",
        "createdAt" : "2020-06-01T23:05:58Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "7f5d3b1b-d9ff-427f-9663-2f08a507703c",
        "parentId" : "d0b72067-33de-4901-af7c-d16c43a05693",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "a comment to explain why we're retrying up top vs. having to spelunk into the loop would be appreciated",
        "createdAt" : "2020-06-01T23:08:54Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "4678f1a4-7d70-4db3-ac25-f48fdf19e327",
        "parentId" : "d0b72067-33de-4901-af7c-d16c43a05693",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "I can make it as an input, but I'm unsure how to make it a default. Would there be any insights on that?",
        "createdAt" : "2020-06-02T23:19:01Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      },
      {
        "id" : "d7115ff6-2b44-4caa-a418-2e8f93afcee9",
        "parentId" : "d0b72067-33de-4901-af7c-d16c43a05693",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "I've updated the docs for the function in 5268ba5488c.\r\n\r\nI'd be happy to submit a later PR to make the retry count configurable",
        "createdAt" : "2020-06-10T23:18:52Z",
        "updatedAt" : "2020-06-10T23:18:52Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +1309,1313 @@\t}\n\n\tretries := 3\nretriesLoop:\n\tfor try := 1; try <= retries; try++ {"
  },
  {
    "id" : "afbe6909-5b2f-4801-9863-5aa067722ca9",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-425853900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2609a4d-0c15-4269-b2f0-32f100eff1bd",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is retrying a failed scenario with an existing open watch going to work? in my experience, that often leaves you with undrained watch events in the watcher channel that mess up the data for the next attempt",
        "createdAt" : "2020-06-04T03:32:24Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8ceca56d-e7c5-4b43-9b45-35d2977ede8f",
        "parentId" : "b2609a4d-0c15-4269-b2f0-32f100eff1bd",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "That's a good point, I'll restructure it a bit",
        "createdAt" : "2020-06-07T21:13:56Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +1319,1323 @@\n\t\t// NOTE the test may need access to the events to see what's going on, such as a change in status\n\t\tactualWatchEvents := scenario(resourceWatch)\n\t\terrs := sets.NewString()\n\t\tExpectEqual(len(expectedWatchEvents) <= len(actualWatchEvents), true, \"Error: actual watch events amount (%d) must be greater than or equal to expected watch events amount (%d)\", len(actualWatchEvents), len(expectedWatchEvents))"
  },
  {
    "id" : "cdab3afb-3090-422a-abe5-3201d256b510",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-425853706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb6ad41e-dbac-42e4-8336-b685a5261129",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not sure replicating a method whose documentation ends with \"Consider making this function private to prevent misuse when the other occurrences in our codebase are gone.\" into our test framework for reuse is the best idea... :)",
        "createdAt" : "2020-06-04T03:36:31Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1cce611d-ae60-42e9-bcbb-4f73b0b441bd",
        "parentId" : "bb6ad41e-dbac-42e4-8336-b685a5261129",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "This function is meant to be used inside tests which use the watch tooling also provided in this PR. The function appears to work as expected in my cases from my testing, checkout [the usage here](https://github.com/kubernetes/kubernetes/pull/90880/files#diff-41baf4b031431ab2c17b13c0e32aa223R150-R157)",
        "createdAt" : "2020-06-07T21:11:11Z",
        "updatedAt" : "2020-06-10T23:11:39Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +1363,1367 @@// Waits until context deadline or until context is canceled.\n//\n// the same as watchtools.UntilWithoutRetry, just without the closing of the watch - as for the purpose of being paired with WatchEventSequenceVerifier, the watch is needed for continual watch event collection\nfunc WatchUntilWithoutRetry(ctx context.Context, watcher watch.Interface, conditions ...watchtools.ConditionFunc) (*watch.Event, error) {\n\tch := watcher.ResultChan()"
  },
  {
    "id" : "34cf1ee5-0a66-4932-83fb-39c2a54120d0",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-429085126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcd3518f-e135-4fa5-9577-67a85e1c1ca3",
        "parentId" : null,
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "FYI: #77095\r\nIf we need these, we'd better put them into its own package for easier consumption/discovery if possible.",
        "createdAt" : "2020-06-11T06:07:45Z",
        "updatedAt" : "2020-06-11T06:17:33Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "856e489d-53f4-47a4-9180-70b6ea832c76",
        "parentId" : "fcd3518f-e135-4fa5-9577-67a85e1c1ca3",
        "authorId" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "body" : "That sounds like a great idea!\r\n@BobyMCbobs can you do that in a secondary PR?",
        "createdAt" : "2020-06-11T16:28:36Z",
        "updatedAt" : "2020-06-11T16:28:37Z",
        "lastEditedBy" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1302,1306 @@//   if an expected watch event is missing we elect to clean up and run the entire scenario again\n// we try the scenario three times to allow the sequencing to fail a couple of times\nfunc WatchEventSequenceVerifier(ctx context.Context, dc dynamic.Interface, resourceType schema.GroupVersionResource, namespace string, resourceName string, listOptions metav1.ListOptions, expectedWatchEvents []watch.Event, scenario func(*watchtools.RetryWatcher) []watch.Event, retryCleanup func() error) {\n\tlistWatcher := &cache.ListWatch{\n\t\tWatchFunc: func(listOptions metav1.ListOptions) (watch.Interface, error) {"
  },
  {
    "id" : "ed6808c6-9967-4104-995b-c4b56472c4a1",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-430102822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c424f8e-5adf-4471-bca7-fa5a593678fe",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Why do we need to specify ConditionSucceeded here?\r\nI guess just `break` can work here.",
        "createdAt" : "2020-06-13T01:37:06Z",
        "updatedAt" : "2020-06-13T01:38:50Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +1392,1396 @@\t\t\t\t}\n\t\t\t\tif done {\n\t\t\t\t\tbreak ConditionSucceeded\n\t\t\t\t}\n"
  },
  {
    "id" : "257fc7dc-a7d6-4d00-ad01-7ff8c3712121",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431906411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08f87435-65d7-4354-b680-f05d05856be7",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "```suggestion\r\n//   ctx                 cancelation signal across API boundries, e.g: context.TODO()\r\n```",
        "createdAt" : "2020-06-16T21:30:30Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1289,1293 @@// WatchEventSequenceVerifier ...\n// manages a watch for a given resource, ensures that events take place in a given order, retries the test on failure\n//   testContext         cancelation signal across API boundries, e.g: context.TODO()\n//   dc                  sets up a client to the API\n//   resourceType        specify the type of resource"
  },
  {
    "id" : "1ee186a9-b715-4f1d-80fe-811165a524d4",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431952119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3a1e71e-2b7a-4991-b50f-e340006b3714",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Are these labels idiomatic go (`actualWatchEventsLoop` and `retriesLoop`)?\r\nSuper subjective opinion here but feel like they add clutter and are a feature of the language that is not super common.",
        "createdAt" : "2020-06-16T21:33:22Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "0be77516-e5d8-4f0e-90bb-4829f35fdb6a",
        "parentId" : "e3a1e71e-2b7a-4991-b50f-e340006b3714",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "Without the labels, it's difficult to refer to the correct _for_ statement when nested (with _break_ and _continue_).",
        "createdAt" : "2020-06-16T23:09:04Z",
        "updatedAt" : "2020-06-16T23:09:49Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +1328,1332 @@\t\tfor watchEventIndex, expectedWatchEvent := range expectedWatchEvents {\n\t\t\tfoundExpectedWatchEvent := false\n\t\tactualWatchEventsLoop:\n\t\t\tfor actualWatchEventIndex, actualWatchEvent := range actualWatchEvents {\n\t\t\t\tif foundEventIndexes[actualWatchEventIndex] != nil {"
  },
  {
    "id" : "16e94211-b386-4c65-94e1-7e8fa0056c8d",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431954341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1edc66-8adc-4270-8e7f-a1ea9e610ea1",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "> retries the test on failure\r\n \r\ncan we document why we are going this route?\r\nstill not clear how this would be different from something like ginkgo flake attempts.",
        "createdAt" : "2020-06-16T21:35:01Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "3ac53474-0c83-453b-be61-019cea5f1df1",
        "parentId" : "5a1edc66-8adc-4270-8e7f-a1ea9e610ea1",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "@spiffxp feels similar - but we're going to address this in a later/separate PR will be created to possibly remove this. ",
        "createdAt" : "2020-06-16T23:14:54Z",
        "updatedAt" : "2020-06-16T23:14:55Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1288,1292 @@\n// WatchEventSequenceVerifier ...\n// manages a watch for a given resource, ensures that events take place in a given order, retries the test on failure\n//   testContext         cancelation signal across API boundries, e.g: context.TODO()\n//   dc                  sets up a client to the API"
  },
  {
    "id" : "fb6803f9-b71c-4706-8d12-26a208a4d1b6",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431954634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c3f62c2-cabe-4c4e-bd0a-d63f60c0a2bd",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Is there some reason for why this is retried up to 3 times?",
        "createdAt" : "2020-06-16T21:35:57Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "808d9bf3-9da2-44f5-aebf-5814074f4c8d",
        "parentId" : "1c3f62c2-cabe-4c4e-bd0a-d63f60c0a2bd",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "Three times seemed like a reasonable amount of retries. There isn't any particular reason.",
        "createdAt" : "2020-06-16T23:15:44Z",
        "updatedAt" : "2020-06-16T23:15:44Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1301,1305 @@// the entire scenario must be run to ensure that the desired watch events arrive in order (allowing for interweaving of watch events)\n//   if an expected watch event is missing we elect to clean up and run the entire scenario again\n// we try the scenario three times to allow the sequencing to fail a couple of times\nfunc WatchEventSequenceVerifier(ctx context.Context, dc dynamic.Interface, resourceType schema.GroupVersionResource, namespace string, resourceName string, listOptions metav1.ListOptions, expectedWatchEvents []watch.Event, scenario func(*watchtools.RetryWatcher) []watch.Event, retryCleanup func() error) {\n\tlistWatcher := &cache.ListWatch{"
  },
  {
    "id" : "34062a74-a886-443e-8fc8-6c310817c3fc",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431956905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e731d0ef-7d16-4b0c-870e-a8ef228a0b7e",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "If not event has been received should there be some timeout or some timer to wait for events to stream in?\r\nUnder what context would this function be used?",
        "createdAt" : "2020-06-16T21:51:29Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "b1385326-f1b7-4af3-b38a-83b4bab02579",
        "parentId" : "e731d0ef-7d16-4b0c-870e-a8ef228a0b7e",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "This function is used for reading the events in as they come in, inside the test. It can also use for test-specific conditions that are required at points in the test.\r\n\r\nSee:\r\n- [Adding events to the actualEvents field](https://github.com/kubernetes/kubernetes/pull/90880/files#diff-41baf4b031431ab2c17b13c0e32aa223R150-R159)\r\n- [Waiting for a change in the status of a resource](https://github.com/kubernetes/kubernetes/pull/90880/files#diff-41baf4b031431ab2c17b13c0e32aa223R165-R182)",
        "createdAt" : "2020-06-16T23:21:56Z",
        "updatedAt" : "2020-06-16T23:21:56Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +1359,1363 @@// reads items from the watch until each provided condition succeeds, and then returns the last watch\n// encountered. The first condition that returns an error terminates the watch (and the event is also returned).\n// If no event has been received, the returned event will be nil.\n// Conditions are satisfied sequentially so as to provide a useful primitive for higher level composition.\n// Waits until context deadline or until context is canceled."
  },
  {
    "id" : "5b6b3620-ea0e-4b4b-b96d-c8164279c637",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431957202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f5799d6-7ce2-4fec-860b-cef13aa95c55",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "This label doesn't seem to be really needed here either.\r\nI'm still thinking that it should be as simple as possible.",
        "createdAt" : "2020-06-16T21:52:56Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "2037cceb-14e2-47c5-a255-9276ccb68ce3",
        "parentId" : "0f5799d6-7ce2-4fec-860b-cef13aa95c55",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "I believe that this is the same as https://github.com/kubernetes/kubernetes/pull/91416#discussion_r441191195",
        "createdAt" : "2020-06-16T23:22:42Z",
        "updatedAt" : "2020-06-16T23:22:43Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +1378,1382 @@\t\t\t}\n\t\t}\n\tConditionSucceeded:\n\t\tfor {\n\t\t\tselect {"
  },
  {
    "id" : "50be5e3c-f9a9-4f0f-b019-9bc90734b2c6",
    "prId" : 91416,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91416#pullrequestreview-431958004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe1f897c-6d18-4438-9fde-f54e666e72e2",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "How do we plan to handle the case in which for some failure `ch := watcher.ResultChan()` doesn't return anything.\r\nWould having a timer here or something be useful?",
        "createdAt" : "2020-06-16T22:03:03Z",
        "updatedAt" : "2020-06-16T22:07:28Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "9374635f-00b2-4835-8472-2c7c39751919",
        "parentId" : "fe1f897c-6d18-4438-9fde-f54e666e72e2",
        "authorId" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "body" : "We will add a default to catch this in a follow up PR.",
        "createdAt" : "2020-06-16T23:24:58Z",
        "updatedAt" : "2020-06-16T23:24:58Z",
        "lastEditedBy" : "97f5510f-d2e4-4cef-b8eb-c4184feaff72",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8b70ce0da1bf3e91b843f7e8f5d4841d27cab0d",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +1395,1399 @@\t\t\t\t}\n\n\t\t\tcase <-ctx.Done():\n\t\t\t\treturn lastEvent, wait.ErrWaitTimeout\n\t\t\t}"
  },
  {
    "id" : "8b92ea95-cb2d-433d-bfd5-ae4a2d2dac55",
    "prId" : 90591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90591#pullrequestreview-402655447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4e55d48-84e6-44ab-b84c-b9e78cd217e2",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the old code actually tries to find an avail. name for 30 seconds with 2 second intervals in a loop, so ~15 retires.\r\nthis seems OK.\r\n\r\nwith this change however, we stop doing that an regenerate on conflict a single time in CreateTestingNS.\r\nin my opinion the old code is more robust.",
        "createdAt" : "2020-04-29T12:31:48Z",
        "updatedAt" : "2020-04-29T12:31:49Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1955595c-a1df-48f8-ae03-b173f38d5195",
        "parentId" : "a4e55d48-84e6-44ab-b84c-b9e78cd217e2",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "the problem of old code is before the actual creation, the name may be taken by other processes.\r\n\r\nmy fix is to regenerate the name in `wait.PollImmediate(Poll, 30*time.Second, func() (bool, error) {`, try a new name each time.",
        "createdAt" : "2020-04-29T12:59:28Z",
        "updatedAt" : "2020-04-29T12:59:29Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "aad5438c-7dfc-4142-b768-1b3911aea9a8",
        "parentId" : "a4e55d48-84e6-44ab-b84c-b9e78cd217e2",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "the code tries to create the namespace for 30 seconds with a 2-second interval too but didn't regenerate the name on name conflict. it's better to regenerate the name in the namespace creation loop and `findAvailableNamespaceName()` is not needed.",
        "createdAt" : "2020-04-29T13:05:32Z",
        "updatedAt" : "2020-04-29T13:05:33Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "38bb7380-07c2-49ec-b6cb-9517a674b49b",
        "parentId" : "a4e55d48-84e6-44ab-b84c-b9e78cd217e2",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "right, i missed that the creation is already in a loop.\r\n",
        "createdAt" : "2020-04-29T13:15:43Z",
        "updatedAt" : "2020-04-29T13:15:43Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "37f590ea-9d39-4608-a72b-0572024ceb33",
        "parentId" : "a4e55d48-84e6-44ab-b84c-b9e78cd217e2",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "thank you for the explanation.",
        "createdAt" : "2020-04-29T13:18:26Z",
        "updatedAt" : "2020-04-29T13:18:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "38c5da01ad6ae3b7c9d8eb474288171939f80232",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +317,321 @@\t// failure we don't know whether the namespace was created and what is its\n\t// name.\n\tname := fmt.Sprintf(\"%v-%v\", baseName, RandomSuffix())\n\n\tnamespaceObj := &v1.Namespace{"
  },
  {
    "id" : "4b3db8dc-5b37-4153-ad4f-3f5434f4e236",
    "prId" : 89563,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89563#pullrequestreview-382566040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9e443e9-8f2b-4f6b-b690-788c95f23e73",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "The line 70 TODO is what we want to do in this PR.",
        "createdAt" : "2020-03-27T03:57:07Z",
        "updatedAt" : "2020-03-27T03:57:08Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "42bb845f40229ef00db008e5adeef34a96841c25",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +70,74 @@\t// TODO: Remove the following imports (ref: https://github.com/kubernetes/kubernetes/issues/81245)\n\te2ekubectl \"k8s.io/kubernetes/test/e2e/framework/kubectl\"\n\te2emetrics \"k8s.io/kubernetes/test/e2e/framework/metrics\"\n\te2enode \"k8s.io/kubernetes/test/e2e/framework/node\"\n\te2epod \"k8s.io/kubernetes/test/e2e/framework/pod\""
  },
  {
    "id" : "8616fbac-af0c-479d-9e22-bb23f96891c0",
    "prId" : 89560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89560#pullrequestreview-391301424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "784002ee-0120-452d-a128-08f4302ddd7a",
        "parentId" : null,
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "/cc  @oomichi \r\n\r\ncould you review this pr due to long time . Thanks",
        "createdAt" : "2020-04-10T07:15:10Z",
        "updatedAt" : "2020-04-11T03:12:54Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc0cfd273e59382743640509d2ae11996b52f6bf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +63,67 @@\tclientcmdapi \"k8s.io/client-go/tools/clientcmd/api\"\n\twatchtools \"k8s.io/client-go/tools/watch\"\n\t\"k8s.io/component-base/featuregate\"\n\t\"k8s.io/kubernetes/pkg/controller\"\n\ttestutils \"k8s.io/kubernetes/test/utils\""
  },
  {
    "id" : "8c6fdbfe-c68f-4aa3-9a65-4b246b8229b4",
    "prId" : 89560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89560#pullrequestreview-391730663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55db37af-bed4-4251-949d-e4a7590d13d6",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "It is better to put `NOTE` to explain where this function is copied from.\r\nI saw such comments previously on other PRs.",
        "createdAt" : "2020-04-10T17:59:31Z",
        "updatedAt" : "2020-04-11T03:12:54Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "3d2d51cf-1620-4590-b296-984effec1f88",
        "parentId" : "55db37af-bed4-4251-949d-e4a7590d13d6",
        "authorId" : "628143cf-73c8-4c51-bd38-d4079089c756",
        "body" : "done",
        "createdAt" : "2020-04-11T03:11:00Z",
        "updatedAt" : "2020-04-11T03:12:54Z",
        "lastEditedBy" : "628143cf-73c8-4c51-bd38-d4079089c756",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc0cfd273e59382743640509d2ae11996b52f6bf",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +757,761 @@// types except for the ones guarded by feature gate.\n// Copied from pkg/api/v1/pod to avoid pulling extra dependencies\nfunc allFeatureEnabledContainers() ContainerType {\n\tcontainerType := AllContainers\n\tif !utilfeature.DefaultFeatureGate.Enabled(FeatureEphemeralContainers) {"
  },
  {
    "id" : "ff57dd0c-300b-469c-8c0b-30062c189034",
    "prId" : 89560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89560#pullrequestreview-400638681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cffcb4a-88d1-4fe1-ad54-c5483e5a042a",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "ditto: `NOTE`",
        "createdAt" : "2020-04-10T18:00:09Z",
        "updatedAt" : "2020-04-11T03:12:54Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "09e25ef7-736e-4662-a5b1-9b9004dd7629",
        "parentId" : "0cffcb4a-88d1-4fe1-ad54-c5483e5a042a",
        "authorId" : "ed080bdf-4bd8-475e-92b0-4b84327afe2e",
        "body" : "func VisitContainers in  pkg/api/v1/pod will be removed later or remain?",
        "createdAt" : "2020-04-27T05:39:02Z",
        "updatedAt" : "2020-04-27T05:39:02Z",
        "lastEditedBy" : "ed080bdf-4bd8-475e-92b0-4b84327afe2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc0cfd273e59382743640509d2ae11996b52f6bf",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +775,779 @@// false if visiting was short-circuited.\n// Copied from pkg/api/v1/pod to avoid pulling extra dependencies\nfunc visitContainers(podSpec *v1.PodSpec, mask ContainerType, visitor ContainerVisitor) bool {\n\tif mask&InitContainers != 0 {\n\t\tfor i := range podSpec.InitContainers {"
  },
  {
    "id" : "b99df97d-47b7-4a60-ac94-931980e1dcb1",
    "prId" : 88064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88064#pullrequestreview-358597112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27fcae06-126f-494f-a5cf-1878407a4da3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Why doesn't this use [http.NewRequest](https://golang.org/pkg/net/http/#NewRequest)? are there other things wrong with this construction?",
        "createdAt" : "2020-02-13T21:16:19Z",
        "updatedAt" : "2020-02-13T21:16:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "fd2ef46e-787d-4c41-89cd-6b9c33b78287",
        "parentId" : "27fcae06-126f-494f-a5cf-1878407a4da3",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "I don't know, I guess the original author avoided a constructor to show that this is a \"dummy\" request whose only purpose is to figure out Headers.\r\n\r\nEither way, I did the bare minimum change to fix my problem, but best practice would probably be to do\r\n\r\n`NewRequest(\"GET\", url, nil)`.\r\n\r\nSo let me open another PR.",
        "createdAt" : "2020-02-13T22:26:30Z",
        "updatedAt" : "2020-02-13T22:26:30Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      }
    ],
    "commit" : "c048fb19fc47420d276853c55ce1f5939673d6bf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1537,1541 @@\t\treturn nil, err\n\t}\n\tif _, err := rt.RoundTrip(&http.Request{Header: make(http.Header), URL: url}); err != nil {\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "b55ade68-3de8-4d03-8d66-7ad64dbbeb32",
    "prId" : 84725,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84725#pullrequestreview-311859329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186069b4-b43e-4895-8e3b-a85f86af8fb1",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Given that the suite can run in parallel, shouldn't we lock on the defers b/c there could be a race on setting the config object. ",
        "createdAt" : "2019-11-05T16:01:36Z",
        "updatedAt" : "2019-11-05T16:01:43Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "0b32b511-9e6d-4885-834e-e8f8f32f7f66",
        "parentId" : "186069b4-b43e-4895-8e3b-a85f86af8fb1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "each invocation of LoadConfig returns a fresh object",
        "createdAt" : "2019-11-05T16:06:58Z",
        "updatedAt" : "2019-11-05T16:07:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bd5826fe-ec48-448b-9add-5ed8b22f5f79",
        "parentId" : "186069b4-b43e-4895-8e3b-a85f86af8fb1",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "/lgtm",
        "createdAt" : "2019-11-05T16:25:18Z",
        "updatedAt" : "2019-11-05T16:25:19Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "300daa13a48044f8bb2b406c9289df2dae9ff0ed",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +906,910 @@func LoadConfig() (config *restclient.Config, err error) {\n\tdefer func() {\n\t\tif err == nil && config != nil {\n\t\t\ttestDesc := ginkgo.CurrentGinkgoTestDescription()\n\t\t\tif len(testDesc.ComponentTexts) > 0 {"
  },
  {
    "id" : "7c285e30-04c1-4c19-afd7-104b0fc69d51",
    "prId" : 84600,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84600#pullrequestreview-312144268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17d52fdc-3dc6-4bac-a2c1-08c6a4241986",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "`VisitContainers` searches initContainer also as https://github.com/kubernetes/kubernetes/blob/master/pkg/api/pod/util.go#L37\r\nso lgtm for making debugging more easy.",
        "createdAt" : "2019-11-06T01:14:44Z",
        "updatedAt" : "2019-11-06T01:14:55Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "17307c055c79917f622ddc8970a118aeaad5a107",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1250,1254 @@\tif podErr != nil {\n\t\t// Pod failed. Dump all logs from all containers to see what's wrong\n\t\t_ = podutil.VisitContainers(&podStatus.Spec, func(c *v1.Container) bool {\n\t\t\tlogs, err := e2epod.GetPodLogs(f.ClientSet, ns, podStatus.Name, c.Name)\n\t\t\tif err != nil {"
  },
  {
    "id" : "378b8d47-4192-4d51-9305-f08491f74771",
    "prId" : 84499,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84499#pullrequestreview-310010995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c12a1b4f-7de7-4ac0-b820-86111c8ef607",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "ditto:\r\n```\r\n/b/f/w/test/e2e/framework/util.go:86:2: imported and not used: \"k8s.io/kubernetes/vendor/k8s.io/utils/net\" as utilnet\r\n```",
        "createdAt" : "2019-10-31T16:23:39Z",
        "updatedAt" : "2019-11-05T07:22:19Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "da89d212dd820815e33d0e0e79780cf5afc3d7d9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +80,84 @@\ttestutils \"k8s.io/kubernetes/test/utils\"\n\timageutils \"k8s.io/kubernetes/test/utils/image\"\n\tuexec \"k8s.io/utils/exec\"\n)\n"
  },
  {
    "id" : "a55a4d20-ec6e-44a8-ac09-a27c9e4bf06e",
    "prId" : 83812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83812#pullrequestreview-303919244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c92a2147-83c0-4223-9ff7-f2e6a714c94e",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "If anything, I think we should move this to the e2epod package in order to decouple this functionality from the framework.\r\nThe method that calls e2epodInitialized is [containerInitInvariant()](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go#L660).\r\nThis method is used a lot in conjunction with [`framework.CheckInvariants()`](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go#L725).",
        "createdAt" : "2019-10-14T14:39:40Z",
        "updatedAt" : "2019-10-14T14:42:51Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "8cc7ad28-7b19-4548-8edd-63a5330f166f",
        "parentId" : "c92a2147-83c0-4223-9ff7-f2e6a714c94e",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "guess for future reviews: it is ok to move a method back into the framework if it is only used by the framework (?)\r\n/hold cancel",
        "createdAt" : "2019-10-16T17:49:22Z",
        "updatedAt" : "2019-10-16T17:49:22Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "75733ef3-4f9b-4d52-a115-8131b1042bce",
        "parentId" : "c92a2147-83c0-4223-9ff7-f2e6a714c94e",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Yes I think if only consumed by framework it's fine to bring it in ",
        "createdAt" : "2019-10-18T14:13:26Z",
        "updatedAt" : "2019-10-18T14:13:26Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "966b4429-52ea-4127-a9ce-f188bb55e0c1",
        "parentId" : "c92a2147-83c0-4223-9ff7-f2e6a714c94e",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "But we should be careful cause it becomes really easy for someone else to export this function later and call it from somewhere else. ",
        "createdAt" : "2019-10-18T14:14:13Z",
        "updatedAt" : "2019-10-18T14:14:14Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "06d41a485c027263384f8d601e472ee7fe3116ee",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +677,681 @@\t}\n\toldInit, _, _ := initialized(oldPod)\n\tnewInit, _, _ := initialized(newPod)\n\tif oldInit && !newInit {\n\t\t// TODO: we may in the future enable resetting initialized = false if the kubelet needs to restart it"
  },
  {
    "id" : "8ba96f3e-2343-4a0a-afbd-22796d5411c7",
    "prId" : 83812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83812#pullrequestreview-301350173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a6e7e10-cc89-4140-b4ec-ffe4c8b74efd",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "[initContainersInvariants](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go#L688) should also be refactored along with `ContainerInitInvariants()` as it is only used by that function.",
        "createdAt" : "2019-10-14T14:42:14Z",
        "updatedAt" : "2019-10-14T14:42:52Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "06d41a485c027263384f8d601e472ee7fe3116ee",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +687,691 @@\nfunc initContainersInvariants(pod *v1.Pod) error {\n\tallInit, initFailed, err := initialized(pod)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "81e6d995-c9fc-4d62-88a9-c77833d1ea65",
    "prId" : 81750,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81750#pullrequestreview-280240074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98a33cce-3aa5-46af-84f6-b3f474c31f71",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "One could also argue that this function doesn't belong into `util.go`. As it works on `TestContext`, wouldn't it be better to put this into `test_context.go`? Perhaps even as a method?\r\n\r\n```\r\nfunc (tc TestContextType) ClusterIsIPv6() bool {\r\n    return tc.IPFamily == \"ipv6\"\r\n}\r\n```\r\n\r\nI'm not asking for that change, just wanted to point it out...\r\n",
        "createdAt" : "2019-08-27T12:30:43Z",
        "updatedAt" : "2019-08-27T12:30:44Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "8b1aa3f3-2a42-4eda-9877-35aa3aeeee25",
        "parentId" : "98a33cce-3aa5-46af-84f6-b3f474c31f71",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I really think you are right, will submit a PR with that change once this is merged if you don't mind.",
        "createdAt" : "2019-08-27T13:29:24Z",
        "updatedAt" : "2019-08-27T13:29:25Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "e6cc6f1e-f1e5-4581-8def-3396a697a940",
        "parentId" : "98a33cce-3aa5-46af-84f6-b3f474c31f71",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "will submit as a follow up once this and your PR disabling the unit test is merged \r\nhttps://github.com/kubernetes/kubernetes/commit/45d6f08868ce2729182aae5734a00e5e27ae08f9",
        "createdAt" : "2019-08-27T13:43:02Z",
        "updatedAt" : "2019-08-27T13:43:03Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "b2a1b03b-82c8-49a1-a83e-2dca6e11b0aa",
        "parentId" : "98a33cce-3aa5-46af-84f6-b3f474c31f71",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Sounds good. :+1: ",
        "createdAt" : "2019-08-27T14:31:07Z",
        "updatedAt" : "2019-08-27T14:31:08Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "930a1321dac4a8178184e8c64c1ab56057ef1862",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +435,439 @@\treturn TestContext.IPFamily == \"ipv6\"\n}\n\n// ProviderIs returns true if the provider is included is the providers. Otherwise false.\nfunc ProviderIs(providers ...string) bool {"
  },
  {
    "id" : "1c0159b5-0fef-40f6-9fb4-2cc69156d055",
    "prId" : 80979,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80979#pullrequestreview-270602688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64bb54a4-2742-417b-90d2-0a01c46f1ce1",
        "parentId" : null,
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "Although `panic` could print the stacktrace but it will exit the program. So using `debug.PrintStack()` instead. ",
        "createdAt" : "2019-08-05T07:44:10Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2ccc2c4fb6dc862098859abf1d6b87993cc102",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1397,1401 @@\t\te2elog.Logf(\"Unexpected error occurred: %v\", err)\n\t\tdebug.PrintStack()\n\t}\n\tgomega.ExpectWithOffset(1+offset, err).NotTo(gomega.HaveOccurred(), explain...)\n}"
  },
  {
    "id" : "d65531cc-a566-4b43-b552-e6a66a80f802",
    "prId" : 80979,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80979#pullrequestreview-271026780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "parentId" : null,
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "If we're doing retries it seems like we expect errors and wouldn't want/need the stacktrace.\r\n\r\nCan we move this down so that we only dump the trace here if we run out of retries and are actually bubbling up the error?",
        "createdAt" : "2019-08-05T16:21:34Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "28eba7fd-7487-45e0-889c-85658822e9fd",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "My thought is that it may have different reasons to cause the retry fail each time. So for each retry I chose to print the stack. ",
        "createdAt" : "2019-08-05T16:26:55Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      },
      {
        "id" : "668afda0-40e4-4a9d-b507-4332020ad46c",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "any comments?",
        "createdAt" : "2019-08-05T18:12:19Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      },
      {
        "id" : "84244626-f7fb-4584-b3a1-d38d293470ac",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "Although that _can_ happen; it has never been the case in my experience. Usually the same error happens 5 times so only the last one matters. OR you get an \"error\" which was somewhat expected (like polling for a service to come up) so you _see_ 4 errors (and now 4 entire stack traces) even though the test goes onto pass.\r\n\r\nMy preference would still be for just the trace at the end, but I don't feel _that_ strongly if you prefer this.",
        "createdAt" : "2019-08-05T18:46:41Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "75755d47-05ee-4afc-935f-d3c3272cfb46",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "This make more sense. I will move the printstack() out of the loop",
        "createdAt" : "2019-08-05T18:57:06Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      },
      {
        "id" : "b38e3ef8-7489-4cf2-80e9-6086f8ac1e93",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "Let me know when you've made the changes and I'll re-review and remove the hold",
        "createdAt" : "2019-08-05T19:25:18Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "53dfbea9-00b9-49e2-8b5a-c9391f9995f5",
        "parentId" : "1a829020-47b5-4117-b78a-eb92439915f7",
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "Ready to re-review",
        "createdAt" : "2019-08-05T21:59:07Z",
        "updatedAt" : "2019-08-21T18:29:20Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2ccc2c4fb6dc862098859abf1d6b87993cc102",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1412,1416 @@\t}\n\tif err != nil {\n\t\tdebug.PrintStack()\n\t}\n\tgomega.ExpectWithOffset(1, err).NotTo(gomega.HaveOccurred(), explain...)"
  },
  {
    "id" : "34eebf55-c473-46f9-8d12-8776499bcccb",
    "prId" : 80213,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80213#pullrequestreview-262705459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c63ca41e-5a01-4681-b3a5-b630715930e7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i don't think the variadic string list is needed here, but looks like this is following the existing pattern. so it's OK.\r\n",
        "createdAt" : "2019-07-16T22:00:15Z",
        "updatedAt" : "2019-08-21T15:31:19Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812720148f2f15d8fe66052ca972628588cbe3e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +352,356 @@\n// SkipIfNodeOSDistroIs skips if the node OS distro is included in the unsupportedNodeOsDistros.\nfunc SkipIfNodeOSDistroIs(unsupportedNodeOsDistros ...string) {\n\tif NodeOSDistroIs(unsupportedNodeOsDistros...) {\n\t\tskipInternalf(1, \"Not supported for node OS distro %v (is %s)\", unsupportedNodeOsDistros, TestContext.NodeOSDistro)"
  },
  {
    "id" : "7412dab6-41b5-4222-b21d-384e2382805f",
    "prId" : 79909,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79909#pullrequestreview-279458875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3c2b903-a76e-43a4-97c4-9f7d33373592",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "This makes `test/e2e/framework` depend on some file that external users of the package won't have.\r\n\r\nBut speaking of `test/images/clusterapi-tester/pod.yaml`, where is that anyway? I don't find it in current master (commit 0fbfa755d3960eaa0ab3ea38453a934d2188e7f8) of Kubernetes.\r\n",
        "createdAt" : "2019-07-19T14:41:21Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "d3d65e05-a28b-492d-bea6-6198d86644b9",
        "parentId" : "e3c2b903-a76e-43a4-97c4-9f7d33373592",
        "authorId" : "19ec52fe-1baa-4005-97b2-df4dc4a499de",
        "body" : "I couldn't find it as well. I'm trying to check when it was removed and why.",
        "createdAt" : "2019-08-05T19:34:26Z",
        "updatedAt" : "2019-08-05T19:34:26Z",
        "lastEditedBy" : "19ec52fe-1baa-4005-97b2-df4dc4a499de",
        "tags" : [
        ]
      },
      {
        "id" : "e946d701-c2e1-4e96-8f60-4e2d462054d0",
        "parentId" : "e3c2b903-a76e-43a4-97c4-9f7d33373592",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "To me `runKubernetesServiceTestContainer` looks like dead code that cannot work because of the missing `test/images/clusterapi-tester/pod.yaml`. As no-one seems to have noticed, I propose to delete the entire function.\r\n",
        "createdAt" : "2019-08-26T08:17:45Z",
        "updatedAt" : "2019-08-26T08:17:45Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f21b692e48f31aa8a40bb96e752b2947305ff4c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +386,390 @@// to flip to Ready, log its output and delete it.\nfunc runKubernetesServiceTestContainer(c clientset.Interface, ns string) {\n\tpath := \"test/images/clusterapi-tester/pod.yaml\"\n\te2elog.Logf(\"Parsing pod from %v\", path)\n\tp, err := manifest.PodFromManifest(path)"
  },
  {
    "id" : "f33567f8-e482-454d-bcc0-63e2d033d3cb",
    "prId" : 79909,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79909#pullrequestreview-270459716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3b4bae8-9724-4163-9c8a-b6f5b0041688",
        "parentId" : null,
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "I am not sure whether it is appropriate to put this into `util.go`, as we are still cleaning it. \r\n/cc @andrewsykim ",
        "createdAt" : "2019-08-02T02:03:05Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "bd34265d-a5ad-44b3-aaad-518bda1c8b8e",
        "parentId" : "d3b4bae8-9724-4163-9c8a-b6f5b0041688",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I agree it's not ideal but seems okay because we're at least removing it from `test/e2e/e2e.go`. Any suggestions where else it should go? ",
        "createdAt" : "2019-08-02T02:06:28Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "1bfb08f8-ab18-4066-a62e-61d703a6bac1",
        "parentId" : "d3b4bae8-9724-4163-9c8a-b6f5b0041688",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "How about putting this in `initialize.go` (or `setup.go`) ? ",
        "createdAt" : "2019-08-02T02:15:15Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "8ce56f72-2b99-44cb-b695-6f583e4b380a",
        "parentId" : "d3b4bae8-9724-4163-9c8a-b6f5b0041688",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "It's a very generic function, to me it doesn't make sense there. ",
        "createdAt" : "2019-08-02T04:18:06Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "e63fbe59-8268-469b-845c-12eed1e7dc99",
        "parentId" : "d3b4bae8-9724-4163-9c8a-b6f5b0041688",
        "authorId" : "19ec52fe-1baa-4005-97b2-df4dc4a499de",
        "body" : "Interesting that this code actually lived in `util.go` and it was moved on https://github.com/kubernetes/kubernetes/commit/79202656bc34ecde65a3abb45dc54ef4ec480342",
        "createdAt" : "2019-08-03T13:18:24Z",
        "updatedAt" : "2019-08-05T19:25:51Z",
        "lastEditedBy" : "19ec52fe-1baa-4005-97b2-df4dc4a499de",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f21b692e48f31aa8a40bb96e752b2947305ff4c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +385,389 @@// Run a test container to try and contact the Kubernetes api-server from a pod, wait for it\n// to flip to Ready, log its output and delete it.\nfunc runKubernetesServiceTestContainer(c clientset.Interface, ns string) {\n\tpath := \"test/images/clusterapi-tester/pod.yaml\"\n\te2elog.Logf(\"Parsing pod from %v\", path)"
  },
  {
    "id" : "73c737d9-8542-49a6-8c6b-121086f454f6",
    "prId" : 79862,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79862#pullrequestreview-259051442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11d00dff-87e0-4345-b45f-e49f2284b3a1",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Nice function :-)",
        "createdAt" : "2019-07-08T17:32:38Z",
        "updatedAt" : "2019-07-10T13:36:42Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3158b2c71d67187777cd02f0ec296deb7e168ae",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1353,1357 @@}\n\n// ExpectNotEqual expects the specified two are not the same, otherwise an exception raises\nfunc ExpectNotEqual(actual interface{}, extra interface{}, explain ...interface{}) {\n\tgomega.Expect(actual).NotTo(gomega.Equal(extra), explain...)"
  },
  {
    "id" : "785d4c9d-27e3-4e28-8cca-6a3e1a404f8d",
    "prId" : 79862,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79862#pullrequestreview-260183357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1eeacdbd-6f91-4daa-8ea8-b2bd1eba4fd9",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I know we are just being consistent with `ExpectEqual` here, but curious why it's called `extra` instead of something like `expected`?",
        "createdAt" : "2019-07-10T15:37:49Z",
        "updatedAt" : "2019-07-10T15:37:49Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3158b2c71d67187777cd02f0ec296deb7e168ae",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1354,1358 @@\n// ExpectNotEqual expects the specified two are not the same, otherwise an exception raises\nfunc ExpectNotEqual(actual interface{}, extra interface{}, explain ...interface{}) {\n\tgomega.Expect(actual).NotTo(gomega.Equal(extra), explain...)\n}"
  },
  {
    "id" : "c739bf2a-b40b-4ead-9af6-0a50453f49d9",
    "prId" : 78282,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78282#pullrequestreview-241583270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b0fd00-b40e-4016-adac-24153d652b8a",
        "parentId" : null,
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "This const is not in use so removed",
        "createdAt" : "2019-05-24T07:12:07Z",
        "updatedAt" : "2019-06-18T00:01:55Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1c346c2959287120585eba7c06cff8a8dc5444e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +134,138 @@\t// PollShortTimeout is the short timeout value in polling.\n\tPollShortTimeout = 1 * time.Minute\n\n\t// ServiceAccountProvisionTimeout is how long to wait for a service account to be provisioned.\n\t// service accounts are provisioned after namespace creation"
  },
  {
    "id" : "2ef5afd0-bc13-460a-84e2-aaa31147af3d",
    "prId" : 77794,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77794#pullrequestreview-273436993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fceb5bd8-4ec2-4e37-8876-e81adb8e20cd",
        "parentId" : null,
        "authorId" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "body" : "Why do we need a var for this? it's only used once",
        "createdAt" : "2019-08-10T00:04:36Z",
        "updatedAt" : "2019-08-16T03:45:17Z",
        "lastEditedBy" : "580b4924-2623-4aee-8bbf-3e1735a9dc88",
        "tags" : [
        ]
      },
      {
        "id" : "d32aace0-4cfc-4f51-a5ba-bc63817bac50",
        "parentId" : "fceb5bd8-4ec2-4e37-8876-e81adb8e20cd",
        "authorId" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "body" : "It was used in multiple places. I replaced them all with this var",
        "createdAt" : "2019-08-10T19:29:17Z",
        "updatedAt" : "2019-08-16T03:45:17Z",
        "lastEditedBy" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "tags" : [
        ]
      }
    ],
    "commit" : "b158098401f2a85ffa8af55e4b47155d02a22e0f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +210,214 @@\n\t// AgnHostImage is the image URI of AgnHost\n\tAgnHostImage = imageutils.GetE2EImage(imageutils.Agnhost)\n\n\t// For parsing Kubectl version for version-skewed testing."
  },
  {
    "id" : "0316356e-7f82-4a07-8808-50e4e4d23ec1",
    "prId" : 77794,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77794#pullrequestreview-277327880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "766dcbf2-86d5-4df5-a73b-8de62013a17c",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Why do we need to change here?\r\nDoesn't anghost image support `/bin/sleep`?\r\n",
        "createdAt" : "2019-08-19T23:51:24Z",
        "updatedAt" : "2019-08-20T00:02:25Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "4c129fe8-6ac2-43f3-9a7d-e95760e0155f",
        "parentId" : "766dcbf2-86d5-4df5-a73b-8de62013a17c",
        "authorId" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "body" : "The ```AgnHostImage``` has this [```pause```](https://github.com/kubernetes/kubernetes/tree/master/test/images/agnhost#pause) binary specifically for this. ",
        "createdAt" : "2019-08-20T04:56:46Z",
        "updatedAt" : "2019-08-20T04:56:46Z",
        "lastEditedBy" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "tags" : [
        ]
      },
      {
        "id" : "ba39f048-792a-4c20-b08e-a7a424a90dec",
        "parentId" : "766dcbf2-86d5-4df5-a73b-8de62013a17c",
        "authorId" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "body" : "From the link:\r\n\r\n**pause**\r\nIt will pause the execution of the binary. This can be used for containers which have to be kept in a Running state for various purposes, including executing other agnhost commands.\r\n\r\nUsage:\r\n\r\n    kubectl exec test-agnhost -- /agnhost pause\r\n",
        "createdAt" : "2019-08-20T04:57:14Z",
        "updatedAt" : "2019-08-20T04:58:09Z",
        "lastEditedBy" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "tags" : [
        ]
      },
      {
        "id" : "4c53b57b-1b01-46d6-b247-21cdfab52877",
        "parentId" : "766dcbf2-86d5-4df5-a73b-8de62013a17c",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "I got it, thanks for your explanation.",
        "createdAt" : "2019-08-20T17:35:24Z",
        "updatedAt" : "2019-08-20T17:35:24Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "b158098401f2a85ffa8af55e4b47155d02a22e0f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +479,483 @@\t\t\t\t\tName:    \"detector\",\n\t\t\t\t\tImage:   AgnHostImage,\n\t\t\t\t\tCommand: []string{\"pause\"},\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "fa534f06-180f-4bf9-88c8-1b69c0da71b9",
    "prId" : 77794,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77794#pullrequestreview-277416419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98e864f4-b270-40ab-a43c-087ff7ff2420",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "`-u` option is not specified, so TCP is always used instead of ICMP and UDP, right?",
        "createdAt" : "2019-08-20T00:01:45Z",
        "updatedAt" : "2019-08-20T00:02:25Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "9799b68c-28ce-4e84-bfc8-b827eb7e140c",
        "parentId" : "98e864f4-b270-40ab-a43c-087ff7ff2420",
        "authorId" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "body" : "Yes. By default is TCP.",
        "createdAt" : "2019-08-20T04:59:06Z",
        "updatedAt" : "2019-08-20T04:59:07Z",
        "lastEditedBy" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "tags" : [
        ]
      },
      {
        "id" : "02683b3d-798f-4a2c-91a4-aabb81f5b92e",
        "parentId" : "98e864f4-b270-40ab-a43c-087ff7ff2420",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Then the PR title should be `Use TCP instead of ICMP to check outbound connectivity` without `UDP`.",
        "createdAt" : "2019-08-20T17:38:02Z",
        "updatedAt" : "2019-08-20T17:38:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "c4479163-87c0-4e43-bb47-94f040d27795",
        "parentId" : "98e864f4-b270-40ab-a43c-087ff7ff2420",
        "authorId" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "body" : "Thanks for the suggestion. I have changed the PR title. Will submit another PR is UDP is needed later.",
        "createdAt" : "2019-08-20T20:20:55Z",
        "updatedAt" : "2019-08-20T20:20:56Z",
        "lastEditedBy" : "6b8b87b4-0d0d-4216-8a32-663dc0069521",
        "tags" : [
        ]
      }
    ],
    "commit" : "b158098401f2a85ffa8af55e4b47155d02a22e0f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +2889,2893 @@\tcommand := []string{\n\t\t\"nc\",\n\t\t\"-vz\",\n\t\t\"-w\", strconv.Itoa(timeout),\n\t\thost,"
  },
  {
    "id" : "d9ab4b3e-9734-4f23-b212-4ebbf57dc8f6",
    "prId" : 76508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76508#pullrequestreview-226598876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4089bf96-80d6-4442-8a51-963b2d0804f4",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just to note that long term we need to decouple the framework from the parent folder (test).\r\nthis utility function seems fine for now, but are there going to be other consumers of this image apart from `It(\"should support configurable pod DNS....`?",
        "createdAt" : "2019-04-14T18:34:21Z",
        "updatedAt" : "2019-05-03T14:42:39Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "7af06823-b27d-49b6-9548-4987da95df45",
        "parentId" : "4089bf96-80d6-4442-8a51-963b2d0804f4",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Keeping in mind that this image is supposed to be extendable and used whenever we have significant differences between Windows and Linux (especially commands), yes.",
        "createdAt" : "2019-04-15T11:54:47Z",
        "updatedAt" : "2019-05-03T14:42:39Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7598c791fbcd9862fd7e209f72948ec57a2d20e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +4885,4889 @@\t\t\t\t{\n\t\t\t\t\tName:  \"agnhost\",\n\t\t\t\t\tImage: imageutils.GetE2EImage(imageutils.Agnhost),\n\t\t\t\t\tArgs:  args,\n\t\t\t\t},"
  },
  {
    "id" : "cef9abc9-2869-4373-9be8-b882a0d8f9f3",
    "prId" : 76156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76156#pullrequestreview-224566677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cda029d-a76b-4f0e-914f-ad2ae54b2754",
        "parentId" : null,
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "nit: This could lead to confusion because of the pods vs irrelevant pods. You're the expert on this part so if this is the better message I'll defer to you but it seems like maybe it would be more clear to say:\r\n```\r\nexpected to find %d relevant pods but found only %d relevant pods (%d total)\r\n```\r\n\r\nUpdate: I see you're just moving this from another place and this isn't your own, new method; so just to reiterate this is a nit. Not a blocker.",
        "createdAt" : "2019-04-09T13:35:40Z",
        "updatedAt" : "2019-04-12T23:00:58Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "c626222a-7eac-4c80-b98d-0d891d27a3d9",
        "parentId" : "4cda029d-a76b-4f0e-914f-ad2ae54b2754",
        "authorId" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "body" : "I think there should be less confusion with the renamed function to `WaitForNRestartablePods`. ",
        "createdAt" : "2019-04-09T18:01:20Z",
        "updatedAt" : "2019-04-12T23:00:58Z",
        "lastEditedBy" : "34b7b34f-b1de-4d62-93d4-75a964940fff",
        "tags" : [
        ]
      }
    ],
    "commit" : "8175579a0cebefdc16f84aeb27f6ccd891afab81",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +3319,3323 @@\t\tpods = FilterNonRestartablePods(allPods)\n\t\tif len(pods) != expect {\n\t\t\terrLast = fmt.Errorf(\"expected to find %d pods but found only %d\", expect, len(pods))\n\t\t\tLogf(\"Error getting pods: %v\", errLast)\n\t\t\treturn false, nil"
  },
  {
    "id" : "9093cc10-2f03-4aea-8b65-dfb10cb14173",
    "prId" : 74314,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74314#pullrequestreview-235719632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b6c7ab6-8dfc-4382-97a7-b22956d934c4",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm genuinely surprised this has not existed for a while. ",
        "createdAt" : "2019-05-09T17:10:10Z",
        "updatedAt" : "2019-05-09T17:11:03Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "510570f8-5b23-4a7b-89c1-f381c4367d3c",
        "parentId" : "5b6c7ab6-8dfc-4382-97a7-b22956d934c4",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Hehe, yeah right. Other guys also said the same thing.\r\nThanks for your approval anyways :-)",
        "createdAt" : "2019-05-09T17:22:54Z",
        "updatedAt" : "2019-05-09T17:22:55Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "436544488b865ef801b1875b40895e1ee30b0fea",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2040,2044 @@\n// ExpectError expects an error happens, otherwise an exception raises\nfunc ExpectError(err error, explain ...interface{}) {\n\tgomega.Expect(err).To(gomega.HaveOccurred(), explain...)\n}"
  },
  {
    "id" : "4db10c52-eb15-465b-984b-dcac858df113",
    "prId" : 72054,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72054#pullrequestreview-185094697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86d24387-aa12-4af9-b542-85aa773ba205",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm not following this. returning false, nil here, means we will retry again (and will probably get the same result). And in the end we will timeout.\r\n\r\nI think you should return some kind of error here, which you will interpret differently outside.",
        "createdAt" : "2018-12-14T12:43:10Z",
        "updatedAt" : "2018-12-14T12:43:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "58e889de-308b-4212-b35e-2910fc253468",
        "parentId" : "86d24387-aa12-4af9-b542-85aa773ba205",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "Returning false here means that we will retry and with high probability pick another name (name is generated in each loop separately).",
        "createdAt" : "2018-12-14T12:47:56Z",
        "updatedAt" : "2018-12-14T12:47:57Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      },
      {
        "id" : "de5a8160-03b2-45d6-8fbf-b08540d7090f",
        "parentId" : "86d24387-aa12-4af9-b542-85aa773ba205",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "aah ok - we're generating name inside. Sorry. That makes sense now.",
        "createdAt" : "2018-12-14T12:49:34Z",
        "updatedAt" : "2018-12-14T12:50:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3223d9bc94d26cdf4cdbfa30a650ff48493d02d6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1061,1065 @@\t\tif err == nil {\n\t\t\t// Already taken\n\t\t\treturn false, nil\n\t\t}\n\t\tif apierrs.IsNotFound(err) {"
  },
  {
    "id" : "e568015f-7b2b-4550-badf-526505176f63",
    "prId" : 71468,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71468#pullrequestreview-204491736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c92172d7-46d5-4799-b7e5-7c0dcfc4679d",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "s/hostexec/exec",
        "createdAt" : "2018-12-05T02:05:47Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "87f2ff24-f5c7-4a68-bb36-5685c1749158",
        "parentId" : "c92172d7-46d5-4799-b7e5-7c0dcfc4679d",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Hm, debatable. I think \"hostexec pod\" refers to the fact that the pod is using the hostexec image, which is still true.",
        "createdAt" : "2018-12-07T11:42:23Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "7e094e0f-fe85-44e6-8600-74dd288a513e",
        "parentId" : "c92172d7-46d5-4799-b7e5-7c0dcfc4679d",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "why did the function name change?",
        "createdAt" : "2019-02-16T00:42:44Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e2582c673442bd6416e3cb5ea1a9a103965631",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3383,3387 @@}\n\n// NewExecPodSpec returns the pod spec of hostexec pod\nfunc NewExecPodSpec(ns, name string, hostNetwork bool) *v1.Pod {\n\timmediate := int64(0)"
  },
  {
    "id" : "820c0fca-a133-4fd4-9c18-61991ce40d7a",
    "prId" : 71428,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71428#pullrequestreview-178459300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "440f9444-8c0e-412b-a0be-21dc4eb23587",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "This fix looks good, as does the other fix.  Are they related though?  Could these be separate PRs?\r\n\r\nGiven the urgency, I don't object to making these into a single PR, just trying to clarify!",
        "createdAt" : "2018-11-26T18:29:18Z",
        "updatedAt" : "2018-11-26T18:29:19Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "bad2fc93-2b60-46dc-806a-50fea96c00e3",
        "parentId" : "440f9444-8c0e-412b-a0be-21dc4eb23587",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "First fix will address the root cause. Second one should reduce the time for the entire tests, which will reduce the number of concurrent test run, which I guess will trigger another error. So, the second one  isn't a must to address this issue.\r\n(Without second fix, each test wait for 5 minutes just to ensure that it won't become running. As a result, these 4 tests will likely to run at the same time. I'm not sure that it actually affects each other though.)",
        "createdAt" : "2018-11-26T19:24:44Z",
        "updatedAt" : "2018-11-26T19:24:45Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "790de995f35c53b79d0f5d7bf65e3bf1d0c5a197",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1502,1506 @@\t\t\t}\n\t\t}\n\t\treturn false, nil\n\t}\n}"
  },
  {
    "id" : "762a0587-13cb-4741-a061-1d432b15a19c",
    "prId" : 71036,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71036#pullrequestreview-175799238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aacda6a3-c507-4bc3-bb04-394a0ba38c40",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Please add comment what this function does and why.",
        "createdAt" : "2018-11-16T09:10:29Z",
        "updatedAt" : "2018-11-28T16:14:01Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "4bffee84-56e4-44b8-a15e-ea3f09278e7f",
        "parentId" : "aacda6a3-c507-4bc3-bb04-394a0ba38c40",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Done",
        "createdAt" : "2018-11-16T13:39:03Z",
        "updatedAt" : "2018-11-28T16:14:01Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0df9c0adf6bb738060a44a993cdf72c660fc1ece",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5256,5260 @@// GetFileModeRegex returns a file mode related regex which should be matched by the mounttest pods' output.\n// If the given mask is nil, then the regex will contain the default OS file modes, which are 0644 for Linux and 0775 for Windows.\nfunc GetFileModeRegex(filePath string, mask *int32) string {\n\tvar (\n\t\tlinuxMask   int32"
  },
  {
    "id" : "d576343c-b031-4748-924a-4a61eae9d205",
    "prId" : 71036,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71036#pullrequestreview-178685906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "518ee99f-4533-40f3-83c7-588838bf4e35",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "the comment says 0755, but this is 0775 - which is incorrect?",
        "createdAt" : "2018-11-26T20:36:34Z",
        "updatedAt" : "2018-11-28T16:14:01Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8b8bc355-bb23-41e0-ae1f-189f4957b2dc",
        "parentId" : "518ee99f-4533-40f3-83c7-588838bf4e35",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "0775, my bad. :)",
        "createdAt" : "2018-11-27T09:43:10Z",
        "updatedAt" : "2018-11-28T16:14:01Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0df9c0adf6bb738060a44a993cdf72c660fc1ece",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +5263,5267 @@\tif mask == nil {\n\t\tlinuxMask = int32(0644)\n\t\twindowsMask = int32(0775)\n\t} else {\n\t\tlinuxMask = *mask"
  },
  {
    "id" : "ac0da5df-b47c-4f8c-b3fa-9de10d75448e",
    "prId" : 70939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70939#pullrequestreview-174920734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ad649f9-2126-45a5-bbbd-63f66a667b88",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "why do we need this version with `caller` as an argument? it looks like it's always called with 1.",
        "createdAt" : "2018-11-13T19:20:41Z",
        "updatedAt" : "2018-11-13T19:20:41Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "cfb572da-13c9-4e7b-a3a5-685363baaf01",
        "parentId" : "4ad649f9-2126-45a5-bbbd-63f66a667b88",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "A helper that called a helper that calls skip would need to call it with 2.  We don't have one yet, but I was planning on adding one for cleaning up some of the ugly skip code in the apimachinery tests.  I could change this in the follow up, but anyone who hardcodes caller count is usually wrong.",
        "createdAt" : "2018-11-14T15:31:09Z",
        "updatedAt" : "2018-11-14T15:31:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "68090bf078dcc5bf37ced5b343218dc24b165080",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +287,291 @@}\n\nfunc skipInternalf(caller int, format string, args ...interface{}) {\n\tmsg := fmt.Sprintf(format, args...)\n\tlog(\"INFO\", msg)"
  },
  {
    "id" : "7e1d4945-ccac-4609-b865-7df5101802f0",
    "prId" : 70939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70939#pullrequestreview-180548002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89183459-9c6a-4342-81d1-a6ee2eb2eb02",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "ok, alternate question: why change these to `skipInternal` instead of leaving them as `Skipf`?",
        "createdAt" : "2018-11-15T00:30:00Z",
        "updatedAt" : "2018-11-15T00:30:01Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a03698f7-614d-4cb4-a0fb-45ad1a7b1da4",
        "parentId" : "89183459-9c6a-4342-81d1-a6ee2eb2eb02",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We want the Skip to be recorded at the place that calls Skip so the user sees the input location.  ",
        "createdAt" : "2018-11-19T01:27:33Z",
        "updatedAt" : "2018-11-19T01:27:33Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "25791106-9a25-4ce2-84c2-3c014eefe3b8",
        "parentId" : "89183459-9c6a-4342-81d1-a6ee2eb2eb02",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "then when would someone want to use `Skipf`?",
        "createdAt" : "2018-11-26T19:54:56Z",
        "updatedAt" : "2018-11-26T19:54:56Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "5ab1ec75-f914-4ad1-ac93-c5a16fd57d92",
        "parentId" : "89183459-9c6a-4342-81d1-a6ee2eb2eb02",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "When they are calling it from outside this package - Skipf is correct then.",
        "createdAt" : "2018-12-02T05:12:10Z",
        "updatedAt" : "2018-12-17T23:04:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "68090bf078dcc5bf37ced5b343218dc24b165080",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +299,303 @@func SkipUnlessNodeCountIsAtLeast(minNodeCount int) {\n\tif TestContext.CloudConfig.NumNodes < minNodeCount {\n\t\tskipInternalf(1, \"Requires at least %d nodes (not %d)\", minNodeCount, TestContext.CloudConfig.NumNodes)\n\t}\n}"
  },
  {
    "id" : "814e255e-7a1e-47ba-8a49-356ce740b534",
    "prId" : 68792,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68792#pullrequestreview-188373090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e76ee3e-54eb-4316-8d5b-0bd0794273fa",
        "parentId" : null,
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "To avoid complications where _some_ nodes have external IPs but not all of them, I just utilized the same fallback logic I saw (and was happy with personally) used: check if there are _no_ external IPs set.\r\n\r\nThis seems pretty reasonable to me since the setting of the external IPs is provider specific (if I'm not mistaken) so in general they should either all have them or none of them will.",
        "createdAt" : "2018-09-18T16:29:33Z",
        "updatedAt" : "2018-12-29T02:36:14Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "c3383cf4-3075-4042-9cc0-6d09e1a6f436",
        "parentId" : "3e76ee3e-54eb-4316-8d5b-0bd0794273fa",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "can you add this note to a comment in the code as well?",
        "createdAt" : "2018-12-28T21:36:33Z",
        "updatedAt" : "2018-12-29T02:36:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "23a7538c4dc05b7552cc003eb37c72b0f045fbf5",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +3276,3280 @@\t// should be adequate since the setting of the external IPs is provider\n\t// specific: they should either all have them or none of them will.\n\tif len(hosts) == 0 {\n\t\tLogf(\"No external IP address on nodes, falling back to internal IPs\")\n\t\thosts = NodeAddresses(nodelist, v1.NodeInternalIP)"
  },
  {
    "id" : "f8286147-84a2-47e2-9b9c-aedf40b54347",
    "prId" : 67373,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67373#pullrequestreview-146842287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a2c98e-a6c0-4fb2-9465-58f53216762e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This expects that all daemonsets have been applied and that the ds controller has synced. Are we concerned about a race?",
        "createdAt" : "2018-08-15T20:46:53Z",
        "updatedAt" : "2018-08-16T13:20:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "6c32adb2-bc79-4f06-a1d2-4b9bca615ca4",
        "parentId" : "83a2c98e-a6c0-4fb2-9465-58f53216762e",
        "authorId" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "body" : "This code is running fairly late (when all nodes become ready), so I think that there is no real risk of raciness.\r\n\r\nIf we see that it happens in test runs, I will add some additional logic here.",
        "createdAt" : "2018-08-16T13:28:56Z",
        "updatedAt" : "2018-08-16T13:28:56Z",
        "lastEditedBy" : "5af3a49e-2ce9-4046-8a13-ee66b8cbca2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e04b4f31b9c315505aded9f556aa18167ee0beb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +737,741 @@// (defined as all but 'allowedNotReadyNodes' pods associated with that\n// daemonset are ready).\nfunc WaitForDaemonSets(c clientset.Interface, ns string, allowedNotReadyNodes int32, timeout time.Duration) error {\n\tstart := time.Now()\n\tLogf(\"Waiting up to %v for all daemonsets in namespace '%s' to start\","
  },
  {
    "id" : "d136360a-e673-494f-90cb-ef64012dd605",
    "prId" : 62465,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62465#pullrequestreview-111605441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c3c34e9-4232-4b42-b355-df8c1559d63f",
        "parentId" : null,
        "authorId" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "body" : "Is that actually equivalent to the previous version? In old code it's passing what looks like a specific selector and here you just pass fields.Everything?",
        "createdAt" : "2018-04-12T12:50:22Z",
        "updatedAt" : "2018-04-12T13:38:18Z",
        "lastEditedBy" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "tags" : [
        ]
      },
      {
        "id" : "c9aa76d2-f742-4d95-8e4b-3ba45cc91414",
        "parentId" : "7c3c34e9-4232-4b42-b355-df8c1559d63f",
        "authorId" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "body" : "Ok, please ignore, just saw the method below.",
        "createdAt" : "2018-04-12T12:51:04Z",
        "updatedAt" : "2018-04-12T13:38:18Z",
        "lastEditedBy" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cb99318d2f6d71e8632a7293553896f947d090b",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +3072,3076 @@\t}\n\n\tps, err := testutils.NewPodStore(c, ns, selector, fields.Everything())\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "52ebc1b2-a6c4-4685-9e84-950480473462",
    "prId" : 61565,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61565#pullrequestreview-108134395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d3a674a-5f9a-4965-8971-e084fc9221b0",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "In both cases here and few lines below you can just return the error with the false. This way the error will bubble up to `wait.ExponentialBackoff` caller. It'll be either your error or the timeout error returned by the wait, but in both cases you'll have a clear information what happened, better than the current.  ",
        "createdAt" : "2018-03-29T08:09:29Z",
        "updatedAt" : "2018-03-29T08:09:43Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "3e5c1416-5be6-42d1-be8d-67d96880c382",
        "parentId" : "4d3a674a-5f9a-4965-8971-e084fc9221b0",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "> you can just return the error with the false.\r\n\r\nIf you take a closer look at `wait.ExponentialBackoff`, you will see it won't retry at all when the condition function returns an error.\r\n",
        "createdAt" : "2018-03-29T16:20:07Z",
        "updatedAt" : "2018-03-29T16:20:07Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "fe0047ef-07fa-425b-bc25-c37d285a1ac5",
        "parentId" : "4d3a674a-5f9a-4965-8971-e084fc9221b0",
        "authorId" : "02186dc1-661d-4676-abc0-1cb761b7a64e",
        "body" : "@soltysh  In my previous change, the error was returned with false . Then Mengqi pointed out that `wait.ExponentialBackoff` will exit immediately when it sees an error, which causes the retry end early.",
        "createdAt" : "2018-03-29T17:15:09Z",
        "updatedAt" : "2018-03-29T17:15:10Z",
        "lastEditedBy" : "02186dc1-661d-4676-abc0-1cb761b7a64e",
        "tags" : [
        ]
      },
      {
        "id" : "ff6844dc-ee72-4ad9-a77c-7559ededd325",
        "parentId" : "4d3a674a-5f9a-4965-8971-e084fc9221b0",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Right, sorry for the confusion. ",
        "createdAt" : "2018-03-29T17:22:26Z",
        "updatedAt" : "2018-03-29T17:22:26Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eeda67232cea8917b9ab38b0e21a605384f87a18",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2079,2083 @@\t\t\tresources := RunKubectlOrDie(\"get\", \"rc,svc\", \"-l\", selector, \"--no-headers\", nsArg)\n\t\t\tif resources != \"\" {\n\t\t\t\te = fmt.Errorf(\"Resources left running after stop:\\n%s\", resources)\n\t\t\t\treturn false, nil\n\t\t\t}"
  },
  {
    "id" : "b4f092c8-9bcc-4152-816e-e64171690be2",
    "prId" : 61379,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61379#pullrequestreview-105447220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b567602-455c-4971-99da-9b30eed9550e",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I am not sure about this line. Could you please clarify why you need it here and not in its original place? I wonder if it changes anything w.r.t. these way logs are parsed for display in test grid.\r\n\r\n@krzyzacy could you please take a look or point to someone who might be able to advice here?",
        "createdAt" : "2018-03-20T03:21:13Z",
        "updatedAt" : "2018-03-21T17:48:59Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "04a4ff31-16b3-431b-b065-2fa7bc7fbf41",
        "parentId" : "6b567602-455c-4971-99da-9b30eed9550e",
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : "I have no clue here... looks like @janetkuo wrote the timeout logic here in https://github.com/nikhiljindal/kubernetes/commit/13718846d8fd33d7543c448ac2d33184e25431d4?",
        "createdAt" : "2018-03-20T03:53:55Z",
        "updatedAt" : "2018-03-21T17:48:59Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      },
      {
        "id" : "569e90dc-f92f-45ac-8f03-2687e0cfcedd",
        "parentId" : "6b567602-455c-4971-99da-9b30eed9550e",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I changed it here so that stdout is printed for all callers. We were not consistent before this change.\r\n\r\nI dont expect this to change the way logs are parsed by testgrid. @krzyzacy can confirm",
        "createdAt" : "2018-03-20T03:53:56Z",
        "updatedAt" : "2018-03-21T17:48:59Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "65acdcd6-dd16-4b78-8ae2-291634f26028",
        "parentId" : "6b567602-455c-4971-99da-9b30eed9550e",
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : "yeah testgrid does not parsing log output",
        "createdAt" : "2018-03-20T04:56:15Z",
        "updatedAt" : "2018-03-21T17:48:59Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      },
      {
        "id" : "5dfe06fc-4b12-41f3-96b4-8060651c16ea",
        "parentId" : "6b567602-455c-4971-99da-9b30eed9550e",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Thanks for confirming @krzyzacy ",
        "createdAt" : "2018-03-20T17:06:42Z",
        "updatedAt" : "2018-03-21T17:48:59Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd6b5c80927a573e4db9f0d42746a7f06b219a4c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +2206,2210 @@\t}\n\tLogf(\"stderr: %q\", stderr.String())\n\tLogf(\"stdout: %q\", stdout.String())\n\treturn stdout.String(), nil\n}"
  },
  {
    "id" : "1ec73fb8-c855-4178-a3fb-986f7d2727e5",
    "prId" : 58697,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58697#pullrequestreview-90865967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9695b16b-3a00-45d7-838f-898ad2d029ba",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "maybe add a comment why we add this",
        "createdAt" : "2018-01-23T15:32:35Z",
        "updatedAt" : "2018-01-23T16:01:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "91ba8c37d037510baed6e152dbd14cdf2367cf91",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1201,1205 @@\t\t\t\tcontinue\n\t\t\t}\n\t\t\t// skip unavailable servers\n\t\t\tif apierrs.IsServiceUnavailable(err) {\n\t\t\t\tcontinue"
  },
  {
    "id" : "10a80d3b-3cc1-4852-b312-e52d29f67dcb",
    "prId" : 58683,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58683#pullrequestreview-92476025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57fb00a9-ad37-44ff-9f99-c58ca0eee697",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Just an optimization: I assume if a pod is not `Pending`, it means its schedulable. Correct me if I am wrong, but this callback could return an error as soon as the pod leaves Pending phase, because it means that it was possible to schedule this pod and it will never come back to Pending/Unschedulable.",
        "createdAt" : "2018-01-30T08:38:00Z",
        "updatedAt" : "2018-01-31T09:49:22Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "52a43b19d8dea27dd6e7047efb26a19df87a447d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1556,1560 @@\t\t// Only consider Failed pods. Successful pods will be deleted and detected in\n\t\t// waitForPodCondition's Get call returning `IsNotFound`\n\t\tif pod.Status.Phase == v1.PodPending {\n\t\t\tfor _, cond := range pod.Status.Conditions {\n\t\t\t\tif cond.Type == v1.PodScheduled && cond.Status == v1.ConditionFalse && cond.Reason == \"Unschedulable\" {"
  },
  {
    "id" : "c2981c89-a57a-4ee7-bd46-0d441b1ec265",
    "prId" : 53747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53747#pullrequestreview-74962979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "823932ef-12ac-4ee3-8aa0-369d0f43a05d",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "How about some minor simplification:\r\n```\r\nvar cmd string\r\nif ProviderIs(\"gce\") {\r\n      if !NodeOSDistroIs(\"debian\", \"gci\") {\r\n            return fmt.Errorf(\"unsupported provider: %s, supported providers...\r\n      }\r\n      cmd = \"sudo /etc/init.d/kubelet restart\"\r\n} else if ProviderIs(\"vsphere\") { \r\n      ...\r\n} else { ...\r\n}\r\n```",
        "createdAt" : "2017-11-07T22:03:59Z",
        "updatedAt" : "2017-11-08T03:35:32Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "fd70a6a6-c495-4037-b1ea-5049922ec80d",
        "parentId" : "823932ef-12ac-4ee3-8aa0-369d0f43a05d",
        "authorId" : "db2bacc0-2d49-46ca-aa72-ee2a50ac7aa1",
        "body" : "I see your reason here to avoid redundant checks for NodeOSDistroIs\r\n\r\nhowever, `cmd = \"sudo /etc/init.d/kubelet restart\" ` is only valid for `debian` and not for `gci`\r\n\r\nSo this simplification might not work correctly.",
        "createdAt" : "2017-11-08T00:45:13Z",
        "updatedAt" : "2017-11-08T03:35:32Z",
        "lastEditedBy" : "db2bacc0-2d49-46ca-aa72-ee2a50ac7aa1",
        "tags" : [
        ]
      },
      {
        "id" : "2ebb1b2d-5493-4019-8e32-54a854d56ac4",
        "parentId" : "823932ef-12ac-4ee3-8aa0-369d0f43a05d",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "ah, ok then never mind... ",
        "createdAt" : "2017-11-08T01:02:54Z",
        "updatedAt" : "2017-11-08T03:35:32Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2a01faeff0a6f05fa82c3d3f827ab7193f7d40d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +3830,3834 @@\t\treturn fmt.Errorf(\"unsupported provider: %s, supported providers are: %v\", TestContext.Provider, supportedProviders)\n\t}\n\tif ProviderIs(\"gce\") && !NodeOSDistroIs(\"debian\", \"gci\") {\n\t\treturn fmt.Errorf(\"unsupported node OS distro: %s\", TestContext.NodeOSDistro)\n\t}"
  },
  {
    "id" : "0754998a-f1c1-4b69-a116-4458bda1ca42",
    "prId" : 52961,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52961#pullrequestreview-64980505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0ce34b0-be08-4cdd-8ea4-3b80d9bad4ce",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is `KUBE_SSH_KEY` an absolute path? this function is kinda weird and probably needs to be refactored, since it prepends `keydir` to this path before reading it - compare the gce vs aws cases, for example.",
        "createdAt" : "2017-09-25T17:47:11Z",
        "updatedAt" : "2017-09-25T17:47:13Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "3da6b6d3-478e-486e-a746-1ccbe7aefdd4",
        "parentId" : "f0ce34b0-be08-4cdd-8ea4-3b80d9bad4ce",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "KUBE_SSH_KEY will have just a name of key file, which will be combined later with the location of .ssh folder",
        "createdAt" : "2017-09-25T17:52:54Z",
        "updatedAt" : "2017-09-25T17:52:54Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "6201727935e4e71ba15c89f4b4acf142a7de6338",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3452,3456 @@\t\t}\n\tcase \"skeleton\":\n\t\tkeyfile = os.Getenv(\"KUBE_SSH_KEY\")\n\t\tif len(keyfile) == 0 {\n\t\t\tkeyfile = \"id_rsa\""
  },
  {
    "id" : "04ef0438-2825-49c0-b562-a0a1172b0552",
    "prId" : 52355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52355#pullrequestreview-64140763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "734aac31-fec3-4351-93c7-f313595e9243",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "is SSH still state of the art to access the master in e2e tests? I remember that we ported a lot of SSH calls to privileged pods long ago.",
        "createdAt" : "2017-09-20T07:49:25Z",
        "updatedAt" : "2017-09-20T07:49:25Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "35d80a5c-61e4-4e4a-81a5-73a0f86c32d2",
        "parentId" : "734aac31-fec3-4351-93c7-f313595e9243",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "It looks like all the related functionality (and other functionality that needs info from master) in this file is using SSH calls. For example RestartControllerManager(),  WaitForControllerManagerUp(), etc. Could you point me to an example that uses privileged pods for similar functionality? I am curious as to how that works.",
        "createdAt" : "2017-09-20T23:01:50Z",
        "updatedAt" : "2017-09-20T23:01:50Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e10741f944455f0c7dd349cee4a00868807248d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +3926,3930 @@\tcmd := \"sudo docker ps | grep k8s_kube-controller-manager | cut -d ' ' -f 1\"\n\tfor start := time.Now(); time.Since(start) < duration; time.Sleep(5 * time.Second) {\n\t\tresult, err := SSH(cmd, GetMasterHost()+\":22\", TestContext.Provider)\n\t\tif err != nil {\n\t\t\t// We don't necessarily know that it crashed, pipe could just be broken"
  },
  {
    "id" : "c88dc7b0-82cf-40e8-8019-e3442ddc880a",
    "prId" : 52355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52355#pullrequestreview-64801546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af506582-adda-4750-97d1-6e1382c033af",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "How long can we assume docker?",
        "createdAt" : "2017-09-25T06:08:42Z",
        "updatedAt" : "2017-09-25T06:08:42Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e10741f944455f0c7dd349cee4a00868807248d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +3924,3928 @@func CheckForControllerManagerHealthy(duration time.Duration) error {\n\tvar PID string\n\tcmd := \"sudo docker ps | grep k8s_kube-controller-manager | cut -d ' ' -f 1\"\n\tfor start := time.Now(); time.Since(start) < duration; time.Sleep(5 * time.Second) {\n\t\tresult, err := SSH(cmd, GetMasterHost()+\":22\", TestContext.Provider)"
  },
  {
    "id" : "e1547de7-9212-4d58-b3e4-3233ebab5d47",
    "prId" : 49597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49597#pullrequestreview-52467196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c70cd92-4052-433d-8884-ee6059313254",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Leave \"status\" in the message?",
        "createdAt" : "2017-07-26T18:10:44Z",
        "updatedAt" : "2017-07-26T18:16:19Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "3b4d9fd2-5f41-4cc7-ae84-9e328e2db0a2",
        "parentId" : "1c70cd92-4052-433d-8884-ee6059313254",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "I think no because leaving \"status\" in this message is misleading since the insert used is the passed-in `desc`. The passed in `condition` func may use the pod's Status to decide when to stop the loop but we don't know that here.",
        "createdAt" : "2017-07-26T18:23:46Z",
        "updatedAt" : "2017-07-26T18:23:46Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "5a987c33-cfd4-4412-98c5-0634773b9597",
        "parentId" : "1c70cd92-4052-433d-8884-ee6059313254",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I guess it's kind of strange because in the terminated case, the desc string == \"\"",
        "createdAt" : "2017-07-26T18:44:33Z",
        "updatedAt" : "2017-07-26T18:44:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "7d70dd68-f73d-4968-8336-9362b257a5b3",
        "parentId" : "1c70cd92-4052-433d-8884-ee6059313254",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "When the loop ends for the pod-delete calls, Status.Reason is typically \"\" but sometimes I see other reasons. The `desc` value is passed in by the caller and meant to be descriptive of the condition AFAICT. I've created a new [pr](https://github.com/kubernetes/kubernetes/pull/49662) to deal with better detection of pod deletion and in this pr the reason parm will not be checked if it is \"\".",
        "createdAt" : "2017-07-26T19:10:15Z",
        "updatedAt" : "2017-07-26T21:37:36Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccde67b17efb47b20dfc37cb81801028c7ac49c4",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +765,769 @@\nfunc WaitForPodCondition(c clientset.Interface, ns, podName, desc string, timeout time.Duration, condition podCondition) error {\n\tLogf(\"Waiting up to %v for pod %q in namespace %q to be %q\", timeout, podName, ns, desc)\n\tfor start := time.Now(); time.Since(start) < timeout; time.Sleep(Poll) {\n\t\tpod, err := c.Core().Pods(ns).Get(podName, metav1.GetOptions{})"
  },
  {
    "id" : "997ee253-85c8-405a-92a9-6ee2d4519d55",
    "prId" : 49457,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49457#pullrequestreview-59141486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f0e4697-485f-421e-bda5-051814a4716a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I'm not sure we need to have both `framework.BusyBoxImage` and `common.busyBoxImage`. maybe consolidate in a follow-up?",
        "createdAt" : "2017-08-29T01:32:38Z",
        "updatedAt" : "2017-09-01T00:11:34Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "bdca4638-998d-4819-a7d3-61097d22994f",
        "parentId" : "0f0e4697-485f-421e-bda5-051814a4716a",
        "authorId" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "body" : "sure, will do that later.",
        "createdAt" : "2017-08-29T06:21:50Z",
        "updatedAt" : "2017-09-01T00:11:34Z",
        "lastEditedBy" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4d54c70c98d89e06d66142345791db852f8278",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +191,195 @@\nvar (\n\tBusyBoxImage = imageutils.GetBusyBoxImage()\n\t// Label allocated to the image puller static pod that runs on each node\n\t// before e2es."
  },
  {
    "id" : "f283098b-9d86-4711-b5a5-e2238c82a213",
    "prId" : 48366,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48366#pullrequestreview-48934615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78905d2c-606c-4366-b2d6-7956e38b06ad",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Do all of the AWS distros we use in e2e tests use systemd?",
        "createdAt" : "2017-07-05T23:42:35Z",
        "updatedAt" : "2017-08-04T14:39:31Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "eaa5404e-22cc-4bb1-834e-5f48e08c1a70",
        "parentId" : "78905d2c-606c-4366-b2d6-7956e38b06ad",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "yes, they are on the default kops image",
        "createdAt" : "2017-07-10T15:10:33Z",
        "updatedAt" : "2017-08-04T14:39:31Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      }
    ],
    "commit" : "55a417e84f98c4a4ab1aab6c6534886e91c2b9db",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +3786,3790 @@\t\tcmd = \"sudo /etc/init.d/kubelet restart\"\n\t} else {\n\t\tcmd = \"sudo systemctl restart kubelet\"\n\t}\n\tLogf(\"Restarting kubelet via ssh, running: %v\", cmd)"
  },
  {
    "id" : "3769506f-2d2a-4cda-a0dc-58a4b31c74cf",
    "prId" : 45423,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45423#pullrequestreview-37739158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "854c6964-0287-457d-b8a4-19c4e6d0daeb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Is this a move? I don't see it being removed from somewhere else",
        "createdAt" : "2017-05-11T22:49:15Z",
        "updatedAt" : "2017-05-12T06:59:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ba606ffc-470e-4472-879c-8250dff1190f",
        "parentId" : "854c6964-0287-457d-b8a4-19c4e6d0daeb",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Duh! Thanks. Somehow daemon_restart.go didn't get commited.",
        "createdAt" : "2017-05-12T01:43:43Z",
        "updatedAt" : "2017-05-12T06:59:07Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6276a865777c65cf0fd6026cf64893dae25ac94e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +3801,3805 @@// eg: the name returned by framework.GetMasterHost(). This is also not guaranteed to work across\n// cloud providers since it involves ssh.\nfunc NodeExec(nodeName, cmd string) (SSHResult, error) {\n\treturn SSH(cmd, net.JoinHostPort(nodeName, sshPort), TestContext.Provider)\n}"
  },
  {
    "id" : "00f91c04-280f-44bc-a550-ba3fa0e3651f",
    "prId" : 44774,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44774#pullrequestreview-37286479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "530895f0-f7f4-4c5d-99f6-21edce202075",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "(optional) create `const` for poll interval and timeout so that we have consistent value in all `func UpdateXxxWithRetries`",
        "createdAt" : "2017-05-09T21:21:58Z",
        "updatedAt" : "2017-05-25T10:23:26Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "b6f8a08d-3d0c-4fec-8a2d-7ddda509daf2",
        "parentId" : "530895f0-f7f4-4c5d-99f6-21edce202075",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I prefer to leave this change for a follow-up",
        "createdAt" : "2017-05-10T12:20:40Z",
        "updatedAt" : "2017-05-25T10:23:26Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9190a47c3769c329ed8b29844a667a1c959307df",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +3516,3520 @@\tvar rs *extensions.ReplicaSet\n\tvar updateErr error\n\tpollErr := wait.PollImmediate(1*time.Second, 1*time.Minute, func() (bool, error) {\n\t\tvar err error\n\t\tif rs, err = c.Extensions().ReplicaSets(namespace).Get(name, metav1.GetOptions{}); err != nil {"
  },
  {
    "id" : "a9b5c8f5-f2d8-4603-9a80-566a2ea76687",
    "prId" : 41145,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41145#pullrequestreview-20966962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cf7b462-11ad-421b-9453-e6a8287c4d2b",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "do we not want to print the namespace for the deployment?",
        "createdAt" : "2017-02-09T09:44:35Z",
        "updatedAt" : "2017-02-09T09:44:35Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "883931f1-d650-40c2-bb84-5aa3298379f2",
        "parentId" : "5cf7b462-11ad-421b-9453-e6a8287c4d2b",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Not needed here, the ns is available via other means (events for example)",
        "createdAt" : "2017-02-09T09:47:58Z",
        "updatedAt" : "2017-02-09T09:47:58Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "97c9e7fe07ecb66920bf1a73b8b9531dafd0f62e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +3440,3444 @@\t})\n\tif pollErr == wait.ErrWaitTimeout {\n\t\tpollErr = fmt.Errorf(\"%d old replica sets were not cleaned up for deployment %q\", len(oldRSs)-desiredRSNum, deploymentName)\n\t\tlogReplicaSetsOfDeployment(d, oldRSs, nil)\n\t}"
  },
  {
    "id" : "409e2f2e-22b3-4293-bb27-e81fbbe331f0",
    "prId" : 41133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41133#pullrequestreview-23162453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10bda3d2-7765-4f4d-b058-eb905b6853c6",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "you have \"if err != nil\" twice",
        "createdAt" : "2017-02-22T06:59:09Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "0039bc71-cc77-4430-b0e3-34f94a09127e",
        "parentId" : "10bda3d2-7765-4f4d-b058-eb905b6853c6",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-22T08:52:31Z",
        "updatedAt" : "2017-02-24T08:25:09Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d6086217f36bcea6024115f81642d6dfdcaf8b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +2535,2539 @@func NodeHasTaint(c clientset.Interface, nodeName string, taint *v1.Taint) (bool, error) {\n\tnode, err := c.Core().Nodes().Get(nodeName, metav1.GetOptions{})\n\tif err != nil {\n\t\treturn false, err\n\t}"
  },
  {
    "id" : "76e2146b-59ef-409b-b940-29e8d88a1dad",
    "prId" : 41112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41112#pullrequestreview-21095438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b69373b8-5bda-4d18-9e13-3857713fe444",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I am worried that we are overusing Phase and accumulate techdebt in the face of https://github.com/kubernetes/kubernetes/issues/7856",
        "createdAt" : "2017-02-09T10:01:34Z",
        "updatedAt" : "2017-02-09T10:01:34Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "acdedd3c-c825-403f-b588-10d361d951d1",
        "parentId" : "b69373b8-5bda-4d18-9e13-3857713fe444",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "FWIW we're already watching pod phases before this fix, so this PR doesn't make it worse. I can add a TODO for eliminating pod phase and link to issue #7856 as well as a TODO for using watch once the watch bug is fixed. WDYT?",
        "createdAt" : "2017-02-09T18:20:13Z",
        "updatedAt" : "2017-02-09T18:20:13Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "221e17d8-8f27-4060-8e81-69947fe277af",
        "parentId" : "b69373b8-5bda-4d18-9e13-3857713fe444",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I don't think a TODO for pod phase is necessary or desired. 1) The tests have been using the phases since the beginning, and this PR should not be changing that, and 2) Many of those tests do rely on the phases (terminated vs. running), and I am not aware that this could be replaced by any of the existing \"pod conditions\". Even if we do want to change these, this is out of scope of the PR, and adding one more scattered TODO doesn't really help.",
        "createdAt" : "2017-02-09T19:21:09Z",
        "updatedAt" : "2017-02-09T19:21:09Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c89359cc8b5cd7fc54d4ea85e3edb3106cfa1c2",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1238,1242 @@\t\t\treturn false, err\n\t\t}\n\t\tswitch pod.Status.Phase {\n\t\tcase v1.PodRunning:\n\t\t\treturn true, nil"
  },
  {
    "id" : "0129a0f3-d483-456d-8a0c-7860a37a8644",
    "prId" : 40319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40319#pullrequestreview-18952305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bafccf04-40cf-453e-aff1-a4e607abc335",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "vagrant should probably be in these lists too, right? seems like that may have been unintentionally left out of #32560, cc @dshulyak ",
        "createdAt" : "2017-01-25T23:47:59Z",
        "updatedAt" : "2017-01-25T23:48:47Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "32e29cf8-321f-43e8-8505-bb8c6727236f",
        "parentId" : "bafccf04-40cf-453e-aff1-a4e607abc335",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "@ixdy I don't have any insights about supporting vagrant here.",
        "createdAt" : "2017-01-27T20:48:58Z",
        "updatedAt" : "2017-01-27T20:48:58Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "3c7b94e7-5f7e-48fb-8247-b960121ed23e",
        "parentId" : "bafccf04-40cf-453e-aff1-a4e607abc335",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "fair. I'm pretty sure these lists are meant to match the switch statement you updated, and vagrant's switch case was added in #32560, though this list wasn't updated. @dshulyak can maybe update it.",
        "createdAt" : "2017-01-27T23:01:51Z",
        "updatedAt" : "2017-01-27T23:01:51Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "21600e71-6235-4347-8d96-c7b67b84f653",
        "parentId" : "bafccf04-40cf-453e-aff1-a4e607abc335",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "It looks like this var may no longer be used, at least not in _pkg/_ or _test/_.",
        "createdAt" : "2017-01-27T23:11:44Z",
        "updatedAt" : "2017-01-27T23:12:41Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "b93cf8f6-5f05-4ef6-a343-c8ceccdb6da4",
        "parentId" : "bafccf04-40cf-453e-aff1-a4e607abc335",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "you sure? I see several `framework.SkipUnlessProviderIs(framework.ProvidersWithSSH...)` calls still.",
        "createdAt" : "2017-01-27T23:22:01Z",
        "updatedAt" : "2017-01-27T23:22:02Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "975c5536aba425bfbddbe15f62cc03688b71be77",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +377,381 @@\n// ProvidersWithSSH are those providers where each node is accessible with SSH\nvar ProvidersWithSSH = []string{\"gce\", \"gke\", \"aws\", \"local\"}\n\n// providersWithMasterSSH are those providers where master node is accessible with SSH"
  },
  {
    "id" : "b73a44c5-6f19-4f24-8ee5-ea8d3dc56a75",
    "prId" : 40319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40319#pullrequestreview-18952374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1204148-2055-4730-bee3-19808b3eecd8",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this one looks unused though.",
        "createdAt" : "2017-01-27T23:22:46Z",
        "updatedAt" : "2017-01-27T23:22:46Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "975c5536aba425bfbddbe15f62cc03688b71be77",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +380,384 @@\n// providersWithMasterSSH are those providers where master node is accessible with SSH\nvar providersWithMasterSSH = []string{\"gce\", \"gke\", \"kubemark\", \"aws\", \"local\"}\n\ntype podCondition func(pod *v1.Pod) (bool, error)"
  },
  {
    "id" : "ac6d072b-6b6b-47ea-bf9c-97a258692638",
    "prId" : 38255,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38255#pullrequestreview-11881079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d35ba14-0f81-4096-b9a2-5a0fda407fd2",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Why should we return here if meet error?",
        "createdAt" : "2016-12-07T02:43:41Z",
        "updatedAt" : "2016-12-07T19:33:20Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "1e50a548-9e01-4b53-9799-f99c0027b82a",
        "parentId" : "0d35ba14-0f81-4096-b9a2-5a0fda407fd2",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "To force a retry in the caller, which does a wait.Poll",
        "createdAt" : "2016-12-07T19:33:30Z",
        "updatedAt" : "2016-12-07T19:33:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "cd0c5007-dfd9-4876-b867-f49128e90799",
        "parentId" : "0d35ba14-0f81-4096-b9a2-5a0fda407fd2",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "oh you mean why return without going thorugh to the end of this function? because we pass health checks as an argument to the next call `deleteTargetPools`",
        "createdAt" : "2016-12-07T19:34:16Z",
        "updatedAt" : "2016-12-07T19:34:16Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "90ae5bfc-a525-4911-9062-d77e91c9822a",
        "parentId" : "0d35ba14-0f81-4096-b9a2-5a0fda407fd2",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Make sense. I missed the hc variable.\r\n",
        "createdAt" : "2016-12-07T19:47:14Z",
        "updatedAt" : "2016-12-07T19:47:14Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1daee5b371f704df61b4aaf3da889dfdf466b89",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +4976,4980 @@\tif getErr != nil && !IsGoogleAPIHTTPErrorCode(getErr, http.StatusNotFound) {\n\t\tretErr = fmt.Errorf(\"%v\\n%v\", retErr, getErr)\n\t\treturn\n\t}\n\tif err := gceCloud.DeleteTargetPool(loadBalancerName, hc); err != nil &&"
  },
  {
    "id" : "b1e4b161-81af-4d3e-b62c-4924c22b2c70",
    "prId" : 38185,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38185#pullrequestreview-11640685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc6f95ab-bc45-44eb-b413-1b3d19117021",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "can we instead of polling watch the events long term?",
        "createdAt" : "2016-12-06T12:48:40Z",
        "updatedAt" : "2016-12-06T12:48:40Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "fab99a9d-1504-4305-817e-2cb7584337e8",
        "parentId" : "cc6f95ab-bc45-44eb-b413-1b3d19117021",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We don't want to use events in tests \r\nhttps://github.com/kubernetes/kubernetes/issues/36453",
        "createdAt" : "2016-12-06T12:49:20Z",
        "updatedAt" : "2016-12-06T12:49:20Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "2e5dd80b-9580-44e8-b186-d1e8b3dbea5f",
        "parentId" : "cc6f95ab-bc45-44eb-b413-1b3d19117021",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "i see, thanks",
        "createdAt" : "2016-12-06T12:51:25Z",
        "updatedAt" : "2016-12-06T12:51:25Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "78854c63-f047-42b5-89d2-f7606d2fd08d",
        "parentId" : "cc6f95ab-bc45-44eb-b413-1b3d19117021",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "To be fair, my complaint was about using the messages in the events. If we enhanced events to have API stable event codes and data in addition to messages, then using events would be preferred. ",
        "createdAt" : "2016-12-06T17:42:29Z",
        "updatedAt" : "2016-12-06T17:42:29Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "4949d61b39e4c81014a98fba37f8e0a9aaf26d9f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3138,3142 @@\tvar newRS *extensions.ReplicaSet\n\tvar reason string\n\terr := wait.Poll(Poll, 1*time.Minute, func() (bool, error) {\n\t\tvar err error\n\t\tdeployment, err = c.Extensions().Deployments(ns).Get(deploymentName)"
  },
  {
    "id" : "c6eacf2b-9123-4f6e-8820-6d681a22dadd",
    "prId" : 37696,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37696#pullrequestreview-11132731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64d5af61-b937-4bb6-9038-9e16821a137b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The first two commits are touching the same code - can you please squash those two?",
        "createdAt" : "2016-12-01T15:15:41Z",
        "updatedAt" : "2016-12-06T11:29:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3146ae6e-edd6-48be-9c3a-52822b213e02",
        "parentId" : "64d5af61-b937-4bb6-9038-9e16821a137b",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2016-12-02T09:58:40Z",
        "updatedAt" : "2016-12-06T11:29:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "070f0979c29748584693c47b6b194d31c99c0785",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +2817,2821 @@\t\t\treturn *typed.Spec.Replicas, nil\n\t\t}\n\t\treturn 0, nil\n\tdefault:\n\t\treturn -1, fmt.Errorf(\"Unsupported kind when getting number of replicas: %v\", obj)"
  },
  {
    "id" : "df4109ff-66be-4718-8a8c-5af87bb49da4",
    "prId" : 37583,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37583#pullrequestreview-10433506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86628652-7c68-4a59-bf38-25fc0f7355dd",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "If so, `result` will never be used. Are you sure golang will not throw out an error?",
        "createdAt" : "2016-11-28T22:42:21Z",
        "updatedAt" : "2016-11-28T22:45:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "6174e628-899f-4d18-97f6-28ee79e462b3",
        "parentId" : "86628652-7c68-4a59-bf38-25fc0f7355dd",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The code in `IssueSSHCommandWithResult` should also be changed.\r\nCheck `err` first then check `result.Code`.",
        "createdAt" : "2016-11-28T22:44:22Z",
        "updatedAt" : "2016-11-28T22:45:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "1e57f1a8-62b0-4e25-896a-85367f703497",
        "parentId" : "86628652-7c68-4a59-bf38-25fc0f7355dd",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Discussed offline, `result` is not a pointer in `IssueSSHCommandWithResult`.",
        "createdAt" : "2016-11-28T22:48:34Z",
        "updatedAt" : "2016-11-28T22:48:34Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "f789ecdcafc26e1ef6cba83af33e7f2260814ccb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +3552,3556 @@func IssueSSHCommand(cmd, provider string, node *v1.Node) error {\n\t_, err := IssueSSHCommandWithResult(cmd, provider, node)\n\tif err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "9d282e8f-12d4-4aeb-bb7f-a65d1086dd7b",
    "prId" : 37303,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37303#pullrequestreview-9756913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75f06238-173f-4bd4-9e31-1c8428647784",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "`TODO(krousey)`?",
        "createdAt" : "2016-11-22T20:58:16Z",
        "updatedAt" : "2016-11-22T20:58:16Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "d208bf72-ba81-40b5-90c4-c3c01d73508c",
        "parentId" : "75f06238-173f-4bd4-9e31-1c8428647784",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "https://github.com/kubernetes/kubernetes/issues/37310",
        "createdAt" : "2016-11-22T21:01:37Z",
        "updatedAt" : "2016-11-22T21:01:37Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "1614b97725456d5e0c7f4e59cf35665074767985",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +497,501 @@func WaitForPodsRunningReady(c clientset.Interface, ns string, minPods int32, timeout time.Duration, ignoreLabels map[string]string) error {\n\n\t// This can be removed when we no longer have 1.3 servers running with upgrade tests.\n\thasReadyReplicas, err := ServerVersionGTE(ReadyReplicaVersion, c.Discovery())\n\tif err != nil {"
  },
  {
    "id" : "52f0a452-2e98-47e0-b2a0-db27a1706a89",
    "prId" : 36999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36999#pullrequestreview-9639917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9261ea6-28c4-4e17-854f-2005ae9bc42f",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "How about passing a full regexp for master name and remove checking for unschedulable field?",
        "createdAt" : "2016-11-22T10:38:36Z",
        "updatedAt" : "2016-11-22T11:03:52Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "e0485fe9-6bf4-4330-a40c-de58af812c9c",
        "parentId" : "c9261ea6-28c4-4e17-854f-2005ae9bc42f",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Fixed",
        "createdAt" : "2016-11-22T11:04:01Z",
        "updatedAt" : "2016-11-22T11:04:02Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01998f5fa4146d8f2d5f71a10b48b1199e33293",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4013,4017 @@\n// waitForMasters waits until the cluster has the desired number of ready masters in it.\nfunc WaitForMasters(masterPrefix string, c clientset.Interface, size int, timeout time.Duration) error {\n\tfor start := time.Now(); time.Since(start) < timeout; time.Sleep(20 * time.Second) {\n\t\tnodes, err := c.Core().Nodes().List(api.ListOptions{})"
  },
  {
    "id" : "f3f3926d-57f4-4798-8950-1a03980ea04b",
    "prId" : 36924,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36924#pullrequestreview-8937536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e722e176-b47f-487c-981c-a4ee341f96a1",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "nittiest of nits: the comment for WaitForPodsRunningReady could also use this touch.\n",
        "createdAt" : "2016-11-16T23:56:50Z",
        "updatedAt" : "2016-11-17T00:12:41Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "2be38bf8-83ee-4371-baa9-84a79942f480",
        "parentId" : "e722e176-b47f-487c-981c-a4ee341f96a1",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "nitted\n",
        "createdAt" : "2016-11-17T00:12:48Z",
        "updatedAt" : "2016-11-17T00:12:48Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a87385342cb1b0756094284a04b5b16906bb8c2",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +507,511 @@\n\tif wait.PollImmediate(Poll, timeout, func() (bool, error) {\n\t\t// We get the new list of pods, replication controllers, and\n\t\t// replica sets in every iteration because more pods come\n\t\t// online during startup and we want to ensure they are also"
  },
  {
    "id" : "b950ab1f-b6b2-48bc-b9b3-a2841ae41ac1",
    "prId" : 36439,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36439#pullrequestreview-7615900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fdcbd9f-2044-4c9b-9732-128d5bc6d57b",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "why 5 minutes?\n",
        "createdAt" : "2016-11-08T13:16:57Z",
        "updatedAt" : "2016-11-28T13:01:07Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "ec5b0303-773d-4342-bcce-f97950427087",
        "parentId" : "7fdcbd9f-2044-4c9b-9732-128d5bc6d57b",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The rest of the polls use the same timeout. No other reason.\n",
        "createdAt" : "2016-11-08T13:23:31Z",
        "updatedAt" : "2016-11-28T13:01:07Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b7bf78f3ff508977f9c6e3c56adbc10d19df327",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +2959,2963 @@func WaitForAvailableReplicaSet(c clientset.Interface, ns, name string) error {\n\tvar status extensions.ReplicaSetStatus\n\terr := wait.PollImmediate(Poll, 5*time.Minute, func() (bool, error) {\n\t\trs, err := c.Extensions().ReplicaSets(ns).Get(name)\n\t\tif err != nil {"
  },
  {
    "id" : "82de990a-e349-487b-82ee-8775af276c37",
    "prId" : 35129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35129#pullrequestreview-5018496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d75d0628-1dee-4287-9ee6-77f56ab36f54",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Please add comments what these define.\n",
        "createdAt" : "2016-10-20T07:36:16Z",
        "updatedAt" : "2016-10-20T09:51:50Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "fcade76f-bd1b-4519-a3b5-a3d5773179d5",
        "parentId" : "d75d0628-1dee-4287-9ee6-77f56ab36f54",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2016-10-20T07:56:57Z",
        "updatedAt" : "2016-10-20T09:51:50Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbb3d6bf882663cb137fe1959ad141163638c536",
    "line" : null,
    "diffHunk" : "@@ -1,1 +4523,4527 @@\t// Only one strategy can be applied to a single Node, so there needs to\n\t// be at least <sum_of_keys> Nodes in the cluster.\n\tcountToStrategy       map[int]testutils.PrepareNodeStrategy\n\tnodeToAppliedStrategy map[string]testutils.PrepareNodeStrategy\n}"
  },
  {
    "id" : "5d6346aa-fb39-4545-b2bf-b959710abb6a",
    "prId" : 34942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34942#pullrequestreview-4469681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed34c471-e6a5-4166-b390-54c41f1f04d7",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "i thought we have helper method for this\n",
        "createdAt" : "2016-10-17T13:15:01Z",
        "updatedAt" : "2016-10-17T13:15:30Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "321d9d2c-3964-4240-a4c0-835f7469a65f",
        "parentId" : "ed34c471-e6a5-4166-b390-54c41f1f04d7",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "It's somewhere in the perma-failed PR i think:) I will refactor this once I get the API merged (so the impl will get its turn)\n",
        "createdAt" : "2016-10-17T13:17:23Z",
        "updatedAt" : "2016-10-17T13:17:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "71df8f654424c0b0592bf4b8510bf4b69a1b05a5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2899,2903 @@\n\t\t// When the deployment status and its underlying resources reach the desired state, we're done\n\t\tif deployment.Status.Replicas == deployment.Spec.Replicas &&\n\t\t\tdeployment.Status.UpdatedReplicas == deployment.Spec.Replicas &&\n\t\t\tdeployment.Status.AvailableReplicas == deployment.Spec.Replicas {"
  },
  {
    "id" : "207c1590-c622-4255-a518-2fe3e0de2319",
    "prId" : 34942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34942#pullrequestreview-4469573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c352c13-2857-43ed-915c-a532169a5bd5",
        "parentId" : null,
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "you don't need this var, just Logf\n",
        "createdAt" : "2016-10-17T13:15:26Z",
        "updatedAt" : "2016-10-17T13:15:30Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "433d5343-fe03-46f0-ae7f-030deaa4d192",
        "parentId" : "6c352c13-2857-43ed-915c-a532169a5bd5",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I need it in case we timeout. Will be printed instead of \"timed out waiting for the condition\".\n",
        "createdAt" : "2016-10-17T13:16:36Z",
        "updatedAt" : "2016-10-17T13:16:36Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "71df8f654424c0b0592bf4b8510bf4b69a1b05a5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +2905,2909 @@\t\t}\n\n\t\treason = fmt.Sprintf(\"deployment status: %#v\", deployment.Status)\n\t\tLogf(reason)\n"
  },
  {
    "id" : "5262b2b6-87d0-47eb-bf3a-24583f158194",
    "prId" : 34648,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34648#pullrequestreview-5563889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95802367-bc5e-433d-b72b-a44140b9c49c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Do you want to check in this code?\n",
        "createdAt" : "2016-10-21T04:07:33Z",
        "updatedAt" : "2016-10-26T23:54:25Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "6cd0d4ab-4919-4cfe-9b94-bfd063b28d43",
        "parentId" : "95802367-bc5e-433d-b72b-a44140b9c49c",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes helps in debugging.\n",
        "createdAt" : "2016-10-25T00:14:25Z",
        "updatedAt" : "2016-10-26T23:54:25Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f955d556f8ed22d392a1ab2ff3891db2156b0591",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2219,2223 @@\tExpect(err).NotTo(HaveOccurred())\n\n\tBy(fmt.Sprintf(\"Found %d events.\", len(events.Items)))\n\t// Sort events by their first timestamp\n\tsortedEvents := events.Items"
  },
  {
    "id" : "2329e993-332b-473f-af1d-48ec13caaee7",
    "prId" : 34645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34645#pullrequestreview-6664376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e49fe394-9003-4410-b496-e0bb6f486658",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Can we ignore all update errors or should we return error that's not update conflict?\n",
        "createdAt" : "2016-10-31T21:11:36Z",
        "updatedAt" : "2016-11-02T12:08:25Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "e43b0670-a66c-4dcd-9165-8aa17fb6acf1",
        "parentId" : "e49fe394-9003-4410-b496-e0bb6f486658",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The deployment helper is retrying on all errors and since we don't want tests to be flaky I am inclined to continue retrying on all errors here too. We can intercept ErrWaitTimeout and include the last error from the wait loop (I am already doing it but I don't include the last error) \n",
        "createdAt" : "2016-11-01T12:56:42Z",
        "updatedAt" : "2016-11-02T12:08:25Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "189f5a5b-1386-447b-8fb8-42b5f976604b",
        "parentId" : "e49fe394-9003-4410-b496-e0bb6f486658",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "sounds good \n",
        "createdAt" : "2016-11-01T17:41:19Z",
        "updatedAt" : "2016-11-02T12:08:25Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865692d441d2d2cbeeb6cf354f643eda01de8d4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +3223,3227 @@\t\t}\n\t\tupdateErr = err\n\t\treturn false, nil\n\t})\n\tif pollErr == wait.ErrWaitTimeout {"
  },
  {
    "id" : "834b597b-9ca1-48b0-bf56-3bee34ef6795",
    "prId" : 32183,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8536cf21-4a61-4ac3-8efd-79af1d9859a5",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "do we create all health checks with the same name? I can have multiple nodePorts/health checks per service right? \n",
        "createdAt" : "2016-09-07T17:13:42Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "29b75e6d-8a0f-41aa-a113-1937aef1d5a3",
        "parentId" : "8536cf21-4a61-4ac3-8efd-79af1d9859a5",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "HTTP health check name == LB name. We allocate just a single healthCheckNodePort per service today (for ESIPP services).\n",
        "createdAt" : "2016-09-07T17:22:42Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "704a576f-2e39-4afe-8710-385922e21a93",
        "parentId" : "8536cf21-4a61-4ac3-8efd-79af1d9859a5",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "I think this line is correct, right? i'd keep it for now.\n",
        "createdAt" : "2016-09-08T02:27:49Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "65d77b04-12f1-4f0d-9ff8-96a768e6f1ba",
        "parentId" : "8536cf21-4a61-4ac3-8efd-79af1d9859a5",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Yeah it's correct, I assuemd we were doing a health check per taretPort. Girish is verifying the case of one targetPort group failing health checks and another passing, and how that manifests with a single health check per service. \n",
        "createdAt" : "2016-09-08T02:37:25Z",
        "updatedAt" : "2016-10-25T03:32:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "66381c669472798912d8c05df7e1a320b1d9314f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +4592,4596 @@\tgceCloud.DeleteForwardingRule(loadBalancerName)\n\tgceCloud.DeleteGlobalStaticIP(loadBalancerName)\n\thc, _ := gceCloud.GetHttpHealthCheck(loadBalancerName)\n\tgceCloud.DeleteTargetPool(loadBalancerName, hc)\n\treturn nil"
  },
  {
    "id" : "a0679c58-b0f7-4db2-a57a-4804425eafcc",
    "prId" : 31895,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0b4d1ea-7c9d-4e8b-81a2-2b9a7fd6108d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "why change this line?\n",
        "createdAt" : "2016-09-01T18:11:33Z",
        "updatedAt" : "2016-09-02T00:56:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d2c53796-1d8b-4b60-9a52-b7541b4ed5c7",
        "parentId" : "d0b4d1ea-7c9d-4e8b-81a2-2b9a7fd6108d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh, I see. nvm.\n",
        "createdAt" : "2016-09-01T18:12:12Z",
        "updatedAt" : "2016-09-02T00:56:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e948a696533494598bc13af444b937b2ac1aa5e1",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +640,644 @@\t\t}\n\t\tnOk, replicaOk := int32(0), int32(0)\n\t\tbadPods = []api.Pod{}\n\t\tdesiredPods = len(podList.Items)\n\t\tfor _, pod := range podList.Items {"
  },
  {
    "id" : "ac578819-52b6-4763-80e3-f3ebef18d63d",
    "prId" : 31883,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "155f0be8-3c27-4a6d-b7c2-c09998d54a59",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "is `0755` enough? (i am ok with leaving it as `0777`, but just asking to learn if we needed it)\n",
        "createdAt" : "2016-09-01T15:00:49Z",
        "updatedAt" : "2016-09-01T15:00:49Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "aa8751b7-8757-4a9b-8d19-1bbb1e383692",
        "parentId" : "155f0be8-3c27-4a6d-b7c2-c09998d54a59",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Maybe - I don't know. We can change it needed or deemed dangerous.\n",
        "createdAt" : "2016-09-01T15:06:13Z",
        "updatedAt" : "2016-09-01T15:06:13Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "39e125bb-a45d-415d-913b-06939f8bc011",
        "parentId" : "155f0be8-3c27-4a6d-b7c2-c09998d54a59",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "it's ok. let's leave it alone :)\n",
        "createdAt" : "2016-09-01T15:10:45Z",
        "updatedAt" : "2016-09-01T15:10:45Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "02985c9da2cfcfef6950cbe832bb3d75279c94d4",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +5084,5088 @@\t}\n\tfullPath := filepath.Join(TestContext.OutputDir, outputFilename)\n\terr := os.MkdirAll(filepath.Dir(fullPath), 0777)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Error while creating directory %v: %v\", filepath.Dir(fullPath), err)"
  },
  {
    "id" : "74f565a8-aab8-4592-baf6-3e9416135054",
    "prId" : 31829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a792b762-c63f-450f-9a4b-8f196bf95853",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why not just use `ExpectNoError`?\n",
        "createdAt" : "2016-08-31T23:11:32Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "cb7a3095-07d0-4650-9758-e54b01c3465c",
        "parentId" : "a792b762-c63f-450f-9a4b-8f196bf95853",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "We'd end up logging the error twice. That said, I don't know why ExpectNoError needs to log the error at all...\n",
        "createdAt" : "2016-08-31T23:16:52Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "5a1ca42a-256c-4561-a672-4419343f6363",
        "parentId" : "a792b762-c63f-450f-9a4b-8f196bf95853",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "probably because people don't want to log it themselves..\n",
        "createdAt" : "2016-08-31T23:48:48Z",
        "updatedAt" : "2016-08-31T23:48:48Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "7511ee02-4292-4385-b771-9042df9593ba",
        "parentId" : "a792b762-c63f-450f-9a4b-8f196bf95853",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I mean the Expect... line logs if there's an error. I'm not sure if it logs it inline with a timestamp though...\n",
        "createdAt" : "2016-08-31T23:52:35Z",
        "updatedAt" : "2016-08-31T23:52:35Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9a2c07c2007531d35af33931af114fd90540af3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1942,1946 @@\t\tLogf(\"(Attempt %d of %d) Unexpected error occurred: %v\", i+1, maxRetries, err)\n\t}\n\tExpectWithOffset(1, err).NotTo(HaveOccurred(), explain...)\n}\n"
  },
  {
    "id" : "d45a5e53-ad22-4d20-9c56-13c3f659fb1e",
    "prId" : 31829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "333438bf-ed57-4726-a8f8-1c46e31f4031",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I was checking why we need the container name for the pod phase, and saw this: \n[`// Cannot use pod.Status.Phase == api.PodSucceeded/api.PodFailed due to #2632`](https://github.com/kubernetes/kubernetes/blob/367cc42541e0045055e893dc45f798b9f0bb8803/test/e2e/framework/util.go#L1404) \n\nNo need to change that for this PR, but this utility function needs some cleanup...   :-|\n",
        "createdAt" : "2016-08-31T23:36:10Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "05f19944-b0cd-4a9a-b949-01ede8322965",
        "parentId" : "333438bf-ed57-4726-a8f8-1c46e31f4031",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yeah, I noticed that one too. There is a huge amount of low-hanging cleanup to do in the framework, but I don't think I'll go down that rabbit hole in this PR...\n",
        "createdAt" : "2016-08-31T23:40:09Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "8fc25fd2-f774-46a6-bf18-19556765d002",
        "parentId" : "333438bf-ed57-4726-a8f8-1c46e31f4031",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Agreed. \n",
        "createdAt" : "2016-08-31T23:43:17Z",
        "updatedAt" : "2016-08-31T23:46:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9a2c07c2007531d35af33931af114fd90540af3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2237,2241 @@\t// Wait for client pod to complete. All containers should succeed.\n\tfor _, container := range pod.Spec.Containers {\n\t\tif err := WaitForPodSuccessInNamespace(f.Client, pod.Name, container.Name, ns); err != nil {\n\t\t\treturn fmt.Errorf(\"expected container %s success: %v\", container.Name, err)\n\t\t}"
  },
  {
    "id" : "fc342027-73c8-42e1-bd80-e159e5aa406b",
    "prId" : 31699,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5adb432-e415-4daa-aa9c-d7a1ed59d53f",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "If there is any not-ready node, why not just return here?\n",
        "createdAt" : "2016-08-30T15:26:54Z",
        "updatedAt" : "2016-08-31T13:08:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "44a3bd4b-1406-435c-8585-5b503591bfb4",
        "parentId" : "f5adb432-e415-4daa-aa9c-d7a1ed59d53f",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "To log all problems if the problem persists.\n",
        "createdAt" : "2016-08-31T13:07:47Z",
        "updatedAt" : "2016-08-31T13:08:12Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8dbdc1695ae636dbb42cbe88fc5a68e7ae060c8",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +4059,4063 @@\t\tfor _, node := range nodes.Items {\n\t\t\tif !IsNodeConditionSetAsExpected(&node, api.NodeReady, true) {\n\t\t\t\tnotReady = append(notReady, node)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "5129bcce-d6dc-44b3-a0b5-57ab04428a8e",
    "prId" : 30670,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f97d6ba2-164f-474d-aa62-e53e69c12edc",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Can you update the `ScaleByRCLabel` function to use this one instead of `waitForRCPodsGone` and remove `waitForRCPodsGone`?\n",
        "createdAt" : "2016-08-16T10:37:24Z",
        "updatedAt" : "2016-08-17T00:06:47Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bb159e8f6444414c4befc64c8c48f4170b072fe",
    "line" : null,
    "diffHunk" : "@@ -1,1 +3176,3180 @@\n// waitForPodsGone waits until there are no pods left in the PodStore.\nfunc waitForPodsGone(ps *PodStore, interval, timeout time.Duration) error {\n\treturn wait.PollImmediate(interval, timeout, func() (bool, error) {\n\t\tif pods := ps.List(); len(pods) == 0 {"
  },
  {
    "id" : "f53b1a8a-e480-4a55-8e41-bb193d398656",
    "prId" : 29847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59cfe90e-bdd0-4db1-b66d-d37da93379ef",
        "parentId" : null,
        "authorId" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "body" : "break if update succeeded.\n\n``` go\nif err == nil {\n    break;\n}\n```\n",
        "createdAt" : "2016-08-02T07:20:21Z",
        "updatedAt" : "2016-08-02T09:02:14Z",
        "lastEditedBy" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "tags" : [
        ]
      },
      {
        "id" : "959e3202-14f5-4974-877d-f3255cf2893e",
        "parentId" : "59cfe90e-bdd0-4db1-b66d-d37da93379ef",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "good catch - temporarily removing lgtm\n",
        "createdAt" : "2016-08-02T07:29:31Z",
        "updatedAt" : "2016-08-02T09:02:14Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b27630577c40e98f758ad31e3ed1b34afdea7d44",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2877,2881 @@\t\t} else {\n\t\t\tbreak\n\t\t}\n\t\ttime.Sleep(100 * time.Millisecond)\n\t}"
  },
  {
    "id" : "a1c15484-f80d-4b68-9fcb-a47594a75e53",
    "prId" : 29847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "156f9a94-a749-494e-8cbe-e97c7b7002ee",
        "parentId" : null,
        "authorId" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "body" : "probably should re-get node when retry, since node is updated by someone else and node.ResourceVersion is out of date.\n",
        "createdAt" : "2016-08-02T08:00:23Z",
        "updatedAt" : "2016-08-02T09:02:14Z",
        "lastEditedBy" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "tags" : [
        ]
      },
      {
        "id" : "7df4bbfb-4a20-4b18-9f67-4a2ca04bcbb0",
        "parentId" : "156f9a94-a749-494e-8cbe-e97c7b7002ee",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Right.\n",
        "createdAt" : "2016-08-02T08:33:22Z",
        "updatedAt" : "2016-08-02T09:02:14Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b27630577c40e98f758ad31e3ed1b34afdea7d44",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2868,2872 @@\t\t}\n\t\tdelete(node.Labels, labelKey)\n\t\tnodeUpdated, err = c.Nodes().Update(node)\n\t\tif err != nil {\n\t\t\tif !apierrs.IsConflict(err) {"
  },
  {
    "id" : "32f828d5-7e77-476c-a651-fe1394edc5d8",
    "prId" : 27561,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd011a7-a1aa-4dd7-9fa1-9bcbd58dc71f",
        "parentId" : null,
        "authorId" : null,
        "body" : "Please use one of the standard timeouts in utils. \n\nhttps://github.com/kubernetes/kubernetes/blob/master/docs/devel/writing-good-e2e-tests.md\n\nPerhaps ServiceRespondingTimeout?\n\nhttps://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go#L131\n",
        "createdAt" : "2016-06-16T19:42:24Z",
        "updatedAt" : "2016-06-16T22:35:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ec6543e1e259f34548113933de5f8e583561bf5f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +841,845 @@// It tests the readiness by sending a GET request and expecting a non error response.\nfunc WaitForFederationApiserverReady(c *federation_internalclientset.Clientset) error {\n\treturn wait.PollImmediate(time.Second, 1*time.Minute, func() (bool, error) {\n\t\t_, err := c.Federation().Clusters().List(api.ListOptions{})\n\t\tif err != nil {"
  },
  {
    "id" : "aeaf68d4-ad3d-42a7-be84-3348829d63c0",
    "prId" : 27019,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c44365e3-8cc6-47b0-8f57-708f20043d98",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "nit: why not just pipe through containerSubstr into this func? I only see 2 uses of it. \n",
        "createdAt" : "2016-06-14T21:24:04Z",
        "updatedAt" : "2016-06-16T22:14:27Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "73a55edd-8e07-4a15-8855-16ff410de023",
        "parentId" : "c44365e3-8cc6-47b0-8f57-708f20043d98",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "I didn't understand your comment - iterate through containers in the pod and call the function with every container ?\n",
        "createdAt" : "2016-06-14T22:35:07Z",
        "updatedAt" : "2016-06-16T22:14:27Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee7ca66dbad52b453bede0da5d1f8b10f972c360",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +703,707 @@\tLogf(\"Running kubectl logs on pods with labels %v in %v\", match, ns)\n\tfor _, pod := range podList.Items {\n\t\tkubectlLogPod(c, pod, \"\")\n\t}\n}"
  },
  {
    "id" : "9e6e3646-06d6-4ce5-a215-c5b584b78bda",
    "prId" : 27012,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "452a0e9a-bedd-4e2e-a6d2-d28c390e5991",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Why do we use the options.LabelSelector in the production code, and just the raw options here?\n",
        "createdAt" : "2016-06-08T01:33:27Z",
        "updatedAt" : "2016-06-10T16:55:37Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "19ff3e91-6311-472d-a05e-c4e5a7dfaa4f",
        "parentId" : "452a0e9a-bedd-4e2e-a6d2-d28c390e5991",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Nevermind, I see these are different client types.\n",
        "createdAt" : "2016-06-08T17:29:42Z",
        "updatedAt" : "2016-06-10T16:55:37Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "764df2e096333e79fedf31dace1a71510218af5d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +3066,3070 @@\tpodList, err := deploymentutil.ListPods(deployment,\n\t\tfunc(namespace string, options api.ListOptions) (*api.PodList, error) {\n\t\t\treturn c.Core().Pods(namespace).List(options)\n\t\t})\n\tif err != nil {"
  },
  {
    "id" : "899a673b-e58f-4bd9-9d9a-aaa10a24bf4a",
    "prId" : 26372,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61553def-79af-4079-aca5-51fc474f070b",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I'd ask for a godoc comment for the public method but it looks like a number of public methods in this file don't bother, so I leave it to you\n",
        "createdAt" : "2016-05-26T18:33:30Z",
        "updatedAt" : "2016-05-26T18:33:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "76649cf4-8972-49b3-80ca-04e5e79c5bcd",
        "parentId" : "61553def-79af-4079-aca5-51fc474f070b",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I'll do that in a followup PR, so that we can get this in sooner (it has passed tests already).\n",
        "createdAt" : "2016-05-26T19:37:17Z",
        "updatedAt" : "2016-05-26T19:37:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "17928cc1dca194bd1738e17ab6db56a2bc1273cf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4082,4086 @@}\n\nfunc GetPodsInNamespace(c *client.Client, ns string, ignoreLabels map[string]string) ([]*api.Pod, error) {\n\tpods, err := c.Pods(ns).List(api.ListOptions{})\n\tif err != nil {"
  },
  {
    "id" : "7aef1f90-68bf-405b-b372-8b6465c8850e",
    "prId" : 26146,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ec8b355-a682-4495-a487-9c7e388afbc8",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "add an info that you're skipping dumping because the cluster is too large.\n",
        "createdAt" : "2016-05-24T08:22:08Z",
        "updatedAt" : "2016-05-24T08:23:50Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "4094e12e-d198-420e-be6e-f22504d1fe6c",
        "parentId" : "4ec8b355-a682-4495-a487-9c7e388afbc8",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-05-24T08:23:53Z",
        "updatedAt" : "2016-05-24T08:23:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd920de4a40ebe10929ae7eb46286683bd0f3b8b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2276,2280 @@\t\t} else {\n\t\t\tLogf(\"skipping dumping cluster info - cluster too large\")\n\t\t}\n\t} else {\n\t\tLogf(\"unable to fetch node list: %v\", err)"
  },
  {
    "id" : "bba3ec6e-2971-4846-be9b-edb4350a116b",
    "prId" : 25972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60f55467-3e35-419f-b5f0-38065670f407",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "probably need to handle `sVer.Platform` being empty - this can happen in skew testing with new e2es against an older cluster, for example.\n",
        "createdAt" : "2016-05-20T17:40:42Z",
        "updatedAt" : "2016-05-26T16:17:01Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "5088124c-0f13-425e-b0c5-b880d8fff99a",
        "parentId" : "60f55467-3e35-419f-b5f0-38065670f407",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "You mean `if err != nil || sVer.Platform == \"\" { ...`?\n",
        "createdAt" : "2016-05-20T17:43:06Z",
        "updatedAt" : "2016-05-26T16:17:01Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "f3e9a7c4-16db-4e53-baed-5b1d98576b14",
        "parentId" : "60f55467-3e35-419f-b5f0-38065670f407",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "yeah, that should work.\n",
        "createdAt" : "2016-05-20T17:47:27Z",
        "updatedAt" : "2016-05-26T16:17:01Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "79ca1911e1de0e6dce501ac35900eef308db0806",
    "line" : null,
    "diffHunk" : "@@ -1,1 +150,154 @@\t\t// Split the platform string into OS and Arch separately.\n\t\t// The platform string may for example be \"linux/amd64\", \"linux/arm\" or \"windows/amd64\".\n\t\tosArchArray := strings.Split(sVer.Platform, \"/\")\n\t\tarch = osArchArray[1]\n\t}"
  },
  {
    "id" : "1863cf38-7afc-40d0-b3db-9591ab87dc2d",
    "prId" : 25972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79e3ef83-42d4-48ac-8e93-6c40f6eb3464",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I think you meant \"same architecture the _test_ is running on\"?\n",
        "createdAt" : "2016-05-26T20:39:29Z",
        "updatedAt" : "2016-05-26T20:39:29Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "d5f50e51-f9a8-45bf-bd91-d8f3ba325779",
        "parentId" : "79e3ef83-42d4-48ac-8e93-6c40f6eb3464",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Oh my... Things become a bit weird sometimes when updating words in a comment without reading the whole sentence :smile: \nThanks for spotting.\n",
        "createdAt" : "2016-05-30T12:23:11Z",
        "updatedAt" : "2016-05-30T12:23:11Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "79ca1911e1de0e6dce501ac35900eef308db0806",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +161,165 @@}\n\n// GetPauseImageNameForHostArch() fetches the pause image for the same architecture the machine is running on.\nfunc GetPauseImageNameForHostArch() string {\n\treturn currentPodInfraContainerImageName + \"-\" + goRuntime.GOARCH + \":\" + currentPodInfraContainerImageVersion"
  },
  {
    "id" : "7ee70049-d36a-4b52-a59c-05db92f19c50",
    "prId" : 25968,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "987ba287-d7bb-4a14-957f-1af4f0d11e17",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Remove from scheduler_predicates as well.\n",
        "createdAt" : "2016-07-28T18:13:22Z",
        "updatedAt" : "2016-08-04T15:46:41Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "d70f3799-2ad2-48ed-a126-8ecf6b89f490",
        "parentId" : "987ba287-d7bb-4a14-957f-1af4f0d11e17",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "This was originally removed.  Must have been added back from a rebase.\n",
        "createdAt" : "2016-07-29T14:57:40Z",
        "updatedAt" : "2016-08-04T15:46:41Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      },
      {
        "id" : "cb22452d-c650-44b5-8773-4947a46a31c4",
        "parentId" : "987ba287-d7bb-4a14-957f-1af4f0d11e17",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Make sure that the logic didn't change then.\n",
        "createdAt" : "2016-07-29T15:14:56Z",
        "updatedAt" : "2016-08-04T15:46:41Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "99381f11-f157-4d39-aef9-b20b625feb9d",
        "parentId" : "987ba287-d7bb-4a14-957f-1af4f0d11e17",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "Done\n",
        "createdAt" : "2016-07-29T18:08:42Z",
        "updatedAt" : "2016-08-04T15:46:41Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb72b501352544c943652616a1955ff26364b839",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +4692,4696 @@\n// WaitForStableCluster waits until all existing pods are scheduled and returns their amount.\nfunc WaitForStableCluster(c *client.Client, masterNodes sets.String) int {\n\ttimeout := 10 * time.Minute\n\tstartTime := time.Now()"
  },
  {
    "id" : "bef8c073-e09f-4163-bda3-3906be404e64",
    "prId" : 25784,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "769a880f-aa36-425a-b38e-6f05d78bf53c",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "s/'%s'/%q\n",
        "createdAt" : "2016-05-23T18:52:38Z",
        "updatedAt" : "2016-05-23T19:17:28Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "730555b09bea6be2a591f637116dca19cb85b118",
    "line" : null,
    "diffHunk" : "@@ -1,1 +435,439 @@\t\t\treturn false, nil\n\t\t}\n\t\tif len(podList.Items) == 0 {\n\t\t\tLogf(\"Waiting for pods to enter Success, but no pods in %q match label %v\", ns, successPodLabels)\n\t\t\treturn true, nil"
  },
  {
    "id" : "5dbb3997-72bd-4a21-ad6c-854fbb7281dc",
    "prId" : 25584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58bc0275-8e57-4a55-b41a-494d8f6ac7ac",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "was this a bad rebase? `c` is passed as an argument and now you're overwriting it.\n",
        "createdAt" : "2016-07-29T22:06:40Z",
        "updatedAt" : "2016-07-29T22:06:40Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6166083c78063e719017ddd8fb2cf4882e3749bf",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +654,658 @@// to flip to Ready, log its output and delete it.\nfunc RunKubernetesServiceTestContainer(c *client.Client, ns string) {\n\tc, err := LoadClient()\n\tif err != nil {\n\t\tLogf(\"Failed to load client\")"
  }
]