[
  {
    "id" : "c95770f7-a422-461c-9b00-67af84492df4",
    "prId" : 77525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77525#pullrequestreview-235272873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51dd21b4-c833-42b9-b5d1-0ceca584eec9",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "This is still an API change. When this create.go was initially merged, I was explicitly asked to split it up so that someone can load items, patch them (either with the existing `PatchItems` or some custom code), and then create them.\r\n\r\nSuch custom code is meant to have access to individual building blocks like this `PatchName`.",
        "createdAt" : "2019-05-08T07:11:31Z",
        "updatedAt" : "2019-05-08T07:18:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "1e7b1681-5a00-47e3-8c1e-10ce3277836d",
        "parentId" : "51dd21b4-c833-42b9-b5d1-0ceca584eec9",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "feel free to submit a PR changing these back to external",
        "createdAt" : "2019-05-08T20:23:36Z",
        "updatedAt" : "2019-05-08T20:23:36Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c50e7fd30155d05fdde4174169945a43e26cf867",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +291,295 @@// uniquifyName makes the name of some item unique per namespace by appending the\n// generated unique name of the test namespace.\nfunc (f *Framework) uniquifyName(item *string) {\n\tif *item != \"\" {\n\t\t*item = *item + \"-\" + f.UniqueName"
  },
  {
    "id" : "08970cf8-f4ec-4325-8951-a06af108ca27",
    "prId" : 77525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77525#pullrequestreview-234897035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d3590fd-2fb6-4684-bb48-234300f267d7",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Now storage classes are \"more unique\" than other items and regardless what we call the function which does this, I'm worried that this will be confusing.\r\n\r\nWhere is this failing test code that must load storage classes twice into the same namespace?",
        "createdAt" : "2019-05-08T07:16:53Z",
        "updatedAt" : "2019-05-08T07:18:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c50e7fd30155d05fdde4174169945a43e26cf867",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +336,340 @@\t\tf.uniquifyName(&item.Name)\n\tcase *storage.StorageClass:\n\t\tf.randomizeStorageClassName(&item.Name)\n\tcase *v1.ServiceAccount:\n\t\tf.patchNamespace(&item.ObjectMeta.Namespace)"
  },
  {
    "id" : "bd8c89b2-75e3-40f8-a467-44fa73b7e135",
    "prId" : 77525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77525#pullrequestreview-234897035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe89689-e9a9-4f41-8dd7-83f9a1b87e7f",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Same API change here.\r\n",
        "createdAt" : "2019-05-08T07:18:02Z",
        "updatedAt" : "2019-05-08T07:18:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c50e7fd30155d05fdde4174169945a43e26cf867",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +309,313 @@// all items can be namespaced. For those, the name also needs to be\n// patched.\nfunc (f *Framework) patchNamespace(item *string) {\n\tif f.Namespace != nil {\n\t\t*item = f.Namespace.GetName()"
  },
  {
    "id" : "3f2cfb21-1775-4690-88df-161421f068ae",
    "prId" : 69868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69868#pullrequestreview-167221141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4de43d66-e215-4243-bb37-9b5c3e30fe82",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Or create one per driver?",
        "createdAt" : "2018-10-23T01:10:48Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "75b0e07e-c052-4625-b2c5-bbb7fd398761",
        "parentId" : "4de43d66-e215-4243-bb37-9b5c3e30fe82",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I don't know how `e2e-test-privileged-psp` gets set up. It's not done by the `e2e.test` binary at the moment. My understanding was that it is something that has to be configured in the cluster before starting the test.\r\n",
        "createdAt" : "2018-10-23T05:35:48Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "248df4ac5800ac5415a5cc154e448bfb640525ed",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +292,296 @@\t\t// All those names are excempt from renaming. That list could be populated by querying\n\t\t// and get extended by tests.\n\t\tif item.Name != \"e2e-test-privileged-psp\" {\n\t\t\tf.PatchName(&item.Name)\n\t\t}"
  },
  {
    "id" : "4590e145-50a3-4b7f-ba52-59ca9c9a55a1",
    "prId" : 69868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69868#pullrequestreview-168417905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558259fc-d620-4afb-a146-36f41352a979",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This model becomes challenging if we ever have to support CRDs in the future.",
        "createdAt" : "2018-10-23T01:12:35Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "832beeb1-1971-4ba5-9380-f64029be4752",
        "parentId" : "558259fc-d620-4afb-a146-36f41352a979",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Can you elaborate further what the problem would be? I'm not familiar with CRDs, but looking at https://github.com/kubernetes/csi-api/blob/master/pkg/crd/crd.go and https://github.com/kubernetes/csi-api/blob/master/pkg/crd/testdata/csidriver.yaml, a CRD looks like normal API objects that can be populate using this approach from a .yaml file.",
        "createdAt" : "2018-10-23T05:48:51Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "271298cd-8a10-4356-8d19-5c54255020ff",
        "parentId" : "558259fc-d620-4afb-a146-36f41352a979",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Every future CRD that we may want to patch needs logic builtin to the e2e binary.",
        "createdAt" : "2018-10-24T20:41:03Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "34f196f3-0967-454c-bbc6-656c75f8d165",
        "parentId" : "558259fc-d620-4afb-a146-36f41352a979",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "We don't have to use this approach for CRDs, or we do the patching inside the test which knowns about the CRD. I'm pretty sure that some solution can be found.\r\n",
        "createdAt" : "2018-10-25T14:38:14Z",
        "updatedAt" : "2018-10-26T22:40:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "248df4ac5800ac5415a5cc154e448bfb640525ed",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +254,258 @@var ItemNotSupported = errors.New(\"not supported\")\n\nvar Factories = map[What]ItemFactory{\n\t{\"ClusterRole\"}:        &ClusterRoleFactory{},\n\t{\"ClusterRoleBinding\"}: &ClusterRoleBindingFactory{},"
  },
  {
    "id" : "80237451-63de-44db-8bcb-1b80d9c8c4f1",
    "prId" : 69868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69868#pullrequestreview-169322721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c826e8d8-86a0-4710-bcd8-2f0cd5fdbe7a",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Would it make sense not to support yaml files with `---`, i.e return error here? It will increase number of yaml files, but it would make more obvious what objects are created. Maybe a test could apply whole directory, something like `kubectl apply -f test/e2e/testing-manifests/storage-csi/hostpath/hostpath`, just using bindata.go \"directory\" traversing.",
        "createdAt" : "2018-10-29T12:34:40Z",
        "updatedAt" : "2018-10-29T12:34:40Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "e7946005-c385-45d2-b683-369f972ba928",
        "parentId" : "c826e8d8-86a0-4710-bcd8-2f0cd5fdbe7a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I find it important that testing can use exactly the same .yaml files as the actual deployment of a driver. Then one can `cp` the upstream file into e2e suite without manual modifications which then would have to be repeated over and over again when updating drivers.\r\n\r\nWe can't just change upstream files either, because they might use `---` because it is convenient to have just a single file (as in, for example, https://github.com/kubernetes-csi/external-attacher/blob/master/deploy/kubernetes/rbac.yaml).\r\n\r\n",
        "createdAt" : "2018-10-29T13:24:26Z",
        "updatedAt" : "2018-10-29T13:24:26Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "78fc9310-c445-4996-b33c-b49bf155c9a3",
        "parentId" : "c826e8d8-86a0-4710-bcd8-2f0cd5fdbe7a",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "ack",
        "createdAt" : "2018-10-29T14:17:22Z",
        "updatedAt" : "2018-10-29T14:17:23Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "248df4ac5800ac5415a5cc154e448bfb640525ed",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\t}\n\n\t\t// Split at the \"---\" separator before working on\n\t\t// individual item. Only works for .yaml.\n\t\t//"
  },
  {
    "id" : "5f46c11b-84be-43aa-8822-de7af23c3881",
    "prId" : 69868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69868#pullrequestreview-169936753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28e37f28-8b20-47b2-9483-64316219c110",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Printing all of the YAMLs is far too noisy - https://github.com/kubernetes/kubernetes/issues/70448 ",
        "createdAt" : "2018-10-30T18:37:36Z",
        "updatedAt" : "2018-10-30T18:37:37Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "248df4ac5800ac5415a5cc154e448bfb640525ed",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@func (f *Framework) PatchItems(items ...interface{}) error {\n\tfor _, item := range items {\n\t\tLogf(\"patching original content of %T:\\n%s\", item, PrettyPrint(item))\n\t\tif err := f.patchItemRecursively(item); err != nil {\n\t\t\treturn err"
  }
]