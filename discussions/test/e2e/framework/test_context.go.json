[
  {
    "id" : "a65f676e-e218-486f-b231-b8986a845a71",
    "prId" : 103109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103109#pullrequestreview-691443779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3fe3fdf-cd02-40c2-96aa-66b7b06ccfc9",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I wonder whether this should be `errors.Is(err, os.ErrNotExist)` as in https://golang.org/pkg/errors/#example_Is\r\n\r\nBut `os.IsNotExist` also returns true for some other errors, so it's not quite the same.\r\n\r\nLet's keep it as-is.\r\n",
        "createdAt" : "2021-06-24T07:52:06Z",
        "updatedAt" : "2021-06-24T07:52:06Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "12dcd2f84d49000ff882e879dbac8e9d64dfe543",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +485,489 @@\tTestContext.CloudConfig.Provider, err = SetupProviderConfig(TestContext.Provider)\n\tif err != nil {\n\t\tif os.IsNotExist(errors.Unwrap(err)) {\n\t\t\t// Provide a more helpful error message when the provider is unknown.\n\t\t\tvar providers []string"
  },
  {
    "id" : "3a80bba3-a8e3-4cb5-901d-00554c65d371",
    "prId" : 97028,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97028#pullrequestreview-659039488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i don't think we should make the framework test context aware of such an option.\r\nin fact a lot of options should be trimmed out of it if we eventually want to treat it as an API.\r\n\r\n/cc @oomichi @alejandrox1\r\n",
        "createdAt" : "2020-12-03T21:18:37Z",
        "updatedAt" : "2020-12-03T21:18:37Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "59358408-1ed6-4f1a-88af-8e2728819c85",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@neolit123 As you stated, this still can be applied to other options, only used on Node E2E scope, inside the  `NodeTestContextType` and even `TestContextType` directly. I don't see any other immediate place (used in the Node E2E suite) to set up and share the variable without reading the flag on init(), any suggestion? ",
        "createdAt" : "2020-12-21T20:43:26Z",
        "updatedAt" : "2020-12-21T20:52:48Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "88f20fa9-166c-4499-b6d7-b370a012c268",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "given a number of flags already use the framework context for storage, this one can go there as well.\r\nhttps://github.com/kubernetes/kubernetes/blob/00da68dbc25d9d12b05200b9207abc14dde71246/test/e2e_node/e2e_node_suite_test.go#L81-L87\r\n\r\nbut long term this should be decoupled.\r\nideally the PR should pass review by SIG Node / e2e_node owners.\r\n",
        "createdAt" : "2020-12-21T20:57:45Z",
        "updatedAt" : "2020-12-21T20:57:46Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "10653962-6d48-4bfc-89bf-20618a8adc36",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "d8a01e28-9d15-4495-9c11-528752d69db2",
        "body" : "According to the ln#49-76,  \r\n\r\n`TestContextType` contains test settings and global state. It is due to historical reasons that  it is a mixture of items managed by the test framework itself, cloud providers and individual tests, the end goal is to move anything not required by the framework into the code which uses the settings.\r\n\r\nThe recommendation for those settings is:\r\n- They are stored in their own context structure or local variables. (In `test/e2e_node/e2e_node_suite_test.go` as suggested)\r\n- The standard `flag` package is used to register them.\r\n- The flag name should follow the pattern `<part1>.<part2>....<partn>` where the prefix is unlikely to conflict with other tests or standard packages and each part is in lower camel case.  (eg: `node.kubelet.restartOnExit `?)\r\n\r\nWDYT?",
        "createdAt" : "2021-04-20T23:51:08Z",
        "updatedAt" : "2021-04-21T00:39:45Z",
        "lastEditedBy" : "d8a01e28-9d15-4495-9c11-528752d69db2",
        "tags" : [
        ]
      },
      {
        "id" : "53b63e38-a514-4338-b5c1-07fe3ba48fad",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@SergeyKanzhelev this is an open discussion, do reusing the TestContext for node tests a topic to be reviewed? Should we start on this PR? \r\n\r\nI think @alejandrox1 started a document for this refactoring.",
        "createdAt" : "2021-05-12T17:03:46Z",
        "updatedAt" : "2021-05-13T15:36:11Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "a69be073-f702-49ec-af0d-753a13434b90",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I like the suggested refactoring, but I agree it is outside the scope of this PR. I think @neolit123 agreed with this. @ike-ma any concerns with making refactoring separately?",
        "createdAt" : "2021-05-13T06:22:48Z",
        "updatedAt" : "2021-05-13T06:22:48Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "2f470505-9093-4802-875d-92ec697ad5eb",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : "> @SergeyKanzhelev this is an open discussion, do reusing the TestContext for node tests to be reviewed, starting on this PR?\r\n> \r\n> I think @alejandrox1 started a document for this refactoring.\r\n\r\n@alejandrox1 @knabben Do we have an issue for the refactoring?",
        "createdAt" : "2021-05-13T09:50:56Z",
        "updatedAt" : "2021-05-13T09:50:57Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      },
      {
        "id" : "8f8dcfe8-f91f-4ed3-b583-725bcf806504",
        "parentId" : "9f47f6fc-7f90-4b99-ad28-142f29ee5492",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@SergeyKanzhelev @cynepco3hahue https://github.com/kubernetes/kubernetes/issues/101986",
        "createdAt" : "2021-05-13T15:43:05Z",
        "updatedAt" : "2021-05-13T15:43:05Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      }
    ],
    "commit" : "00da68dbc25d9d12b05200b9207abc14dde71246",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@\tSystemSpecName string\n\t// RestartKubelet restarts Kubelet unit when the process is killed.\n\tRestartKubelet bool\n\t// ExtraEnvs is a map of environment names to values.\n\tExtraEnvs map[string]string"
  },
  {
    "id" : "a73df10c-a710-43cf-ab46-256406c8effe",
    "prId" : 96128,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96128#pullrequestreview-522779909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b3a105b-cf05-44fd-a3b8-9eb17c936fc9",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "If someone has an opinion on where to put this for everyone to consistently access it, or if I should just copy it into the remote runner code.",
        "createdAt" : "2020-11-03T16:30:08Z",
        "updatedAt" : "2020-11-03T18:10:17Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "cd870bac-e233-4aa3-9312-2401af3253a3",
        "parentId" : "6b3a105b-cf05-44fd-a3b8-9eb17c936fc9",
        "authorId" : "26c548e7-f891-4302-8cf8-20a932e416ed",
        "body" : "Dunno if copying is ideal either. Maybe [util.go](https://github.com/kubernetes/kubernetes/blob/73190add9114a00ffe839acdd8c408c1e41ab4c5/test/e2e/framework/util.go)? I don't love kitchen sink files generally, but don't know if this one has any better home.",
        "createdAt" : "2020-11-03T17:18:06Z",
        "updatedAt" : "2020-11-03T18:10:17Z",
        "lastEditedBy" : "26c548e7-f891-4302-8cf8-20a932e416ed",
        "tags" : [
        ]
      },
      {
        "id" : "2dee7fd8-d4d6-47b4-aff4-b2f8be33ade8",
        "parentId" : "6b3a105b-cf05-44fd-a3b8-9eb17c936fc9",
        "authorId" : "26c548e7-f891-4302-8cf8-20a932e416ed",
        "body" : "It's also not the end of the world to leave it here for now.",
        "createdAt" : "2020-11-03T17:19:58Z",
        "updatedAt" : "2020-11-03T18:10:17Z",
        "lastEditedBy" : "26c548e7-f891-4302-8cf8-20a932e416ed",
        "tags" : [
        ]
      },
      {
        "id" : "719ef780-52ba-4557-875f-54044b51e1df",
        "parentId" : "6b3a105b-cf05-44fd-a3b8-9eb17c936fc9",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Need to add the comment of this function to pass pull-kubernetes-verify job.\r\n```\r\nErrors from golint:\r\ntest/e2e/framework/test_context.go:410:1: exported function GenerateSecureToken should have comment or be unexported\r\n```",
        "createdAt" : "2020-11-03T18:42:13Z",
        "updatedAt" : "2020-11-03T18:43:09Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b8c1dcd193c3612bc018d5826893d4ce6064c7c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +411,415 @@// of random bytes encoded as base64 for use as a Bearer Token during\n// communication with an APIServer\nfunc GenerateSecureToken(tokenLen int) (string, error) {\n\t// Number of bytes to be tokenLen when base64 encoded.\n\ttokenSize := math.Ceil(float64(tokenLen) * 6 / 8)"
  },
  {
    "id" : "0cac0231-23ab-42a9-b9bb-b6daecdae794",
    "prId" : 88924,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88924#pullrequestreview-371558930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c12e0648-f0db-4873-bd10-231de7d23ae6",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "The new option name seems good for me because that is the same pattern as  the above `list-images`.",
        "createdAt" : "2020-03-09T18:22:34Z",
        "updatedAt" : "2020-04-01T14:49:11Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "7d13291c-b9ea-4fab-8649-b52b9af24312",
        "parentId" : "c12e0648-f0db-4873-bd10-231de7d23ae6",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "thx",
        "createdAt" : "2020-03-09T22:01:14Z",
        "updatedAt" : "2020-04-01T14:49:11Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1c948acdc93ef72683e6398c2a25c313ff5945c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +305,309 @@\n\tflags.BoolVar(&TestContext.ListImages, \"list-images\", false, \"If true, will show list of images used for runnning tests.\")\n\tflags.BoolVar(&TestContext.ListConformanceTests, \"list-conformance-tests\", false, \"If true, will show list of conformance tests.\")\n\tflags.StringVar(&TestContext.KubectlPath, \"kubectl-path\", \"kubectl\", \"The kubectl binary to use. For development, you might use 'cluster/kubectl.sh' here.\")\n"
  },
  {
    "id" : "0a8a5b03-8fe1-4fc3-beee-10f26208ce12",
    "prId" : 88531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88531#pullrequestreview-366078766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc389c21-4df5-431f-9374-23db4a76f13b",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i'd reword to:\r\n> A file that contains Docker credentials which can be used to pull test images from private registries",
        "createdAt" : "2020-02-27T23:47:56Z",
        "updatedAt" : "2020-02-27T23:47:56Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a8183d2620ce37299eda3eefd8f6715e8ea6b7a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +306,310 @@\tflags.StringVar(&TestContext.ProgressReportURL, \"progress-report-url\", \"\", \"The URL to POST progress updates to as the suite runs to assist in aiding integrations. If empty, no messages sent.\")\n\tflags.StringVar(&TestContext.SpecSummaryOutput, \"spec-dump\", \"\", \"The file to dump all ginkgo.SpecSummary to after tests run. If empty, no objects are saved/printed.\")\n\tflags.StringVar(&TestContext.DockerConfigFile, \"docker-config-file\", \"\", \"A file that contains credentials which can be used to pull images from certain private registries, needed for a test.\")\n}\n"
  },
  {
    "id" : "5dac4d9c-7a0e-4274-b62a-397719fd1379",
    "prId" : 80398,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80398#pullrequestreview-266576614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "/hold \r\n\r\nIMO we need to have auto-detection for this type of behavior. \r\n\r\n/assign @timothysc. ",
        "createdAt" : "2019-07-22T17:33:32Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "816a74c4-88b3-4732-952b-d92fbe81fc56",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "@timothysc I've added the variable here so is available to all the tests, but it's populated using a detection function at the beginning of the testing, in `test/e2e/e2e.go`, I've removed the flag",
        "createdAt" : "2019-07-23T07:48:10Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "889d464a-3e21-4f9e-baba-589228097331",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "there is so much random stuff in the context and that's a prime example of organic growth.\r\n\r\nseems to me we should not add more fields to the context or flags to the CLI, or at least that's what i understood was the plan. it might slightly increase the test suite runtime if the detection func  is called multiple times, but it still feels better.\r\n",
        "createdAt" : "2019-07-23T10:53:24Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "dfa0cbbf-ed41-4839-8217-2ae8beb9781a",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I didn't know how to make this variable available to all the tests, would be happy to change it if you give me some advice.\r\n I don't think that running the function multiple times is a good option, at least without caching, since the IP family of the cluster is immutable.",
        "createdAt" : "2019-07-23T11:28:46Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "9092066f-0c26-4a39-b24d-a19549ab3d2e",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "> I didn't know how to make this variable available to all the tests, would be happy to change it if you give me some advice.\r\n\r\nthe context is the dumping ground for all shared fields, which wrong. but AFAIK there is no other way to share properties right now.\r\n\r\n> I don't think that running the function multiple times is a good option, at least without caching, since the IP family of the cluster is immutable.\r\n\r\nin my view the API call should be pretty cheap, but yes if the `kubernetes` service is not changing it's IP family then it is a bit of a waste. i'd still go calling it multiple times and not depending on the context though.\r\n\r\n/assign @oomichi \r\n^ for opinion here too.\r\n\r\n",
        "createdAt" : "2019-07-23T12:17:23Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "4215dfd1-2428-4872-ab00-81c6a65d6b2d",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Sorry for my late response.\r\nThe cost of the API call `c.CoreV1().Services(metav1.NamespaceDefault).Get(\"kubernetes\", metav1.GetOptions{})` can be cheap then it doesn't matter if we don't use cache here.\r\nI saw @neolit123's point because I am not sure the string `ipv4` / `ipv6` could be nice for the global context for the code readability.\r\nHow about adding comment at least like\r\n```\r\n\t// The IP Family of the cluster (\"ipv4\" or \"ipv6\")\r\n\tIPFamily string\r\n```\r\neven if not changing the code?",
        "createdAt" : "2019-07-25T01:37:41Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "4e89776c-7962-4bb3-b1e3-83cad8d99f98",
        "parentId" : "9a7bc6f5-4cb3-420e-90d5-e7adea407cc2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "done",
        "createdAt" : "2019-07-25T11:58:51Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd15f3f9f76855d61be1396888fae0cc6499df14",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +167,171 @@\n\t// The Default IP Family of the cluster (\"ipv4\" or \"ipv6\")\n\tIPFamily string\n}\n"
  },
  {
    "id" : "f2ebac04-5f4b-44b5-80a0-070db19bbe81",
    "prId" : 73402,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73402#pullrequestreview-197205050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd1f3621-b345-4ef5-9912-64045efcdb4d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Please add a //TODO: when providers are extracted this code should be removed. ",
        "createdAt" : "2019-01-28T16:49:49Z",
        "updatedAt" : "2019-01-31T14:57:19Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "99293572-bd69-4dd3-b015-14dbc7433b65",
        "parentId" : "cd1f3621-b345-4ef5-9912-64045efcdb4d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Okay.\r\n",
        "createdAt" : "2019-01-28T18:35:43Z",
        "updatedAt" : "2019-01-31T14:57:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "d60288fa-5a5f-495e-bb76-6b92060aab49",
        "parentId" : "cd1f3621-b345-4ef5-9912-64045efcdb4d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I've added a TODO and link to https://github.com/kubernetes/kubernetes/issues/70194\r\n\r\nI've kept the wording a bit more open-ended because I can imagine scenarios where kubernetes/kubernetes itself has no provider-specific code, but still supports building custom testsuites where such code is included. That would allow different cloud providers to share common tests in a neutral location when those tests depend on cloud-provider specific code. Whether that is something that Kubernetes as an organization wants to support I don't know.",
        "createdAt" : "2019-01-28T19:00:45Z",
        "updatedAt" : "2019-01-31T14:57:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b5e65977cd56472510a74155631c8980d3ffdc7",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +416,420 @@\t\tif os.IsNotExist(errors.Cause(err)) {\n\t\t\t// Provide a more helpful error message when the provider is unknown.\n\t\t\tvar providers []string\n\t\t\tfor _, name := range GetProviders() {\n\t\t\t\t// The empty string is accepted, but looks odd in the output below unless we quote it."
  },
  {
    "id" : "9fc5ed97-d94f-43ca-9daf-1c8d9eaa374c",
    "prId" : 73402,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73402#pullrequestreview-197196216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ce306b6-200a-44ff-98d1-234d19ee456e",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm not really a fan, but if your long term goal is to extract provider code then I'll be ok with this if there are tracking/umbrealla issues that outline path forwards. ",
        "createdAt" : "2019-01-28T16:51:02Z",
        "updatedAt" : "2019-01-31T14:57:19Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "b06de1df-cfe7-4edf-a69d-7d84a7446c7d",
        "parentId" : "6ce306b6-200a-44ff-98d1-234d19ee456e",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I personally don't have plans in that direction, but it is getting tracked here: https://github.com/kubernetes/kubernetes/issues/70194",
        "createdAt" : "2019-01-28T18:42:25Z",
        "updatedAt" : "2019-01-31T14:57:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b5e65977cd56472510a74155631c8980d3ffdc7",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +429,433 @@\t\t\tklog.Errorf(\"Failed to setup provider config for %q: %v\", TestContext.Provider, err)\n\t\t}\n\t\tos.Exit(1)\n\t}\n}"
  },
  {
    "id" : "77f78794-41d0-45e8-b4b6-9bef0647a4d8",
    "prId" : 58763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58763#pullrequestreview-93385560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58ec2d12-2a99-4061-b89a-68b482fa29e7",
        "parentId" : null,
        "authorId" : "9cd12d42-ba38-4d33-b922-51e6f29f48e7",
        "body" : "Why do we need this?",
        "createdAt" : "2018-02-01T18:02:26Z",
        "updatedAt" : "2018-02-02T12:27:46Z",
        "lastEditedBy" : "9cd12d42-ba38-4d33-b922-51e6f29f48e7",
        "tags" : [
        ]
      },
      {
        "id" : "f0c749e7-cb32-4a25-b6b6-6a46557e6b51",
        "parentId" : "58ec2d12-2a99-4061-b89a-68b482fa29e7",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "To have some kind of a global knob to turn off profile-collection across all e2e tests if you want to - instead of putting an if condition wherever the library is called.",
        "createdAt" : "2018-02-01T18:22:58Z",
        "updatedAt" : "2018-02-02T12:27:46Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8cee91372dc5f973e7063d7445b5dbecdf72708",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +192,196 @@\tflag.StringVar(&TestContext.GatherMetricsAfterTest, \"gather-metrics-at-teardown\", \"false\", \"If set to 'true' framework will gather metrics from all components after each test. If set to 'master' only master component metrics would be gathered.\")\n\tflag.BoolVar(&TestContext.GatherSuiteMetricsAfterTest, \"gather-suite-metrics-at-teardown\", false, \"If set to true framwork will gather metrics from all components after the whole test suite completes.\")\n\tflag.BoolVar(&TestContext.AllowGatheringProfiles, \"allow-gathering-profiles\", true, \"If set to true framework will allow to gather CPU/memory allocation pprof profiles from the master.\")\n\tflag.BoolVar(&TestContext.IncludeClusterAutoscalerMetrics, \"include-cluster-autoscaler\", false, \"If set to true, framework will include Cluster Autoscaler when gathering metrics.\")\n\tflag.StringVar(&TestContext.OutputPrintType, \"output-print-type\", \"json\", \"Format in which summaries should be printed: 'hr' for human readable, 'json' for JSON ones.\")"
  },
  {
    "id" : "647dba4f-024e-4d47-bcd0-8ac8cd118212",
    "prId" : 57976,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57976#pullrequestreview-87360472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "610eba1d-cee2-4e8a-bccd-2a6d177a9cf4",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why not relying on kubelet's defaults? Does this mean if we change the dockershim socket in kubelet, we'd have to change the test as well?\r\n\r\nAlso, the relationship between `--container-runtime` and the new flags may be hard for people (w/o prior knowledge of kubelet internals) to understand.",
        "createdAt" : "2018-01-08T21:05:48Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "526b4dd6-f969-49dc-bf16-04b2000fe46b",
        "parentId" : "610eba1d-cee2-4e8a-bccd-2a6d177a9cf4",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The problem is that when connecting the container runtime in the test, we need to know which socket to connect anyway.\r\n\r\nUnless we add the default in `kubelet/remote` client, we have to set the default in the test somewhere.\r\n  ",
        "createdAt" : "2018-01-08T21:43:59Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a7fb517e-b951-457b-b1ca-116b716eab15",
        "parentId" : "610eba1d-cee2-4e8a-bccd-2a6d177a9cf4",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Do we also need the defaults set in `hack/make-rules/test-e2e-node.sh`? ",
        "createdAt" : "2018-01-08T22:01:02Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "cab3e724-e11d-4399-a081-1f944e22686d",
        "parentId" : "610eba1d-cee2-4e8a-bccd-2a6d177a9cf4",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Another option is to skip setting endpoint in `hack/make-rules/test-e2e-node.sh` if it's empty. I can do that.",
        "createdAt" : "2018-01-08T22:10:20Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "93232343-6867-4cc1-b8c0-25ad9ae788e8",
        "parentId" : "610eba1d-cee2-4e8a-bccd-2a6d177a9cf4",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done.",
        "createdAt" : "2018-01-08T22:28:13Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "e05a5b9f7a9723c12a652a7e1ff7fb069d60f623",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +206,210 @@\tflag.StringVar(&TestContext.Viper, \"viper-config\", \"e2e\", \"The name of the viper config i.e. 'e2e' will read values from 'e2e.json' locally.  All e2e parameters are meant to be configurable by viper.\")\n\tflag.StringVar(&TestContext.ContainerRuntime, \"container-runtime\", \"docker\", \"The container runtime of cluster VM instances (docker/rkt/remote).\")\n\tflag.StringVar(&TestContext.ContainerRuntimeEndpoint, \"container-runtime-endpoint\", \"unix:///var/run/dockershim.sock\", \"The container runtime endpoint of cluster VM instances.\")\n\tflag.StringVar(&TestContext.ContainerRuntimeProcessName, \"container-runtime-process-name\", \"dockerd\", \"The name of the container runtime process.\")\n\tflag.StringVar(&TestContext.ContainerRuntimePidFile, \"container-runtime-pid-file\", \"/var/run/docker.pid\", \"The pid file of the container runtime.\")"
  },
  {
    "id" : "69e0a095-2792-4c12-a0ca-2ed94ac61f98",
    "prId" : 57976,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57976#pullrequestreview-87390887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8be84a99-ed71-4a79-ab06-d496c3a77a35",
        "parentId" : null,
        "authorId" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "body" : "Maybe `ContainerRuntimeProcessName` and `ContainerRuntimePidFile` need to be a list or map, since some runtimes contain several binaries that belong to different cgroups (e.g.  containerd and cri-cointainerd)\r\n  ",
        "createdAt" : "2018-01-09T00:40:59Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "tags" : [
        ]
      },
      {
        "id" : "8495ddbc-69be-41ee-ae34-a07db6bc2aca",
        "parentId" : "8be84a99-ed71-4a79-ab06-d496c3a77a35",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@miaoyq You can do that in your benchmark PR if you find that is required. :)",
        "createdAt" : "2018-01-09T01:17:53Z",
        "updatedAt" : "2018-01-09T22:59:33Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "e05a5b9f7a9723c12a652a7e1ff7fb069d60f623",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +67,71 @@\tContainerRuntimeEndpoint    string\n\tContainerRuntimeProcessName string\n\tContainerRuntimePidFile     string\n\t// SystemdServices are comma separated list of systemd services the test framework\n\t// will dump logs for."
  },
  {
    "id" : "81831ca1-8223-4d5a-9efc-31105b91bfad",
    "prId" : 53924,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53924#pullrequestreview-69696600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "779b7530-8fcb-4dd6-9991-bd4d998b8e2a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So there is a section that already exists in e2e/framework/util.go called LoadConfig which I think is a more appropriate location.  We're kind of hijacking the general case with this code, vs. only the shell commands.  \r\n\r\nI'm debating if we want to do that or now.  ",
        "createdAt" : "2017-10-16T20:54:49Z",
        "updatedAt" : "2017-10-16T20:54:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "3aba6451a755852c601eab0af500705242ebfb82",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +344,348 @@\tif len(t.Host) == 0 && len(t.KubeConfig) == 0 {\n\t\t// Check if we can use the in-cluster config\n\t\tif clusterConfig, err := restclient.InClusterConfig(); err == nil {\n\t\t\tif tempFile, err := ioutil.TempFile(os.TempDir(), \"kubeconfig-\"); err == nil {\n\t\t\t\tkubeConfig := createKubeConfig(clusterConfig)"
  },
  {
    "id" : "8af0bfd9-64fd-4e3b-8c46-b28e9868b663",
    "prId" : 53924,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53924#pullrequestreview-70400332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca04cac2-c67f-4f67-94c1-3810594a2a80",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@sttts Are there any utilities for converting an in-cluster-config to an on-disk kubeconfig?  \r\n\r\nIt seems weird that there isn't a utility to do this.  ",
        "createdAt" : "2017-10-18T22:51:07Z",
        "updatedAt" : "2017-10-18T22:52:23Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "626bcc59-393e-4705-b7a1-02fcc5dc5629",
        "parentId" : "ca04cac2-c67f-4f67-94c1-3810594a2a80",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "unfortunately did not find any ... i picked this from a test case - https://github.com/kubernetes/kubernetes/blob/master/test/integration/examples/apiserver_test.go#L363",
        "createdAt" : "2017-10-19T00:57:27Z",
        "updatedAt" : "2017-10-19T00:57:27Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "3aba6451a755852c601eab0af500705242ebfb82",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +302,306 @@\nfunc createKubeConfig(clientCfg *restclient.Config) *clientcmdapi.Config {\n\tclusterNick := \"cluster\"\n\tuserNick := \"user\"\n\tcontextNick := \"context\""
  },
  {
    "id" : "41e30af1-682a-41b9-9661-a183b354db63",
    "prId" : 49936,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49936#pullrequestreview-53456896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57f67a05-acf4-4515-9968-25e973ffde85",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "This is probably a breaking change...",
        "createdAt" : "2017-08-01T09:59:39Z",
        "updatedAt" : "2017-08-01T10:01:12Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "554fe41a-5c68-40d4-a154-42abc47fbf9f",
        "parentId" : "57f67a05-acf4-4515-9968-25e973ffde85",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "It shouldn't.. As I checked that all jobs on our CI either don't set the flag at all or set it as `--gather-metrics-at-teardown=true` (basically just our scalability tests). Should be fine.",
        "createdAt" : "2017-08-01T10:03:09Z",
        "updatedAt" : "2017-08-01T10:03:46Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "7a24b697-d1cd-42d9-adb3-a07b413d623d",
        "parentId" : "57f67a05-acf4-4515-9968-25e973ffde85",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "SG - we need to monitor this though.",
        "createdAt" : "2017-08-01T10:11:13Z",
        "updatedAt" : "2017-08-01T10:11:13Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "82f1012e746e19df352fddca6cd787095b78700f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +74,78 @@\tGatherKubeSystemResourceUsageData string\n\tGatherLogsSizes                   bool\n\tGatherMetricsAfterTest            string\n\tGatherSuiteMetricsAfterTest       bool\n\t// Currently supported values are 'hr' for human-readable and 'json'. It's a comma separated list."
  },
  {
    "id" : "71a70d34-f164-4cdc-bb88-3f5f7101708a",
    "prId" : 45109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45109#pullrequestreview-35435545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf5e1dda-4821-44f1-95cd-56f23917094f",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "not required for openstack?",
        "createdAt" : "2017-04-28T18:35:06Z",
        "updatedAt" : "2017-04-28T18:51:40Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "b12720ab-1ba3-4474-a80b-e3711e442053",
        "parentId" : "bf5e1dda-4821-44f1-95cd-56f23917094f",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "I haven't plugged it into openstack yet. Once there, I'll update the message.",
        "createdAt" : "2017-04-28T18:50:52Z",
        "updatedAt" : "2017-04-28T18:51:40Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "165d46a0a8fb06e4314da66e6a8a6e2b828c23cc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +211,215 @@\n\tflag.StringVar(&cloudConfig.ClusterTag, \"cluster-tag\", \"\", \"Tag used to identify resources.  Only required if provider is aws.\")\n\tflag.StringVar(&cloudConfig.ConfigFile, \"cloud-config-file\", \"\", \"Cloud config file.  Only required if provider is azure.\")\n\tflag.IntVar(&TestContext.MinStartupPods, \"minStartupPods\", 0, \"The number of pods which we need to see in 'Running' state with a 'Ready' condition of true, before we try running tests. This is useful in any cluster which needs some base pod-based services running before it can be used.\")\n\tflag.DurationVar(&TestContext.SystemPodsStartupTimeout, \"system-pods-startup-timeout\", 10*time.Minute, \"Timeout for waiting for all system pods to be running before starting tests.\")"
  },
  {
    "id" : "746cfe88-32eb-4c85-9041-12a81fb5a022",
    "prId" : 42758,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42758#pullrequestreview-25905444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9a0a952-b92e-45a9-9f9a-1a9fac96e45b",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "When will this be set?",
        "createdAt" : "2017-03-08T22:39:26Z",
        "updatedAt" : "2017-03-09T20:45:39Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "08f0dac0-2d96-4b5e-8f8a-73072ee2411c",
        "parentId" : "c9a0a952-b92e-45a9-9f9a-1a9fac96e45b",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "In downgrade CIs I intend to write. ",
        "createdAt" : "2017-03-08T22:43:10Z",
        "updatedAt" : "2017-03-09T20:45:39Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc84e0895abc26fee3977abb5807cc880cd4c49f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +202,206 @@\tflag.StringVar(&TestContext.EtcdUpgradeVersion, \"etcd-upgrade-version\", \"\", \"The etcd binary version to upgrade to (e.g., '3.0.14', '2.3.7') if doing an etcd upgrade test.\")\n\tflag.StringVar(&TestContext.UpgradeImage, \"upgrade-image\", \"\", \"Image to upgrade to (e.g. 'container_vm' or 'gci') if doing an upgrade test.\")\n\tflag.StringVar(&TestContext.GCEUpgradeScript, \"gce-upgrade-script\", \"\", \"Script to use to upgrade a GCE cluster.\")\n\tflag.StringVar(&TestContext.PrometheusPushGateway, \"prom-push-gateway\", \"\", \"The URL to prometheus gateway, so that metrics can be pushed during e2es and scraped by prometheus. Typically something like 127.0.0.1:9091.\")\n\tflag.BoolVar(&TestContext.CleanStart, \"clean-start\", false, \"If true, purge all namespaces except default and system before running tests. This serves to Cleanup test namespaces from failed/interrupted e2e runs in a long-lived cluster.\")"
  },
  {
    "id" : "1e8905d8-9896-4c3f-a1b4-8fabfb05f853",
    "prId" : 40890,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40890#pullrequestreview-20178384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5e6bfaf-aa43-48cf-ba8d-13c32e035c07",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Could you also call this function [here](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/e2e_node_suite_test.go#L67)?\r\n\r\nNode e2e is still relying on the default apiserver address now. In the future, node e2e should also use a kubeconfig file.",
        "createdAt" : "2017-02-02T23:28:51Z",
        "updatedAt" : "2017-04-19T21:58:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "17bb2f4d-ad4f-4a80-a9cc-b261caef88cf",
        "parentId" : "b5e6bfaf-aa43-48cf-ba8d-13c32e035c07",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Done",
        "createdAt" : "2017-02-02T23:34:02Z",
        "updatedAt" : "2017-04-19T21:58:52Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "d5d05f29-18dd-4031-8dbc-c8520b8fcf52",
        "parentId" : "b5e6bfaf-aa43-48cf-ba8d-13c32e035c07",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Sorry...My bad...Actually should be [here](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/e2e_node_suite_test.go#L72), after `Parse`.",
        "createdAt" : "2017-02-02T23:34:45Z",
        "updatedAt" : "2017-04-19T21:58:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "fa107c5f-570c-4b96-86cd-1587f78752e2",
        "parentId" : "b5e6bfaf-aa43-48cf-ba8d-13c32e035c07",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Done.",
        "createdAt" : "2017-02-05T20:54:16Z",
        "updatedAt" : "2017-04-19T21:58:52Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "9413071ce8bfdac9568cc16222a127c99041cbc3",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +270,274 @@// AfterReadingAllFlags makes changes to the context after all flags\n// have been read.\nfunc AfterReadingAllFlags(t *TestContextType) {\n\t// Only set a default host if one won't be supplied via kubeconfig\n\tif len(t.Host) == 0 && len(t.KubeConfig) == 0 {"
  },
  {
    "id" : "8a00abad-fd6b-41cc-ab77-1a4d1c409af7",
    "prId" : 36479,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36479#pullrequestreview-8106445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "080ee22a-8188-49e4-bdbb-d962ac2f3bf4",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I wish we didn't need this, but I don't see an alternative...\n",
        "createdAt" : "2016-11-10T21:44:38Z",
        "updatedAt" : "2016-11-10T22:26:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "f0ffb92c-3a45-441d-ba45-d6ed5fd8d9c8",
        "parentId" : "080ee22a-8188-49e4-bdbb-d962ac2f3bf4",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah. :(\n",
        "createdAt" : "2016-11-10T21:55:25Z",
        "updatedAt" : "2016-11-10T22:26:08Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c70c899f7e33fb8322e979dd0ea12588044ce0f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +102,106 @@type NodeTestContextType struct {\n\t// NodeE2E indicates whether it is running node e2e.\n\tNodeE2E bool\n\t// Name of the node to run tests on.\n\tNodeName string"
  },
  {
    "id" : "eb805705-1b07-44f5-b2a3-193b38101684",
    "prId" : 32902,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32902#pullrequestreview-760537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ae2322-a0da-4178-a23d-24105014dd1d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Is there any reason to keep the comment block?  \n",
        "createdAt" : "2016-09-20T14:05:09Z",
        "updatedAt" : "2016-09-20T19:42:36Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "924f91a2-5a77-4ba3-9347-dd98b146ca1f",
        "parentId" : "25ae2322-a0da-4178-a23d-24105014dd1d",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "i think so - we havent yet decided what the future of old flags is.  up to u though..\n",
        "createdAt" : "2016-09-20T14:35:18Z",
        "updatedAt" : "2016-09-20T19:42:36Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "be2e1f5d96487e765cb071da7ee6f90d47ff53f6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +221,225 @@\tviper.Unmarshal(&TestContext)\n\n\t/** This can be used to overwrite a flag value.\n\t*\n\t*\tviperFlagSetter := func(f *flag.Flag) {"
  },
  {
    "id" : "3d7d66e6-c2d5-4ed3-ad2a-ca8735d3e454",
    "prId" : 31030,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f6dba1a-33d3-4024-90ed-7aa240e69ea2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "probably don't need this change here. \n",
        "createdAt" : "2016-08-25T14:29:39Z",
        "updatedAt" : "2016-09-15T22:38:15Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "7bb1ea6f-40ce-43d4-9434-fa69f605c965",
        "parentId" : "0f6dba1a-33d3-4024-90ed-7aa240e69ea2",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Gofmt keeps adding this back for me.  I think it's the default?\n",
        "createdAt" : "2016-08-25T23:05:57Z",
        "updatedAt" : "2016-09-15T22:38:15Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "97396a34fadf93910c52a4f8d3f076b9be02f40c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +37,41 @@\tHost               string\n\t// TODO: Deprecating this over time... instead just use gobindata_util.go , see #23987.\n\tRepoRoot string\n\n\tProvider       string"
  },
  {
    "id" : "017b5c3b-8305-4acf-a6e8-f4c92fd307df",
    "prId" : 30475,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16bb149f-2d16-4998-8c28-0bd65f587247",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "`test/e2e_node/e2e_service.go` current uses this flag. Can you remove the flag from there as well?\n",
        "createdAt" : "2016-08-12T19:39:15Z",
        "updatedAt" : "2016-08-19T15:09:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fde285cd8f9624f9911caca83d24df6432dd2018",
    "line" : null,
    "diffHunk" : "@@ -1,1 +169,173 @@\tflag.BoolVar(&TestContext.DisableKubenet, \"disable-kubenet\", false, \"If true, start kubelet without kubenet. (default false)\")\n\t// TODO: uncomment this when the flag is re-enabled in kubelet\n\t//flag.BoolVar(&TestContext.CgroupsPerQOS, \"cgroups-per-qos\", false, \"Enable creation of QoS cgroup hierarchy, if true top level QoS and pod cgroups are created.\")\n\tflag.StringVar(&TestContext.EvictionHard, \"eviction-hard\", \"memory.available<250Mi\", \"The hard eviction thresholds. If set, pods get evicted when the specified resources drop below the thresholds.\")\n\tflag.StringVar(&TestContext.ManifestPath, \"manifest-path\", \"\", \"The path to the static pod manifest file.\")"
  },
  {
    "id" : "ff948097-67d1-4d9e-9562-2dda0e49c407",
    "prId" : 24536,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/24536#pullrequestreview-1222802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f3a5f70-adc3-486a-ab31-6fab3fdf4174",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "added this space b/c now there are more than one params, gives readable separation. \n",
        "createdAt" : "2016-09-22T20:19:01Z",
        "updatedAt" : "2016-09-22T20:19:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe5429e92158c75489d162febc88cf6d02d93dd8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +80,84 @@\n\t// Viper-only parameters.  These will in time replace all flags.\n\n\t// Example: Create a file 'e2e.json' with the following:\n\t// \t\"Cadvisor\":{"
  }
]