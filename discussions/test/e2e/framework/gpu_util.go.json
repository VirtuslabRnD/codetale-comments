[
  {
    "id" : "996d72fa-53f8-451a-9444-568f94415f3c",
    "prId" : 59230,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59230#pullrequestreview-106752056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6282f60-b551-41be-866f-54215075f29f",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Any specific reason why no containers needs to be checked? Wouldn't DsFromManifest return that in the err field?",
        "createdAt" : "2018-03-26T00:50:32Z",
        "updatedAt" : "2018-03-26T00:50:32Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "545557f5-7e41-4c19-8e92-f8af6b59e644",
        "parentId" : "d6282f60-b551-41be-866f-54215075f29f",
        "authorId" : "7b10c627-72bd-4617-bd7a-2296b88861b7",
        "body" : "Actually I'm not sure about the specific reason, maybe pre-checking would return error ASAP.",
        "createdAt" : "2018-03-26T01:02:29Z",
        "updatedAt" : "2018-03-26T01:02:29Z",
        "lastEditedBy" : "7b10c627-72bd-4617-bd7a-2296b88861b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "26949f978a2811522985ce2b7c5d3746a5d7cf4c",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\treturn \"\"\n\t}\n\tif len(ds.Spec.Template.Spec.Containers) < 1 {\n\t\tglog.Errorf(\"Failed to parse the device plugin image: cannot extract the container from YAML\")\n\t\treturn \"\""
  },
  {
    "id" : "3132e267-a239-42a1-9b90-30cd93a9b71f",
    "prId" : 52250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52250#pullrequestreview-63231291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dd2e72b-3dad-4c01-af57-f5514e916aae",
        "parentId" : null,
        "authorId" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "body" : "I would insist that we don't put these definitions in the framework package.\r\n\r\nBoth the methods: `NumberOfNVIDIAGPUs()` and `NVIDIADevicePlugin()` are used only in `e2e_node/gpu-device-plugin.go` and can live there.",
        "createdAt" : "2017-09-15T18:03:01Z",
        "updatedAt" : "2017-09-22T18:22:00Z",
        "lastEditedBy" : "87a378b9-1941-4a57-a346-cf12dbb73416",
        "tags" : [
        ]
      },
      {
        "id" : "d7df6ec2-4470-47f3-a684-b2a19eca8892",
        "parentId" : "2dd2e72b-3dad-4c01-af57-f5514e916aae",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "`NumberOfNVIDIAGPUs()` is only used in `e2e_node/gpu-device-plugin.go` mostly because I don't want to make use of it in e2e/scheduling/nvidia-gpu` in this PR but in a later PR.\r\n\r\nTo answer your other concern, I do believe that we need a utils file that groups the utils functions used in the NVIDIA tests as they won't be used in one single package across the e2e code base.\r\n\r\nThe package `framework` seems to be doing exactly that (regroup all the `utils` function) which is why it seems to me that it's the right place.\r\n\r\n@jiayingz mentioned that:\r\n> Our main concern is these definitions are gpu specific and irrelevant to most people using e2e framework.\r\n\r\nBut that argument can be applied to a lot of utils functions the framework package is exposing (see pv_utils, rc_utils, nodes_utils, perf_utils, utils, exec_utils, statefulset_utils, firewall_utils).\r\nGranted that some make more sense than others (API utils vs platform specific utils) but gpu_utils doesn't feel completely out of place when looking at a lot of these utils functions.\r\n ",
        "createdAt" : "2017-09-17T16:33:26Z",
        "updatedAt" : "2017-09-22T18:22:00Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba40bee5c1059751c45ea25a5df610715b96d9a5",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@\n// NVIDIADevicePlugin returns the official Google Device Plugin pod for NVIDIA GPU in GKE\nfunc NVIDIADevicePlugin(ns string) *v1.Pod {\n\tds, err := DsFromManifest(GPUDevicePluginDSYAML)\n\tExpect(err).NotTo(HaveOccurred())"
  }
]