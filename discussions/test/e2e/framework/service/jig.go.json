[
  {
    "id" : "97a43ff3-2eba-497a-8964-9538b426e77c",
    "prId" : 99312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99312#pullrequestreview-595617725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a789b96-3259-4088-a961-dff32758d629",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "we check that at least we've received something, these checks are duplicated all over the e2e framework, and the `Service Granular Checks` do a more extensive check, verifying that all endpoints belonging to the service reply.\r\nWe keep this just with the minimum, checking that at least we receive one reply.",
        "createdAt" : "2021-02-22T17:49:27Z",
        "updatedAt" : "2021-02-22T17:49:27Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf5d98b17e24dfccd7ae95eb16d6acd284e14274",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +897,901 @@\t\t}\n\t\ttrimmed := strings.TrimSpace(stdout)\n\t\tif trimmed != \"\" {\n\t\t\treturn true, nil\n\t\t}"
  },
  {
    "id" : "61563e00-8c38-4244-8151-e9bb06db10eb",
    "prId" : 99312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99312#pullrequestreview-595821415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a4d7b2c-1d16-4fe9-afac-125196d0881e",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Just a question: What is a purpose of `echo hostName` ? ",
        "createdAt" : "2021-02-22T19:29:58Z",
        "updatedAt" : "2021-02-22T19:30:26Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "8748bbca-0847-43fb-803a-7125d28a054b",
        "parentId" : "4a4d7b2c-1d16-4fe9-afac-125196d0881e",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "the pod returns its hostname https://github.com/tallclair/kubernetes/blob/c05a350b4f16bbf1a709b82a97584efd153e6a8e/test/images/agnhost/README.md#netexec",
        "createdAt" : "2021-02-22T21:58:12Z",
        "updatedAt" : "2021-02-22T21:58:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf5d98b17e24dfccd7ae95eb16d6acd284e14274",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +883,887 @@\tswitch protocol {\n\tcase v1.ProtocolTCP:\n\t\tcmd = fmt.Sprintf(\"echo hostName | nc -v -t -w 2 %s %v\", endpoint, port)\n\tcase v1.ProtocolUDP:\n\t\tcmd = fmt.Sprintf(\"echo hostName | nc -v -u -w 2 %s %v\", endpoint, port)"
  },
  {
    "id" : "7ca4bced-d2a4-454b-b2a1-eec8dd0c8eba",
    "prId" : 93829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93829#pullrequestreview-464821933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "maybe:\r\n\r\n```\r\nif _, err := j.Client.Discovery().ServerResourcesForGroupVersion(discoveryv1beta1.SchemeGroupVersion.String()); err != nil {\r\n  // EndpointSlice API is disabled.\r\n  return nil\r\n}\r\n\r\n// everything else unintended thus easier to parse.",
        "createdAt" : "2020-08-10T05:59:56Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8597c8fd-0847-4cf8-bb58-f84ef7e3c2e8",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "So this is unfortunately messy to check... The API being enabled does not actually mean that the controller is running, just that it can be running. Checking to see if an EndpointSlice with the name `kubernetes` existed would tell you that the `EndpointSlice` feature gate was enabled on API Server, but that's about all we've got. So with that said, the check you already have is probably as much as we can do here, but it does mean we may end up waiting indefinitely for EndpointSlices in some cases.",
        "createdAt" : "2020-08-10T21:39:31Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "8268fa02-5389-4ede-be6b-1e4a49fdebe8",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "@wojtek-t I'm creating a new variable inside the `if` block ... and the check is different using slices than not\r\n\r\n@robscott we had to add this check https://github.com/kubernetes/kubernetes/pull/93597 because it was failing in a job that only enable GA features (thanks to Jordan for adding it). I think that for testing should be fair assume API enable = ESController Running,... when can that not happen?\r\n\r\n",
        "createdAt" : "2020-08-11T06:25:56Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "8321ce6a-8ca8-402c-91b7-0ea2e97b19b0",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "@aojea I think that is pretty unlikely in the future, but it has happened in the past. In 1.17 the API was enabled by default but the controller and feature gate were not. It wasn't until 1.18 that both were enabled by default. I don't _think_ there are any test environments that would have this kind of weird configuration at this point.",
        "createdAt" : "2020-08-11T06:32:14Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "88a5c622-7ab8-4843-9a3c-362e070abfe4",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - I agree that enablement of the API is not the same as controller, but I think that for the purposes of e2e tests I think it's actually a good enough assumption.\r\n\r\n\r\n> @wojtek-t I'm creating a new variable inside the if block ... and the check is different using slices than not\r\n\r\n@aojea  I don't get it. I'm not asking to check any of the implemention. All I'm saying is:\r\n- instead o having\r\n```\r\nif <condition> {\r\n  // contents\r\n}\r\n```\r\nhave\r\n```\r\nif !<condition> {\r\n  return nil\r\n}\r\n<contents>\r\n```",
        "createdAt" : "2020-08-11T07:17:22Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "69ceaa3b-23e4-4134-975c-7b7ba9e020c1",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually - I see what you're saying now. Sorry.\r\n\r\nSo let me suggest slightly different approach\r\n```\r\nendpointAvailable := false\r\nendpointSlicesAvailable := false\r\n\r\nstartEndpointInformer(stopCh)\r\nif <api enabled> {\r\n  startEndpointSliceInformer(stopCh)\r\n} else {\r\n  endpointSliceAvailable = true\r\n}\r\n\r\nerr := wait.Poll(1*time.Second, timeout, func() (bool, error) {\r\n  return endpointAvailable && endpointSliceAvailable, nil\r\n})\r\n...\r\n```",
        "createdAt" : "2020-08-11T07:22:39Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "22f0c975-55af-48fa-8d5c-9378eb9e3e28",
        "parentId" : "648cbdf8-e458-4ab0-89f7-c74f2ab744fb",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "done (I didn't get your first suggestion sorry :sweat_smile:  )",
        "createdAt" : "2020-08-11T07:41:16Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31839acea87a393fb5bca3d6946d021b8a21fa6",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +395,399 @@\n\t// If EndpointSlice API is enabled, then validate if appropriate EndpointSlice objects were also create/updated/deleted.\n\tif _, err := j.Client.Discovery().ServerResourcesForGroupVersion(discoveryv1beta1.SchemeGroupVersion.String()); err == nil {\n\t\tvar esController cache.Controller\n\t\t_, esController = cache.NewInformer("
  },
  {
    "id" : "a6b9ab96-40a0-4a40-860f-aad7c676758a",
    "prId" : 93829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93829#pullrequestreview-465818735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2f2e03e-cb5c-40c3-8518-46218ebc08ef",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Is this really the logic we would like to have? There can be more than a single EndpointSlice object.",
        "createdAt" : "2020-08-11T09:03:02Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8143474b-e7df-4e34-b425-d172e8638833",
        "parentId" : "a2f2e03e-cb5c-40c3-8518-46218ebc08ef",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually - looking into Endpoints logic above it seems we also don't wait until Endpoints is fully propagated, but for it to exist.\r\n\r\nThat's not ideal imho, but it's at least consistent.",
        "createdAt" : "2020-08-11T09:03:45Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7523ad26-05e3-49fc-944b-b54fd8398319",
        "parentId" : "a2f2e03e-cb5c-40c3-8518-46218ebc08ef",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "nah, we should fix it.\r\nis enough to check that the endpoints are ready?",
        "createdAt" : "2020-08-11T09:40:18Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "6b51a02e-e30c-4143-b289-c4dd112fb3cf",
        "parentId" : "a2f2e03e-cb5c-40c3-8518-46218ebc08ef",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Technically, i can imagine a service with 1000 pods, but endpoint/endpointslice at this point containing a single one.\r\nI don't think we have enough information at this point to add a comprehensive check.\r\n\r\nI would start with something (e.g. what you have) and drop a TODO to introduce a more comprehensive check and wouldn't block this PR on that.",
        "createdAt" : "2020-08-11T11:25:26Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "78316413-d09f-43aa-bbeb-3534422c680e",
        "parentId" : "a2f2e03e-cb5c-40c3-8518-46218ebc08ef",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "done",
        "createdAt" : "2020-08-12T11:21:29Z",
        "updatedAt" : "2020-08-12T12:13:54Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31839acea87a393fb5bca3d6946d021b8a21fa6",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +417,421 @@\t\t\t\t\t\t// a large number of endpoints (>1000) may have multiple slices. Some slices\n\t\t\t\t\t\t// with only a few addresses. We should check the addresses in all slices.\n\t\t\t\t\t\tif len(es.Endpoints) > 0 && len(es.Endpoints[0].Addresses) > 0 {\n\t\t\t\t\t\t\tendpointSliceAvailable = true\n\t\t\t\t\t\t}"
  },
  {
    "id" : "459b38a2-6e48-400f-a07e-33c7129b494b",
    "prId" : 90365,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90365#pullrequestreview-406922641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de45e56c-bcf3-4ab7-9680-4afc239e8468",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Which e2es are consuming this? Or are there external consumers vendoring the e2e framework? ",
        "createdAt" : "2020-05-06T19:13:28Z",
        "updatedAt" : "2020-05-06T19:13:30Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "5a74b43a-e0eb-44aa-8936-699f446072e1",
        "parentId" : "de45e56c-bcf3-4ab7-9680-4afc239e8468",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "@andrewsykim These would be the e2e cases: https://github.com/kubernetes/kubernetes/pull/88196",
        "createdAt" : "2020-05-06T19:29:38Z",
        "updatedAt" : "2020-05-06T19:29:38Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "af33c2f7e864188ef33012d3e168f2267982dd87",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +967,971 @@// j's defaults. Callers can provide a function to tweak the Service object before\n// it is created.\nfunc (j *TestJig) CreateSCTPServiceWithPort(tweak func(svc *v1.Service), port int32) (*v1.Service, error) {\n\tsvc := j.newServiceTemplate(v1.ProtocolSCTP, port)\n\tif tweak != nil {"
  },
  {
    "id" : "2115436a-8250-4e77-889e-610f003f9896",
    "prId" : 89509,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89509#pullrequestreview-382204903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb22e226-f21e-4e04-a361-9ed9e8a49934",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we should have a comment over this one too, explaining where it was copied from.\r\nthis is mainly because we use it for string matching and the origin has to be clear.\r\n\r\n",
        "createdAt" : "2020-03-26T16:39:03Z",
        "updatedAt" : "2020-03-26T17:11:52Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "3ed2776e-ca1a-43d7-a409-dd0483dcc393",
        "parentId" : "cb22e226-f21e-4e04-a361-9ed9e8a49934",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "sure ",
        "createdAt" : "2020-03-26T16:48:41Z",
        "updatedAt" : "2020-03-26T17:11:52Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b9b27d7682f6d89356543c5c29581094c19f1d4",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +56,60 @@\n// It is copied from \"k8s.io/kubernetes/pkg/registry/core/service/portallocator\"\nvar errAllocated = errors.New(\"provided port is already allocated\")\n\n// TestJig is a test jig to help service testing."
  },
  {
    "id" : "b438dba9-cd19-4969-87c5-40c248b779f7",
    "prId" : 88417,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88417#pullrequestreview-362960452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e92be6a-f268-49bb-a6c5-26a7664ab8ab",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "just food for thought, should we pass the clusterIP or a `isIPv6 bool`?",
        "createdAt" : "2020-02-21T22:20:50Z",
        "updatedAt" : "2020-02-21T22:43:27Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "6f917c6b-0097-44d1-b7d9-c295b192b2cc",
        "parentId" : "0e92be6a-f268-49bb-a6c5-26a7664ab8ab",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "we can do that, but just figured the `testReachabilityOverNodePorts` should make the decision on what it checks and has to do with the `clusterIP`. WDYT?",
        "createdAt" : "2020-02-21T22:28:48Z",
        "updatedAt" : "2020-02-21T22:43:27Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      },
      {
        "id" : "acaa3b4d-5703-404d-ab19-51b770beddb4",
        "parentId" : "0e92be6a-f268-49bb-a6c5-26a7664ab8ab",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "it seems correct one or the other, I don't have a strong opinion about this, this looks ok",
        "createdAt" : "2020-02-21T22:41:13Z",
        "updatedAt" : "2020-02-21T22:43:27Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c811fc58ef0914e5a004731dd9e87527e71acc81",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +895,899 @@\t\t\treturn err\n\t\t}\n\t\terr = testReachabilityOverNodePorts(nodes, servicePort, pod, clusterIP)\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "08eff03f-6936-4d91-ac18-1f61b795b90e",
    "prId" : 88417,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88417#pullrequestreview-362961420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d13ff6ec-4a9b-4183-9061-041b00f6fc30",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "lgtm\r\nwhat about the underneath loop ? \r\n`\tfor _, externalAddr := range externalAddrs {`\r\nis ok to left it as is?",
        "createdAt" : "2020-02-21T22:31:38Z",
        "updatedAt" : "2020-02-21T22:43:27Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "fd1e0d4f-f8d5-4b05-841d-a16123b3514e",
        "parentId" : "d13ff6ec-4a9b-4183-9061-041b00f6fc30",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "done!",
        "createdAt" : "2020-02-21T22:43:50Z",
        "updatedAt" : "2020-02-21T22:43:50Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "c811fc58ef0914e5a004731dd9e87527e71acc81",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +784,788 @@\t\t\tcontinue\n\t\t}\n\n\t\terr := testEndpointReachability(internalAddr, sp.NodePort, sp.Protocol, pod)\n\t\tif err != nil {"
  },
  {
    "id" : "26cfbb96-a8a4-4225-99aa-7c4c104e5d39",
    "prId" : 81419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81419#pullrequestreview-294697923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c0e7d45-5b4e-4a4d-a524-8fe2cc5d4811",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "nit: I am wondering we can merge this new function into the above existing function because the difference is just this command here. But at this time, it is fine and we can take care later.",
        "createdAt" : "2019-08-16T23:47:58Z",
        "updatedAt" : "2019-09-28T01:19:44Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "0a617053-7b60-49b5-a0aa-4b712d353acd",
        "parentId" : "2c0e7d45-5b4e-4a4d-a524-8fe2cc5d4811",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Thanks for the suggestion, I was in the same mindset to have single function and leverage flags as args but to keep PR simple, I have not introduced here. As you mentioned, I can create another PR to refactor it.\r\n\r\nFollowing is raw code.\r\n```\r\nvar ServeHostNameImageDefaultFlags = map[string]string{\r\n\tHTTP: \"--http\",\r\n\tTCP:  \"--tcp\",\r\n\tUDP:  \"--udp\",\r\n}\r\n\r\n\r\nfunc enableServeHostNameImageCmdFlags(enableFlags ...string) (enabledFlags []string){\r\n\tgomega.Expect(len(enableFlags)).NotTo(gomega.BeNumerically(\">\", 2), \"HTTP only or TCP/UDP requests can be served but not both simultaneously\")\r\n\tvar flags = make(map[string]string,len(ServeHostNameImageDefaultFlags))\r\n\tfor _,f := range enableFlags{\r\n\t\tswitch f{\r\n\t\tcase TCP, UDP:\r\n\t\t\tframework.ExpectNotEqual(flags[f],ServeHostNameImageDefaultFlags[HTTP], \"HTTP flag can not be enabled along with TCP/UDP\")\r\n\t\t\tflags[f] = \"--http=false\"\r\n\t\t\tflags[f] = ServeHostNameImageDefaultFlags[f]\r\n\t\tcase HTTP:\r\n\t\t\tif flags[TCP] != \"\" || flags[UDP] != \"\"{\r\n\t\t\t\tframework.Failf(\"TCP/UDP flag is enabled so HTTP flag can not be enabled\")\r\n\t\t\t}\r\n\t\t\tflags[f] = ServeHostNameImageDefaultFlags[f]\r\n\t\tdefault:\r\n\t\t\tframework.Failf(\"Unexpected protocol flags are passed. Valid protocol flags are HTTP, TCP and UDP\")\r\n\t\t}\r\n\t}\r\n\tfor _, f := range flags{\r\n                enabledFlags = append(enableFlags, f)\r\n\t}\r\n    return\r\n}\r\n\r\nflags := enableServeHostNameImageCmdFlags(TCP, UDP)\r\n```",
        "createdAt" : "2019-08-22T14:23:17Z",
        "updatedAt" : "2019-09-28T01:19:44Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "1dd8b29a-48d3-4072-8d2c-c4e061646e03",
        "parentId" : "2c0e7d45-5b4e-4a4d-a524-8fe2cc5d4811",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "@mgdevstack could you please create a follow up issue for this, so we dont forget?\r\nonce we get that we can cancel the hold on this.",
        "createdAt" : "2019-09-29T19:25:58Z",
        "updatedAt" : "2019-09-29T19:26:35Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      }
    ],
    "commit" : "99475f94999a024256a242ca1369b9d9df6d495f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +883,887 @@\t\tName:         j.Name,\n\t\tImage:        framework.ServeHostnameImage,\n\t\tCommand:      []string{\"/agnhost\", \"serve-hostname\", \"--http=false\", \"--tcp\", \"--udp\"},\n\t\tNamespace:    ns,\n\t\tLabels:       j.Labels,"
  },
  {
    "id" : "9e130f3b-c474-4880-a1f5-0e9b78ec204d",
    "prId" : 81157,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81157#pullrequestreview-272963207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67ad8b34-c7bd-4358-9963-b2f9a57628ae",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Can we add a log line so it is clear this is skipped?",
        "createdAt" : "2019-08-08T16:43:08Z",
        "updatedAt" : "2019-08-09T06:36:37Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "22161e05-b07c-4561-8936-b4acc10591d2",
        "parentId" : "67ad8b34-c7bd-4358-9963-b2f9a57628ae",
        "authorId" : "36b049e7-5c64-46e2-809a-9067732f0056",
        "body" : "Yes, added as suggested.",
        "createdAt" : "2019-08-09T06:30:20Z",
        "updatedAt" : "2019-08-09T06:36:37Z",
        "lastEditedBy" : "36b049e7-5c64-46e2-809a-9067732f0056",
        "tags" : [
        ]
      }
    ],
    "commit" : "715627d95e080d87aacb64823f94edd2faa7100a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +779,783 @@\t\tif isInvalidOrLocalhostAddress(internalAddr) {\n\t\t\te2elog.Logf(\"skipping testEndpointReachability() for internal adddress %s\", internalAddr)\n\t\t\tcontinue\n\t\t}\n\t\ttestEndpointReachability(internalAddr, sp.NodePort, sp.Protocol, pod)"
  },
  {
    "id" : "df1e76dd-2480-4c29-b2bb-4673fb4decd1",
    "prId" : 79667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79667#pullrequestreview-266178676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50dedd26-b3e9-4be0-bc69-1a02523abc42",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Similar to previous comment, this would also fail silently for type=LoadBalancer",
        "createdAt" : "2019-07-24T04:29:52Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ef2ef0a7-39ea-40ee-8432-5794a70cd71d",
        "parentId" : "50dedd26-b3e9-4be0-bc69-1a02523abc42",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Done.",
        "createdAt" : "2019-07-24T05:20:10Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      },
      {
        "id" : "91b11c4e-5920-421f-8a50-9563654f16f7",
        "parentId" : "50dedd26-b3e9-4be0-bc69-1a02523abc42",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Comment in CheckServiceReachability: \"Only supports Services with type ClusterIP, NodePort and ExternalName\"",
        "createdAt" : "2019-07-24T17:08:44Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "0a3c5440-2025-4d75-8b49-36dc9189898f",
        "parentId" : "50dedd26-b3e9-4be0-bc69-1a02523abc42",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Done. ",
        "createdAt" : "2019-07-24T17:40:28Z",
        "updatedAt" : "2019-07-24T17:40:28Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "1438a3c8fc88d6422b716326dc8f9b19921743f5",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +858,862 @@\tcase v1.ServiceTypeExternalName:\n\t\tj.checkExternalServiceReachability(svc, pod)\n\tdefault:\n\t\te2elog.Failf(\"Unsupported service type \\\"%s\\\" to verify service reachability for \\\"%s\\\" service. This may due to diverse implementation of the service type.\", svcType, svc.Name)\n\t}"
  },
  {
    "id" : "050eee56-6efe-4149-a056-52eae270aefe",
    "prId" : 79667,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79667#pullrequestreview-265796173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0806caaa-0352-49bd-a172-2f10a4d723bb",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Should comment here also that only TCP and UDP are supported here",
        "createdAt" : "2019-07-24T04:30:07Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ee902aab-4a4b-48f8-9e9d-0220a697918c",
        "parentId" : "0806caaa-0352-49bd-a172-2f10a4d723bb",
        "authorId" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "body" : "Done",
        "createdAt" : "2019-07-24T05:20:14Z",
        "updatedAt" : "2019-07-24T17:38:29Z",
        "lastEditedBy" : "0aee6f4f-d40c-4f7b-9383-7ec73a655652",
        "tags" : [
        ]
      }
    ],
    "commit" : "1438a3c8fc88d6422b716326dc8f9b19921743f5",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +781,785 @@}\n\n// testEndpointReachability tests reachability to endpoints (i.e. IP, ServiceName) and ports. Test request is initiated from specified execPod.\n// TCP and UDP protocol based service are supported at this moment\n// TODO: add support to test SCTP Protocol based services."
  }
]