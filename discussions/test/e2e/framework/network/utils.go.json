[
  {
    "id" : "01fe33dc-402e-4ae8-82ba-49379da2eb28",
    "prId" : 96484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96484#pullrequestreview-531548685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb5cb6d-33a5-4365-839d-ede97697b024",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "Existing doc on `NodeIP` is incorrect; it's an `ExternalIP` if the node has one, or an `InternalIP` if not. Likewise for `SecondaryNodeIP`",
        "createdAt" : "2020-11-16T17:32:50Z",
        "updatedAt" : "2020-11-16T22:19:12Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad043f2bdd5426d6a134e06830f92c5a2610197f",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +196,200 @@\t// SecondaryNodeIP it's an ExternalIP of the secondary IP family if the node has one,\n\t// or an InternalIP if not, for usein nodePort testing.\n\tSecondaryNodeIP string\n\t// The http/udp/sctp nodePorts of the Service.\n\tNodeHTTPPort int"
  },
  {
    "id" : "559de973-f4c9-4d8b-b4fa-246a9c5da105",
    "prId" : 96484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96484#pullrequestreview-531823125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4781437d-a6bc-4278-9239-26d1ede009e5",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "(Eventually we should just be getting these from `.IPFamilies` but for now that would only if the feature gate is enabled.)",
        "createdAt" : "2020-11-16T17:40:05Z",
        "updatedAt" : "2020-11-16T22:19:12Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "eaee194b-e6dd-439d-afca-7992e38acce9",
        "parentId" : "4781437d-a6bc-4278-9239-26d1ede009e5",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "let me add a comment to not forget about it",
        "createdAt" : "2020-11-16T22:01:07Z",
        "updatedAt" : "2020-11-16T22:19:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad043f2bdd5426d6a134e06830f92c5a2610197f",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +781,785 @@\t// but for now that would only if the feature gate is enabled.\n\tfamily := v1.IPv4Protocol\n\tsecondaryFamily := v1.IPv6Protocol\n\tif netutils.IsIPv6String(config.ClusterIP) {\n\t\tfamily = v1.IPv6Protocol"
  },
  {
    "id" : "984a37ed-da33-45b1-b4fa-4808e6cd95a4",
    "prId" : 95276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95276#pullrequestreview-502471056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "082dc527-ba14-49d1-83f5-12d5e85f90e5",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Given all the comment space that is spent on minTries/maxTries, would it be prudent to log those in test output?  Right now only maxTries is logged, and only on error",
        "createdAt" : "2020-10-05T16:09:46Z",
        "updatedAt" : "2020-10-05T23:01:51Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "5ba862e7-1b07-481a-8655-ef77f5d425d3",
        "parentId" : "082dc527-ba14-49d1-83f5-12d5e85f90e5",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "fixeddddd, added a log message below",
        "createdAt" : "2020-10-05T22:43:53Z",
        "updatedAt" : "2020-10-05T23:01:51Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8630dc924ad67a110baec00147f3e66d7e9ee8cb",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +393,397 @@// - maxTries == minTries will return as soon as all endpoints succeed (or fail once maxTries is reached without\n//   success on all endpoints).\n//   In general its prudent to have a high enough level of minTries to guarantee that all pods get a fair chance at receiving traffic.\nfunc (config *NetworkingTestConfig) DialFromNode(protocol, targetIP string, targetPort, maxTries, minTries int, expectedEps sets.String) error {\n\tvar cmd string"
  },
  {
    "id" : "de673c5d-6211-41ef-abb8-046924b3ab1c",
    "prId" : 94812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94812#pullrequestreview-516022201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f65a01d-b23c-4c21-88af-ea2c005cd84b",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "squash the golint fixes into the correct commits?",
        "createdAt" : "2020-10-23T14:24:41Z",
        "updatedAt" : "2020-10-26T22:08:42Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "fd36317a-2858-4d22-9d52-3c490215bc15",
        "parentId" : "2f65a01d-b23c-4c21-88af-ea2c005cd84b",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yep",
        "createdAt" : "2020-10-23T21:32:33Z",
        "updatedAt" : "2020-10-26T22:08:42Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +91,95 @@var NetexecImageName = imageutils.GetE2EImage(imageutils.Agnhost)\n\n// Option is used to configure the NetworkingTest object\ntype Option func(*NetworkingTestConfig)\n"
  },
  {
    "id" : "ad21685d-5f8e-42b9-8b04-7411cdb40dc4",
    "prId" : 94812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94812#pullrequestreview-527504456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8064e369-a71a-4fb1-8418-aa129ae32ee9",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Should this be checking `p.Spec.NodeName` or `p.Labels` instead? Checking node selector to extract the hostname seems weird.",
        "createdAt" : "2020-11-04T22:39:38Z",
        "updatedAt" : "2020-11-04T22:39:38Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "cc0f600e-7d8a-457c-a3a6-a923edabe31f",
        "parentId" : "8064e369-a71a-4fb1-8418-aa129ae32ee9",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : " it is configured that way in the manifest, you can see the code here \r\nhttps://github.com/kubernetes/kubernetes/blob/b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29/test/e2e/framework/network/utils.go#L578-L580\r\n\r\nso I took it directly, totally open to suggestions",
        "createdAt" : "2020-11-04T22:55:48Z",
        "updatedAt" : "2020-11-04T22:56:05Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "cf10f64f-b297-4554-8b56-29270a13d835",
        "parentId" : "8064e369-a71a-4fb1-8418-aa129ae32ee9",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "this is taking it from the configuration object, it does not read it from the API ,so it seems the only place to take it",
        "createdAt" : "2020-11-10T18:42:58Z",
        "updatedAt" : "2020-11-10T18:42:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +247,251 @@\tfor _, p := range config.EndpointPods {\n\t\tif config.EndpointsHostNetwork {\n\t\t\texpectedEps.Insert(p.Spec.NodeSelector[\"kubernetes.io/hostname\"])\n\t\t} else {\n\t\t\texpectedEps.Insert(p.Name)"
  },
  {
    "id" : "1ebd1ab0-d0e4-4454-8e7a-0f80f759a44a",
    "prId" : 94812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94812#pullrequestreview-527624589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe224706-ea42-4851-89c0-b2dc1e7fdc19",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks, I like this generic setter much more than piling up bool vars.",
        "createdAt" : "2020-11-10T21:17:15Z",
        "updatedAt" : "2020-11-10T21:24:24Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "e6dd5022-e6c1-46c9-bb98-e31449a3b950",
        "parentId" : "fe224706-ea42-4851-89c0-b2dc1e7fdc19",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, and I have to add some dual stack tests that need to add more variables, that will make it even worse :upside_down_face: ",
        "createdAt" : "2020-11-10T21:33:00Z",
        "updatedAt" : "2020-11-10T21:33:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +110,114 @@\n// NewNetworkingTestConfig creates and sets up a new test config helper.\nfunc NewNetworkingTestConfig(f *framework.Framework, setters ...Option) *NetworkingTestConfig {\n\t// default options\n\tconfig := &NetworkingTestConfig{"
  },
  {
    "id" : "a9414488-599b-43ec-8365-d5f52383a5db",
    "prId" : 94812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94812#pullrequestreview-527625101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c758735f-74f0-4ce7-acab-e62e934603fb",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "this changed from 8080 to 9080, expected?",
        "createdAt" : "2020-11-10T21:29:54Z",
        "updatedAt" : "2020-11-10T21:29:57Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "a8bbf524-3043-4412-8ffb-7aa6667f3a75",
        "parentId" : "c758735f-74f0-4ce7-acab-e62e934603fb",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : " this container is wrongly using the same ports that the other containers that are endpoints from the service under test.\r\nIt is a different container that expose a handler to execute commands, not to be polled",
        "createdAt" : "2020-11-10T21:32:13Z",
        "updatedAt" : "2020-11-10T21:32:13Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "5c9d4c34-253f-44be-8d8a-0a1baf0fcf91",
        "parentId" : "c758735f-74f0-4ce7-acab-e62e934603fb",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "IIRC I added it in a separate commit and the description should add a bit more of detail",
        "createdAt" : "2020-11-10T21:33:48Z",
        "updatedAt" : "2020-11-10T21:33:48Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b61faa388c0d03fe2ae99b5b36e1d6f4d71eba29",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +56,60 @@\tEndpointSCTPPort = 8082\n\t// testContainerHTTPPort is the test container http port.\n\ttestContainerHTTPPort = 9080\n\t// ClusterHTTPPort is a cluster HTTP port for testing.\n\tClusterHTTPPort = 80"
  },
  {
    "id" : "b1498060-33ec-40f5-a60c-627436416ac3",
    "prId" : 93837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93837#pullrequestreview-493792118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d5876b1-22a3-47e9-a3de-cf23adc77022",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I 'm afraid we have to revert this commit, this method is used by other tests, and now instead of failing it returns an error, but the other tests are not asserting the error, so a failure will go unnoticed\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/0b8c2bf1a10817a0e2b1f9a30737c85f6c65af63/test/e2e/network/networking.go#L211-L258",
        "createdAt" : "2020-09-22T19:46:03Z",
        "updatedAt" : "2020-09-22T19:46:03Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "81219ca9d2524176708c28ed34fdb750abc7bdab",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +168,172 @@\n// DialFromEndpointContainer executes a curl via kubectl exec in an endpoint container.\nfunc (config *NetworkingTestConfig) DialFromEndpointContainer(protocol, targetIP string, targetPort, maxTries, minTries int, expectedEps sets.String) error {\n\treturn config.DialFromContainer(protocol, echoHostname, config.EndpointPods[0].Status.PodIP, targetIP, EndpointHTTPPort, targetPort, maxTries, minTries, expectedEps)\n}"
  },
  {
    "id" : "b989caaf-eaec-474b-90ce-2fc832dc28cd",
    "prId" : 92588,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92588#pullrequestreview-439034171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7b38a9-6f59-4ee3-a862-1f6d62e4a872",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "We should also wait for affinity-service, right?",
        "createdAt" : "2020-06-29T10:11:03Z",
        "updatedAt" : "2020-06-29T13:04:57Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "5cc86f17-fad3-4f9c-8174-b3af11619db1",
        "parentId" : "1d7b38a9-6f59-4ee3-a862-1f6d62e4a872",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yep",
        "createdAt" : "2020-06-29T11:13:47Z",
        "updatedAt" : "2020-06-29T13:04:57Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec295c0f2a65fba411968625225d4db24d4cbba4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +676,680 @@\n\tginkgo.By(\"Waiting for NodePort service to expose endpoint\")\n\terr = framework.WaitForServiceEndpointsNum(config.f.ClientSet, config.Namespace, nodePortServiceName, len(config.EndpointPods), time.Second, wait.ForeverTestTimeout)\n\tframework.ExpectNoError(err, \"failed to validate endpoints for service %s in namespace: %s\", nodePortServiceName, config.Namespace)\n\tginkgo.By(\"Waiting for Session Affinity service to expose endpoint\")"
  },
  {
    "id" : "11410958-05af-4368-9d21-6556426d746d",
    "prId" : 92163,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92163#pullrequestreview-438876385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8d2f67-907b-4e98-98e9-a82eba89bbc8",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "000 ?\r\n\r\nThen this method would return 0, which is not what we want, right?",
        "createdAt" : "2020-06-25T13:12:25Z",
        "updatedAt" : "2020-06-25T13:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d1dfcecf-adbc-4b07-93f7-7f1946125db5",
        "parentId" : "fc8d2f67-907b-4e98-98e9-a82eba89bbc8",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "it is kind of difficult to tell the errors caused by curl(such as fail to connect to remote, resolve host, etc.) from the errors caused by executing command in the test container(such as fail to connect to the api server). IMHO the former errors are retriable while the latter are not(I suppose it indicates that the cluster might be misconfigured), I think returning 0 is sufficient to let users know curl is sucessfully executed but it cannot connect to the host.\r\n\r\nI am not sure if there is a better choice, any suggestion is welcome.",
        "createdAt" : "2020-06-29T04:18:40Z",
        "updatedAt" : "2020-06-29T04:18:40Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b9f11c9a9524eddd3ffa3ece7c70d7da3ea4780",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +364,368 @@\t// and want to return any other errors, such as cannot execute command in the Pod.\n\t// If curl failed to connect to host, it would exit with code 7, which makes `ExecShellInPodWithFullOutput`\n\t// return a non-nil error and output \"000\" to stdout.\n\tif err != nil && len(stdout) == 0 {\n\t\treturn 0, fmt.Errorf(\"failed to execute %q: %v, stderr: %q\", cmd, err, stderr)"
  },
  {
    "id" : "889a10ff-9e85-4d89-a333-8f76a2e2c766",
    "prId" : 91559,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91559#pullrequestreview-427013417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5117df1-3ff1-4f38-be24-742b1a75a3ef",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "just curious, for what is needed this `cmd` var that we are creating here?\r\nIt seems it's only used in `Framework.Failf(` statement\r\n",
        "createdAt" : "2020-06-09T10:33:33Z",
        "updatedAt" : "2020-06-09T10:33:33Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "52a44d69-8e96-491b-9142-8a595317ac07",
        "parentId" : "a5117df1-3ff1-4f38-be24-742b1a75a3ef",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "scratch this comment, sorry, is not important",
        "createdAt" : "2020-06-09T10:40:51Z",
        "updatedAt" : "2020-06-09T10:40:51Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "708fb6b457d94c770890731e53090a975f53679a",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +251,255 @@func (config *NetworkingTestConfig) DialFromContainer(protocol, dialCommand, containerIP, targetIP string, containerHTTPPort, targetPort, maxTries, minTries int, expectedResponses sets.String) {\n\tipPort := net.JoinHostPort(containerIP, strconv.Itoa(containerHTTPPort))\n\tcmd := makeCURLDialCommand(ipPort, dialCommand, protocol, targetIP, targetPort)\n\n\tresponses := sets.NewString()"
  },
  {
    "id" : "63eacc90-c766-41d3-ac79-dac59518786b",
    "prId" : 89326,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89326#pullrequestreview-378967833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5ba4be-70c9-45ae-a4ae-2f81ab21f99b",
        "parentId" : null,
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Same as above, could you please break this up into multiple lines?\r\nLet's try and make it better to read tests",
        "createdAt" : "2020-03-21T17:51:56Z",
        "updatedAt" : "2020-03-22T15:10:23Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "9813a02c-a509-49fe-ac4a-4b239a4f75ac",
        "parentId" : "0c5ba4be-70c9-45ae-a4ae-2f81ab21f99b",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "i will do it later.:smile:",
        "createdAt" : "2020-03-22T02:47:37Z",
        "updatedAt" : "2020-03-22T15:10:23Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "bed22fbb44cb64205e807ec1ba57efbdbb7de905",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +665,669 @@\trunningPods := make([]*v1.Pod, 0, len(nodes))\n\tfor _, p := range createdPods {\n\t\tframework.ExpectNoError(e2epod.WaitTimeoutForPodReadyInNamespace(config.f.ClientSet, p.Name, config.f.Namespace.Name, framework.PodStartTimeout))\n\t\trp, err := config.getPodClient().Get(context.TODO(), p.Name, metav1.GetOptions{})\n\t\tframework.ExpectNoError(err)"
  },
  {
    "id" : "9c8d7353-71a4-4b2a-9995-6d8f5b003cd1",
    "prId" : 83680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83680#pullrequestreview-317281570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f8bc8df-254b-433a-8a25-d85382a68d3a",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "What's the reason for only checking this for the echoHostname dial command?",
        "createdAt" : "2019-11-14T21:16:52Z",
        "updatedAt" : "2019-11-14T21:28:07Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "2233bc96-c497-427c-b893-b39b0952fff2",
        "parentId" : "4f8bc8df-254b-433a-8a25-d85382a68d3a",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "It's the only case that requires it. In the ``echoHostname`` dial command, the idea is to have *all* the endpoints respond with their hostnames. If one of them did not respond, it will be diagnosed.\r\n\r\nIn the ``echo`` case, the message is echoed only once, proving that the connectivity between the containers work, and in this PRs case, that large packets are handled correctly.",
        "createdAt" : "2019-11-14T21:32:53Z",
        "updatedAt" : "2019-11-14T21:32:54Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "04d8d0f5-df60-48f0-8958-f9894e354448",
        "parentId" : "4f8bc8df-254b-433a-8a25-d85382a68d3a",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Thanks for clarifying",
        "createdAt" : "2019-11-14T21:46:37Z",
        "updatedAt" : "2019-11-14T21:46:37Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "56fe87d349adfcccac16c5eda8e9da5538106f55",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +265,269 @@\n\tif dialCommand == echoHostname {\n\t\tconfig.diagnoseMissingEndpoints(responses)\n\t}\n\tframework.Failf(\"Failed to find expected responses:\\nTries %d\\nCommand %v\\nretrieved %v\\nexpected %v\\n\", maxTries, cmd, responses, expectedResponses)"
  },
  {
    "id" : "58204e9b-f7e9-4cfb-b4e7-a0487087df4c",
    "prId" : 83680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83680#pullrequestreview-317267504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "984262bc-ffc9-458a-b4ec-f2b8a6d2aac8",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "This is changing from `hostName` -> `hostname`, both are currently handled?",
        "createdAt" : "2019-11-14T21:19:44Z",
        "updatedAt" : "2019-11-14T21:19:55Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "3b5d1b27-79b9-4842-a382-a4f7519f7758",
        "parentId" : "984262bc-ffc9-458a-b4ec-f2b8a6d2aac8",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "ah, I see it here now https://github.com/kubernetes/kubernetes/blob/master/test/images/agnhost/netexec/netexec.go#L73-L74",
        "createdAt" : "2019-11-14T21:20:44Z",
        "updatedAt" : "2019-11-14T21:20:45Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "56fe87d349adfcccac16c5eda8e9da5538106f55",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +223,227 @@\t// misinterpret square brackets around IPv6 as globbing, so use the -g\n\t// argument to disable globbing to handle the IPv6 case.\n\tcmd := fmt.Sprintf(\"curl -g -q -s 'http://%s/dial?request=%s&protocol=%s&host=%s&port=%d&tries=1'\",\n\t\tipPort,\n\t\tdialCommand,"
  }
]