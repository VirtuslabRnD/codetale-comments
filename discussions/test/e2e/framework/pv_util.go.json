[
  {
    "id" : "a51950ad-d21c-4eab-835b-407c7c5f13f3",
    "prId" : 80543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80543#pullrequestreview-266787181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e34d450a-2aed-43de-b43b-5397ab77dbc2",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Just checking, this is the only required field?",
        "createdAt" : "2019-07-25T00:46:18Z",
        "updatedAt" : "2019-07-25T17:57:45Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "e583c8f9-0159-4b2b-bc75-d4569ccd94ba",
        "parentId" : "e34d450a-2aed-43de-b43b-5397ab77dbc2",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yep, everything else is optional",
        "createdAt" : "2019-07-25T17:52:13Z",
        "updatedAt" : "2019-07-25T17:57:45Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "862ba3fc057bb0e2afd6d92c7b53cd2871e381bd",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +85,89 @@\tLabels labels.Set\n\t// PVSource contains the details of the underlying volume and must be set\n\tPVSource v1.PersistentVolumeSource\n\t// [Optional] Prebind lets you specify a PVC to bind this PV to before\n\t// creation"
  },
  {
    "id" : "dc021944-8f27-4d98-9595-3562d14c4215",
    "prId" : 80543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80543#pullrequestreview-266787288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebf9eb33-5e70-44a8-817e-7877a7ed6bbe",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "What do you think about moving this declaration down to line 609? (as low as it can go and still compile)",
        "createdAt" : "2019-07-25T00:49:06Z",
        "updatedAt" : "2019-07-25T17:57:45Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "6107b2d2-0246-4663-b0f5-3ba22e5ddf52",
        "parentId" : "ebf9eb33-5e70-44a8-817e-7877a7ed6bbe",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "there are other functions higher up in this file that use PVConfig",
        "createdAt" : "2019-07-25T17:52:26Z",
        "updatedAt" : "2019-07-25T17:57:45Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "862ba3fc057bb0e2afd6d92c7b53cd2871e381bd",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +597,601 @@//   is added later in CreatePVCPV.\nfunc MakePersistentVolume(pvConfig PersistentVolumeConfig) *v1.PersistentVolume {\n\tvar claimRef *v1.ObjectReference\n\n\tif len(pvConfig.AccessModes) == 0 {"
  },
  {
    "id" : "8f23c0f5-d34a-4d33-9b20-eeb91371ffdd",
    "prId" : 80543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80543#pullrequestreview-266353093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8908a84-1ae9-43ab-aeab-addc903da95c",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Should we include `Prebind.UID`?",
        "createdAt" : "2019-07-25T00:51:28Z",
        "updatedAt" : "2019-07-25T17:57:45Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "862ba3fc057bb0e2afd6d92c7b53cd2871e381bd",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +619,623 @@\t\t\tKind:       \"PersistentVolumeClaim\",\n\t\t\tAPIVersion: \"v1\",\n\t\t\tName:       pvConfig.Prebind.Name,\n\t\t\tNamespace:  pvConfig.Prebind.Namespace,\n\t\t\tUID:        pvConfig.Prebind.UID,"
  },
  {
    "id" : "5eb7cdab-238a-4f47-8da5-f3ac8084709e",
    "prId" : 80382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80382#pullrequestreview-265105091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "629a2980-52a2-4d23-9c00-01aadf878d19",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I know this isn't ideal but I wanted to keep the refactor small-ish. The issue is actually in the callers not using a pointer to the `VolumeMode` throughout the test code so they're defaulting to empty string sometimes. Would be a much larger refactor to fix - we can just treat them as nil here (to default) and log a warning",
        "createdAt" : "2019-07-22T17:47:42Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "430539b4-4c57-4cdd-aa5e-1bed146f54f5",
        "parentId" : "629a2980-52a2-4d23-9c00-01aadf878d19",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "fyi an empty string `VolumeMode` is actually an invalid value",
        "createdAt" : "2019-07-22T17:48:45Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "a60069d7-6257-44d3-ac56-702322bf059b",
        "parentId" : "629a2980-52a2-4d23-9c00-01aadf878d19",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "So there are tests that give a pointer to empty string? That seems like more work than letting this field default to nil.\r\n\r\nEDIT: I found `type StorageClassTest` so I get it now.",
        "createdAt" : "2019-07-22T18:00:19Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "deac0f3d-47ae-4269-9f78-993af3d84559",
        "parentId" : "629a2980-52a2-4d23-9c00-01aadf878d19",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Yeah, a fix for another time",
        "createdAt" : "2019-07-22T23:22:44Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e194cf24cccc88b9d7190465bb20931abed21f55",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +637,641 @@\n\tif cfg.VolumeMode != nil && *cfg.VolumeMode == \"\" {\n\t\te2elog.Logf(\"Warning: Making PVC: VolumeMode specified as invalid empty string, treating as nil\")\n\t\tcfg.VolumeMode = nil\n\t}"
  },
  {
    "id" : "fbb5921c-e1d9-467f-9260-69a3ccde587a",
    "prId" : 80382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80382#pullrequestreview-265103360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4452662b-e41d-4cff-bc44-c93d8adbe2ec",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Everything arg is a field in the `PersistentVolumeClaimConfig` except namespace. :laughing: I'm sure it makes sense in context.",
        "createdAt" : "2019-07-22T17:50:26Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "9b441878-4dd6-4bed-9b5b-872b5ab0aef8",
        "parentId" : "4452662b-e41d-4cff-bc44-c93d8adbe2ec",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I believe namespace should also be in the config but I wasn't really sure so to keep this refactor simpler I decided not to change that. (main goal is to dedupe not to fix config)",
        "createdAt" : "2019-07-22T23:16:17Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e194cf24cccc88b9d7190465bb20931abed21f55",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +644,648 @@\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tGenerateName: cfg.NamePrefix,\n\t\t\tNamespace:    ns,\n\t\t\tAnnotations:  cfg.Annotations,\n\t\t},"
  },
  {
    "id" : "9fa7be8c-548b-49e5-baf8-8de3f5353e40",
    "prId" : 80382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80382#pullrequestreview-266339749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ed98ece-2662-4e65-8e4f-438a88194f69",
        "parentId" : null,
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : "is this documented anywhere? seems a bit magical to me",
        "createdAt" : "2019-07-24T23:34:33Z",
        "updatedAt" : "2019-07-24T23:34:33Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      },
      {
        "id" : "aad1f52d-dcd8-412f-8e0e-1feb7c2f44c5",
        "parentId" : "1ed98ece-2662-4e65-8e4f-438a88194f69",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Documented here: https://github.com/kubernetes/kubernetes/pull/80382/files#diff-420013911dac4a3b0f16035b6e90a571R96\r\n\r\nLess magical than the previous defaulting even :)\r\nThere was logging everytime we defaulted that I removed: https://github.com/kubernetes/kubernetes/pull/80382#discussion_r305955175",
        "createdAt" : "2019-07-24T23:39:37Z",
        "updatedAt" : "2019-07-24T23:39:38Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "1e56a10a-7ae9-4514-9c94-69fca4e90f5e",
        "parentId" : "1ed98ece-2662-4e65-8e4f-438a88194f69",
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : ":+1: ",
        "createdAt" : "2019-07-24T23:44:25Z",
        "updatedAt" : "2019-07-24T23:44:25Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      }
    ],
    "commit" : "e194cf24cccc88b9d7190465bb20931abed21f55",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +629,633 @@\n\tif len(cfg.ClaimSize) == 0 {\n\t\tcfg.ClaimSize = \"2Gi\"\n\t}\n"
  },
  {
    "id" : "ac3a0e43-9836-49a3-a87b-120f407a7c1b",
    "prId" : 80188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80188#pullrequestreview-262139852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0e3ecd7-13ff-440e-8d93-7b1b070f6726",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "/lgtm",
        "createdAt" : "2019-07-16T00:38:45Z",
        "updatedAt" : "2019-07-16T00:38:49Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "0974db46340d23a2872ec0e2fa9840051f8f2477",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +650,654 @@\tvar newDiskName string\n\tfor start := time.Now(); time.Since(start) < pdRetryTimeout; time.Sleep(pdRetryPollTime) {\n\t\tnewDiskName, err = createPD(zone)\n\t\tif err != nil {\n\t\t\te2elog.Logf(\"Couldn't create a new PD, sleeping 5 seconds: %v\", err)"
  },
  {
    "id" : "cfc4d370-9522-489c-ae41-16f8799aafb5",
    "prId" : 74693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74693#pullrequestreview-219236439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19386167-954b-4898-9436-c19e463a950a",
        "parentId" : null,
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "what happens if nodeName is \"\"? like if l.config.ClientNodeName is blank",
        "createdAt" : "2019-03-11T16:28:46Z",
        "updatedAt" : "2019-03-11T16:28:47Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "42d9f946-6eda-421d-8cfa-41abd54e0c8d",
        "parentId" : "19386167-954b-4898-9436-c19e463a950a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I would expect it to fail and not match anything. I'm surprised the tests are passing though?",
        "createdAt" : "2019-03-11T16:44:38Z",
        "updatedAt" : "2019-03-11T16:44:39Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "fc8ebf5a-886c-4fb9-a714-2d556aed8e1d",
        "parentId" : "19386167-954b-4898-9436-c19e463a950a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "/hold \r\nto test this out",
        "createdAt" : "2019-03-11T16:47:10Z",
        "updatedAt" : "2019-03-11T16:47:10Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "2573ac82-b9cc-4507-8ed2-a3f41a50fd48",
        "parentId" : "19386167-954b-4898-9436-c19e463a950a",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "```SetNodeAffinityRequirement``` is currently only used in a way like:\r\n1. Deploy first pod,\r\n2. Check the actual node name where first pod was deployed,\r\n3. Create node affinity/anti-affinity for the node \r\n\r\nSo, currently it is not used for the case that ```nodeName``` is blank, as a result, this bug hasn't been appeared in actual test.\r\n\r\nLet me add codes in ```SetNodeAffinityRequirement``` to fail for ```nodeName``` blank case. \r\n",
        "createdAt" : "2019-03-11T21:33:12Z",
        "updatedAt" : "2019-03-11T21:33:12Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "bf59cef2-e4a2-4ab3-8730-911f6bcbf361",
        "parentId" : "19386167-954b-4898-9436-c19e463a950a",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "I started to think that we don't need to add codes to force failure in this case, because this case should fail properly without this check. Do you agree or are there any actions needed for this?",
        "createdAt" : "2019-03-11T22:09:07Z",
        "updatedAt" : "2019-03-11T22:09:07Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "c8c4008d-f410-449f-bae4-cfa67cfff8ff",
        "parentId" : "19386167-954b-4898-9436-c19e463a950a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think this is fine",
        "createdAt" : "2019-03-27T01:46:24Z",
        "updatedAt" : "2019-03-27T01:46:24Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4c88acec63ebd678d2e5a7a3db1b6da22d39b96",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +935,939 @@\n\t\t\tMatchExpressions: []v1.NodeSelectorRequirement{\n\t\t\t\t{Key: \"kubernetes.io/hostname\", Operator: operator, Values: []string{nodeName}},\n\t\t\t},\n\t\t})"
  },
  {
    "id" : "a2cd7fef-58e9-4270-973c-16e876119450",
    "prId" : 61181,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61181#pullrequestreview-105727043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e14e32d2-8643-4da1-92c8-af8210a80baf",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Other e2e code is using `imageutils.GetE2EImage(imageutils.NginxSlim)` to define the nginx image",
        "createdAt" : "2018-03-20T01:34:44Z",
        "updatedAt" : "2018-03-20T01:34:44Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "1162f5bf-6e5c-4261-8445-dbde5926d1b1",
        "parentId" : "e14e32d2-8643-4da1-92c8-af8210a80baf",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "please note - changing the image name here is non-trivial amount of work. I will have to go back to a kube version where these tests are Red and then make the image change, deploy a cluster and test it.\r\n\r\nAnd then - I will have to come back to kube version where these tests are green. Deploy a new cluster and test it again.  \r\n\r\nI am happy to change this if you insist, but it might be awhile before I get to it. ",
        "createdAt" : "2018-03-21T13:48:03Z",
        "updatedAt" : "2018-03-21T13:48:04Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "adeebd47-1ba4-4365-8ec3-f34d0ad2e737",
        "parentId" : "e14e32d2-8643-4da1-92c8-af8210a80baf",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Also - ideally each test has to run for couple of hours at least to make sure, there are no flakes.",
        "createdAt" : "2018-03-21T13:49:39Z",
        "updatedAt" : "2018-03-21T13:49:39Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b85c4fc57a43cf3a2379a29ee502a5c7ef5ae7b3",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +873,877 @@\t\t\t\t{\n\t\t\t\t\tName:  \"write-pod\",\n\t\t\t\t\tImage: \"nginx\",\n\t\t\t\t\tPorts: []v1.ContainerPort{\n\t\t\t\t\t\t{"
  },
  {
    "id" : "ef07a2e4-def1-4754-8a5b-612755520b79",
    "prId" : 54018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54018#pullrequestreview-70382387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa8a81ef-dc2d-41ce-885d-ca6ff54e1575",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "nice addition",
        "createdAt" : "2017-10-18T22:48:53Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3e28c8836cd64d2faea8843c9f90d780b2f634",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +796,800 @@// Returns a pod definition based on the namespace. The pod references the PVC's\n// name.  A slice of BASH commands can be supplied as args to be run by the pod\nfunc MakePod(ns string, nodeSelector map[string]string, pvclaims []*v1.PersistentVolumeClaim, isPrivileged bool, command string) *v1.Pod {\n\tif len(command) == 0 {\n\t\tcommand = \"while true; do sleep 1; done\""
  },
  {
    "id" : "ad16e53b-0930-4d78-b41a-dce09000870d",
    "prId" : 43645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43645#pullrequestreview-29500929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558fc68d-4be3-4f2e-b25d-cb9db8f62ac6",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "super nit: do you want this blank line?\r\n@ncdc No. it's too nit-picky to matter...",
        "createdAt" : "2017-03-24T22:07:06Z",
        "updatedAt" : "2017-03-28T22:17:30Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "fb9e6645-71b5-4727-b71e-e85cd7eb15a2",
        "parentId" : "558fc68d-4be3-4f2e-b25d-cb9db8f62ac6",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@jeffvance do you want this fixed?",
        "createdAt" : "2017-03-28T16:20:43Z",
        "updatedAt" : "2017-03-28T22:17:30Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1622406284dd9668c2dddf2b5a681ac0b4ab3430",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +85,89 @@// AccessModes defaults to all modes (RWO, RWX, ROX) if left empty\n// (+optional) Annotations defines the PVC's annotations\n\ntype PersistentVolumeClaimConfig struct {\n\tAccessModes []v1.PersistentVolumeAccessMode"
  },
  {
    "id" : "699018e9-5ded-46eb-a559-1dd248607e7b",
    "prId" : 43645,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43645#pullrequestreview-29482546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7af1b02d-b839-4900-8045-54d39d92f7ce",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "if pvConfig.Label is not assigned then Labels: will be nil here. Is this ok?",
        "createdAt" : "2017-03-24T22:12:03Z",
        "updatedAt" : "2017-03-28T22:17:30Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "af028d7e-af2b-428a-ab6f-fdea8990f75b",
        "parentId" : "7af1b02d-b839-4900-8045-54d39d92f7ce",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Yes, the pv_controller safely handles `nil` labels and labelSelectors.  This is done both in `findByClaim` and in helper functions like `LabelSelectorAsSelector`.",
        "createdAt" : "2017-03-28T15:17:50Z",
        "updatedAt" : "2017-03-28T22:17:30Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      }
    ],
    "commit" : "1622406284dd9668c2dddf2b5a681ac0b4ab3430",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +482,486 @@\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tGenerateName: pvConfig.NamePrefix,\n\t\t\tLabels:       pvConfig.Labels,\n\t\t\tAnnotations: map[string]string{\n\t\t\t\tvolumehelper.VolumeGidAnnotationKey: \"777\","
  },
  {
    "id" : "af4aae2b-2f1a-47dc-a8de-6ca5b45a5eb9",
    "prId" : 42829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42829#pullrequestreview-26122329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59c4a642-dd6c-49a6-b90c-d221fce814bd",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I don't know if this is correct.  I don't have an AWS environment to test with.  Currently, this codepath is not called for AWS.",
        "createdAt" : "2017-03-09T19:33:54Z",
        "updatedAt" : "2017-04-18T00:13:38Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6a008dac166037c59f4c86212e43e1e47452a2d",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +861,865 @@\t\treturn &v1.PersistentVolumeSource{\n\t\t\tAWSElasticBlockStore: &v1.AWSElasticBlockStoreVolumeSource{\n\t\t\t\tVolumeID: diskName,\n\t\t\t\tFSType:   \"ext3\",\n\t\t\t},"
  }
]