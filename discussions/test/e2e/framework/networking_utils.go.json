[
  {
    "id" : "9a49885e-d7aa-4459-9e69-252ff16aa445",
    "prId" : 80398,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80398#pullrequestreview-265712723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0aae5bf-d47b-417a-83f5-97c7536a7db2",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Why not just ` ::ffff:`?",
        "createdAt" : "2019-07-23T21:44:57Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "054988f4-8b93-4301-9479-dfd9e9037301",
        "parentId" : "d0aae5bf-d47b-417a-83f5-97c7536a7db2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I was going to use without `0::`, but wanted to keep it consistent with the rfc https://tools.ietf.org/html/rfc2765\r\n> 2.1.  Addresses\r\n\r\n   In addition to the forms of addresses defined in [ADDR-ARCH] this\r\n   document also introduces the new form of IPv4-translated address.\r\n   This is needed to avoid using IPv4-compatible addresses outside the\r\n   intended use of automatic tunneling.  Thus the address forms are:\r\n\r\n         IPv4-mapped:\r\n                 An address of the form 0::ffff:a.b.c.d which refers\r\n                 to a node that is not IPv6-capable. \r\n\r\n\r\nI think itÂ´s cosmetic, both representations are equivalent AFAIK",
        "createdAt" : "2019-07-23T21:55:22Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "7a183391-0334-4b59-b457-8c06dd81e1f5",
        "parentId" : "d0aae5bf-d47b-417a-83f5-97c7536a7db2",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Good to know, thanks!",
        "createdAt" : "2019-07-23T22:35:50Z",
        "updatedAt" : "2019-07-25T14:18:45Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd15f3f9f76855d61be1396888fae0cc6499df14",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +83,87 @@func TranslateIPv4ToIPv6(ip string) string {\n\tif TestContext.IPFamily == \"ipv6\" && !k8utilnet.IsIPv6String(ip) {\n\t\tip = \"0::ffff:\" + ip\n\t}\n\treturn ip"
  },
  {
    "id" : "ae32c85c-5fa3-4e75-bd4a-879b4fff48b2",
    "prId" : 74394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74394#pullrequestreview-212532314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e173651-7bb1-4711-8782-30f9399e5963",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "This is wrong; it will return and retry on `result.Code == 200`, meaning there's no way to ever update the counts below and return `true`, meaning the function will always time out. (You probably meant `==` rather than `!=` here, although `if result.Status != HTTPOK` would be closer to the original code; you don't want to check the body if `Status == HTTPWrongCode`). \r\n\r\nIt looks like this function only gets used from `It(\"[Slow] [Serial] should create valid firewall rules for LoadBalancer type service\"` in `test/e2e/network/firewall.go`, which I guess isn't getting run by CI because it's Slow?\r\n\r\nI guess you probably want to force a run with *all* Slow networking tests, to fully test the new code",
        "createdAt" : "2019-03-08T17:20:49Z",
        "updatedAt" : "2019-03-12T15:09:02Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "e229f750-dc1a-4a66-9a16-a49328861881",
        "parentId" : "9e173651-7bb1-4711-8782-30f9399e5963",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Nice catch.",
        "createdAt" : "2019-03-09T00:30:35Z",
        "updatedAt" : "2019-03-12T15:09:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "de25d6cb9577b00b24ca2baf0187b34f483a0d6c",
    "line" : 421,
    "diffHunk" : "@@ -1,1 +979,983 @@\t\tresult := PokeHTTP(externalIP, int(httpPort), \"/hostname\", &HTTPPokeParams{Timeout: 1 * time.Second})\n\t\tif result.Status != HTTPSuccess {\n\t\t\treturn false, nil\n\t\t}\n"
  },
  {
    "id" : "d158be45-6038-4eea-a396-662c60d47a61",
    "prId" : 72918,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72918#pullrequestreview-196513758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e08e3287-1dc6-406d-ba98-7b33d8e6d0aa",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "spaces are not permitted in hostnames for both Windows and Linux so the quotes change seems fine.\r\nin terms of `nc` there is no bundled netcat for Windows or in popular packages like `msys`, so i don't see how this helps the overall Windows situation with `DialFromNode()`, unless you downloaded a tool from somewhere. :)\r\n",
        "createdAt" : "2019-01-25T13:39:27Z",
        "updatedAt" : "2019-01-25T13:41:08Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "bfb3b49a-51e9-4974-a355-eded7aad90a4",
        "parentId" : "e08e3287-1dc6-406d-ba98-7b33d8e6d0aa",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Indeed, we are including the nc executable in the hostexec image: https://github.com/kubernetes-sigs/windows-testing/blob/f96cb4cc6d71cc5b9782306ed89cd93d1363ccd8/images/hostexec/Dockerfile#L17",
        "createdAt" : "2019-01-25T13:44:19Z",
        "updatedAt" : "2019-01-25T13:44:20Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "55dea240-d0bd-4e5c-be97-7941ad4b25e1",
        "parentId" : "e08e3287-1dc6-406d-ba98-7b33d8e6d0aa",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ack\r\n",
        "createdAt" : "2019-01-25T13:51:10Z",
        "updatedAt" : "2019-01-25T13:51:11Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "72be89523831d945e37ccf09a336f806e4e2077c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +293,297 @@\t\t// TODO: It would be enough to pass 1s+epsilon to timeout, but unfortunately\n\t\t// busybox timeout doesn't support non-integer values.\n\t\tcmd = fmt.Sprintf(\"echo hostName | nc -w 1 -u %s %d\", targetIP, targetPort)\n\t} else {\n\t\tipPort := net.JoinHostPort(targetIP, strconv.Itoa(targetPort))"
  },
  {
    "id" : "6caa5a89-770b-492a-aaa1-2a88e48ede3a",
    "prId" : 71468,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71468#pullrequestreview-182658950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52fd5fe1-fb6c-483c-828c-c8f46682679e",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "This looks different than https://github.com/kubernetes/kubernetes/pull/69525, why are we now defaulting `HostNetwork` to `true`?",
        "createdAt" : "2018-12-05T02:42:48Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "c2099fd6-d997-41e8-96b6-3f19a9d77fbc",
        "parentId" : "52fd5fe1-fb6c-483c-828c-c8f46682679e",
        "authorId" : "1f9ad685-e12a-43ff-92bd-94956f1cf580",
        "body" : "Will fix",
        "createdAt" : "2018-12-05T03:01:25Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "1f9ad685-e12a-43ff-92bd-94956f1cf580",
        "tags" : [
        ]
      },
      {
        "id" : "a5c133d7-31ec-44e0-af07-c654bfce36ea",
        "parentId" : "52fd5fe1-fb6c-483c-828c-c8f46682679e",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Indeed. The PR you are mentioning sets the ``HostNetwork`` to ``false`` for the tests in question, but consensus has not been reached in that regard. \r\n\r\nSo, this basically just maintains the default ``HostNetwork: true`` behaviour for the regular tests, while the Windows networking related tests will call NewCoreNetworkingTestConfig with ``hostNetwork = false``.",
        "createdAt" : "2018-12-07T11:46:41Z",
        "updatedAt" : "2019-02-18T12:51:33Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "00e2582c673442bd6416e3cb5ea1a9a103965631",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +70,74 @@// NewNetworkingTestConfig creates and sets up a new test config helper.\nfunc NewNetworkingTestConfig(f *Framework) *NetworkingTestConfig {\n\tconfig := &NetworkingTestConfig{f: f, Namespace: f.Namespace.Name, HostNetwork: true}\n\tBy(fmt.Sprintf(\"Performing setup for networking test in namespace %v\", config.Namespace))\n\tconfig.setup(getServiceSelector())"
  },
  {
    "id" : "ca542d09-b01b-4715-a29a-f31b8c73893f",
    "prId" : 69571,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69571#pullrequestreview-163743531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e388ec93-1bf8-43a2-b5ed-2baef1a4651c",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Do we no longer need this timeout?",
        "createdAt" : "2018-10-09T17:23:12Z",
        "updatedAt" : "2018-10-09T17:23:12Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "5da87339-03f4-4ba8-a8f1-6ee5b60684dc",
        "parentId" : "e388ec93-1bf8-43a2-b5ed-2baef1a4651c",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Hm, It already has a timeout. ``nc -w 1`` basically sets the timeout to 1 second. I don't think timeout was particularly useful in this case. I could increase the timeout to 2 seconds though.",
        "createdAt" : "2018-10-11T10:13:29Z",
        "updatedAt" : "2018-10-11T10:13:29Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cd4ebf3c3e7778efeb819c98e35846bd064fd6a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +293,297 @@\t\t// TODO: It would be enough to pass 1s+epsilon to timeout, but unfortunately\n\t\t// busybox timeout doesn't support non-integer values.\n\t\tcmd = fmt.Sprintf(\"echo 'hostName' | nc -w 1 -u %s %d\", targetIP, targetPort)\n\t} else {\n\t\tipPort := net.JoinHostPort(targetIP, strconv.Itoa(targetPort))"
  },
  {
    "id" : "d79ca531-7246-44bf-ba4c-bb2545a91406",
    "prId" : 54686,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54686#pullrequestreview-73042546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0535239-704f-4aa6-8adf-70f1ab1d94f0",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Humm, why shouldn't we return error here?",
        "createdAt" : "2017-10-31T02:39:02Z",
        "updatedAt" : "2017-10-31T02:39:44Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "44ca6e34-b87d-42d9-aa51-d6b35308b8de",
        "parentId" : "c0535239-704f-4aa6-8adf-70f1ab1d94f0",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Never mind, this seems correct :)",
        "createdAt" : "2017-10-31T02:47:24Z",
        "updatedAt" : "2017-10-31T02:47:24Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "521079380220cec4daafd348a940f2a88b07c483",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +266,270 @@\t\t}\n\t}\n\treturn eps, nil\n}\n"
  },
  {
    "id" : "46bbc61e-21e3-4e12-89e7-be3fda7d7384",
    "prId" : 53760,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53760#pullrequestreview-69755925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fd02ce2-9370-44e5-afed-0230adf8b7b3",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Could be great if we document what exactly `GetEndpointsFromContainer()`  is for. This use case seem to be tricky.",
        "createdAt" : "2017-10-16T18:48:49Z",
        "updatedAt" : "2017-10-17T03:18:42Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "2760b55b-5ec5-482f-aa61-6cd76cebd176",
        "parentId" : "0fd02ce2-9370-44e5-afed-0230adf8b7b3",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "It's fixed now. PTAL.",
        "createdAt" : "2017-10-17T03:08:50Z",
        "updatedAt" : "2017-10-17T03:18:42Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "67f4461173c6a85f0c77aff2cfccd90e50a1d082",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +263,267 @@\t\t\t}\n\t\t\t// Return immediately when we successfully fetch endpoints\n\t\t\tif len(eps) > 0 {\n\t\t\t\treturn eps, nil\n\t\t\t}"
  },
  {
    "id" : "3e7dfd2a-3cec-40b1-9c3b-ea940c159506",
    "prId" : 52035,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52035#pullrequestreview-61040754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "622ad97c-eb6c-46c0-b134-f26cafc36112",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Would it help if we also log status code here?",
        "createdAt" : "2017-09-06T20:28:04Z",
        "updatedAt" : "2017-09-06T20:29:47Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb50086b8ffb4289e085fce637a5cd01f8ef4296",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +691,695 @@\t\tfor _, code := range retriableErrCodes {\n\t\t\tif resp.StatusCode == code {\n\t\t\t\treturn false, nil\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "c5a1d9aa-9857-461d-9e5d-fcb643a93d7c",
    "prId" : 36918,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36918#pullrequestreview-8926325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f468533a-9980-49db-8846-1135e0aae1a9",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "doesn't Logf do formatting as part of the function?\n\nLogf(\"\"failed executing cmd %v in %v/%v: %v\", cmd, ...)\n",
        "createdAt" : "2016-11-16T22:35:20Z",
        "updatedAt" : "2016-11-16T22:48:51Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "5d2e6148-4676-422c-a62a-477047c820d3",
        "parentId" : "f468533a-9980-49db-8846-1135e0aae1a9",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "i'm saving it in msg to reuse in the failure message\n",
        "createdAt" : "2016-11-16T22:46:32Z",
        "updatedAt" : "2016-11-16T22:48:51Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "29a5cb7a9ca110bf4eec93528ada065dd90a41ae",
    "line" : null,
    "diffHunk" : "@@ -1,1 +281,285 @@\t\tif err != nil {\n\t\t\tmsg = fmt.Sprintf(\"failed executing cmd %v in %v/%v: %v\", cmd, config.Namespace, podName, err)\n\t\t\tLogf(msg)\n\t\t\treturn false, nil\n\t\t}"
  },
  {
    "id" : "49503fa5-d5cb-46a6-8eff-cc5714016e34",
    "prId" : 36918,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36918#pullrequestreview-8924243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2dab44d-2337-47a0-926f-c489759c652a",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "see above\n",
        "createdAt" : "2016-11-16T22:35:28Z",
        "updatedAt" : "2016-11-16T22:48:51Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "29a5cb7a9ca110bf4eec93528ada065dd90a41ae",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +286,290 @@\t\tif !strings.Contains(stdout, expected) {\n\t\t\tmsg = fmt.Sprintf(\"successfully executed %v in %v/%v, but output '%v' doesn't contain expected string '%v'\", cmd, config.Namespace, podName, stdout, expected)\n\t\t\tLogf(msg)\n\t\t\treturn false, nil\n\t\t}"
  },
  {
    "id" : "6678d57f-f50c-4ed3-a738-a927daa760b7",
    "prId" : 36208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36208#pullrequestreview-7175388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f82b601e-b76f-4004-926d-a2a0f162493a",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "`timeout` is not installed on OS X by default. I don't know how much we care. cc @roberthbailey who's the person that complains most about this kind of stuff:)\n",
        "createdAt" : "2016-11-04T10:31:10Z",
        "updatedAt" : "2016-11-04T10:31:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "024299780e21e3107abd2c56024b9fa4cd6247ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +224,228 @@\t\tcmd = fmt.Sprintf(\"echo 'hostName' | timeout -t 2 nc -w 1 -u %s %d\", targetIP, targetPort)\n\t} else {\n\t\tcmd = fmt.Sprintf(\"timeout -t 15 curl -q -s --connect-timeout 1 --max-time 10 http://%s:%d/hostName\", targetIP, targetPort)\n\t}\n"
  },
  {
    "id" : "43bf9c5a-537a-496e-9a7b-acbe9ae01b5a",
    "prId" : 36208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36208#pullrequestreview-7226981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f580fa73-baaf-4176-8fb7-9192f71724e2",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "This is code that runs inside a pod so we should have control over exactly what base image it runs on. \n",
        "createdAt" : "2016-11-04T15:38:06Z",
        "updatedAt" : "2016-11-04T15:38:06Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "b79ba8a6-5b2c-4379-aafa-475b2cbf0fdd",
        "parentId" : "f580fa73-baaf-4176-8fb7-9192f71724e2",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Right, I missed the fact that it's called remotely. Sorry for that.\n",
        "createdAt" : "2016-11-04T15:46:34Z",
        "updatedAt" : "2016-11-04T15:46:34Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "024299780e21e3107abd2c56024b9fa4cd6247ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +224,228 @@\t\tcmd = fmt.Sprintf(\"echo 'hostName' | timeout -t 2 nc -w 1 -u %s %d\", targetIP, targetPort)\n\t} else {\n\t\tcmd = fmt.Sprintf(\"timeout -t 15 curl -q -s --connect-timeout 1 --max-time 10 http://%s:%d/hostName\", targetIP, targetPort)\n\t}\n"
  }
]