[
  {
    "id" : "1e92c68b-a9c8-4436-8379-da89435fa752",
    "prId" : 59373,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59373#pullrequestreview-94195388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fa6c903-591f-4aed-be22-eb2aed779feb",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Can we split the parsing part out to make it easier to read\r\n\r\n```\r\nfunc parseFirewallPortRange(...) (*firewallPortRange, error) {\r\n  ...\r\n}\r\n\r\ntype firewallPortRange struct {\r\n  protocol string\r\n  // ports is [min, max], [x,x] represents a single port x\r\n  min, max int\r\n}\r\n```",
        "createdAt" : "2018-02-06T00:21:04Z",
        "updatedAt" : "2018-02-06T00:54:31Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "bd6ab1a1-7412-43c8-8054-8a16c03e24a5",
        "parentId" : "3fa6c903-591f-4aed-be22-eb2aed779feb",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "Sure",
        "createdAt" : "2018-02-06T00:22:45Z",
        "updatedAt" : "2018-02-06T00:54:31Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      },
      {
        "id" : "5404b49b-b699-4781-8b44-3b1955476329",
        "parentId" : "3fa6c903-591f-4aed-be22-eb2aed779feb",
        "authorId" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "body" : "Done\r\n",
        "createdAt" : "2018-02-06T00:51:27Z",
        "updatedAt" : "2018-02-06T00:54:31Z",
        "lastEditedBy" : "3e4fca9c-38d2-48b7-8f51-aa84ce73e592",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd462ceb94eec047266424462174f4b1527eb43c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +347,351 @@// Returns true if every requiredPort exists in the list of coverage rules.\nfunc isPortsSubset(requiredPorts, coverage []string) error {\n\tfor _, reqPort := range requiredPorts {\n\t\trRange, err := toPortRange(reqPort)\n\t\tif err != nil {"
  },
  {
    "id" : "0a6be4a3-8b60-481e-8dbf-d51caae0b68f",
    "prId" : 45524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45524#pullrequestreview-40419958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "923cbb65-981e-41f9-978b-17d6f738c500",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "is this duplicated code from the cloud provider?",
        "createdAt" : "2017-05-25T21:08:45Z",
        "updatedAt" : "2017-05-26T20:19:31Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "b433d682-9d8b-4d63-8e13-b9a0f245b0cd",
        "parentId" : "923cbb65-981e-41f9-978b-17d6f738c500",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "A similar function in the GCE cloud provider is gce.firewallObject(), but that bakes in too many cloud provider specific details and is sort of heavy.",
        "createdAt" : "2017-05-25T23:51:10Z",
        "updatedAt" : "2017-05-26T20:19:31Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "897da549bc37390e4847946da63da29dc9d1b4c2",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +78,82 @@\n// ConstructHealthCheckFirewallForLBService returns the expected GCE firewall rule for a loadbalancer type service\nfunc ConstructHealthCheckFirewallForLBService(clusterID string, svc *v1.Service, nodesTags []string, isNodesHealthCheck bool) *compute.Firewall {\n\tif svc.Spec.Type != v1.ServiceTypeLoadBalancer {\n\t\tFailf(\"can not construct firewall rule for non-loadbalancer type service\")"
  },
  {
    "id" : "0694d9c9-0393-48f6-a3c1-0f35f5c3cb2b",
    "prId" : 45524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45524#pullrequestreview-40419658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcafec4f-7e44-4c63-9149-daf94cabcf37",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "check that the return is notfound for !exist case?",
        "createdAt" : "2017-05-25T21:10:34Z",
        "updatedAt" : "2017-05-26T20:19:31Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "f6c25598-6431-4ea4-9632-61719ddfb454",
        "parentId" : "dcafec4f-7e44-4c63-9149-daf94cabcf37",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Good catch! Added a check.",
        "createdAt" : "2017-05-25T23:48:50Z",
        "updatedAt" : "2017-05-26T20:19:31Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "897da549bc37390e4847946da63da29dc9d1b4c2",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +367,371 @@\tcondition := func() (bool, error) {\n\t\tfw, err = gceCloud.GetFirewall(fwName)\n\t\tif err != nil && exist ||\n\t\t\terr == nil && !exist ||\n\t\t\terr != nil && !exist && !IsGoogleAPIHTTPErrorCode(err, http.StatusNotFound) {"
  }
]