[
  {
    "id" : "e46dc1b0-00a7-401b-915f-5455960b55a0",
    "prId" : 37999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37999#pullrequestreview-11426649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86229401-0045-480f-9365-36015074f9f1",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "if this test doesn't do anything meaningful, why do we have it?",
        "createdAt" : "2016-12-03T00:40:19Z",
        "updatedAt" : "2016-12-03T00:40:19Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a49fcbae-54e2-4a1c-b9ea-ecfe7107bba7",
        "parentId" : "86229401-0045-480f-9365-36015074f9f1",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "It is intended to do something meaningful - but was written in a way that didn't.  I could just delete the whole test, but ideally we would fix it to test the right thing.",
        "createdAt" : "2016-12-03T01:09:27Z",
        "updatedAt" : "2016-12-03T01:09:27Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "71cb6fa9-32d0-45e3-8225-7589d9b87385",
        "parentId" : "86229401-0045-480f-9365-36015074f9f1",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "FYI This test is initially introduced by #24180 in v1.2",
        "createdAt" : "2016-12-03T01:15:10Z",
        "updatedAt" : "2016-12-03T01:15:10Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "c32dbf26-05ca-4bb0-bb01-544e4bfe360f",
        "parentId" : "86229401-0045-480f-9365-36015074f9f1",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "These changes were already made on master, and should have been backported to 1.4 branch, but weren't.  This backports the changes to make the version skew test pass.",
        "createdAt" : "2016-12-05T17:23:32Z",
        "updatedAt" : "2016-12-05T17:23:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "39403d225ebf7dc045c5bc511f5af2507d73ab17",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +500,504 @@\t\t})\n\t\tIt(\"should reuse port when apply to an existing SVC\", func() {\n\t\t\t// This test doesn't do anything meaningful.  It was supposed to test that the nodeport\n\t\t\t// did not get reset by apply, but never setup a nodeport typed service, so the\n\t\t\t// nodeport was always 0.  Updated to get version tests to pass after a change in 1.5"
  },
  {
    "id" : "f3c470ce-40d5-4e06-aac2-cccf8bfcb923",
    "prId" : 36864,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36864#pullrequestreview-8952473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc9827ac-8c8b-41fd-9781-cc2ae77daca2",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "@dims  If flag [kubectl-path](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/test_context.go#L184) is not set, `framework.TestContext.KubectlPath` may be an empty string, right?\n",
        "createdAt" : "2016-11-17T02:44:03Z",
        "updatedAt" : "2016-11-17T02:44:03Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "938b03ce-90af-438f-8e5e-110f40adf716",
        "parentId" : "cc9827ac-8c8b-41fd-9781-cc2ae77daca2",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "I'm wrong.\nIt seems you default [kubectl-path](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/test_context.go#L184) to `kubectl`.\n",
        "createdAt" : "2016-11-17T02:46:48Z",
        "updatedAt" : "2016-11-17T02:46:48Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "1a4e2862-2c4e-480c-b81c-80fa4fe35fd4",
        "parentId" : "cc9827ac-8c8b-41fd-9781-cc2ae77daca2",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@ymqytw : then a lot more stuff would break - https://github.com/kubernetes/kubernetes/blob/a7b63e1a959b63f17657ef90414c690fc441d316/test/e2e/framework/util.go#L2001\n",
        "createdAt" : "2016-11-17T02:48:08Z",
        "updatedAt" : "2016-11-17T02:48:08Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e605398fcfd9959c2fb7dab2096932482e949cc4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +571,575 @@\t\t\tpodString := strings.Replace(string(podJson),\n\t\t\t\t\"$KUBECTL_PATH\",\n\t\t\t\tframework.TestContext.KubectlPath,\n\t\t\t\t1)\n"
  },
  {
    "id" : "257cba5f-13d5-4e8a-9577-b748bfac531b",
    "prId" : 35456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35456#pullrequestreview-5526599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61458089-00d1-4792-99eb-b0975c6a6fd8",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "fragment?\n",
        "createdAt" : "2016-10-24T19:48:35Z",
        "updatedAt" : "2016-10-24T19:49:49Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "4547aaf4-6a90-48d3-ab3e-48d6dd0d74dd",
        "parentId" : "61458089-00d1-4792-99eb-b0975c6a6fd8",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> fragment?\n\ndead comment.  Worth losing green on a blocking flake fix for?\n",
        "createdAt" : "2016-10-24T19:53:13Z",
        "updatedAt" : "2016-10-24T19:53:13Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "73796355-efdc-4452-8ede-2e755897b1f2",
        "parentId" : "61458089-00d1-4792-99eb-b0975c6a6fd8",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "No, we can deal with it later\n",
        "createdAt" : "2016-10-24T19:56:50Z",
        "updatedAt" : "2016-10-24T19:56:50Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "fde2fedfa6ba28537fa5be8a4fb7218daf013c0e",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +182,186 @@\t})\n\n\t// Customized Wait  / ForEach wrapper for this test.  These demonstrate the\n\n\tframework.KubeDescribe(\"Kubectl run ScheduledJob\", func() {"
  },
  {
    "id" : "7baf1b3c-6838-4667-990b-d42fcb440f1f",
    "prId" : 32484,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f77c3875-a54e-46cd-8c21-62ead3c39f98",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Did you make it per 5 minutes intentionally so that we don't need to worry about cascadingly deleting its jobs/pods? \n",
        "createdAt" : "2016-09-12T22:39:10Z",
        "updatedAt" : "2016-09-14T12:21:33Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "dcc05716-d125-4551-8758-346f662e643a",
        "parentId" : "f77c3875-a54e-46cd-8c21-62ead3c39f98",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yes. This test only verifies the SJ is correctly created. I don't want any jobs being created. It does not matter at this point, we already verify this in the SJ e2e suite.\n",
        "createdAt" : "2016-09-13T09:07:12Z",
        "updatedAt" : "2016-09-14T12:21:33Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "0f20db00-6a00-4221-bcef-92b0401a0533",
        "parentId" : "f77c3875-a54e-46cd-8c21-62ead3c39f98",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Sounds good \n",
        "createdAt" : "2016-09-13T21:23:46Z",
        "updatedAt" : "2016-09-14T12:21:33Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0b97b8ffa75939ed5515d27a2e77dfe4a91701a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1098,1102 @@\t\t\tframework.SkipIfMissingResource(f.ClientPool, ScheduledJobGroupVersionResource, f.Namespace.Name)\n\n\t\t\tschedule := \"*/5 * * * ?\"\n\t\t\tframework.RunKubectlOrDie(\"run\", sjName, \"--restart=OnFailure\", \"--generator=scheduledjob/v2alpha1\",\n\t\t\t\t\"--schedule=\"+schedule, \"--image=\"+busyboxImage, nsFlag)"
  },
  {
    "id" : "7740ed37-3ff5-4b4a-86d0-cc1455ab3edd",
    "prId" : 31987,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac3ba6db-a465-4515-b00a-fde962ce9403",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK I'm too dumb to see what changed here and why all these lines are copied. ? I guess this is a cherrypick so I have to take it verbatim though :(\n",
        "createdAt" : "2016-09-02T22:44:54Z",
        "updatedAt" : "2016-09-02T22:44:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "be22a1cb-f723-47bd-b697-68aa74ad4556",
        "parentId" : "ac3ba6db-a465-4515-b00a-fde962ce9403",
        "authorId" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "body" : "This might help https://github.com/kubernetes/kubernetes/pull/31642\n",
        "createdAt" : "2016-09-02T22:46:51Z",
        "updatedAt" : "2016-09-02T22:46:51Z",
        "lastEditedBy" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "tags" : [
        ]
      }
    ],
    "commit" : "920bc89b97a289ffba0f1e8ca92356a96ce2e321",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +503,507 @@\t\t\t\tforEachPod(func(pod api.Pod) {\n\t\t\t\t\toutput := framework.RunKubectlOrDie(\"describe\", \"pod\", pod.Name, nsFlag)\n\t\t\t\t\trequiredStrings := [][]string{\n\t\t\t\t\t\t{\"Name:\", \"redis-master-\"},\n\t\t\t\t\t\t{\"Namespace:\", ns},"
  },
  {
    "id" : "5ec91cf8-1ede-4806-a397-77c0ff0e64e9",
    "prId" : 31642,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ff5543a-d377-476b-aaea-a2ecb4a1c597",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'm not super familiar with this code.  If this doesn't require updates against in 1.5, then its ok with me.  Otherwise, I'm actually find with just removing the QoS class as a `requiredString` entirely.\n",
        "createdAt" : "2016-09-01T18:53:17Z",
        "updatedAt" : "2016-09-01T18:53:17Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "93aa2299-0411-40ef-ae65-dda1663ac0ad",
        "parentId" : "5ff5543a-d377-476b-aaea-a2ecb4a1c597",
        "authorId" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "body" : "So this just makes sure the kubectl version is greater than 1.4.0-alpha so it will still work for 1.5.0 as long as we dont change say \"QoS Class\" to \"QoS Fun times\" or something else \n",
        "createdAt" : "2016-09-01T19:09:43Z",
        "updatedAt" : "2016-09-01T19:09:43Z",
        "lastEditedBy" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "tags" : [
        ]
      },
      {
        "id" : "e4d9047b-2350-4811-b38a-403c7cf0824c",
        "parentId" : "5ff5543a-d377-476b-aaea-a2ecb4a1c597",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> So this just makes sure the kubectl version is greater than 1.4.0-alpha so it will still work for 1.5.0 as long as we dont change say \"QoS Class\" to \"QoS Fun times\" or something else\n\nalright. lgtm\n",
        "createdAt" : "2016-09-01T20:32:28Z",
        "updatedAt" : "2016-09-01T20:32:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ca6673e01e62457650c678dd7b894d2f09e0575",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +545,549 @@\t\t\t// Pod\n\t\t\t// this is terrible but we want 1.4.0 alpha to count as well\n\t\t\tclassVersion, err := framework.KubectlVersionGTE(version.MustParse(\"v1.4.0-alpha\"))\n\t\t\tExpect(err).NotTo(HaveOccurred())\n\t\t\tif classVersion {"
  },
  {
    "id" : "0848db5c-ff3d-4da0-b2f9-7734c60f95c2",
    "prId" : 27461,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd1716cd-05f9-498e-8cb7-a2beb0421a22",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "skipping a `[Conformance]` test implies rktnetes is no longer \"a kubernetes\", is this a poorly written or mis-tagged test?\n",
        "createdAt" : "2016-06-15T23:02:56Z",
        "updatedAt" : "2016-06-15T23:02:56Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "9fd8f894-34b5-4b1e-ac25-5f4f66b2546a",
        "parentId" : "cd1716cd-05f9-498e-8cb7-a2beb0421a22",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I'm not sure; is attach required for conformance? The test that only tests 'attach' is not tagged as conformance, but this one incidentally tests attach, and that's the only part of it which rkt can't do.\n\nI'd prefer if `attach` were not part of Conformance (related issue: #23335) and this test were either not conformance or were reworked to not use attach, but if attach is required for conformance, rkt isn't and hasn't conformed.\n",
        "createdAt" : "2016-06-15T23:15:48Z",
        "updatedAt" : "2016-06-15T23:15:48Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e50a821aa80f143b7379503a807af83f9b99d865",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1047,1051 @@\t\tIt(\"should create a job from an image, then delete the job [Conformance]\", func() {\n\t\t\t// The rkt runtime doesn't support attach, see #23335\n\t\t\tframework.SkipIfContainerRuntimeIs(\"rkt\")\n\t\t\tframework.SkipUnlessServerVersionGTE(jobsVersion, c)\n"
  },
  {
    "id" : "d1fb3f0a-d225-4f0e-b6ae-619409da9f7c",
    "prId" : 25125,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2969bab2-4eb8-4a62-a02a-155272090697",
        "parentId" : null,
        "authorId" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "body" : "this is a revert to master\n",
        "createdAt" : "2016-05-24T21:08:11Z",
        "updatedAt" : "2016-05-25T22:08:11Z",
        "lastEditedBy" : "815980f5-2f9b-482a-89ad-0fc8f02a9994",
        "tags" : [
        ]
      }
    ],
    "commit" : "a092fd2dd4091b735cc2389015ce4bef951abfab",
    "line" : null,
    "diffHunk" : "@@ -1,1 +44,48 @@\t\"k8s.io/kubernetes/pkg/api\"\n\t\"k8s.io/kubernetes/pkg/api/annotations\"\n\tapierrs \"k8s.io/kubernetes/pkg/api/errors\"\n\t\"k8s.io/kubernetes/pkg/api/unversioned\"\n\tclient \"k8s.io/kubernetes/pkg/client/unversioned\""
  },
  {
    "id" : "023f3479-151b-42f5-81f9-6d541ab1004e",
    "prId" : 24806,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf3db3b0-7b27-4219-8249-873cab569997",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "even with a grace-period of 0 it takes time to complete, the operation is non-blocking. \n",
        "createdAt" : "2016-04-26T16:48:31Z",
        "updatedAt" : "2016-05-10T18:17:24Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "53f7da95-cef9-4c27-92d7-f717bc2dbfeb",
        "parentId" : "cf3db3b0-7b27-4219-8249-873cab569997",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "true, this isnt adding a flake though - its just implementing stdin with the identical functionality that already exists in `Cleanup`.  \n\nbut yeah this could be the cause of  a flake and we should dive into it\n\nive consolidated the code a little better so `Cleanup` and `AssertCleanup` can be cohesive and thus the flake will be consolidated into `AssertCleanup` for the future\n",
        "createdAt" : "2016-04-26T18:17:46Z",
        "updatedAt" : "2016-05-10T18:17:24Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "db499e99-5eff-4f59-b6b7-a6c7160254e7",
        "parentId" : "cf3db3b0-7b27-4219-8249-873cab569997",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "much better. \n",
        "createdAt" : "2016-04-26T19:02:38Z",
        "updatedAt" : "2016-05-10T18:17:24Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "801c968fff7382acb167d9734b64bb66c9b094f3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +126,130 @@\t// support backward compatibility : file paths or raw json - since we are removing file path\n\t// dependencies from this test.\n\tframework.RunKubectlOrDieInput(fileContents, \"delete\", \"--grace-period=0\", \"-f\", \"-\", nsArg)\n\tframework.AssertCleanup(ns, selectors...)\n}"
  },
  {
    "id" : "7e43ad51-3bd0-4a95-8ce4-4a721c7bf194",
    "prId" : 24512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5099109-fffa-4672-9ce9-f58cbd6d2b3e",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "It seems like this should be in a defer block so that it always gets called. \n",
        "createdAt" : "2016-05-06T21:46:25Z",
        "updatedAt" : "2016-05-06T21:46:25Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "4c8b0794-668f-47bc-a36f-375009a60714",
        "parentId" : "c5099109-fffa-4672-9ce9-f58cbd6d2b3e",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I think the framework will clean up the namespace anyway. \n",
        "createdAt" : "2016-05-09T22:04:31Z",
        "updatedAt" : "2016-05-09T22:04:31Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "1993bf901ae950a46bb7bfabb435db5d4df21064",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +456,460 @@\t\t\t}\n\t\t\t// Clean up the goproxyPod\n\t\t\tframework.Cleanup(goproxyPodPath, ns, goproxyPodSelector)\n\t\t})\n"
  },
  {
    "id" : "4ec203c3-5848-4793-82e3-05bfe79d1c34",
    "prId" : 19410,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ae5a6c9-0618-4c3f-b08f-588659344965",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "What about `util.ForeverTestTimeout`?\n",
        "createdAt" : "2016-01-08T16:25:29Z",
        "updatedAt" : "2016-01-14T19:29:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0cf7b551-b6a1-4a95-9baa-56f22d575fd6",
        "parentId" : "2ae5a6c9-0618-4c3f-b08f-588659344965",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "was concerned that foreverTestTimeout might be too short. and there are other timeouts in this file as well, so this seemed consistent\n",
        "createdAt" : "2016-01-08T16:55:24Z",
        "updatedAt" : "2016-01-14T19:29:58Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc92fd6a02a37de4a7e348a898e2acc91c2046e6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +71,75 @@\tnginxDefaultOutput       = \"Welcome to nginx!\"\n\tsimplePodPort            = 80\n\trunJobTimeout            = 5 * time.Minute\n)\n"
  },
  {
    "id" : "e1525d44-96c2-46c5-8e1d-43d41dcbb89f",
    "prId" : 16676,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91c24f24-32d5-4365-a60d-37ab8859dbd1",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@ashcrow @ncdc \n",
        "createdAt" : "2015-11-02T22:54:02Z",
        "updatedAt" : "2015-11-02T22:54:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "89872777b8c455fb0a550b7c5652869828a3ffb9",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1202,1206 @@}\n\nvar binPrefixes = []string{\n\t\"_output/dockerized/bin\",\n\t\"_output/local/bin\","
  },
  {
    "id" : "bf9514c7-3675-44f8-9e8e-dda18196bcea",
    "prId" : 16676,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f52af0d3-898b-4923-9d4f-b5046aafd9af",
        "parentId" : null,
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "nit: It would be nice to log if a version was chosen because of a later build. I could see some confusion as to why one binary was chosen over another until reading the code.\n",
        "createdAt" : "2015-11-03T14:38:10Z",
        "updatedAt" : "2015-11-03T14:38:10Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      }
    ],
    "commit" : "89872777b8c455fb0a550b7c5652869828a3ffb9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1221,1225 @@\t\t\tcontinue\n\t\t}\n\t\tif fi.ModTime().After(binTime) {\n\t\t\tbinPath = tryPath\n\t\t\tbinTime = fi.ModTime()"
  },
  {
    "id" : "21b34de6-242a-444b-b390-0e1338d27b09",
    "prId" : 13322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92781acb-40d6-4560-bf65-476e4946f4ca",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "+1 for tests for this scenario\n",
        "createdAt" : "2015-08-28T20:01:34Z",
        "updatedAt" : "2015-09-04T14:41:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3538655e-148e-4b14-9bfe-50e8991e18b8",
        "parentId" : "92781acb-40d6-4560-bf65-476e4946f4ca",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "actually, it would be easy to add a `withStdin(io.Reader)` helper so we could also test an interactive exec with a  stdin that sends \"echo hello\\nexit\\n\", then blocks\n",
        "createdAt" : "2015-08-28T20:48:45Z",
        "updatedAt" : "2015-09-04T14:41:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bd2422e9-edbb-4a12-87df-b82e49590afa",
        "parentId" : "92781acb-40d6-4560-bf65-476e4946f4ca",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Good idea. I'll definitely want to add that. Once I figure out why interactive is broken...\n",
        "createdAt" : "2015-08-28T20:50:48Z",
        "updatedAt" : "2015-09-04T14:41:02Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "13855cbb-b80c-40e8-bbe0-55d230a8580a",
        "parentId" : "92781acb-40d6-4560-bf65-476e4946f4ca",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Blocks via `select {}` or something else?\n",
        "createdAt" : "2015-08-28T20:51:46Z",
        "updatedAt" : "2015-09-04T14:41:02Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "18b02ca1-56bb-44cc-821e-e1dad7a89c97",
        "parentId" : "92781acb-40d6-4560-bf65-476e4946f4ca",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Yeah, something like https://gist.github.com/liggitt/29077b2835004caab5c3\n",
        "createdAt" : "2015-08-28T21:06:56Z",
        "updatedAt" : "2015-09-04T14:41:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83786979c6fa000aa8d3e35914acdd32643b0ef",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +167,171 @@\t\t\texecOutput = newKubectlCommand(\"exec\", fmt.Sprintf(\"--namespace=%v\", ns), \"-i\", simplePodName, \"cat\").\n\t\t\t\twithStdinData(\"abcd1234\").\n\t\t\t\texec()\n\t\t\tif e, a := \"abcd1234\", execOutput; e != a {\n\t\t\t\tFailf(\"Unexpected kubectl exec output. Wanted %q, got %q\", e, a)"
  },
  {
    "id" : "cc192d3c-21f0-44c2-8207-e53e08f6bdb6",
    "prId" : 11142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec6e3986-898e-4e99-9065-d4b52e7b4f89",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Add a call to `cleanup` in defer, so we aren't leaking resources. Same for `Kubectl patch` below.\n",
        "createdAt" : "2015-07-13T17:43:39Z",
        "updatedAt" : "2015-07-13T17:43:39Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "10bfe4b7-7166-4f8d-8605-d771281875c4",
        "parentId" : "ec6e3986-898e-4e99-9065-d4b52e7b4f89",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "The namespace is deleted after each test:\nhttps://github.com/mwielgus/kubernetes/blob/kubectl_e2e_patch/test/e2e/kubectl.go#L72\n",
        "createdAt" : "2015-07-13T18:02:34Z",
        "updatedAt" : "2015-07-13T18:02:34Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "87801b1f-8e82-4220-a82b-7c5aa416489c",
        "parentId" : "ec6e3986-898e-4e99-9065-d4b52e7b4f89",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "That works then.\n",
        "createdAt" : "2015-07-13T18:21:54Z",
        "updatedAt" : "2015-07-13T18:21:54Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8d30c1b1e196addf1ccbee522fc3afaffd04df6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +247,251 @@\t\t\tnsFlag := fmt.Sprintf(\"--namespace=%v\", ns)\n\t\t\tBy(\"creating Redis RC\")\n\t\t\trunKubectl(\"create\", \"-f\", controllerJson, nsFlag)\n\t\t\tBy(\"checking logs\")\n\t\t\tforEachPod(c, ns, \"app\", \"redis\", func(pod api.Pod) {"
  },
  {
    "id" : "931f9c23-e09f-414e-971f-b80ad284a46e",
    "prId" : 11006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e2abe49-df32-4a28-b033-1a87a109ee72",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Sorry, it seems I've lead you astray.  This doesn't do what you want because at this point, rcName and nsFlag are unassigned, so this is effectively scheduling a call to `kubectl stop rc '' ''`.\n\nPlease disregard my earlier comment, apparently even simple string initialization needs to be in a BeforeEach. Ginkgo has weird behavior when you try to initialize variables inside of a `Describe`.\n",
        "createdAt" : "2015-07-10T21:41:08Z",
        "updatedAt" : "2015-07-24T18:23:38Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "565a13e8db0a9e8d5571ddedb217a312f2e6b503",
    "line" : null,
    "diffHunk" : "@@ -1,1 +494,498 @@\n\t\tAfterEach(func() {\n\t\t\trunKubectl(\"stop\", \"rc\", rcName, nsFlag)\n\t\t})\n"
  },
  {
    "id" : "79ec233b-370c-420c-b2f2-b84eedb161e4",
    "prId" : 11006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98f93214-0714-4805-a556-e33a36522de7",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "This test always fails here in Jenkins, but not on my machine. \n`Failed creating 1 pod with expected image nginx. Number of pods = 0`\n\nSo I tried to debug by adding this kubectl command\n`get pods -L run --namespace=e2e-tests-kubectl-eu42p`\n\n```\nINFO: \nNAME                      READY     STATUS    RESTARTS   AGE       RUN\ne2e-test-nginx-rc-wgnvd   0/1       Pending   0          1s        e2e-test-nginx-rc\n```\n\nAnd looks like the pod is actually there. Can't figure out why this test fails... is it because the pod status is `Pending`? (On my machine it shows `Running`)\n",
        "createdAt" : "2015-07-11T01:00:04Z",
        "updatedAt" : "2015-07-24T18:23:38Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "2b4fc827-2579-4df6-b7d6-d99f51dbafd2",
        "parentId" : "98f93214-0714-4805-a556-e33a36522de7",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "It could be a timing issue. I suggest using [waitForRCPodsRunning](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/test/e2e/util.go#L1250), instead of querying directly.\n",
        "createdAt" : "2015-07-13T16:58:09Z",
        "updatedAt" : "2015-07-24T18:23:38Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "565a13e8db0a9e8d5571ddedb217a312f2e6b503",
    "line" : null,
    "diffHunk" : "@@ -1,1 +521,525 @@\t\t\tif pods == nil || len(pods) != 1 || len(pods[0].Spec.Containers) != 1 || pods[0].Spec.Containers[0].Image != image {\n\t\t\t\trunKubectl(\"get\", \"pods\", \"-L\", \"run\", nsFlag)\n\t\t\t\tFailf(\"Failed creating 1 pod with expected image %s. Number of pods = %v\", image, len(pods))\n\t\t\t}\n\t\t})"
  },
  {
    "id" : "d510e69a-52eb-46d8-8bc6-08f8bce1efc4",
    "prId" : 11006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f1ab5bd-48ce-400c-9338-cfdbbcb84184",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is it guaranteed that the rc should already exist by this point? or should there be a retry (maybe using `waitForReplicationController`?\n",
        "createdAt" : "2015-07-23T23:07:19Z",
        "updatedAt" : "2015-07-24T18:23:38Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "00df762b-7bfd-4c3f-977a-efeb12dbe324",
        "parentId" : "6f1ab5bd-48ce-400c-9338-cfdbbcb84184",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "The rc itself exists as soon as the command finishes. The pods it manages take a little longer to come up, so that check is done in a wait.\n",
        "createdAt" : "2015-07-23T23:12:01Z",
        "updatedAt" : "2015-07-24T18:23:38Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "565a13e8db0a9e8d5571ddedb217a312f2e6b503",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +503,507 @@\t\t\trunKubectl(\"run\", rcName, \"--image=\"+image, nsFlag)\n\t\t\tBy(\"verifying the rc \" + rcName + \" was created\")\n\t\t\trc, err := c.ReplicationControllers(ns).Get(rcName)\n\t\t\tif err != nil {\n\t\t\t\tFailf(\"Failed getting rc %s: %v\", rcName, err)"
  },
  {
    "id" : "f9e3a8c9-cb1e-4b68-a9e5-58a48f66fc7c",
    "prId" : 10608,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98d06849-371a-43c6-bff0-24a7c0b37b26",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Nit: I would move this above under the existing `Describe()` for proxy server, since it is testing a different option of the same command.\n",
        "createdAt" : "2015-08-05T16:55:22Z",
        "updatedAt" : "2015-08-06T10:06:26Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd4f0b43ef64166e06cd1fe24740a22879fd6c56",
    "line" : null,
    "diffHunk" : "@@ -1,1 +548,552 @@\t\t})\n\n\t\tIt(\"should support --unix-socket=/path\", func() {\n\t\t\tBy(\"Starting the proxy\")\n\t\t\ttmpdir, err := ioutil.TempDir(\"\", \"kubectl-proxy-unix\")"
  },
  {
    "id" : "340a74ad-a256-4b8a-944a-8c0f1819255a",
    "prId" : 7029,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93a0e5d0-6c23-46a4-a831-0385cf5da3db",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "nit: use lowercase for \"Skipping\" perhaps?\n",
        "createdAt" : "2015-04-19T05:04:15Z",
        "updatedAt" : "2015-04-20T22:06:59Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a34b3575-ebfe-4f70-8e28-4b161aba2d9f",
        "parentId" : "93a0e5d0-6c23-46a4-a831-0385cf5da3db",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "also, does this actually skip anything? It seems like all this does is print out the By line, but doesn't actually have any logic to really skip (unless that's hidden somewhere else?)\n",
        "createdAt" : "2015-04-19T05:05:36Z",
        "updatedAt" : "2015-04-20T22:06:59Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "af230582-f7b0-4074-9faf-e457caea026d",
        "parentId" : "93a0e5d0-6c23-46a4-a831-0385cf5da3db",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Lowercase is used for error strings, but not log statements. See https://github.com/golang/go/wiki/CodeReviewComments#error-strings which says \"This does not apply to logging, which is implicitly line-oriented and not combined inside other messages.\" and By() statements are logging statements. \n",
        "createdAt" : "2015-04-19T14:17:09Z",
        "updatedAt" : "2015-04-20T22:06:59Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "291f9eb7-8feb-4070-94f7-f1662a8ae9d1",
        "parentId" : "93a0e5d0-6c23-46a4-a831-0385cf5da3db",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Added a return here. \n",
        "createdAt" : "2015-04-19T14:20:57Z",
        "updatedAt" : "2015-04-20T22:06:59Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "feb7abcada36ce368f75f35dd6bdfc5c71137b4c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +100,104 @@\t\tIt(\"should create and stop a working application\", func() {\n\t\t\tif !providerIs(\"gce\", \"gke\") {\n\t\t\t\tBy(fmt.Sprintf(\"Skipping guestbook, uses createExternalLoadBalancer, a (gce|gke) feature\"))\n\t\t\t\treturn\n\t\t\t}"
  },
  {
    "id" : "55344795-cd56-4997-ab1d-edf897eed589",
    "prId" : 5595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37e600c6-f489-438e-822a-e1058c0df863",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "I don't think we want as long a timeout here and below as we use for the guestbook service to start up. Can we use 2 separate timeouts?\n- guestbookStartupTimeout = 10min when initially waiting for the guestbook components to schedule and the frontend to serve traffic\n- guestbookResponseTimeout = ~60s when waiting for responses from a running guestbook service.\n",
        "createdAt" : "2015-03-18T18:31:34Z",
        "updatedAt" : "2015-03-18T18:47:30Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "17e4be2b-a252-413b-9cb1-b9c0737d9be3",
        "parentId" : "37e600c6-f489-438e-822a-e1058c0df863",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "good idea\n",
        "createdAt" : "2015-03-18T18:42:50Z",
        "updatedAt" : "2015-03-18T18:47:30Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "04ea0a8a82f23622dd20a766adb4d68106724e61",
    "line" : null,
    "diffHunk" : "@@ -1,1 +120,124 @@\tLogf(\"Trying to add a new entry to the guestbook.\")\n\tif !waitForGuestbookResponse(c, \"set\", \"TestEntry\", `{\"message\": \"Updated\"}`, guestbookResponseTimeout) {\n\t\tFailf(\"Cannot added new entry in %v seconds.\", guestbookResponseTimeout.Seconds())\n\t}\n"
  },
  {
    "id" : "d4ef3ab8-0ac1-4a45-9ddd-b0789c136ca5",
    "prId" : 4963,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33feb905-523f-425f-9a13-a50bc674fee0",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Move the log line into runKubectl, since this only creates the command.\n",
        "createdAt" : "2015-03-02T23:03:33Z",
        "updatedAt" : "2015-03-02T23:03:33Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "818ffa3c-5d07-41e6-9308-65c8bbc7038e",
        "parentId" : "33feb905-523f-425f-9a13-a50bc674fee0",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Then I'll need to duplicate it in BeforeEach as well (since that also runs kubectl). I put it here to try and avoid the code duplication. \n",
        "createdAt" : "2015-03-02T23:13:46Z",
        "updatedAt" : "2015-03-02T23:13:46Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "6a924dc7-6dde-4e60-b765-ec55dbdc34ee",
        "parentId" : "33feb905-523f-425f-9a13-a50bc674fee0",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Fair enough. It's also just a Logf, so I don't have strong feelings.\n",
        "createdAt" : "2015-03-02T23:15:45Z",
        "updatedAt" : "2015-03-02T23:15:45Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "5799dd5f7d448911e400a7dd32d5fe4ed94b15f9",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +222,226 @@\t}\n\tcmd := exec.Command(\"kubectl\", kubectlArgs...)\n\tLogf(\"Running '%s %s'\", cmd.Path, strings.Join(cmd.Args, \" \"))\n\treturn cmd\n}"
  },
  {
    "id" : "3d55be48-1b20-4b7b-8c05-f87fe9cb024f",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35d959ba-c6d2-4ac0-90a6-1331c056f80d",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Huh. I think that may be a new one.\n",
        "createdAt" : "2015-02-20T02:02:35Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "446ee6ab-4a33-4f29-93f1-3a827656f9a5",
        "parentId" : "35d959ba-c6d2-4ac0-90a6-1331c056f80d",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "... and yet the most readable so far.\n",
        "createdAt" : "2015-02-20T02:02:55Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "d0dac8a2-eec2-472e-a137-d61bce35a916",
        "parentId" : "35d959ba-c6d2-4ac0-90a6-1331c056f80d",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "The other pattern I saw was a naive counter, but that doesn't include time spent in calls. Some of these calls are a bit longer running (e.g. rollingupdate), so this seemed better.\n",
        "createdAt" : "2015-02-20T18:13:06Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "b389b360f8c4cc2e49ef5a608dc215d03f8712d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +110,114 @@\n\tBy(fmt.Sprintf(\"waiting for all containers in %s pods to come up.\", updateDemoSelector))\n\tfor start := time.Now(); time.Since(start) < timeout; time.Sleep(5 * time.Second) {\n\t\tgetPodsOutput := runKubectl(\"get\", \"pods\", \"-o\", \"template\", getPodsTemplate, \"-l\", updateDemoSelector)\n\t\tpods := strings.Fields(getPodsOutput)"
  },
  {
    "id" : "ac4a3d55-e9dc-4430-9011-cbea02f01a41",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "152f9f96-a773-4943-a4d2-9ec7b7b9585c",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Please add a TODO here to use the kubectl binary instead of the shell wrapper. \n",
        "createdAt" : "2015-02-20T06:47:08Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "0c07bb66-7014-4e0b-a901-95835ff5ecc0",
        "parentId" : "152f9f96-a773-4943-a4d2-9ec7b7b9585c",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Done.\n",
        "createdAt" : "2015-02-20T18:19:37Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "b389b360f8c4cc2e49ef5a608dc215d03f8712d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +175,179 @@func runKubectl(args ...string) string {\n\t// TODO: use kubectl binary directly instead of shell wrapper\n\tpath := filepath.Join(root, \"cluster/kubectl.sh\")\n\tcmdStr := path + \" \" + strings.Join(args, \" \")\n\tLogf(\"Running '%v'\", cmdStr)"
  },
  {
    "id" : "abb42ae6-abdb-4b94-bcd9-b357de199d42",
    "prId" : 4637,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06263876-d4f7-4d62-8684-048392cbabdd",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "The ginkgo style seems to be to define a bunch of vars that are used across tests in a block at the top of the describe function. Once you move this back into the Describe function above, you should extract constants out into a block at the top:\n\nvar (\n  updateDemoRoot = ...\n  nautilusPath = ...\n  kittenPath = ...\n)\n",
        "createdAt" : "2015-02-20T06:53:53Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "2db02632-1ebe-4595-9b9d-c950fbfc8cd7",
        "parentId" : "06263876-d4f7-4d62-8684-048392cbabdd",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Done.\n",
        "createdAt" : "2015-02-20T18:15:18Z",
        "updatedAt" : "2015-02-20T21:20:15Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "b389b360f8c4cc2e49ef5a608dc215d03f8712d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +40,44 @@var _ = Describe(\"kubectl\", func() {\n\n\tupdateDemoRoot := filepath.Join(root, \"examples/update-demo\")\n\tnautilusPath := filepath.Join(updateDemoRoot, \"nautilus-rc.yaml\")\n\tkittenPath := filepath.Join(updateDemoRoot, \"kitten-rc.yaml\")"
  }
]