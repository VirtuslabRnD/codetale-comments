[
  {
    "id" : "02a1d126-702a-410f-a9bb-c0cce4636215",
    "prId" : 102591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102591#pullrequestreview-677214081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "321ace78-d50a-44ab-9380-ee01711a000c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@xing-yang can you follow up on scale-testing and re-enabling the health monitor controller sidecar? My understanding is that only the node agent was redesigned due to scalability issues.",
        "createdAt" : "2021-06-04T15:35:45Z",
        "updatedAt" : "2021-06-04T15:35:46Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8a6baa37-d970-43e1-a38a-56025a88f83b",
        "parentId" : "321ace78-d50a-44ab-9380-ee01711a000c",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "See https://github.com/kubernetes/kubernetes/pull/102627 - that should go into today's job run.\r\n",
        "createdAt" : "2021-06-07T09:56:57Z",
        "updatedAt" : "2021-06-07T09:56:57Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c26c423b1ca8ef23f3db34302f89bf6a0c4c4550",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +243,247 @@\n\t\t// Remove csi-external-health-monitor-agent and\n\t\t// csi-external-health-monitor-controller\n\t\t// containers. They are not needed for any of the\n\t\t// tests and may be causing too much overhead when"
  },
  {
    "id" : "e5f525d8-3a5b-4c63-892b-861b07f00c43",
    "prId" : 100637,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100637#pullrequestreview-641432577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19828430-973c-4936-ac99-4657c133969a",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Was this actually the cause? or was it https://github.com/kubernetes-csi/csi-driver-host-path/pull/210#discussion_r605592438?\r\n\r\nIf we're creating so many sidecars/controllers or they're putting unnecessary load on the system, that's also a problem that we need to investigate (separately).",
        "createdAt" : "2021-04-21T18:22:32Z",
        "updatedAt" : "2021-04-21T18:32:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "347ad1d7-884a-4042-9c33-a449d1663270",
        "parentId" : "19828430-973c-4936-ac99-4657c133969a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "To be honest, I don't remember. Let's merge this as-is and then try to enable it again to see whether it makes things worse.\r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/101336",
        "createdAt" : "2021-04-21T19:04:17Z",
        "updatedAt" : "2021-04-21T19:04:17Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "c794b5c442b18b078b287bcbb25bb18b9eb439cd",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +247,251 @@\t\t}\n\n\t\t// Remove csi-external-health-monitor-agent and\n\t\t// csi-external-health-monitor-controller\n\t\t// containers. They are not needed for any of the"
  },
  {
    "id" : "4bc0e066-93c1-4e04-8f4b-d4d0f77ff1d8",
    "prId" : 98555,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98555#pullrequestreview-589937302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Unrelated side note, it seems like all drivers in this file have basically copy pasted the cleanup funcs. We could probably clean this up with a common function? Can you open a cleanup issue and we can find someone to work on it?",
        "createdAt" : "2021-02-08T20:06:40Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "ac610ef6-45af-45a9-adee-aeb1f689db2a",
        "parentId" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "I can do it, doesn't seem too much work :)",
        "createdAt" : "2021-02-08T20:56:13Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "2fa77662-9776-4469-ba6d-af972af1cadf",
        "parentId" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "The mock driver does an extra step of deleting a configmap. Would creating a single function and adding a way to to hook in this logic be too much complexity?",
        "createdAt" : "2021-02-09T21:19:31Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "3cc188ff-dafb-45c2-9d6b-2431e701326f",
        "parentId" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Would the configmap cleanup be covered by the namespace cleanup?",
        "createdAt" : "2021-02-09T22:17:09Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "91466202-ec80-4b8f-8d8d-2a3ca8a594c0",
        "parentId" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "It should. This logic also existed before the namespace cleanup was added, so it might've been a mistake in keeping it.\r\n\r\nI'll do it as a separate PR tho in case something breaks",
        "createdAt" : "2021-02-10T01:05:05Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "9fd16838-943a-47be-a692-7f831f40461d",
        "parentId" : "8f2d7880-8744-45d8-936d-9f5a4ac4e011",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Created a tracking bug here just in case, but I'm hoping to get to it soon after this PR merges: https://github.com/kubernetes/kubernetes/issues/99054",
        "createdAt" : "2021-02-13T03:02:57Z",
        "updatedAt" : "2021-02-16T21:00:44Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b3f74dafb7b25955f07fd99abe98592d366d9f0",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +626,630 @@\t// concurrently called from defer (or AfterEach) and AfterSuite action hooks.\n\tcleanupFunc := func() {\n\t\tginkgo.By(fmt.Sprintf(\"deleting the test namespace: %s\", testns))\n\t\t// Delete the primary namespace but it's okay to fail here because this namespace will\n\t\t// also be deleted by framework.Aftereach hook"
  },
  {
    "id" : "bd6f1104-a37d-4704-bc79-10f0b8267e10",
    "prId" : 97069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97069#pullrequestreview-600830387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b33f25bf-687b-41da-a571-33a0d66bc001",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I still see some tests run with not embedded CSI drivers, is there plan to move them towards it? In such case a TODO comment to store intercepted calls above and returning them here would save us some ugly JSON parsing.\r\n",
        "createdAt" : "2021-03-01T12:18:07Z",
        "updatedAt" : "2021-03-01T18:23:55Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "6af448d9-1057-4ef0-9f2f-68c5303e33c6",
        "parentId" : "b33f25bf-687b-41da-a571-33a0d66bc001",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Not for now. In some earlier revision of the PR I ran all tests with embedded mock driver and just captured calls directly in memory. But then @msau42 pointed out that tests that are meant to become part of conformance can't depend on the port forwarding API in Kubernetes because that itself currently isn't required for conformance.\r\n\r\nMy plan for now is to work a bit more with this new approach and get it exercised regularly as part of E2E testing to be confident with it.\r\n\r\nPerhaps I should simply submit the existing port forwarding tests for inclusion in conformance testing.... I asked in https://kubernetes.slack.com/archives/C78F00H99/p1606322090151300 why it wasn't included but didn't get much feedback.\r\n\r\n\r\n",
        "createdAt" : "2021-03-01T15:06:13Z",
        "updatedAt" : "2021-03-01T18:23:55Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ef648d9360afafa847633149032e0ed4e29a556",
    "line" : 429,
    "diffHunk" : "@@ -1,1 +644,648 @@}\n\nfunc (m *mockCSIDriver) GetCalls() ([]MockCSICall, error) {\n\tif m.embedded {\n\t\treturn m.calls.Get(), nil"
  },
  {
    "id" : "4b28afc0-458a-4c35-8b9a-a97bf5f04a21",
    "prId" : 95971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95971#pullrequestreview-523839525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should we increase the number of pods here?\r\n\r\nMaybe we need the snapshot test to use its own set of options, so it won't impact the volume stress test settings",
        "createdAt" : "2020-11-04T23:30:54Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a0672d6c-2f10-416a-826d-9489185f0bfc",
        "parentId" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "I wanted to rename this to `VolumeStressTestOptions` but it seems like we'd need to mark this as deprecated if users depend on this in their testdriver.yaml files. Maybe we can add some custom serialization logic and log a deprecation warning? What is the timeline for fully deprecating something like this?",
        "createdAt" : "2020-11-05T00:03:53Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      },
      {
        "id" : "f450170e-e61d-451d-83ca-0c18e11680cf",
        "parentId" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "Maybe just mark this with a TODO and a tracking issue for the time being, adding a custom decoder seems more involved.",
        "createdAt" : "2020-11-05T00:18:57Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      },
      {
        "id" : "70c37d66-5d57-46fb-8487-b1eb7667d40a",
        "parentId" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "How about we create a new VolumeSnapshotStressTestOptions?",
        "createdAt" : "2020-11-05T00:32:58Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1e8196b1-5078-4161-8396-db5cbbc891b5",
        "parentId" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "Filed https://github.com/kubernetes/kubernetes/issues/96241 for this work.",
        "createdAt" : "2020-11-05T00:47:24Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      },
      {
        "id" : "61ac38d9-2cfc-4c59-8b57-58dad5b4609c",
        "parentId" : "eb9cec7b-7707-41a2-b54b-d59edb38879c",
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "Agreed, added. I can rename it to that to be even more specific.",
        "createdAt" : "2020-11-05T00:48:29Z",
        "updatedAt" : "2020-11-05T16:59:34Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb6bc4f8b0eb6805ca9b766722a176a281bd54d0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +497,501 @@\t\t\tTopologyKeys:        []string{GCEPDCSIZoneTopologyKey},\n\t\t\tStressTestOptions: &testsuites.StressTestOptions{\n\t\t\t\tNumPods:     10,\n\t\t\t\tNumRestarts: 10,\n\t\t\t},"
  },
  {
    "id" : "fe5f62fa-a9fc-45c8-9701-6863b1396751",
    "prId" : 94334,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94334#pullrequestreview-603485409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50d04de8-89d1-442e-a527-184dd2e9fe41",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Where did these numbers come from? If they reflect what was seen in some specific system (for example, testing on Prow) then it would be worthwhile to document this here in a comment.\r\n\r\nI'm a bit worried about random test flakes in Prow jobs. Anything timing based is problematic because performance is not very deterministic.\r\n",
        "createdAt" : "2021-03-02T08:41:27Z",
        "updatedAt" : "2021-03-24T20:51:13Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "3a8a97e2-3476-4114-8663-a00c2ce8d206",
        "parentId" : "50d04de8-89d1-442e-a527-184dd2e9fe41",
        "authorId" : "90cfc0c5-e945-4584-be7e-3411fd993507",
        "body" : "Opted for these numbers based on testing on my local setup (kind + hostpath CSI) and then gave it a loooot of leeway. The intention (for now) is to set the expected metrics so high that if this test fails there's definitely a performance regression. ",
        "createdAt" : "2021-03-03T06:01:20Z",
        "updatedAt" : "2021-03-24T20:51:13Z",
        "lastEditedBy" : "90cfc0c5-e945-4584-be7e-3411fd993507",
        "tags" : [
        ]
      },
      {
        "id" : "0f803145-b067-45bc-a146-8cdf7ec7420c",
        "parentId" : "50d04de8-89d1-442e-a527-184dd2e9fe41",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Can you put that into a comment in the source code?\r\n",
        "createdAt" : "2021-03-03T18:48:45Z",
        "updatedAt" : "2021-03-24T20:51:13Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "28bc9f79-5b69-4d3e-886d-7b9ea160fb44",
        "parentId" : "50d04de8-89d1-442e-a527-184dd2e9fe41",
        "authorId" : "90cfc0c5-e945-4584-be7e-3411fd993507",
        "body" : "done",
        "createdAt" : "2021-03-04T00:02:39Z",
        "updatedAt" : "2021-03-24T20:51:13Z",
        "lastEditedBy" : "90cfc0c5-e945-4584-be7e-3411fd993507",
        "tags" : [
        ]
      }
    ],
    "commit" : "34e4a5f22c683e8f93cf48275135e40847024e8f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\t\t\t\tExpectedMetrics: &storageframework.Metrics{\n\t\t\t\t\t\tAvgLatency: 2 * time.Minute,\n\t\t\t\t\t\tThroughput: 0.5,\n\t\t\t\t\t},\n\t\t\t\t},"
  },
  {
    "id" : "81762160-830f-4695-93b3-185da663443b",
    "prId" : 93618,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93618#pullrequestreview-463992966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c3f7646-5ed3-40c1-98d7-0f97b9a9c26c",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "why 5 minutes here and 10 minute in other place? Also can we move these values to constants?",
        "createdAt" : "2020-08-08T15:26:25Z",
        "updatedAt" : "2020-08-10T18:03:55Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "b01cf5a8-5456-4894-a218-deb48aaf1f83",
        "parentId" : "3c3f7646-5ed3-40c1-98d7-0f97b9a9c26c",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Because previously the wait time for waitForCSIDriverRegistrationOnNode is set to 5 minutes. And the reason we are using 10 minutes in other place is that our tests are flaky occasionally because the pod get scheduled onto the node longer than 5 minutes. I don't want to change the timeout threshold for other places. Or do you think we should keep them the same?\r\n\r\nIn the flaky tests I have triaged, it can took 6-8 minutes for the registration. That's why I set the timeout to 10min. This should be long enough to get the pod running to avoid such flakiness. \r\n\r\nI have addressed your comment to change the wait to be ExponentialBackoff. This should keep the timeout in sync with other places.",
        "createdAt" : "2020-08-10T07:02:31Z",
        "updatedAt" : "2020-08-10T18:03:55Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "76b4973b424b1f78792acf9f52d80fe3a9baf45f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +610,614 @@\tfor _, node := range nodes.Items {\n\t\tif err := WaitForCSIDriverRegistrationOnNode(node.Name, driverName, cs); err != nil {\n\t\t\treturn err\n\t\t}\n\t}"
  },
  {
    "id" : "3799adf7-9e50-4a22-9e1d-d63355abc933",
    "prId" : 90781,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90781#pullrequestreview-406259489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8240c298-f243-4db9-85e9-e830e9ab4008",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "do we know what is the average time for this registration roughly? ",
        "createdAt" : "2020-05-06T01:14:12Z",
        "updatedAt" : "2020-05-06T01:14:13Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "17ee0898-59ec-43f8-8273-e31c4c4372c7",
        "parentId" : "8240c298-f243-4db9-85e9-e830e9ab4008",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Good question, from the failing test logs, it seems like the driver containers started fairly quickly. So maybe increasing the timeout won't help and maybe there's some other problem.",
        "createdAt" : "2020-05-06T01:37:33Z",
        "updatedAt" : "2020-05-06T01:37:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc08f741570613da2ea0f692e11d63b38d3a3398",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +491,495 @@\nfunc waitForCSIDriverRegistrationOnNode(nodeName string, driverName string, cs clientset.Interface) error {\n\tconst csiNodeRegisterTimeout = 5 * time.Minute\n\n\twaitErr := wait.PollImmediate(10*time.Second, csiNodeRegisterTimeout, func() (bool, error) {"
  },
  {
    "id" : "f69a1fa4-67df-48f0-b8a8-03195a884cb3",
    "prId" : 80378,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80378#pullrequestreview-268104416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32a9074f-93cf-4cf3-ad1f-88da7ade929a",
        "parentId" : null,
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "It would be safe to delete RequiredAccessModes for GcePDCSIDriver, because RWO is default now.\r\nInstead, we should add ROX and RWX to drivers that support them, properly. \r\n(I hope that https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes is still up-to-date and correct.)\r\n\r\nAlthough, this change could be covered by another PR that actually tests ROX and RWX features. (As PR says  just \"add a field\", not \"set the field\" for all drivers.)",
        "createdAt" : "2019-07-29T23:34:51Z",
        "updatedAt" : "2019-07-29T23:34:51Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "ac436a5e-c3d6-4ba6-a3cc-6edc342e50f6",
        "parentId" : "32a9074f-93cf-4cf3-ad1f-88da7ade929a",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "> It would be safe to delete RequiredAccessModes for GcePDCSIDriver, because RWO is default now.\r\nInstead, we should add ROX and RWX to drivers that support them, properly.\r\n(I hope that https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes is still up-to-date and correct.)\r\n\r\nIt would be safe, but technically more correct to set this explicitly. Defaulting can change and is best not to be relied on :)\r\n\r\n>Although, this change could be covered by another PR that actually tests ROX and RWX features. (As PR says just \"add a field\", not \"set the field\" for all drivers.)\r\n\r\nAgreed, setting this field can be done as a follow up.",
        "createdAt" : "2019-07-30T00:26:00Z",
        "updatedAt" : "2019-07-30T00:26:01Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "0313dc217e362c70d48797f4c5eac0f9d91a94e0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +356,360 @@\t\t\t\ttestsuites.CapMultiPODs:   true,\n\t\t\t},\n\t\t\tRequiredAccessModes: []v1.PersistentVolumeAccessMode{v1.ReadWriteOnce},\n\t\t},\n\t}"
  },
  {
    "id" : "2dfeca25-2c8e-42d4-b15a-229efbe598c0",
    "prId" : 78306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78306#pullrequestreview-298547059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eb42ee7-359c-4465-a8aa-3fcfbd423aee",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "This can be removed. The hostpath driver is one of those drivers where we can be sure that it has no minimum size.\r\n",
        "createdAt" : "2019-10-07T13:38:38Z",
        "updatedAt" : "2019-10-07T17:34:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "8321afef-f9a1-4735-bec6-b0dbd7bfe61f",
        "parentId" : "4eb42ee7-359c-4465-a8aa-3fcfbd423aee",
        "authorId" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "body" : "> This can be removed. The hostpath driver is one of those drivers where we can be sure that it has no minimum size.\r\n\r\nI am afraid the hostpath driver should have a minimum size 1Mb?\r\nFrom source code here https://github.com/kubernetes-csi/csi-driver-host-path/blob/3488dc7f994e33485629b86b69a6f34ebb7ef2d9/pkg/hostpath/hostpath.go#L181 If the volume access type is 'block', then the driver will call `fallocate` with size unit M .\r\nToo small size will be invalid. \r\n",
        "createdAt" : "2019-10-07T15:19:09Z",
        "updatedAt" : "2019-10-07T17:34:11Z",
        "lastEditedBy" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "tags" : [
        ]
      },
      {
        "id" : "1eb5e65a-1f08-40da-9939-8bff228c73e0",
        "parentId" : "4eb42ee7-359c-4465-a8aa-3fcfbd423aee",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Right, I was thinking of filesystem mode. For block mode I am not sure whether the driver should round up internally - this sounds like a bug in the driver.\r\n\r\nAnyway, let's then keep the minimum size.",
        "createdAt" : "2019-10-08T06:03:26Z",
        "updatedAt" : "2019-10-08T06:03:26Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5c14323286d26490f8c12884fb1d7f36e2d9eeb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\t\tSupportedSizeRange: volume.SizeRange{\n\t\t\t\tMin: \"1Mi\",\n\t\t\t},\n\t\t\tCapabilities: capabilities,\n\t\t},"
  },
  {
    "id" : "1395da73-e6f1-46b3-9b41-241854050ee7",
    "prId" : 75796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75796#pullrequestreview-219747560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "477ef47f-bdf6-47d2-9964-3647586b2a1f",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Does this mean we always test using delayedBinding for GCE PD driver? Is that OK?",
        "createdAt" : "2019-03-27T21:44:15Z",
        "updatedAt" : "2019-03-29T22:00:37Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "f8337166-a639-4f69-ad64-b689540de555",
        "parentId" : "477ef47f-bdf6-47d2-9964-3647586b2a1f",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think it's fine because that's what we want to start encourage everyone to use by default.  And we still have other drivers like hostpath that test immediate binding.",
        "createdAt" : "2019-03-27T21:58:10Z",
        "updatedAt" : "2019-03-29T22:00:37Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "634be030a82a20c5e7d273e92d5ea397366035df",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +382,386 @@\t\tparameters[\"csi.storage.k8s.io/fstype\"] = fsType\n\t}\n\tdelayedBinding := storagev1.VolumeBindingWaitForFirstConsumer\n\n\treturn testsuites.GetStorageClass(provisioner, parameters, &delayedBinding, ns, suffix)"
  },
  {
    "id" : "5c956a74-f751-4ba9-beb2-7590edf5bb11",
    "prId" : 72434,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72434#pullrequestreview-202898345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4a780b9-45eb-47c7-a501-711428db391e",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "its odd to me that `CreateDriver` would output a `PerTestConfig`. It may be cleaner to have whatever is calling `CreateDriver` to also call a `CreatePerTestConfig` as the next step and giving it the necessary inputs. \r\n\r\n`CreateDriver` can then just return whatever artifacts that only relate to the driver.",
        "createdAt" : "2019-01-17T00:07:23Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "6b097280-db5a-4a32-94c6-0da4de807d66",
        "parentId" : "b4a780b9-45eb-47c7-a501-711428db391e",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "`CreateDriver` always has been the \"cluster is running, set up test runtime resources\" method. Going forward, drivers will be pre-installed during test cluster setup, but we might still need such a per-test setup function. Let's just rename `CreateDriver` to something that is a bit more generic. How about `PrepareTest`? What it does internally (install driver, deploy NFS server) is irrelevant at the API level, what matters is the result: cluster is ready, a per-test config describes it.\r\n",
        "createdAt" : "2019-01-17T07:08:15Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "11409cf0-4b31-475a-b9c7-af264202a1d6",
        "parentId" : "b4a780b9-45eb-47c7-a501-711428db391e",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "got it. seems like the naming change will resolve this for me then",
        "createdAt" : "2019-01-17T18:53:16Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "95b6a89a-f70f-44da-b521-010aa61c5776",
        "parentId" : "b4a780b9-45eb-47c7-a501-711428db391e",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Renamed.\r\n",
        "createdAt" : "2019-02-12T20:46:01Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec3655a1d40ced6b1873e627b736aae1cf242477",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +133,137 @@\tnodes := framework.GetReadySchedulableNodesOrDie(cs)\n\tnodeName := nodes.Items[rand.Intn(len(nodes.Items))].Name\n\tconfig := &testsuites.PerTestConfig{\n\t\tDriver:         h,\n\t\tPrefix:         \"hostpath\","
  },
  {
    "id" : "ad6bca0a-29b5-4e2a-8591-e043d8f1da29",
    "prId" : 72434,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72434#pullrequestreview-193483550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f1633a2-c4ef-42bc-be68-5e4da9ff9548",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "same here, should be in `SkipUnsupportedTest`?",
        "createdAt" : "2019-01-17T00:12:51Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "37e34327-fca6-47b5-99cb-2bb8275277fe",
        "parentId" : "7f1633a2-c4ef-42bc-be68-5e4da9ff9548",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "See above.",
        "createdAt" : "2019-01-17T07:12:29Z",
        "updatedAt" : "2019-02-15T10:06:24Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec3655a1d40ced6b1873e627b736aae1cf242477",
    "line" : 402,
    "diffHunk" : "@@ -1,1 +475,479 @@\nfunc (g *gcePDExternalCSIDriver) PrepareTest(f *framework.Framework) (*testsuites.PerTestConfig, func()) {\n\tframework.SkipIfMultizone(f.ClientSet)\n\n\treturn &testsuites.PerTestConfig{"
  },
  {
    "id" : "a3b14775-d742-487e-bdf2-c12317e6a5bf",
    "prId" : 70941,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70941#pullrequestreview-175615693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac9908c0-e01d-41cd-95b1-77a7340f3201",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "https://github.com/kubernetes/kubernetes/tree/master/test/e2e/testing-manifests/storage-csi/gce-pd does not seem to contain a `controller_ss_alpha.yaml` file. Should that file be part of this PR?",
        "createdAt" : "2018-11-16T00:21:25Z",
        "updatedAt" : "2019-01-12T02:36:54Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "40195c57-7803-4adf-b5b6-414b141b711c",
        "parentId" : "ac9908c0-e01d-41cd-95b1-77a7340f3201",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "nm .. just found the file in another commit of this PR.",
        "createdAt" : "2018-11-16T00:22:33Z",
        "updatedAt" : "2019-01-12T02:36:54Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "12ece9dacbbe8b3f9727c5136912de9089b54b27",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +346,350 @@\n\tif g.driverInfo.Config.TopologyEnabled {\n\t\tmanifests = append(manifests, \"test/e2e/testing-manifests/storage-csi/gce-pd/controller_ss_alpha.yaml\")\n\t} else {\n\t\tmanifests = append(manifests, \"test/e2e/testing-manifests/storage-csi/gce-pd/controller_ss.yaml\")"
  },
  {
    "id" : "07bbf286-9e10-45d2-814c-6dff30129cdb",
    "prId" : 70823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70823#pullrequestreview-181429132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24908bac-5864-4ebe-bb89-48328824b6c4",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "is there a way to put this check in the \"testsuite\" skip checks instead of the driver skip tests? This skip \"holds\" for *any* driver that runs this test suite.",
        "createdAt" : "2018-11-29T21:40:28Z",
        "updatedAt" : "2019-01-23T05:35:15Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "3369b829-9100-4237-892d-d2b491ba7cf4",
        "parentId" : "24908bac-5864-4ebe-bb89-48328824b6c4",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "@davidz627 \r\n\r\n> is there a way to put this check in the \"testsuite\" skip checks instead of the driver skip tests? This skip \"holds\" for any driver that runs this test suite.\r\n\r\nI think that moving this logic to [```skipUnsupportedTest```](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/testsuites/base.go#L87) will make xfs tests skip for any drivers and any testsuites. However, to do so, we should blacklist unsupported distros instead of whitelisting just ```\"ubuntu\"``` and ```\"custom\"```, because we are not sure which distro will be passed here. (In current code, it assumes that this code path in gce driver's ```SkipUnsupportedTest``` reaches by only gce tests, so just whitelisting them is working fine.)\r\n\r\nSo, could you let me know which distro to blacklist?\r\n(I guess that ```\"gci\"``` is needed here and how about ```\"debian\"``` and ```\"coreos\"```?)\r\n",
        "createdAt" : "2018-11-29T22:37:39Z",
        "updatedAt" : "2019-01-23T05:35:15Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "719e4c1c-af40-40fa-b673-f7f7560a96e4",
        "parentId" : "24908bac-5864-4ebe-bb89-48328824b6c4",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "@davidz627 \r\n\r\ncommit 07a456d will do above, assuming that only ```\"gci\"``` should be blacklisted. If this isn't true, please point it out.\r\n(Currently, xfs test seems running only on gce CI, so we can go ahead once we confirm that it is true in gce CI, and add blacklist when we need to add some more latter.)\r\n",
        "createdAt" : "2018-11-29T23:18:35Z",
        "updatedAt" : "2019-01-23T05:35:15Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "08e8f990-56ce-4f9e-8d7c-1a9e0466d1a8",
        "parentId" : "24908bac-5864-4ebe-bb89-48328824b6c4",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "@msau42 @lookuptable do either of you know the answer to this? I am only aware of `gci` not having `xfs` support but there could be more",
        "createdAt" : "2018-12-04T18:53:06Z",
        "updatedAt" : "2019-01-23T05:35:15Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "cd6b0729-e258-40f3-85ce-ba23bea6ee4c",
        "parentId" : "24908bac-5864-4ebe-bb89-48328824b6c4",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "For gce CI, blacklisting \"gci\" is fine, although we need to find a way to deal with \"custom\", which can be both ubuntu or gci.  Can we check for the presence of xfs tools on the node?",
        "createdAt" : "2018-12-04T19:08:44Z",
        "updatedAt" : "2019-01-23T05:35:15Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b152d435ae325a1b9b5e5aa7153b9dc098f5cb7e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +411,415 @@\tframework.SkipUnlessProviderIs(\"gce\", \"gke\")\n\tframework.SkipIfMultizone(g.driverInfo.Config.Framework.ClientSet)\n\tif pattern.FsType == \"xfs\" {\n\t\tframework.SkipUnlessNodeOSDistroIs(\"ubuntu\", \"custom\")\n\t}"
  },
  {
    "id" : "e01611c7-89f0-475c-9b52-ced0f8e76c8d",
    "prId" : 68025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68025#pullrequestreview-169027922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7d432f3-7775-4edc-9d84-dbb8fcf02ca9",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@davidz627 should this be a failure instead of skip?",
        "createdAt" : "2018-10-02T21:19:14Z",
        "updatedAt" : "2018-11-07T15:43:42Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "543e5e99-9a97-41b7-86a5-8a59094d66d7",
        "parentId" : "a7d432f3-7775-4edc-9d84-dbb8fcf02ca9",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yes, since adding `createGCESecrets` this should now be a failure",
        "createdAt" : "2018-10-26T23:18:51Z",
        "updatedAt" : "2018-11-07T15:43:43Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b89b367247039f4a46a1ca2f0e4e906d723d79d2",
    "line" : 180,
    "diffHunk" : "@@ -1,1 +178,182 @@\t// TODO(#62561): Use credentials through external pod identity when that goes GA instead of downloading keys.\n\tcreateGCESecrets(cs, config)\n\tframework.SkipUnlessSecretExistsAfterWait(cs, \"cloud-sa\", config.Namespace, 3*time.Minute)\n}\n"
  },
  {
    "id" : "612292bd-81c9-45c7-ad09-8f3e09f3b3d7",
    "prId" : 68025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68025#pullrequestreview-168704651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30377dcd-6778-493a-957d-8e246a65e214",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "How can out-of-tree CSI drivers define their own instance of these shared tests?\r\n\r\nThey can't extend `drivers/csi.go`, because it is read-only for out-of-tree tests.\r\n\r\nIMHO the in-tree CSI tests should be defined the same way. That way we know that the mechanism (whatever it is) works.\r\n",
        "createdAt" : "2018-10-24T08:45:55Z",
        "updatedAt" : "2018-11-07T15:43:43Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "e2406bb6-f6d0-4140-bcc5-797f13b13d44",
        "parentId" : "30377dcd-6778-493a-957d-8e246a65e214",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "This topic should be covered in https://github.com/kubernetes/kubernetes/issues/69819 .\r\n\r\nAs @msau42 suggested, we will be able to make this framework called from out-of-tree.\r\nSimplest way would be:\r\n  1. Out-of-tree driver developers define their driver in other places by the same way as test/e2e/storage/drivers/csi.go does, which means implement ```TestDriver``` interface defined in e2e/storage/drivers/base.go and its init function for their drivers.\r\n  2. Also define similar code to test/e2e/storage/csi_volumes.go (after L98 is not necessary and ```csiTestDrivers``` need to be modified to include their driver's init code that is implemented in step 1 above).\r\n\r\nWe might improve step 2 not to duplicate the code, but its just about 100 steps of code including header and comments, so it should be enough simple.\r\n\r\nAlso, until moving csi driver test codes other than reference drivers are moved to out-of-tree, we still have a chance to add codes for out-of-tree drivers' e2e tests to in-tree. (As is intended in https://github.com/kubernetes/kubernetes/pull/67088 .)\r\n",
        "createdAt" : "2018-10-25T21:49:06Z",
        "updatedAt" : "2018-11-07T15:43:43Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "286ffa8c-0196-4ede-9d22-bf9dccea9f58",
        "parentId" : "30377dcd-6778-493a-957d-8e246a65e214",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "This sounds like it could work, thanks for explaining.\r\n\r\n",
        "createdAt" : "2018-10-26T07:46:03Z",
        "updatedAt" : "2018-11-07T15:43:43Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "b89b367247039f4a46a1ca2f0e4e906d723d79d2",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\n/*\n * This file defines various csi volume test drivers for TestSuites.\n *\n * There are two ways, how to prepare test drivers:"
  },
  {
    "id" : "e3e5bba7-d25c-4ca2-8345-955060fe583c",
    "prId" : 68025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68025#pullrequestreview-173174136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6a5a961-6076-45a3-aa4a-9d25275c126d",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "@mkimuram Should this gcePDCSIDriver.GetDynamicProvisionStorageClass really ignore the fsType string? The driver declares that it supports multiple different filesystems.\r\n\r\nDoes this lead to multiple different test configurations (one for each filesystem) where each individual test run then uses the same default fs?\r\n",
        "createdAt" : "2018-11-08T13:04:42Z",
        "updatedAt" : "2018-11-08T13:04:42Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "add9610b-b475-4867-aabf-9351e88d2038",
        "parentId" : "a6a5a961-6076-45a3-aa4a-9d25275c126d",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "@pohly \r\n\r\nThank you for pointing it out. Current ```gcePDCSIDriver.GetDynamicProvisionStorageClass``` code lacks setting ```fsType``` as [it was done for in-tree one](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/drivers/in_tree.go#L1176). Also, I came to think that volumes test should test if the volume is mounted with the proper fsType, if fsType is specified. (Currently, it [tests multiple fsType](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/testsuites/volumes.go#L44) but doesn't seem to [test fsType](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/volume_util.go#L404).)\r\n\r\nI will make a PR to fix it.",
        "createdAt" : "2018-11-08T16:03:37Z",
        "updatedAt" : "2018-11-08T16:03:37Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "befd2d89-16d5-46d4-8b31-3aab3ccc4ad9",
        "parentId" : "a6a5a961-6076-45a3-aa4a-9d25275c126d",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "Opened an issue and a PR below:\r\n\r\nIssue: https://github.com/kubernetes/kubernetes/issues/70822\r\nPR: https://github.com/kubernetes/kubernetes/pull/70823\r\n",
        "createdAt" : "2018-11-08T21:12:46Z",
        "updatedAt" : "2018-11-08T21:12:46Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "b89b367247039f4a46a1ca2f0e4e906d723d79d2",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +189,193 @@\n\treturn getStorageClass(provisioner, parameters, nil, ns, suffix)\n}\n\nfunc (g *gcePDCSIDriver) CreateDriver() {"
  },
  {
    "id" : "2c96f47c-a0c3-4a1e-8386-471666534b2d",
    "prId" : 68025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68025#pullrequestreview-173056224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f0b905f-931c-44bd-8440-419bf9cdff00",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "@mkimuram it's not obvious what \"IsPersistent\" means, and the description (\"Flag to represent whether it provides persistency\") doesn't explain it either (it just paraphrases the variable name, which usually is a comment that might as well be left out because it doesn't add additional information).\r\n\r\nDoes it mean \"persistent across node restarts\"? The hostpath driver isn't that, so I'm wondering why it is set to true here.\r\n\r\nI also don't know what \"fsGroup\" is.\r\n\r\n\"Block support\" is a bit easier to guess, but an explicit description would be better.\r\n",
        "createdAt" : "2018-11-08T13:41:32Z",
        "updatedAt" : "2018-11-08T13:41:33Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "442ac198-bd00-412c-83b6-10ec131d11b3",
        "parentId" : "5f0b905f-931c-44bd-8440-419bf9cdff00",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "@pohly \r\n\r\n> it's not obvious what \"IsPersistent\" means\r\n\r\nActually, I meant \"persistent across pod restarts\".  It is defined to handle [emptyDir driver](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/drivers/in_tree.go#L899\r\n) properly in [volumes test](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/testsuites/volumes.go#L72). I agree that we should improve the comment and we might need something like ```IsPersistentAcrossNode``` flag in the future.\r\n\r\n> I also don't know what \"fsGroup\" is\r\n\r\nPlease see below.\r\nhttps://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\r\n\r\nMost of these flags are defined in the process of migrating existing in-tree driver's test to this framework. So, we will need more flags in the future and improve these flags and their comments.\r\n \r\n",
        "createdAt" : "2018-11-08T16:16:21Z",
        "updatedAt" : "2018-11-08T16:16:21Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "fbee5ade-b5d9-460f-bfe7-ed7d5c2e1cd1",
        "parentId" : "5f0b905f-931c-44bd-8440-419bf9cdff00",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I'm changing the way these capabilities are defined and hopefully making the comments more clear here: https://github.com/kubernetes/kubernetes/pull/70756",
        "createdAt" : "2018-11-08T16:22:07Z",
        "updatedAt" : "2018-11-08T16:22:07Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c0b19f93-7e54-4dcc-b64e-83018d21fd8d",
        "parentId" : "5f0b905f-931c-44bd-8440-419bf9cdff00",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "@msau42 \r\n\r\nThank you for start working on improving capability definition.\r\nThe framework is ready for both in-tree and csi now, so it would be good timing to do it, before adding more testsuites and drivers.\r\n\r\n ",
        "createdAt" : "2018-11-08T16:36:05Z",
        "updatedAt" : "2018-11-08T16:36:05Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "b89b367247039f4a46a1ca2f0e4e906d723d79d2",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\t\t\tIsPersistent:       true,\n\t\t\tIsFsGroupSupported: false,\n\t\t\tIsBlockSupported:   false,\n\t\t},\n\t}"
  }
]