[
  {
    "id" : "fbd1aff4-21c6-45ee-9432-e630a19972be",
    "prId" : 52574,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52574#pullrequestreview-64014311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11e84d1-d4d9-4d8d-85e8-eb17927f99fc",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "why do you need to check sudo? ssh should already use root id.",
        "createdAt" : "2017-09-19T13:13:00Z",
        "updatedAt" : "2017-09-19T13:13:13Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "6c16aebd-3735-455a-9392-26b76d47d64c",
        "parentId" : "d11e84d1-d4d9-4d8d-85e8-eb17927f99fc",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "Framework is flexible and allows user to ssh with non root user account. We can set the user account to login with in the environment variable as below.\r\n\r\n```export KUBE_SSH_USER=\"user\"```\r\n\r\nFor non-root user account we need sudo. \r\n\r\nIn our setup we do not have sudo package installed, and we are using root user to login. checking existence of sudo command, helps us prepare right command for restarting kubelet.\r\n\r\n",
        "createdAt" : "2017-09-19T18:49:42Z",
        "updatedAt" : "2017-09-19T18:49:42Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "2c5d4b6c-bf1d-4d54-9f16-8200bf1ed315",
        "parentId" : "d11e84d1-d4d9-4d8d-85e8-eb17927f99fc",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "How is kubelet restart done in your test if no sudo installed? Test needs sudo to restart kubelet [here](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/persistent_volumes-disruptive.go#L262) and [in gce](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go#L3803)",
        "createdAt" : "2017-09-20T13:03:18Z",
        "updatedAt" : "2017-09-20T13:03:19Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "d096224c-4ac2-410c-b2eb-14bd28d77783",
        "parentId" : "d11e84d1-d4d9-4d8d-85e8-eb17927f99fc",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "That's the change we have made in this PR. we do not need sudo prefixed in the systemctl command we issue on our node.\r\n\r\nWe first check if sudo command is present or not.\r\n```\r\nframework.Logf(\"Checking if sudo command is present\")\r\nsshResult, err := framework.SSH(\"sudo --version\", nodeIP, framework.TestContext.Provider)\r\n\tExpect(err).NotTo(HaveOccurred(), fmt.Sprintf(\"SSH to Node %q errored.\", pod.Spec.NodeName))\r\nif !strings.Contains(sshResult.Stderr, \"command not found\") {\r\n\t\tsudoPresent = true\r\n\t}\r\n```\r\n\r\nIf sudo command is not present we will not include it in the command for restarting kubelet.\r\n\r\n```\r\nif sudoPresent {\r\n     command = fmt.Sprintf(\"sudo %s\", command)\r\n}\r\n```\r\n\r\nHere command is either \r\n\r\n```\r\ncommand = fmt.Sprintf(\"systemctl %s kubelet\", string(kOp))\r\n```\r\nor \r\n```\r\ncommand = fmt.Sprintf(\"service kubelet %s\", string(kOp))\r\n```\r\n\r\n\r\nChange is safe for GCE.\r\n",
        "createdAt" : "2017-09-20T13:48:46Z",
        "updatedAt" : "2017-09-20T13:48:47Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "cd025f2b-7f88-45d0-b062-1551efef3563",
        "parentId" : "d11e84d1-d4d9-4d8d-85e8-eb17927f99fc",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "ok, thanks for details.",
        "createdAt" : "2017-09-20T15:22:24Z",
        "updatedAt" : "2017-09-20T15:22:25Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "544c6c18b3c395b0ae34c8e0caadbbed7a7ba66e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +266,270 @@\tnodeIP = nodeIP + \":22\"\n\n\tframework.Logf(\"Checking if sudo command is present\")\n\tsshResult, err := framework.SSH(\"sudo --version\", nodeIP, framework.TestContext.Provider)\n\tExpect(err).NotTo(HaveOccurred(), fmt.Sprintf(\"SSH to Node %q errored.\", pod.Spec.NodeName))"
  },
  {
    "id" : "f9c3b0cb-9d37-4784-ba67-22750394e4f8",
    "prId" : 44923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44923#pullrequestreview-34690252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1ee9d4c-3a3f-48ba-a352-f5a77d7c7ade",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Is it ok to start the kubelet twice?",
        "createdAt" : "2017-04-25T16:44:30Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "9baad4ad-48c9-4bf3-a132-b97979690d79",
        "parentId" : "d1ee9d4c-3a3f-48ba-a352-f5a77d7c7ade",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "In this instance, I think it's okay.  Issuing `start` on a running kubelet will make it restart.  This defer is primarily to protect against the kubelet being left stopped if an error happens while deleting the pod or waiting for the pod to terminate.  In testing, timeouts here left the kubelet stopped after the test finished.\r\n\r\nThe side effect being if an error occurs after the kubelet is started (SSH fails or the volume is still attached), then it will be restarted once before the function returns.  `kubeletCommand` waits for the node to come back online before returning, so this will add a few seconds to run time.",
        "createdAt" : "2017-04-25T21:10:41Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      }
    ],
    "commit" : "70c0cefaef3cae5a1036c46f4938adfbf82c636c",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +187,191 @@\tdefer func() {\n\t\tif err != nil {\n\t\t\tkubeletCommand(kStart, c, clientPod)\n\t\t}\n\t}()"
  },
  {
    "id" : "aa54766d-340a-450f-b094-0a64652b657b",
    "prId" : 44923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44923#pullrequestreview-36190834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "962b2ff3-77f8-4270-841e-8b406f8f06ac",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "If error != nil, the test will stop here and return?\r\nMy questions is if command not found, will it also an err returned?",
        "createdAt" : "2017-05-03T23:05:25Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "9d5174ed-ac32-4f0c-873b-244a5bc5837a",
        "parentId" : "962b2ff3-77f8-4270-841e-8b406f8f06ac",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "@jingxu97 It looks like err is nil when the ssh command fails (eg sshResults.Code != 0). See: [code](https://github.com/kubernetes/kubernetes/blob/master/pkg/ssh/ssh.go#L243)",
        "createdAt" : "2017-05-03T23:38:41Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "13452749-bc00-48fc-a287-d553df903781",
        "parentId" : "962b2ff3-77f8-4270-841e-8b406f8f06ac",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "`framework.SSH` returns a non-nil `err` only if the ssh encounters a problem (connection timeout, authorization, etc.).  If the command being passed to SSH fails (i.e. `command not found`), then `err` is nil and stderr/stdout/exit code are returned in `sshResult`.",
        "createdAt" : "2017-05-04T01:02:00Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "32dd8e31-1315-40a5-b728-f2a341e1475b",
        "parentId" : "962b2ff3-77f8-4270-841e-8b406f8f06ac",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "so if err is non-nil, should we try another SSh with service kubelet, or just return?",
        "createdAt" : "2017-05-04T05:44:20Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "5164e43d-0b68-44ca-8e10-ce5df74a95b5",
        "parentId" : "962b2ff3-77f8-4270-841e-8b406f8f06ac",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "If the err return from `framework.SSH` is non-nil it means that the ssh connection failed (various reasons) so there is likely no value in re-trying with a different command. If err is nil then the `sshResult.Code` is examined to determine if the remotely executed command succeeded or not.",
        "createdAt" : "2017-05-04T05:56:44Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70c0cefaef3cae5a1036c46f4938adfbf82c636c",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +263,267 @@\tframework.Logf(\"Attempting `%s`\", systemctlCmd)\n\tsshResult, err := framework.SSH(systemctlCmd, nodeIP, framework.TestContext.Provider)\n\tExpect(err).NotTo(HaveOccurred(), fmt.Sprintf(\"SSH to Node %q errored.\", pod.Spec.NodeName))\n\tframework.LogSSHResult(sshResult)\n\tif strings.Contains(sshResult.Stderr, \"command not found\") {"
  },
  {
    "id" : "99245a48-b590-48f4-bd46-196050cefd82",
    "prId" : 44923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44923#pullrequestreview-36325144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "974d118e-be50-49f1-bf1c-0b9391ea7b38",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Intentional to skip error checking above?",
        "createdAt" : "2017-05-04T16:29:48Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "8d5571a3-71dd-43a5-b72e-c59efd0cdb53",
        "parentId" : "974d118e-be50-49f1-bf1c-0b9391ea7b38",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Yes, the reason being that an error will interrupt cleanup and orphan the PV.  An alternative would be to return all resources on failure.  I'm fine with that method, but I'd like to do that in a separate PR. ",
        "createdAt" : "2017-05-04T16:44:13Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "c60868ef-69c7-4ead-aba1-0cb2d9ca342e",
        "parentId" : "974d118e-be50-49f1-bf1c-0b9391ea7b38",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Agree.",
        "createdAt" : "2017-05-04T16:50:30Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70c0cefaef3cae5a1036c46f4938adfbf82c636c",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\tif err != nil {\n\t\t\tframework.DeletePersistentVolumeClaim(c, pvc.Name, ns)\n\t\t\tframework.DeletePersistentVolume(c, pv.Name)\n\t\t}\n\t}()"
  },
  {
    "id" : "17a55a2f-2cf4-405b-92f6-0a78b1357a4e",
    "prId" : 44923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44923#pullrequestreview-36336442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a87964fb-27d7-43cc-a5dd-5dd972856499",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "No error check here.",
        "createdAt" : "2017-05-04T16:30:38Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "69b76d7b-5196-4722-84d3-e73571b9422d",
        "parentId" : "a87964fb-27d7-43cc-a5dd-5dd972856499",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "Same reason as above.   ~This defer will be at the top of the defer-stack.  I _think_ failing here will cause the test to stop without executing the next deferred cleanup call.  We did some sandboxing with defers before, I'll have to go back and verify that behavior.~\r\nNever mind, it's safe to fail inside the `defer`.  ",
        "createdAt" : "2017-05-04T16:46:57Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      },
      {
        "id" : "59829ffe-210f-4e9a-b532-6a0506b84b6b",
        "parentId" : "a87964fb-27d7-43cc-a5dd-5dd972856499",
        "authorId" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "body" : "In test a setup where 2 `Expect(1).To(BeZero())`statements are inserted into the function:  1 at function scope, 1 in side a defer block:\r\n\r\nOnly the function scope `Expect` is registered as a failure. The deferred `Expect` is completely ignored.  No output appears in test logs or summary.  So doing error checking inside a `defer` where code is triggered will be ignored.\r\n\r\ne.g. \r\n```\r\nfunc f(){\r\n    defer func(){\r\n        Expect(1).To(BeZero(), \"Deferred Error\")\r\n    }()\r\n    Expect(1).To(BeZero(), \"Initial Error\")\r\n}\r\n```\r\nWill only produce\r\n```\r\n    Initial failure\r\n    Expected\r\n        <int>: 1\r\n    to be zero-valued\r\n```",
        "createdAt" : "2017-05-04T17:36:16Z",
        "updatedAt" : "2017-05-04T19:43:09Z",
        "lastEditedBy" : "1530c754-7850-4e09-a79b-a6555e28f729",
        "tags" : [
        ]
      }
    ],
    "commit" : "70c0cefaef3cae5a1036c46f4938adfbf82c636c",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +227,231 @@\tdefer func() {\n\t\tif err != nil {\n\t\t\tframework.DeletePodWithWait(f, c, pod)\n\t\t}\n\t}()"
  }
]