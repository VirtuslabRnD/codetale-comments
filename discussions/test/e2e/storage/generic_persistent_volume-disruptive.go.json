[
  {
    "id" : "c797aed9-776b-4cce-8bfe-e8e4f38a645e",
    "prId" : 75071,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75071#pullrequestreview-269880440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92fb241d-1bb6-4280-83d3-d04e3d286379",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Why do we need to change here?\r\nI cannot find the reason from the PR message.",
        "createdAt" : "2019-07-31T03:05:17Z",
        "updatedAt" : "2019-08-01T21:10:57Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "c1a624c8-ce02-4bcd-833b-e68dd1f6010b",
        "parentId" : "92fb241d-1bb6-4280-83d3-d04e3d286379",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "`framework.CreateNginxPod` can't handle block volume and inline volume, but `framework.CreateSecPod` can.\r\nCurrent tests in generic_persistent_volume-disruptive.go doesn't actually test them, but it would be good to use the similar logic to testsuites/disruptive.go to prepare for future imporvement and maintenance.",
        "createdAt" : "2019-08-01T21:09:24Z",
        "updatedAt" : "2019-08-01T21:11:38Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "c130b77a4848b87b29a1b7dcc1cc8d83247e50e8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +105,109 @@\tpod, err := framework.CreateSecPod(c, ns, pvcClaims, nil,\n\t\tfalse, \"\", false, false, framework.SELinuxLabel,\n\t\tnil, framework.PodStartTimeout)\n\tframework.ExpectNoError(err, \"While creating pods for kubelet restart test\")\n\treturn pod, pvc, pvs[0]"
  },
  {
    "id" : "c74e2588-aa23-4b92-aa24-49e669a4bd4a",
    "prId" : 61181,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61181#pullrequestreview-104347866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c173c78-3d68-440d-803b-193dcf650bcb",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "why use a slice here? Is it possible to call `framework.WaitForPersistentVolumeClaimPhase`?",
        "createdAt" : "2018-03-15T06:37:24Z",
        "updatedAt" : "2018-03-16T15:49:32Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "19e5423a-cfda-466c-8be2-a68d2017f1f5",
        "parentId" : "9c173c78-3d68-440d-803b-193dcf650bcb",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "does it matter? I notice that `WaitForPVClaimBoundPhase` internally calls `WaitForPersistentVolumeClaimPhase` ",
        "createdAt" : "2018-03-15T17:08:26Z",
        "updatedAt" : "2018-03-16T15:49:32Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "46cda9c9-5dd7-475b-9736-d033a017a497",
        "parentId" : "9c173c78-3d68-440d-803b-193dcf650bcb",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "only in that you would not need to check for the len slice == 1 below.\r\nOtherwise it is just my observation.",
        "createdAt" : "2018-03-15T19:26:44Z",
        "updatedAt" : "2018-03-16T15:49:32Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b85c4fc57a43cf3a2379a29ee502a5c7ef5ae7b3",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +93,97 @@\tExpect(err).NotTo(HaveOccurred(), \"Error creating pvc\")\n\tpvcClaims := []*v1.PersistentVolumeClaim{pvc}\n\tpvs, err := framework.WaitForPVClaimBoundPhase(c, pvcClaims, framework.ClaimProvisionTimeout)\n\tExpect(err).NotTo(HaveOccurred(), \"Failed waiting for PVC to be bound %v\", err)\n\tExpect(len(pvs)).To(Equal(1))"
  }
]