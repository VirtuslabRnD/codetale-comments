[
  {
    "id" : "0d5a3bd1-7778-46cd-a7d2-f0b41818f6d9",
    "prId" : 87168,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87168#pullrequestreview-342236457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aa57577-0862-4be8-a448-86d968c2ffe9",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "this is a functional change. looks correct though - surprised the original was not manifesting in any bugs",
        "createdAt" : "2020-01-13T22:58:25Z",
        "updatedAt" : "2020-01-14T19:45:53Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "78217614-e97d-4d84-bc43-f8e0185e11ba",
        "parentId" : "9aa57577-0862-4be8-a448-86d968c2ffe9",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I think the call sites are good about not reading the return value if `err != nil`.",
        "createdAt" : "2020-01-14T00:59:17Z",
        "updatedAt" : "2020-01-14T19:45:53Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "99a015705ba516802fcde6c6f5252e767c05db79",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\t\t}\n\t\t}\n\t\treturn false, nil\n\t})\n\tif waitErr != nil {"
  },
  {
    "id" : "ce2dc182-4c39-4071-946b-f7fe7e51980c",
    "prId" : 80382,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80382#pullrequestreview-265103878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bfafbe3-a67b-41ec-ae49-b7325cc5c45a",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Wait, `ClaimSize` is a field in `StorageClassTest`? In that case, shouldn't we be using it everywhere?",
        "createdAt" : "2019-07-22T18:13:10Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "a232d047-f971-485a-8ffc-f65ca68f255b",
        "parentId" : "8bfafbe3-a67b-41ec-ae49-b7325cc5c45a",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "we are in all instances where `StorageClassTest` is used",
        "createdAt" : "2019-07-22T23:18:16Z",
        "updatedAt" : "2019-07-23T19:59:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e194cf24cccc88b9d7190465bb20931abed21f55",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +87,91 @@\n\t\tpvc = framework.MakePersistentVolumeClaim(framework.PersistentVolumeClaimConfig{\n\t\t\tClaimSize:        test.ClaimSize,\n\t\t\tStorageClassName: &(resizableSc.Name),\n\t\t\tVolumeMode:       &test.VolumeMode,"
  },
  {
    "id" : "6bbf6d6e-a3a9-400f-96eb-974bffcd484a",
    "prId" : 74094,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74094#pullrequestreview-204436150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "why does the pod need to stay on the same node?",
        "createdAt" : "2019-02-14T21:55:42Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8ee0f74c-b774-4396-b909-3bf03ae51208",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Because test is trying to reproduce a case where volume was already mounted when resizing was attempted.  The difference is - when a new pod starts on a node, obviously global device is mounted and all that. But if you have a deployment and you delete the pod that was managed by deployment and replacement pod starts on same node, then there is no global mount happening but resize should still happen.  This e2e captures a bug we previously had in resize logic.\r\n",
        "createdAt" : "2019-02-14T22:29:03Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "6f7dfe1a-d98e-47ad-8841-ad4488da68e9",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "There can still be timing issues I think.  Even if a pod was restarted on the same node, there might be enough time to detach and reattach to that same node.  Would a condition like this be better exercised by a unit test, where you can control the timing of events?",
        "createdAt" : "2019-02-14T22:43:22Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d39edca4-88e7-40b0-a61b-0b32d2f20cde",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Hmm possibly. In hindsight it might be better to remove this test and replace it with a table driven test - which exercises something like XFS which also reproduces this bug. However then we may not be able to run this test regularly in some environments. ",
        "createdAt" : "2019-02-14T23:40:40Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "ce7f3abf-d6f8-4156-8018-977ecf5ff703",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Okay, so I am thinking we should keep it for now as it is. I will add XFS tests as part of table driven test cleanup - https://github.com/kubernetes/kubernetes/issues/71105 . @msau42 wdyt?\r\n\r\nWe do need this test for now because without it, we do not have coverage for a scenario where volume could already be mounted on the node. ",
        "createdAt" : "2019-02-15T19:00:09Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "8b298560-f93e-4100-b377-9a40ce3c5e88",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I am fine with fixing this test for now, but the conditions that it requires to validate the fix is inherently flaky and not reliable.  Can you add a comment here that we should consider adding a unit test if we want to reliably test this fix?",
        "createdAt" : "2019-02-15T20:00:18Z",
        "updatedAt" : "2019-02-15T20:57:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "571c7671-fa78-4f90-8f81-f0183122513d",
        "parentId" : "c86ba098-824b-45b1-9c2d-028387e37828",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Added a comment here. Also opened - https://github.com/kubernetes/kubernetes/issues/74145\r\n",
        "createdAt" : "2019-02-15T20:57:45Z",
        "updatedAt" : "2019-02-15T20:57:46Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "abb2fc656d9b62ed17d4d35651265b1e55a534f0",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +111,115 @@\t\tpvcClaims := []*v1.PersistentVolumeClaim{pvc}\n\n\t\t// The reason we use a node selector is because we do not want pod to move to different node when pod is deleted.\n\t\t// Keeping pod on same node reproduces the scenario that volume might already be mounted when resize is attempted.\n\t\t// We should consider adding a unit test that exercises this better."
  },
  {
    "id" : "3547365a-31a4-468b-a065-0051e425b61c",
    "prId" : 58794,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58794#pullrequestreview-91864186",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69135423-8d4c-4a86-b507-0579c1a93fb2",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Should you wait for a pod to be Running before resize? Expand controller may be faster than the pod.",
        "createdAt" : "2018-01-25T08:12:42Z",
        "updatedAt" : "2018-01-29T22:50:01Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "e214dea5-b12a-4bf4-8a4a-782ac3388f56",
        "parentId" : "69135423-8d4c-4a86-b507-0579c1a93fb2",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "The `CreateDeoployment` function waits for a pod to be running.",
        "createdAt" : "2018-01-25T10:59:24Z",
        "updatedAt" : "2018-01-29T22:50:01Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "20f61f31-21bd-4e25-af0a-70107733f0e2",
        "parentId" : "69135423-8d4c-4a86-b507-0579c1a93fb2",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "ack",
        "createdAt" : "2018-01-26T15:05:42Z",
        "updatedAt" : "2018-01-29T22:50:01Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "afeb53e5ee007592fb28da9c5d82c486edce2d75",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@\t\tdefer c.ExtensionsV1beta1().Deployments(ns).Delete(deployment.Name, &metav1.DeleteOptions{})\n\n\t\tBy(\"Expanding current pvc\")\n\t\tnewSize := resource.MustParse(\"6Gi\")\n\t\tpvc, err = expandPVCSize(pvc, newSize, c)"
  }
]