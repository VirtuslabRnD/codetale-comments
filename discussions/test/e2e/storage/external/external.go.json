[
  {
    "id" : "02efce68-046d-43b6-9157-f70673b65613",
    "prId" : 96042,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96042#pullrequestreview-537539921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b648cd4-6e18-4577-b076-99d2ea2339fb",
        "parentId" : null,
        "authorId" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "body" : "Can you put some comments for this map, with pointer to the timeout context struct",
        "createdAt" : "2020-11-24T02:52:36Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "tags" : [
        ]
      },
      {
        "id" : "dc3becf5-f236-4219-8a00-4fca1bbb15cc",
        "parentId" : "1b648cd4-6e18-4577-b076-99d2ea2339fb",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Fixed.",
        "createdAt" : "2020-11-24T14:28:39Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee082985c2d8568989400d214f56c020ec8b20f9",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +136,140 @@\t// The values specified here will override the default values specified in\n\t// the framework.TimeoutContext struct.\n\tTimeouts map[string]string\n}\n"
  },
  {
    "id" : "507414c6-871c-4503-b7c6-9fcf346e6e3f",
    "prId" : 96042,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96042#pullrequestreview-541389613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c44fb701-b0d4-4996-ad07-e36e1ec127cc",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "just want to make sure at this point, the returned timeouts will still be the default value?\r\nalso in the log, maybe mention returning default timeout?",
        "createdAt" : "2020-11-30T21:14:20Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "6d7d856f-a602-4952-b0d6-b5d6c50e4c62",
        "parentId" : "c44fb701-b0d4-4996-ad07-e36e1ec127cc",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Right, `timeouts` contains the default values at this point.\r\n\r\nExtended log message...",
        "createdAt" : "2020-12-01T00:00:12Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee082985c2d8568989400d214f56c020ec8b20f9",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +341,345 @@\t// Override the default timeouts with the custom ones\n\terr = json.Unmarshal(t, &timeouts)\n\tif err != nil {\n\t\tklog.Errorf(\"Could not unmarshal custom timeouts, will use default values: %v\", err)\n\t\treturn timeouts"
  },
  {
    "id" : "e324fe9b-6a22-4b20-895c-029286b205cb",
    "prId" : 96042,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96042#pullrequestreview-541378402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15c73d17-b1a3-4190-b89d-8cab14b5850f",
        "parentId" : null,
        "authorId" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "body" : "The map should be created with default values. And overwrite the values for the keys provided in the driver config.\r\n",
        "createdAt" : "2020-11-30T21:40:28Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "tags" : [
        ]
      },
      {
        "id" : "abb55778-1bf0-437c-b6ad-67237af797d7",
        "parentId" : "15c73d17-b1a3-4190-b89d-8cab14b5850f",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "The `timeouts` struct above contains the default timeouts. This map only contains the custom values provided by the driver config.\r\n\r\nNote that down below map is then merged with the struct, overwriting the default values with the custom ones.",
        "createdAt" : "2020-11-30T23:06:37Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "e988370a-213a-4b24-8c6a-8c44f2303f33",
        "parentId" : "15c73d17-b1a3-4190-b89d-8cab14b5850f",
        "authorId" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "body" : "Ah I see. thanks for pointing it out. missed it.",
        "createdAt" : "2020-11-30T23:32:48Z",
        "updatedAt" : "2020-12-02T19:15:54Z",
        "lastEditedBy" : "70e0dd56-8907-46d7-8381-c173d3c02d47",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee082985c2d8568989400d214f56c020ec8b20f9",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +320,324 @@\n\t// Use a temporary map to hold the timeouts specified in the manifest file\n\tc := make(map[string]time.Duration)\n\tfor k, v := range d.Timeouts {\n\t\tduration, err := time.ParseDuration(v)"
  },
  {
    "id" : "919d4f83-9fbd-4b3b-8a61-ef421661ed41",
    "prId" : 93196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93196#pullrequestreview-477279184",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b64681a5-717f-4c67-ae56-76967b8298e0",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Why is the empty string case on L252 mean that it's supported?",
        "createdAt" : "2020-08-27T22:19:29Z",
        "updatedAt" : "2020-08-28T17:45:24Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "112efcd0-e389-41ae-b21f-c313ed06b759",
        "parentId" : "b64681a5-717f-4c67-ae56-76967b8298e0",
        "authorId" : "192cd883-79e5-493d-a21c-4ddb67024b40",
        "body" : "git blame shows this commit https://github.com/kubernetes/kubernetes/commit/6644db9914379a4a7b3d3487b41b2010f226e4dc#diff-e5fc8d9911130b421b74b1ebc273f458R206\r\n\r\nwhich is the first commit for this file. I don't know, perhaps @pohly can help.\r\n",
        "createdAt" : "2020-08-28T00:55:22Z",
        "updatedAt" : "2020-08-28T17:45:24Z",
        "lastEditedBy" : "192cd883-79e5-493d-a21c-4ddb67024b40",
        "tags" : [
        ]
      },
      {
        "id" : "f8cd8196-446e-47b1-bd30-bb10dfe97d91",
        "parentId" : "b64681a5-717f-4c67-ae56-76967b8298e0",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "It might have been needed for some tests which don't set a type explicitly, but I don't remember exactly. Most of the documentation for `SnapshotType` is just of the variety \"XXXType is a type for XXX\", which doesn't really help: https://github.com/kubernetes/kubernetes/blob/6644db9914379a4a7b3d3487b41b2010f226e4dc/test/e2e/storage/testpatterns/testpattern.go#L48-L63\r\n",
        "createdAt" : "2020-08-28T06:41:08Z",
        "updatedAt" : "2020-08-28T17:45:24Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "673af97bcd7d5c7f6ebfc4b97dca4c8822875055",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +253,257 @@\t\tsupported = true\n\tcase testpatterns.DynamicCreatedSnapshot, testpatterns.PreprovisionedCreatedSnapshot:\n\t\tif d.SnapshotClass.FromName || d.SnapshotClass.FromFile != \"\" || d.SnapshotClass.FromExistingClassName != \"\" {\n\t\t\tsupported = true\n\t\t}"
  },
  {
    "id" : "2854092e-25b0-4e89-babc-e43a67652a00",
    "prId" : 88669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88669#pullrequestreview-366635787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c37415f-d963-4476-ab3b-adbdb867812b",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we also add a \"From Existing\" option, similar to Storage Class above?",
        "createdAt" : "2020-02-28T19:15:40Z",
        "updatedAt" : "2020-03-03T20:28:46Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "30c554bc-9c40-4762-9637-14cd45d32ea9",
        "parentId" : "5c37415f-d963-4476-ab3b-adbdb867812b",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "Good suggestion. I will work on it.",
        "createdAt" : "2020-02-28T19:33:27Z",
        "updatedAt" : "2020-03-03T20:28:46Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "401b85e547fb3325cf49f79142a37c3102e16ce8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\t// This can be used when the snapshot class is meant to have\n\t\t// additional parameters.\n\t\tFromFile string\n\n\t\t// FromExistingClassName specifies the name of a pre-installed"
  },
  {
    "id" : "4412cf78-d1ac-4aee-80e4-8cdf47467bf6",
    "prId" : 87793,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87793#pullrequestreview-352941304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "183d7e29-3ceb-4ad9-9e27-b58e052de407",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "It *might* be better to make the new field (`FromExistingClassName`) to have lower precedence over the existing ones (in case more than one is specified)... But I guess that's not a big deal.",
        "createdAt" : "2020-02-04T12:35:36Z",
        "updatedAt" : "2020-02-04T13:01:35Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c40daddb0c75a635609cff7d4e473cd88014c77",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +276,280 @@\t\tsc, err = f.ClientSet.StorageV1().StorageClasses().Get(d.StorageClass.FromExistingClassName, metav1.GetOptions{})\n\t\tframework.ExpectNoError(err, \"getting storage class %s\", d.StorageClass.FromExistingClassName)\n\tcase d.StorageClass.FromFile != \"\":\n\t\tvar ok bool\n"
  },
  {
    "id" : "d75463f3-dcab-4e20-b051-23f6a216d023",
    "prId" : 87793,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87793#pullrequestreview-353164979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37047585-ef2a-42f6-bcfe-6942230441a4",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "When `FromName` is used, the provisioner is no longer part of the SC name (it was before).\r\n\r\nThis shouldn't break anything, though...",
        "createdAt" : "2020-02-04T13:00:56Z",
        "updatedAt" : "2020-02-04T13:01:35Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "755524db-7063-4518-94c1-4b786de3b62e",
        "parentId" : "37047585-ef2a-42f6-bcfe-6942230441a4",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Yeah I think it's ok. It's kind of a moot point now since we added the csi fstype param that makes this test suite csi-only, but if you did want to run this against an in-tree volume type, then the \"~\" in the in-tree provisioner name would cause storageclass creation to fail due to invalid character.",
        "createdAt" : "2020-02-04T17:30:13Z",
        "updatedAt" : "2020-02-04T17:30:13Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c40daddb0c75a635609cff7d4e473cd88014c77",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +300,304 @@\t\tsc.Parameters[\"csi.storage.k8s.io/fstype\"] = fsType\n\t}\n\treturn testsuites.GetStorageClass(sc.Provisioner, sc.Parameters, sc.VolumeBindingMode, f.Namespace.Name, \"e2e-sc\")\n}\n"
  },
  {
    "id" : "d09b8a96-fb6c-4f4a-aa64-f22952b34221",
    "prId" : 86077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86077#pullrequestreview-330590051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b08cb8-fd47-4aa4-8c99-701cb3277b2d",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "DriverDefinition -> driverDefinition?",
        "createdAt" : "2019-12-11T14:41:33Z",
        "updatedAt" : "2019-12-11T14:42:16Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "38d360e2-7d90-4a27-9ceb-729fff9093f9",
        "parentId" : "09b08cb8-fd47-4aa4-8c99-701cb3277b2d",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Oh, it was in the original code too. Nevermind.",
        "createdAt" : "2019-12-11T14:43:15Z",
        "updatedAt" : "2019-12-11T14:43:15Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cc926f5efb18ac99f99c0d223040e6bd5f8070b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +40,44 @@)\n\n// DriverDefinition needs to be filled in via a .yaml or .json\n// file. Its methods then implement the TestDriver interface, using\n// nothing but the information in this struct."
  },
  {
    "id" : "a0851589-9027-445c-9abc-e97cd3ffe7b0",
    "prId" : 78306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78306#pullrequestreview-298132880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b68eacdb-8d8c-44f1-b1db-f793f09ec80f",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "`ClaimSize` must be replaced with `SupportedSizeRange` to match the field name.\r\n",
        "createdAt" : "2019-10-07T13:41:00Z",
        "updatedAt" : "2019-10-07T17:34:11Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5c14323286d26490f8c12884fb1d7f36e2d9eeb",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +206,210 @@\t// SupportedSizeRange defines the desired size of dynamically\n\t// provisioned volumes.\n\tSupportedSizeRange volume.SizeRange\n\n\t// ClientNodeName selects a specific node for scheduling test pods."
  },
  {
    "id" : "1c959f32-0895-4bfd-ab54-1d18b8ae0137",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-210402228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "006171c9-6a7a-4cc8-8832-150bda00c9fe",
        "parentId" : null,
        "authorId" : "82a1304b-df47-4b74-9e13-c485af95af2f",
        "body" : "Can we add a README under .../storage/external?",
        "createdAt" : "2019-01-18T21:32:49Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "82a1304b-df47-4b74-9e13-c485af95af2f",
        "tags" : [
        ]
      },
      {
        "id" : "7c2ad6b6-0921-475f-81ec-a109e5e3da7a",
        "parentId" : "006171c9-6a7a-4cc8-8832-150bda00c9fe",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "+1, an explanation of how to use this and maybe even a link to an example (when there is one) would be very helpful",
        "createdAt" : "2019-02-26T22:23:03Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "3e991972-0c46-4b54-95af-fa237ca92a55",
        "parentId" : "006171c9-6a7a-4cc8-8832-150bda00c9fe",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "fyi, @wongma7 and @mathu97 are working on documentation/example",
        "createdAt" : "2019-02-26T22:50:31Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "25e12a4b-7acb-4cee-9897-464b9a99cc56",
        "parentId" : "006171c9-6a7a-4cc8-8832-150bda00c9fe",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "That's good, but I'll also add short README here.\r\n",
        "createdAt" : "2019-02-27T10:11:24Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "57c1f851-a572-4217-afcb-0171c660c39c",
        "parentId" : "006171c9-6a7a-4cc8-8832-150bda00c9fe",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done.",
        "createdAt" : "2019-03-04T22:29:27Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2019 The Kubernetes Authors.\n"
  },
  {
    "id" : "984a12e4-950f-42bd-81d0-4e573afb4630",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-208427839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14bd73af-eb83-4866-93e0-c483ced89b95",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "is its \"*only* needed for deserialization which isnt done\" then why do we need it at all?",
        "createdAt" : "2019-02-26T22:28:49Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "89725213-1707-4f8d-a720-9e4431e4d253",
        "parentId" : "14bd73af-eb83-4866-93e0-c483ced89b95",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "`driverDefinition` must implement the interface, otherwise it cannot be passed to `runtime.DecodeInto`. But `runtime.DecodeInto` then never calls these methods.\r\n\r\nIf there is a better method for parsing a .yaml or .json file into a normal struct, then I am all ears. ",
        "createdAt" : "2019-02-27T09:56:25Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +121,125 @@// deserialization of it and therefore none of the methods below need\n// an implementation.\nvar _ runtime.Object = &driverDefinition{}\n\n// DriverDefinition needs to be filled in via a .yaml or .json"
  },
  {
    "id" : "eed0ad8b-6075-407c-b587-156cc3bf74eb",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-210962478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I think the volume types supported should also be defined by the external driver. Some may support `Block` or `Snapshots` in the future and you'd probably want to be able to toggle those on/off through the `DriverInfo` definition or some other method.",
        "createdAt" : "2019-02-26T22:34:39Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "2f4e4309-c5dc-4185-b37d-5231daecc26e",
        "parentId" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "This isn't about snapshot or blocks. Other `pattern.VolType` values are currently:\r\n- PreprovisionedPV\r\n- InlineVolume\r\n\r\nI think those cannot be tested with a generic test driver.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/076af3d1b5cc1c368dd00f64ceefda8a87c1dfc7/test/e2e/storage/testpatterns/testpattern.go#L36-L46\r\n\r\nBut snapshots is something that can be added. It's not in the PR yet because it was added to the `TestDriver` interface after my initial version of this PR.\r\n\r\nI think block device don't need any special support. It's a capability, and that can be set already.\r\n",
        "createdAt" : "2019-02-27T10:04:21Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "d2346a4b-ea4c-486b-8036-cbc235bac797",
        "parentId" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I've added snapshotting support. I've tried it manually and the test ran, but failed because my cluster lacked some feature gate:\r\n```\r\n• Failure in Spec Teardown (AfterEach) [365.125 seconds]\r\nExternal Storage [Driver: csi-hostpath]\r\n/nvme/gopath/src/k8s.io/kubernetes/test/e2e/storage/external/external.go:78\r\n  [Testpattern: Dynamic PV (default fs)] provisioning\r\n  /nvme/gopath/src/k8s.io/kubernetes/test/e2e/storage/testsuites/base.go:75\r\n    should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [AfterEach]\r\n    /nvme/gopath/src/k8s.io/kubernetes/test/e2e/storage/testsuites/provisioning.go:202\r\n\r\n    Expected error:\r\n        <*errors.StatusError | 0xc0005290e0>: {\r\n            ErrStatus: {\r\n                TypeMeta: {Kind: \"\", APIVersion: \"\"},\r\n                ListMeta: {SelfLink: \"\", ResourceVersion: \"\", Continue: \"\"},\r\n                Status: \"Failure\",\r\n                Message: \"PersistentVolumeClaim \\\"pvc-6xw22\\\" is invalid: spec.dataSource: Forbidden: VolumeSnapshotDataSource is disabled by feature-gate\",\r\n                Reason: \"Invalid\",\r\n                Details: {\r\n                    Name: \"pvc-6xw22\",\r\n                    Group: \"\",\r\n                    Kind: \"PersistentVolumeClaim\",\r\n                    UID: \"\",\r\n                    Causes: [\r\n                        {\r\n                            Type: \"FieldValueForbidden\",\r\n                            Message: \"Forbidden: VolumeSnapshotDataSource is disabled by feature-gate\",\r\n                            Field: \"spec.dataSource\",\r\n                        },\r\n                    ],\r\n                    RetryAfterSeconds: 0,\r\n                },\r\n                Code: 422,\r\n            },\r\n        }\r\n        PersistentVolumeClaim \"pvc-6xw22\" is invalid: spec.dataSource: Forbidden: VolumeSnapshotDataSource is disabled by feature-gate\r\n    not to have occurred\r\n```",
        "createdAt" : "2019-03-04T22:30:53Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "ec5a68aa-0190-400f-9f91-9de814a432b8",
        "parentId" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "Why not PreprovisionedPV? Like StorageClass, there could be a PersistentVolume field with FromName or FromFile and its source could be returned in GetPersistentVolumeSource. That said, other than maybe for the nfs and iscsi csi drivers IDK if it will be useful",
        "createdAt" : "2019-03-05T17:15:02Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "a9ae63f1-082f-4eb2-903f-35d98c93adc3",
        "parentId" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "It might be useful for CSI drivers in progress. e.g. I haven't implemented CreateVolume yet but want to make sure publish works.",
        "createdAt" : "2019-03-05T17:16:18Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "4e1560f3-ba57-4d00-bb57-6d9e47f02eb6",
        "parentId" : "5ce9b811-36ee-4773-b498-2b47e2a0355c",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "It gets complicated if we want to add test cases that create multiple volumes.  Dynamic provisioning is very useful for writing test cases like that. \r\n\r\nBut maybe those test cases can just be gated based on if the driver supports Preprovisioned PVs.\r\n\r\nWe also need to think about if we want to support inline ephemeral CSI volumes now too.  Most of our test cases are specific to PVs",
        "createdAt" : "2019-03-05T22:59:39Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@func (d *driverDefinition) SkipUnsupportedTest(pattern testpatterns.TestPattern) {\n\tsupported := false\n\t// TODO (?): add support for more volume types\n\tswitch pattern.VolType {\n\tcase testpatterns.DynamicPV:"
  },
  {
    "id" : "9944509c-4590-4213-bb74-44d7ae1e3741",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-210370701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dd595e7-9774-4982-a050-2e817393e056",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "How can this be used more than once? Do you just define the flag multiple times in the command line and go just figures it out that you want to init multiple versions of this package? \r\n\r\nIt's not clear to me how to invoke this test package, what kind of parameter to pass in to `testDriverParameter` since it seems to be just an empty struct.\r\n\r\nI think these are all questions that could be answered in a `README`. ",
        "createdAt" : "2019-02-26T22:39:35Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "c4714bc9-1e53-46f0-bc54-83c00b897aee",
        "parentId" : "3dd595e7-9774-4982-a050-2e817393e056",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "maybe another way to do this would be that `testDriverParameter` could point to the file that defines the `DriverInfo`? It seems like maybe thats the idea but i'm not sure why we're using an empty struct that might be implementing an interface (I assume thats where `Set` comes from even though theres no static interface check). It's just a little bit confusing to me",
        "createdAt" : "2019-02-26T22:46:54Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "cb001211-8076-4d5c-a880-071c44bb9de2",
        "parentId" : "3dd595e7-9774-4982-a050-2e817393e056",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Yes, `-storage.testdriver` can be given more than once. Each parameter instantiates the testsuite for another driver. The mechanism for doing that is the `testDriverParameter` and its implementation of the `flag.Value` interface. Let me add the interface check and some comments to make this clearer.\r\n\r\nIf we just stored the parameter instead of handling it right away, then a) the parameter can only be used once (at least when using a plain string value) and more importantly, b) we have no way  of hooking into the process init between \"parsing parameters\" and \"test suite starts\", i.e. we cannot define the tests for that driver (or drivers).",
        "createdAt" : "2019-02-27T10:10:18Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "bf5a228d-5f24-4809-a79b-b500d2944b92",
        "parentId" : "3dd595e7-9774-4982-a050-2e817393e056",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Added an explanation.\r\n",
        "createdAt" : "2019-03-04T21:16:00Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\nfunc init() {\n\tflag.Var(testDriverParameter{}, \"storage.testdriver\", \"name of a .yaml or .json file that defines a driver for storage testing, can be used more than once\")\n}\n"
  },
  {
    "id" : "363419fa-791d-4945-a7a3-4b47b67c71b7",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-211084849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04747cd1-2f25-4939-88fa-1fa6b2d91839",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you clarify in the comments that this well generate a storageclass with empty parameters?",
        "createdAt" : "2019-03-05T22:49:11Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "07cec48a-8759-4ad3-a67a-8af43a6fce1e",
        "parentId" : "04747cd1-2f25-4939-88fa-1fa6b2d91839",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done. I also added that the `FromFile` option is for the case where parameters are needed.",
        "createdAt" : "2019-03-06T07:58:08Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@\t\t// class with DriverInfo.Name as provisioner and no\n\t\t// parameters.\n\t\tFromName bool\n\n\t\t// FromFile is used only when FromName is false.  It"
  },
  {
    "id" : "8493687a-cd00-45dc-bc98-2ff5b51e618f",
    "prId" : 72836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72836#pullrequestreview-211087311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00f133e0-c9c8-4549-bfb6-a7500ae9956e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Clarify this is only needed for drivers like hostpath AND do not support topology",
        "createdAt" : "2019-03-05T22:56:13Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "563df4f4-923b-4d54-bcb7-8f85da3b2dfb",
        "parentId" : "00f133e0-c9c8-4549-bfb6-a7500ae9956e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Actually do we want to allow this? Can we just require that drivers implement topology if they have such a constraint?",
        "createdAt" : "2019-03-05T22:56:46Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "120dac3f-c7f2-4b19-9319-a3329b854cae",
        "parentId" : "00f133e0-c9c8-4549-bfb6-a7500ae9956e",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "We do need this option right now ourselves for testing the hostpath driver as part of the upcoming kubernetes-csi CI. It's okay to explain that it shouldn't be needed and I have added a comment about it, but we should still have that option.\r\n\r\n",
        "createdAt" : "2019-03-06T08:05:54Z",
        "updatedAt" : "2019-03-06T21:06:51Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "6644db9914379a4a7b3d3487b41b2010f226e4dc",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +171,175 @@\tClaimSize string\n\n\t// ClientNodeName selects a specific node for scheduling test pods.\n\t// Can be left empty. Most drivers should not need this and instead\n\t// use topology to ensure that pods land on the right node(s)."
  }
]