[
  {
    "id" : "267693ef-e610-460e-8d13-1c15206284b7",
    "prId" : 55845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55845#pullrequestreview-77545743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21858f96-6478-46b7-bdc1-fd37dfe21b56",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Please move all files `test/e2e/storage/vsphere_*` into a new package `test/e2e/storage/vsphere/`. The tests that need the vsphere specific code should import the package. The new package should only publically expose the interfaces and methods that are required by tests, everything else in the package should be package private.",
        "createdAt" : "2017-11-17T18:43:35Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "b9c99736-3b50-4d86-a584-8c1228e73cbb",
        "parentId" : "21858f96-6478-46b7-bdc1-fd37dfe21b56",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "Hi Saad,\r\n\r\nThanks for the review.\r\nWe already have issue open for this change. \r\nhttps://github.com/vmware/kubernetes/issues/353\r\n\r\nThere are few other things also needed like moving logic where ENV vars are read etc.\r\nPlease take a look at the issue for more details.\r\n",
        "createdAt" : "2017-11-17T19:15:10Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      },
      {
        "id" : "b3963140-1298-499c-9334-32506a61a7d9",
        "parentId" : "21858f96-6478-46b7-bdc1-fd37dfe21b56",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack. Please prioritize that higher, this code is making the code base messy. CC @jeffvance \r\nYou don't have to move the tests themselves as long as the tests apply to multiple cloud providers or storage backends, but you should have a separate package for any vmware specific code.",
        "createdAt" : "2017-11-17T19:59:07Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e1da68d2f93f8becc903f84f4da515989eaa69",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\t}\n\n\t\tvsp, err := getVSphere(client)\n\t\tExpect(err).NotTo(HaveOccurred())\n"
  },
  {
    "id" : "5f73055a-ce47-47d1-9ce2-1db660b41fdf",
    "prId" : 54018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54018#pullrequestreview-70408968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "565ebbe3-8eab-4557-9b9a-7f52ca7e06be",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "good err msg!",
        "createdAt" : "2017-10-19T02:24:19Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3e28c8836cd64d2faea8843c9f90d780b2f634",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\tnodes = framework.GetReadySchedulableNodesOrDie(client)\n\t\tif len(nodes.Items) < 2 {\n\t\t\tframework.Skipf(\"Requires at least %d nodes (not %d)\", 2, len(nodes.Items))\n\t\t}\n\t\t// Verify volume count specified by the user can be satisfied"
  },
  {
    "id" : "e2d6221a-a829-49a5-9b1c-1031a0588473",
    "prId" : 54018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54018#pullrequestreview-74299641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb47b833-3451-4551-9103-08726dfc4517",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "doesn't this channel need to be explicitly closed to end the loop?",
        "createdAt" : "2017-10-19T02:41:54Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "b46698b7-1d8d-4fda-bcff-98c360c2e1f0",
        "parentId" : "cb47b833-3451-4551-9103-08726dfc4517",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "You needn't close every channel when you've finished with it. It's only necessary to close a channel when it is important to tell the receiving go routines that all data have been sent. A channel that the garbage collector determines to be unreachable will have its resources reclaimed whether or not it is closed.\r\n\r\nHowever just to not end up consuming more resources, I have explicitly closed the channel.",
        "createdAt" : "2017-11-06T00:09:10Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3e28c8836cd64d2faea8843c9f90d780b2f634",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +162,166 @@\t\t// Get the list of all volumes attached to each node from the go routines by reading the data from the channel\n\t\tfor instanceCount := 0; instanceCount < numberOfInstances; instanceCount++ {\n\t\t\tfor node, volumeList := range <-nodeVolumeMapChan {\n\t\t\t\tnodeVolumeMap[k8stypes.NodeName(node)] = append(nodeVolumeMap[k8stypes.NodeName(node)], volumeList...)\n\t\t\t}"
  },
  {
    "id" : "9ef1171c-01c9-432e-8531-899e11542af8",
    "prId" : 54018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54018#pullrequestreview-74886112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2fd4fbf-b73f-4ef3-b0aa-74863f3e2f2c",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "where is the sanity checking on `numOfInstances`? It could be larger than `volumeCount`. Or it could be too large for the test env to create that many go routines.",
        "createdAt" : "2017-11-06T20:54:56Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "a66606af-1d46-4d62-bf5b-cd6860e4ccb0",
        "parentId" : "a2fd4fbf-b73f-4ef3-b0aa-74863f3e2f2c",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Fixed!",
        "createdAt" : "2017-11-07T19:53:32Z",
        "updatedAt" : "2017-11-07T23:31:10Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3e28c8836cd64d2faea8843c9f90d780b2f634",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\tExpect(err).NotTo(HaveOccurred())\n\n\t\tvolumeCountPerInstance := volumeCount / numberOfInstances\n\t\tfor instanceCount := 0; instanceCount < numberOfInstances; instanceCount++ {\n\t\t\tif instanceCount == numberOfInstances-1 {"
  },
  {
    "id" : "41de664f-6b7b-4592-99b5-a024d97a585d",
    "prId" : 54018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54018#pullrequestreview-75180660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7226e3d-9f3b-4f3d-b512-e165f6db3486",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "\"less than or equal to\" based on the condition.",
        "createdAt" : "2017-11-08T17:20:21Z",
        "updatedAt" : "2017-11-08T17:20:21Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "fb24204d-77fd-4e61-b101-e2fca1987e12",
        "parentId" : "a7226e3d-9f3b-4f3d-b512-e165f6db3486",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "volumeCount is not validated to be within a required range, thus, this test for numberOfInstances is not reliable. In general, user input should be validated to prevent test flakes. It is ok with me if validating these env var inputs is addressed across all vshpere tests in a separate pr.",
        "createdAt" : "2017-11-08T17:23:57Z",
        "updatedAt" : "2017-11-08T17:23:57Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b3e28c8836cd64d2faea8843c9f90d780b2f634",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +93,97 @@\t\tExpect(err).NotTo(HaveOccurred(), \"Error Parsing VCP_SCALE_INSTANCES\")\n\t\tExpect(numberOfInstances > 5).NotTo(BeTrue(), \"Maximum allowed instances are 5\")\n\t\tExpect(numberOfInstances > volumeCount).NotTo(BeTrue(), \"Number of instances should be less than the total volume count\")\n\n\t\tpolicyName = os.Getenv(\"VSPHERE_SPBM_POLICY_NAME\")"
  }
]