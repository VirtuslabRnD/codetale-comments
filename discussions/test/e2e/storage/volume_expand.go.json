[
  {
    "id" : "e792c2de-ba3c-459e-90e1-b8df0e707d44",
    "prId" : 77755,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77755#pullrequestreview-242778641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f394c141-9874-4dee-8444-53e2d3722aa8",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Can you please also do `df` in the pod to check the size is actually bigger?",
        "createdAt" : "2019-05-28T16:17:32Z",
        "updatedAt" : "2019-06-03T16:29:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f62e3fbe8a3b9e8224a1720df43dc10606659c1",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +206,210 @@\n\t\tpvcConditions := pvc.Status.Conditions\n\t\tgomega.Expect(len(pvcConditions)).To(gomega.Equal(0), \"pvc should not have conditions\")\n\t})\n"
  },
  {
    "id" : "3eb286a8-0b7e-4f3b-b6c4-872fd1136187",
    "prId" : 77317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77317#pullrequestreview-232820606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5496dfe-24f5-4b94-9d71-8f866bd74216",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "fyi, when moving these tests to the framework, they will need to be able to handle delayed binding, so the pod needs to be created first.",
        "createdAt" : "2019-05-02T01:36:11Z",
        "updatedAt" : "2019-05-02T01:36:11Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0eb68c5a229e373a2cab8c2266b099d58a5e474e",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +168,172 @@\t\tpvc, storageClassVar, err = setupFunc(true /*allowExpansion*/, true /*blockVolume*/)\n\n\t\tBy(\"Waiting for pvc to be in bound phase\")\n\t\tpvcClaims := []*v1.PersistentVolumeClaim{pvc}\n\t\tpvs, err := framework.WaitForPVClaimBoundPhase(c, pvcClaims, framework.ClaimProvisionTimeout)"
  },
  {
    "id" : "86f72008-16fb-4648-b662-535f7710bee3",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80628643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af0e5880-6c8a-4d1b-bfa2-8632eeddee3b",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "maybe this variable is not needed. Can you cast as: \r\n`WaitForPVClaimBoundPhase(c, []*v1.PersistentVolumeClaim(pvc), ...`",
        "createdAt" : "2017-11-30T23:15:54Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "e1853901-b360-4948-9d37-f6c593814448",
        "parentId" : "af0e5880-6c8a-4d1b-bfa2-8632eeddee3b",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I use this variable 3 other places and I think it saves typing effort and accidental errors to have it in a variable.",
        "createdAt" : "2017-12-01T21:40:03Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@\tIt(\"Verify if editing PVC allows resize\", func() {\n\t\tBy(\"Waiting for pvc to be in bound phase\")\n\t\tpvcClaims := []*v1.PersistentVolumeClaim{pvc}\n\t\tpvs, err := framework.WaitForPVClaimBoundPhase(c, pvcClaims, framework.ClaimProvisionTimeout)\n\t\tExpect(err).NotTo(HaveOccurred(), \"Failed waiting for PVC to be bound %v\", err)"
  },
  {
    "id" : "317f4d5b-1a74-4b9f-9a6f-a89711a48bf3",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80628960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "459080e8-72f4-4955-a6e7-133124a78a17",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "The wait could be moved to the `BeforeEach` since it is a step related to the pvc creation. Also, if future `It` blocks are added it is likely these new tests would also need to wait for the claim to bind.",
        "createdAt" : "2017-11-30T23:19:01Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "f9f44577-7586-4d56-bea0-65b4f8cabddd",
        "parentId" : "459080e8-72f4-4955-a6e7-133124a78a17",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Not massively disagree but lets refactor this when another block gets added. ",
        "createdAt" : "2017-12-01T21:41:26Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@\t\tBy(\"Waiting for pvc to be in bound phase\")\n\t\tpvcClaims := []*v1.PersistentVolumeClaim{pvc}\n\t\tpvs, err := framework.WaitForPVClaimBoundPhase(c, pvcClaims, framework.ClaimProvisionTimeout)\n\t\tExpect(err).NotTo(HaveOccurred(), \"Failed waiting for PVC to be bound %v\", err)\n\t\tExpect(len(pvs)).To(Equal(1))"
  },
  {
    "id" : "e4a9031f-2202-42be-a09a-838091071f03",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80629872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bfb11f8-18f4-4367-be90-d2e3d769b272",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "is DeepCopy needed due to caching? Curious why the passed in *pvc cannot be directly updated?",
        "createdAt" : "2017-11-30T23:39:55Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "2d6d3e51-7ac1-4ab2-a843-1e45ee9a3b12",
        "parentId" : "4bfb11f8-18f4-4367-be90-d2e3d769b272",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I am using deepcopy because, we are modifying the pvc in test case. If we didn't do deepcopy then test will check local modification and pass, whereas what I want to test is - if what I sent to api-server was accepted and pvc indeed reflects new size. ",
        "createdAt" : "2017-12-01T21:45:23Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@func expandPVCSize(origPVC *v1.PersistentVolumeClaim, size resource.Quantity, c clientset.Interface) (*v1.PersistentVolumeClaim, error) {\n\tpvcName := origPVC.Name\n\tupdatedPVC := origPVC.DeepCopy()\n\n\twaitErr := wait.PollImmediate(resizePollInterval, 30*time.Second, func() (bool, error) {"
  },
  {
    "id" : "35968d41-9f34-4f33-b012-ea8f0e95dafd",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80651311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16ea1b26-7b53-4694-81e3-d417906e56c5",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "is there value in exporting this func to other test packages?",
        "createdAt" : "2017-11-30T23:46:39Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "6cbb426a-2c28-4adf-94dd-9665f3c7738a",
        "parentId" : "16ea1b26-7b53-4694-81e3-d417906e56c5",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "other test packages? It is in small case, how can this be exported?",
        "createdAt" : "2017-12-01T21:47:50Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "609c627f-f2b6-4497-b334-5b573021f28d",
        "parentId" : "16ea1b26-7b53-4694-81e3-d417906e56c5",
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "I was thinking that `waitForControllerVolumeResize` and the other wait func might be generally useful e2e functions. If so, they should be public and moved to a common utility file (eg. framework/util.go or storage/pv-util.go)...",
        "createdAt" : "2017-12-01T22:34:35Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "a63d2252-44e7-459f-9277-08cc5d6649c8",
        "parentId" : "16ea1b26-7b53-4694-81e3-d417906e56c5",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Oh okay, I misunderstood. May be we can do this later as scope of resizing covers more section of e2e tests. ",
        "createdAt" : "2017-12-01T23:42:46Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@}\n\nfunc waitForControllerVolumeResize(pvc *v1.PersistentVolumeClaim, c clientset.Interface) error {\n\tpvName := pvc.Spec.VolumeName\n\treturn wait.PollImmediate(resizePollInterval, totalResizeWaitPeriod, func() (bool, error) {"
  },
  {
    "id" : "6b6dc11c-adef-4802-9cc4-f7447b6ceec9",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80630548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8205e76e-62f5-4b03-839f-707081d56c01",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "and only 1? Is there a scenario where the pvc has >1 Conditions?",
        "createdAt" : "2017-11-30T23:50:49Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "865cb048-30df-4613-bc8e-1f63369de21b",
        "parentId" : "8205e76e-62f5-4b03-839f-707081d56c01",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Yes PVC will have only 1 condition. If pvc has more than 1 condition, something is wrong and in that case we may as well fail.",
        "createdAt" : "2017-12-01T21:48:20Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@\n\t\tinProgressConditions := pvc.Status.Conditions\n\t\tExpect(len(inProgressConditions)).To(Equal(1), \"pvc must have resize condition\")\n\t\tExpect(inProgressConditions[0].Type).To(Equal(v1.PersistentVolumeClaimResizing), \"pvc must have resizing condition\")\n"
  },
  {
    "id" : "49855b6d-779a-4b76-82b4-ce1b0555fcc1",
    "prId" : 56639,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56639#pullrequestreview-80631352",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbe8cb5b-d113-4c3d-be9d-c98359d17d2b",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "no DeepCopy needed for this case?",
        "createdAt" : "2017-12-01T00:01:36Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "ad5d7184-57ff-4f90-85e5-90cc25ad993f",
        "parentId" : "cbe8cb5b-d113-4c3d-be9d-c98359d17d2b",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Yep, no DeepCopy needed here - because we are not modifying the pvc in the test",
        "createdAt" : "2017-12-01T21:51:40Z",
        "updatedAt" : "2017-12-01T23:58:15Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "25050da75837b2aaee8d87bbdcef8498a21f610f",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +185,189 @@\nfunc waitForFSResize(pvc *v1.PersistentVolumeClaim, c clientset.Interface) (*v1.PersistentVolumeClaim, error) {\n\tvar updatedPVC *v1.PersistentVolumeClaim\n\twaitErr := wait.PollImmediate(resizePollInterval, totalResizeWaitPeriod, func() (bool, error) {\n\t\tvar err error"
  }
]