[
  {
    "id" : "fa7a9b94-500e-43bb-9005-9bc8b6eb064e",
    "prId" : 93567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93567#pullrequestreview-463172948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb806b02-ee1b-433a-a18c-65acbea948d6",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "This will race with internal A/D controller that may pick the same device and produce very surprising and hard to debug results in an unrelated test. Even if the new test was `[Serial]`, it may conflict with a regular cluster operation - something in the cluster may want to start a real non-testing Pod with a PV. To make it 99% bulletproof, you would need to cordon the node. And even in that case, a DaemonSet or directly scheduled Pod may pop up there.\r\n\r\nLooking at [AWS docs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html), is `/dev/sd[a-z]` an option? Kubernetes should not use those. Of course, that may race with cluster admin / other tools attaching other volumes at that time, but I can live with it.",
        "createdAt" : "2020-08-06T12:41:45Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "12e551cc-fae3-4408-9a39-36327f1d1cb4",
        "parentId" : "bb806b02-ee1b-433a-a18c-65acbea948d6",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yes, that is a problem but even code in A/D controller is not 100% bulletproof and if k-c-m active leader switches to another node then all the state in A/D controller is lost and if `describeInstance` lies about device availability - we will endup using a device that is already in use.  \r\n\r\nFor this reason - we still see occasional \"attaching\" stuck issues on AWS and when this happens, node is marked as tainted and cluster administrator must take manual steps to make the node available.  I think - in worst case when this happens in e2e then the test will fail.  ",
        "createdAt" : "2020-08-06T15:38:01Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "be71d016-ef3a-4f8c-959a-b8fe7151a16a",
        "parentId" : "bb806b02-ee1b-433a-a18c-65acbea948d6",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Ack",
        "createdAt" : "2020-08-07T09:33:14Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "f91d448e1bb0894dc36e306374faa21b3a878128",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\t}\n\n\tdevice, err := ebs.findFreeDevice(instance)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"error finding free device on node %s: %v\", nodeName, err)"
  },
  {
    "id" : "a88079dd-a177-4756-a5d8-67f394d3fc90",
    "prId" : 93567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93567#pullrequestreview-463173363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c08d958c-324d-4e55-9991-b10a509825fc",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "This function has all the issues that we worked around in in-tree volume plugin to fix test flakes - it expects that AWS API does not lie.",
        "createdAt" : "2020-08-06T12:51:19Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "e351f1b5-5c84-4804-836f-90160c475c3c",
        "parentId" : "c08d958c-324d-4e55-9991-b10a509825fc",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "hmm, not all of the issues though. In e2e we are guaranteed to enter `waitForAttach` only after a successful `AttachDisk` and rest of the issues we have worked around in-tree code is around detach. So IMO we should be okay. In worst case, the test will fail. ",
        "createdAt" : "2020-08-06T15:43:12Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "594a34c4-4f67-4dac-aa1a-4b5e69f131b7",
        "parentId" : "c08d958c-324d-4e55-9991-b10a509825fc",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Ack",
        "createdAt" : "2020-08-07T09:33:50Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "f91d448e1bb0894dc36e306374faa21b3a878128",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@}\n\nfunc (ebs *EBSUtil) waitForAttach(volumeID string) error {\n\tbackoff := wait.Backoff{\n\t\tDuration: volumeAttachmentStatusPollDelay,"
  },
  {
    "id" : "de937d6b-fd63-4916-a7a8-9d3cc15c789e",
    "prId" : 93567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93567#pullrequestreview-462639853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6bfa25b-a3a8-4465-a068-36a19e61a862",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "It may use just-released device name that has proven to be problematic, https://aws.amazon.com/premiumsupport/knowledge-center/ebs-stuck-attaching/",
        "createdAt" : "2020-08-06T12:53:58Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "93825ab6-78ca-4aea-882e-84253d44fa7b",
        "parentId" : "c6bfa25b-a3a8-4465-a068-36a19e61a862",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "same comment as above.",
        "createdAt" : "2020-08-06T15:39:03Z",
        "updatedAt" : "2020-08-07T12:23:43Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "f91d448e1bb0894dc36e306374faa21b3a878128",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +89,93 @@}\n\nfunc (ebs *EBSUtil) findFreeDevice(instance *ec2.Instance) (string, error) {\n\tdeviceMappings := map[string]string{}\n"
  }
]