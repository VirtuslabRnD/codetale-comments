[
  {
    "id" : "ef322b74-aea3-47a8-ac2b-8c5a526d246c",
    "prId" : 93126,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93126#pullrequestreview-475067921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5b7c119-d9fe-4aad-ac25-9e9a44b5c5a1",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "how did this test work earlier ? It seems like the test was always returning the wrong limits unless the csDriver being looked at was first one ? Should the test be modified to catch this properly ? ",
        "createdAt" : "2020-08-26T00:15:36Z",
        "updatedAt" : "2020-08-26T00:15:37Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "339ed92ba8393e9d4f276c039a0269b241e765f8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +352,356 @@\t\tfor i, c := range csiNode.Spec.Drivers {\n\t\t\tif c.Name == driverInfo.Name || c.Name == config.GetUniqueDriverName() {\n\t\t\t\tcsiDriver = &csiNode.Spec.Drivers[i]\n\t\t\t\tbreak\n\t\t\t}"
  },
  {
    "id" : "44197712-31ac-4c43-8462-496dfe14534d",
    "prId" : 88218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88218#pullrequestreview-372287424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "182ab127-6c1b-4f83-9e01-0817203ebc16",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think the failing hostpath volume limits testcase is a real failure.\r\n\r\nThis test was previously hardcoding a nodeName in the selection. However, now it passes in an empty NodeSelection. To retain the behavior, the `selection` above should have NodeName set.",
        "createdAt" : "2020-03-10T20:14:12Z",
        "updatedAt" : "2020-03-12T06:15:11Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee41c6b1a4912c6a0b6a8f8da059f8ab6f0ba1b1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\t\tPVCs:          l.pvcs,\n\t\t\tSeLinuxLabel:  e2epv.SELinuxLabel,\n\t\t\tNodeSelection: selection,\n\t\t}\n\t\tpod, err := e2epod.MakeSecPod(&podConfig)"
  },
  {
    "id" : "87c9185a-94e8-449f-87ae-98bf7c50d066",
    "prId" : 83568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83568#pullrequestreview-308551420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "077c42eb-abf1-47eb-980e-ef8f0e3962ef",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Some drivers have their name updated (e.g., `csi-hostpath` to `csi-hostpath-namespace`).",
        "createdAt" : "2019-10-29T14:24:38Z",
        "updatedAt" : "2019-11-12T08:44:17Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a59abc3cc381f563743d60ac54ddc922b4e007b3",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +333,337 @@\t\tvar csiDriver *storagev1.CSINodeDriver\n\t\tfor _, c := range csiNode.Spec.Drivers {\n\t\t\tif c.Name == driverInfo.Name || c.Name == config.GetUniqueDriverName() {\n\t\t\t\tcsiDriver = &c\n\t\t\t\tbreak"
  },
  {
    "id" : "14f5676f-5e42-4f15-8559-e0a4a8fb6c22",
    "prId" : 80247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80247#pullrequestreview-275909521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9eaa324e-2442-45f6-b981-ffe232d2dd88",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "would this test also be considered `[Disruptive]` as it would prevent further scheduling of pods using disks onto this node?",
        "createdAt" : "2019-08-15T20:48:07Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "dcb742e0-914e-4f79-8997-821d6c004bf3",
        "parentId" : "9eaa324e-2442-45f6-b981-ffe232d2dd88",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "IMO, the test does not break anything (e.g. it does not kill kubelet). It just needs to be alone on a node and that's why we have `[Serial]`.",
        "createdAt" : "2019-08-16T11:54:18Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d09919e81c7a6ad69309fcc609bb88045fd9e8",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@\t// that says it's unschedulable because of volume limit.\n\t// BEWARE: the test may create lot of volumes and it's really slow.\n\tginkgo.It(\"should support volume limits [Slow][Serial]\", func() {\n\t\tdriverInfo := driver.GetDriverInfo()\n\t\tif !driverInfo.Capabilities[CapVolumeLimits] {"
  },
  {
    "id" : "7687bcb2-d050-4f8b-b0a7-16798c8b1f41",
    "prId" : 80247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80247#pullrequestreview-275914961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efc8e8c2-0bc5-4d84-8ca8-2bbfa88edd7b",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I thought these checks were all done in some helper function somewhere thats shared between test suites",
        "createdAt" : "2019-08-15T20:48:43Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "c8d2999f-42e6-4b13-94ce-aec15249f9be",
        "parentId" : "efc8e8c2-0bc5-4d84-8ca8-2bbfa88edd7b",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Technically the error path is not reachable. Retyping `driver` to `DynamicPVTestDriver` should always succeed, but I have a safety check just to be sure.",
        "createdAt" : "2019-08-16T12:09:55Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d09919e81c7a6ad69309fcc609bb88045fd9e8",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\t}\n\t\tvar dDriver DynamicPVTestDriver\n\t\tif dDriver = driver.(DynamicPVTestDriver); dDriver == nil {\n\t\t\tframework.Failf(\"Test driver does not provide dynamically created volumes\")\n\t\t}"
  },
  {
    "id" : "c308e9a8-aa57-4d2b-9161-869a9b326fc4",
    "prId" : 80247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80247#pullrequestreview-275936316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7fb15c9-a5fc-42b5-9fa1-97c7d088c6b9",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "maybe split some of this cleanup function into helper functions, it's very long and complicated right now",
        "createdAt" : "2019-08-15T20:50:33Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "e0c20798-d247-48eb-8250-875db991a02d",
        "parentId" : "e7fb15c9-a5fc-42b5-9fa1-97c7d088c6b9",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Moved to separate func.",
        "createdAt" : "2019-08-16T13:01:40Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d09919e81c7a6ad69309fcc609bb88045fd9e8",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +142,146 @@\t\tdefer l.resource.cleanupResource()\n\n\t\tdefer func() {\n\t\t\tcleanupTest(l.cs, l.ns.Name, l.runningPod.Name, l.unschedulablePod.Name, l.pvcs, l.pvNames)\n\t\t}()"
  },
  {
    "id" : "0a06e90b-cbb8-4eeb-8f3d-38320eb7f5b6",
    "prId" : 80247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80247#pullrequestreview-280162309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38ce54f4-2a0c-47d7-abd0-6df503c41ced",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "What could be between max, volume, and count besides a space? This regex is pretty prescriptive it might as well be a substring match.",
        "createdAt" : "2019-08-26T22:40:54Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "0be8e837-1812-45b2-bfcf-4e8daa34857d",
        "parentId" : "38ce54f4-2a0c-47d7-abd0-6df503c41ced",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "[This is the string](https://github.com/bertinatto/kubernetes/blob/251b908c1affb84aa3dbed9ef9fdeafad59e0201/pkg/scheduler/algorithm/predicates/error.go#L59) it's trying to match, so it's only a space.\r\n\r\nI think @jsafrane wanted to use the same approach used in the mock driver.",
        "createdAt" : "2019-08-27T12:39:12Z",
        "updatedAt" : "2019-08-28T08:39:33Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d09919e81c7a6ad69309fcc609bb88045fd9e8",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +186,190 @@\t\t\tif pod.Status.Phase == v1.PodPending {\n\t\t\t\tfor _, cond := range pod.Status.Conditions {\n\t\t\t\t\tmatched, _ := regexp.MatchString(\"max.+volume.+count\", cond.Message)\n\t\t\t\t\tif cond.Type == v1.PodScheduled && cond.Status == v1.ConditionFalse && cond.Reason == \"Unschedulable\" && matched {\n\t\t\t\t\t\treturn true, nil"
  }
]