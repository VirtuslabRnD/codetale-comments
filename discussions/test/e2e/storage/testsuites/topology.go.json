[
  {
    "id" : "111253d3-c740-4e71-b2f3-f60d92fa2e05",
    "prId" : 81819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81819#pullrequestreview-289632901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84bd01bb-b210-4db0-ac3b-668dc8e529c8",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "What does `l` stand for anyway?",
        "createdAt" : "2019-09-17T20:44:25Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "47b5c4ec-1ff0-4cc4-84c6-8ef1fea27439",
        "parentId" : "84bd01bb-b210-4db0-ac3b-668dc8e529c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think it's shorthand for the `struct local`",
        "createdAt" : "2019-09-18T01:54:12Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3abb83f9d0bf5c9c538adefa82d08074b79980",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +188,192 @@\n\tginkgo.It(\"should fail to schedule a pod which has topologies that conflict with AllowedTopologies\", func() {\n\t\tl := init()\n\t\tdefer func() {\n\t\t\tcleanup(l)"
  },
  {
    "id" : "8e7b369a-fc63-4d25-b55c-d9d402d53aeb",
    "prId" : 81819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81819#pullrequestreview-289632901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eea29556-db3c-4ce2-a4fd-30f6dd0595e7",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Do we want to shuffle `nodes` to have possibly different topologies between runs in the same cluster, or is that too overkill?",
        "createdAt" : "2019-09-17T20:53:36Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "8e411499-033a-46c9-b557-f31305e12baa",
        "parentId" : "eea29556-db3c-4ce2-a4fd-30f6dd0595e7",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I don't think we need to optimize for runs in the same cluster.",
        "createdAt" : "2019-09-18T01:56:16Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3abb83f9d0bf5c9c538adefa82d08074b79980",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +239,243 @@\n\t// TODO: scale?\n\tfor _, n := range nodes.Items {\n\t\ttopo := map[string]string{}\n\t\tfor _, k := range keys {"
  },
  {
    "id" : "24ea8878-6543-4316-ba8e-400d92417148",
    "prId" : 81819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81819#pullrequestreview-291352700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0e57871-cfae-4874-bc40-c1062967cd6a",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "What's the concern? For an arbitrarily large `maxCount`, can it be any faster than a linear search through all nodes?",
        "createdAt" : "2019-09-17T21:00:15Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "9cd432df-9b90-4756-8a5b-be0301531e79",
        "parentId" : "b0e57871-cfae-4874-bc40-c1062967cd6a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "For a 5000 node cluster in a single test, it's not useful to search through all nodes. But maybe the amount of time it takes here is not a concern in practice.",
        "createdAt" : "2019-09-18T01:55:25Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "ef2f01e9-f1a7-496b-96df-6f98f6d750b8",
        "parentId" : "b0e57871-cfae-4874-bc40-c1062967cd6a",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "But searching through all nodes is only the worst case. In most cases # topologies is much less than # nodes, and nodes are probably evenly distributed across topologies.",
        "createdAt" : "2019-09-20T18:36:38Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "8841a055-0f86-4643-b49e-3cb64fea78e1",
        "parentId" : "b0e57871-cfae-4874-bc40-c1062967cd6a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "yes, I'm saying it's inefficient for large single-zone clusters because the test will look for 2 topologies, but needs to iterate over all 5000 nodes to determine that there isn't enough. anyway i'm not sure it's actually going to matter in practice. we'll see if the large scale tests have problems after this",
        "createdAt" : "2019-09-20T19:22:09Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3abb83f9d0bf5c9c538adefa82d08074b79980",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +238,242 @@\ttopos := []topology{}\n\n\t// TODO: scale?\n\tfor _, n := range nodes.Items {\n\t\ttopo := map[string]string{}"
  },
  {
    "id" : "460297e0-3b92-4822-a5d8-4136b33e45b3",
    "prId" : 81819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81819#pullrequestreview-289632901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f777680-4adb-4fb2-81d0-66f685bf6441",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "We never test the case of multiple values then. Just want to make sure this was intentional. IIRC unit tests cover that case when I last worked on it so it should be OK.",
        "createdAt" : "2019-09-18T01:18:39Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "fadc741f-17c0-45ce-97c7-83034371d745",
        "parentId" : "6f777680-4adb-4fb2-81d0-66f685bf6441",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Correct, however, you can still test things like RePD by ORing the top level TopologySelectorTerm, which I have done here (and tested).",
        "createdAt" : "2019-09-18T01:57:51Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3abb83f9d0bf5c9c538adefa82d08074b79980",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +293,297 @@\t\t\t\texprs = append(exprs, v1.TopologySelectorLabelRequirement{\n\t\t\t\t\tKey:    k,\n\t\t\t\t\tValues: []string{v},\n\t\t\t\t})\n\t\t\t}"
  },
  {
    "id" : "439b0c52-563a-4167-afbb-00d9efcd234e",
    "prId" : 81819,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81819#pullrequestreview-289632901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bded44a4-dd9e-487a-9f53-6585fde8e7f5",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "`StorageClass.AllowedTopologies`",
        "createdAt" : "2019-09-18T01:21:21Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "8ae27129-2e0e-472d-820e-6e2a8e03dcd6",
        "parentId" : "bded44a4-dd9e-487a-9f53-6585fde8e7f5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "fixed",
        "createdAt" : "2019-09-18T01:56:36Z",
        "updatedAt" : "2019-09-20T19:27:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3abb83f9d0bf5c9c538adefa82d08074b79980",
    "line" : 282,
    "diffHunk" : "@@ -1,1 +280,284 @@}\n\n// Set StorageClass.Allowed topologies from topos while excluding the topology at excludedIndex.\n// excludedIndex can be -1 to specify nothing should be excluded.\n// Return the list of allowed topologies generated."
  }
]