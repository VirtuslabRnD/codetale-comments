[
  {
    "id" : "32319f1c-8b08-4c8e-a97a-e72415e5c14e",
    "prId" : 30409,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "921d4784-8ba7-4295-84d8-d0092e18adaa",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Are you assuming here that contexts[0] is not for federation cluster. Is creating and passing a fake User more robust?\n",
        "createdAt" : "2016-08-11T21:45:09Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "0d49ef81-2c48-4f7a-880d-75c003be8e42",
        "parentId" : "921d4784-8ba7-4295-84d8-d0092e18adaa",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "`contexts[0]` cannot be a federation API server. If it is, our tests don't work. `contexts` is obtained from calling `f.GetUnderlyingFederatedContexts()` which in turn checks that the contexts it returns does not include federation API server's context.\n",
        "createdAt" : "2016-08-11T22:25:25Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "98c50211-7264-422b-a26a-7fdf13374ea9",
        "parentId" : "921d4784-8ba7-4295-84d8-d0092e18adaa",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "oh, yes. so we can use any context. makes sense.\nWould be good if you can add that as a comment.\n",
        "createdAt" : "2016-08-17T00:35:29Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32c81dc4e12b6c7a8151d02201c851e1979516a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\t\t// federation API server context. So `contexts` is guaranteed to\n\t\t\t// contain only the underlying Kubernetes cluster contexts.\n\t\t\tfcs, err := invalidAuthFederationClientSet(contexts[0].User)\n\t\t\tframework.ExpectNoError(err)\n"
  },
  {
    "id" : "b4b92635-5333-4fe0-bc5f-08975adbd882",
    "prId" : 30409,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "083ab203-1812-49e7-86fa-95fa18195985",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "We do the same in test/e2e/framework/util.go.LoadFederationClientset_1_4() after generating the config. Will be better to refactor it and reuse code.\n",
        "createdAt" : "2016-08-11T21:45:11Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "01c60c5b-2bbc-4501-a2f6-9a74e0c1a4cc",
        "parentId" : "083ab203-1812-49e7-86fa-95fa18195985",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "There are two lines (excluding the repetitive error checks) that are common to this function and `test/e2e/framework/util.go.LoadFederationClientset_1_4()`. I don't find it worth refactoring it, esp. proliferating the number of one-time use exported functions in util.go. I would just keep them separate.\n",
        "createdAt" : "2016-08-11T22:22:16Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "8a5f55c8-a9ad-45f6-97fa-d63e7d80ea72",
        "parentId" : "083ab203-1812-49e7-86fa-95fa18195985",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@nikhiljindal there is another reason I did not refactor `LoadFederationClientset_1_4()` which I forgot to mention. I need to explicitly set `config.{Password, BearerToken, Username}` to empty strings for one of the tests. It is too cumbersome to do it after the `ClientSet` is created because every client in the set has a copy of the config. If I have to set these values after the `ClientSet` is created, I have to update all of them, which is a lot more code and less neater than this.\n\nIf you insist I will be happy to export `setTimeouts()` function and re-use it.\n",
        "createdAt" : "2016-08-12T02:39:14Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "359ea657-73e8-4232-8fe2-e7c88f183842",
        "parentId" : "083ab203-1812-49e7-86fa-95fa18195985",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes. Thats why I suggested refactoring the part after you have the config. Something like LoadFederationClientset14FromConfig(config). So LoadFederationClientset_1_4 becomes:\n\n```\nLoadFederationClientset_1_4() {\n    config, err := LoadFederatedConfig(&clientcmd.ConfigOverrides{})\n    if err != nil {\n        return nil, err\n    }\n    return LoadFederationClientset14FromConfig(config)\n}\n```\n\nAnd you can then replace lines 100-110 here by `return LoadFederationClientset14FromConfig(config)`\n",
        "createdAt" : "2016-08-17T00:35:24Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32c81dc4e12b6c7a8151d02201c851e1979516a",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@\t}\n\n\tc, err := federation_release_1_4.NewForConfig(config)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"error creating federation clientset: %v\", err)"
  },
  {
    "id" : "b101aadb-303d-44e8-bafb-563f5b79687f",
    "prId" : 30409,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "502f299a-938f-4a03-924e-a6f3c5490c60",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "We should set the timeout for ExtensionsClient as well.\nIf you do the refactoring mentioned above, then you will have to fix it at only one place :)\n",
        "createdAt" : "2016-08-11T21:45:13Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "f9ff7289-4c91-4864-b550-8a36925c5167",
        "parentId" : "502f299a-938f-4a03-924e-a6f3c5490c60",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "See comment above.\n",
        "createdAt" : "2016-08-11T22:22:26Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "46bdca6e-091f-4861-a849-53c196ebc123",
        "parentId" : "502f299a-938f-4a03-924e-a6f3c5490c60",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Added timeouts to `ExtensionsClient`.\n",
        "createdAt" : "2016-08-12T02:41:32Z",
        "updatedAt" : "2016-08-18T03:03:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32c81dc4e12b6c7a8151d02201c851e1979516a",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@\t}\n\t// Set timeout for each client in the set.\n\tc.DiscoveryClient.Client.Timeout = framework.SingleCallTimeout\n\tc.FederationClient.Client.Timeout = framework.SingleCallTimeout\n\tc.CoreClient.Client.Timeout = framework.SingleCallTimeout"
  }
]