[
  {
    "id" : "97ad0534-cbbe-4a6c-b036-d2499a94f864",
    "prId" : 72902,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72902#pullrequestreview-193804592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96e58cca-24c3-4946-b0b6-5ec739e3eb30",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Better to write NOTE why we need to skip other providers here as the PR message.",
        "createdAt" : "2019-01-17T19:47:20Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "596c6fbf033491c8ec2d05770357598fb705e157",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\t\t// Only supported in AWS/GCE because those are the only cloud providers\n\t\t// where E2E test are currently running.\n\t\tframework.SkipUnlessProviderIs(\"aws\", \"gce\", \"gke\")\n\t\tc = f.ClientSet\n\t})"
  },
  {
    "id" : "74581e96-e3f1-40c7-a212-e1ed558c545f",
    "prId" : 72902,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72902#pullrequestreview-196740140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Sorry for missing this point on my previous review.\r\nWhy does here pass the length of origNodes which includes non-schedulable nodes also ?\r\nCheckNodesReady() gets the length of schedulable nodes only and compares it with the parameter size as\r\nhttps://github.com/kubernetes/kubernetes/blob/ccd83ce1c5daa6d2d1d08ed15f7ae192d594b373/test/e2e/framework/util.go#L4101\r\n\r\nSo I guessed nodeDeleteCandidates could be valid insteadof origNodes.",
        "createdAt" : "2019-01-24T20:15:15Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "9758f17a-926e-4ee4-930a-68a954ba9d1b",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "CMIIW, `CheckNodesReady` and `GetReadyNodesIncludingTaintedOrDie` accounts for control plane nodes. `GetReadySchedulableNodesOrDie` is used initially to pick a node that is not in the control plane but it isn't used for node count because it would have excluded the control plane. ",
        "createdAt" : "2019-01-24T20:26:48Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "fa34924a-52f3-40ec-a36f-06d7622016b4",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Ah, I got it. I misunderstood the difference between isNodeSchedulable() and isNodeUntainted() in the framework.\r\n",
        "createdAt" : "2019-01-24T21:19:20Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "f8c681aa-56ec-49b0-ab4b-df1c266618dd",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Yeah it's a bit confusing. Was thinking of refactoring that a bit in this PR but didn't want to make the PR bigger than it already is :) ",
        "createdAt" : "2019-01-24T21:29:14Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "64ec5437-0735-4efd-913b-42ed336c5b4b",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Yeah, I agree. It is nice to keep the scope of PRs small for easy implementation and reviews :-)",
        "createdAt" : "2019-01-24T22:00:12Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "2124c072-8109-4244-b202-80b8cf041742",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Why 5 minutes for `CheckNodeReady`? Is that a magic number that ties to some other timeout, or was that just what seemed reasonable?",
        "createdAt" : "2019-01-25T22:33:27Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "d01ed024-2781-4964-89a6-d16de455b84b",
        "parentId" : "a1e5f485-a8d4-4d5d-959f-aadd771a42a3",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Yup, that's just what seemed reasonable to me.",
        "createdAt" : "2019-01-25T22:39:01Z",
        "updatedAt" : "2019-01-25T22:46:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "596c6fbf033491c8ec2d05770357598fb705e157",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\t}\n\n\t\tnewNodes, err := framework.CheckNodesReady(c, len(origNodes.Items)-1, 5*time.Minute)\n\t\tExpect(err).To(BeNil())\n\t\tExpect(len(newNodes)).To(Equal(len(origNodes.Items) - 1))"
  }
]