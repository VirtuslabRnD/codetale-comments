[
  {
    "id" : "3cc8d71f-6e05-4f5f-9a34-9e465e139a71",
    "prId" : 101329,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101329#pullrequestreview-641526134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbf61461-2020-462b-a0a6-aa6828c7a014",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "b.Info is easier to deal with on debugging tools",
        "createdAt" : "2021-04-21T21:00:58Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "cfacf285-aa30-487a-8356-2d4c3cc937c1",
        "parentId" : "bbf61461-2020-462b-a0a6-aa6828c7a014",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "the logs get truncated, not sure if there is an option to prevent that.",
        "createdAt" : "2021-04-21T21:37:34Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "6988653457f15a7482cb6d33bfb1a7c6831d7066",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +804,808 @@\t\treturn err\n\t}\n\tklog.Infof(\"Creating %d pods in namespace %q\", cpo.Count, namespace)\n\tconfig := testutils.NewTestPodCreatorConfig()\n\tconfig.AddStrategy(namespace, cpo.Count, strategy)"
  },
  {
    "id" : "c52979e9-6a22-4846-a256-16d93c617e0d",
    "prId" : 101329,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101329#pullrequestreview-641649101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be8b517b-04a5-4415-9a7e-6b5eeead792b",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "what if some namespaces were successfully created?",
        "createdAt" : "2021-04-21T21:02:10Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1c1663fd-8874-4758-baf9-98920a2e54fa",
        "parentId" : "be8b517b-04a5-4415-9a7e-6b5eeead792b",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "not sure I get what is the concern, this is a fatal error, so the whole the test case will fail",
        "createdAt" : "2021-04-21T21:11:46Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "8cfd65a4-f781-4717-9781-62c495abae10",
        "parentId" : "be8b517b-04a5-4415-9a7e-6b5eeead792b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Is there anything else clearing the namespaces? Isn't the etcd db shared for the entire test suite?",
        "createdAt" : "2021-04-21T21:51:29Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d0121d15-346e-430f-af9f-7c7c777889e1",
        "parentId" : "be8b517b-04a5-4415-9a7e-6b5eeead792b",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "ah, ok, I added a call to cleanup()",
        "createdAt" : "2021-04-22T00:03:45Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "6988653457f15a7482cb6d33bfb1a7c6831d7066",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +572,576 @@\t\t\tif err := nsPreparer.prepare(); err != nil {\n\t\t\t\tnsPreparer.cleanup()\n\t\t\t\tb.Fatalf(\"op %d: %v\", opIndex, err)\n\t\t\t}\n\t\t\tb.Cleanup(func() {"
  },
  {
    "id" : "e3f4a9e3-f0fe-4fc9-aa3a-b4575cd6e28d",
    "prId" : 101329,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101329#pullrequestreview-642183018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0a6d35c-e508-4fa2-b5ea-14d8a4a16f47",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "consider the case that both \"cpso.CountParam\" and \"cpso.Count\" are set in the template.",
        "createdAt" : "2021-04-22T10:30:54Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "47e42874-a70e-4172-9866-a2dc9592d6f6",
        "parentId" : "d0a6d35c-e508-4fa2-b5ea-14d8a4a16f47",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "this is an established pattern in the file, CountParam takes precedence, I added a comment.",
        "createdAt" : "2021-04-22T15:28:37Z",
        "updatedAt" : "2021-04-23T18:14:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "6988653457f15a7482cb6d33bfb1a7c6831d7066",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +367,371 @@\tif cpso.CountParam != \"\" {\n\t\tvar ok bool\n\t\tif cpso.Count, ok = w.Params[cpso.CountParam[1:]]; !ok {\n\t\t\treturn nil, fmt.Errorf(\"parameter %s is undefined\", cpso.CountParam)\n\t\t}"
  },
  {
    "id" : "e09d68db-8819-45e7-b988-66c263285fe5",
    "prId" : 99638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99638#pullrequestreview-610455679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "346c99c4-b620-4945-97cf-686dff289a09",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nit: move this section below L385.",
        "createdAt" : "2021-03-12T02:24:12Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "5d900a39-4422-4d10-8f40-9d948297a6bf",
        "parentId" : "346c99c4-b620-4945-97cf-686dff289a09",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "Done",
        "createdAt" : "2021-03-12T05:14:12Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "d50c0aeb5f134e0e2468aa70662d24f8b7280822",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +399,403 @@\tdefer cancel()\n\tvar cfg *config.KubeSchedulerConfiguration\n\tvar err error\n\tif len(tc.SchedulerConfigFile) != 0 {\n\t\tcfg, err = loadSchedulerConfig(tc.SchedulerConfigFile)"
  },
  {
    "id" : "4df9f798-13e5-41b4-b8d7-b6cc93510881",
    "prId" : 99472,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99472#pullrequestreview-601043379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "589adb67-5a6a-42c0-b8ca-034f0c37cf49",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "should we be migrating off the legacyregistry?",
        "createdAt" : "2021-03-01T15:06:31Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5a620edf-2f6d-4496-9095-4703168d7efe",
        "parentId" : "589adb67-5a6a-42c0-b8ca-034f0c37cf49",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I will leave it for sig-instrumentation to comment.\r\n\r\nBTW: this is not a brand new dependency - scheduler_perf/util.go used to and still depends on it.",
        "createdAt" : "2021-03-01T18:31:56Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "b93b4a2c96d3b9f4c143d46651ddefdb0da14ece",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +43,47 @@\t\"k8s.io/component-base/featuregate\"\n\tfeaturegatetesting \"k8s.io/component-base/featuregate/testing\"\n\t\"k8s.io/component-base/metrics/legacyregistry\"\n\t\"k8s.io/klog/v2\"\n\t\"k8s.io/kubernetes/test/integration/framework\""
  },
  {
    "id" : "0d6db330-1371-4130-9227-6caa683b0efe",
    "prId" : 99472,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99472#pullrequestreview-608709707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2246183-d938-472d-a6e5-57cb4bf5e3bf",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "This line could move  up to @Line380.\r\n\r\nInstead of those check, why not resetting the registry only when collecting the metrics as my proposal here?\r\nhttps://github.com/kubernetes/kubernetes/pull/97757/files",
        "createdAt" : "2021-03-04T08:36:20Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "2f6e2772-a8c9-4096-a063-7245188a98f5",
        "parentId" : "a2246183-d938-472d-a6e5-57cb4bf5e3bf",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "> This line could move up to @Line380.\r\n\r\nNope, you have to wait for collectors to finish their collecting.\r\n\r\n> why not resetting the registry only when collecting the metrics as my proposal here?\r\n\r\nUpon completion of an operator (step) of each workload, we need to reset if needed - think about the case of InitPods.",
        "createdAt" : "2021-03-04T19:54:44Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "91f8e79a-b93c-4522-a30a-783ce2648520",
        "parentId" : "a2246183-d938-472d-a6e5-57cb4bf5e3bf",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "> Upon completion of an operator (step) of each workload, we need to reset if needed - think about the case of InitPods.\r\n\r\n`InitPods` is a different case, iiuc, `collectMetrics` is set only with `measurePods`, we can clear all the stale metric before we are really measure something, all the data generated before could be discarded.",
        "createdAt" : "2021-03-05T01:59:16Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "d835f958-5304-4c0d-b46d-8346ce27cee1",
        "parentId" : "a2246183-d938-472d-a6e5-57cb4bf5e3bf",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I don't think it's a good idea to clear the metrics generated in **previous** steps at the beginning of the **current** step. Each test/step is better designed atomic and stateless - in other words, a test/step should clear its metrics upon its completion, instead of leaving the leftover for subsequent test/step to clear.",
        "createdAt" : "2021-03-05T02:12:32Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "3e8bd591-aefb-4bce-ab38-4bd1ece309f7",
        "parentId" : "a2246183-d938-472d-a6e5-57cb4bf5e3bf",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "while both approaches are probably functionally similar, I agree with @Huang-Wei that each step should be cleaning up after itself",
        "createdAt" : "2021-03-10T13:28:03Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "b93b4a2c96d3b9f4c143d46651ddefdb0da14ece",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +459,463 @@\t\t\t}\n\n\t\t\tif !concreteOp.SkipWaitToCompletion {\n\t\t\t\t// SkipWaitToCompletion=false indicates this step has waited for the Pods to be scheduled.\n\t\t\t\t// So we reset the metrics in global registry; otherwise metrics gathered in this step"
  },
  {
    "id" : "d685d34d-e9de-418e-b4f6-82fdb7e43825",
    "prId" : 99472,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99472#pullrequestreview-604742008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62ae76a1-d1dc-474c-a1f2-1a26502b75d2",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "what I meant is `Reset` is not always needed, this will reset `testcase*workload` times while most of `reset` here as far as I can see is not necessary.",
        "createdAt" : "2021-03-05T02:11:06Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "39331879-aaf4-4a86-9abb-49f98aec60c6",
        "parentId" : "62ae76a1-d1dc-474c-a1f2-1a26502b75d2",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Yes, it's discussed here: https://github.com/kubernetes/kubernetes/pull/99472#discussion_r584435795",
        "createdAt" : "2021-03-05T02:13:39Z",
        "updatedAt" : "2021-03-11T18:29:38Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "b93b4a2c96d3b9f4c143d46651ddefdb0da14ece",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +367,371 @@\t\t\t\t\t// Reset metrics to prevent metrics generated in current workload gets\n\t\t\t\t\t// carried over to the next workload.\n\t\t\t\t\tlegacyregistry.Reset()\n\t\t\t\t})\n\t\t\t}"
  },
  {
    "id" : "c71afa41-7726-4586-842f-1479b46b2dda",
    "prId" : 98900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98900#pullrequestreview-592616334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "let's name this in a way that test configurations are more readable. Perhaps `continuosRecreates` or `noiseRecreates`.",
        "createdAt" : "2021-02-11T14:50:08Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d27425a9-05a8-4154-9b43-669f2af958b4",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "We used `churn` a lot and it's the most readable wording to me :) But I'm not a naming expert, @ahg-g @adtac any naming thoughts?",
        "createdAt" : "2021-02-12T19:42:26Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "1eb3d149-f1cd-49b3-b22d-1c27c8936264",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "I prefer churn too. Maybe \"backgroundChurn\" to emphasise that this is non-blocking? would also somewhat cover @alculquicondor's suggestion",
        "createdAt" : "2021-02-16T12:28:49Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "c8d7236a-8e7f-49c3-b9b9-8057af43cb79",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "```\r\n  - opcode: churn\r\n    serviceTemplatePath: config/churn/service-default.yaml\r\n    intervalMilliseconds: 1000\r\n```\r\n\r\nthis doesn't make sense to me. It almost feel like networking churn. Maybe `recreatesChurn`",
        "createdAt" : "2021-02-17T15:09:47Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "533a04ab-4a1e-463b-a3b7-db63702abbf5",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "The pure-service churn is an example of evaluating how Service events may or may not churn the cluster. I removed it to postpone the debate of how practical it could be - I'd like to get to a consensus of how a churn op looks like first, and in follow-up PRs we can add/discuss test cases on demand, also how wild the test case can churn the cluster.\r\n\r\nThe current logic is to create & delete _customizable_ API objects interleavingly. Other options are:\r\n\r\n- create & delete **N** API objects interleavingly\r\n- keep creating API objects (without deleting them)\r\n\r\n@alculquicondor @adtac WDYT?",
        "createdAt" : "2021-02-17T20:36:01Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "23cf5b30-5901-4f75-9e19-4767aca09205",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "can we have something like this:\r\n\r\n```\r\n  - opcode: apiChurn\r\n    mode: recreate\r\n    serviceTemplatePath: config/churn/service-default.yaml\r\n    intervalMilliseconds: 1000\r\n```\r\n\r\nNote that I'm not referring to the specific test case, just how the test description and configuration looks like.",
        "createdAt" : "2021-02-17T20:40:32Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "b6cf2aec-fe7c-4197-a76b-cd602fcf8364",
        "parentId" : "305e502f-165b-498e-8e0e-301cbd2bed22",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "SG. So we have different churn modes/patterns to choose from.\r\n\r\n- recreate (or continuous-create)\r\n- ephemeral-create (create & delete a single object)\r\n- round-robin-create (create N objects, and then delete N objects, N can be configurable)\r\n- and probably incorporate update events\r\n\r\nBTW: when you say `recreate`, do you mean continuously creating API objects?",
        "createdAt" : "2021-02-17T20:51:39Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5878b91099dbc06b86aeaeefa301cb59ca61d1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +53,57 @@\tcreateNodesOpcode = \"createNodes\"\n\tcreatePodsOpcode  = \"createPods\"\n\tchurnOpcode       = \"churn\"\n\tbarrierOpcode     = \"barrier\"\n"
  },
  {
    "id" : "6bac56d5-0ce0-45bd-98ad-da14c6e9ea98",
    "prId" : 98900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98900#pullrequestreview-602597984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35b1de81-10b1-4dca-b2b9-bf0f39dc1fc2",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "these ones deserve a comment",
        "createdAt" : "2021-03-02T15:26:30Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d618542d-d495-4e97-8032-e6b6cca0b71b",
        "parentId" : "35b1de81-10b1-4dca-b2b9-bf0f39dc1fc2",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-03-03T07:48:26Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5878b91099dbc06b86aeaeefa301cb59ca61d1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +59,63 @@\n\t// Recreate creates a number of API objects and then delete them, and repeat the iteration.\n\tRecreate = \"recreate\"\n\t// Create continuously create API objects without deleting them.\n\tCreate = \"create\""
  },
  {
    "id" : "f62e06e9-877f-49da-8f06-a2e5969226db",
    "prId" : 98900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98900#pullrequestreview-601943727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eb38895-2a28-4ba6-9026-e8e2a1d54122",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Interesting. I didn't know this was possible.",
        "createdAt" : "2021-03-02T15:34:52Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5878b91099dbc06b86aeaeefa301cb59ca61d1",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +477,481 @@\t\t\t\t}\n\t\t\t\t// Obtain GVR.\n\t\t\t\tmapping, err := restMapper.RESTMapping(gvk.GroupKind(), gvk.Version)\n\t\t\t\tif err != nil {\n\t\t\t\t\tb.Fatalf(\"op %d: unable to find GVR for %v: %v\", opIndex, gvk, err)"
  },
  {
    "id" : "ee080722-dde3-4e18-beb0-a5c6579db3c3",
    "prId" : 98900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98900#pullrequestreview-602979319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d7dd488-8e57-4fed-9ffc-c44fb0700d79",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit: add empty line, as this comment refers to more than one constant",
        "createdAt" : "2021-03-03T14:46:41Z",
        "updatedAt" : "2021-03-03T14:52:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "57abe125-acd1-49c2-82e4-9b7d5753fdc9",
        "parentId" : "7d7dd488-8e57-4fed-9ffc-c44fb0700d79",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-03-03T14:52:44Z",
        "updatedAt" : "2021-03-03T14:52:44Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5878b91099dbc06b86aeaeefa301cb59ca61d1",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +56,60 @@\tbarrierOpcode     = \"barrier\"\n\n\t// Two modes supported in \"churn\" operator.\n\n\t// Recreate creates a number of API objects and then delete them, and repeat the iteration."
  },
  {
    "id" : "b0ec5650-24d0-4b03-82ef-de6a1c5747a1",
    "prId" : 93252,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93252#pullrequestreview-485426491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2f74fc0-2437-4cbe-b5dd-bcc2596b4c67",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "there are no guarantees here that there is no `barrierAndCollect` still running at this point. Maybe we can add a wait group.",
        "createdAt" : "2020-09-09T21:25:39Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a57aaf5d-3ad9-4178-a96e-849cae4a60cb",
        "parentId" : "b2f74fc0-2437-4cbe-b5dd-bcc2596b4c67",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "wow, excellent catch, done.",
        "createdAt" : "2020-09-09T21:49:46Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "717f9240-7f17-4b57-875a-f796c9a4d028",
        "parentId" : "b2f74fc0-2437-4cbe-b5dd-bcc2596b4c67",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "I've removed the whole async barrierAndCollect thing, so this is no longer relevant.",
        "createdAt" : "2020-09-14T19:30:55Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "71bc9ce9c2dff7f0f099f741e5856b2d3a7a91e7",
    "line" : 489,
    "diffHunk" : "@@ -1,1 +419,423 @@\t\tb.Fatal(err)\n\t}\n\treturn dataItems\n}\n"
  },
  {
    "id" : "d8e7d4f1-526b-4c48-8c9f-0a76ff538300",
    "prId" : 93252,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93252#pullrequestreview-485426491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b35c53d-6817-445f-9529-c42f7ecd0a76",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "`defer collectorCancel()` in case `barrierAndCollect` fails before calling it.",
        "createdAt" : "2020-09-09T21:32:11Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "0152654b-dac3-4d4a-b890-cf392894e23b",
        "parentId" : "4b35c53d-6817-445f-9529-c42f7ecd0a76",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "Parent cancel() will take care of that? Done anyway.",
        "createdAt" : "2020-09-09T21:52:44Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "71bc9ce9c2dff7f0f099f741e5856b2d3a7a91e7",
    "line" : 407,
    "diffHunk" : "@@ -1,1 +356,360 @@\t\t\tvar collectorCancel func()\n\t\t\tif concreteOp.CollectMetrics {\n\t\t\t\tcollectorCtx, collectorCancel = context.WithCancel(ctx)\n\t\t\t\tdefer collectorCancel()\n\t\t\t\tcollectors = getTestDataCollectors(podInformer, fmt.Sprintf(\"%s/%s\", b.Name(), namespace), namespace, tc.MetricsCollectorConfig)"
  },
  {
    "id" : "1b202431-a801-47b6-923d-e95ca1636072",
    "prId" : 93252,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93252#pullrequestreview-488829842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc119d17-834c-48a8-a0cd-e324adf2d479",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "if SkipWaitToCompletion is false, CollectMetrics is false too?",
        "createdAt" : "2020-09-15T14:53:59Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "ed908c26-ced1-4526-8f9e-fa860018380a",
        "parentId" : "cc119d17-834c-48a8-a0cd-e324adf2d479",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "Not necessarily. The initial set of pods we schedule need to be scheduled before we can start the measurement pods, so SkipWaitToCompletion isn't set for either set of pods. However, CollectMetrics is only set for the measurement pods.",
        "createdAt" : "2020-09-15T15:53:58Z",
        "updatedAt" : "2020-09-17T19:22:42Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "71bc9ce9c2dff7f0f099f741e5856b2d3a7a91e7",
    "line" : 430,
    "diffHunk" : "@@ -1,1 +379,383 @@\t\t\t\t}\n\t\t\t}\n\t\t\tif concreteOp.CollectMetrics {\n\t\t\t\t// CollectMetrics and SkipWaitToCompletion can never be true at the\n\t\t\t\t// same time, so if we're here, it means that all pods have been"
  },
  {
    "id" : "3f17cdfe-512a-4412-a52e-268ef5737e2d",
    "prId" : 91510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91510#pullrequestreview-420358637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2480d689-a305-4af7-abe4-988c15fadb8a",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "why remove `total+`?",
        "createdAt" : "2020-05-28T16:44:36Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "22e4eaaf-939e-4797-af9d-a96064e1174d",
        "parentId" : "2480d689-a305-4af7-abe4-988c15fadb8a",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "because we are waiting for the pods in the test namespace only. The pods in the setup namespace were checked earlier already (line 159).",
        "createdAt" : "2020-05-28T17:58:44Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "d650b571411bc8c81cc678554ca3ec25fe700e69",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +175,179 @@\t\tb.Fatal(err)\n\t}\n\tif err := waitNumPodsScheduled(b, test.PodsToSchedule.Num, podInformer, testNamespace); err != nil {\n\t\tb.Fatal(err)\n\t}"
  },
  {
    "id" : "6e9e470a-73c2-4f9c-add1-18d0e6d0f60d",
    "prId" : 91510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91510#pullrequestreview-420363797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4052626-1130-47f0-9fc0-af1e2e6303c4",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Is this metric from scheduler metrics? If so, I can only find `scheduling_algorithm_preemption_evaluation_seconds`.",
        "createdAt" : "2020-05-28T17:03:55Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "392c5f50-4b38-4e96-9795-34ed8724ddd8",
        "parentId" : "e4052626-1130-47f0-9fc0-af1e2e6303c4",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "yes, the prefix is added by default to all metrics reported by the scheduler (see older metrics above).",
        "createdAt" : "2020-05-28T18:05:29Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "875a5185-12c1-4976-8b35-e0da91d8d409",
        "parentId" : "e4052626-1130-47f0-9fc0-af1e2e6303c4",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nvm, the `scheduler_` prefix is added by the Kubernetes prometheus library according to defined `Subsystem`:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/bbaa76c8f514eada3f3c30bd20d8b59fd623711e/pkg/scheduler/metrics/metrics.go#L169",
        "createdAt" : "2020-05-28T18:05:51Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "d650b571411bc8c81cc678554ca3ec25fe700e69",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +46,50 @@\t\t\t\"scheduler_binding_duration_seconds\",\n\t\t\t\"scheduler_e2e_scheduling_duration_seconds\",\n\t\t\t\"scheduler_scheduling_algorithm_preemption_evaluation_seconds\",\n\t\t\t\"scheduler_pod_scheduling_duration_seconds\",\n\t\t},"
  },
  {
    "id" : "e07b8c85-e9a5-4719-9ba9-194b442cff74",
    "prId" : 91510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91510#pullrequestreview-420363842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aba8ad6-dc56-485e-8aba-1b6a3596152c",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "ditto. I can only find `pod_scheduling_duration_seconds`.",
        "createdAt" : "2020-05-28T17:08:30Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "fca750f8-d8dd-4d0e-8dce-8d37815ac6e6",
        "parentId" : "6aba8ad6-dc56-485e-8aba-1b6a3596152c",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "ditto",
        "createdAt" : "2020-05-28T18:05:34Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "d511ced5-6bea-40da-92e2-d048b08ad4aa",
        "parentId" : "6aba8ad6-dc56-485e-8aba-1b6a3596152c",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nvm.",
        "createdAt" : "2020-05-28T18:05:54Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "d650b571411bc8c81cc678554ca3ec25fe700e69",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@\t\t\t\"scheduler_e2e_scheduling_duration_seconds\",\n\t\t\t\"scheduler_scheduling_algorithm_preemption_evaluation_seconds\",\n\t\t\t\"scheduler_pod_scheduling_duration_seconds\",\n\t\t},\n\t}"
  },
  {
    "id" : "79084a86-321c-4eb2-9134-7a66e9e1183d",
    "prId" : 89272,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89272#pullrequestreview-379575685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b4f4f4b-b344-4073-9c17-44b3e9326979",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Why is this change necessary?",
        "createdAt" : "2020-03-23T13:06:18Z",
        "updatedAt" : "2020-03-23T18:55:38Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "d9a63c9e-a236-4dbf-bb1e-92a129fe9d29",
        "parentId" : "7b4f4f4b-b344-4073-9c17-44b3e9326979",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Otherwise the slice is shared and a second iteration modifies both test cases.",
        "createdAt" : "2020-03-23T16:03:38Z",
        "updatedAt" : "2020-03-23T18:55:38Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "5adc4c41e3c079557f0fcb9746326101fecfbbee",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +287,291 @@\t\tfor _, p := range s.Params {\n\t\t\ttestCase.Nodes.Num = p.NumNodes\n\t\t\ttestCase.InitPods = append([]podCase(nil), testCase.InitPods...)\n\t\t\tfor i, v := range p.NumInitPods {\n\t\t\t\ttestCase.InitPods[i].Num = v"
  },
  {
    "id" : "527f34f0-c550-4f48-9ce6-33c7e84279ca",
    "prId" : 88200,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88200#pullrequestreview-360305371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7c3f83f-0f56-4710-b671-ab053e811479",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Change the signature and return `(testutils.TestNodePreparer, error)` instead:\r\n```\r\nelse {\r\n\treturn nil, fmt.Error(\"Node strategy not specified\")\r\n}\r\n```",
        "createdAt" : "2020-02-17T16:52:49Z",
        "updatedAt" : "2020-02-18T22:03:17Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "50a3c5e5-19cd-457b-bd86-57103eaa26ff",
        "parentId" : "e7c3f83f-0f56-4710-b671-ab053e811479",
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "the `TrivialNodePrepareStrategy` is the default if no strategy is provided.",
        "createdAt" : "2020-02-17T23:22:15Z",
        "updatedAt" : "2020-02-18T22:03:17Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "43952a7b-24d8-44cd-ba16-c32e161807c1",
        "parentId" : "e7c3f83f-0f56-4710-b671-ab053e811479",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Right, I missed that. No nit here.",
        "createdAt" : "2020-02-18T12:41:25Z",
        "updatedAt" : "2020-02-18T22:03:17Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f56c753b31bb1234cacf890f0a57f71a4a92f63",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +198,202 @@\t} else if nc.UniqueNodeLabelStrategy != nil {\n\t\tnodeStrategy = nc.UniqueNodeLabelStrategy\n\t}\n\n\tif nc.NodeTemplatePath != nil {"
  },
  {
    "id" : "f757885a-1f7a-4950-b3a2-0a77bf78dc6d",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-330588028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f1daf10-ef98-468c-9552-43d916ab0d17",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "nit: Put golang default libraries on top and k8s specific ones below.",
        "createdAt" : "2019-12-11T14:44:13Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"sync/atomic\""
  },
  {
    "id" : "38d4d53a-82ee-4f75-bb30-d439a58eac23",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-330588028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfbfe5a1-b50d-4b9c-8b81-fe71e7797bcd",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "To make it flexible, this should be a list of nodeCases although in our current tests we have homogeneous nodes. Same comment for `InitPods` and `PodsToSchedule`\r\n\r\nFeel free to defer it.",
        "createdAt" : "2019-12-11T14:59:41Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\tDesc string\n\t// configures nodes in the cluster\n\tNodes nodeCase\n\t// configures pods in the cluster before running the tests\n\tInitPods podCase"
  },
  {
    "id" : "ca960a88-3ce0-4cda-ab76-59aecbc36dc0",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-331266364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "048ed663-6219-493f-b7b4-e7f8f956e989",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "doesn't need to be exported.",
        "createdAt" : "2019-12-11T15:03:40Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "ed431f4a-0c8e-4d4d-b6a6-bb675747c624",
        "parentId" : "048ed663-6219-493f-b7b4-e7f8f956e989",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "Same as above.",
        "createdAt" : "2019-12-12T14:26:08Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\ntype podCase struct {\n\tNum                               int\n\tPodTemplatePath                   *string\n\tPersistentVolumeTemplatePath      *string"
  },
  {
    "id" : "f320d11b-9b19-42bf-a852-c30c2d4ad57c",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-331270030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "576ed852-9d53-4e0c-b506-4d66ca78f398",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Should comment that at most one of these node strategies can be provided.",
        "createdAt" : "2019-12-11T15:10:46Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "40d54763-d166-4d9a-bd18-a7e48944075f",
        "parentId" : "576ed852-9d53-4e0c-b506-4d66ca78f398",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "Done",
        "createdAt" : "2019-12-12T14:31:00Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@\tNodeTemplatePath *string\n\t// At most one of the following strategies can be defined. If not specified, default to TrivialNodePrepareStrategy.\n\tNodeAllocatableStrategy  *testutils.NodeAllocatableStrategy\n\tLabelNodePrepareStrategy *testutils.LabelNodePrepareStrategy\n\tUniqueNodeLabelStrategy  *testutils.UniqueNodeLabelStrategy"
  },
  {
    "id" : "803e1587-b20b-4203-afc4-b0013be7307b",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-331273952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c27b9f9-4088-4e70-9381-6aff67a3f7c2",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "you would have to call b.StopTimer() here once you switch to testing.B",
        "createdAt" : "2019-12-11T15:27:56Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "ccc6f301-b811-4416-b002-b5d1aa9270e0",
        "parentId" : "7c27b9f9-4088-4e70-9381-6aff67a3f7c2",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "Done",
        "createdAt" : "2019-12-12T14:36:39Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +190,194 @@\t// Note: without this line we're taking the overhead of defer() into account.\n\tb.StopTimer()\n}\n\nfunc getPodStrategy(pc podCase) testutils.TestPodCreateStrategy {"
  },
  {
    "id" : "f55d12c3-59b2-4467-a80a-c44d74ff5718",
    "prId" : 86160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86160#pullrequestreview-331422415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95eaa2e5-87ba-49e1-b670-5744e4696eac",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Can you add a comment such as \r\n\"simpleTestCases defines a set of test cases that share the same template (node spec, pod spec, etc) with testParams(e.g., NumNodes) being overriden. This provides a convenient way to define multiple tests with various sizes.\"",
        "createdAt" : "2019-12-12T18:10:52Z",
        "updatedAt" : "2019-12-19T01:09:25Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "6511b603c9cd5c0f3a9f31ca305ad6b4186cd3fd",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@// with testParams(e.g., NumNodes) being overridden. This provides a convenient way to define multiple tests\n// with various sizes.\ntype simpleTestCases struct {\n\tTemplate testCase\n\tParams   []testParams"
  },
  {
    "id" : "7e184e31-422f-4125-9efe-88a958bb2e88",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-327812975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2aa84d6a-5c69-4cfc-a398-28607cbef163",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Let's leave this test only and delete others for now, the reasons being:\r\n1. There are active changes to the existing benchmark test. It's likely this get out of sync temporarily anyways.\r\n2. Eventually the tests will be constructed dynamically from a config file. We won't need all the hard coded tests.\r\n3. Just keeping one test here as an example makes development easier until we have the new tests working end to end.",
        "createdAt" : "2019-12-05T20:05:58Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +101,105 @@}\n\nfunc BenchmarkPerfScheduling(b *testing.B) {\n\tdataItems := DataItems{Version: \"v1\"}\n\ttests := getSimpleTestCases(configFile)"
  },
  {
    "id" : "95bd33f7-1af0-4e38-a5e1-5b34c32297b6",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-331910737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd015229-5ae3-49c9-8432-6e62071a85c9",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Can we encapsulate throughput measuring in its own helper method?\r\n\r\nIdeally, I'd like to define an interface `MetricsCollector`, and throughput is one implementation of that interface, like so\r\nhttps://github.com/kubernetes/kubernetes/pull/85662/files#diff-722c6b351de632f8af713505b7cc49b4R27-R33",
        "createdAt" : "2019-12-06T14:55:49Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "01418f7e-5c93-4205-84a9-319fbfe74b5b",
        "parentId" : "bd015229-5ae3-49c9-8432-6e62071a85c9",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Done. I created a private type and methods around it so we can then change it anytime.",
        "createdAt" : "2019-12-13T14:41:51Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +195,199 @@\tb.ResetTimer()\n\n\t// Start measuring throughput\n\tstopCh := make(chan struct{})\n\tthroughputCollector := newThroughputCollector(podInformer)"
  },
  {
    "id" : "51f46060-3dba-491e-b6fe-b96ecf866bb1",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-334037722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cf5722e-c03c-4b0d-87a6-b8a4c45a9ffe",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Let's add `e2e_scheduling_duration_seconds`.",
        "createdAt" : "2019-12-18T15:07:53Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +41,45 @@var (\n\tdefaultMetrics = []string{\n\t\t\"scheduler_scheduling_algorithm_predicate_evaluation_seconds\",\n\t\t\"scheduler_scheduling_algorithm_priority_evaluation_seconds\",\n\t\t\"scheduler_binding_duration_seconds\","
  },
  {
    "id" : "e2f9fc65-840c-4474-a9e2-63ad146d61c5",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-339850592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c6f3bc1-6709-4ef8-9622-028ee6c24dd1",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "I think this logic can go to `perfScheduling`, or I guess you can pass `name` to `collect(name)`",
        "createdAt" : "2019-12-18T15:15:43Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "5bc5f7bd-ad78-4783-82ce-9cbbb9dd3fae",
        "parentId" : "5c6f3bc1-6709-4ef8-9622-028ee6c24dd1",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "`Name` can be one of many labels to be added to `Labels` map after a metric is collected. It's cleaner to add the `Name` label in post-processing.",
        "createdAt" : "2020-01-02T12:34:07Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "355f3ecc-41c6-4316-bd95-705bcac29111",
        "parentId" : "5c6f3bc1-6709-4ef8-9622-028ee6c24dd1",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Done, moved under `perfScheduling`. The new signature makes it easier to implement.",
        "createdAt" : "2020-01-08T13:08:09Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\t\tfor feature, flag := range test.FeatureGates {\n\t\t\t\tdefer featuregatetesting.SetFeatureGateDuringTest(b, utilfeature.DefaultFeatureGate, feature, flag)()\n\t\t\t}\n\t\t\tdataItems.DataItems = append(dataItems.DataItems, perfScheduling(test, b)...)\n\t\t})"
  }
]