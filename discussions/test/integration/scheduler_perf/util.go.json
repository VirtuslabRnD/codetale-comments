[
  {
    "id" : "9618a239-71e0-4aeb-a5b6-d0c846e2d422",
    "prId" : 99844,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99844#pullrequestreview-605719568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Thanks @minbaev , this is a good start to improve accuracy of throuput collector.\r\n\r\nCould you run the following test with and w/o this code change?\r\n\r\n```\r\nmake test-integration WHAT=./test/integration/scheduler_perf KUBE_TEST_VMODULE=\"''\" KUBE_TEST_ARGS=\"-alsologtostderr=false -logtostderr=false -run=^$$ -benchtime=1ns -bench=BenchmarkPerfScheduling/Preemption/5000Nodes\"\r\n```\r\n\r\nYou _may_ see some P50=0 without this PR, but shouldn't see any dp of P50=0 with this PR.",
        "createdAt" : "2021-03-05T20:16:19Z",
        "updatedAt" : "2021-03-05T21:02:11Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "209bebfd-4321-4222-aca6-2794f231525d",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "BTW: if the `5000Nodes` faile to timeout, try run the `500Nodes` test. ",
        "createdAt" : "2021-03-05T21:04:37Z",
        "updatedAt" : "2021-03-05T21:04:37Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "d5494423-39a5-44fd-95b2-10e04f3df514",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "body" : "Thanks for the comment @Huang-Wei \r\nI tried 5000 and 500 nodes, both seem to timeout, so i ran with 50 Nodes\r\n```\r\nmake test-integration WHAT=./test/integration/scheduler_perf KUBE_TEST_VMODULE=\"''\" KUBE_TEST_ARGS=\"-alsologtostderr=false -logtostderr=false -run=^$$ -benchtime=1ns -data-items-dir=/ -bench=BenchmarkPerfScheduling/Preemption/50Nodes\"\r\n```\r\n\r\nthe results are as follows:\r\nWithout a change:\r\n```\r\n{\"version\":\"v1\",\"dataItems\":[{\"data\":{\"Average\":3.125,\"Perc50\":0,\"Perc90\":15,\"Perc99\":16},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":919.0318547360004,\"Perc50\":795.2340425531916,\"Perc90\":2633.142857142857,\"Perc99\":3364.571428571429},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":849.9424157049999,\"Perc50\":768,\"Perc90\":1986.2068965517242,\"Perc99\":2427.5862068965516},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}}]}\r\n```\r\n\r\nWith a change:\r\n```\r\n{\"version\":\"v1\",\"dataItems\":[{\"data\":{\"Average\":7.142857142857143,\"Perc50\":4,\"Perc90\":16,\"Perc99\":16},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":868.7566698,\"Perc50\":907.6363636363636,\"Perc90\":1974.1030927835052,\"Perc99\":2673.777777777778},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":885.4312448600001,\"Perc50\":846.6666666666666,\"Perc90\":1844.7058823529412,\"Perc99\":2221.176470588235},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}}]}\r\n```\r\n\r\nI see P50=0 without a change but not with a change. I ran it several times ",
        "createdAt" : "2021-03-06T00:24:53Z",
        "updatedAt" : "2021-03-06T00:24:53Z",
        "lastEditedBy" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "tags" : [
        ]
      },
      {
        "id" : "e7568b7b-4179-4fa8-a46c-965d4f44a255",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Oh, the wording \"Preemption\" read in `go test` as a regex, so it actually matches `Preemption.*`. Maybe rerun with:\r\n\r\n```\r\nmake test-integration WHAT=./test/integration/scheduler_perf KUBE_TEST_VMODULE=\"''\" KUBE_TEST_ARGS=\"-alsologtostderr=false -logtostderr=false -run=^$$ -benchtime=1ns -bench=BenchmarkPerfScheduling/Preemption[^.]/500Nodes\"\r\n```",
        "createdAt" : "2021-03-06T00:42:16Z",
        "updatedAt" : "2021-03-06T00:42:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "b2287e6c-453f-4775-9061-23e715e96afd",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "But the changes looks good to me.",
        "createdAt" : "2021-03-06T00:43:00Z",
        "updatedAt" : "2021-03-06T00:43:00Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "a9b43922-6648-47b1-94d2-e549bf81a321",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "body" : "yeah, same result. with 500Nodes it complaints about server receiving too many requests\r\n```\r\nE0305 20:23:18.205700   25784 event_broadcaster.go:253] Server rejected event '&v1.Event{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"pod-qh76t.16699f9161b20bbf\", GenerateName:\"\", Namespace:\"namespace-1\", SelfLink:\"\", UID:\"\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ClusterName:\"\", ManagedFields:[]v1.ManagedFieldsEntry(nil)}, EventTime:v1.MicroTime{Time:time.Time{wall:0xc008d7c308c586b9, ext:37404236612, loc:(*time.Location)(0x7224500)}}, Series:(*v1.EventSeries)(nil), ReportingController:\"default-scheduler\", ReportingInstance:\"default-scheduler-ubuntu-bm\", Action:\"Binding\", Reason:\"Scheduled\", Regarding:v1.ObjectReference{Kind:\"Pod\", Namespace:\"namespace-1\", Name:\"pod-qh76t\", UID:\"a031ac0d-026c-4a97-b678-4b732e78f901\", APIVersion:\"v1\", ResourceVersion:\"5127\", FieldPath:\"\"}, Related:(*v1.ObjectReference)(nil), Note:\"Successfully assigned namespace-1/pod-qh76t to node-0-b28j9\", Type:\"Normal\", DeprecatedSource:v1.EventSource{Component:\"\", Host:\"\"}, DeprecatedFirstTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeprecatedLastTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeprecatedCount:0}': 'the server has received too many requests and has asked us to try again later (post events.events.k8s.io)' (will not retry!)\r\nE0305 20:23:19.208494   25784 scheduler.go:340] \"Error updating pod\" err=\"the server has received too many requests and has asked us to try again later (patch pods pod-5wrnq)\" pod=\"namespace-1/pod-5wrnq\"\r\n```",
        "createdAt" : "2021-03-06T02:28:05Z",
        "updatedAt" : "2021-03-06T02:28:05Z",
        "lastEditedBy" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "tags" : [
        ]
      },
      {
        "id" : "b035b91b-dad1-4ca7-8c87-8c1375c5bd38",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "ok, nvm, it's a known issue.",
        "createdAt" : "2021-03-06T02:36:28Z",
        "updatedAt" : "2021-03-06T02:36:28Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "f204f2f3-23ba-40d6-a980-194b75b98702",
        "parentId" : "62e10501-3091-45f3-9268-bd522ad5af93",
        "authorId" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "body" : "with 50Nodes however it covers both Preemption and PreemtionPV scenarios\r\n```\r\nmake test-integration WHAT=./test/integration/scheduler_perf KUBE_TEST_VMODULE=\"''\" KUBE_TEST_ARGS=\"-alsologtostderr=false -logtostderr=false -run=^$$ -benchtime=1ns -data-items-dir=/ -bench=BenchmarkPerfScheduling/Preemption/50Nodes\"\r\n```\r\nWITHOUT A CHANGE\r\n```\r\n{\"version\":\"v1\",\"dataItems\":[{\"data\":{\"Average\":3.125,\"Perc50\":0,\"Perc90\":15,\"Perc99\":16},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1124.5491326480005,\"Perc50\":1024,\"Perc90\":2389.3333333333335,\"Perc99\":3242.6666666666665},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1135.6132178000003,\"Perc50\":963.5164835164835,\"Perc90\":2321.8604651162786,\"Perc99\":2986.666666666667},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":3.125,\"Perc50\":0,\"Perc90\":15,\"Perc99\":16},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1363.4611799439995,\"Perc50\":1249.720430107527,\"Perc90\":3272.3478260869565,\"Perc99\":3828.869565217391},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1430.7425526300005,\"Perc50\":1049.6000000000001,\"Perc90\":3498.666666666667,\"Perc99\":4352},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}}]}\r\n```\r\n\r\nWITH A CHANGE\r\n```\r\n{\"version\":\"v1\",\"dataItems\":[{\"data\":{\"Average\":16.666666666666668,\"Perc50\":16,\"Perc90\":20,\"Perc99\":20},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1037.3262003560003,\"Perc50\":896,\"Perc90\":2633.142857142857,\"Perc99\":3364.571428571429},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1088.091887815,\"Perc50\":915.3488372093024,\"Perc90\":2447.058823529412,\"Perc99\":3614.117647058824},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/Preemption/50Nodes/namespace-2\"}},{\"data\":{\"Average\":7.142857142857143,\"Perc50\":4,\"Perc90\":16,\"Perc99\":16},\"unit\":\"pods/s\",\"labels\":{\"Metric\":\"SchedulingThroughput\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1365.2620171460005,\"Perc50\":1276.9156626506024,\"Perc90\":3276.7999999999997,\"Perc99\":3686.4},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_e2e_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}},{\"data\":{\"Average\":1511.3039857625004,\"Perc50\":1217.864077669903,\"Perc90\":3871.2195121951218,\"Perc99\":4495.609756097561},\"unit\":\"ms\",\"labels\":{\"Metric\":\"scheduler_pod_scheduling_duration_seconds\",\"Name\":\"BenchmarkPerfScheduling/PreemptionPVs/50Nodes/namespace-2\"}}]}\r\n```\r\nI modified the performance-config.yaml to add the 50 nodes scenario to Preemption and PreemptionPV",
        "createdAt" : "2021-03-06T02:38:46Z",
        "updatedAt" : "2021-03-06T02:38:46Z",
        "lastEditedBy" : "b07f7a73-42a4-4926-853c-bb73f51d27f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "359116f52568a76ddcd8f124ce3975df6a262f26",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +258,262 @@\t\t\tscheduled := len(podsScheduled)\n\t\t\t// Only do sampling if number of scheduled pods is greater than zero\n\t\t\tif scheduled > 0 {\n\t\t\t\tsamplingRatioSeconds := float64(throughputSampleFrequency) / float64(time.Second)\n\t\t\t\tthroughput := float64(scheduled-lastScheduledCount) / samplingRatioSeconds"
  },
  {
    "id" : "d433200b-2461-4ebd-90e2-6d4204cc49c6",
    "prId" : 99638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99638#pullrequestreview-611570766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae16b830-691d-4e69-b917-08c5dba7cd51",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "One question: should we honor QPS and other settings in given `config`? If so, `config` is unversioned, which implied each field employs a concrete value, then if `config` is not nil, how can we decide to derive the values in `config` vs. apply the values specified here (5000)?",
        "createdAt" : "2021-03-12T02:38:52Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "ebb697b3-00a7-4cef-a65a-b06927231b54",
        "parentId" : "ae16b830-691d-4e69-b917-08c5dba7cd51",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "we can take this as a default value, and override this value if CC has a value defined, maybe we can drop a TODO item here and address it in the v1.22?",
        "createdAt" : "2021-03-12T09:22:36Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "8a73a486-f5a1-4fd8-9b08-d1f86c9b76df",
        "parentId" : "ae16b830-691d-4e69-b917-08c5dba7cd51",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "mark this resolved, feel free to drop any comments anyway.",
        "createdAt" : "2021-03-13T05:55:19Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "d50c0aeb5f134e0e2468aa70662d24f8b7280822",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\tContentConfig: restclient.ContentConfig{GroupVersion: &schema.GroupVersion{Group: \"\", Version: \"v1\"}},\n\t\tQPS:           5000.0,\n\t\tBurst:         5000,\n\t}\n"
  },
  {
    "id" : "b9388571-ce06-446b-b702-f030dd5e461f",
    "prId" : 99638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99638#pullrequestreview-613223169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "The logic here first instantiates an up-to-date versioned CC, and calls scheme.Default() to apply default values, and finally convert it back to an unversioned CC. @adtac @alculquicondor could you confirm it's the best practice so far to instantiate a default unversioned CC?",
        "createdAt" : "2021-03-12T02:41:39Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "769aa1b5-d23d-4257-b12e-c472ba0c9136",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "This is what scheduler does today,  pls let me know whether you want this method public and import it from there.\r\nhttps://github.com/kubernetes/kubernetes/blob/fcee7a01050652e54d2819b1942533d96e40f455/cmd/kube-scheduler/app/options/options.go#L137-L147\r\n\r\n",
        "createdAt" : "2021-03-12T09:36:06Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "025a1658-f3ae-476a-978a-20566ad9dd5f",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "Yes, this is how I'd do it too. We only have defaulting for the versioned types, so there's no way to directly apply defaults to the internal type.",
        "createdAt" : "2021-03-12T14:15:35Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "1a7ac1b6-d6d7-4983-ad07-3f91a839f78b",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "`scheduler.New` already knows how to handle defaults... why do it again?",
        "createdAt" : "2021-03-12T14:33:19Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "53652f95-66c3-41b8-b096-30b429d6e723",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "there's more to using the v1beta1 defaults than what `defaultSchedulerOptions` offers. for example we have default QPS limits set in the v1beta1 defaults.go (which we don't use here right now, but will in the future (https://github.com/kubernetes/kubernetes/pull/99638#discussion_r593025201)), but scheduler_perf should respect that in the future. the `scheduler.New` defaults won't give you that IIUC.",
        "createdAt" : "2021-03-12T17:44:07Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "13f94c6b-7218-4163-bb9c-9adae278f693",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Then just use Decode https://github.com/kubernetes/kubernetes/blob/fcee7a01050652e54d2819b1942533d96e40f455/pkg/scheduler/framework/runtime/framework.go#L411-L412",
        "createdAt" : "2021-03-12T18:37:32Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "4a4df098-10a9-4bef-b94f-ec892013136c",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "> there's more to using the v1beta1 defaults than what defaultSchedulerOptions offers\r\n\r\n+1, hope this answer your question?  @alculquicondor ",
        "createdAt" : "2021-03-13T05:54:06Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "bc37baca-1fc4-4d31-a68e-c3e7ee69fc34",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "The second reason why I add this in the first place is because when the `config` is `nil`,  `schedulerOptions` will be overridden even though `scheduler.New` has defined the default options, for example, if create an empty `KubeSchedulerConfiguration` obj instead of setting it as default, `cfg.Profiles` will override the default value .\r\nWe should make sure those options as least have a default value set in this case.\r\n\r\n```\r\n\toptions := defaultSchedulerOptions\r\n\tfor _, opt := range opts {\r\n\t\topt(&options)\r\n\t}\r\n```\r\n\r\nHow the config handled here is a little different with scheduler to simplify the implementation. ",
        "createdAt" : "2021-03-13T14:20:05Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "206a57aa-3837-4282-b5d6-f888a818471b",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "> Then just use Decode\r\n\r\nwell, both of the methods can be used to set the default options, but the `Decode` here will decode into `runtime.Object`\r\n\r\n```\r\nfunc (c *codec) Decode(data []byte, defaultGVK *schema.GroupVersionKind, into runtime.Object) (runtime.Object, *schema.GroupVersionKind, error)\r\n```\r\n\r\nThere is no conversion provided to convert `runtime.Object` into internal `KubeSchedulerConfiguration`, but we still need to create a un-versioned scheduler config.\r\n\r\nBesides, I not sure why you suggest to use `Decode`, am I miss something?",
        "createdAt" : "2021-03-16T05:49:04Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "ac8c96db-9ecf-4942-b7d6-65f2177b77c0",
        "parentId" : "4d0cc30f-e9e6-4926-8e83-d8f15235a913",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "`runtime.Object` is just an interface for any API type, including `KubeSchedulerConfiguration`. Again, see https://github.com/kubernetes/kubernetes/blob/fcee7a01050652e54d2819b1942533d96e40f455/pkg/scheduler/framework/runtime/framework.go#L411-L412 as an example.",
        "createdAt" : "2021-03-16T13:11:44Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "d50c0aeb5f134e0e2468aa70662d24f8b7280822",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +57,61 @@var dataItemsDir = flag.String(\"data-items-dir\", \"\", \"destination directory for storing generated data items for perf dashboard\")\n\nfunc newDefaultComponentConfig() (*config.KubeSchedulerConfiguration, error) {\n\tgvk := v1beta1.SchemeGroupVersion.WithKind(\"KubeSchedulerConfiguration\")\n\tcfg := config.KubeSchedulerConfiguration{}"
  },
  {
    "id" : "bea16371-3897-4456-bd0f-3d365694c027",
    "prId" : 99638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99638#pullrequestreview-610458210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d76dedbb-5e58-4bb4-9a43-469150c4d00a",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "It seems we do not fully respect `config` - we're just using partial fields related to scheduler. Let's add a comment here.",
        "createdAt" : "2021-03-12T02:54:47Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "58e96e9d-61dc-4dc9-80c3-0b554cfd7d94",
        "parentId" : "d76dedbb-5e58-4bb4-9a43-469150c4d00a",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "true, will do.",
        "createdAt" : "2021-03-12T05:21:50Z",
        "updatedAt" : "2021-03-16T15:14:27Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "d50c0aeb5f134e0e2468aa70662d24f8b7280822",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +100,104 @@\t// Not all config options will be effective but only those mostly related with scheduler performance will\n\t// be applied to start a scheduler, most of them are defined in `scheduler.schedulerOptions`.\n\t_, podInformer, schedulerShutdown := util.StartScheduler(client, config)\n\tfakePVControllerShutdown := util.StartFakePVController(client)\n"
  },
  {
    "id" : "2b49cda0-d4b0-4d9c-a18c-0ffb06aa8f11",
    "prId" : 99638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99638#pullrequestreview-613701114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c691d81c-618c-499c-a406-e4110adc6650",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I think if you pass this, you don't need to set the gvk, but you can check.",
        "createdAt" : "2021-03-16T15:44:12Z",
        "updatedAt" : "2021-03-16T15:44:12Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5614ea0e-ad13-4b16-90a7-59f39efff986",
        "parentId" : "c691d81c-618c-499c-a406-e4110adc6650",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "verified, this doesn't work without gvk being set, I will dive into the `decode` method to have a double check in my next day.",
        "createdAt" : "2021-03-16T15:57:18Z",
        "updatedAt" : "2021-03-16T15:57:18Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "4da745d1-81c8-4ebb-b08d-b0781ab453f2",
        "parentId" : "c691d81c-618c-499c-a406-e4110adc6650",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "ah, makes sense, we need a version to apply the defaults",
        "createdAt" : "2021-03-16T20:37:10Z",
        "updatedAt" : "2021-03-16T20:37:11Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "d50c0aeb5f134e0e2468aa70662d24f8b7280822",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +59,63 @@func newDefaultComponentConfig() (*config.KubeSchedulerConfiguration, error) {\n\tgvk := v1beta1.SchemeGroupVersion.WithKind(\"KubeSchedulerConfiguration\")\n\tcfg := config.KubeSchedulerConfiguration{}\n\t_, _, err := kubeschedulerscheme.Codecs.UniversalDecoder().Decode(nil, &gvk, &cfg)\n\tif err != nil {"
  },
  {
    "id" : "1dec754a-3138-4bf9-981e-6752fc7844e9",
    "prId" : 91510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91510#pullrequestreview-420363006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43b9a2d9-1701-457e-8d9a-5afa6473be2c",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "we'd better add a comment to function `getScheduledPods` to highlight the semantics here:\r\n\r\n- if no namespaces are passed in, it means \"match all namespaces\"\r\n- if namespaces are passed in, it means \"match within passed namespaces\"",
        "createdAt" : "2020-05-28T16:59:51Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "9aa38d3d-5328-4801-91cb-522b895e1790",
        "parentId" : "43b9a2d9-1701-457e-8d9a-5afa6473be2c",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "done.",
        "createdAt" : "2020-05-28T18:04:41Z",
        "updatedAt" : "2020-05-28T18:06:12Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "d650b571411bc8c81cc678554ca3ec25fe700e69",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +90,94 @@\tfor i := range pods {\n\t\tpod := pods[i]\n\t\tif len(pod.Spec.NodeName) > 0 && (len(s) == 0 || s.Has(pod.Namespace)) {\n\t\t\tscheduled = append(scheduled, pod)\n\t\t}"
  },
  {
    "id" : "5f512cef-203e-4bfd-8e36-b83ce676fca9",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-343105741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55201ff8-1bbf-4863-bc56-bc6463705592",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "what does dto refer to?",
        "createdAt" : "2020-01-13T15:18:32Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "5038bfe6-9b7a-44cb-998c-3d193bdd4e04",
        "parentId" : "55201ff8-1bbf-4863-bc56-bc6463705592",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "data transfer object, `dto` is a common id used by https://godoc.org/github.com/prometheus/client_golang/prometheus",
        "createdAt" : "2020-01-15T10:04:03Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +27,31 @@\t\"time\"\n\n\tdto \"github.com/prometheus/client_model/go\"\n\tv1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/labels\""
  },
  {
    "id" : "e3c4122f-d3b9-414a-847a-286341f28253",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-343162343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0778bd9-7969-4b99-9a3e-999059e81b36",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "can you document why using index 0 is enough?",
        "createdAt" : "2020-01-13T15:37:50Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "31afcf08-8cb6-40fa-a54b-a9157e572cb1",
        "parentId" : "c0778bd9-7969-4b99-9a3e-999059e81b36",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Done",
        "createdAt" : "2020-01-15T11:45:02Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +164,168 @@\t// Given there's only one histogram registered per each metric name, accessaing\n\t// the first index is sufficient.\n\tdataItem := pc.promHist2Summary(metricFamily.GetMetric()[0].GetHistogram())\n\tif dataItem.Data == nil {\n\t\treturn nil"
  },
  {
    "id" : "515a9d60-0fbe-49cc-940d-f2506acdfe2f",
    "prId" : 85861,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85861#pullrequestreview-353020134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6a5308d-3882-4ed7-aa63-362466465ba8",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "do you know why bckt.UpperBound is a ptr? are we sure it can't be nil here? if so please add a comment.",
        "createdAt" : "2020-01-13T15:46:14Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "ed854821-5cf2-43fc-b300-6be69c470eff",
        "parentId" : "a6a5308d-3882-4ed7-aa63-362466465ba8",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "I do not. I assume the upper bound of the last bucket can be infinity, thus unset.",
        "createdAt" : "2020-01-15T10:12:16Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "23680f6b-ba9a-4d0e-8d31-6b3711c2bfcd",
        "parentId" : "a6a5308d-3882-4ed7-aa63-362466465ba8",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "I added a check for `bckt == nil`. I don't think it will happen once a histogram is populated. Though, I can't verify it will be true in every case.",
        "createdAt" : "2020-01-15T10:54:37Z",
        "updatedAt" : "2020-02-02T17:05:51Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "ff55fa5d-5e50-4432-a803-1066f0a6869e",
        "parentId" : "a6a5308d-3882-4ed7-aa63-362466465ba8",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "should we coalesce the buckets here? ",
        "createdAt" : "2020-02-04T14:27:56Z",
        "updatedAt" : "2020-02-04T14:28:24Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "1d521c7d-5e30-456a-9de8-c1bf1b9e2198",
        "parentId" : "a6a5308d-3882-4ed7-aa63-362466465ba8",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "I will be very surprised if there's gonna be two buckets with the same upper bound. Dunno how it might happen given we consume the histograms directly. Unless, there's a bug in the prometheus code.",
        "createdAt" : "2020-02-04T14:32:52Z",
        "updatedAt" : "2020-02-04T14:32:52Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a1c4a5a88a4b91c80068352439d118896200f6f",
    "line" : 182,
    "diffHunk" : "@@ -1,1 +229,233 @@\t\tbuckets = append(buckets, bucket{\n\t\t\tcount:      float64(*bckt.CumulativeCount),\n\t\t\tupperBound: *bckt.UpperBound,\n\t\t})\n\t}"
  },
  {
    "id" : "a3c4a274-145e-4bba-9545-e6d99d88ae64",
    "prId" : 34084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34084#pullrequestreview-3779298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a5a5832-bd7a-4fd7-921c-56ab68055a71",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can you remove the `client.NewOrDie` several lines ahead?\n",
        "createdAt" : "2016-10-11T22:39:29Z",
        "updatedAt" : "2016-10-14T12:45:01Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ab3c614049da8094534c87b188efa8cb270031",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@\tframework.RunAMasterUsingServer(framework.NewIntegrationTestMasterConfig(), s, h)\n\n\tclientSet := clientset.NewForConfigOrDie(&restclient.Config{\n\t\tHost:          s.URL,\n\t\tContentConfig: restclient.ContentConfig{GroupVersion: &registered.GroupOrDie(api.GroupName).GroupVersion},"
  },
  {
    "id" : "909f2dd2-301c-4d2e-90bc-5c2566bde3a5",
    "prId" : 32520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32520#pullrequestreview-1481060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53e302d4-a944-480e-bebe-05d99249cbc8",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "why did this get commented out?\n",
        "createdAt" : "2016-09-21T01:09:14Z",
        "updatedAt" : "2016-09-21T01:09:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "7d6ebdf2-b695-4f04-aa51-f02143ec9766",
        "parentId" : "53e302d4-a944-480e-bebe-05d99249cbc8",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Needed to disable for compilation. I considered deleting it but, clearly it was originally there for some purpose.  Once these are working again we can determine wether or not we want to re-enable etcd deletion. As of now, a new etc instance that would typically get started by the test wrapper makes this line not necessary unless running on a persistent instance \n",
        "createdAt" : "2016-09-21T06:01:07Z",
        "updatedAt" : "2016-09-21T06:01:07Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "7735f1f3-f3eb-46a3-a025-72220fa87844",
        "parentId" : "53e302d4-a944-480e-bebe-05d99249cbc8",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "can you add a comment explaining why it's commented out / under what conditions it should get uncommented? otherwise 3 months from now we're not going to understand why it's there.\n",
        "createdAt" : "2016-09-21T19:59:59Z",
        "updatedAt" : "2016-09-21T20:00:08Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "90e575d3-e38d-4949-9d0a-77170822f293",
        "parentId" : "53e302d4-a944-480e-bebe-05d99249cbc8",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm pretty sure we can simply remove it.\n",
        "createdAt" : "2016-09-26T06:44:01Z",
        "updatedAt" : "2016-09-26T06:44:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1481f5a3eae9fec44df35c883b06efa1d132e3c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@//   - client rate limit is set to 5000.\nfunc mustSetupScheduler() (schedulerConfigFactory *factory.ConfigFactory, destroyFunc func()) {\n\t// framework.DeleteAllEtcdKeys()\n\n\tvar m *master.Master"
  }
]