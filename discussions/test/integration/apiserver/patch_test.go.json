[
  {
    "id" : "01e8b905-1343-4d84-bb85-bc9599555849",
    "prId" : 63146,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63146#pullrequestreview-115415709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4239138c-7030-4aa9-b631-1529883b69ef",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I will admit that this test change is making me a bit nervous, but I *think* it's correct. Is the behavior when RV is set tested?",
        "createdAt" : "2018-04-25T20:49:41Z",
        "updatedAt" : "2018-04-26T02:45:04Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d9990fe5-f085-441d-aa34-e96caab2cb73",
        "parentId" : "4239138c-7030-4aa9-b631-1529883b69ef",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Is the behavior when RV is set tested?\r\n\r\nI added the ability to directly specify patches in the unit tests and added tests for a patch with a stale RV (one that doesn't even match the current object) and a racing RV (one that matches the current object, but encounters a mismatch persisting the update). That test update is in a separate commit.",
        "createdAt" : "2018-04-26T02:47:03Z",
        "updatedAt" : "2018-04-26T02:47:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b526532c8abf3cbd4442f364377cb7c7f42f199e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +33,37 @@)\n\n// Tests that the apiserver retries patches\nfunc TestPatchConflicts(t *testing.T) {\n\ts, clientSet, closeFn := setup(t)"
  },
  {
    "id" : "17d0b1de-dfad-44ed-9ad3-06f2ecc4b971",
    "prId" : 61847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61847#pullrequestreview-108336147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df5a16c7-4cdd-43df-8085-f94c07dcbc60",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "~~are we running GC in this setup? will missing ownerRefs trigger deletion of the secret?~~\r\n\r\nI guess unknown types (example.com/v1 Foo) will wait for GC",
        "createdAt" : "2018-03-30T13:50:06Z",
        "updatedAt" : "2018-03-30T13:50:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff18af452dafef7fc115512940e0c6250ccf31ca",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +47,51 @@\townerRefs := []metav1.OwnerReference{}\n\tfor i := 0; i < numOfConcurrentPatches; i++ {\n\t\tuid := types.UID(uuid.NewRandom().String())\n\t\townerName := fmt.Sprintf(\"owner-%d\", i)\n\t\tUIDs[i] = uid"
  },
  {
    "id" : "e588402a-4dee-4bac-a174-191781495370",
    "prId" : 43871,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43871#pullrequestreview-31349463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think I don't understand this. We have 2N concurrent goroutines trying to do a patch. Why at least N of them has to succeed? Can you explain it (and add comment about it)?",
        "createdAt" : "2017-04-05T08:52:17Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e9a95f11-6e80-410c-b042-e16b794fdf9d",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "https://github.com/kubernetes/kubernetes/pull/43902/files#diff-a98175d31a994ac0386ef984acfe13f5R111\r\n\r\n@liggitt wants to copy that into his patch. Took some time to get the reasoning there.",
        "createdAt" : "2017-04-05T12:36:22Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1087a344-3742-49bf-8b7d-baf7d37ceeef",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "BTW - I just looked into the other PR, and I think I like the approach from #43902 better. So maybe we should proceed with that one and close this one?\r\n@liggitt @sttts  - thoughts?",
        "createdAt" : "2017-04-05T12:42:59Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f73a43fc-e7dd-4e94-87f1-07968c87214a",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I can rename the function here as well. That one doesn't address the patch map mutation issue",
        "createdAt" : "2017-04-05T12:58:52Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "27a108c7-4a83-4068-b66b-7eb221e71333",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I see. But the test is still passing with the other PR, which means it's not really testing everything, right?\r\n\r\nAnyway - I'm fine with proceeding with this one too - just want to understand it.",
        "createdAt" : "2017-04-06T09:07:50Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7825bf9a-df05-4818-af19-346d9bba9ac8",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> the test is still passing with the other PR\r\n\r\nthe test in the other PR doesn't include the patch directives... the test in this PR would fail against the fix in the other PR",
        "createdAt" : "2017-04-06T15:30:58Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d0e06719-b190-40b3-b7c1-02742a5719b9",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "OK - sorry for confusion then.",
        "createdAt" : "2017-04-06T15:34:44Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e92e2490-6551-497c-9405-7a7218d6d2d8",
        "parentId" : "fc6268e6-35fb-4d26-aa5d-9d3776dc3237",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can you then please add a comment (similar than the one from the other PR) and I will lgtm this PR.",
        "createdAt" : "2017-04-06T15:35:26Z",
        "updatedAt" : "2017-04-06T16:30:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c415e4aeabe5e5514dcdbf2c01c533533c25f4c1",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@\twg.Wait()\n\n\tif successes < handlers.MaxRetryWhenPatchConflicts {\n\t\tt.Errorf(\"Expected at least %d successful patches for %s, got %d\", handlers.MaxRetryWhenPatchConflicts, \"secrets\", successes)\n\t} else {"
  }
]