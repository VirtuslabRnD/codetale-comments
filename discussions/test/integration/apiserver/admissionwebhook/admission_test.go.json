[
  {
    "id" : "b8c5cece-f523-43a6-9ac3-5eb0e4b95607",
    "prId" : 94685,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94685#pullrequestreview-494698331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cfd9e79-c629-4b56-b0e5-13ca25c29c91",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just to verify, adding this made the test fail until the conversion was done, right?",
        "createdAt" : "2020-09-23T13:34:00Z",
        "updatedAt" : "2020-09-23T13:34:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0f35785a-c4be-41da-b46c-586963ef46a6",
        "parentId" : "2cfd9e79-c629-4b56-b0e5-13ca25c29c91",
        "authorId" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "body" : "That's correct, enabling the feature gate made the test fail without the conversion, which I thought was impressive.",
        "createdAt" : "2020-09-23T14:05:44Z",
        "updatedAt" : "2020-09-23T14:15:09Z",
        "lastEditedBy" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf0a33d1de4cff08f527c29ab235ea85def3e197",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +482,486 @@\t\t\"--runtime-config=api/all=true\",\n\t\t// enable feature-gates that protect resources to check their storage, too.\n\t\t\"--feature-gates=EphemeralContainers=true\",\n\t}, etcdConfig)\n\tdefer server.TearDownFn()"
  },
  {
    "id" : "d1066ad0-53d0-4c1c-98fa-1a28d95c97d2",
    "prId" : 85676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85676#pullrequestreview-326546775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "instead of reporting this err you'd need to store the error from the above code in a variable and report that.\r\n\r\nlines 715 and 725.\r\n",
        "createdAt" : "2019-11-28T20:52:32Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "89ede82e-141b-4f8f-be47-6d15d0971484",
        "parentId" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "@neolit123 Thanks.\r\nRefer to Line 670 and Line 740,the context handle this error",
        "createdAt" : "2019-11-29T07:16:01Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      },
      {
        "id" : "58eadf8f-3b9c-4eef-a5c7-ffdcb3e9406c",
        "parentId" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "are you suggesting that line 670 already has the same pattern of not handling this error?\r\nthe problem is that this will print an error message that is not very descriptive.\r\n\r\nbut ok, leave it like that.\r\n",
        "createdAt" : "2019-11-29T12:28:35Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "69478ad4-5bca-4c21-84eb-df0eebe84d76",
        "parentId" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "@neolit123  can you give some advie to deal with this error if you can.Thanks\r\nplz",
        "createdAt" : "2019-12-03T09:20:46Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      },
      {
        "id" : "e59c7dea-8427-4eb3-b579-bb2ef0ee16b9",
        "parentId" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the error is handled the same way in the code above, so it's OK.",
        "createdAt" : "2019-12-03T20:53:42Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "017e4f99-a04f-45fd-8339-cb10f5fd467f",
        "parentId" : "65e9f8f3-71c5-48cf-b414-50e1fd894497",
        "authorId" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "body" : "ok,thanks",
        "createdAt" : "2019-12-04T01:01:13Z",
        "updatedAt" : "2019-12-06T15:05:49Z",
        "lastEditedBy" : "cc740aab-0edd-4978-b80c-6ca3543a6188",
        "tags" : [
        ]
      }
    ],
    "commit" : "06c59017697c255fad53b0f55df9257125c6c9cd",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +738,742 @@\t})\n\tif err != nil {\n\t\tc.t.Error(err)\n\t\treturn\n\t}"
  },
  {
    "id" : "59e481b9-6d71-41e8-93ff-b20700934aef",
    "prId" : 77804,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77804#pullrequestreview-236657497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1d13b89-b18d-4a18-836d-755b2311f51a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "StartRealMasterOrDie also sets up test CRDs:\r\n\r\n```go\r\n\t// create CRDs so we can make sure that custom resources do not get lost\r\n\tCreateTestCRDs(t, apiextensionsclientset.NewForConfigOrDie(kubeClientConfig), false, GetCustomResourceDefinitionData()...)\r\n```",
        "createdAt" : "2019-05-13T12:47:26Z",
        "updatedAt" : "2019-05-14T08:11:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0b86b5ef-38a0-4cc6-8692-8f9166e55a16",
        "parentId" : "e1d13b89-b18d-4a18-836d-755b2311f51a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what for?",
        "createdAt" : "2019-05-13T12:47:52Z",
        "updatedAt" : "2019-05-14T08:11:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6d3ae91c-661f-493a-b33d-4c4257452dc6",
        "parentId" : "e1d13b89-b18d-4a18-836d-755b2311f51a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I would prefer standard plumbing and explicit fixtures than something hidden deep in custom plumbing code.",
        "createdAt" : "2019-05-13T12:49:16Z",
        "updatedAt" : "2019-05-14T08:11:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1005680f-292a-4bc5-994c-8b12a4d2d7a4",
        "parentId" : "e1d13b89-b18d-4a18-836d-755b2311f51a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no disagreement, we can hoist that fixture setup out to the places that require it. it grew organically and all the tests using that setup method intend to exercise an operation (checking etcd storage path, dry-run, or webhook admission) over all resources, including custom resources",
        "createdAt" : "2019-05-13T12:52:42Z",
        "updatedAt" : "2019-05-14T08:11:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e2089fb5-27a9-4623-9f38-a0ade455867b",
        "parentId" : "e1d13b89-b18d-4a18-836d-755b2311f51a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "fixed",
        "createdAt" : "2019-05-13T12:55:37Z",
        "updatedAt" : "2019-05-14T08:11:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "76b5bee48ca4605fb9ff2be74cdfaa630c743308",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +327,331 @@\n\t// start API server\n\ts, err := kubeapiservertesting.StartTestServer(t, kubeapiservertesting.NewDefaultTestServerOptions(), []string{\n\t\t\"--disable-admission-plugins=ServiceAccount,StorageObjectInUseProtection\",\n\t\t\"--runtime-config=extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/podsecuritypolicies=true,extensions/v1beta1/networkpolicies=true\","
  },
  {
    "id" : "0f8a57d4-b685-4189-9536-d30d6155b74d",
    "prId" : 77563,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77563#pullrequestreview-235842737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c59fed62-f8cd-4846-85bb-6495bbddd275",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "else make sure request.Options.Object is nil",
        "createdAt" : "2019-05-09T22:39:07Z",
        "updatedAt" : "2019-05-14T17:51:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "900d652a9ac11e53293950b3d191295c21430215",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +296,300 @@\t} else if request.Options.Object != nil {\n\t\treturn fmt.Errorf(\"unexpected options: %#v\", request.Options.Object)\n\t}\n\n\treturn nil"
  },
  {
    "id" : "ce224897-d877-4dc3-99c5-ba2176b2f670",
    "prId" : 76959,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76959#pullrequestreview-229811476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a159bc7e-dfce-45eb-a5cf-9ca55566867f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit: might read easier as:\r\n```go\r\nstub := \"\"\r\nif data, ok := etcd.GetEtcdStorageDataForNamespace(testNamespace)[gvr]; ok {\r\n  stub = data.Stub\r\n}\r\nif data, ok := stubDataOverrides[gvr]; ok {\r\n  stub = data\r\n}\r\nif len(stub) == 0 {\r\n  return nil, fmt.Errorf(\"no stub data for %#v\", gvr)\r\n}\r\n```\r\n\r\nthat also allows us to override the etcd data specifically for our test if we want",
        "createdAt" : "2019-04-23T21:41:42Z",
        "updatedAt" : "2019-04-23T22:02:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fe28ee9573d072f4f42fc690d33163ecfd3dfe1",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +982,986 @@\nfunc getStubObj(gvr schema.GroupVersionResource, resource metav1.APIResource) (*unstructured.Unstructured, error) {\n\tstub := \"\"\n\tif data, ok := etcd.GetEtcdStorageDataForNamespace(testNamespace)[gvr]; ok {\n\t\tstub = data.Stub"
  },
  {
    "id" : "da439759-0294-4cb2-b4f7-4869fba263b7",
    "prId" : 76910,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76910#pullrequestreview-229591296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2388e5fb-6cdc-4595-8df4-1bb16eb18913",
        "parentId" : null,
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "It is a bit hard to follow with all inline calls and parameters substitutions, is there any way to make it a little more simple/cleaner?",
        "createdAt" : "2019-04-23T14:24:38Z",
        "updatedAt" : "2019-04-23T14:32:11Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      },
      {
        "id" : "2895ca8c-b845-4e75-9b39-56f19677607f",
        "parentId" : "2388e5fb-6cdc-4595-8df4-1bb16eb18913",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "refactored a bit",
        "createdAt" : "2019-04-23T14:32:23Z",
        "updatedAt" : "2019-04-23T14:32:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4576ec5a663951b9f92b056737c165c44234727",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +781,785 @@\n// testPodBindingEviction verifies pod binding and eviction admission\nfunc testPodBindingEviction(c *testContext) {\n\tpodGVR := gvr(\"\", \"v1\", \"pods\")\n\tpod, err := createOrGetResource(c.client, podGVR, c.resources[podGVR])"
  },
  {
    "id" : "a2d0dd20-5372-47a1-b4e0-7fd01f17d295",
    "prId" : 76849,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76849#pullrequestreview-228928790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38d99872-766f-4551-97e8-f1a0fa169cbe",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Does the apiserver just ignore this nonexistent field during deserialization? ",
        "createdAt" : "2019-04-21T21:52:01Z",
        "updatedAt" : "2019-04-21T22:23:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "45ca1358-9227-4d1a-9c46-ce00a35336f0",
        "parentId" : "38d99872-766f-4551-97e8-f1a0fa169cbe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes, just like it drops other unknown json data",
        "createdAt" : "2019-04-21T22:26:43Z",
        "updatedAt" : "2019-04-21T22:26:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69042da958525c5e5008baa1d4fa3175c2226764",
    "line" : 795,
    "diffHunk" : "@@ -1,1 +793,797 @@\t\t// If we're mutating, and have an object, return a patch to exercise conversion\n\t\tif phase == mutation && len(review.Request.Object.Raw) > 0 {\n\t\t\treview.Response.Patch = []byte(`[{\"op\":\"add\",\"path\":\"/foo\",\"value\":\"test\"}]`)\n\t\t\tjsonPatch := v1beta1.PatchTypeJSONPatch\n\t\t\treview.Response.PatchType = &jsonPatch"
  },
  {
    "id" : "76898e53-262a-4039-a900-628a41070802",
    "prId" : 76849,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76849#pullrequestreview-228928014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24b9d3c8-0f65-4bc2-b8aa-f32226b89084",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is much nicer. Thanks.",
        "createdAt" : "2019-04-21T21:53:47Z",
        "updatedAt" : "2019-04-21T22:23:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69042da958525c5e5008baa1d4fa3175c2226764",
    "line" : 743,
    "diffHunk" : "@@ -1,1 +741,745 @@\nfunc newWebhookHandler(t *testing.T, holder *holder, phase string) http.Handler {\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\tdefer r.Body.Close()\n\t\tdata, err := ioutil.ReadAll(r.Body)"
  },
  {
    "id" : "a0ef1741-d644-4ed0-8f47-09cff49fe250",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-230369857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d28fb4c0-4bac-40ad-9043-ec4b778e1529",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Call `c.admissionHolder.verifyResult(c.t)` and then set another expectation if you want to test multiple delete calls are made and passed to admission",
        "createdAt" : "2019-04-24T21:38:23Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +562,566 @@\t\treturn\n\t}\n\n\t// Verify that an update-on-delete triggers the webhook and populates the admisssionRequest.oldObject.\n\tobj, err = createOrGetResource(c.client, c.gvr, c.resource)"
  },
  {
    "id" : "d213351e-e001-41e3-8cb3-0b1ff9f0c0f6",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-230370176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e906131-fdce-43cf-91c8-7e05e2629464",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "verify and set another expectation here",
        "createdAt" : "2019-04-24T21:39:11Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +587,591 @@\t\tc.t.Error(err)\n\t\treturn\n\t}\n\tc.admissionHolder.verify(c.t)\n"
  },
  {
    "id" : "b766208a-75d6-4c4d-86fb-380035ceade4",
    "prId" : 76346,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76346#pullrequestreview-238657486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b5eb256-e6ec-4d3a-9395-00d3a9b1887f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should you wait until our finalizer is the only finalizer present to stomp remove all finalizers? this seems like it will race with the internal CRD finalizer",
        "createdAt" : "2019-05-15T16:23:50Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0ad0b4ef-c895-488f-af12-254513f73cff",
        "parentId" : "8b5eb256-e6ec-4d3a-9395-00d3a9b1887f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Ack. I added a wait loop. I don't know if the race with the internal CRD finalizer would cause any test flake, but we can't be too conservative.",
        "createdAt" : "2019-05-16T21:55:02Z",
        "updatedAt" : "2019-05-17T16:54:41Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d40e3c9e98ecade4a62d18f20163164d3e5e862",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +611,615 @@\t\tobj.GetName(),\n\t\ttypes.MergePatchType,\n\t\t[]byte(`{\"metadata\":{\"finalizers\":[]}}`),\n\t\tmetav1.PatchOptions{})\n\tif err != nil {"
  }
]