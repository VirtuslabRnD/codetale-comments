[
  {
    "id" : "d2c14aa2-58f5-47a1-a98e-9853ec006b07",
    "prId" : 91993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91993#pullrequestreview-464373568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "782dbf89-a015-4773-bf14-0658094a0cd9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is there a CRD test that tries to set the managed fields via the main resource? I'd like to see that that still works.",
        "createdAt" : "2020-07-23T16:33:15Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b9d86e99-5b96-4cdb-b017-f7f8e115c9cd",
        "parentId" : "782dbf89-a015-4773-bf14-0658094a0cd9",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "What do you mean by \"main resource\"?",
        "createdAt" : "2020-07-24T11:10:02Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "e075263c-05dd-4e78-a0d8-0ddc3e68c1c2",
        "parentId" : "782dbf89-a015-4773-bf14-0658094a0cd9",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Ah I see, you mean without the subresource path. ðŸ¤” yeah, I can't see a test that explicitly tries and set the managed fields using CRDs.",
        "createdAt" : "2020-07-24T16:12:07Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "32b5d6f7-a0d4-407e-a6b3-b37c3054fa76",
        "parentId" : "782dbf89-a015-4773-bf14-0658094a0cd9",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Added a new test here: https://github.com/kubernetes/kubernetes/pull/91993/commits/d9a577f73949bdd75bd8d0b2c5c1bd3fe192d1c6",
        "createdAt" : "2020-08-10T16:09:50Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "c522ee08a3d248ec1097e3673119ffa7a4e1ef7b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +132,136 @@\tverifyReplicas(t, result, 1)\n\n\t// Try to set managed fields using a subresource and verify that it has no effect\n\texistingManagedFields, err := getManagedFields(result)\n\tif err != nil {"
  },
  {
    "id" : "be2efcde-6397-4bef-87d0-5f5443989985",
    "prId" : 91993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91993#pullrequestreview-464419791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2208944f-7c39-45dc-b0c4-4c8ff4f5441e",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Rather than do a helper function, you can use `Do().Get()` above?",
        "createdAt" : "2020-07-24T17:24:44Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "5c59c97c-082e-4d31-93af-4d010fb52f14",
        "parentId" : "2208944f-7c39-45dc-b0c4-4c8ff4f5441e",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "I have tried to use `Do().Get()` but I was getting this error:\r\n\r\n```\r\n    apply_crd_test.go:173: Error updating subresource: no kind \"WishIHadChosenNoxu\" is registered for version \"mygroup.example.com/v1beta1\" in scheme \"k8s.io/client-go/kubernetes/scheme/register.go:70\"\r\n```\r\n\r\nAfter a bit of tries I have switched back to `DoRaw()`. Do you know what I could be missing?\r\n\r\nAnother reason to keep `DoRaw()` is that I would need to add a similar logic to the helper function to extract the existing managed fields.",
        "createdAt" : "2020-08-10T15:16:48Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "0ff57433-c645-4551-9c68-658dbc307912",
        "parentId" : "2208944f-7c39-45dc-b0c4-4c8ff4f5441e",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "OK Forget it, there must be some registering of the type needed, that's not that important.",
        "createdAt" : "2020-08-10T17:12:05Z",
        "updatedAt" : "2020-08-18T11:35:03Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "c522ee08a3d248ec1097e3673119ffa7a4e1ef7b",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +168,172 @@\t\tt.Fatalf(\"Error updating subresource: %v \", err)\n\t}\n\tnewManagedFields, err := getManagedFields(result)\n\tif err != nil {\n\t\tt.Fatalf(\"failed to get managedFields from response: %v\", err)"
  },
  {
    "id" : "b5611f2d-9853-4a8e-a558-1ae5525de825",
    "prId" : 88076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88076#pullrequestreview-366410501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ba98adc-d5ef-4cbd-a3a7-225b3bbd80b9",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Alternately, you could have given this a default \"TCP\"",
        "createdAt" : "2020-02-25T22:33:51Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "ce69cf07-49f9-4cac-8902-31b1063037e5",
        "parentId" : "8ba98adc-d5ef-4cbd-a3a7-225b3bbd80b9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the test uses v1beta1 which does not allow defaults",
        "createdAt" : "2020-02-28T13:52:24Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e187415fd582ea80bc316fb76cb30c3ad1aead4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"protocol\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},"
  },
  {
    "id" : "94fcc6c0-200c-4904-823f-808204a402f9",
    "prId" : 88076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88076#pullrequestreview-366409167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "most of these don't have to become required, only the `list-map-keys` have to be, that is `containerPort`and `protocol` (if you don't give it a default).",
        "createdAt" : "2020-02-25T22:34:41Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "706d2c52-b1cd-4d51-b02c-0ab24ff7362e",
        "parentId" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "that would significantly simplify the diff in that file, and be closer to the original intent of the test.",
        "createdAt" : "2020-02-25T22:35:14Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "83d24cb0-7d96-4d10-96bb-cb75abf9f5af",
        "parentId" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "authorId" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "body" : "Basically, the integration test fails if they're not required, or don't have a default due to the new changes.",
        "createdAt" : "2020-02-28T13:13:24Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "tags" : [
        ]
      },
      {
        "id" : "2cd48a61-cca8-4bcd-91ca-e784103cba6c",
        "parentId" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the validation is not enforcing required-or-default on the right properties... see  https://github.com/kubernetes/kubernetes/pull/88076/files#r385693745\r\n\r\nonce that is fixed I expect you can revert most of the changes in this test",
        "createdAt" : "2020-02-28T13:28:07Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4a2cef75-e366-4849-baa7-4a39b093fb56",
        "parentId" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "only list-map-key properties (containerPort and protocol) should have needed to be required-or-defaulted... if you had to change anything else that sounds like a bug in the validation",
        "createdAt" : "2020-02-28T13:32:36Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5f866757-12d2-4736-885c-ade3b5f63ea5",
        "parentId" : "bfb008eb-66d6-42a0-bdf4-aec28bd58ca5",
        "authorId" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "body" : "Okay, `protocol` is not required and it has no defaults. The test uses the `v1beta1` group which doesn't allow defaults so that means `protocol` has to be required.\r\n\r\nI've set it as required and the test passes now.",
        "createdAt" : "2020-02-28T13:50:26Z",
        "updatedAt" : "2020-02-28T15:01:15Z",
        "lastEditedBy" : "837ffb5a-9f47-4590-9d87-0f208d8950d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e187415fd582ea80bc316fb76cb30c3ad1aead4",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\t\t\"containerPort\",\n\t\t\t\t\t\t\t\t\t\"protocol\"\n\t\t\t\t\t\t\t\t],"
  },
  {
    "id" : "9cfee469-1e29-491a-98d1-e2080f2fc451",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-279799474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f562cfd0-0c11-4e5f-8e4d-ef1df05a38f4",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "we need a test that checks that apply patches do not work for CRs without structural schema.",
        "createdAt" : "2019-08-26T18:50:28Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7fa7cac9-9bbd-4089-879a-bbabdb55a375",
        "parentId" : "f562cfd0-0c11-4e5f-8e4d-ef1df05a38f4",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "We currently have tests for CRs without structural schemas that validate that apply succeeds",
        "createdAt" : "2019-08-26T19:50:55Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 368,
    "diffHunk" : "@@ -1,1 +366,370 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to add a new list item to the object as a different applier: %v:\\n%v\", err, string(result))\n\t}\n\tverifyNumPorts(t, result, 2)\n}"
  },
  {
    "id" : "35383d5f-a6c4-42b5-9aae-103d92f708a1",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-279963031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32acf80e-4bc2-4595-bf9a-53f0f4039051",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Do we test `ObjectMeta` works correctly?",
        "createdAt" : "2019-08-26T18:50:59Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "91b72963-d854-4c0a-b4b9-9ab7fd68c534",
        "parentId" : "32acf80e-4bc2-4595-bf9a-53f0f4039051",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "No, that is a good test case. I looked at the schema but I should add a test for that",
        "createdAt" : "2019-08-26T19:51:24Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "a48ae051-2736-49ea-b185-eae585d0f49b",
        "parentId" : "32acf80e-4bc2-4595-bf9a-53f0f4039051",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "or integrate some test data here which also covers ObjectMeta, might be easier.",
        "createdAt" : "2019-08-27T05:34:38Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 370,
    "diffHunk" : "@@ -1,1 +368,372 @@\t}\n\tverifyNumPorts(t, result, 2)\n}\n\n// TestApplyCRDNonStructuralSchema tests that when a CRD has a non-structural schema in its validation field,"
  },
  {
    "id" : "a77ac5f2-33ea-4493-9b84-48c9bc718a2b",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281675199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "shouldn't the result be checked whether it is as expected? Would this test notice non-functional extensions?\r\n\r\nThe same question for all tests below too.",
        "createdAt" : "2019-08-29T16:41:40Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7cd38540-6eef-45bb-b7f6-d8836d859af6",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "In the upper sense: I would like to see test cases which verify that all extensions values possible lead to the expected response.",
        "createdAt" : "2019-08-29T16:43:16Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d47478cb-e60c-4dd8-a4ec-7f51619f4b1c",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "agree, I expected the results in success cases to at least be spot-checked to make sure the data was handled as expected and the managed fields set as expected (applies to all results in this test and the other TestApplyCRDNonStructuralSchema/NoSchema tests)",
        "createdAt" : "2019-08-29T16:43:46Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d46b8bcd-74ba-4a9a-aff8-eca28a445218",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Spot checking to make sure everything is plumbed correctly seems right.\r\n\r\nExhaustively checking apply functionality should be (and is) done elsewhere.",
        "createdAt" : "2019-08-29T17:16:26Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "184b7862-0a3e-4513-ac3e-223322c92c2b",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, just something that indicates the expected logic branch (no schema, non-structural schema, structural schema) was hit server-side",
        "createdAt" : "2019-08-29T17:26:11Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "78e27760-952c-4760-97fd-70249a38c6d7",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "body" : "In this test, I am using expecting a conflict as a proxy for checking that the managedFields is as expected. I didn't want to directly check that the field looked a certain way, since the serialization of managedFields is tested elsewhere and is subject to change in future versions.\r\n\r\nEssentially I am just using the conflict check to make sure the x-list-type and x-list-map-keys extensions are wired into the schema successfully. Would it be better if I added more checks for conflicts and some checks on the specific values we are updating (replicas, finalizers, etc)?",
        "createdAt" : "2019-08-29T18:42:05Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "37324129-fa96-456d-92ea-e5f9b41f8c7f",
        "tags" : [
        ]
      },
      {
        "id" : "0cc7db6c-2f5f-45a0-9660-811f9c562b02",
        "parentId" : "49f4b7c2-3c4e-48e0-bd9b-8ae7e7d84075",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think we're asking for checks of the specific values being updated in the success cases.\r\n\r\nI think it's also good to check that the conflict is about the expected field.\r\n\r\nGolden-data testing the manged fields entry is not what we're asking for :)",
        "createdAt" : "2019-08-29T19:29:37Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +249,253 @@\tverifyReplicas(t, result, 1)\n\tverifyNumPorts(t, result, 1)\n\n\t// Patch object to add another finalizer to the finalizers list\n\tresult, err = rest.Patch(types.MergePatchType)."
  },
  {
    "id" : "3161ecf4-b6a4-4549-b726-01bd5abccb0c",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281771787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b6a07d-8921-4180-87fd-c4de7e2300bc",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Check the .spec.replica's value.",
        "createdAt" : "2019-08-29T23:38:36Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 524,
    "diffHunk" : "@@ -1,1 +522,526 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to apply object with force after updating replicas: %v:\\n%v\", err, string(result))\n\t}\n\tverifyReplicas(t, result, 1.0)\n}"
  },
  {
    "id" : "e82d16a6-35d4-4b15-8409-2eb799131e2d",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281771787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd63203a-7dce-4d43-adcc-63d519191f42",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "check spec.replica's value, to prove that the test condition is set up as expected.",
        "createdAt" : "2019-08-29T23:39:11Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 493,
    "diffHunk" : "@@ -1,1 +491,495 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to update number of replicas with merge patch: %v:\\n%v\", err, string(result))\n\t}\n\tverifyReplicas(t, result, 5.0)\n"
  },
  {
    "id" : "7be58d6f-e327-4d55-9731-3bb29a29ca94",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281771787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c342e06d-3417-4dfb-9009-7879fa8def56",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Check .spec.replica's value, to prove the the test condition is set up.",
        "createdAt" : "2019-08-29T23:39:49Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +286,290 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to update number of replicas with merge patch: %v:\\n%v\", err, string(result))\n\t}\n\tverifyReplicas(t, result, 5)\n"
  },
  {
    "id" : "b0a5b6b8-c308-48b8-8ac1-446d7a6e64f8",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281771787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae2edae7-2435-4221-b982-765b5e54f794",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "spot check .spec.replicas",
        "createdAt" : "2019-08-29T23:40:24Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to update number of replicas with merge patch: %v:\\n%v\", err, string(result))\n\t}\n\tverifyReplicas(t, result, 5)\n"
  },
  {
    "id" : "28b866c3-07e6-4919-8b26-bbfb68437ba5",
    "prId" : 77354,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77354#pullrequestreview-281771787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cac2a63e-2ccf-434b-8f2b-4e1c7edecbad",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "maybe check finalizers and spec.replicas, since those are what are acted on below.",
        "createdAt" : "2019-08-29T23:41:42Z",
        "updatedAt" : "2019-08-30T05:49:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7303df0b2161600c47f49034e120fa2065ef539c",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +244,248 @@\tif err != nil {\n\t\tt.Fatalf(\"failed to create custom resource with apply: %v:\\n%v\", err, string(result))\n\t}\n\tverifyNumFinalizers(t, result, 1)\n\tverifyFinalizersIncludes(t, result, \"test-finalizer\")"
  }
]