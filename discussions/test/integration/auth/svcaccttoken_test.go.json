[
  {
    "id" : "2f7f23bc-8edb-4c35-ace6-ec402f4ed183",
    "prId" : 89549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89549#pullrequestreview-385900747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1cf5723-befb-4011-a041-c6001caef18f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "am I misreading this test, or are these comparing dates and assuming they are constructed at the exact second the token was issued? if so, that will be flaky if the token minting and these time constructions cross a second boundary",
        "createdAt" : "2020-04-01T04:03:22Z",
        "updatedAt" : "2020-04-22T19:00:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4ac4ccca-5159-48b5-9dc8-ad4557a1491d",
        "parentId" : "e1cf5723-befb-4011-a041-c6001caef18f",
        "authorId" : "cba1ad27-2a69-4b4d-be96-98362efd243b",
        "body" : "Well you are right. Though the chance is very low, it might cause flaky.\r\nAdded +-2 seconds tolerance to the test check, I don't expect them to be flaky with such setting.",
        "createdAt" : "2020-04-01T19:52:11Z",
        "updatedAt" : "2020-04-22T19:00:10Z",
        "lastEditedBy" : "cba1ad27-2a69-4b4d-be96-98362efd243b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae0e52d28cd26fcece361e14e5263a654b1c4a09",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +416,420 @@\t\tvar leeway int64 = 2\n\t\tactualExpiry := jwt.NewNumericDate(time.Now().Add(time.Duration(24*365) * time.Hour))\n\t\tassumedExpiry := jwt.NewNumericDate(time.Now().Add(time.Duration(requestExp) * time.Second))\n\t\texp, err := strconv.ParseInt(getSubObject(t, getPayload(t, treq.Status.Token), \"exp\"), 10, 64)\n\t\tif err != nil {"
  },
  {
    "id" : "4be598a5-2807-492b-b643-75f819e69efe",
    "prId" : 89549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89549#pullrequestreview-391684437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "379aa698-6170-4ad0-a42e-f986abd4b0e8",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Not sure what this change does?",
        "createdAt" : "2020-04-10T19:54:23Z",
        "updatedAt" : "2020-04-22T19:00:10Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "f11ffeab-1205-444f-a5d9-8beb9b330905",
        "parentId" : "379aa698-6170-4ad0-a42e-f986abd4b0e8",
        "authorId" : "cba1ad27-2a69-4b4d-be96-98362efd243b",
        "body" : "Since I made expiration extension to be triggered by the special requested extension 60 * 60 + 7, if in this test we set max expiration seconds to 60 * 60, it would cap the requested expiration to 60 * 60, thus my special flow cannot be triggered by this test. -> I made it to 2 * 60 * 60",
        "createdAt" : "2020-04-10T22:03:36Z",
        "updatedAt" : "2020-04-22T19:00:10Z",
        "lastEditedBy" : "cba1ad27-2a69-4b4d-be96-98362efd243b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae0e52d28cd26fcece361e14e5263a654b1c4a09",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +79,83 @@\taud := authenticator.Audiences{\"api\"}\n\n\tmaxExpirationSeconds := int64(60 * 60 * 2)\n\tmaxExpirationDuration, err := time.ParseDuration(fmt.Sprintf(\"%ds\", maxExpirationSeconds))\n\tif err != nil {"
  },
  {
    "id" : "c1904cf7-c112-40b9-a3d8-edd9bb647218",
    "prId" : 80724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80724#pullrequestreview-331415853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dbe8d0a-65ad-4bb4-a751-c4afb46cccc8",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "key could be nil here. I'd suggest getting rid of the subsubtests. I'm not sure that they are actually helpful. ",
        "createdAt" : "2019-12-11T22:34:46Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "4d11e909-44ba-4cd0-83ce-a754a47fe6d0",
        "parentId" : "2dbe8d0a-65ad-4bb4-a751-c4afb46cccc8",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yeah, good point, it's already in a higher-level subtest anyway.",
        "createdAt" : "2019-12-12T18:40:56Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a176ac77241ff059f22609fc569ac219334238c",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +711,715 @@\t\t}\n\t\tvar claims jwt.Claims\n\t\tif err := tok.Claims(key, &claims); err != nil {\n\t\t\tt.Fatalf(\"could not validate claims on token: %v\", err)\n\t\t}"
  },
  {
    "id" : "d92c5b24-3517-46e5-8ecb-fe36cda1495a",
    "prId" : 63999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63999#pullrequestreview-125026302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbeade84-4269-47a6-a353-bc4486955a1b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "clever",
        "createdAt" : "2018-06-01T01:34:11Z",
        "updatedAt" : "2018-06-01T01:34:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9e3f1b3e9e557e2676393b460c1eb43a097282",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +303,307 @@\n\t\t// backdate the token\n\t\tthen := time.Now().Add(-2 * time.Hour)\n\t\tsc := &jwt.Claims{\n\t\t\tSubject:   apiserverserviceaccount.MakeUsername(sa.Namespace, sa.Name),"
  },
  {
    "id" : "31962403-523c-4786-b714-36d0144d04db",
    "prId" : 59940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59940#pullrequestreview-99914468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84964341-ca85-4fa4-ac80-cdf53b448e41",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "What leeway should we give for validating token expiration? Right now it's set to one minute to account for clock skew.",
        "createdAt" : "2018-02-26T21:42:10Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "e0cfbeec-31e7-4cb7-97e2-c688bcef43fb",
        "parentId" : "84964341-ca85-4fa4-ac80-cdf53b448e41",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Adding a minute for a single test is unfortunate. As a follow up, either plumb leeway and shorten for this test or omit if t.Short() is specified? ",
        "createdAt" : "2018-02-28T01:04:41Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "024f57affebc137c6166c16e2ea99f67e73699f1",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +304,308 @@\n\t\tdoTokenReview(t, cs, treq, false)\n\t\ttime.Sleep(63 * time.Second)\n\t\tdoTokenReview(t, cs, treq, true)\n\t})"
  }
]