[
  {
    "id" : "cc62dc2d-a0bf-4169-9e67-c5839cd34703",
    "prId" : 100724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100724#pullrequestreview-629303903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21830b3e-f759-4f2d-9392-f7bf025e250a",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "is it worth testing this client too?",
        "createdAt" : "2021-04-06T18:08:06Z",
        "updatedAt" : "2021-04-14T13:14:32Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "f16964a5-b588-4644-b65e-bfbe6d5e8d28",
        "parentId" : "21830b3e-f759-4f2d-9392-f7bf025e250a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The intent of this test is to ensure the server works as expected. That is easier to do with the untyped client, since it doesn't add any apiVersion/kind info when serializing like the typed client does",
        "createdAt" : "2021-04-06T18:49:45Z",
        "updatedAt" : "2021-04-14T13:14:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a07d4460bf587d5771fa2df29ff5a628aec8769c",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +273,277 @@\tsubresource := \"eviction\"\n\tpod := newPod(\"test\")\n\tif _, err := clientSet.CoreV1().Pods(ns).Create(context.TODO(), pod, metav1.CreateOptions{}); err != nil {\n\t\tt.Errorf(\"Failed to create pod: %v\", err)\n\t}"
  },
  {
    "id" : "cda9abca-c114-4e4d-9004-b8c1a98cbb67",
    "prId" : 37998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37998#pullrequestreview-11994986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Aren't conflicts in the PDB expected since the Eviction REST is going to handle many requests in a short period of time?",
        "createdAt" : "2016-12-05T19:13:03Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "694f6a0d-0d12-4aaf-99d2-54688c0a983e",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Even though there may be conflicts when updating PDB, the APIServer has retry logic to handle conflicts.\r\nWhen there are not too many concurrent eviction requests, APIServer should not return a conflict error to the users.\r\n",
        "createdAt" : "2016-12-05T19:37:06Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "ce93e908-1466-40db-80f3-8b6a55a4e1ef",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Which means that we should never get a 409 back so there is no reason to handle it here?",
        "createdAt" : "2016-12-06T10:13:33Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "79cccf4c-e802-43c0-b76f-523a38bf4fdb",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "The reason that treat 409 differently is that if some code change breaks this test and gets a 409 back, the error message here will provide more information than what 409 error itself provides.",
        "createdAt" : "2016-12-07T18:49:47Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "28e4e91d-ed11-4568-8195-6eaca78604b6",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The message should make it clear that we should never get a 409 in such a case. As is, it doesn't add much value.",
        "createdAt" : "2016-12-07T19:12:23Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "0f1e9b22-496b-49d3-8c5a-165513b8683f",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "How about this:\r\n```\r\nfmt.Errorf(\"Unexpected Conflict (409) error caused by failing to handle concurrent PDB updates: %v\", e)\r\n```\r\nOr you can give me a better message, I will do that :)",
        "createdAt" : "2016-12-07T19:44:14Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "a24e655a-f5c0-4ef3-99bb-8d46faff7e7e",
        "parentId" : "e9019609-20d7-41d5-8de1-9033f599b3e3",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "SGTM",
        "createdAt" : "2016-12-08T10:33:50Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb6eb028a7dcedb41d239f1eb84fd495d6b68a3b",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +185,189 @@\t\t\t}\n\t\t\tif e != nil {\n\t\t\t\tif errors.IsConflict(err) {\n\t\t\t\t\tfmt.Errorf(\"Unexpected Conflict (409) error caused by failing to handle concurrent PDB updates: %v\", e)\n\t\t\t\t} else {"
  },
  {
    "id" : "26bf534d-f81e-452f-a033-29f0bd3c4bd1",
    "prId" : 37998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37998#pullrequestreview-11995205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "429e9f02-551a-4b9f-93c3-f788f8c8cbe2",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Thanks for this, much clearer now.",
        "createdAt" : "2016-12-08T10:35:14Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb6eb028a7dcedb41d239f1eb84fd495d6b68a3b",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t}\n\n\t\taddPodConditionReady(pod)\n\t\tif _, err := clientSet.Core().Pods(ns.Name).UpdateStatus(pod); err != nil {\n\t\t\tt.Fatal(err)"
  },
  {
    "id" : "cee6ed5b-2df7-4b57-b148-6844a108f4f0",
    "prId" : 37998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37998#pullrequestreview-11995423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "060f0287-346a-4564-92e1-4672bbf383d5",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "check the error returned from here",
        "createdAt" : "2016-12-08T10:35:55Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "a03be85a-07d9-4a4c-8c18-a07b214c1685",
        "parentId" : "060f0287-346a-4564-92e1-4672bbf383d5",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "oh, I see they are fatals, nevermind.",
        "createdAt" : "2016-12-08T10:36:25Z",
        "updatedAt" : "2016-12-08T18:27:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb6eb028a7dcedb41d239f1eb84fd495d6b68a3b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +158,162 @@\t}\n\n\twaitToObservePods(t, podInformer, 10)\n\n\tpdb := newPDB()"
  }
]