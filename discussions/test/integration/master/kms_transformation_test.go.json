[
  {
    "id" : "0f8ad121-8c48-4d89-92e7-4ddebd513848",
    "prId" : 98722,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98722#pullrequestreview-583007645",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb21f0ba-e2e9-4e85-a2cf-1ab17f0f6908",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I do think we still need to assign `restErr = err` inside the loop above",
        "createdAt" : "2021-02-04T02:59:44Z",
        "updatedAt" : "2021-02-04T03:24:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ca52e0c5-58e4-4ca2-a6f6-682c04b2306c",
        "parentId" : "bb21f0ba-e2e9-4e85-a2cf-1ab17f0f6908",
        "authorId" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "body" : "yeah，I agree，now i fixed it.",
        "createdAt" : "2021-02-04T03:26:52Z",
        "updatedAt" : "2021-02-04T03:26:52Z",
        "lastEditedBy" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "tags" : [
        ]
      }
    ],
    "commit" : "256f8917284d10866587144e4fb5867df2883089",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +268,272 @@\t})\n\n\tif pollErr == wait.ErrWaitTimeout {\n\t\tt.Fatalf(\"failed to get the expected healthz status of OK for check: %s, error: %v, debug inner error: %v\", checkName, pollErr, restErr)\n\t}"
  },
  {
    "id" : "7d1e4b92-10d9-4a27-bbc8-7284a54ec769",
    "prId" : 98722,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98722#pullrequestreview-583007571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb560404-10ee-4292-a222-19641c71d485",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I do think we still need to assign `restErr = err` inside the loop above",
        "createdAt" : "2021-02-04T02:59:52Z",
        "updatedAt" : "2021-02-04T03:24:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a6e337c1-3f49-4522-841e-619086b9fbfa",
        "parentId" : "fb560404-10ee-4292-a222-19641c71d485",
        "authorId" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "body" : "yeah，I agree，now i fixed it.",
        "createdAt" : "2021-02-04T03:26:38Z",
        "updatedAt" : "2021-02-04T03:26:38Z",
        "lastEditedBy" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "tags" : [
        ]
      }
    ],
    "commit" : "256f8917284d10866587144e4fb5867df2883089",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +285,289 @@\t})\n\n\tif pollErr == wait.ErrWaitTimeout {\n\t\tt.Fatalf(\"failed to get the expected healthz status of !OK for check: %s, error: %v, debug inner error: %v\", checkName, pollErr, restErr)\n\t}"
  },
  {
    "id" : "f369d30c-c4ed-46d2-bb0f-f4d75861f878",
    "prId" : 60236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60236#pullrequestreview-98975559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "124e1894-4c34-4c24-8d2b-1eb31627588e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "fyi: cryptobyte is a library for reading length prefixed data. we don't have to pull it in just for this though.\r\n\r\nhttps://godoc.org/golang.org/x/crypto/cryptobyte",
        "createdAt" : "2018-02-23T04:02:26Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "c3677222-4b69-44fe-babe-490c62e196cc",
        "parentId" : "124e1894-4c34-4c24-8d2b-1eb31627588e",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "Thank you. \r\nIt would seem that envelop.go would benefit from cryptobyte as well. ",
        "createdAt" : "2018-02-23T16:45:44Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3be7e189a8b0abc3cc15a0c85e22f8c0edb246e",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@func (r rawDEKKEKSecret) getDEKLen() int {\n\t// DEK's length is stored in the two bytes that follow the prefix.\n\treturn int(binary.BigEndian.Uint16(r[len(kmsPrefix) : len(kmsPrefix)+dekKeySizeLen]))\n}\n"
  },
  {
    "id" : "cd4d36e5-9e7a-42dd-a792-9d705b7b9675",
    "prId" : 60236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60236#pullrequestreview-98980589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc583094-7e6e-40b4-8967-50e2e9ba2080",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "consider wrapping this in a Fatalf()\r\n```\r\ngo t.Fatalf(\"err serving: %v\", pluginMock.grpcServer.Serve(pluginMock.listener))\r\n```",
        "createdAt" : "2018-02-23T04:05:30Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "6740232e-ff1c-48ba-ba86-3ff39124cab3",
        "parentId" : "bc583094-7e6e-40b4-8967-50e2e9ba2080",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "I believe this will block execution of the test on that line.\r\nGO routine would need to wait for the evaluation arguments passed to t.Fatalf - waiting for Server func to exit.",
        "createdAt" : "2018-02-23T17:00:46Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3be7e189a8b0abc3cc15a0c85e22f8c0edb246e",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\t}\n\tdefer pluginMock.cleanUp()\n\tgo pluginMock.grpcServer.Serve(pluginMock.listener)\n\n\ttest, err := newTransformTest(t, kmsConfigYAML)"
  },
  {
    "id" : "5ad9b61a-9ea6-4666-9175-1ad25a4d4ed8",
    "prId" : 60236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60236#pullrequestreview-98981335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ef3d8eb-5b26-41c6-9d7e-c1f944cc8f56",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "why are you forward declaring this as opposed to just using := on the next line?",
        "createdAt" : "2018-02-23T04:06:47Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "a0940f8f-24a5-45c5-92eb-d7cd98b0a1db",
        "parentId" : "0ef3d8eb-5b26-41c6-9d7e-c1f944cc8f56",
        "authorId" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "body" : "If I don't forward declare it as rawDEKKEKSecret, it will become []byte on the next line, and I would have to cast it to rawDEKKEKSecret later.\r\nWould love to know if there is a more elegant way of doing this.",
        "createdAt" : "2018-02-23T17:02:59Z",
        "updatedAt" : "2018-02-27T23:53:50Z",
        "lastEditedBy" : "6a76eaae-b750-44a3-afa5-0d64814ae70a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3be7e189a8b0abc3cc15a0c85e22f8c0edb246e",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@\n\tsecretETCDPath := test.getETCDPath()\n\tvar rawSecretAsSeenByETCD rawDEKKEKSecret\n\trawSecretAsSeenByETCD, err = test.getRawSecretFromETCD()\n\tif err != nil {"
  }
]