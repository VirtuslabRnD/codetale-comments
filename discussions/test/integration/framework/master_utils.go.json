[
  {
    "id" : "8c231beb-1d66-4249-b1f2-172a1920a0fd",
    "prId" : 102597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102597#pullrequestreview-676858659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "288a2a06-74e4-47c8-a257-c6af7ba83f86",
        "parentId" : null,
        "authorId" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "body" : "Should MasterConfigOptions be renamed to controlPlaneConfigOptions as well?",
        "createdAt" : "2021-06-04T14:41:37Z",
        "updatedAt" : "2021-06-04T14:43:02Z",
        "lastEditedBy" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "tags" : [
        ]
      },
      {
        "id" : "061fe491-d1ca-456f-a11f-e7f091e037cc",
        "parentId" : "288a2a06-74e4-47c8-a257-c6af7ba83f86",
        "authorId" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "body" : "Of course it could, but since this variable involves many files, I just changed it for review easily.\r\n\r\nref https://github.com/kubernetes/kubernetes/pull/100181#issuecomment-805017091 commented.",
        "createdAt" : "2021-06-04T14:53:10Z",
        "updatedAt" : "2021-06-04T14:54:19Z",
        "lastEditedBy" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "tags" : [
        ]
      },
      {
        "id" : "c30c8fd6-4c39-49ee-90eb-a028571b0b16",
        "parentId" : "288a2a06-74e4-47c8-a257-c6af7ba83f86",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "maybe a follow-up commit?\r\nI think it's best if we can clean up all variables in a subset of the project instead of one to a PR 😅 ",
        "createdAt" : "2021-06-04T19:17:20Z",
        "updatedAt" : "2021-06-04T19:17:20Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "bff62e74-69d2-44f1-bb83-f2ccc4e0e830",
        "parentId" : "288a2a06-74e4-47c8-a257-c6af7ba83f86",
        "authorId" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "body" : "I'm sorry for the late reply. I should have made the modification in a follow-up commit, but I didn't spare time to make the modification in these two days and  the PR has been merged, so I will make the modification in the following PR.\r\nThanks.😁",
        "createdAt" : "2021-06-06T11:59:09Z",
        "updatedAt" : "2021-06-06T11:59:09Z",
        "lastEditedBy" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "tags" : [
        ]
      }
    ],
    "commit" : "6871b2b3c7363303e5e619d8b202653e910a3e7a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +340,344 @@\n// CloseFunc can be called to cleanup the master\ntype CloseFunc func()\n\n// RunAnAPIServer starts a API server with the provided config."
  },
  {
    "id" : "e36234ae-89e7-4102-84fa-7607128a773b",
    "prId" : 95397,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95397#pullrequestreview-504795545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9a4bed-c43f-4a53-ad94-7192704c9e48",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the change seems fine to me:\r\nhttps://github.com/kubernetes/kubernetes/blob/3a79bb68bd15903effbdb486619637e9598df5e3/pkg/kubeapiserver/options/options.go#L29\r\nhttps://github.com/kubernetes/kubernetes/blob/b46612a74224b0871a97dae819f5fb3a1763d0b9/pkg/controlplane/services.go#L37",
        "createdAt" : "2020-10-08T13:42:13Z",
        "updatedAt" : "2020-10-08T13:42:13Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcbd16b94b1c22ef33317f982cac991e1b49e27a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +207,211 @@\tif masterConfig.ExtraConfig.ServiceIPRange.IP == nil {\n\t\tmasterConfig.ExtraConfig.ServiceIPRange = net.IPNet{IP: net.ParseIP(\"10.0.0.0\"), Mask: net.CIDRMask(24, 32)}\n\t}\n\tm, err = masterConfig.Complete().New(genericapiserver.NewEmptyDelegate())\n\tif err != nil {"
  },
  {
    "id" : "4912c453-4e03-47fe-bd71-972e666d6e6d",
    "prId" : 95397,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95397#pullrequestreview-505216316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dce712d9-408c-4562-b7b1-3fd1c00d4233",
        "parentId" : null,
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "nit: Can we import this value from https://github.com/kubernetes/kubernetes/blob/3a79bb68bd15903effbdb486619637e9598df5e3/pkg/kubeapiserver/options/options.go#L29 instead?",
        "createdAt" : "2020-10-08T20:23:48Z",
        "updatedAt" : "2020-10-08T20:24:57Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      },
      {
        "id" : "e96221ff-29a9-42f6-ae32-3df2ebf42600",
        "parentId" : "dce712d9-408c-4562-b7b1-3fd1c00d4233",
        "authorId" : "7775d157-3f9a-4ef5-ad17-984bbc6a291d",
        "body" : "Since only ```ServiceIPRange()``` is currently using ```DefaultServiceIPCIDR```, isn't ```DefaultServiceIPCIDR``` deleted when default service cluster IP is deprecated?",
        "createdAt" : "2020-10-08T22:26:06Z",
        "updatedAt" : "2020-10-08T22:26:06Z",
        "lastEditedBy" : "7775d157-3f9a-4ef5-ad17-984bbc6a291d",
        "tags" : [
        ]
      },
      {
        "id" : "3fd00056-ae45-48bb-a70e-210c0a3da0ca",
        "parentId" : "dce712d9-408c-4562-b7b1-3fd1c00d4233",
        "authorId" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "body" : "Ahh sorry missed that earlier. LGTM",
        "createdAt" : "2020-10-08T22:43:35Z",
        "updatedAt" : "2020-10-08T22:43:35Z",
        "lastEditedBy" : "3f579bf7-089d-41f0-abf9-3bf5462ec695",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcbd16b94b1c22ef33317f982cac991e1b49e27a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +206,210 @@\n\tif masterConfig.ExtraConfig.ServiceIPRange.IP == nil {\n\t\tmasterConfig.ExtraConfig.ServiceIPRange = net.IPNet{IP: net.ParseIP(\"10.0.0.0\"), Mask: net.CIDRMask(24, 32)}\n\t}\n\tm, err = masterConfig.Complete().New(genericapiserver.NewEmptyDelegate())"
  },
  {
    "id" : "5329220e-93a5-44b2-99b4-63555e402193",
    "prId" : 83971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83971#pullrequestreview-303623424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c246b8d8-20d7-4674-8795-e8d814e44b1c",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Is this still necessary, considering we fire the message above?",
        "createdAt" : "2019-10-18T00:45:57Z",
        "updatedAt" : "2019-10-21T23:42:09Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "7cd20343-8e98-41e9-9bd9-5fb11589807e",
        "parentId" : "c246b8d8-20d7-4674-8795-e8d814e44b1c",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@saad-ali \r\nPlease take another look.",
        "createdAt" : "2019-10-18T01:15:37Z",
        "updatedAt" : "2019-10-21T23:42:09Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "79dfd42718335e931f947e97ed6915e0c5489c60",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +194,198 @@\t\tklog.Errorf(\"error in bringing up the master: %v\", err)\n\t\tcloseFn()\n\t\tklog.Fatalf(\"error in bringing up the master: %v\", err)\n\t}\n\tif masterReceiver != nil {"
  },
  {
    "id" : "58d5f7b3-af56-4e9c-8b4c-8d8484b7fb71",
    "prId" : 83971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83971#pullrequestreview-304908907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44a0debf-e436-4412-b122-a7f99d71c621",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "One last nit: I'd put a comment here explaining why we double-log. Otherwise, somebody helpful is going to come along and de-duplicate it. :smile: ",
        "createdAt" : "2019-10-21T23:38:39Z",
        "updatedAt" : "2019-10-21T23:42:09Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "79dfd42718335e931f947e97ed6915e0c5489c60",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +192,196 @@\tif err != nil {\n\t\t// We log the error first so that even if closeFn crashes, the error is shown\n\t\tklog.Errorf(\"error in bringing up the master: %v\", err)\n\t\tcloseFn()\n\t\tklog.Fatalf(\"error in bringing up the master: %v\", err)"
  },
  {
    "id" : "6fc71435-0b90-4e6a-9ad7-eb3ec383cccf",
    "prId" : 71583,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71583#pullrequestreview-183984028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cbed600-5391-400a-b42a-5483e20a2adc",
        "parentId" : null,
        "authorId" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "body" : "@jennybuckley if you can please give this a look.\r\nThis was the way i found to solve missing OpenAPIModels on our integration tests (apply_test.go).\r\nQuite sure its not the right change and breaking a lot of different stuff. Just didn't find a better way in the short time. -> need help :-)",
        "createdAt" : "2018-12-12T01:48:45Z",
        "updatedAt" : "2018-12-12T21:16:07Z",
        "lastEditedBy" : "500960f8-0ed2-4739-b582-fd7135d2ce87",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3b778f6f63bb322ae39691d7bfc070d92235cbf",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\tmasterConfig = NewMasterConfig()\n\t}\n\tmasterConfig.GenericConfig.OpenAPIConfig = genericapiserver.DefaultOpenAPIConfig(openapi.GetOpenAPIDefinitions, openapinamer.NewDefinitionNamer(legacyscheme.Scheme))\n\tmasterConfig.GenericConfig.OpenAPIConfig.Info = &spec.Info{\n\t\tInfoProps: spec.InfoProps{"
  },
  {
    "id" : "d0b92d6d-b1da-4823-86e7-e70e98bb4a0d",
    "prId" : 63967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63967#pullrequestreview-121221960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d538d76d-88dc-4c9a-9e40-201056eeb624",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Is this supposed to be part of the PR?",
        "createdAt" : "2018-05-17T21:10:05Z",
        "updatedAt" : "2018-05-22T12:17:32Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "55889933-95d2-4e5f-97e2-d2053c3734ae",
        "parentId" : "d538d76d-88dc-4c9a-9e40-201056eeb624",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Is this supposed to be part of the PR?\r\n\r\nI was chasing a typo, it came in handy for debugging.  I suspect I won't be the last.",
        "createdAt" : "2018-05-17T21:23:33Z",
        "updatedAt" : "2018-05-22T12:17:32Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff743c7f4f85e7277dc137937f3616c6e0d93a04",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\tglog.Fatal(err)\n\t}\n\tvar lastHealthContent []byte\n\terr = wait.PollImmediate(100*time.Millisecond, 30*time.Second, func() (bool, error) {\n\t\tresult := privilegedClient.Get().AbsPath(\"/healthz\").Do()"
  },
  {
    "id" : "13ab11f2-d241-486f-a431-8284d396309d",
    "prId" : 45495,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45495#pullrequestreview-37556944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50bef9b8-f01e-40f4-a676-21ce98e676af",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Won't this kill the test binary anyway?",
        "createdAt" : "2017-05-11T07:13:35Z",
        "updatedAt" : "2017-05-11T13:16:17Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d0f97af0-74ca-430d-ae7d-fb97be1ad9b2",
        "parentId" : "50bef9b8-f01e-40f4-a676-21ce98e676af",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Won't this kill the test binary anyway?\r\n\r\nYeah.  My mind just didn't want to let it go.  Shall I remove the close?",
        "createdAt" : "2017-05-11T11:56:52Z",
        "updatedAt" : "2017-05-11T13:16:17Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "48005f73-e297-4222-8105-98ff29cd08f6",
        "parentId" : "50bef9b8-f01e-40f4-a676-21ce98e676af",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I don't care so much, doesn't really change anything.",
        "createdAt" : "2017-05-11T12:10:36Z",
        "updatedAt" : "2017-05-11T13:16:17Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "be39283923650ad96539640ca988fbf194db2be4",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +249,253 @@\tif err != nil {\n\t\tcloseFn()\n\t\tglog.Fatalf(\"error in bringing up the master: %v\", err)\n\t}\n\tif masterReceiver != nil {"
  },
  {
    "id" : "73315765-d844-4e33-865b-bc9c8a7478da",
    "prId" : 24710,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f8ed369-0f57-45e0-a115-61995246fe0b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Just question: what does empty media type mean?\n",
        "createdAt" : "2016-05-05T07:47:07Z",
        "updatedAt" : "2016-05-05T16:08:25Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "eba714b0-27d3-4503-a100-d2a058b70cc7",
        "parentId" : "7f8ed369-0f57-45e0-a115-61995246fe0b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'll set it to json, there's no reason not to here.\n",
        "createdAt" : "2016-05-05T13:57:09Z",
        "updatedAt" : "2016-05-05T16:08:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4f3e7fd4-93ee-4635-975b-2d6ac02924d3",
        "parentId" : "7f8ed369-0f57-45e0-a115-61995246fe0b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Actually this is the override type - that bypasses the behavior of the\nserializer itself.  If empty, no override.\n\nOn Thu, May 5, 2016 at 3:47 AM, Wojciech Tyczynski <notifications@github.com\n\n> wrote:\n> \n> In test/integration/framework/master_utils.go\n> https://github.com/kubernetes/kubernetes/pull/24710#discussion_r62157142\n> :\n> \n> > ```\n> > storageFactory.SetSerializer(\n> >     unversioned.GroupResource{Group: api.GroupName, Resource: genericapiserver.AllResources},\n> > ```\n> > -       NewSingleContentTypeSerializer(api.Scheme, testapi.Default.Codec(), \"application/json\"))\n> > -       \"\",\n> \n> Just question: what does empty media type mean?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/24710/files/e416be61b90b5dc461dc8a84a94d6ecd0d76c216#r62157142\n",
        "createdAt" : "2016-05-05T15:14:50Z",
        "updatedAt" : "2016-05-05T16:08:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c22a490e-63a9-454d-a5b5-0733c5cc2e88",
        "parentId" : "7f8ed369-0f57-45e0-a115-61995246fe0b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Updated with the cleaner recognizer logic.\n\nOn Thu, May 5, 2016 at 11:14 AM, Clayton Coleman ccoleman@redhat.com\nwrote:\n\n> Actually this is the override type - that bypasses the behavior of the\n> serializer itself.  If empty, no override.\n> \n> On Thu, May 5, 2016 at 3:47 AM, Wojciech Tyczynski <\n> notifications@github.com> wrote:\n> \n> > In test/integration/framework/master_utils.go\n> > https://github.com/kubernetes/kubernetes/pull/24710#discussion_r62157142\n> > :\n> > \n> > >    storageFactory.SetSerializer(\n> > >        unversioned.GroupResource{Group: api.GroupName, Resource: genericapiserver.AllResources},\n> > > -      NewSingleContentTypeSerializer(api.Scheme, testapi.Default.Codec(), \"application/json\"))\n> > > -      \"\",\n> > \n> > Just question: what does empty media type mean?\n> > \n> > —\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/kubernetes/kubernetes/pull/24710/files/e416be61b90b5dc461dc8a84a94d6ecd0d76c216#r62157142\n",
        "createdAt" : "2016-05-05T15:19:02Z",
        "updatedAt" : "2016-05-05T16:08:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0ebcf421654b34519cde63093075e572f4c8f90",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +161,165 @@\tstorageFactory.SetSerializer(\n\t\tunversioned.GroupResource{Group: api.GroupName, Resource: genericapiserver.AllResources},\n\t\t\"\",\n\t\tNewSingleContentTypeSerializer(api.Scheme, testapi.Default.Codec(), runtime.ContentTypeJSON))\n\tstorageFactory.SetSerializer("
  },
  {
    "id" : "57b3ef8b-6aa1-4039-ba1d-9db0f3a8f112",
    "prId" : 13277,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16a1f1b4-2159-48eb-88a0-267866c210f4",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Why do we need to add this line? IIRC, we enable exp in test/test-integration.sh through KUBE_API_VERSIONS now.\n",
        "createdAt" : "2015-09-15T23:09:24Z",
        "updatedAt" : "2015-09-18T02:55:13Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "cae75a9d-82d4-4bc5-9ea8-39f3b6b1e5c7",
        "parentId" : "16a1f1b4-2159-48eb-88a0-267866c210f4",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "The way it is right now, KUBE_API_VERSIONS just registers the API objects and conversion funcs. Master does not expose the experimental API in apiserver until EnableExp variable here is set to true: https://github.com/kubernetes/kubernetes/blob/master/pkg/master/master.go#L573\n",
        "createdAt" : "2015-09-15T23:23:16Z",
        "updatedAt" : "2015-09-18T02:55:13Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "d886c4f1-679e-401a-8cee-a6b807ed313b",
        "parentId" : "16a1f1b4-2159-48eb-88a0-267866c210f4",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes. Thank you @nikhiljindal!\n",
        "createdAt" : "2015-09-15T23:35:05Z",
        "updatedAt" : "2015-09-18T02:55:13Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f855e758050c316074500ba264d27aac912e51d1",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +144,148 @@\t\t\tExpDatabaseStorage:   expEtcdStorage,\n\t\t\tKubeletClient:        client.FakeKubeletClient{},\n\t\t\tEnableExp:            true,\n\t\t\tEnableLogsSupport:    false,\n\t\t\tEnableProfiling:      true,"
  },
  {
    "id" : "0d395eb5-c6d7-4bb8-9ebf-78f29ca4e75a",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bae3b8c-a988-4693-a082-3337d6a5cacd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Godoc\n",
        "createdAt" : "2015-04-22T22:29:39Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "99d16c73-8e1b-40f5-8845-a4ae8799732f",
        "parentId" : "2bae3b8c-a988-4693-a082-3337d6a5cacd",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "done\n",
        "createdAt" : "2015-05-11T22:11:39Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@\n// NewMasterComponents creates, initializes and starts master components based on the given config.\nfunc NewMasterComponents(c *Config) *MasterComponents {\n\tm, s, h := startMasterOrDie(c.MasterConfig)\n\t// TODO: Allow callers to pipe through a different master url and create a client/start components using it."
  },
  {
    "id" : "7e0eb55e-f40f-45da-b776-8000e1358e12",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a78d364-7eed-418b-a8cc-f744b9f14217",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Godoc\n",
        "createdAt" : "2015-04-22T22:29:45Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "bbf820aa-0b83-4768-b74e-b0d43a8589d0",
        "parentId" : "1a78d364-7eed-418b-a8cc-f744b9f14217",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "done\n",
        "createdAt" : "2015-05-11T22:11:41Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : null,
    "diffHunk" : "@@ -1,1 +77,81 @@\n// Config is a struct of configuration directives for NewMasterComponents.\ntype Config struct {\n\t// If nil, a default is used, partially filled configs will not get populated.\n\tMasterConfig            *master.Config"
  },
  {
    "id" : "2005c38a-7a3b-468d-b606-3f1fd0eeb5d7",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c47d39b-d64b-4a50-ab7a-2945895ebcf1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "non-todo godoc :)\n",
        "createdAt" : "2015-04-22T22:29:54Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1a18083b-4d35-413f-ba17-2ee83bc3674a",
        "parentId" : "0c47d39b-d64b-4a50-ab7a-2945895ebcf1",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "done\n",
        "createdAt" : "2015-05-11T22:11:42Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@// how to restart cleanly, which is required for each iteration of a benchmark. The integration\n// tests also don't make it easy to isolate and turn off components at will.\ntype MasterComponents struct {\n\t// Raw http server in front of the master\n\tApiServer *httptest.Server"
  },
  {
    "id" : "e8cb46ed-3368-4a5a-80ad-41b9572ca212",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f7d0fb6-5c1a-4b59-888b-3877c636d5da",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "these consts all look specific to your benchmarks.\n",
        "createdAt" : "2015-05-12T04:21:27Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c411bd97-cc40-4537-9ce5-436c540d760c",
        "parentId" : "3f7d0fb6-5c1a-4b59-888b-3877c636d5da",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(so move to that file?)\n",
        "createdAt" : "2015-05-12T04:21:40Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3d43a148-cfc2-42aa-9c2e-b5c9e57f8355",
        "parentId" : "3f7d0fb6-5c1a-4b59-888b-3877c636d5da",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "They're the constants used in managing the rcs used to start pods for tests. The current tests only really want to StartPods, which is a framework call. The framework actually starts up an rc using TestRCManifest. Almost every test needs pods, but requiring them all to hand manage the rc seemed like unnecessary boilerplate so I hid it in the framework. \n",
        "createdAt" : "2015-05-12T18:39:46Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@)\n\nconst (\n\t// Timeout used in benchmarks, to eg: resize an rc\n\tDefaultTimeout = 30 * time.Minute"
  },
  {
    "id" : "a1a3bf84-ccff-403e-860d-e0df269dbf19",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65a2eca8-46e4-4b98-a9ff-148108873b05",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Suggest not taking an id; everything is run in parallel, there's no ordering.\n",
        "createdAt" : "2015-05-12T04:31:20Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ccf90f32-cce8-4ef7-b660-5b3c80e6b996",
        "parentId" : "65a2eca8-46e4-4b98-a9ff-148108873b05",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "figured the id would be useful when testing watch/update, since I need some way to get a worker to focus on a subset of a list of pods or their updates will all compete with each other. \n",
        "createdAt" : "2015-05-12T18:39:35Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "8509ed0c-ba71-4cc4-8513-63b954024ad6",
        "parentId" : "65a2eca8-46e4-4b98-a9ff-148108873b05",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Either pass id and take a single function, or take a list of functions and don't pass id. (You already make a unique closure for every function, there's no additional benefit to be had by passing id.) IMO it's super confusing to do both.\n",
        "createdAt" : "2015-05-13T20:39:32Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "34053a99-ce8a-4a25-8f45-baee44b7e136",
        "parentId" : "65a2eca8-46e4-4b98-a9ff-148108873b05",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "That's a good point. I'm passing in a single closure now. \n",
        "createdAt" : "2015-05-14T00:19:03Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +284,288 @@// Task is a function passed to worker goroutines by RunParallel.\n// The function needs to implement its own thread safety.\ntype Task func(id int) error\n\n// RunParallel spawns a goroutine per task in the given queue"
  },
  {
    "id" : "8ce147ca-e587-4f21-b3e3-0a6446135005",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03df08ec-e3d6-4145-92c3-9cdc377824db",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Making a final pass here and I don't understand this line-- why is it necessary?\n",
        "createdAt" : "2015-05-18T21:25:01Z",
        "updatedAt" : "2015-05-18T21:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "272305b2-af1e-4eea-892c-f67a5ee39e29",
        "parentId" : "03df08ec-e3d6-4145-92c3-9cdc377824db",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "i want to allow stopping individual components through the same stop method, and don't want to end up closing the stop channel of something multiple times. So i can have;\n\n```\ndefer master.Stop(all)\n```\n\nin every test, and also do:\n\n```\nmaster.Stop(rcmanager)\n```\n\nas i please, without having to track exactly what i've stopped along the way in my first defer call. Or did I misunderstand the question? \n",
        "createdAt" : "2015-05-18T21:54:40Z",
        "updatedAt" : "2015-05-18T21:54:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +115,119 @@\t\trcStopCh:          rcStopCh,\n\t\tEtcdHelper:        h,\n\t\tonce:              once,\n\t}\n}"
  }
]