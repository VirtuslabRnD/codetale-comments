[
  {
    "id" : "1f004faf-2a5c-4730-821c-265082102a73",
    "prId" : 99641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99641#pullrequestreview-604183077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85e6f98d-831a-4837-ab9c-3f6bc317a559",
        "parentId" : null,
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I could use some guidance. What is the right value for `ExpectedGVK` here? It passes `go test k8s.io/kubernetes/test/integration/etcd` when using \"v1alpha1\", but that seems counter-intuitive. Do I perhaps have some missing code or a bug elsewhere such that \"v1beta1\" is not used?\r\n\r\nWhen bringing up a cluster, the v1beta1 API works as expected. A writer which stores CSIStorageCapacity objects using v1alpha1 works and then `kubect get csistoragecapacities` returns the objects as v1beta1.\r\n",
        "createdAt" : "2021-03-04T11:56:20Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "e5b26e3c-5581-499e-9cc0-12203f28cd13",
        "parentId" : "85e6f98d-831a-4837-ab9c-3f6bc317a559",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Do I perhaps have some missing code or a bug elsewhere such that \"v1beta1\" is not used?\r\n\r\nYes, this means the data is still being stored in etcd in v1alpha1. It should be v1beta1.\r\n\r\n`NewStorageFactoryConfig()` is explicitly overriding the preferred storage version for this type to be v1alpha1.",
        "createdAt" : "2021-03-04T13:22:20Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2d19ab6d-2ac7-4094-9afd-5b62e086ba30",
        "parentId" : "85e6f98d-831a-4837-ab9c-3f6bc317a559",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Are these overrides in `NewStorageFactoryConfig()` needed? I probably added the one for `csistoragecapacities` only because there was one for `csidrivers`, something that got removed since then.\r\n",
        "createdAt" : "2021-03-04T14:15:16Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "67b641e8-dca4-44b4-878a-16de03b781c8",
        "parentId" : "85e6f98d-831a-4837-ab9c-3f6bc317a559",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes. v1 is the preferred etcd version for storage.k8s.io, but this type does not exist in that version yet.",
        "createdAt" : "2021-03-04T14:30:48Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9590dbe8-24c2-47c4-b180-eed81b86a172",
        "parentId" : "85e6f98d-831a-4837-ab9c-3f6bc317a559",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Looks like these overrides are necessary for all (?) APis which are not yet in v1. I'll change the existing entry for \"csistoragecapacities\" to \"v1beta1\"\r\n",
        "createdAt" : "2021-03-04T14:49:55Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c7e4c6316077aaf7822b1d4166ef54218ecee80",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +350,354 @@\t\t\tStub:             `{\"metadata\": {\"name\": \"csc-12345-2\"}, \"storageClassName\": \"sc1\"}`,\n\t\t\tExpectedEtcdPath: \"/registry/csistoragecapacities/\" + namespace + \"/csc-12345-2\",\n\t\t},\n\t\t// --\n"
  },
  {
    "id" : "4f3e1acb-2560-435b-8767-e2d6f7e7dbae",
    "prId" : 99641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99641#pullrequestreview-604123295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "035cf1e8-5362-42ad-a51c-39e366cc8423",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it is surprising this was not required before. it looks like the API registration was contingent on `if utilfeature.DefaultFeatureGate.Enabled(features.CSIStorageCapacity)`, which is unusual. Enabling the alpha API with `--runtime-config=storage.k8s.io/v1alpha1=true` is typically all that is required. Adding the feature gate check meant that this test didn't exercise storage path and version testing",
        "createdAt" : "2021-03-04T13:21:20Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "307194b2-efb1-422d-ab9e-39bb28b8e754",
        "parentId" : "035cf1e8-5362-42ad-a51c-39e366cc8423",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "> it looks like the API registration was contingent on if utilfeature.DefaultFeatureGate.Enabled(features.CSIStorageCapacity), which is unusual.\r\n\r\nWhat if the v1alpha1 API group had had two different APIs which are under different feature gates? From that perspective it made sense to me to toggle the API individually based on the feature gate.\r\n\r\nWhat about the REST storage provider? There basically all API types get added depending on the feature gates, for example:\r\nhttps://github.com/kubernetes/kubernetes/blob/603a2aa8a99869dc51ea1be2ce6e6ca10c23e55f/pkg/registry/storage/rest/storage_storage.go#L98-L105\r\n\r\nIs that normal or unusual?\r\n\r\nBut I agree, this did have the undesired effect that several tests simply didn't run for the CSIStorageCapacity object before.\r\n",
        "createdAt" : "2021-03-04T13:47:33Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "4398c023-c4db-4dfd-a0cb-7a8b2b602785",
        "parentId" : "035cf1e8-5362-42ad-a51c-39e366cc8423",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> What if the v1alpha1 API group had had two different APIs which are under different feature gates? From that perspective it made sense to me to toggle the API individually based on the feature gate.\r\n> \r\n> What about the REST storage provider? There basically all API types get added depending on the feature gates, for example:\r\n> ...\r\n> Is that normal or unusual?\r\n\r\nThat's unusual. Opting into enabling an alpha API version typically gets you everything in the version. Disabling beta APIs is typically done at the version level.",
        "createdAt" : "2021-03-04T13:54:45Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c7e4c6316077aaf7822b1d4166ef54218ecee80",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +286,290 @@\n\t\t// k8s.io/kubernetes/pkg/apis/storage/v1alpha1\n\t\tgvr(\"storage.k8s.io\", \"v1alpha1\", \"csistoragecapacities\"): {\n\t\t\tStub:             `{\"metadata\": {\"name\": \"csc-12345-1\"}, \"storageClassName\": \"sc1\"}`,\n\t\t\tExpectedEtcdPath: \"/registry/csistoragecapacities/\" + namespace + \"/csc-12345-1\","
  },
  {
    "id" : "4a41fd4e-4bab-45f8-826f-9026e0e95d1c",
    "prId" : 96527,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96527#pullrequestreview-530403765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c14f4d9-1ca2-45c9-9c87-b064e01da249",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "It's important to note that a 1.19 server with P&F enabled will not be able to read this persisted v1beta1 data. That means a 1.19 server with P&F enabled should not be run in a multi-server cluster with 1.20+ servers.\r\n\r\n(this is normal on promotion from alpha to beta, but bears calling out in the release note)",
        "createdAt" : "2020-11-13T15:01:47Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f25251ec-be76-497e-8b78-a74cb09640c7",
        "parentId" : "6c14f4d9-1ca2-45c9-9c87-b064e01da249",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Good point.  While normal, it does not have to be such a sharp transition.  Should we make the storage version be v1alpha1?  There is currently no difference between v1alpha1 and v1beta1.",
        "createdAt" : "2020-11-13T16:47:44Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "b69a80b8-e7d1-4f66-9409-52ee719f7d23",
        "parentId" : "6c14f4d9-1ca2-45c9-9c87-b064e01da249",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we should not persist alpha data into etcd for consumers that have not opted into the alpha level of the feature",
        "createdAt" : "2020-11-13T16:49:55Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "36c9232f-d44a-4b85-bd05-7da6eea5b050",
        "parentId" : "6c14f4d9-1ca2-45c9-9c87-b064e01da249",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Good point too.  So the next question is, should we make the storage version depend on the alpha API group enablement?",
        "createdAt" : "2020-11-13T16:56:31Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "62e1094b-bebb-421f-b6b7-580bff00a3a8",
        "parentId" : "6c14f4d9-1ca2-45c9-9c87-b064e01da249",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "Added a line to the release notes, not sure if multi-line release notes are accepted.",
        "createdAt" : "2020-11-13T20:44:50Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "642b11483030e5aedbd6f43aeac3cbe40255b3b6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +290,294 @@\t\t\tStub:             `{\"metadata\": {\"name\": \"conf1\"}, \"spec\": {\"type\": \"Limited\", \"limited\": {\"assuredConcurrencyShares\":3, \"limitResponse\": {\"type\": \"Reject\"}}}}`,\n\t\t\tExpectedEtcdPath: \"/registry/prioritylevelconfigurations/conf1\",\n\t\t\tExpectedGVK:      gvkP(\"flowcontrol.apiserver.k8s.io\", \"v1beta1\", \"PriorityLevelConfiguration\"),\n\t\t},\n\t\t// --"
  },
  {
    "id" : "74f845af-e972-45d5-aca5-da67b098033c",
    "prId" : 95718,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95718#pullrequestreview-515203563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15a41258-36b1-4e2e-b356-2953e91a7ef8",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "`rc3` is made based on other examples in this file ",
        "createdAt" : "2020-10-23T00:19:13Z",
        "updatedAt" : "2020-11-11T19:22:53Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "06da0e5e74a99d5c6c2f4e120b2cd0c2c6f3caf4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +505,509 @@\t\t// k8s.io/kubernetes/pkg/apis/node/v1\n\t\tgvr(\"node.k8s.io\", \"v1\", \"runtimeclasses\"): {\n\t\t\tStub:             `{\"metadata\": {\"name\": \"rc3\"}, \"handler\": \"h3\"}`,\n\t\t\tExpectedEtcdPath: \"/registry/runtimeclasses/rc3\",\n\t\t\t// TODO (SergeyKanzhelev): in 1.21 this should be switched to v1. See https://github.com/kubernetes/kubernetes/pull/95718/files#r520967927"
  },
  {
    "id" : "9b3d2966-a6f8-47ed-90ce-029318b15bd9",
    "prId" : 95718,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95718#pullrequestreview-528428850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca0d99da-1d19-4aaa-b266-c00f568df7e4",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "@liggitt falling back to the v1beta1 for this release",
        "createdAt" : "2020-11-11T18:25:38Z",
        "updatedAt" : "2020-11-11T19:22:54Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "06da0e5e74a99d5c6c2f4e120b2cd0c2c6f3caf4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +509,513 @@\t\t\t// TODO (SergeyKanzhelev): in 1.21 this should be switched to v1. See https://github.com/kubernetes/kubernetes/pull/95718/files#r520967927\n\t\t\t// this has to stay at v1beta1 for a release, otherwise a 1.19 API server won't be able to read the data persisted in etcd and will break during a multi-server upgrade\n\t\t\tExpectedGVK: gvkP(\"node.k8s.io\", \"v1beta1\", \"RuntimeClass\"),\n\t\t},\n\t\t// --"
  },
  {
    "id" : "d9255caa-1224-47ac-8c33-2fd6710f8d94",
    "prId" : 84814,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84814#pullrequestreview-369177364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55176bea-0449-4c23-bba7-96639a73d00e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "We need to keep the default GVK to be v1beta for 1 release to handle HA master version skew.\r\n\r\nSee [here](https://github.com/kubernetes/kubernetes/pull/83474/commits/603a2aa8a99869dc51ea1be2ce6e6ca10c23e55f#diff-a6932c2bd6398cd55df3be4564939a5eR559) and [here](https://github.com/kubernetes/kubernetes/pull/83474/commits/603a2aa8a99869dc51ea1be2ce6e6ca10c23e55f#diff-c74f8b85666a09e8b8a2a052f4a91abdR57)",
        "createdAt" : "2020-03-04T22:15:25Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8cc0965b-fdca-4d32-adda-ea6b766512f4",
        "parentId" : "55176bea-0449-4c23-bba7-96639a73d00e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Oops, I see it's added in the 3rd commit. Would still be good to add a TODO and open an issue to track removing it next release.",
        "createdAt" : "2020-03-04T22:16:52Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "235806ec-cdd2-4f77-bb33-85d3c579695d",
        "parentId" : "55176bea-0449-4c23-bba7-96639a73d00e",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "I've updated this to include a TODO, and created issue https://github.com/kubernetes/kubernetes/issues/88821 to track it.",
        "createdAt" : "2020-03-04T22:40:02Z",
        "updatedAt" : "2020-03-06T13:57:21Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0890533a99bcb7f3ee173846863960d15064577",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +519,523 @@\tetcdStorageData[gvr(\"storage.k8s.io\", \"v1\", \"csidrivers\")] = StorageData{\n\t\tStub:             `{\"metadata\": {\"name\": \"csid2\"}, \"spec\": {\"attachRequired\": true, \"podInfoOnMount\": true}}`,\n\t\tExpectedEtcdPath: \"/registry/csidrivers/csid2\",\n\t\tExpectedGVK:      gvkP(\"storage.k8s.io\", \"v1beta1\", \"CSIDriver\"),\n\t}"
  },
  {
    "id" : "97b49c09-76f5-4f18-9c6c-162367b63e1a",
    "prId" : 84477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84477#pullrequestreview-322701439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d307521-10b1-49a9-80da-ed37f2d16bc0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is a duplicate of line 556",
        "createdAt" : "2019-11-26T02:24:29Z",
        "updatedAt" : "2019-11-26T03:14:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c8761a6b-3f2f-4367-9174-190a6449cb0f",
        "parentId" : "9d307521-10b1-49a9-80da-ed37f2d16bc0",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Addressed in latest push.",
        "createdAt" : "2019-11-26T02:46:22Z",
        "updatedAt" : "2019-11-26T03:14:29Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cb3992d1b8ceebd88708b56058266b421cc2369",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +555,559 @@\n\t\t// k8s.io/kubernetes/pkg/apis/storage/v1\n\t\tetcdStorageData[gvr(\"storage.k8s.io\", \"v1\", \"csinodes\")] = StorageData{\n\t\t\tStub:             `{\"metadata\": {\"name\": \"csini2\"}, \"spec\": {\"drivers\": [{\"name\": \"test-driver\", \"nodeID\": \"localhost\", \"topologyKeys\": [\"company.com/zone1\", \"company.com/zone2\"]}]}}`,\n\t\t\tExpectedEtcdPath: \"/registry/csinodes/csini2\","
  },
  {
    "id" : "b50f8209-00bc-4415-9419-d89126082cc9",
    "prId" : 83474,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83474#pullrequestreview-308135787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01071ada-c601-4b3a-813a-ad232c167ad5",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is this right? I'm not actually sure where this object-specific ordering is specified. Since the storage/v1 group already exists, all the places I found where you specify ordering already prioritize the v1 group over v1beta1. Is [this](https://github.com/kubernetes/kubernetes/blob/14344b57e56258e87cbe80c8cd80399855eca424/pkg/kubeapiserver/default_storage_factory_builder.go#L60) relevant?",
        "createdAt" : "2019-10-04T19:48:10Z",
        "updatedAt" : "2019-10-28T20:41:27Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "854c35b0-83b9-484e-a968-a37148288d8c",
        "parentId" : "01071ada-c601-4b3a-813a-ad232c167ad5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I checked with liggitt. He clarified that there's a group default, which is set to v1, and then a per-type override, which is currently v1beta1.  For now, we keep the type override at v1beta1 for one more release, and then can remove it to use v1 in 1.18: https://github.com/kubernetes/kubernetes/issues/83513",
        "createdAt" : "2019-10-28T20:43:18Z",
        "updatedAt" : "2019-10-28T20:43:19Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb6dfeb718a4f9003186698e6a4a0e9a7a8287c6",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +557,561 @@\t\t\tStub:             `{\"metadata\": {\"name\": \"csini2\"}, \"spec\": {\"drivers\": [{\"name\": \"test-driver\", \"nodeID\": \"localhost\", \"topologyKeys\": [\"company.com/zone1\", \"company.com/zone2\"]}]}}`,\n\t\t\tExpectedEtcdPath: \"/registry/csinodes/csini2\",\n\t\t\tExpectedGVK:      gvkP(\"storage.k8s.io\", \"v1beta1\", \"CSINode\"),\n\t\t}\n\t}"
  },
  {
    "id" : "d2fa1e87-8e0c-4028-839b-6dc09ae094c7",
    "prId" : 74606,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74606#pullrequestreview-208703026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d155dea-b6e3-4eb4-954d-2383c6b6eba7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is what verifies the data hitting etcd is in the version we expect, and this looks good",
        "createdAt" : "2019-02-27T18:55:04Z",
        "updatedAt" : "2019-02-27T20:43:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "01933b02a3bbc8f1c597f20d74a19f2d9a4ca988",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +305,309 @@\t\t\tStub:             `{\"metadata\": {\"name\": \"va2\"}, \"spec\": {\"attacher\": \"gce\", \"nodeName\": \"localhost\", \"source\": {\"persistentVolumeName\": \"pv2\"}}}`,\n\t\t\tExpectedEtcdPath: \"/registry/volumeattachments/va2\",\n\t\t\tExpectedGVK:      gvkP(\"storage.k8s.io\", \"v1\", \"VolumeAttachment\"),\n\t\t},\n\t\t// --"
  }
]