[
  {
    "id" : "21c5d954-0979-470c-8622-150eef4f5e42",
    "prId" : 99873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99873#pullrequestreview-611751179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "650ce700-6e06-4516-bb39-b33a6155a02d",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This block of change lgtm.",
        "createdAt" : "2021-03-14T23:23:59Z",
        "updatedAt" : "2021-03-15T16:02:04Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "86a8271624daf22d3a3f0a80740948bd548399e0",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +193,197 @@\t\t\t\t)\n\t\t\t}\n\n\t\t\tactualGVK := output.getGVK()\n\t\t\tif actualGVK != expectedGVK {"
  },
  {
    "id" : "bf36bb2d-d921-49e9-a980-d7c032a1fa3e",
    "prId" : 99873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99873#pullrequestreview-617944909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f977f137-3cb8-4930-9d20-0431a38c6362",
        "parentId" : null,
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "Is debug setting to true anywhere?",
        "createdAt" : "2021-03-19T17:20:49Z",
        "updatedAt" : "2021-03-19T17:20:49Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      },
      {
        "id" : "481cf91f-dc81-4347-ba75-fab53b3b10de",
        "parentId" : "f977f137-3cb8-4930-9d20-0431a38c6362",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no. this output is excessively verbose and is not relevant for most test failures... keeping this here is fine, but requiring someone to flip the debug var to true when debugging a failure locally",
        "createdAt" : "2021-03-22T20:16:09Z",
        "updatedAt" : "2021-03-22T20:16:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "25243e20-3f23-43b4-bdaf-602543289be4",
        "parentId" : "f977f137-3cb8-4930-9d20-0431a38c6362",
        "authorId" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "body" : "Thanks for the explanation.",
        "createdAt" : "2021-03-22T20:18:54Z",
        "updatedAt" : "2021-03-22T20:18:54Z",
        "lastEditedBy" : "f474bb7f-c91e-4c7f-8215-aa1a0f8eb05a",
        "tags" : [
        ]
      }
    ],
    "commit" : "86a8271624daf22d3a3f0a80740948bd548399e0",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +239,243 @@\nfunc dumpEtcdKVOnFailure(t *testing.T, kvClient clientv3.KV) {\n\tif t.Failed() && debug {\n\t\tresponse, err := kvClient.Get(context.Background(), \"/\", clientv3.WithPrefix())\n\t\tif err != nil {"
  },
  {
    "id" : "a451661d-0c9f-4ebe-8c33-9fa6415a658c",
    "prId" : 66864,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66864#pullrequestreview-142594654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa3c04cb-b519-499e-8750-20a2d4ab7826",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "What changed for us to need this logic?",
        "createdAt" : "2018-08-01T13:59:13Z",
        "updatedAt" : "2018-08-02T12:45:15Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "8f4f4e4d-3f9c-4ae6-80a8-8554bffcc7c6",
        "parentId" : "aa3c04cb-b519-499e-8750-20a2d4ab7826",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> What changed for us to need this logic?\r\n\r\nThe dynamic client does not go through an encoding step that forces a particular GVK on the json.",
        "createdAt" : "2018-08-01T14:20:07Z",
        "updatedAt" : "2018-08-02T12:45:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "bed5bb35-7e62-42ea-b21a-5fb64e889a8e",
        "parentId" : "aa3c04cb-b519-499e-8750-20a2d4ab7826",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "I must be missing something - I thought that the way I wrote the original client it would just send the bytes to the specific URL with no modifications or interpretation.",
        "createdAt" : "2018-08-01T23:00:37Z",
        "updatedAt" : "2018-08-02T12:45:15Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2eb1083b9bcfbd118118f361169b327913d0d128",
    "line" : 605,
    "diffHunk" : "@@ -1,1 +804,808 @@\t\treturn err\n\t}\n\ttypeMetaAdder[\"apiVersion\"] = mapping.GroupVersionKind.GroupVersion().String()\n\ttypeMetaAdder[\"kind\"] = mapping.GroupVersionKind.Kind\n"
  },
  {
    "id" : "ad60ec94-b6af-4426-82c5-9f7ce301538f",
    "prId" : 53679,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53679#pullrequestreview-74163195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51995e33-4852-486e-bdaa-b965e8dbbb8b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this stub is using JSON generated from an internal object (note the capitalized keys). this is pre-existing in the other stub tests and can be fixed as a follow up.",
        "createdAt" : "2017-11-03T17:50:37Z",
        "updatedAt" : "2017-11-03T17:50:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5590c1fb94e09f9a2b7a09c9776e8d6535b18304",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +198,202 @@\t},\n\tgvr(\"apps\", \"v1\", \"controllerrevisions\"): {\n\t\tstub:             `{\"metadata\":{\"name\":\"crs3\"},\"data\":{\"name\":\"abc\",\"namespace\":\"default\",\"creationTimestamp\":null,\"Spec\":{\"Replicas\":0,\"Selector\":{\"matchLabels\":{\"foo\":\"bar\"}},\"Template\":{\"creationTimestamp\":null,\"labels\":{\"foo\":\"bar\"},\"Spec\":{\"Volumes\":null,\"InitContainers\":null,\"Containers\":null,\"RestartPolicy\":\"Always\",\"TerminationGracePeriodSeconds\":null,\"ActiveDeadlineSeconds\":null,\"DNSPolicy\":\"ClusterFirst\",\"NodeSelector\":null,\"ServiceAccountName\":\"\",\"AutomountServiceAccountToken\":null,\"NodeName\":\"\",\"SecurityContext\":null,\"ImagePullSecrets\":null,\"Hostname\":\"\",\"Subdomain\":\"\",\"Affinity\":null,\"SchedulerName\":\"\",\"Tolerations\":null,\"HostAliases\":null}},\"VolumeClaimTemplates\":null,\"ServiceName\":\"\"},\"Status\":{\"ObservedGeneration\":null,\"Replicas\":0}},\"revision\":0}`,\n\t\texpectedEtcdPath: \"/registry/controllerrevisions/etcdstoragepathtestnamespace/crs3\",\n\t\texpectedGVK:      gvkP(\"apps\", \"v1beta1\", \"ControllerRevision\"),"
  },
  {
    "id" : "861486bf-8494-4d54-9945-d48e6f862716",
    "prId" : 50995,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50995#pullrequestreview-59760328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b283ef-9b37-4c8f-b189-ed4251b973cf",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this is insane startup logic for a single test ðŸ˜±  Compare cmd/kube-apiserver/app/testing/server_test.go.",
        "createdAt" : "2017-08-21T07:26:30Z",
        "updatedAt" : "2017-08-21T07:26:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7643fd0a-38c6-44f6-a33d-e394fcadb6f2",
        "parentId" : "d4b283ef-9b37-4c8f-b189-ed4251b973cf",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "It is a necessary evil to get into the guts of the master which are not exposed by the default testing bits (and its not like anyone else cares about direct etcd access).  This is completely based off of `TestAggregatedAPIServer`.",
        "createdAt" : "2017-08-30T22:48:41Z",
        "updatedAt" : "2017-08-30T22:48:41Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "c2067fc6-b06a-42ef-b04f-3d2f5dab2be7",
        "parentId" : "d4b283ef-9b37-4c8f-b189-ed4251b973cf",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "not a blocker for this PR, just some observation.",
        "createdAt" : "2017-08-31T05:46:04Z",
        "updatedAt" : "2017-08-31T05:46:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "81f8ed4578555d758bffb253a14510b6a319579d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +706,710 @@\t}()\n\n\tif err := wait.PollImmediate(time.Second, time.Minute, func() (done bool, err error) {\n\t\tobj := kubeClientConfigValue.Load()\n\t\tif obj == nil {"
  },
  {
    "id" : "f418993e-61d4-4b21-a5f7-4557fbd7f969",
    "prId" : 50995,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50995#pullrequestreview-59717086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3953621a-bfe2-45e4-a971-03ba0438dd23",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "Split the health check call logic into a separate function? It doesn't need to be inline here.",
        "createdAt" : "2017-08-30T22:25:17Z",
        "updatedAt" : "2017-08-30T22:25:38Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "3a145ad6-6e39-493c-be33-a805248da65f",
        "parentId" : "3953621a-bfe2-45e4-a971-03ba0438dd23",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "This cannot be split up because it uses `atomic.Value` which is not safe to copy.",
        "createdAt" : "2017-08-30T22:54:07Z",
        "updatedAt" : "2017-08-30T22:54:07Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "81f8ed4578555d758bffb253a14510b6a319579d",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +716,720 @@\t\tcfg.ContentConfig.GroupVersion = &schema.GroupVersion{}\n\t\tcfg.ContentConfig.NegotiatedSerializer = kapi.Codecs\n\t\tprivilegedClient, err := restclient.RESTClientFor(&cfg)\n\t\tif err != nil {\n\t\t\t// this happens because we race the API server start"
  },
  {
    "id" : "eecc84d9-2e82-46ca-ad1d-29c2938da740",
    "prId" : 50698,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50698#pullrequestreview-56716681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9eb29d87-b7e2-4eed-af14-66cf6116bfb3",
        "parentId" : null,
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "You need to update the expectedGVK (GroupVersionKind) to be gvkP(\"apps\", \"v1beta1\", \"ControllerRevision\") because the storage format has not been migrated.",
        "createdAt" : "2017-08-16T18:00:48Z",
        "updatedAt" : "2017-08-17T04:29:44Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      },
      {
        "id" : "806a2ba4-f321-4b67-aa53-8f587073914b",
        "parentId" : "9eb29d87-b7e2-4eed-af14-66cf6116bfb3",
        "authorId" : "e7cde2e6-5288-4287-8cef-8576dcb3c7d7",
        "body" : "Done.",
        "createdAt" : "2017-08-16T18:09:28Z",
        "updatedAt" : "2017-08-17T04:29:44Z",
        "lastEditedBy" : "e7cde2e6-5288-4287-8cef-8576dcb3c7d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b4f263b6706415c97e42cf7e1772f79a2d180db",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +171,175 @@\tgvr(\"apps\", \"v1beta2\", \"controllerrevisions\"): {\n\t\tstub:             `{\"metadata\":{\"name\":\"crs2\"},\"data\":{\"name\":\"abc\",\"namespace\":\"default\",\"creationTimestamp\":null,\"Spec\":{\"Replicas\":0,\"Selector\":{\"matchLabels\":{\"foo\":\"bar\"}},\"Template\":{\"creationTimestamp\":null,\"labels\":{\"foo\":\"bar\"},\"Spec\":{\"Volumes\":null,\"InitContainers\":null,\"Containers\":null,\"RestartPolicy\":\"Always\",\"TerminationGracePeriodSeconds\":null,\"ActiveDeadlineSeconds\":null,\"DNSPolicy\":\"ClusterFirst\",\"NodeSelector\":null,\"ServiceAccountName\":\"\",\"AutomountServiceAccountToken\":null,\"NodeName\":\"\",\"SecurityContext\":null,\"ImagePullSecrets\":null,\"Hostname\":\"\",\"Subdomain\":\"\",\"Affinity\":null,\"SchedulerName\":\"\",\"Tolerations\":null,\"HostAliases\":null}},\"VolumeClaimTemplates\":null,\"ServiceName\":\"\"},\"Status\":{\"ObservedGeneration\":null,\"Replicas\":0}},\"revision\":0}`,\n\t\texpectedEtcdPath: \"/registry/controllerrevisions/etcdstoragepathtestnamespace/crs2\",\n\t\texpectedGVK:      gvkP(\"apps\", \"v1beta1\", \"ControllerRevision\"),\n\t},"
  },
  {
    "id" : "f99a2288-a1a5-4f5d-89cf-b5084090eab7",
    "prId" : 50164,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50164#pullrequestreview-54753975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47244122-ce87-45e8-ad0a-4dfbcf66dc1a",
        "parentId" : null,
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "@kow3ns The test case for statefulset did not have `spec.selector`, but similar test cases for deployments, daemonsets, and replicasets all have `spec.selector`. Hence, i modified the test case.",
        "createdAt" : "2017-08-07T19:39:27Z",
        "updatedAt" : "2017-08-09T18:45:06Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5987fe72c3d8f2e1db9ff09128db8d06c0eeb13",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +134,138 @@\t// k8s.io/kubernetes/pkg/apis/apps/v1beta1\n\tgvr(\"apps\", \"v1beta1\", \"statefulsets\"): {\n\t\tstub:             `{\"metadata\": {\"name\": \"ss1\"}, \"spec\": {\"selector\": {\"matchLabels\": {\"a\": \"b\"}}, \"template\": {\"metadata\": {\"labels\": {\"a\": \"b\"}}}}}`,\n\t\texpectedEtcdPath: \"/registry/statefulsets/etcdstoragepathtestnamespace/ss1\",\n\t},"
  },
  {
    "id" : "caeb88cf-9c96-45c2-af90-61c35e394bd1",
    "prId" : 50164,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50164#pullrequestreview-54754048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4999db16-935b-49cd-8760-c01560a18a0a",
        "parentId" : null,
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "@kow3ns Same here.",
        "createdAt" : "2017-08-07T19:39:38Z",
        "updatedAt" : "2017-08-09T18:45:06Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5987fe72c3d8f2e1db9ff09128db8d06c0eeb13",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +150,154 @@\t// k8s.io/kubernetes/pkg/apis/apps/v1beta2\n\tgvr(\"apps\", \"v1beta2\", \"statefulsets\"): {\n\t\tstub:             `{\"metadata\": {\"name\": \"ss2\"}, \"spec\": {\"selector\": {\"matchLabels\": {\"a\": \"b\"}}, \"template\": {\"metadata\": {\"labels\": {\"a\": \"b\"}}}}}`,\n\t\texpectedEtcdPath: \"/registry/statefulsets/etcdstoragepathtestnamespace/ss2\",\n\t\texpectedGVK:      gvkP(\"apps\", \"v1beta1\", \"StatefulSet\"),"
  },
  {
    "id" : "c867ae0c-d6dc-4834-8038-5c430bc4b87b",
    "prId" : 49112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49112#pullrequestreview-74393158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c9153b2-3ab0-4dee-b559-b8ec4b6b3082",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Could you also check if the events are stored in a separate etcd instance? I don't know exactly where the code is, @lavalamp @jpbetz do you know?",
        "createdAt" : "2017-11-03T07:10:15Z",
        "updatedAt" : "2017-11-22T18:52:01Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "b161f2e7-971b-48d5-91ad-1256e78048ec",
        "parentId" : "5c9153b2-3ab0-4dee-b559-b8ec4b6b3082",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I think it's config dependent, but if there's a way to test default config I can do that.",
        "createdAt" : "2017-11-06T11:49:25Z",
        "updatedAt" : "2017-11-22T18:52:01Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef6f0b8c6e73fb8167e5debf7641f30a62c4e30c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +249,253 @@\n\t// k8s.io/kubernetes/pkg/apis/events/v1beta1\n\tgvr(\"events.k8s.io\", \"v1beta1\", \"events\"): {\n\t\tstub:             `{\"metadata\": {\"name\": \"event2\"}, \"regarding\": {\"namespace\": \"etcdstoragepathtestnamespace\"}, \"note\": \"some data here\", \"eventTime\": \"2017-08-09T15:04:05.000000Z\", \"reportingInstance\": \"node-xyz\", \"reportingController\": \"k8s.io/my-controller\", \"action\": \"DidNothing\", \"reason\": \"Lazyness\"}`,\n\t\texpectedEtcdPath: \"/registry/events/etcdstoragepathtestnamespace/event2\","
  },
  {
    "id" : "2cdd8a17-1cad-430f-b161-209dd4eff024",
    "prId" : 44633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44633#pullrequestreview-34022375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cf57e35-b1ea-462a-b4e5-23befed07a5f",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "We force protobuf in [api-server](https://github.com/kubernetes/kubernetes/blob/a0418d01ac6a332f007a4a0ca639f4acede30edd/cmd/kube-apiserver/app/options/options.go#L112) so I'd say it should be protobuf here as well.",
        "createdAt" : "2017-04-21T12:48:24Z",
        "updatedAt" : "2017-04-21T12:53:41Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "64e38ff0-ed8d-4507-8079-ea285f2e73e0",
        "parentId" : "6cf57e35-b1ea-462a-b4e5-23befed07a5f",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Sure, but you have to tell me how to extract protobuf from etcd without using `kapi.Codecs`.\r\n\r\nBasically, I want to make sure no conversions, defaulting, etc happens.",
        "createdAt" : "2017-04-21T13:24:12Z",
        "updatedAt" : "2017-04-21T13:24:12Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "a3a268cc-da49-4c0e-b655-4d4cbe547fb6",
        "parentId" : "6cf57e35-b1ea-462a-b4e5-23befed07a5f",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Right... yeah, let it be as simple as can be for now. ",
        "createdAt" : "2017-04-21T13:28:35Z",
        "updatedAt" : "2017-04-21T13:28:36Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2070c2a84810dce2d45c55e810405a3d8a57c734",
    "line" : 539,
    "diffHunk" : "@@ -1,1 +537,541 @@\t\t\tkubeAPIServerOptions.SecureServing.BindAddress = net.ParseIP(\"127.0.0.1\")\n\t\t\tkubeAPIServerOptions.Etcd.StorageConfig.ServerList = []string{framework.GetEtcdURLFromEnv()}\n\t\t\tkubeAPIServerOptions.Etcd.DefaultStorageMediaType = runtime.ContentTypeJSON // TODO use protobuf?\n\t\t\tkubeAPIServerOptions.ServiceClusterIPRange = *defaultServiceClusterIPRange\n\t\t\tkubeAPIServerOptions.Authorization.Mode = \"RBAC\""
  },
  {
    "id" : "01b82d66-0aab-45a7-b9cf-43b769defe19",
    "prId" : 44633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44633#pullrequestreview-34013799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc0c2ccc-3952-48bd-8381-cfd7de3e1635",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Uncomment or drop it.",
        "createdAt" : "2017-04-21T12:52:01Z",
        "updatedAt" : "2017-04-21T12:53:41Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2070c2a84810dce2d45c55e810405a3d8a57c734",
    "line" : 420,
    "diffHunk" : "@@ -1,1 +418,422 @@\t\t\tkindSeen.Insert(kind)\n\t\t\tif kindWhiteList.Has(kind) {\n\t\t\t\t// t.Logf(\"skipping test for %s from %s because its GVK %s is whitelisted and has no mapping\", kind, pkgPath, gvk)\n\t\t\t} else {\n\t\t\t\tt.Errorf(\"no mapping found for %s from %s but its GVK %s is not whitelisted\", kind, pkgPath, gvk)"
  },
  {
    "id" : "546a4f63-9e5d-494c-be0c-df7ecf3ef597",
    "prId" : 44633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44633#pullrequestreview-34013799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb701293-35ea-41f2-930c-525348d40d80",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Ucomment or drop it.",
        "createdAt" : "2017-04-21T12:52:50Z",
        "updatedAt" : "2017-04-21T12:53:41Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2070c2a84810dce2d45c55e810405a3d8a57c734",
    "line" : 444,
    "diffHunk" : "@@ -1,1 +442,446 @@\n\t\tif isEphemeral { // TODO it would be nice if we could remove this and infer if an object is not stored in etcd\n\t\t\t// t.Logf(\"Skipping test for %s from %s\", kind, pkgPath)\n\t\t\tephemeralSeen[gvResource] = empty{}\n\t\t\tdelete(etcdSeen, gvResource)"
  }
]