[
  {
    "id" : "ff3c5316-9779-498b-aab6-c6466a0758d1",
    "prId" : 103564,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103564#pullrequestreview-713309066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a31187c7-4c62-481f-abf3-33a6368a3414",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I'm not super sure what this test is doing, but I think you need a test that would actually extract a small applied object from a larger object, and see that you can still extract the applied object.",
        "createdAt" : "2021-07-19T23:53:55Z",
        "updatedAt" : "2021-07-20T00:09:44Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "e15a5dc8-abf7-4046-87b3-3e174cc495a2",
        "parentId" : "a31187c7-4c62-481f-abf3-33a6368a3414",
        "authorId" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "body" : "modified the test based on our offline discussion to only test the \"value-add\" of `extractUnstructured`",
        "createdAt" : "2021-07-22T23:28:55Z",
        "updatedAt" : "2021-07-22T23:46:42Z",
        "lastEditedBy" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca90849724e187e64bfada85d51e8e72572844e0",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +208,212 @@}\n\nfunc TestUnstructuredExtract(t *testing.T) {\n\tresult := kubeapiservertesting.StartTestServerOrDie(t, nil, []string{\"--disable-admission-plugins\", \"ServiceAccount\"}, framework.SharedEtcd())\n\tdefer result.TearDownFn()"
  },
  {
    "id" : "bd5ac268-3f80-4fb6-801f-38621902abc0",
    "prId" : 103564,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103564#pullrequestreview-715400894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94937964-6d96-40dd-9f97-e9065fb18730",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I think that's good, I wish maybe we could guarantee there are other fields. (to be fair, we know there are other fields because of defaulting, so that's also fine). We don't want to re-test the whole feature though. Thanks!",
        "createdAt" : "2021-07-26T19:46:14Z",
        "updatedAt" : "2021-07-26T19:46:27Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "ff3f3e9e-ffe8-4153-84db-26af7d84b712",
        "parentId" : "94937964-6d96-40dd-9f97-e9065fb18730",
        "authorId" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "body" : "I guess I could add an assertion for one of the defaulted fields (that it exists on actual, but not in extracted), but that seems a bit construed. \r\n\r\nI could also do a second apply with another manager, but like you said, that' more about testing the underlying `ExtractItems` rather than this specific unstructed one.\r\n\r\nEither way let me know if either of these sound compelling or if you think of any way to validate the other fields, leaving as is for now.",
        "createdAt" : "2021-07-27T01:39:33Z",
        "updatedAt" : "2021-07-27T01:39:51Z",
        "lastEditedBy" : "f4ac3f8f-7ffb-4966-8247-0d4dc4a5bca1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca90849724e187e64bfada85d51e8e72572844e0",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\tt.Fatalf(\"unexpected error when constructing extrator: %v\", err)\n\t}\n\textracted, err := extractor.Extract(actual, mgr)\n\tif err != nil {\n\t\tt.Fatalf(\"unexpected error when extracting: %v\", err)"
  }
]