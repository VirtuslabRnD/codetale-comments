[
  {
    "id" : "679a9cfd-e26f-4425-9c8b-1a9d0b112c07",
    "prId" : 95281,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95281#pullrequestreview-578812804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae7dd502-ea6e-4e9e-89dd-1f1ca887b037",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "it's a bit strange that we're not showing all the errors here, but I agree this is what the intent of the original code looks to be... fail on the first err and it's a race to see which one arrives first",
        "createdAt" : "2021-01-28T22:58:54Z",
        "updatedAt" : "2021-02-07T18:18:34Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ef69060a724c644555eb5a0e6de805cc20ba4e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +691,695 @@\tclose(errs)\n\tfor errString := range errs {\n\t\tt.Fatalf(errString)\n\t}\n\tt.Logf(\"all pods are created, all replications controllers are created then deleted\")"
  },
  {
    "id" : "2ca8a2e3-789c-485d-afa4-5306e34c5aa8",
    "prId" : 89236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89236#pullrequestreview-377286175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed759c9e-2d92-4105-b4a8-59ccfa1da89f",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "what about just moving this to the end of the switch?",
        "createdAt" : "2020-03-18T22:23:32Z",
        "updatedAt" : "2020-03-18T22:23:32Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a1fd2a94-4b76-4784-86f6-ea82536fdeff",
        "parentId" : "ed759c9e-2d92-4105-b4a8-59ccfa1da89f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I was trying to keep it in the same location to minimize the logical diff from before",
        "createdAt" : "2020-03-18T22:39:14Z",
        "updatedAt" : "2020-03-18T22:39:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69eb837e3b1adf7d25d66c38a8b9d5c2da53ed74",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +462,466 @@\torphan := false\n\tswitch {\n\tcase options.OrphanDependents == nil && options.PropagationPolicy == nil && len(initialFinalizers) == 0:\n\t\t// if there are no deletion options, the default policy for replication controllers is orphan\n\t\torphan = true"
  },
  {
    "id" : "df9de783-589e-4c73-882f-78892e8566f8",
    "prId" : 78537,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78537#pullrequestreview-245768256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa1d0970-700a-47da-8cd8-612cdfe2dd38",
        "parentId" : null,
        "authorId" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "body" : "very minor: `wait.ForeverTestTimeout` appropriate here? (it's 30s instead of 60s..). I realize this is preexisting code..",
        "createdAt" : "2019-06-04T22:59:43Z",
        "updatedAt" : "2019-06-04T23:11:03Z",
        "lastEditedBy" : "d4f34d8f-5341-4ac1-b8b2-5e5f11e23a5d",
        "tags" : [
        ]
      },
      {
        "id" : "47d7161a-89c1-44f7-a9e4-60eebf1958aa",
        "parentId" : "fa1d0970-700a-47da-8cd8-612cdfe2dd38",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think I'll leave this as is for now",
        "createdAt" : "2019-06-05T00:53:37Z",
        "updatedAt" : "2019-06-05T00:53:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a7e7fc1566d07e7466ee96672458a040ba51e6b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +463,467 @@\t// the creation of the pods, the pods will not be orphaned.\n\tif orphan {\n\t\terr := wait.Poll(1*time.Second, 60*time.Second, func() (bool, error) {\n\t\t\tfor _, u := range podUIDs {\n\t\t\t\tif !gc.GraphHasUID(u) {"
  },
  {
    "id" : "0d1ee93c-27e6-40af-a80e-c7249307ceb7",
    "prId" : 47665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47665#pullrequestreview-52665162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11e40044-69ca-4cda-928e-cdb9e5892f2b",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Same comment on the verification of foreground deletion.",
        "createdAt" : "2017-07-27T03:24:22Z",
        "updatedAt" : "2017-07-28T14:00:27Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0695aa94-8aa6-4812-bbe5-87679c55c67a",
        "parentId" : "11e40044-69ca-4cda-928e-cdb9e5892f2b",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Refactored both assertions in this test",
        "createdAt" : "2017-07-27T14:02:10Z",
        "updatedAt" : "2017-07-28T14:00:27Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "d08dfb92c71960dba663f7a8e6465a93ddf5c560",
    "line" : 607,
    "diffHunk" : "@@ -1,1 +916,920 @@\n\t// Delete the custom owner.\n\tforeground := metav1.DeletePropagationForeground\n\terr = resourceClient.Delete(customOwner.GetName(), &metav1.DeleteOptions{PropagationPolicy: &foreground})\n\tif err != nil {"
  },
  {
    "id" : "2e8179ba-968d-4dca-a1cc-154dbe329356",
    "prId" : 47665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47665#pullrequestreview-53192837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4a0f4ac-05e1-4c1a-b2fa-7a9333ac017f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This is flaking according to http://storage.googleapis.com/k8s-metrics/flakes-latest.json",
        "createdAt" : "2017-07-31T03:29:30Z",
        "updatedAt" : "2017-07-31T03:30:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "42a08440-c175-44b0-843d-bc5bc8b2c640",
        "parentId" : "b4a0f4ac-05e1-4c1a-b2fa-7a9333ac017f",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Thanks- will look into it",
        "createdAt" : "2017-07-31T11:42:11Z",
        "updatedAt" : "2017-07-31T11:42:11Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "d08dfb92c71960dba663f7a8e6465a93ddf5c560",
    "line" : 560,
    "diffHunk" : "@@ -1,1 +869,873 @@// before/after expected object graph given a delete operation targetting a\n// specific node in the before graph with certain delete options).\nfunc TestMixedRelationships(t *testing.T) {\n\tctx := setup(t, 5)\n\tdefer ctx.tearDown()"
  },
  {
    "id" : "004d5f48-5437-4f88-bbc9-a68f891f827b",
    "prId" : 38676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38676#pullrequestreview-24058835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e92b1c-6fcc-4136-b7e3-608b780bf1a7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "is there some condition you can wait on rather than just blanket sleeping? Like, wait until the finalizer is applied? Have an additional pod that isn't blocked from being deleted and wait until the pod is deleted?",
        "createdAt" : "2017-02-25T00:59:19Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "be6c856e-680c-4125-a6d6-d36d79b85d36",
        "parentId" : "67e92b1c-6fcc-4136-b7e3-608b780bf1a7",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "There could be bugs causing the owner to be wrongly deleted after the suggested conditions (or other conditions) are met. We want to catch such bugs. The suggested conditions usually take just a few seconds to be met, so sleeping 30 seconds is a stronger test IMO.",
        "createdAt" : "2017-02-25T23:12:27Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "cc02b63e-3e93-412c-b947-b21c3cbd7e5a",
        "parentId" : "67e92b1c-6fcc-4136-b7e3-608b780bf1a7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That's fair, but I'd still prefer to see it structured as \"wait until condition is met; wait extra\"...\r\n\r\nOr at least it needs some comment justifying the sleep, otherwise it just looks like a flake waiting to happen. :)\r\n\r\nYou can fix in a followup.",
        "createdAt" : "2017-02-27T18:31:35Z",
        "updatedAt" : "2017-03-01T07:05:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cb266340ac5d702a650ea30c730bb909cd99b5",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +637,641 @@\t\tt.Fatalf(\"Failed to delete the rc: %v\", err)\n\t}\n\ttime.Sleep(30 * time.Second)\n\t// verify the toBeDeleteRC is NOT deleted\n\t_, err = rcClient.Get(toBeDeletedRC.Name, metav1.GetOptions{})"
  }
]