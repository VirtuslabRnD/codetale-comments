[
  {
    "id" : "82dfb75c-4509-47d7-8911-5b638d8f9baa",
    "prId" : 42278,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42278#pullrequestreview-24618995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04b803cb-7789-4a5f-aa13-b4ddf7370acf",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "optional: Call this FederationAPIFramework? Or since its already in federation/framework package, we can call this APIServer?",
        "createdAt" : "2017-03-01T07:58:23Z",
        "updatedAt" : "2017-03-08T14:59:07Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "4b8a4061-5c0b-4e40-b1ca-5461444dd2fb",
        "parentId" : "04b803cb-7789-4a5f-aa13-b4ddf7370acf",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "This is a test fixture:\r\n\r\nhttps://en.wikipedia.org/wiki/Test_fixture\r\n\r\nI think it makes sense to identify it as such rather than obscuring its purpose with a general term like 'framework'.",
        "createdAt" : "2017-03-01T17:03:16Z",
        "updatedAt" : "2017-03-08T14:59:07Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "1a3f6718-daba-42e5-ad94-f68cd8bd86c9",
        "parentId" : "04b803cb-7789-4a5f-aa13-b4ddf7370acf",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "sure, sg.",
        "createdAt" : "2017-03-01T23:47:32Z",
        "updatedAt" : "2017-03-08T14:59:07Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2a8127a554c0ec823c4966b18858cda73c0acf",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@\n// FederationAPIFixture manages a federation api server\ntype FederationAPIFixture struct {\n\tHost     string\n\tstopChan chan struct{}"
  },
  {
    "id" : "646a885d-94d2-4480-a46d-880371b98ef8",
    "prId" : 42278,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42278#pullrequestreview-24625333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f972870c-9feb-4412-8b35-04694ae05b3e",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Another option instead of calling NonBlockingRun will be to call startServer in a go func() which is what we do at many places today.",
        "createdAt" : "2017-03-01T23:46:58Z",
        "updatedAt" : "2017-03-08T14:59:07Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "3618d4c6-bac8-4d68-9a20-025807a0c4e6",
        "parentId" : "f972870c-9feb-4412-8b35-04694ae05b3e",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "``Run`` blocking indefinitely makes sense for a process whose main purpose will be to run a server.  It makes it easy to block ``main`` from exiting and stopping non-``main`` goroutines.  For testing, however, async invocation adds indirection that make it more difficult to know the state of the server.  In the event of failure the server returns an error, but there is no indication of when a server has successfully bound to the specified port and can be connected to.  By running non-blocking, it's possible to tell when a client check is appropriate.  Otherwise, since there's a non-zero chance that a different process could bind to the ephemeral port between the time it is selected and when the server starts, a client check over http could end up targeting an unintended process.\r\n\r\nBeing able to run non-blocking will also make it easier to have the generic server take responsibility for ephemeral port allocation as per #42224.  When a call returns without an error, ``EffectiveSecurePort``/``EffectiveInsecurePort`` could be used to determine the ephemeral ports that were bound. ",
        "createdAt" : "2017-03-02T00:12:39Z",
        "updatedAt" : "2017-03-08T14:59:07Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd2a8127a554c0ec823c4966b18858cda73c0acf",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\trunOptions.InsecureServing.BindPort = port\n\n\t\terr = app.NonBlockingRun(runOptions, stopChan)\n\t\tif err != nil {\n\t\t\tt.Logf(\"Error starting the %s: %v\", apiNoun, err)"
  }
]