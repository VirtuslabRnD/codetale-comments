[
  {
    "id" : "33be4840-c38b-46ae-8308-a33d637ee349",
    "prId" : 46071,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46071#pullrequestreview-39618456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d047ea18-4798-42a1-a54b-fb7050fb2551",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Are you planning to add another test to verify that the resource is deleted from cluster 1 if cluster selector is updated to \"cluster==2\" after it was already propagated to cluster 1.",
        "createdAt" : "2017-05-22T05:30:44Z",
        "updatedAt" : "2017-05-22T05:30:44Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "c06d91be-5b62-4a96-94b9-871080bc085b",
        "parentId" : "d047ea18-4798-42a1-a54b-fb7050fb2551",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "I think that can be tested in unit tests.  The point of the integration test is to make sure things hang together, not validate all possible paths.",
        "createdAt" : "2017-05-23T00:45:19Z",
        "updatedAt" : "2017-05-23T00:45:19Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cef454fd38219c373dfb4576b1375d5361d14d8",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +93,97 @@\t\t// Verify the object is not sent to the second cluster\n\t\tobjectExpected = false\n\t\tcrudTester.CheckPropagationForClients(updatedObj, fedFixture.ClusterClients[1:2], objectExpected)\n\n\t})"
  },
  {
    "id" : "e125c72f-424e-4c6c-9692-ba67a0b3cdec",
    "prId" : 42025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42025#pullrequestreview-26890732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "252293f2-fc59-4558-a3df-e0c31ad3a306",
        "parentId" : null,
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Will this lead to hard-to-diagnose failures as we add more tests? I can see there being enough resource types here that trying to diagnose which one actually caused the failure becomes a painful exercise.",
        "createdAt" : "2017-03-13T21:49:07Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      },
      {
        "id" : "9fcc795b-28d9-4473-a08a-2eba755eb95c",
        "parentId" : "252293f2-fc59-4558-a3df-e0c31ad3a306",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "What kind of failure are you worried about?  The tests run separately via [golang subtests](https://blog.golang.org/subtests), they just share fixture.  Since each test only cares about resources it creates and isolates those resources in a unique namespace, there is very little chance of overlap.\r\n\r\nEven if this test as proposed became a source of failure, modifying it would be relatively trivial.  The bulk of the work is done in the framework, this test just ties the test and the types together.",
        "createdAt" : "2017-03-14T14:24:26Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "ad960a15-db03-4474-badb-a21f5566957f",
        "parentId" : "252293f2-fc59-4558-a3df-e0c31ad3a306",
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Ah, I see now. My fault, I wasn't aware of how go subtests worked.",
        "createdAt" : "2017-03-14T18:15:43Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      }
    ],
    "commit" : "304030a61c5eab93b839006773a907c8894ee383",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@\n// TestFederationCRUD validates create/read/update/delete operations for federated resource types.\nfunc TestFederationCRUD(t *testing.T) {\n\tfedFixture := framework.FederationFixture{DesiredClusterCount: 2}\n\tfedFixture.SetUp(t)"
  },
  {
    "id" : "c3fe982e-4b79-400f-9de2-d46907e2ce82",
    "prId" : 42025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42025#pullrequestreview-26890732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e316be4-4476-4518-ab52-502cf2598ced",
        "parentId" : null,
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Should this be a separate test?",
        "createdAt" : "2017-03-13T22:52:51Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      },
      {
        "id" : "5db01abe-6340-4447-b606-a1fdd108ced4",
        "parentId" : "3e316be4-4476-4518-ab52-502cf2598ced",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "The tests are run as golang subtests and this is really just a dispatcher that enables a shared fixture.",
        "createdAt" : "2017-03-14T14:25:38Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "283c30d0-cbf9-469f-8138-daa263155905",
        "parentId" : "3e316be4-4476-4518-ab52-502cf2598ced",
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Got it. Thanks for the info!",
        "createdAt" : "2017-03-14T18:16:03Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      }
    ],
    "commit" : "304030a61c5eab93b839006773a907c8894ee383",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// Validate deletion handling where orphanDependents is true or nil for a single resource type since the\n\t// underlying logic is common across all types.\n\torphanedDependents := true\n\ttestCases := map[string]*bool{\n\t\t\"Resources should not be deleted from underlying clusters when OrphanDependents is true\": &orphanedDependents,"
  },
  {
    "id" : "ae3f3130-1da8-49d3-89d7-4e618ece9e73",
    "prId" : 42025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42025#pullrequestreview-29192177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a6e8c82-d53b-44be-9d89-901da6d98d48",
        "parentId" : null,
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Will this later have an array of fixtures, or be wrapped in loop with all of the fixtures? Perhaps add a TODO?",
        "createdAt" : "2017-03-14T23:29:34Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      },
      {
        "id" : "64d0300d-de21-4853-b70d-6510f4851b2f",
        "parentId" : "4a6e8c82-d53b-44be-9d89-901da6d98d48",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Was this the unresolved comment?  I did actually answer in reviewable:\r\n\r\n```\r\nThis PR was originally targeting daemonset and configmap as well as secrets, and I'll be posting PRs for those types as soon as this PR merges.\r\n```\r\n\r\nWhat's more likely is that post-controller refactor a collection of type adapters is used to configure controllers and testing rather than having to specify the type adapters explicitly.  This is under heavy enough development so I don't see a need to document future intent quite yet. ",
        "createdAt" : "2017-03-27T14:06:55Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "304030a61c5eab93b839006773a907c8894ee383",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@\tfor testName, orphanDependents := range testCases {\n\t\tt.Run(testName, func(t *testing.T) {\n\t\t\tfixture := &framework.SecretFixture{}\n\t\t\tframework.SetUpControllerFixture(t, fedFixture.APIFixture, fixture)\n\t\t\tdefer fixture.TearDown(t)"
  }
]