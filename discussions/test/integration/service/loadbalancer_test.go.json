[
  {
    "id" : "2436870b-2fe9-4f02-afb9-dc8bedd613c4",
    "prId" : 103273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103273#pullrequestreview-694551403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "222810e3-de84-4208-9379-bea4340d0342",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "can you also explain the motivation for the rename in the PR description?\r\nthis is technically a cloud provider controller even if a fake cloud is returned by the function.\r\n\r\n/sig network",
        "createdAt" : "2021-06-28T20:09:20Z",
        "updatedAt" : "2021-06-28T20:09:20Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f326ab74-33f4-44bc-b698-b528701f541f",
        "parentId" : "222810e3-de84-4208-9379-bea4340d0342",
        "authorId" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "body" : "Hi @neolit123 , because this is a service controller in cloud provider, so I think it is better to name it `ServiceController` instead of `CloudProviderController`. You can refer this line: https://github.com/kubernetes/kubernetes/blob/master/test/integration/service/loadbalancer_test.go#L29, thanks!",
        "createdAt" : "2021-06-29T00:22:09Z",
        "updatedAt" : "2021-06-29T00:22:09Z",
        "lastEditedBy" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "tags" : [
        ]
      },
      {
        "id" : "e15fb114-96ed-4656-97ee-d598c8aec4a9",
        "parentId" : "222810e3-de84-4208-9379-bea4340d0342",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "there is also line 265 which has:\r\n```\r\nt.Fatalf(\"Error creating cloud provider controller: %v\", err)\r\n```\r\n",
        "createdAt" : "2021-06-29T01:31:44Z",
        "updatedAt" : "2021-06-29T01:31:44Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "825b9b44-7555-4a12-8f70-83d5a6fa53de",
        "parentId" : "222810e3-de84-4208-9379-bea4340d0342",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "^ +1 to rename the log error below",
        "createdAt" : "2021-06-29T01:35:39Z",
        "updatedAt" : "2021-06-29T01:35:46Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "c95c9799-fb7e-46b2-b157-f140bf8872e2",
        "parentId" : "222810e3-de84-4208-9379-bea4340d0342",
        "authorId" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "body" : "Thanks! Updated.",
        "createdAt" : "2021-06-29T03:07:56Z",
        "updatedAt" : "2021-06-29T03:07:56Z",
        "lastEditedBy" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "tags" : [
        ]
      }
    ],
    "commit" : "477aef192f5da41ad02d6925567cf5c0113796ff",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +250,254 @@}\n\nfunc newServiceController(t *testing.T, client *clientset.Clientset) (*servicecontroller.Controller, *fakecloud.Cloud, informers.SharedInformerFactory) {\n\tcloud := &fakecloud.Cloud{}\n\tinformerFactory := informers.NewSharedInformerFactory(client, 0)"
  },
  {
    "id" : "eef6b3ab-7eb0-455f-aecc-1c0cb0b72d68",
    "prId" : 103129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103129#pullrequestreview-691860082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "914203de-f7e7-41fc-8b6c-4b1aae5c8f82",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Can we also add a test to ensure loadBalancerClass is immutable after creation as long as the Service type is LoadBalancer?",
        "createdAt" : "2021-06-24T14:57:55Z",
        "updatedAt" : "2021-06-24T14:57:59Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe161579e206f177186ab88681ff5ca8cb615397",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +145,149 @@// Test_ServiceLoadBalancerEnableLoadBalancerClass tests that when a LoadBalancer\n// type of service has spec.LoadBalancerClass set, cloud provider should not create default load balancer.\nfunc Test_ServiceLoadBalancerEnableLoadBalancerClass(t *testing.T) {\n\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.ServiceLoadBalancerClass, true)()\n"
  },
  {
    "id" : "f0103bc8-d590-4193-baae-fa4f388dff05",
    "prId" : 96610,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96610#pullrequestreview-537295451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7de50d-cfa1-4142-bea2-608fa53bfe2c",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "What happens if I have a NodePort service and I mutate to LoadBalancer without NodePort enables?\r\nSame with LoadBalancer type without node ports that mutates to NodePort",
        "createdAt" : "2020-11-22T10:12:50Z",
        "updatedAt" : "2020-11-24T15:01:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "8a35e85d-c780-42ec-bc80-24b9663be5f7",
        "parentId" : "ad7de50d-cfa1-4142-bea2-608fa53bfe2c",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "> What happens if I have a NodePort service and I mutate to LoadBalancer without NodePort enables?\r\n\r\nThis isn't possible today since Type=NodePorts is always allocated node ports. The new field `service.spec.allocateLoadBalancerNodePorts` only applies for Type=LoadBalancer. \r\n\r\nYou can however, go from NodePort -> LoadBalancer and set `service.spec.allocateLoadBalancerNodePorts=false`. In this case nothing happens because that field does not de-allocate existing node ports, it only prevents new ones from being allocated. \r\n\r\n",
        "createdAt" : "2020-11-24T03:25:44Z",
        "updatedAt" : "2020-11-24T15:01:12Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "c40161f0-b966-4f83-8fdf-9e51588168e3",
        "parentId" : "ad7de50d-cfa1-4142-bea2-608fa53bfe2c",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "In general though, I feel like we should have an integration test suite that just tests various behaviors when switching between Service types. I would be willing to work on that as a follow-up to this PR.",
        "createdAt" : "2020-11-24T03:26:18Z",
        "updatedAt" : "2020-11-24T15:01:12Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "3a72013b-0e5a-4005-af5b-c2fb59c0377b",
        "parentId" : "ad7de50d-cfa1-4142-bea2-608fa53bfe2c",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "thanks for the clarifications\r\n> it only prevents new ones from being allocated.",
        "createdAt" : "2020-11-24T09:27:55Z",
        "updatedAt" : "2020-11-24T15:01:12Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5aba23813e231dce599811199109d542f840ed9",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@// Test_ServiceLoadBalancerSwitchToDeallocatedNodePorts test that switching a Service\n// to spec.allocateLoadBalancerNodePorts=false, does not de-allocate existing node ports.\nfunc Test_ServiceLoadBalancerEnableThenDisableAllocatedNodePorts(t *testing.T) {\n\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.ServiceLBNodePortControl, true)()\n"
  }
]