[
  {
    "id" : "49c3b2ef-e0da-4d6a-b338-39ab5c6c1d83",
    "prId" : 40041,
    "prUrl" : "https://github.com/ansible/ansible/pull/40041#pullrequestreview-119911183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "parentId" : null,
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "If the host doesn't exist and we try to delete it, the module should return `changed: false`.",
        "createdAt" : "2018-05-13T14:12:47Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      },
      {
        "id" : "b3536e9b-ff3c-425d-b7d1-95bda3f7e7fe",
        "parentId" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "authorId" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "body" : "It is slightly different.\r\nThe host is in fact created, the module fails because it does not reach the \"ENABLED\" state.\r\nNormally this will happen because there is a connectivity problem, and the control node cannot reach the host.\r\nIf you run the playbook again, the hsot will still not be \"enabled\" and your play will continue to fail, util the host reaches the desired state \"enabled\".\r\n\r\nUntil you fix the connectivity problem, the one_host module will continue to fail.\r\n\r\nOn the other hand you can always delete a host even if it is in ERROR state.\r\n",
        "createdAt" : "2018-05-13T21:16:22Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "tags" : [
        ]
      },
      {
        "id" : "3a2b9ecb-8884-49ca-9abc-8be3d31f15ad",
        "parentId" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "So if I create a host with state `present`, in which state is it created, because there is no state `present`? I guess it's created i state `enabled`. The thing is that this should be documented, as well as other states.\r\n\r\nLooking at the code all states except `absent` actually create a new host. So it should be documented like that:\r\n* `absent` deletes the host\r\n* `enabled`, `disabled`, `offline` create a host (if doesn't exist) and set the state, or sets the sate on the current host.\r\n* `present` if the host exists, doesn't change the state, if it doesn't exist creates the host and sets the state to `DEFAULT_STATE` (we could probably discuss what should be the default state, because I guess `enabled` is the default, which from my experience is bad, `disabled` is a much better initial state because it allows for testing of the host before allowing the scheduler to deploy new VMs on it).\r\n\r\nDid I get this right?\r\n\r\nAlso when I think about it, `state` doesn't have to have a default if you ask me, because `present` state isn't natural for host state in OpenNebula.  Maybe we can just remove the `present` state and set `state` to be empty by default. That means that if you just want to make some changes to the host, like the `template` part, you only specify the `name` and the `template` parameter. It would make the docs a lot simpler and easier to understand. I've been using OpenNebula for a long time and it was confusing for me.",
        "createdAt" : "2018-05-14T08:54:24Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      },
      {
        "id" : "5f6ef126-9915-4501-bb6b-25fdd4d4010b",
        "parentId" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "authorId" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "body" : "I see where you are going and you see the same problem I did.\r\n\r\nThe present state is satisfied by hosts that are in Enabled, Disabled or Offline states.\r\n\r\nthe rationale behind it is becase you want to separate \"provisioning\" from \"maintenance\" playbooks.\r\n\r\nWhen I provisiong our datacenter I create the objects: hosts, networks, etc. and Ensure that they are created OK.\r\n\r\nIn maintenance, for example: applying patches: you are going to disable the host, add OS patches, reboot, and re-enable. (grossly speaking).\r\n\r\nIf re-run provisioning playbook, you dont want it to change the state of the host to any as long as it is present in the platform.\r\n\r\nYou don't want your provisioning playbooks to chage the state of the hosts that are already in maintenance as long as it is present.\r\n\r\nthat is why present is satisfied by Enabled, Disabled and Offline.",
        "createdAt" : "2018-05-14T15:07:59Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "tags" : [
        ]
      },
      {
        "id" : "48b37c19-b32e-4820-8588-82d910793d1f",
        "parentId" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "authorId" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "body" : "With this point I suggest we take some field experience before deciding forward.\r\n\r\nAre you planing on running a physical host cluster? that would be awesome.",
        "createdAt" : "2018-05-14T15:45:16Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "tags" : [
        ]
      },
      {
        "id" : "8284a861-24fb-4c02-9a49-55e7e9082d1d",
        "parentId" : "59af8cd4-7cc3-4a7b-a1b8-f055bc7ad17b",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "I understand the provisioning part, didn't think of that use case completely. Then `present` is fine as is, I would just document what present means when the host is created. I can see that in the future I would like to have parameter e.g. `initial_state` which could define the initial state of the host when it's being created. Having that parameter you wouldn't even have to document what will be the initial state, besides saying that the value of `initial_state` is followed.\r\n\r\nWe are running a physical host cluster of OpenNebula, and this was the next module we were thinking to work one because we need it for host maintenance which you described.",
        "createdAt" : "2018-05-14T16:26:35Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9dcb810f86c1ba8ad3cb28e9765b338537e3a9",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@  assert:\n    that:\n    - result.changed\n\n# HOST ENABLEMENT"
  },
  {
    "id" : "fd68758b-c2ed-4e23-a880-a10d34ffbe3c",
    "prId" : 40041,
    "prUrl" : "https://github.com/ansible/ansible/pull/40041#pullrequestreview-119654726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bccdaf1e-945e-4f17-8502-728a14c96822",
        "parentId" : null,
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "Looking at this, maybe the module could return the template of the host?",
        "createdAt" : "2018-05-13T14:17:25Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9dcb810f86c1ba8ad3cb28e9765b338537e3a9",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +143,147 @@  assert:\n    that:\n    - result.changed\n\n# ---"
  },
  {
    "id" : "2667d4f3-d82b-4c35-a7d7-60424a69f338",
    "prId" : 40041,
    "prUrl" : "https://github.com/ansible/ansible/pull/40041#pullrequestreview-119667219",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0da39d7c-59e2-48d3-901a-82ce4fc593bc",
        "parentId" : null,
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "Maybe you could add a few tests for check mode (`check_mode: yes`) so that we know that the module doesn't change anything in check mode. I remember some Ansible modules having bugs and changing things in check mode.",
        "createdAt" : "2018-05-13T14:19:37Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      },
      {
        "id" : "b02005fa-9adb-481c-a716-d641af9a232e",
        "parentId" : "0da39d7c-59e2-48d3-901a-82ce4fc593bc",
        "authorId" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "body" : "one_host does not support check mode.\r\nI want to add check mode at a later stage.",
        "createdAt" : "2018-05-13T21:27:42Z",
        "updatedAt" : "2018-05-17T04:12:59Z",
        "lastEditedBy" : "cd33af01-e723-44d7-a7fe-ac945541dace",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9dcb810f86c1ba8ad3cb28e9765b338537e3a9",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# test code for the one_host module\n\n"
  }
]