[
  {
    "id" : "dc047ecf-306c-45db-8bf9-2028efb1cc2b",
    "prId" : 103383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103383#pullrequestreview-698442471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de5421b7-54e8-47f0-9e06-e399a4ca87a2",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "accelerate?",
        "createdAt" : "2021-07-02T10:41:39Z",
        "updatedAt" : "2021-07-02T11:18:15Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "097ca10f-e405-417c-bf91-075b48d1dac1",
        "parentId" : "de5421b7-54e8-47f0-9e06-e399a4ca87a2",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-07-02T19:08:49Z",
        "updatedAt" : "2021-07-02T19:08:49Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9cafc99be94a73d9b92545164dbf336bbd230a",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +1982,1986 @@\t}\n\n\t// If it's a driver pod, move other executor pods proactively to accelerating the scheduling.\n\tlabelSelector := labels.SelectorFromSet(labels.Set{\"executor\": \"\"})\n\tpodsToActivate, err := j.podLister.Pods(p.Namespace).List(labelSelector)"
  },
  {
    "id" : "a9989cf7-79b2-42e5-bc7e-a562c93d2a2c",
    "prId" : 100325,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100325#pullrequestreview-614994922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "127a3fea-caa1-4863-bb5d-418d3c10551d",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "(Probably a bit picky) Can we change the timeout of `TestPermitPlugin` from 10 seconds to 30 seconds; otherwise if the preemption logic lasts more than 10 seconds, we cannot tell if the waitingPod is rejected by preemption logic or the timer.",
        "createdAt" : "2021-03-18T02:36:31Z",
        "updatedAt" : "2021-03-23T06:38:01Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "1602607d-5891-4478-b62a-419f3b775c1e",
        "parentId" : "127a3fea-caa1-4863-bb5d-418d3c10551d",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler/framework_test.go#L453\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler/framework_test.go#L1852\r\n\r\nthe timeout is already 30s",
        "createdAt" : "2021-03-18T02:57:08Z",
        "updatedAt" : "2021-03-23T06:38:01Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      },
      {
        "id" : "fd04efaa-c300-405a-b89d-c653dcd9308c",
        "parentId" : "127a3fea-caa1-4863-bb5d-418d3c10551d",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I see. I checked the UT...",
        "createdAt" : "2021-03-18T05:34:01Z",
        "updatedAt" : "2021-03-23T06:38:01Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "850759ec87e520db19df217cc510f267c081dcf3",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +1903,1907 @@\t\tw := false\n\t\tpermitPlugin.fh.IterateOverWaitingPods(func(wp framework.WaitingPod) { w = true })\n\t\treturn !w, nil\n\t}); err != nil {\n\t\tt.Error(\"Expected the waiting pod to get preempted\")"
  },
  {
    "id" : "170acb9f-07ff-4fa1-9266-de718504e317",
    "prId" : 93661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93661#pullrequestreview-461036990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aed0b877-b06d-4e06-b38c-27245def6f82",
        "parentId" : null,
        "authorId" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "body" : "Emm...this check should be useless anymore? since if postBindPlugin is called, the `pluginInvokeEventChan` will return, if the postBindPlugin isn't called, the timeout will return.",
        "createdAt" : "2020-08-04T04:10:29Z",
        "updatedAt" : "2020-08-04T04:12:10Z",
        "lastEditedBy" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "tags" : [
        ]
      },
      {
        "id" : "b4aa83e6-37df-4c56-b40c-5c7a25506457",
        "parentId" : "aed0b877-b06d-4e06-b38c-27245def6f82",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "> if the postBindPlugin isn't called, the timeout will return.\r\n\r\n`t.Errorf` won't return - the logic proceeds to L1344.",
        "createdAt" : "2020-08-04T05:28:42Z",
        "updatedAt" : "2020-08-04T05:28:43Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "984aa18c-3086-4247-9b88-f4661515457b",
        "parentId" : "aed0b877-b06d-4e06-b38c-27245def6f82",
        "authorId" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "body" : "> > if the postBindPlugin isn't called, the timeout will return.\r\n> \r\n> `t.Errorf` won't return - the logic proceeds to L1344.\r\n\r\nYea, I mean only the t.Errorf at line 1342 is enough, line 1342 already ensure the plugin isn't called. so the line 1344 to 1346 can be removed.",
        "createdAt" : "2020-08-04T06:16:46Z",
        "updatedAt" : "2020-08-04T06:21:11Z",
        "lastEditedBy" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "tags" : [
        ]
      },
      {
        "id" : "3ce9662d-8440-4d84-80ff-e2d832491953",
        "parentId" : "aed0b877-b06d-4e06-b38c-27245def6f82",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I see your point. Although the root cause of L1342 and L1344 ~ L1346 is the same, but their symptoms are different, so IMO keeping L1344 ~ L1346 as is can make the semantics more explicit.",
        "createdAt" : "2020-08-04T17:27:03Z",
        "updatedAt" : "2020-08-04T17:27:03Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "f6c18466-4e67-4f59-9330-120b15bac5cc",
        "parentId" : "aed0b877-b06d-4e06-b38c-27245def6f82",
        "authorId" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "body" : "got it, thanks",
        "createdAt" : "2020-08-04T17:49:25Z",
        "updatedAt" : "2020-08-04T17:49:26Z",
        "lastEditedBy" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6b7ab3f731225e2c086048cbcac5ec3ee542264",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +1342,1346 @@\t\t\t\t\tt.Errorf(\"pluginInvokeEventChan timed out\")\n\t\t\t\t}\n\t\t\t\tif postBindPlugin.numPostBindCalled == 0 {\n\t\t\t\t\tt.Errorf(\"Expected the postbind plugin to be called, was called %d times.\", postBindPlugin.numPostBindCalled)\n\t\t\t\t}"
  },
  {
    "id" : "e2fa7d9f-f3e7-429e-b992-47ea192878f8",
    "prId" : 93534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-459759180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c13fcb5d-3c40-414f-99f5-6152ee1e35a8",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "Not sure if we need some caveat here or in `PluginsRunner` interface to make it clear that this is potentially for out-of-tree plugins only.",
        "createdAt" : "2020-08-01T08:22:18Z",
        "updatedAt" : "2020-08-04T13:50:37Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "96fe4606-dc6f-4f53-94b5-1d5ada269363",
        "parentId" : "c13fcb5d-3c40-414f-99f5-6152ee1e35a8",
        "authorId" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "body" : "Thanks for the comment.  I think I don't need comments here and `PluginsRunner` because the scheduler framework is essentially for out-of-tree plugins. ",
        "createdAt" : "2020-08-03T01:22:22Z",
        "updatedAt" : "2020-08-04T13:50:37Z",
        "lastEditedBy" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "tags" : [
        ]
      },
      {
        "id" : "82bb70c4-f056-4d96-b84e-f4a7eecd3efc",
        "parentId" : "c13fcb5d-3c40-414f-99f5-6152ee1e35a8",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "okay, thanks!",
        "createdAt" : "2020-08-03T05:40:23Z",
        "updatedAt" : "2020-08-04T13:50:37Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0421fa9c3eb64b12db1cd6ae8cd353e08a09ed4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +417,421 @@\t\tnodes = append(nodes, nodeInfo.Node())\n\t}\n\tph.RunScorePlugins(ctx, state, pod, nodes)\n\n\tif pp.failPostFilter {"
  },
  {
    "id" : "a07d1546-97bf-4662-92ff-3740f0465c9b",
    "prId" : 93534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-460955224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cac8a17d-4d80-462a-a1af-104246c9347d",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I guess the current failure is due to that some in-tree Score plugins fail and hence abort the whole Scoring phase. Please check if it's the case.",
        "createdAt" : "2020-08-03T21:59:49Z",
        "updatedAt" : "2020-08-04T13:50:37Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "945683af-4141-46e7-a44c-315c7bbac298",
        "parentId" : "cac8a17d-4d80-462a-a1af-104246c9347d",
        "authorId" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "body" : "I disabled in-tree score plugins to isolate this test.",
        "createdAt" : "2020-08-04T13:51:14Z",
        "updatedAt" : "2020-08-04T13:57:51Z",
        "lastEditedBy" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "tags" : [
        ]
      },
      {
        "id" : "e649a7bb-ca1e-4c2d-8ff2-5722a014f13e",
        "parentId" : "cac8a17d-4d80-462a-a1af-104246c9347d",
        "authorId" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "body" : "https://github.com/kubernetes/kubernetes/pull/93534#discussion_r465064875",
        "createdAt" : "2020-08-04T16:01:28Z",
        "updatedAt" : "2020-08-04T16:02:08Z",
        "lastEditedBy" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0421fa9c3eb64b12db1cd6ae8cd353e08a09ed4",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +672,676 @@\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tPostFilter: &schedulerconfig.PluginSet{\n\t\t\t\t\t\tEnabled: []schedulerconfig.Plugin{\n\t\t\t\t\t\t\t{Name: postfilterPluginName},"
  },
  {
    "id" : "389bd851-2c4f-4098-883f-3567ab0264db",
    "prId" : 93534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-460348120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e138d1ca-ab95-4d90-9e89-ed1cd471717c",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nit: `if numScoreCalled := atomic.Load...; numScoreCalled < ...` (applies elsewhere)",
        "createdAt" : "2020-08-03T22:01:01Z",
        "updatedAt" : "2020-08-04T13:50:37Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0421fa9c3eb64b12db1cd6ae8cd353e08a09ed4",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +710,714 @@\t\t\t\t}\n\t\t\t\tif numScoreCalled := atomic.LoadInt32(&scorePlugin.numScoreCalled); numScoreCalled < tt.expectScoreNumCalled {\n\t\t\t\t\tt.Errorf(\"Expected the score plugin to be called at least %v times, but got %v.\", tt.expectScoreNumCalled, numScoreCalled)\n\t\t\t\t}\n\t\t\t\tif postFilterPlugin.numPostFilterCalled < tt.expectPostFilterNumCalled {"
  },
  {
    "id" : "deb52f8a-3879-4e8f-aa9a-02f7534a9702",
    "prId" : 93534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-460831215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cc39964-c1d2-4ad2-a1bb-a42bf3b7ff38",
        "parentId" : null,
        "authorId" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "body" : "as mentioned in https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-460348120\r\n> BTW: can you also update L792 to make the scoreNum is obtained atomically?\r\n\r\nSure, I updated to read `numScoreCalled` with `atomic` in `TestPostFilterPlugin`, too.",
        "createdAt" : "2020-08-04T13:52:16Z",
        "updatedAt" : "2020-08-04T13:57:51Z",
        "lastEditedBy" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0421fa9c3eb64b12db1cd6ae8cd353e08a09ed4",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +798,802 @@\t\t\t}\n\n\t\t\tif numScoreCalled := atomic.LoadInt32(&scorePlugin.numScoreCalled); numScoreCalled == 0 {\n\t\t\t\tt.Errorf(\"Expected the score plugin to be called.\")\n\t\t\t}"
  },
  {
    "id" : "77d7b93e-ec07-442d-9651-18ed38e133f6",
    "prId" : 93534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93534#pullrequestreview-460831215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab06d01b-0910-46c8-a433-64a2ef863d57",
        "parentId" : null,
        "authorId" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "body" : "ref: https://github.com/kubernetes/kubernetes/pull/93534#discussion_r464686653\r\nI introduced `numNodes` in test case. I set it to `3` here and others to `1`",
        "createdAt" : "2020-08-04T13:55:58Z",
        "updatedAt" : "2020-08-04T16:35:56Z",
        "lastEditedBy" : "60cf1937-b446-4873-9cbc-7c2ea3ae0a27",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0421fa9c3eb64b12db1cd6ae8cd353e08a09ed4",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +596,600 @@\t\t{\n\t\t\tname:                      \"Filter passed and Score success\",\n\t\t\tnumNodes:                  3,\n\t\t\trejectFilter:              false,\n\t\t\tfailScore:                 false,"
  },
  {
    "id" : "80155796-649c-40b5-8505-36c118b594b9",
    "prId" : 92514,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92514#pullrequestreview-440115767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7b68fa-1c4a-4dca-8efe-eecc4e50518f",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Shouldn't MakeNode call `Capacity(nil)` or something like that?",
        "createdAt" : "2020-06-30T15:05:29Z",
        "updatedAt" : "2020-06-30T15:18:54Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "109b622b-21c4-4ced-bc32-35d5ebbeebbe",
        "parentId" : "1d7b68fa-1c4a-4dca-8efe-eecc4e50518f",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Totally! My bad, let me fix it.",
        "createdAt" : "2020-06-30T15:09:40Z",
        "updatedAt" : "2020-06-30T15:18:54Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e1042f9593b8ae0a60674ac05eb4b533ff2c5ed",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +1843,1847 @@\n\tif nodeCount > 0 {\n\t\t_, err := createNodes(testCtx.ClientSet, \"test-node\", st.MakeNode(), nodeCount)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"Cannot create nodes: %v\", err)"
  },
  {
    "id" : "f9ad3d5d-5ae1-49d0-ba60-91333ee39b80",
    "prId" : 92391,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92391#pullrequestreview-435289904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "031303e9-f604-4cfc-b8e6-156c977416e2",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "this seems unnecessary",
        "createdAt" : "2020-06-22T19:50:29Z",
        "updatedAt" : "2020-06-26T20:41:39Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "876a1705-a34a-463d-a215-4ce3ead843e0",
        "parentId" : "031303e9-f604-4cfc-b8e6-156c977416e2",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "my intention behind that was to test that a failure in a reserve plugin that's in the middle of the list will still trigger a unreserve in ALL plugins",
        "createdAt" : "2020-06-22T20:08:56Z",
        "updatedAt" : "2020-06-26T20:41:39Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "69ca1617-000f-47f5-8c56-38ed893d0c7b",
        "parentId" : "031303e9-f604-4cfc-b8e6-156c977416e2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "got it. looks good.",
        "createdAt" : "2020-06-22T21:33:55Z",
        "updatedAt" : "2020-06-26T20:41:39Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b223b861a3f1eba214b9a609de04235ec70fe0f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1016,1020 @@\t\t\tname:             \"fail reserve\",\n\t\t\tfailReserve:      true,\n\t\t\tfailReserveIndex: 1,\n\t\t},\n\t\t{"
  },
  {
    "id" : "d47e4d1d-29ad-4d1c-815f-4440de032083",
    "prId" : 90660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90660#pullrequestreview-411459509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "032234c5-71b2-452a-a66c-2059029c3436",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Is this just to make the test faster?",
        "createdAt" : "2020-05-13T21:08:57Z",
        "updatedAt" : "2020-05-16T02:28:20Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "c3a2e8e0-e3bb-4f8b-836a-2317f618346a",
        "parentId" : "032234c5-71b2-452a-a66c-2059029c3436",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "yes, no need to spin up two nodes.",
        "createdAt" : "2020-05-14T04:39:25Z",
        "updatedAt" : "2020-05-16T02:28:20Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "133a02540fce435996a1104357e123b9f5b29093",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1395,1399 @@\n\t// Create the master and the scheduler with the test plugin set.\n\ttestCtx := initTestSchedulerForFrameworkTest(t, testutils.InitTestMaster(t, \"filter-plugin\", nil), 1,\n\t\tscheduler.WithProfiles(prof),\n\t\tscheduler.WithFrameworkOutOfTreeRegistry(registry))"
  },
  {
    "id" : "8dc650d5-fac1-429f-8746-3e03f0a2d0e5",
    "prId" : 88563,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88563#pullrequestreview-368266952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0adaf6f7-e064-4d29-b4f7-8bde26e9a7e2",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Add a TODO for making each case independent (not share a scheduler)",
        "createdAt" : "2020-03-03T19:37:18Z",
        "updatedAt" : "2020-03-04T16:45:46Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "b93e3d18e9fad69dfbf84dd8c4aebc2c0e15810e",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +1325,1329 @@\t\tpermitPlugin.waitAndAllowPermit = test.waitAllow\n\n\t\t// Create two pods. First pod to enter Permit() will wait and a second one will either\n\t\t// reject or allow first one.\n\t\tpodA, err := createPausePod(testCtx.ClientSet,"
  },
  {
    "id" : "ab9f267e-ee68-479e-86a9-84b60a9044d9",
    "prId" : 82222,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82222#pullrequestreview-521641362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2e9041e-3f86-4615-9c90-85172dd2884e",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Was this flaky before? (assuming sometimes the test would finish before the next sync)",
        "createdAt" : "2020-10-30T17:22:43Z",
        "updatedAt" : "2020-11-11T20:56:29Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "e51b054c-901a-4c48-8fe3-cdd63d156365",
        "parentId" : "f2e9041e-3f86-4615-9c90-85172dd2884e",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I think the old test case fails everytime with logic in this PR as the 2nd scheduling cycle won't be triggered.",
        "createdAt" : "2020-10-30T17:28:56Z",
        "updatedAt" : "2020-11-11T20:56:29Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "7efd7568-5322-4c6c-8a95-cdd6a2d1fbb8",
        "parentId" : "f2e9041e-3f86-4615-9c90-85172dd2884e",
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "`MoveAllToActiveOrBackoffQueue` will be called when forceing sync, so it will be triggered?",
        "createdAt" : "2020-10-31T11:12:48Z",
        "updatedAt" : "2020-11-11T20:56:29Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      },
      {
        "id" : "2649e8e4-fd86-4445-979b-d4fca139eaeb",
        "parentId" : "f2e9041e-3f86-4615-9c90-85172dd2884e",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I think it triggered the following logic in `sched.updatePodInSchedulingQueue()` to reschedule the failed pod:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/24a9d07bf810c846a79444cb4ea4adee90d4a821/pkg/scheduler/internal/queue/scheduling_queue.go#L447-L450",
        "createdAt" : "2020-10-31T19:15:20Z",
        "updatedAt" : "2020-11-11T20:56:29Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "ef2fa531-e749-4012-a20a-690be34f76d6",
        "parentId" : "f2e9041e-3f86-4615-9c90-85172dd2884e",
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "@Huang-Wei Yes, you're right. :)",
        "createdAt" : "2020-11-02T13:47:47Z",
        "updatedAt" : "2020-11-11T20:56:29Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      }
    ],
    "commit" : "af384f27ed72fc2962459ed7f57ddbf173a6b072",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1219,1223 @@\t\t\tname:               \"bind plugin fails to bind the pod\",\n\t\t\tbindPluginStatuses: []*framework.Status{framework.NewStatus(framework.Error, \"failed to bind\"), framework.NewStatus(framework.Success, \"\")},\n\t\t\texpectInvokeEvents: []pluginInvokeEvent{{pluginName: bindPlugin1.Name(), val: 1}, {pluginName: reservePlugin.Name(), val: 1}},\n\t\t},\n\t}"
  },
  {
    "id" : "c687ed41-0edb-455b-be0f-5c2106b393d7",
    "prId" : 81460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81460#pullrequestreview-275333151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bccd52d3-4068-44e3-bac1-76db948f62f2",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "good catch",
        "createdAt" : "2019-08-15T09:16:00Z",
        "updatedAt" : "2019-08-20T01:52:45Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a7439ca0847c26297f7d6120496997db520814",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +595,599 @@\t}\n\n\tif scoreWithNormalizePlugin.numScoreCalled == 0 {\n\t\tt.Errorf(\"Expected the score plugin to be called.\")\n\t}"
  },
  {
    "id" : "35e11411-92f3-45b9-978f-b04642859883",
    "prId" : 80383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80383#pullrequestreview-268695208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1f8a427-e720-4b15-ade8-741536915187",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "The test can be significantly improved if we have multiple nodes in the test and the score plugin looks at the node name or label, for example, and gives higher score to one of them. Then, the test checks that the pod is scheduled on the node which the score plugin gives a higher score to.",
        "createdAt" : "2019-07-30T00:04:26Z",
        "updatedAt" : "2019-07-31T00:02:33Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "5a274176-ce60-4a08-b527-e7a54a78859f",
        "parentId" : "a1f8a427-e720-4b15-ade8-741536915187",
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "This logic is already tested in the TestScorePlugin test case. I made the TestNormalizeScorePlugin case as simple as checking both the Score and NormalizeScore functions are called. I think this is good enough given that NormalizeScore is well tested in unit tests, and an end-to-end \"score and schedule\" behavior is covered in TestScorePlugins.\r\n\r\nWDYT?",
        "createdAt" : "2019-07-30T00:50:43Z",
        "updatedAt" : "2019-07-31T00:02:33Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "01377656-0c71-4516-aba1-9b8beb6d6b18",
        "parentId" : "a1f8a427-e720-4b15-ade8-741536915187",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "It makes sense. Thanks!",
        "createdAt" : "2019-07-30T22:07:47Z",
        "updatedAt" : "2019-07-31T00:02:33Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "34373662d3d66bf4bed60384140a5a9c473adcdc",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +603,607 @@\t}\n\n\tif scoreWithNormalizePlguin.numScoreCalled == 0 {\n\t\tt.Errorf(\"Expected the score plugin to be called.\")\n\t}"
  },
  {
    "id" : "5ac6ea57-6389-436e-94ed-d3429c1e2b98",
    "prId" : 80254,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80254#pullrequestreview-263040375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5692c370-4dac-4364-a1d3-126f144df74e",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "It tests the case: preempt works with permit plugins. If we want to verify that the permit plugin has received the rejected message from `scheduler.pereempt` and returned, we need to add a function for `WaitingPod` to retrieve the status and message, then we could verify it is from `scheduler.pereempt`. It seems not worth to add it just for this reason, so I just write a this test to test the preempt with permit plugins case.",
        "createdAt" : "2019-07-17T13:51:03Z",
        "updatedAt" : "2019-07-23T02:25:26Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      }
    ],
    "commit" : "df14adf474f2b5b1277f88f7cdacae271dd1b423",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1391,1395 @@\n// TestPreemptWithPermitPlugin tests preempt with permit plugins.\nfunc TestPreemptWithPermitPlugin(t *testing.T) {\n\t// Create a plugin registry for testing. Register only a permit plugin.\n\tregistry := framework.Registry{permitPluginName: NewPermitPlugin}"
  },
  {
    "id" : "28c84c44-c16e-4aa7-979d-c5d83034fe8f",
    "prId" : 79424,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79424#pullrequestreview-255624140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6a7e84a-a0dd-4110-a6be-cb0914a3b49f",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "nit: remove the added \"v1\". The problem is usually that the editor you are using relies on goimports rather than gofmt to do formatting.",
        "createdAt" : "2019-06-26T17:15:03Z",
        "updatedAt" : "2019-06-26T17:19:59Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "d9a8e12c-7fac-41fc-8508-dc84d55b8587",
        "parentId" : "f6a7e84a-a0dd-4110-a6be-cb0914a3b49f",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I kept asking people to remove these aliases, but now I feel it is not worth fighting the tool. goimport does this and many PRs have this king of aliasing.",
        "createdAt" : "2019-06-26T22:25:12Z",
        "updatedAt" : "2019-06-26T22:25:25Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "00f9973e-ffb2-48c8-b78d-52e2eac5ddd7",
        "parentId" : "f6a7e84a-a0dd-4110-a6be-cb0914a3b49f",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "FYI: to eliminate the `v1` in editor settings (e.g. vscode): https://groups.google.com/d/msg/kubernetes-dev/Y2ShVRrU4xM/LKfaiFqAAwAJ",
        "createdAt" : "2019-06-28T07:24:24Z",
        "updatedAt" : "2019-06-28T07:24:24Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "5e72a435-a737-436e-8e35-97829f60da58",
        "parentId" : "f6a7e84a-a0dd-4110-a6be-cb0914a3b49f",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "> FYI: to eliminate the `v1` in editor settings (e.g. vscode): https://groups.google.com/d/msg/kubernetes-dev/Y2ShVRrU4xM/LKfaiFqAAwAJ\r\n\r\nThanks for the information, but I used emacs for development, this does not work for me 😢\r\n\r\nHowever, I do find my way to solve this problem through [magit](https://magit.vc/) which could help me to commit changes by chunk, and these changes are accidentally committed. 🐱 ",
        "createdAt" : "2019-06-28T07:38:23Z",
        "updatedAt" : "2019-06-28T07:38:23Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "40090e85634d6d18453ec356e3435d1993e72e12",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@\t\"time\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime\"\n\t\"k8s.io/apimachinery/pkg/util/wait\""
  },
  {
    "id" : "982ec780-ebef-42b6-bad8-6c0fcaba2e09",
    "prId" : 79313,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79313#pullrequestreview-262130778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "We still expect these plugins to be invoked once or twice. Don't these cause similar flakes?",
        "createdAt" : "2019-07-10T18:42:04Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "fbcca2a2-0802-41fe-bf4b-f5b6f2b285d9",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "Yes, if the scheduler goroutine is too poor to get enough cpu cycles to schedule the pod twice within 30 seconds, then this test case will be failed. But I expect it will happen rarely, right?",
        "createdAt" : "2019-07-11T03:04:50Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      },
      {
        "id" : "bd3959cd-d311-441c-994b-fc7fae1d66c1",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "But In order to totally resolve the race condition, should I add a func like `initTestSchedulerWithOptions` without calling `scheduler.Run()` and export `scheduler.scheduleOne` func so that we can call it in tests?",
        "createdAt" : "2019-07-11T03:13:00Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      },
      {
        "id" : "026d704d-cf79-46fd-bba6-0580fb98bf39",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "> Yes, if the scheduler goroutine is too poor to get enough cpu cycles to schedule the pod twice within 30 seconds, then this test case will be failed. But I expect it will happen rarely, right?\r\n\r\nMy worry is the reverse of this scenario. The scheduler may retry more than a couple of times before you check. So, it could retry 3 times before the test gets a chance to check the value.\r\n\r\n> But In order to totally resolve the race condition, should I add a func like initTestSchedulerWithOptions without calling scheduler.Run() and export scheduler.scheduleOne func so that we can call it in tests?\r\n\r\nNo, let's go with checking that `numBindCalls >= numUnreserveCalls and numUnreserveCalls >= 1`.",
        "createdAt" : "2019-07-11T23:06:56Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "2ea66761-c0be-4d6d-a012-f5c464d4221d",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "This is the event checking parts I added in the second commit. If scheduler retries more than twice, it won't fail either, right?\r\n\r\n```golang\r\n\t\tfor j := range test.expectInvokeEvents {\r\n\t\t\texpectEvent := test.expectInvokeEvents[j]\r\n\t\t\tselect {\r\n\t\t\tcase event := <-pluginInvokeEventChan:\r\n\t\t\t\tif event.pluginName != expectEvent.pluginName {\r\n\t\t\t\t\tt.Errorf(\"test #%v: Expect invoke event %d from plugin %s instead of %s\", i, j, expectEvent.pluginName, event.pluginName)\r\n\t\t\t\t}\r\n\t\t\t\tif event.val != expectEvent.val {\r\n\t\t\t\t\tt.Errorf(\"test #%v: Expect val of invoke event %d to be %d instead of %d\", i, j, expectEvent.val, event.val)\r\n\t\t\t\t}\r\n\t\t\tcase <-time.After(time.Second * 30):\r\n\t\t\t\tt.Errorf(\"test #%v: Waiting for invoke event %d timeout.\", i, j)\r\n\t\t\t}\r\n\t\t}\r\n```",
        "createdAt" : "2019-07-12T01:59:17Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      },
      {
        "id" : "7188675d-7839-4d27-9f83-ece6f0140fb7",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "In the last test, isn't `expecptInvokeEvents[3].val` is 2? This is the number of times we expect the `unreserve` plugin to be called. If it is called more than 2 times, won't it cause `if event.val != expectEvent.val` to be triggered? Am I missing something?",
        "createdAt" : "2019-07-12T22:24:33Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "216005b0-67c7-49dc-9bf0-462aca4c71cb",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "No, it won't. `expecptInvokeEvents[3].val` is the snapshot value of `numUnreserveCalled` when scheduler calls `unreserve` plugin. It is not an int pointer to `numUnreserveCalled`.",
        "createdAt" : "2019-07-15T15:33:05Z",
        "updatedAt" : "2019-07-15T15:38:52Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      },
      {
        "id" : "f5379f21-73f5-449f-bf06-c4209416a5fa",
        "parentId" : "7a00ecc0-dbe9-4b61-8746-68733d7530a5",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Thanks for explaining. I was aware of the fact that the code was sending those `numUnreserveCalled` to a channel and compared them; what I missed was the fact that your code ignores additional values in the channel. So, if the `unreserve` plugins is called 5 times, you only care about the first two invocations that you have specified in `expectInvokeEvents`.\r\n\r\nThis is fine for this test that we expect the plugins to be called \"at least\" a certain number of times. This wouldn't work in other tests where a fixed number of invocations is expected.\r\n",
        "createdAt" : "2019-07-15T23:56:00Z",
        "updatedAt" : "2019-07-15T23:56:00Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e04f03d3cbd0c255c407a8da0faaa9c9ec22b1cc",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +770,774 @@\t\t{\n\t\t\tbindPluginStatuses: []*framework.Status{framework.NewStatus(framework.Error, \"failed to bind\"), framework.NewStatus(framework.Success, \"\")},\n\t\t\texpectInvokeEvents: []pluginInvokeEvent{{pluginName: bindPlugin1.Name(), val: 1}, {pluginName: unreservePlugin.Name(), val: 1}, {pluginName: bindPlugin1.Name(), val: 2}, {pluginName: unreservePlugin.Name(), val: 2}},\n\t\t},\n\t}"
  },
  {
    "id" : "3db4f213-1bd6-4732-af7a-b536a8f3d6ef",
    "prId" : 79109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79109#pullrequestreview-256098479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0649cbc-4a1b-4163-9e3f-4a6926ad4aee",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "add a reset method to `ScorePlugin` to reset the state of itself.",
        "createdAt" : "2019-07-01T00:20:55Z",
        "updatedAt" : "2019-07-16T14:25:03Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a80425bd23282ecf37e01d35d901aecdb9704964",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +129,133 @@\treturn score, nil\n}\n\n// NewScorePlugin is the factory for score plugin.\nfunc NewScorePlugin(_ *runtime.Unknown, _ framework.FrameworkHandle) (framework.Plugin, error) {"
  },
  {
    "id" : "4c247af8-6c75-4772-9feb-79ec5c16aa34",
    "prId" : 79109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79109#pullrequestreview-256098479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa3212ff-b8f3-45e7-862b-060435069838",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "and call `plugin.reset` here.",
        "createdAt" : "2019-07-01T00:21:37Z",
        "updatedAt" : "2019-07-16T14:25:03Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a80425bd23282ecf37e01d35d901aecdb9704964",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +504,508 @@\t\t\tt.Errorf(\"Expected the reserve plugin to be called.\")\n\t\t}\n\n\t\tscPlugin.reset()\n\t\tcleanupPods(cs, t, []*v1.Pod{pod})"
  },
  {
    "id" : "24f1164d-eb2a-41cc-88a6-8eec4a8bb2d0",
    "prId" : 78513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78513#pullrequestreview-266453121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b4367cc-3bd0-4374-88b4-fbcde8e02af6",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Not related to this PR, but we should make providing a pluginConfig for plugins optional so that something like this is not necessary if one does not need to pass any args to plugins.",
        "createdAt" : "2019-06-19T23:34:35Z",
        "updatedAt" : "2019-06-20T07:57:03Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "684c8d49-8268-4130-b829-e56d50f8dd43",
        "parentId" : "2b4367cc-3bd0-4374-88b4-fbcde8e02af6",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "Agreed.",
        "createdAt" : "2019-06-20T09:22:49Z",
        "updatedAt" : "2019-06-20T09:22:49Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      },
      {
        "id" : "bc2681dd-5ee8-41b5-9cc8-de7b0caccaa3",
        "parentId" : "2b4367cc-3bd0-4374-88b4-fbcde8e02af6",
        "authorId" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "body" : "Actually plugin config can be nil. I opened https://github.com/kubernetes/kubernetes/pull/80567 to clean up the verbose code.",
        "createdAt" : "2019-07-25T07:49:03Z",
        "updatedAt" : "2019-07-25T07:49:03Z",
        "lastEditedBy" : "38428f84-e217-4cb8-8916-cc4e674102d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b339c0a8bf75ff246440fbd84a3cf93b1f4418bd",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +667,671 @@\t}\n\t// Set reserve and bind config for testing\n\tpluginConfig := []schedulerconfig.PluginConfig{\n\t\t{\n\t\t\tName: unreservePluginName,"
  },
  {
    "id" : "1888886c-2fa8-4843-adbb-ae38a32d1650",
    "prId" : 78513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78513#pullrequestreview-253097567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2bfae70-f00d-4340-805e-d5e2500249c6",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "It seems this test is flaky:\r\n\r\nhttps://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/79294/pull-kubernetes-integration/1142430172373323779/",
        "createdAt" : "2019-06-22T14:30:57Z",
        "updatedAt" : "2019-06-22T14:30:57Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "f07d201e-fe50-49f9-b7e1-1109929b5528",
        "parentId" : "b2bfae70-f00d-4340-805e-d5e2500249c6",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Met the same problem in https://github.com/kubernetes/kubernetes/pull/78513/files",
        "createdAt" : "2019-06-22T14:47:49Z",
        "updatedAt" : "2019-06-22T14:47:49Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b339c0a8bf75ff246440fbd84a3cf93b1f4418bd",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +638,642 @@}\n\n// TestBindPlugin tests invocation of bind plugins.\nfunc TestBindPlugin(t *testing.T) {\n\ttestContext := initTestMaster(t, \"bind-plugin\", nil)"
  },
  {
    "id" : "127e2d14-5a82-4278-823b-139fb31cbbef",
    "prId" : 78477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78477#pullrequestreview-255008642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d3c808-8205-46c2-813b-09a85cd62caa",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Please add a reset method for FilterPlugin and call it after each test. You could follow the pattern in the current master branch.",
        "createdAt" : "2019-06-27T05:13:13Z",
        "updatedAt" : "2019-07-17T07:31:13Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f9dd949e01189709b7ec7955204e04378aa64cb",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +166,170 @@\treturn nil\n}\n\n// NewFilterPlugin is the factory for filtler plugin.\nfunc NewFilterPlugin(_ *runtime.Unknown, _ framework.FrameworkHandle) (framework.Plugin, error) {"
  },
  {
    "id" : "81c74628-98a6-4886-bd2d-c38a1f099379",
    "prId" : 78477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78477#pullrequestreview-255022372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3af456d7-7488-41b0-97d8-6a1b5235c6fc",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "call `filterPlugin.reset` here",
        "createdAt" : "2019-06-27T05:13:37Z",
        "updatedAt" : "2019-07-17T07:31:13Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "5976cd19-e728-4a6c-9d31-d1ab9c0043db",
        "parentId" : "3af456d7-7488-41b0-97d8-6a1b5235c6fc",
        "authorId" : "ba6240e3-678e-479a-b2f3-a1b796de7259",
        "body" : "I will take a look and follow the pattern.",
        "createdAt" : "2019-06-27T06:11:59Z",
        "updatedAt" : "2019-07-17T07:31:13Z",
        "lastEditedBy" : "ba6240e3-678e-479a-b2f3-a1b796de7259",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f9dd949e01189709b7ec7955204e04378aa64cb",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +1376,1380 @@\t\t\tt.Errorf(\"Expected the filter plugin to be called.\")\n\t\t}\n\n\t\tfilterPlugin.reset()\n\t\tcleanupPods(cs, t, []*v1.Pod{pod})"
  },
  {
    "id" : "6eb8b8ac-692f-43ed-91f7-c375d984cdc6",
    "prId" : 77567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77567#pullrequestreview-235875754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54a21ba8-2db9-420c-bb5c-20cce43470dd",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "As I said above, a post-bind plugin does not return a value. A good test should check that a post-bind plugin is called one time when a pod is successfully bound and is not called when a pod fails to bind.\r\nIn order to write such test, one option is to register a pre-bind and a post-bind plugin. In order to simulate binding failure, you can make the pre-bind plugin return failure. Then you check that the post-bind plugin is not called.\r\nIn a different case, you check that the post-bind plugin is called once when pre-bind passes.",
        "createdAt" : "2019-05-09T22:17:22Z",
        "updatedAt" : "2019-05-19T10:12:36Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "2a44bc9f-90f8-40c3-b78c-0e94f9cd5448",
        "parentId" : "54a21ba8-2db9-420c-bb5c-20cce43470dd",
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "DONE",
        "createdAt" : "2019-05-09T23:55:47Z",
        "updatedAt" : "2019-05-19T10:12:36Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "20f9c9940e6e2ceec22443affdeecaa06b2b5b33",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +490,494 @@\n// TestPostbindPlugin tests invocation of postbind plugins.\nfunc TestPostbindPlugin(t *testing.T) {\n\t// Create a plugin registry for testing. Register a prebind and a postbind plugin.\n\tregistry := framework.Registry{"
  }
]