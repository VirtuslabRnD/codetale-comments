[
  {
    "id" : "fb8f0e9b-6b10-4687-8f1e-0561c3631a54",
    "prId" : 101352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101352#pullrequestreview-645090181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0870d789-90e1-498a-b589-d8a4c48f21fd",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "We should also cover the case of mis-matching namespace selector.",
        "createdAt" : "2021-04-26T19:58:02Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "a155e633-da86-47b0-b9e3-5e7c779e458c",
        "parentId" : "0870d789-90e1-498a-b589-d8a4c48f21fd",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "+1",
        "createdAt" : "2021-04-26T20:21:01Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "c7557877-4adb-4ff9-8c10-4b2ecc438250",
        "parentId" : "0870d789-90e1-498a-b589-d8a4c48f21fd",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "also tests with `CrossNamespaceAffinity`?",
        "createdAt" : "2021-04-26T20:27:39Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "e30f3934-3894-4010-947c-da1f8e1a6e52",
        "parentId" : "0870d789-90e1-498a-b589-d8a4c48f21fd",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "done.",
        "createdAt" : "2021-04-26T20:30:02Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "be7ceed7-6ae0-466f-9f8e-9a22db3e35ba",
        "parentId" : "0870d789-90e1-498a-b589-d8a4c48f21fd",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "CrossNamespaceAffinity is covered in its own e2e test set.",
        "createdAt" : "2021-04-26T20:31:39Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebf0bca3ce28819ef32f03f327b391be25921aba",
    "line" : 386,
    "diffHunk" : "@@ -1,1 +1016,1020 @@\t\t\tfits: false,\n\t\t},\n\t}\n\n\tfor _, test := range tests {"
  },
  {
    "id" : "0e6fe50c-c78d-41f1-8441-4b8515980edb",
    "prId" : 101352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101352#pullrequestreview-645178940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b27cb52f-6978-4730-9a62-1395dc495239",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "IMO name the variable as \"test.enabled\" is more intuitional.",
        "createdAt" : "2021-04-26T22:30:42Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "a0a7b1bc-3935-4038-8c96-3501dc0473f0",
        "parentId" : "b27cb52f-6978-4730-9a62-1395dc495239",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "It is more about the default value, which I wanted it to mean that the feature is enabled.",
        "createdAt" : "2021-04-26T22:57:49Z",
        "updatedAt" : "2021-04-27T18:13:39Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebf0bca3ce28819ef32f03f327b391be25921aba",
    "line" : 390,
    "diffHunk" : "@@ -1,1 +1020,1024 @@\tfor _, test := range tests {\n\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.PodAffinityNamespaceSelector, !test.disabled)()\n\t\t\ttestCtx := initTest(t, \"\")\n\t\t\tdefer testutils.CleanupTest(t, testCtx)"
  },
  {
    "id" : "79dc0f5e-ca2c-4f0f-98b9-f260fb4a451f",
    "prId" : 101352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101352#pullrequestreview-646400946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8e38663-b4ee-437d-a52b-3846700cc0e1",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "As we've moved the test with namespaceSelector as a separate test, we can revert the logic to use default namespace as it was.",
        "createdAt" : "2021-04-27T18:55:17Z",
        "updatedAt" : "2021-04-27T18:57:34Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "ed379fe0-41c4-4853-8863-fbc58c11821f",
        "parentId" : "e8e38663-b4ee-437d-a52b-3846700cc0e1",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "We need those changes because the feature is now beta and the plugin makes a namespace look up for the incoming pod namespace. It will work without it as we assume empty label set by default, but that will cause the following error message: https://github.com/kubernetes/kubernetes/blob/21ab9c417562223bfe3329830788bc05ee29fb3f/pkg/scheduler/framework/plugins/interpodaffinity/plugin.go#L137",
        "createdAt" : "2021-04-27T19:07:53Z",
        "updatedAt" : "2021-04-27T19:07:54Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "86fe9a8a-bc4e-4f90-b14b-eefb51558504",
        "parentId" : "e8e38663-b4ee-437d-a52b-3846700cc0e1",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Ah, framework.CreateTestingNamespace() doesn't really create a namesapce object:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/9a67558784354c09487a980f1dac8ca76cd1ce90/test/integration/framework/util.go#L49\r\n\r\nHere we need to create namespaces explicitly via API.\r\n",
        "createdAt" : "2021-04-27T22:08:44Z",
        "updatedAt" : "2021-04-27T22:08:44Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebf0bca3ce28819ef32f03f327b391be25921aba",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +62,66 @@\t\tt.Fatal(err)\n\t}\n\tdefaultNS := \"ns1\"\n\n\ttests := []struct {"
  },
  {
    "id" : "b66424c2-9f53-4b82-b454-d0a6d8cd6324",
    "prId" : 92074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92074#pullrequestreview-431605518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb9c7faf-96b1-4234-b30d-f25e7e096d8f",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Cannot we just initialize the node with the labels?",
        "createdAt" : "2020-06-12T19:33:03Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "5d1672ca-ac02-4ee7-8a70-311b6751a569",
        "parentId" : "bb9c7faf-96b1-4234-b30d-f25e7e096d8f",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "I was replicating the same logic in this other test: https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler/predicates_test.go#L47-L58.\r\n\r\nI could not find a test utility to create nodes with labels, do you know if there is any? If not I am not sure it's worth to add, but what do you think?",
        "createdAt" : "2020-06-13T14:58:18Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "627f6154-d4e0-4d7e-8b12-68dc2702e90f",
        "parentId" : "bb9c7faf-96b1-4234-b30d-f25e7e096d8f",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Sigh... we should really be cleaning existing mistakes, otherwise, other developers will copy them over and over.\r\n\r\nFor now, please leave a TODO here, as well as https://github.com/kubernetes/kubernetes/blob/master/test/integration/scheduler/predicates_test.go#L47-L58. A good and consistent way to craft nodes/pods is to use pkg/scheduler/testing/wrapper.go - but it's a big item.",
        "createdAt" : "2020-06-15T19:29:18Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "f41f0f75-64a8-40de-8f2f-c7de34119db3",
        "parentId" : "bb9c7faf-96b1-4234-b30d-f25e7e096d8f",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "Will do, I am happy to work on the cleanup after this PR.",
        "createdAt" : "2020-06-16T15:08:27Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c23caf8e7d845a463c448e70de5efcbdac2d257",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1119,1123 @@\t\t\t\tif err := utils.AddLabelsToNode(cs, node.Name, map[string]string{\"region\": \"test\"}); err != nil {\n\t\t\t\t\treturn fmt.Errorf(\"cannot add labels to node: %v\", err)\n\t\t\t\t}\n\t\t\t\treturn nil\n\t\t\t},"
  },
  {
    "id" : "187c5511-c688-442a-8d24-a041b6078a9e",
    "prId" : 92074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92074#pullrequestreview-431716987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26a94671-8254-403c-82f9-50fad3b0ef70",
        "parentId" : null,
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "@Huang-Wei @alculquicondor I have added this test as discussed above.\r\n\r\nI could not find an easy way to update the pod. So I decided to use `getPod` and update the labels. An alternative would be to use `PodWrapper`, but it felt a bit weird to repeat all the pod fields again.\r\n\r\nWDYT?",
        "createdAt" : "2020-06-16T16:09:32Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "9a5bd743-c71a-4138-b2eb-5424551d1571",
        "parentId" : "26a94671-8254-403c-82f9-50fad3b0ef70",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Fetching it from API server looks good to me.",
        "createdAt" : "2020-06-16T17:05:47Z",
        "updatedAt" : "2020-06-16T18:40:11Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c23caf8e7d845a463c448e70de5efcbdac2d257",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +1192,1196 @@\t\t\t\t}\n\t\t\t\tpod.Labels = map[string]string{\"pod-with-affinity\": \"true\"}\n\t\t\t\tif _, err := cs.CoreV1().Pods(pod.Namespace).Update(context.TODO(), pod, metav1.UpdateOptions{}); err != nil {\n\t\t\t\t\treturn fmt.Errorf(\"cannot update pod: %v\", err)\n\t\t\t\t}"
  },
  {
    "id" : "4ec55359-7925-44ef-b824-99dcd3e5d662",
    "prId" : 91336,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91336#pullrequestreview-416373646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c7d1799-8066-4568-a13a-35468b115a74",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "can #91111 be closed after this PR?",
        "createdAt" : "2020-05-21T17:32:46Z",
        "updatedAt" : "2020-05-25T20:00:13Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f35dc0cc-3ba3-488a-ba8d-f0fa28bcf5a8",
        "parentId" : "0c7d1799-8066-4568-a13a-35468b115a74",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "No, we need more coverage",
        "createdAt" : "2020-05-21T17:34:22Z",
        "updatedAt" : "2020-05-25T20:00:13Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a52c0010-2d0c-416a-9931-acce097cb67b",
        "parentId" : "0c7d1799-8066-4568-a13a-35468b115a74",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "no really, we may add more tests.",
        "createdAt" : "2020-05-21T18:23:15Z",
        "updatedAt" : "2020-05-25T20:00:13Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a39a2c24edbe670878cdb0def2838c3240dccc7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1083,1087 @@\t\t\t},\n\t\t},\n\t\t// TODO(#91111): Add more test cases.\n\t}\n\tfor _, tt := range tests {"
  },
  {
    "id" : "1ffdb1a5-8197-403d-b0ed-7a51aa11ddb3",
    "prId" : 91336,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91336#pullrequestreview-418723851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86f9c5c5-78a5-4b9f-b981-4f001df370ff",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Can't we remove this TODO?\r\nOr do we need to add more tests?",
        "createdAt" : "2020-05-26T21:38:47Z",
        "updatedAt" : "2020-05-26T21:40:11Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "82061d49-c796-498c-86be-69896f3c9a82",
        "parentId" : "86f9c5c5-78a5-4b9f-b981-4f001df370ff",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Yes. And this was already answered 😅 ",
        "createdAt" : "2020-05-26T22:21:06Z",
        "updatedAt" : "2020-05-26T22:21:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "378c47b4-09e3-47ed-abdf-39c4a1cf10de",
        "parentId" : "86f9c5c5-78a5-4b9f-b981-4f001df370ff",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Oh, sorry for missing that.",
        "createdAt" : "2020-05-26T22:32:03Z",
        "updatedAt" : "2020-05-26T22:32:04Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a39a2c24edbe670878cdb0def2838c3240dccc7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1083,1087 @@\t\t\t},\n\t\t},\n\t\t// TODO(#91111): Add more test cases.\n\t}\n\tfor _, tt := range tests {"
  },
  {
    "id" : "f25b900b-c5d7-4770-b2e4-9c7df06a9f7d",
    "prId" : 80011,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80011#pullrequestreview-269780879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e4de11c-4f75-4c25-b113-91a36b57a53e",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Both node 0 and 1 are labeled \"zone 0\", so why does only node-1 fit?",
        "createdAt" : "2019-07-29T22:23:04Z",
        "updatedAt" : "2019-08-01T17:42:45Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "13020452-ce14-4b25-893f-44c6adf0c1a1",
        "parentId" : "3e4de11c-4f75-4c25-b113-91a36b57a53e",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Because node 0 has one pod already (L1001).",
        "createdAt" : "2019-08-01T07:42:55Z",
        "updatedAt" : "2019-08-01T17:42:45Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "de90a57d-f539-481d-bcb9-764d2b0692d1",
        "parentId" : "3e4de11c-4f75-4c25-b113-91a36b57a53e",
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Thanks for explaining it to me.",
        "createdAt" : "2019-08-01T17:51:23Z",
        "updatedAt" : "2019-08-01T17:51:23Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "caab8b74ba4bfd065248592ebb4174bb20a70be2",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +993,997 @@\t\t},\n\t\t{\n\t\t\tname: \"pod is required to be placed on zone0, so only node-1 fits\",\n\t\t\tincomingPod: st.MakePod().Namespace(ns).Name(\"p\").Label(\"foo\", \"\").Container(pause).\n\t\t\t\tNodeAffinityIn(\"zone\", []string{\"zone-0\"})."
  },
  {
    "id" : "4178868b-b073-4e51-b789-9801f1128201",
    "prId" : 48934,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48934#pullrequestreview-52140201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf76ff49-5836-4edf-9980-c9442c5bb686",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "optional: I leave it up to you to change this or not:\r\nSince the code runs pause pods, you could have used \"runPausePod\" of util.go and provide a pausePodConfig in the tests. That way the code would of the test would have been smaller a bit more clear.",
        "createdAt" : "2017-07-24T01:05:03Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "237291c0-e5f7-44a3-aec2-69c2ddee6bd9",
        "parentId" : "cf76ff49-5836-4edf-9980-c9442c5bb686",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "@bsalamat, i did think of using that during initial patch and then reason i decided not to use \"runPausePod\" is because one of the test case involves pod creation failure, please refer L843. I could have used \"runPausePod\" for existing pods but then for the sake of consistency and clarity, thought of skipping to use it. Also using complete pod objects might be clearer than using pausePodConfig.\r\nThinking on above lines, i opted for not using runPausePod.\r\n ",
        "createdAt" : "2017-07-25T09:23:30Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "a16337bb-d73f-410c-af88-8281b5618447",
        "parentId" : "cf76ff49-5836-4edf-9980-c9442c5bb686",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "That's fine.",
        "createdAt" : "2017-07-25T17:38:38Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "189129c71ddce495e3080642b80f22d7dc17b96e",
    "line" : 826,
    "diffHunk" : "@@ -1,1 +824,828 @@\t\t\tif err != nil {\n\t\t\t\tt.Errorf(\"Test Failed: error, %v, while waiting for pod during test, %v\", err, test)\n\t\t\t}\n\t\t}\n\t\ttestPod, err := cs.Core().Pods(context.ns.Name).Create(test.pod)"
  },
  {
    "id" : "5bf2cb5f-593a-4cd1-98b4-b30ad0835639",
    "prId" : 48934,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48934#pullrequestreview-52140201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bb1fd4e-c9c9-4428-8587-94960f49e5ca",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "PodAffinity does not match the existing pod labels in this case. I am not sure how it is different from a simpler non-matching case.",
        "createdAt" : "2017-07-24T02:35:42Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "c0add1b8-dd4a-42c1-883b-0cb255083b32",
        "parentId" : "8bb1fd4e-c9c9-4428-8587-94960f49e5ca",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "@bsalamat This test additionally verifies that scheduler is not matching, incorrectly, requested pod affinity with the self labels.  ",
        "createdAt" : "2017-07-25T08:57:42Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "aba75deb-8450-4065-a6d3-5b407ea7ff6a",
        "parentId" : "8bb1fd4e-c9c9-4428-8587-94960f49e5ca",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I see.",
        "createdAt" : "2017-07-25T17:37:05Z",
        "updatedAt" : "2017-07-27T03:25:27Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "189129c71ddce495e3080642b80f22d7dc17b96e",
    "line" : 694,
    "diffHunk" : "@@ -1,1 +692,696 @@\t\t\tnode: nodes[0],\n\t\t\tfits: false,\n\t\t\ttest: \"pod matches its own Label in PodAffinity and that matches the existing pod Labels\",\n\t\t},\n\t\t{"
  }
]