[
  {
    "id" : "426d903a-d502-4a0f-9c4e-5fd4b385afea",
    "prId" : 93394,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93394#pullrequestreview-481057611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46ba6f7a-1024-4646-aef6-329124bed8ab",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "What's the purpose of this outer `t.Run`? It doesn't change the control of parallelism.",
        "createdAt" : "2020-09-02T17:10:26Z",
        "updatedAt" : "2020-09-02T17:10:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "49de4c0e-1a92-49e0-94fa-9a0c7d4f2052",
        "parentId" : "46ba6f7a-1024-4646-aef6-329124bed8ab",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it ensures the outer teardown code doesn't run until all the subtests are complete:\r\n\r\nSee https://golang.org/pkg/testing/#hdr-Subtests_and_Sub_benchmarks\r\n\r\n> Run does not return until parallel subtests have completed, providing a way to clean up after a group of parallel tests:\r\n> \r\n> ```\r\n> func TestTeardownParallel(t *testing.T) {\r\n>     // This Run will not return until the parallel tests finish.\r\n>     t.Run(\"group\", func(t *testing.T) {\r\n>         t.Run(\"Test1\", parallelTest1)\r\n>         t.Run(\"Test2\", parallelTest2)\r\n>         t.Run(\"Test3\", parallelTest3)\r\n>     })\r\n>     // <tear-down code>\r\n> }\r\n> ```",
        "createdAt" : "2020-09-02T17:17:42Z",
        "updatedAt" : "2020-09-02T17:17:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "34c111b8-e442-498a-9a51-0c78366f78d0",
        "parentId" : "46ba6f7a-1024-4646-aef6-329124bed8ab",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Got it. I found https://github.com/golang/go/issues/17791 explaining the ordering better than the doc.",
        "createdAt" : "2020-09-02T17:37:00Z",
        "updatedAt" : "2020-09-02T17:37:01Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c778008420028b738f2ff8dd9c9b3c0e21e3ad1b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +205,209 @@\t}\n\n\tt.Run(\"group\", func(t *testing.T) {\n\t\tfor _, tmptc := range tt {\n\t\t\ttc := tmptc // we need to copy it for parallel runs"
  }
]