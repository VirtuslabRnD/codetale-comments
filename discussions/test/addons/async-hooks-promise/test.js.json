[
  {
    "id" : "34e37436-d5cb-4aec-bfb0-f03100c6783c",
    "prId" : 13585,
    "prUrl" : "https://github.com/nodejs/node/pull/13585#pullrequestreview-43294721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46e21dfd-f26f-43f2-9036-79ebb32ac1f0",
        "parentId" : null,
        "authorId" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "body" : "Oh, interesting. Is this something we should fix? With for example\r\n\r\n```c++\r\nif (env->async_hooks()->fields()[AsyncHooks::kTotals])\r\n  return;\r\n```",
        "createdAt" : "2017-06-10T10:07:12Z",
        "updatedAt" : "2017-06-16T17:28:18Z",
        "lastEditedBy" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "tags" : [
        ]
      },
      {
        "id" : "bbd994bd-1092-40a2-8ab7-4e32142e30be",
        "parentId" : "46e21dfd-f26f-43f2-9036-79ebb32ac1f0",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "We can’t because we *need* the `pop_ids()` call to happen, so we need the `PromiseHook` working until at least the `kAfter` occurs.\r\n\r\nThis shouldn’t be a problem, it’s just emitting events for nobody to witness.",
        "createdAt" : "2017-06-10T10:09:01Z",
        "updatedAt" : "2017-06-16T17:28:18Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      }
    ],
    "commit" : "af1a551965ac990e91fa5924d95e99450a6f0814",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +40,44 @@// a bit because the `disable()` call only schedules disabling the hook in a\n// future microtask.\nsetImmediate(() => {\n  assert.strictEqual(\n    binding.getPromiseField(Promise.resolve(1)),"
  }
]