[
  {
    "id" : "34e37436-d5cb-4aec-bfb0-f03100c6783c",
    "prId" : 13585,
    "prUrl" : "https://github.com/nodejs/node/pull/13585#pullrequestreview-43294721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46e21dfd-f26f-43f2-9036-79ebb32ac1f0",
        "parentId" : null,
        "authorId" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "body" : "Oh, interesting. Is this something we should fix? With for example\r\n\r\n```c++\r\nif (env->async_hooks()->fields()[AsyncHooks::kTotals])\r\n  return;\r\n```",
        "createdAt" : "2017-06-10T10:07:12Z",
        "updatedAt" : "2017-06-16T17:28:18Z",
        "lastEditedBy" : "07d067f8-a546-476c-a323-f0ae8fdb5357",
        "tags" : [
        ]
      },
      {
        "id" : "bbd994bd-1092-40a2-8ab7-4e32142e30be",
        "parentId" : "46e21dfd-f26f-43f2-9036-79ebb32ac1f0",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "We can’t because we *need* the `pop_ids()` call to happen, so we need the `PromiseHook` working until at least the `kAfter` occurs.\r\n\r\nThis shouldn’t be a problem, it’s just emitting events for nobody to witness.",
        "createdAt" : "2017-06-10T10:09:01Z",
        "updatedAt" : "2017-06-16T17:28:18Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      }
    ],
    "commit" : "af1a551965ac990e91fa5924d95e99450a6f0814",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +40,44 @@// a bit because the `disable()` call only schedules disabling the hook in a\n// future microtask.\nsetImmediate(() => {\n  assert.strictEqual(\n    binding.getPromiseField(Promise.resolve(1)),"
  },
  {
    "id" : "72f16633-daec-49db-b1fa-88749f5b565e",
    "prId" : 14208,
    "prUrl" : "https://github.com/nodejs/node/pull/14208#pullrequestreview-65369363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3abea84-e80e-4c77-a96d-1f2cf4a1994c",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "What are the tradeoffs of this VS doing `delete process.env.NODE_TEST_WITH_ASYNC_HOOKS` before L3",
        "createdAt" : "2017-09-15T22:34:53Z",
        "updatedAt" : "2017-09-27T10:24:06Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "e8733c54-d147-4249-84ce-9c5f813a4f68",
        "parentId" : "d3abea84-e80e-4c77-a96d-1f2cf4a1994c",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "Not sure what you mean. Mind clarifying?",
        "createdAt" : "2017-09-21T07:06:25Z",
        "updatedAt" : "2017-09-27T10:24:06Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "f154b4c4-45d6-4e3f-b729-4ea032c43b79",
        "parentId" : "d3abea84-e80e-4c77-a96d-1f2cf4a1994c",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "If we delete `NODE_TEST_WITH_ASYNC_HOOKS` before the L3 (`const common = require('../../common');`) it will not run the hooking logic of the harness https://github.com/nodejs/node/blob/b2865ba8a3330f763e8a3833a82bef24660de916/test/common/index.js#L64-L65\r\n\r\nWill that make this testable?",
        "createdAt" : "2017-09-21T13:23:48Z",
        "updatedAt" : "2017-09-27T10:24:06Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "1444e3cb-4aba-4185-ab7a-10abccdc2d68",
        "parentId" : "d3abea84-e80e-4c77-a96d-1f2cf4a1994c",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "while the possibility does exist, we depend on env vars existing for other things that could also be deleted. So I'm not going to worry about it.",
        "createdAt" : "2017-09-26T21:32:59Z",
        "updatedAt" : "2017-09-27T10:24:06Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b9b46cd55835b33382dacb86f614cbcdc5f7b98",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +6,10 @@const binding = require(`./build/${common.buildType}/binding`);\n\nif (process.env.NODE_TEST_WITH_ASYNC_HOOKS) {\n  common.skip('cannot test with env var NODE_TEST_WITH_ASYNC_HOOKS');\n  return;"
  }
]