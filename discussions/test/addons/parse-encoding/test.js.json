[
  {
    "id" : "5777f523-7665-4403-93f4-9706ce774da3",
    "prId" : 36952,
    "prUrl" : "https://github.com/nodejs/node/pull/36952#pullrequestreview-569963080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "I think you also need to add this to `ENCODING_MAP` in the `.cc` file here :)",
        "createdAt" : "2021-01-16T19:11:00Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "f677904d-df48-42ba-9f2f-6336ae9c8abb",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "body" : "I did now, locally. But i need to rebuild them somehow :) before i waste ci time i'd like to get local pass",
        "createdAt" : "2021-01-16T19:11:55Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "tags" : [
        ]
      },
      {
        "id" : "178f668c-f18f-4d7f-b048-a1eefdb41f26",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "`../../../deps/npm/node_modules/node-gyp/bin/node-gyp.js --nodedir=../../.. rebuild`, from the directory of the test (yes, I have that saved as an alias :yum:)",
        "createdAt" : "2021-01-16T19:16:20Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "78483ce2-ba16-4eb1-b799-bf52f7b9235c",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "body" : "See, i did that and it still fails. In CI too :(",
        "createdAt" : "2021-01-16T19:28:50Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "tags" : [
        ]
      },
      {
        "id" : "c0056e12-4328-4e38-9d83-ea9669c513c1",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "body" : "possibly src/api/encoding.cc?",
        "createdAt" : "2021-01-16T19:31:32Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "tags" : [
        ]
      },
      {
        "id" : "a2002c0b-5637-4d2b-b7ed-3b262ec80f59",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "@panva Was just about to say that :) Yes, that parser also needs to be updated here, it seems",
        "createdAt" : "2021-01-16T19:32:22Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "e28a9c8b-2174-4315-bfe9-6dd998263c7c",
        "parentId" : "9b283664-d97c-498a-b60f-fefdf4a85272",
        "authorId" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "body" : "I'm certain about the second part of [the diff](https://github.com/nodejs/node/compare/047efc92cfae77157c67991532356656e4eb84ce..dcbd9264c14711e2705a47bd2cb38f0e5bbc6880), not so much about the first one - do you see a better way to optimize the distinction between `se64` and `se64url`?",
        "createdAt" : "2021-01-16T19:42:02Z",
        "updatedAt" : "2021-01-18T11:08:35Z",
        "lastEditedBy" : "8e7555c6-0372-413d-8cc8-423c9a941d65",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8ab632d56ea15c78b1dc5db1624109a2bf7b69b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +9,13 @@assert.strictEqual(parseEncoding('ascii'), 'ASCII');\nassert.strictEqual(parseEncoding('base64'), 'BASE64');\nassert.strictEqual(parseEncoding('base64url'), 'BASE64URL');\nassert.strictEqual(parseEncoding('binary'), 'LATIN1');\nassert.strictEqual(parseEncoding('buffer'), 'BUFFER');"
  }
]