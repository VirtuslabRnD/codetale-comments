[
  {
    "id" : "826bda98-fa6b-4104-8cd2-28a14d649fbf",
    "prId" : 1791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ac51662-574b-4725-9594-eff2272e0cad",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Maybe as an extra check delete HOME / USERPROFILE from the env and check that `os.homedir()` still returns something.\n",
        "createdAt" : "2015-05-25T16:09:49Z",
        "updatedAt" : "2015-06-06T02:58:28Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "f008aa18-9e2b-4aa0-93c3-f97d00b2bd18",
        "parentId" : "5ac51662-574b-4725-9594-eff2272e0cad",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "@bnoordhuis updated based on your feedback. I added a check that modifies the existing environment. I also added a new test that spawns a child process without the appropriate environment variables.\n",
        "createdAt" : "2015-05-25T17:48:36Z",
        "updatedAt" : "2015-06-06T02:58:28Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e78e5feaa5a40888f1c49418f9c2c396838baa5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@  assert.ok(os.homedir().indexOf(path.sep) !== -1);\n  process.env.HOME = home;\n}"
  },
  {
    "id" : "3d5389ad-f73e-44ff-a049-b337f68e0dea",
    "prId" : 14307,
    "prUrl" : "https://github.com/nodejs/node/pull/14307#pullrequestreview-54547796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "parentId" : null,
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "Also add some tests for non-byte-aligned subnet masks, e.g. `255.255.224.0` -> `19` and `ffff:ffff:ffff:ff80::` -> `57`.",
        "createdAt" : "2017-07-16T20:36:29Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      },
      {
        "id" : "03c736c3-288e-40cf-bba7-2b6f8ef4043a",
        "parentId" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "authorId" : "95276dec-412f-4def-b3c6-a321d1873217",
        "body" : "This is hard as I rely on the output of `networkInterfaces` method and that gets data from the `os` binding. So, I don't really know where I can inject some mock data with a custom non-aligned `netmask` and have the js land `networkInterfaces` method consume that. Any ideas?",
        "createdAt" : "2017-07-16T22:12:29Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "95276dec-412f-4def-b3c6-a321d1873217",
        "tags" : [
        ]
      },
      {
        "id" : "942dd6c6-c38b-4841-9726-68cb541a780d",
        "parentId" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "Hmm, you could potential define the parsing method in a [internal](https://github.com/nodejs/node/tree/master/lib/internal) `os` module and test that separately.",
        "createdAt" : "2017-07-16T22:19:23Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      },
      {
        "id" : "71207279-f203-43b5-b112-399ebae831ba",
        "parentId" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "authorId" : "95276dec-412f-4def-b3c6-a321d1873217",
        "body" : "@silverwind ~So I moved the code out but requiring `internal/os` fails with a module not found. Do I need to register it somewhere?~ Found this registry `node.gyp`.\r\n\r\nSecondly, where do tests for internal modules go? I see the`test` folder in `lib/internal` only has tests for `unicode`.\r\n",
        "createdAt" : "2017-07-16T23:19:26Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "95276dec-412f-4def-b3c6-a321d1873217",
        "tags" : [
        ]
      },
      {
        "id" : "1e8f5a15-7bb6-4454-af6c-a85dd8e40923",
        "parentId" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "authorId" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "body" : "@zeusdeux In `test`, just like everything else. You would need to specify a `// Flags: --expose-internals` to make the testing harness expose internal modules for testing though.",
        "createdAt" : "2017-07-16T23:44:37Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "tags" : [
        ]
      },
      {
        "id" : "8c1bc32c-61ed-442f-b049-0da0eac517a5",
        "parentId" : "cee14ce3-4ee1-4b53-a8c1-6dab5123e9b9",
        "authorId" : "95276dec-412f-4def-b3c6-a321d1873217",
        "body" : "Moved the CIDR logic to `internal/os` and added tests for it @silverwind @TimothyGu.",
        "createdAt" : "2017-08-07T00:18:14Z",
        "updatedAt" : "2017-08-14T19:43:58Z",
        "lastEditedBy" : "95276dec-412f-4def-b3c6-a321d1873217",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a6b678070f5e2ba0f0200a1a4b9a31dd0b60dac",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +148,152 @@  '255.255.255.0': 24,\n  'ffff:ffff:ffff:ffff::': 64,\n  'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff': 128\n}));\nflatten(Object.values(interfaces))"
  }
]