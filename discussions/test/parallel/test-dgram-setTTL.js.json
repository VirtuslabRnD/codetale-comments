[
  {
    "id" : "ed071955-b5e3-41c5-9bca-6cba7d06104b",
    "prId" : 2121,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1f1bdc5-7855-4fc6-891c-91bbed431e5c",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Since the entire test is in the callback, we can wrap it with `common.mustCall`. It will make sure that the test fails if the callback is not invoked. \n",
        "createdAt" : "2015-07-07T21:51:16Z",
        "updatedAt" : "2015-07-10T04:27:10Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "00ced149-12ec-4a83-b0e0-475afe725f87",
        "parentId" : "c1f1bdc5-7855-4fc6-891c-91bbed431e5c",
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "I don't believe it would make a difference if the callback is not invoked, since the bind will keep the process alive (or throw if it fails). I believe `common.mustCall` is called in the `exit` event, which wouldn't happen either if the callback isn't called.\n",
        "createdAt" : "2015-07-08T00:32:19Z",
        "updatedAt" : "2015-07-10T04:27:10Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      }
    ],
    "commit" : "842eb5b853e00a1f48ff11600a6f2165435c570e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@\nsocket.bind(common.PORT);\nsocket.on('listening', function() {\n  var result = socket.setTTL(16);\n  assert.strictEqual(result, 16);"
  }
]