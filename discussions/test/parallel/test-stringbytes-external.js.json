[
  {
    "id" : "4f1d41c3-6e03-4a9f-a727-e362cefe2412",
    "prId" : 3005,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9416d1f0-435e-495c-83d2-446af41d66da",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Can't we slice this off the `Buffer` allocated in the `try..catch` above?\n",
        "createdAt" : "2015-09-22T23:25:11Z",
        "updatedAt" : "2015-10-06T17:07:10Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "71d35b0b-f3be-4cca-b296-22ebab2958df",
        "parentId" : "9416d1f0-435e-495c-83d2-446af41d66da",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "That would work. my worry is that we allocate 256MB more than needed above, and if we hang on to that then the tests that turn these into strings will need to increase the heap by an additional 256MB. Hence why over allocating in the check above is a small way to ensure the heap has enough space for the `toString()` calls below.\n",
        "createdAt" : "2015-09-23T10:10:32Z",
        "updatedAt" : "2015-10-06T17:07:10Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d66749eca48eea7cbc3b0cd4b0ddf968224d2fb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +123,127 @@  }\n\n  const buf0 = new Buffer(kStringMaxLength * 2 + 2);\n  const buf1 = buf0.slice(0, kStringMaxLength + 1);\n  const buf2 = buf0.slice(0, kStringMaxLength);"
  }
]