[
  {
    "id" : "c9f3bf86-4a03-473a-ba75-1d788da47094",
    "prId" : 8923,
    "prUrl" : "https://github.com/nodejs/node/pull/8923#pullrequestreview-3090862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da47468d-c83c-4e7a-9a82-cb8a23d82448",
        "parentId" : null,
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "Nit: it doesn't add any real value but what about using a template literal?\n",
        "createdAt" : "2016-10-06T08:12:46Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "9177a261-fc29-4a2f-83a8-dd24f8b6f328",
        "parentId" : "da47468d-c83c-4e7a-9a82-cb8a23d82448",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I initially had that but I felt it was less readable than concatenation.  Consider:\n\n``` js\nyield 'bad' + String.fromCharCode(i) + 'path';\n```\n\nVs.\n\n``` js\nyield `bad${String.fromCharCode(i)}path`;\n```\n",
        "createdAt" : "2016-10-06T11:07:36Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "9467eb34-7147-4f3f-8839-9c34203d68b7",
        "parentId" : "da47468d-c83c-4e7a-9a82-cb8a23d82448",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "Yeah no big deal.\n",
        "createdAt" : "2016-10-06T11:16:26Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f62acd9c5e6f7d65605dda0ebdcf60e9e848311",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +6,10 @@function* bad() {\n  for (let i = 0; i <= 32; i += 1)\n    yield 'bad' + String.fromCharCode(i) + 'path';\n}\n"
  }
]