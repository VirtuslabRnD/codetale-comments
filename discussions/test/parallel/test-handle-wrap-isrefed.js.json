[
  {
    "id" : "180921c4-77cd-400b-b15c-00d5631937c4",
    "prId" : 5834,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "parentId" : null,
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "This depends on some non-obvious implementation details. If the timer is unref'd then the JS object will be moved to a `TimerWrap` that also isn't ref'd, correct?\n",
        "createdAt" : "2016-03-22T20:04:39Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "6a70538a-1af0-4b37-a922-0ce481510b6c",
        "parentId" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "See https://github.com/nodejs/node/blob/d3a75344f5d7580181e35394e052a1c13f0e1261/lib/timers.js#L460-L485\n\n`timer.unref()` assigns a `._handle` for that specific timer, and is unlikely to change in the short term.\n",
        "createdAt" : "2016-03-22T21:56:20Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "5d8975fe-3ee8-441f-a76b-27066286e80e",
        "parentId" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "I realize that. What I failed to say is that a note of this should be placed in `timer_wrap.cc` where the method is added so future generations can immediately see why this non-obvious implementation detail actually works.\n",
        "createdAt" : "2016-03-23T05:53:39Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "9107a5eb-8a3b-4645-88e5-5de9d7f54e14",
        "parentId" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Where exactly do you mean? Isn't the same thing for the `un(ref)` methods on timer_wrap?\n",
        "createdAt" : "2016-03-30T17:04:02Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "652162ec-15ba-4354-a9fc-b89890f7de81",
        "parentId" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "My point is it may be non-obvious why `setTimeout(()=>{}, 100)._handle === undefined` but `setTimeout(()=>{}, 100).unref()._handle` links to a `Timer` instance. So using `isRefed()` is conditional to the state of timer. So not having a uniform way to access that data from the public object instance could be confusing.\n",
        "createdAt" : "2016-03-31T20:30:42Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "eb4c3820-949b-4c0a-a374-3006a4380791",
        "parentId" : "4bd46657-6479-4a06-8671-7ec9d2543f1c",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Sure, but the regular timers implementation will also benefit from this. e.g. https://github.com/nodejs/node/blob/cf949293ba55e5d8193e26623c6e9201b14cd819/lib/timers.js#L210-L214\n\nSo I'm not sure what I would say in handle_wrap\n",
        "createdAt" : "2016-03-31T20:41:27Z",
        "updatedAt" : "2016-04-07T16:44:38Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d8882ba9a8cfc8f0e2126deb3f3df7456de0ffa",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@  timer.ref();\n  assert(timer._handle.isRefed(), true);\n  timer.unref();\n}"
  }
]