[
  {
    "id" : "9942b181-feb5-4e07-851a-157a0eef848b",
    "prId" : 1256,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e501fd8c-d608-4593-aa57-283c1d8cb145",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "@sjrd: any other test you'd like here?\n",
        "createdAt" : "2016-05-17T20:08:29Z",
        "updatedAt" : "2016-05-19T14:55:29Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "41ebb50b-614f-41b0-ae0f-bc1a400349b3",
        "parentId" : "e501fd8c-d608-4593-aa57-283c1d8cb145",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Well you should _also_ have `Array.ofDim[Int](2)`.\nAlso the more \"primitive\" form `new Array[Int](2)` should give the same.\n\nIdeally you should also test with other element types. A typical selection is `Int`, `Unit` and `String`, because this set exploits the 3 main implementation strategies (primitive, special-case of `Unit`, and reference type).\n",
        "createdAt" : "2016-05-17T20:25:03Z",
        "updatedAt" : "2016-05-19T14:55:29Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "b31c165e-aa02-4bf2-a631-efeea0ed6741",
        "parentId" : "e501fd8c-d608-4593-aa57-283c1d8cb145",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Great, thanks. I'll have it in by tomorrow morning... Sleepytime\n",
        "createdAt" : "2016-05-17T20:26:57Z",
        "updatedAt" : "2016-05-19T14:55:29Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "772f3d20fd3605d077abf28e80195f1dda343ee1",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@             instructionsFromMethod(method).mkString(\"\\n\"))\n    }\n  }\n\n  @Test def arraysFromOfDim = {"
  }
]