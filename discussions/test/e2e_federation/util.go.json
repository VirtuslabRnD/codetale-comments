[
  {
    "id" : "be234d03-f134-4061-a5ea-78533dc00a6b",
    "prId" : 61055,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61055#pullrequestreview-103179547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c09a21fa-6b2f-4591-b116-de204ee5266f",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "One more additional change comparing to the original commit. Assuming federation test does not run in regional upgrade test.",
        "createdAt" : "2018-03-12T19:01:21Z",
        "updatedAt" : "2018-03-12T19:01:21Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "0a30475a-5c2c-4acc-bce4-f172f995df56",
        "parentId" : "c09a21fa-6b2f-4591-b116-de204ee5266f",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "> Assuming federation test does not run in regional upgrade test.\r\n\r\nOh never mind, in federation test `zone` is derived from cluster name. So we are good here.",
        "createdAt" : "2018-03-12T19:03:48Z",
        "updatedAt" : "2018-03-12T19:03:48Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "e20dd5e5de8df77d7a4edc76658461e7d9d3eeab",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +327,331 @@\t\t\tserviceLBName := cloudprovider.GetLoadBalancerName(cSvc)\n\t\t\tframework.Logf(\"cleaning cloud provider resource for service %q in namespace %q, in cluster %q\", service.Name, namespace, name)\n\t\t\tframework.CleanupServiceResources(c.Clientset, serviceLBName, \"\", zone)\n\t\t}\n"
  },
  {
    "id" : "9c5a1c17-03bf-4d41-bd79-93c5140d8480",
    "prId" : 45186,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45186#pullrequestreview-40460268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c9688c9-b7ad-4d46-bc9f-d1c230ac4fb3",
        "parentId" : null,
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "why deleteService in just one cluster, when you are calling `cleanupServiceShardsAndProviderResources` 4 lines below which does cleanup all cluster services.",
        "createdAt" : "2017-05-26T01:15:40Z",
        "updatedAt" : "2017-08-08T19:34:25Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "da7ddd5c-cde4-4585-9588-6a811f62bad1",
        "parentId" : "7c9688c9-b7ad-4d46-bc9f-d1c230ac4fb3",
        "authorId" : "19cd4b7b-4b6a-422f-82be-b4226c1c728a",
        "body" : "I was thinking that the `clientset` is the client to target the Federation-API-server, and so not one of the federated cluster. \r\nThat why I wanted first to delete the Service at federation level. then iterate on all the federated clusters.",
        "createdAt" : "2017-05-26T07:27:04Z",
        "updatedAt" : "2017-08-08T19:34:25Z",
        "lastEditedBy" : "19cd4b7b-4b6a-422f-82be-b4226c1c728a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e033d8c6a0f2861ca09590cd8dbaeac2e00d504c",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +182,186 @@\t\t// in case of error, cleanup everything\n\t\tif service != nil {\n\t\t\tif err = deleteService(clientset, namespace, name, nil); err != nil {\n\t\t\t\tframework.ExpectNoError(err, \"Deleting service %q after a partial createService() error\", service.Name)\n\t\t\t\treturn nil, err"
  }
]