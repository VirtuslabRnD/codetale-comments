[
  {
    "id" : "d2bbd634-0ac1-467d-9251-ecf329d480b3",
    "prId" : 59416,
    "prUrl" : "https://github.com/ansible/ansible/pull/59416#pullrequestreview-265642265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97790f1a-6730-4062-9400-dd689232330e",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I guess I don't fully understand what the `code` arg is for, why is this in PascalCase where most of the others is in snake_code?",
        "createdAt" : "2019-07-23T04:30:16Z",
        "updatedAt" : "2019-07-23T04:31:59Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "b48d823c-4c9b-404a-b24d-9819d9eb3e76",
        "parentId" : "97790f1a-6730-4062-9400-dd689232330e",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "When ansible-test runs sanity tests, it checks the skip and ignore files for issues. If there are any to report, and the sanity test uses error codes, then ansible-test needs its own error code to report those errors. I chose to make the error codes ansible-test uses match the style of error code used by the sanity test for which the errors will be reported.",
        "createdAt" : "2019-07-23T05:05:38Z",
        "updatedAt" : "2019-07-23T05:05:38Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "195c4108-b17a-489e-95af-70492721ce86",
        "parentId" : "97790f1a-6730-4062-9400-dd689232330e",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "This is briefly documented here: https://github.com/ansible/ansible/pull/59416/files#diff-74e3bc5c7fd66da8e877cdb786849182R462",
        "createdAt" : "2019-07-23T05:08:45Z",
        "updatedAt" : "2019-07-23T05:08:46Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "e8d9ee9c-6b0e-46bf-bb65-0fb6e8a3707a",
        "parentId" : "97790f1a-6730-4062-9400-dd689232330e",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Just sounds somewhat arbitrary, from what I can see it's only in the actual error message. Just thinking that it should be the same for all or based on the test name to save passing another arg that is just used for reporting. I see it's just placed before the actual sanity issue like;\r\n\r\n```\r\n# from https://app.shippable.com/github/ansible/ansible/runs/133262/1/tests\r\ntest/sanity/pslint/ignore.txt:104:1: AnsibleTest Duplicate code 'PSAvoidUsingEmptyCatchBlock' for path 'lib/ansible/modules/windows/win_find.ps1' first found on line 101\r\n```\r\n\r\nI can see in this case it matches the `PSAvoidUsingEmptyCatchBlock` but considering it's placed before the actual sanity issue (`Duplicate code...`) it sounds like it should be based on the sanity test name. Even so when collections merge this into the 1 file wouldn't any test that accesses the file also produce a similar error that may or may not be related to it?",
        "createdAt" : "2019-07-23T07:23:15Z",
        "updatedAt" : "2019-07-23T07:23:15Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "68b74f1a-cc98-4ab2-a0ad-6454b2eaf967",
        "parentId" : "97790f1a-6730-4062-9400-dd689232330e",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Yes, the codes themselves are arbitrary. Although they're only for display purposes, I expect them to be included in documentation for the sanity tests at some point.\r\n\r\nThe argument cannot be removed since we need to know if the test uses codes or not when parsing the ignores. It could be made into a bool instead, if we didn't want to customize the code for each test.\r\n\r\nI chose to match the style of codes used in each test so that results were more visually consistent within a given test. Here are some examples:\r\n\r\n###### pylint\r\n```\r\nERROR: lib/ansible/modules/system/ping.py:14:0: bare-except No exception type(s) specified\r\nERROR: test/sanity/pylint/ignore.txt:2:1: ansible-test Ignoring 'blacklisted-name' on 'lib/ansible/modules/system/ping.py' is unnecessary\r\n```\r\n\r\n###### pep8\r\n```\r\nERROR: lib/ansible/modules/system/ping.py:14:1: E722 do not use bare 'except'\r\nERROR: test/sanity/pep8/skip.txt:4:1: A100 File 'does/not/exist.py' does not exist\r\n```\r\n\r\nIf we can come up with code(s) that are more clear than the current implementation in the PR, I'm fine switching to something else. I just figured that having test results with mixed codes like \"E772\" and \"ansible-test\" would look a bit strange, particularly if they end up in tables or other columnar output.\r\n\r\nAs for the error handling when everything is combined into a single file, there will be a new sanity test that reports issues with the file itself, so some of the messages will move to that test. That will avoid issues with unrelated errors. However, there will always be sanity test specific messages from ansible-test that will appear within individual test results.",
        "createdAt" : "2019-07-23T19:58:23Z",
        "updatedAt" : "2019-07-23T19:58:23Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ec65ef8dbd4263912ad4014766d4bbfac039be8",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +42,46 @@        :rtype: TestResult\n        \"\"\"\n        settings = self.load_settings(args, 'AnsibleTest')\n\n        paths = sorted(i.path for i in targets.include if os.path.splitext(i.path)[1] in ('.ps1', '.psm1', '.psd1'))"
  }
]