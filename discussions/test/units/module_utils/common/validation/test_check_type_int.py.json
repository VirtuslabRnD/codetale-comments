[
  {
    "id" : "b0150701-8048-4791-b466-b50e47ad9ed4",
    "prId" : 60328,
    "prUrl" : "https://github.com/ansible/ansible/pull/60328#pullrequestreview-273372166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "caefc6f1-740e-429b-8faf-75457e9f3b71",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Just a note, we probably should migrate these checks to use ```pytest.raises(TypeError, match='cannot be converted to an int')```  I had been hesitant to use that because I remembered having issues with it.  Turns out that it was a different parameter, ```message``` which should never be used.  (pytest has deprecated message because the same issue affected many people https://docs.pytest.org/en/latest/reference.html#pytest-raises )\r\n\r\nI recommend it when looking at this code because I notice that we're doing ```to_native(e)``` as if e was an exception object here.   It's actually a pytest container that holds the actual exception inside of it.  Getting the str representation of the pytest container seems to return the string representation of the exception for now but it's not documented in pytest so it might not work in the future.",
        "createdAt" : "2019-08-09T21:39:57Z",
        "updatedAt" : "2019-08-09T21:39:57Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "413ff4db-2fd5-4b3d-9211-e5682037a0dd",
        "parentId" : "caefc6f1-740e-429b-8faf-75457e9f3b71",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "heh :-)  I see that you found this out here: https://github.com/ansible/ansible/pull/60246 ;-)",
        "createdAt" : "2019-08-09T21:42:49Z",
        "updatedAt" : "2019-08-09T21:42:49Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "797bf4a84c9e222296c0b9846c61b5b8ff24d787",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@        with pytest.raises(TypeError) as e:\n            check_type_int(case)\n        assert 'cannot be converted to an int' in to_native(e)"
  }
]