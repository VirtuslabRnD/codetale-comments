[
  {
    "id" : "393f782a-a9ed-444d-a825-1ce8b758b8a0",
    "prId" : 16704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e8d893e-e609-4433-b0d5-bdcdc3ca5edb",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "For the cases where I've wanted to use a nose test generator, I've ended up just making the test class inherit from object. You lose the TestCase methods (various self.assert*) but usually test generators methods have pretty simple assertions so not too much of a issue. To me it is simpler than injecting the support into a TestCase subclass.\n\n(an example is https://github.com/alikins/ansible/blob/6e8a3d0c25fdeaa349351c6636b062376c30b0a6/test/units/plugins/lookup/test_ini.py)\n",
        "createdAt" : "2016-07-14T17:44:05Z",
        "updatedAt" : "2016-07-14T17:44:17Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c462667e4eb9e9122e2ac031ce4172a0bd5f5191",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +76,80 @@@add_method(_check_invalid_strings, *[[i[0][0:-1]] for i in INVALID_STRINGS])\n@add_method(_check_invalid_strings_with_exceptions, *INVALID_STRINGS)\nclass TestSafeEval(ModuleTestCase):\n\n    def setUp(self):"
  }
]