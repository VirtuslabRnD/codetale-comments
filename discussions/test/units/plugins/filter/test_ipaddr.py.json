[
  {
    "id" : "2a728664-4d91-4ce3-a034-6dbd3f687873",
    "prId" : 40670,
    "prUrl" : "https://github.com/ansible/ansible/pull/40670#pullrequestreview-146038150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "499f6124-2af4-4b8a-a912-1231bfeeaf50",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I'd also add some test cases with assertRaises",
        "createdAt" : "2018-08-14T11:48:48Z",
        "updatedAt" : "2018-08-14T15:20:30Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "81e2ba3e-e474-4130-afd4-f8fc3c323622",
        "parentId" : "499f6124-2af4-4b8a-a912-1231bfeeaf50",
        "authorId" : "f86ee9a5-cc71-417e-ad7a-fce4aafbaf0d",
        "body" : "I think \r\n```\r\nvtype = ipaddr(query, 'type')\r\n        if vtype == 'address':\r\n            v = ipaddr(query, 'cidr')\r\n        elif vtype == 'network':\r\n            v = ipaddr(query, 'subnet')\r\n        else:\r\n            return False\r\n```\r\nCan't raise error on : \r\n```\r\nquery = netaddr.IPNetwork(v)\r\nfor i, subnet in enumerate(query.subnet(value.prefixlen), 1)\r\n```",
        "createdAt" : "2018-08-14T12:21:57Z",
        "updatedAt" : "2018-08-14T15:20:30Z",
        "lastEditedBy" : "f86ee9a5-cc71-417e-ad7a-fce4aafbaf0d",
        "tags" : [
        ]
      },
      {
        "id" : "5b0e74c7-dd49-4d32-b73c-93552c2db9a4",
        "parentId" : "499f6124-2af4-4b8a-a912-1231bfeeaf50",
        "authorId" : "f86ee9a5-cc71-417e-ad7a-fce4aafbaf0d",
        "body" : "i don't find the case",
        "createdAt" : "2018-08-14T12:22:53Z",
        "updatedAt" : "2018-08-14T15:20:30Z",
        "lastEditedBy" : "f86ee9a5-cc71-417e-ad7a-fce4aafbaf0d",
        "tags" : [
        ]
      },
      {
        "id" : "2b1b1253-b67e-4e8a-ba20-899ab774db24",
        "parentId" : "499f6124-2af4-4b8a-a912-1231bfeeaf50",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "You could `mock.patch` it to do so :)",
        "createdAt" : "2018-08-14T12:26:21Z",
        "updatedAt" : "2018-08-14T15:20:30Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "3f6f2b49-9937-4f0e-82ce-6b95dba46d9a",
        "parentId" : "499f6124-2af4-4b8a-a912-1231bfeeaf50",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Also, look out for netaddr docs for the cases when it'll raise the exception.",
        "createdAt" : "2018-08-14T12:27:51Z",
        "updatedAt" : "2018-08-14T15:20:30Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8f4872c9bd2aaa4fe1735b7fee0e964c97f47d1",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +537,541 @@\n    def _test_ipsubnet(self, ipsubnet_args, expected_result):\n        self.assertEqual(ipsubnet(*ipsubnet_args), expected_result)\n\n        with self.assertRaisesRegexp(AnsibleFilterError, 'You must pass a valid subnet or IP address; invalid_subnet is invalid'):"
  }
]