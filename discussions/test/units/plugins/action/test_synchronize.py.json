[
  {
    "id" : "4db79716-3c1b-417e-a387-620fadf57290",
    "prId" : 18535,
    "prUrl" : "https://github.com/ansible/ansible/pull/18535#pullrequestreview-11258017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f44c767-51e9-4bc9-8f81-a4abd7075c8f",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Is this change needed?  It doesn't seem wrong, necessarily... I'm just wondering whether it is necessary and if so if there's something that should be refactored at a later date.",
        "createdAt" : "2016-12-02T20:44:52Z",
        "updatedAt" : "2016-12-09T21:48:02Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "87d15b85-8642-47a4-979e-0b4701bfac42",
        "parentId" : "8f44c767-51e9-4bc9-8f81-a4abd7075c8f",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Oh I see... this is a fake _execute_module() in the test case.  It's capturing information about how it was called.\r\n\r\nSo I think the way to adjust the test cases is to set ```self.final_module_args = module_args``` in this function and then adjust all of the assertions to use self.final_module_args instead of self.task._tmp_args.",
        "createdAt" : "2016-12-02T20:50:42Z",
        "updatedAt" : "2016-12-09T21:48:02Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "3cbb8926-5a3c-420c-86b5-0c4bc24fadc4",
        "parentId" : "8f44c767-51e9-4bc9-8f81-a4abd7075c8f",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not sure if the test should modify the function signature ... we can end up with test code that would never work with the real thing ... which makes me question the tests.",
        "createdAt" : "2016-12-02T21:16:10Z",
        "updatedAt" : "2016-12-09T21:48:02Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "3269088e-c01a-4743-b373-f55ea74249de",
        "parentId" : "8f44c767-51e9-4bc9-8f81-a4abd7075c8f",
        "authorId" : "79babf9c-d05e-407b-a4f4-a98fc652111c",
        "body" : "_execute_module has a signature of:\r\n\r\n```lib/ansible/plugins/action/__init__.py:    def _execute_module(self, module_name=None, module_args=None, tmp=None, task_vars=None, persist_files=False, delete_remote_tmp=True):```\r\n\r\nThe tests already use an incomplete function signature that is being updated to accept the explicit module_args rather than the implicit args via the task object.\r\n\r\nI can update to make the tmp args function local and check against the args passed into this function, but any issue with the tests was preexisting.",
        "createdAt" : "2016-12-02T21:33:06Z",
        "updatedAt" : "2016-12-09T21:48:02Z",
        "lastEditedBy" : "79babf9c-d05e-407b-a4f4-a98fc652111c",
        "tags" : [
        ]
      },
      {
        "id" : "43f139e3-e12d-41f7-a79b-d249bc68d6d9",
        "parentId" : "8f44c767-51e9-4bc9-8f81-a4abd7075c8f",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Agreed with @cboylan here.  This is the pre-existing way that the test code works.  If we want to change it to have a more complete signature we should probably do that as a separate change.",
        "createdAt" : "2016-12-02T23:17:05Z",
        "updatedAt" : "2016-12-09T21:48:02Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d012a7a459de2912949705e6c9bec7c3df3c952",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +100,104 @@\n\n    def _execute_module(self, module_name, module_args=None, task_vars=None):\n        self.execute_called = True\n        self.final_module_args = module_args"
  },
  {
    "id" : "dda2682b-028f-462c-90ff-5f841f524f1a",
    "prId" : 40833,
    "prUrl" : "https://github.com/ansible/ansible/pull/40833#pullrequestreview-124536576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff36b953-6467-4939-8d50-24100b8009a3",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Looks like it works fine, but the `side_effect=BreakPoint` here seems superfluous. Am I missing something?",
        "createdAt" : "2018-05-30T18:25:44Z",
        "updatedAt" : "2018-05-30T18:25:44Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "b59dfc1a-1cfd-4f92-a39f-0cbfead06e6c",
        "parentId" : "ff36b953-6467-4939-8d50-24100b8009a3",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "... or is that just to get it to bail out on that call?",
        "createdAt" : "2018-05-30T18:27:41Z",
        "updatedAt" : "2018-05-30T18:27:41Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "663b4625-a2ee-4892-a7f5-cbd5c66e57dc",
        "parentId" : "ff36b953-6467-4939-8d50-24100b8009a3",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I'm short circuiting the execution of `run` by setting a `side_effect` on a function call that will actually connect to the server to expand the path.  Otherwise it will try and go further, actually executing the module.\r\n\r\nThis allows me to kill execution immediately after what we are wanting to inspect.",
        "createdAt" : "2018-05-30T18:28:38Z",
        "updatedAt" : "2018-05-30T18:28:38Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "d62fb4c7-3b7e-479b-b55c-4ff4ea6f3662",
        "parentId" : "ff36b953-6467-4939-8d50-24100b8009a3",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "> ... or is that just to get it to bail out on that call?\r\n\r\nExactly that.",
        "createdAt" : "2018-05-30T18:29:37Z",
        "updatedAt" : "2018-05-30T18:29:37Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "0ad82f33-a5ce-4b64-91de-ef3a1a2603ca",
        "parentId" : "ff36b953-6467-4939-8d50-24100b8009a3",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Cool",
        "createdAt" : "2018-05-30T18:33:08Z",
        "updatedAt" : "2018-05-30T18:33:08Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "f78b4e3012457c83df54498834379ecf7550b190",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +252,256 @@        x.runtest(fixturepath=os.path.join(self.fixturedir, 'delegate_remote_su'))\n\n    @patch.object(ActionModule, '_low_level_execute_command', side_effect=BreakPoint)\n    @patch.object(ActionModule, '_remote_expand_user', side_effect=ActionModule._remote_expand_user, autospec=True)\n    def test_remote_user_not_in_local_tmpdir(self, spy_remote_expand_user, ll_ec):"
  }
]