[
  {
    "id" : "52409184-4900-4ea9-a2ae-610e3ef51009",
    "prId" : 30728,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c972b40-f4a1-47a7-85ba-a0bb2fae3d0e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This function is called in [getArchive](https://github.com/Random-Liu/kubernetes/blob/1c5bd5540e0dd3aa9f8215a943cf66f01e8da39a/test/e2e_node/runner/run_e2e.go#L254), which is called [here](https://github.com/Random-Liu/kubernetes/blob/1c5bd5540e0dd3aa9f8215a943cf66f01e8da39a/test/e2e_node/runner/run_e2e.go#L207) and the caller doesn't check the error at all. Would this cause any problem?\n",
        "createdAt" : "2016-08-17T01:25:26Z",
        "updatedAt" : "2016-08-17T01:25:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "2ff54698-a98f-4ccf-a85b-d3757f5e00d5",
        "parentId" : "4c972b40-f4a1-47a7-85ba-a0bb2fae3d0e",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The following getArchive will check the error.\n",
        "createdAt" : "2016-08-17T01:26:54Z",
        "updatedAt" : "2016-08-17T01:26:54Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "88276d2b-9d07-46a2-b912-be0d3ce7eb81",
        "parentId" : "4c972b40-f4a1-47a7-85ba-a0bb2fae3d0e",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The first `getArchive` is only used to trigger the build, and the following calls are used to get build result. And the following ones will check the error.\n\nThat's my understanding, :P\n",
        "createdAt" : "2016-08-17T01:27:54Z",
        "updatedAt" : "2016-08-17T01:28:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "9757e079-9298-4b94-8c8a-4cf0183ece9a",
        "parentId" : "4c972b40-f4a1-47a7-85ba-a0bb2fae3d0e",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Uh...this is not very straightforward, but seems ok for now.\n",
        "createdAt" : "2016-08-17T01:31:02Z",
        "updatedAt" : "2016-08-17T01:31:02Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "eaf4c762-5ce9-4081-84db-bb79f0009295",
        "parentId" : "4c972b40-f4a1-47a7-85ba-a0bb2fae3d0e",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah. It is confusing...\n",
        "createdAt" : "2016-08-17T01:37:24Z",
        "updatedAt" : "2016-08-17T01:37:25Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5bd5540e0dd3aa9f8215a943cf66f01e8da39a",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +81,85 @@// CreateTestArchive builds the local source and creates a tar archive e2e_node_test.tar.gz containing\n// the binaries k8s required for node e2e tests\nfunc CreateTestArchive() (string, error) {\n\t// Build the executables\n\tif err := buildGo(); err != nil {"
  },
  {
    "id" : "8881518f-123b-4016-ae96-034ba0f31cdd",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dbf7c57-b036-46be-b5dd-67649bdccae5",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "What about other types of errors? Don't you always want to fail?\n",
        "createdAt" : "2016-02-22T21:38:54Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "bdbdf404-129a-4192-bda5-03f9ae65c988",
        "parentId" : "5dbf7c57-b036-46be-b5dd-67649bdccae5",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Done\n",
        "createdAt" : "2016-02-22T23:21:54Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +77,81 @@\tkubelet := filepath.Join(buildOutputDir, \"kubelet\")\n\tif _, err := os.Stat(kubelet); err != nil {\n\t\tglog.Fatalf(\"Failed to locate binary %s\", kubelet)\n\t}\n\tapiserver := filepath.Join(buildOutputDir, \"kube-apiserver\")"
  },
  {
    "id" : "9f7e526a-53bb-4b2c-a627-98b304533c9a",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bd8e0e1-d4de-4910-a8e9-6614611881a5",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Can you use `getApiserverBin` here?\n",
        "createdAt" : "2016-02-22T21:41:02Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "3f6386c3-1451-4aa3-8cfd-78a92c260995",
        "parentId" : "7bd8e0e1-d4de-4910-a8e9-6614611881a5",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "I could, but then it would use the k8sBinDir if specified, which would be weird since it wouldn't be using the binary it had just built.  Thoughts?\n",
        "createdAt" : "2016-02-22T23:27:07Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\tglog.Fatalf(\"Failed to locate binary %s\", kubelet)\n\t}\n\tapiserver := filepath.Join(buildOutputDir, \"kube-apiserver\")\n\tif _, err := os.Stat(apiserver); err != nil {\n\t\tglog.Fatalf(\"Failed to locate binary %s\", apiserver)"
  },
  {
    "id" : "0e3bc06a-7ca7-42f9-bad1-721aad360b84",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea2d40fb-2a37-4893-9b2c-6c363addf624",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Can you just use `os.Link`?\n",
        "createdAt" : "2016-02-22T21:43:29Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "2a030e24-8a98-48bd-81b1-d2209f202c47",
        "parentId" : "ea2d40fb-2a37-4893-9b2c-6c363addf624",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "No.  :(  You can't link across devices.  This failed when I tried it on gce.  Frustrating that go doesn't have a built in command to copy files.\n",
        "createdAt" : "2016-02-22T23:29:00Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\n\t// Copy binaries\n\tout, err = exec.Command(\"cp\", ginkgoTest, filepath.Join(tardir, \"e2e_node.test\")).CombinedOutput()\n\tif err != nil {\n\t\tglog.Fatalf(\"Failed to copy e2e_node.test %v.\", err)"
  },
  {
    "id" : "73c3a9bb-4fbc-4685-9533-b4520d21b885",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0de932cc-b182-4076-abda-550f143dc79c",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "scary! Maybe check whether the directory exists before creating it, and fail if it does?\n",
        "createdAt" : "2016-02-22T21:46:20Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "f17aae26-eadd-4610-bade-38211369ca0c",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "This is just deleting the temporary directory it created to reclaim the disk space from the copied binaries and runtime files (not all of /tmp).\n\nThis is how the cadvisor tests clean up after themselves.\nhttps://github.com/google/cadvisor/blob/master/integration/runner/runner.go#L97\n\nIs your concern that we may deleted the wrong directory by accident e.g. (all of root)?  This command isn't run as sudo, so hopefully it can't do something too catastrophic.\n",
        "createdAt" : "2016-02-22T23:35:00Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "1b1b2218-3cff-4d3f-8fa3-a7b2204e4f9e",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "The mkdir should fail if the directory exists causing an error to be returned.\n",
        "createdAt" : "2016-02-23T01:17:54Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "caa0184e-b248-4f60-92df-d312cc2a92c0",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I don't think that's true with the -p argument (at least not on my local machine)\n",
        "createdAt" : "2016-02-23T01:38:33Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "003e6a06-03eb-4582-9b7e-92d348e0536c",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "You are right, the -p option does cause mkdir to return success if the directory already exists.  Since we expect /tmp to already exist, would it be sufficient to remove the \"- p\" argument?\n",
        "createdAt" : "2016-02-23T03:58:31Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "21898885-20c1-4bf5-971a-c288554cb60c",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Is your primary concern with the deletion or the creation of the directory?  When we switch to running tests against images and provisioning instances this should be less of a concern.\n",
        "createdAt" : "2016-02-23T04:13:48Z",
        "updatedAt" : "2016-02-23T04:13:48Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "b872a467-c1e0-4bd1-b80a-5bc36f54900c",
        "parentId" : "0de932cc-b182-4076-abda-550f143dc79c",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I was thinking it was scary to automatically ssh into a remote machine and issue an `rm -rf`, but maybe I'm overreacting :) I think removing `-p` should be sufficient.\n",
        "createdAt" : "2016-02-23T18:55:01Z",
        "updatedAt" : "2016-02-23T18:55:01Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@\t}\n\tdefer func() {\n\t\toutput, err := runSshCommand(\"ssh\", host, \"--\", \"rm\", \"-rf\", tmp)\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"Failed to cleanup tmp directory %s on host %v.  Output:\\n%s\", tmp, err, output)"
  },
  {
    "id" : "fe4e8ee2-139e-4c39-989f-085437e40f59",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2140af02-d2b6-4f98-b860-221a639bf2b2",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "`sep` not used\n",
        "createdAt" : "2016-02-22T21:49:31Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "66c388ef-e3e7-46c9-9dfa-8fa1dbbb4b7c",
        "parentId" : "2140af02-d2b6-4f98-b860-221a639bf2b2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Done\n",
        "createdAt" : "2016-02-22T23:43:31Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +163,167 @@\n// getSshCommand handles proper quoting so that multiple commands are executed in the same shell over ssh\nfunc getSshCommand(sep string, args ...string) string {\n\treturn fmt.Sprintf(\"'%s'\", strings.Join(args, sep))\n}"
  },
  {
    "id" : "28cde4e8-7be1-4853-a5db-6067f0fb72ac",
    "prId" : 21622,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b07cf879-38ab-47a8-a48a-56c350c7cdf8",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "log the error?\n",
        "createdAt" : "2016-02-22T21:50:34Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "1bc25eee-926f-405d-905d-e2e872a5efdc",
        "parentId" : "b07cf879-38ab-47a8-a48a-56c350c7cdf8",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "An error is expected if the binaries are running.  This step is non-critical and only a precaution.  Added a comment explaining.  Let me know if there is something better you think we should do.  I think the failures from the first commands will be masked by the final command.  It is possible to make this more resilient, but if there is a problem here we should see it in the test kubelet/apiserver/etcd logs when they fail to startup.\n",
        "createdAt" : "2016-02-22T23:45:16Z",
        "updatedAt" : "2016-02-23T04:06:32Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3623c0c14b511a0bd51bad612feba09716096f9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +147,151 @@\t// If we are unable to stop existing running k8s processes, we should see messages in the kubelet/apiserver/etcd\n\t// logs about failing to bind the required ports.\n\trunSshCommand(\"ssh\", host, \"--\", \"sh\", \"-c\", cmd)\n\n\t// Extract the archive and run the tests"
  }
]