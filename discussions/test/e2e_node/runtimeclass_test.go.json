[
  {
    "id" : "8c00a8c1-3fb5-470d-ba66-006dc27ca08b",
    "prId" : 88558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88558#pullrequestreview-369940365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1040780a-4406-411c-aa18-3e8668904021",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "nit: \"makePodToVerifyCgroupSize\"",
        "createdAt" : "2020-03-05T21:49:44Z",
        "updatedAt" : "2020-03-05T21:59:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa12e1f8c42a169b8298e426cdc96c43c0d33ca1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@)\n\n// makePodToVerifyCgroups returns a pod that verifies the existence of the specified cgroups.\nfunc makePodToVerifyCgroupSize(cgroupNames []string, expectedCPU string, expectedMemory string) *v1.Pod {\n\t// convert the names to their literal cgroupfs forms..."
  },
  {
    "id" : "f812f13f-f7ce-44b3-890a-e5254e6d9fa4",
    "prId" : 88558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88558#pullrequestreview-369940365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a26db6a-ddbf-4aef-818c-34dbb8403092",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "nit: \"defined\"",
        "createdAt" : "2020-03-05T21:51:21Z",
        "updatedAt" : "2020-03-05T21:59:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa12e1f8c42a169b8298e426cdc96c43c0d33ca1",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t\t\t\thandler       string\n\t\t\t\t)\n\t\t\t\tginkgo.By(\"Creating a RuntimeClass with Overhead definied\", func() {\n\t\t\t\t\thandler = e2enode.PreconfiguredRuntimeClassHandler(framework.TestContext.ContainerRuntime)\n\t\t\t\t\trc := &nodev1beta1.RuntimeClass{"
  },
  {
    "id" : "ca490d47-86dc-4983-97ac-1dbbd66440f0",
    "prId" : 88558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88558#pullrequestreview-370038363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c21c648-4269-47ef-8684-324520246348",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "just tracking my mental math...\r\n\r\n200m+100m=300m cpu\r\n\r\n3000 * 1024 / 1000 = 3072\r\n\r\nis what i would have expected for cpu.",
        "createdAt" : "2020-03-05T21:58:38Z",
        "updatedAt" : "2020-03-05T21:59:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "5bf53167-2589-4d27-b4f9-5c7fc90450a8",
        "parentId" : "4c21c648-4269-47ef-8684-324520246348",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "this is checking `cpu.cfs_quota_us` not `cpu.shares`.  however, this test should also check `cpu.shares`.",
        "createdAt" : "2020-03-05T22:21:40Z",
        "updatedAt" : "2020-03-05T22:21:40Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      },
      {
        "id" : "50bb0883-356e-4b11-bea0-e5a49978b39c",
        "parentId" : "4c21c648-4269-47ef-8684-324520246348",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "That would be if you were checking shares, which isn't the relevant setting.  Kubelet will set cpu.cfs_quota_us to enforce the CPU limit (which should correspond to the total limits+pod overhead) -- see the check at [1].\r\n\r\nCPU quota is based relative to a period (set to 100,000), so we are checking for 30,000, which shows a limiting to effectively. 300 milliCPU.\r\n\r\n\r\n[1] - https://github.com/kubernetes/kubernetes/pull/88558/files#diff-c3ca917e18d307eabb48f941504b035eR53",
        "createdAt" : "2020-03-05T22:27:19Z",
        "updatedAt" : "2020-03-05T22:27:19Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      },
      {
        "id" : "f635d456-da7a-4a10-865f-ff7470de1953",
        "parentId" : "4c21c648-4269-47ef-8684-324520246348",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "Shameless plug to gist @mcastelino put together, discussing shares v. quota: https://gist.github.com/mcastelino/b8ce9a70b00ee56036dadd70ded53e9f#what-happens",
        "createdAt" : "2020-03-05T22:29:15Z",
        "updatedAt" : "2020-03-05T22:34:11Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      },
      {
        "id" : "f8fcd636-26f0-4118-ba55-38ff55df1eb2",
        "parentId" : "4c21c648-4269-47ef-8684-324520246348",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Thanks.  I saw CFS and mentally said shares and started doing math. Value for quota is right.",
        "createdAt" : "2020-03-06T01:56:50Z",
        "updatedAt" : "2020-03-06T01:56:51Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa12e1f8c42a169b8298e426cdc96c43c0d33ca1",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\t\t\tginkgo.By(\"Checking if the pod cgroup was created appropriately\", func() {\n\t\t\t\t\tcgroupsToVerify := []string{\"pod\" + podUID}\n\t\t\t\t\tpod := makePodToVerifyCgroupSize(cgroupsToVerify, \"30000\", \"251658240\")\n\t\t\t\t\tpod = f.PodClient().Create(pod)\n\t\t\t\t\terr := e2epod.WaitForPodSuccessInNamespace(f.ClientSet, pod.Name, f.Namespace.Name)"
  }
]