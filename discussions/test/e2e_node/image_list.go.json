[
  {
    "id" : "aab98e7a-a527-4608-a255-e6cb5b7ee97a",
    "prId" : 92711,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92711#pullrequestreview-441228417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be3b41bc-f3b3-4384-8d3c-34723993c0cf",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "why the names mismatch? should it be `updateImagePrePullList`?",
        "createdAt" : "2020-07-01T22:10:29Z",
        "updatedAt" : "2020-07-01T22:10:30Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "4338053d8fd1edc024c38f3ef7a4defbba18af40",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +62,66 @@)\n\n// updateImageAllowList updates the framework.ImagePrePullList with\n// 1. the hard coded lists\n// 2. the ones passed in from framework.TestContext.ExtraEnvs"
  },
  {
    "id" : "4732729b-83f3-45b0-bb6c-75a12e7e8a6c",
    "prId" : 91007,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91007#pullrequestreview-421560842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a541cd78-3608-4c2e-bc8b-7b3d2c1eb8b4",
        "parentId" : null,
        "authorId" : "1f387895-8959-40af-a3c7-aafcca07e2bf",
        "body" : "there is a deathlock in the previous implementation, I did fix it and all tests have passed now. PTAL @mattjmcnaughton ",
        "createdAt" : "2020-05-31T13:12:58Z",
        "updatedAt" : "2020-05-31T13:13:05Z",
        "lastEditedBy" : "1f387895-8959-40af-a3c7-aafcca07e2bf",
        "tags" : [
        ]
      },
      {
        "id" : "6546a800-0aca-4e4a-89d0-ffae7c2fe0aa",
        "parentId" : "a541cd78-3608-4c2e-bc8b-7b3d2c1eb8b4",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Can you share more around what the deadlock was @lsytj0413 ? Would also love to know more around how we are confident this implementation avoids the deadlock. Thanks :)",
        "createdAt" : "2020-06-01T01:55:38Z",
        "updatedAt" : "2020-06-01T01:55:55Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "50d4ccf1-acd2-4d1b-b62f-387ccba8e8cb",
        "parentId" : "a541cd78-3608-4c2e-bc8b-7b3d2c1eb8b4",
        "authorId" : "1f387895-8959-40af-a3c7-aafcca07e2bf",
        "body" : "Used variable imageCh in the for range sentence at previous implementation，it should be images。And read from imageCh will be deathlock。",
        "createdAt" : "2020-06-01T02:13:35Z",
        "updatedAt" : "2020-06-01T02:13:36Z",
        "lastEditedBy" : "1f387895-8959-40af-a3c7-aafcca07e2bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "64094899b03ce093edfbc93131a66a9aef22a046",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +159,163 @@\n\timageCh := make(chan int, len(images))\n\tfor i := range images {\n\t\timageCh <- i\n\t}"
  },
  {
    "id" : "241081f0-8eff-4b85-b369-c515032df551",
    "prId" : 40804,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40804#pullrequestreview-19969665",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2839ef1-dd23-45ce-8774-0f1b382a521c",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Replace it with ImageServiceEndpoint after adding `IMAGE_SERVICE_ENDPOINT`",
        "createdAt" : "2017-02-03T05:45:47Z",
        "updatedAt" : "2017-04-01T08:19:06Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "11fc2faa-5abe-4624-8bfa-eb9818b08493",
        "parentId" : "b2839ef1-dd23-45ce-8774-0f1b382a521c",
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "fixed",
        "createdAt" : "2017-02-03T08:59:35Z",
        "updatedAt" : "2017-04-01T08:19:06Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2634f57f7f48ac1ae0388e906d32855d79bd1de8",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\treturn &dockerPuller{}, nil\n\tcase \"remote\":\n\t\tendpoint := framework.TestContext.ContainerRuntimeEndpoint\n\t\tif framework.TestContext.ImageServiceEndpoint != \"\" {\n\t\t\t//ImageServiceEndpoint is the same as ContainerRuntimeEndpoint if not"
  },
  {
    "id" : "8b05203a-654d-41d9-86f2-8512e5854804",
    "prId" : 40804,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40804#pullrequestreview-20345894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a7a1d58-fbd2-4bcd-925b-da98941235cd",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@yujuhong Should we define the behavior of `PullImage` in CRI?",
        "createdAt" : "2017-02-06T19:37:55Z",
        "updatedAt" : "2017-04-01T08:19:06Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "2634f57f7f48ac1ae0388e906d32855d79bd1de8",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +91,95 @@\nfunc (rp *remotePuller) Pull(image string) ([]byte, error) {\n\t// TODO(runcom): should we check if the image is already pulled with ImageStatus?\n\t_, err := rp.imageService.PullImage(&runtime.ImageSpec{Image: image}, nil)\n\treturn nil, err"
  },
  {
    "id" : "5eb67100-d877-478a-b3c2-2596903b194b",
    "prId" : 29815,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "289ed648-8e7c-43d2-bad5-f53442653ef6",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ditto. :)\n",
        "createdAt" : "2016-08-09T23:30:36Z",
        "updatedAt" : "2016-08-10T18:25:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "2539badd-4810-42c7-a4b1-da316628e2ed",
        "parentId" : "289ed648-8e7c-43d2-bad5-f53442653ef6",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "This was on purpose too. Better logging to help debug failures.\n",
        "createdAt" : "2016-08-10T18:29:10Z",
        "updatedAt" : "2016-08-10T18:29:10Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9034f1e0aeace5b7a0847101a19397f201257d6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +68,72 @@// Pre-fetch all images tests depend on so that we don't fail in an actual test\nfunc PrePullAllImages() error {\n\tusr, err := user.Current()\n\tif err != nil {\n\t\treturn err"
  }
]