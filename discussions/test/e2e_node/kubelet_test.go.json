[
  {
    "id" : "643d5ef8-f4b7-4672-92b4-551695f9d1a1",
    "prId" : 67084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67084#pullrequestreview-144243546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d411bfd-4d0c-4693-9d9d-935233c48a0b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "this file should be ported. ",
        "createdAt" : "2018-08-07T18:43:10Z",
        "updatedAt" : "2018-08-07T18:44:45Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "864c2aea-27f9-4e9b-b8a1-e9fefb208e8f",
        "parentId" : "0d411bfd-4d0c-4693-9d9d-935233c48a0b",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "#67104",
        "createdAt" : "2018-08-07T23:13:44Z",
        "updatedAt" : "2018-08-07T23:13:44Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "c6ec6fc2-d10f-49bb-9c11-bb08111982ec",
        "parentId" : "0d411bfd-4d0c-4693-9d9d-935233c48a0b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We would need to figure out how to get the logs in a portable, reliable fashion.",
        "createdAt" : "2018-08-08T02:06:23Z",
        "updatedAt" : "2018-08-08T02:33:38Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "27d215c58f93e5576b8d15295a50522a769809c1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@\t\t\tDescription: By default the stdout and stderr from the process being executed in a pod MUST be sent to the pod's logs.\n\t\t*/\n\t\tIt(\"it should print the output to logs [NodeConformance]\", func() {\n\t\t\tpodClient.CreateSync(&v1.Pod{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{"
  },
  {
    "id" : "e844ea6c-ef28-40a7-8789-cdf5aafcaec5",
    "prId" : 67084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67084#pullrequestreview-144243546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cf16fb6-d639-4d22-b46b-b12c703d3a2c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Pod feature. Should be covered by conformance",
        "createdAt" : "2018-08-08T02:12:04Z",
        "updatedAt" : "2018-08-08T02:33:38Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "27d215c58f93e5576b8d15295a50522a769809c1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +175,179 @@\t\t\tDescription: Create a Pod with security context set with ReadOnlyRootFileSystem set to true. The Pod then tries to write to the /file on the root, write operation to the root filesystem MUST fail as expected.\n\t\t*/\n\t\tIt(\"it should not write to root filesystem [NodeConformance]\", func() {\n\t\t\tisReadOnly := true\n\t\t\tpodClient.CreateSync(&v1.Pod{"
  },
  {
    "id" : "397e80fb-5456-4085-a049-459b0a7f3afc",
    "prId" : 46385,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46385#pullrequestreview-41906086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26236e30-550c-4baa-8699-17b693841a3d",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "If you're going to read the whole stream, just use `\\.DoRaw()` rather than `Stream()`",
        "createdAt" : "2017-06-02T21:07:18Z",
        "updatedAt" : "2017-06-03T00:02:13Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "92e53a41-84c5-4356-96c6-43a6ec1b803a",
        "parentId" : "26236e30-550c-4baa-8699-17b693841a3d",
        "authorId" : "9871391c-3aef-493b-a8b7-9e1747c2cd85",
        "body" : "fixed",
        "createdAt" : "2017-06-02T22:33:20Z",
        "updatedAt" : "2017-06-03T00:02:13Z",
        "lastEditedBy" : "9871391c-3aef-493b-a8b7-9e1747c2cd85",
        "tags" : [
        ]
      },
      {
        "id" : "ac0e3268-e03e-4a76-abc6-c27bb39dd3fc",
        "parentId" : "26236e30-550c-4baa-8699-17b693841a3d",
        "authorId" : "9871391c-3aef-493b-a8b7-9e1747c2cd85",
        "body" : "I reverted this. this was introducing panics in the tests and the logs are quite difficult to understand: https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/46385/pull-kubernetes-node-e2e/33666/nodelog?junit=junit_gci_05.xml&wrap=on\r\n\r\nalso, `Stream()` is used in other kubelet e2e tests, so I think it's safer to follow the pattern: https://github.com/kubernetes/kubernetes/blob/05bff300f3ed8a0bc51998ace11dad50782c84c5/test/e2e_node/kubelet_test.go#L143",
        "createdAt" : "2017-06-03T00:05:57Z",
        "updatedAt" : "2017-06-03T00:05:57Z",
        "lastEditedBy" : "9871391c-3aef-493b-a8b7-9e1747c2cd85",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e7fed44798737eb26120493a7e48cc28ce2eeb0",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t\t\t}\n\t\t\t\tbuf := new(bytes.Buffer)\n\t\t\t\tbuf.ReadFrom(rc)\n\t\t\t\thostsFileContent := buf.String()\n"
  },
  {
    "id" : "ff60d190-37b7-4dec-b113-f4c72c1a87da",
    "prId" : 22859,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b33c2f78-20ff-4f7b-9300-d9709225b98e",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "So the main e2e framework creates new namespaces on the fly. Is that something that will be useful for us? Cleaning up will be as simple as deleting that namespace..\n",
        "createdAt" : "2016-03-11T17:17:20Z",
        "updatedAt" : "2016-03-11T17:17:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "d29c9caa-1ed7-48f1-9380-02d05a217f9f",
        "parentId" : "b33c2f78-20ff-4f7b-9300-d9709225b98e",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "I am not sure.  We can still delete the namespace without using a generated one right?  What other advantages does it provide?\n",
        "createdAt" : "2016-03-11T17:56:49Z",
        "updatedAt" : "2016-03-11T17:56:49Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "cc9df929-e7d8-4853-84bd-439c8e7f1968",
        "parentId" : "b33c2f78-20ff-4f7b-9300-d9709225b98e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "If we were to run the same tests in parallel, it will avoid namespace conflicts. Other than that, nothing else. It also avoids having to come up with namespace names for each test(s).\n",
        "createdAt" : "2016-03-11T18:03:25Z",
        "updatedAt" : "2016-03-11T18:03:25Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "9232bf1a-ac01-40ec-b38c-c3ad45d597e5",
        "parentId" : "b33c2f78-20ff-4f7b-9300-d9709225b98e",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Ah.  We are a ways off from being able to run multiple clusters on the same host in parallel so I would prefer to maximize simplicity at this point if you don't feel strongly about it.  Do the kubelet and apiserver log lines contain the namespace as well as the pod name?  I was hoping that by explicitly stating the namespaces per test that the logs would be easier to understand.\n",
        "createdAt" : "2016-03-11T21:42:03Z",
        "updatedAt" : "2016-03-11T21:42:03Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "6f188615-e36c-4fd4-ab41-575b4cb832a0",
        "parentId" : "b33c2f78-20ff-4f7b-9300-d9709225b98e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I doubt that the log lines will include namespace.. \nLGTM\n",
        "createdAt" : "2016-03-11T21:50:20Z",
        "updatedAt" : "2016-03-11T21:50:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce2d2c84c122f2795bc7a8dc617da5e8b68213ec",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +45,49 @@\n\tDescribe(\"pod scheduling\", func() {\n\t\tnamespace := \"pod-scheduling\"\n\t\tContext(\"when scheduling a busybox command in a pod\", func() {\n\t\t\tpodName := \"busybox-scheduling\""
  },
  {
    "id" : "9b3a76ab-6f3d-469b-a71b-16ff1510d850",
    "prId" : 18446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "917605a6-5223-4335-8a7e-4b2cbdbfa15b",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why are we not using the images in gcr.io? \n`gcr.io/google_containers/busybox`\n",
        "createdAt" : "2015-12-16T01:49:53Z",
        "updatedAt" : "2015-12-16T17:23:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "c00f8c87-7ace-4fed-b97c-4e1ff11cdf51",
        "parentId" : "917605a6-5223-4335-8a7e-4b2cbdbfa15b",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Done\n",
        "createdAt" : "2015-12-16T17:05:00Z",
        "updatedAt" : "2015-12-16T17:23:21Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad37e2654edbc98b1a2b6b40dc41b454902e5c0d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +51,55 @@\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tImage:           \"gcr.io/google_containers/busybox\",\n\t\t\t\t\t\t\t\tName:            \"busybox\",\n\t\t\t\t\t\t\t\tCommand:         []string{\"echo\", \"'Hello World'\"},\n\t\t\t\t\t\t\t\tImagePullPolicy: api.PullIfNotPresent,"
  }
]