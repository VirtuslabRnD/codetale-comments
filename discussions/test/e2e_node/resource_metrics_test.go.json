[
  {
    "id" : "ee8d0c64-6f7b-4e7a-ab73-be32e418b37d",
    "prId" : 95839,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95839#pullrequestreview-522772169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcde2fc9-a62d-4465-9ef1-e0cd06d2991a",
        "parentId" : null,
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "nice, and even simpler than I expected! Kudos for this addition, I'll give a go shortly",
        "createdAt" : "2020-11-03T18:19:30Z",
        "updatedAt" : "2020-11-03T18:19:30Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "4b237d98-b38c-4806-bd32-db205ab5152d",
        "parentId" : "bcde2fc9-a62d-4465-9ef1-e0cd06d2991a",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "Yeah, it is a bit easier since the example pod are single container, so the existing bounds should be same.",
        "createdAt" : "2020-11-03T18:30:46Z",
        "updatedAt" : "2020-11-03T18:30:47Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b26b755e94a709f343d030e18391c3d0cc05e78a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\t\t\tfmt.Sprintf(\"%s::%s\", f.Namespace.Name, pod0): boundedSample(10*e2evolume.Kb, 80*e2evolume.Mb),\n\t\t\t\t\tfmt.Sprintf(\"%s::%s\", f.Namespace.Name, pod1): boundedSample(10*e2evolume.Kb, 80*e2evolume.Mb),\n\t\t\t\t}),\n\t\t\t})\n\t\t\tginkgo.By(\"Giving pods a minute to start up and produce metrics\")"
  },
  {
    "id" : "21e63b57-4a23-4347-b1cb-b0fddd68ee91",
    "prId" : 95839,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95839#pullrequestreview-524542884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "537a2874-b352-40aa-828f-6a564712adca",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "A non-zero lower bound seems like it would be a better test, to ensure that the metric is actually being populated and not just stuck at zero. Do you know what the granularity of this is? (e.g. could it be set to 1 microsecond?)\r\n\r\nI wouldn't block the PR on this, since it's consistent with the existing test though.",
        "createdAt" : "2020-11-05T18:20:40Z",
        "updatedAt" : "2020-11-05T18:21:24Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "b26b755e94a709f343d030e18391c3d0cc05e78a",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\t\t\t\"pod_cpu_usage_seconds_total\": gstruct.MatchElements(containerID, gstruct.IgnoreExtras, gstruct.Elements{\n\t\t\t\t\tfmt.Sprintf(\"%s::%s\", f.Namespace.Name, pod0): boundedSample(0, 100),\n\t\t\t\t\tfmt.Sprintf(\"%s::%s\", f.Namespace.Name, pod1): boundedSample(0, 100),\n\t\t\t\t}),\n"
  },
  {
    "id" : "96db28bc-3af4-498a-b20c-4413a7d4b2fd",
    "prId" : 93868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93868#pullrequestreview-466939382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5acbe0c-44a4-4ed0-b135-03202f17ed1d",
        "parentId" : null,
        "authorId" : "36d7f8b5-3497-43b0-96eb-612a05dccdf8",
        "body" : "nitpick:\r\n```suggestion\r\n\t\tginkgo.It(\"should report resource usage through the resource metrics api\", func() {\r\n```",
        "createdAt" : "2020-08-10T22:41:41Z",
        "updatedAt" : "2020-08-14T18:29:05Z",
        "lastEditedBy" : "36d7f8b5-3497-43b0-96eb-612a05dccdf8",
        "tags" : [
        ]
      },
      {
        "id" : "d7656ca1-0377-4295-a03a-b87780617bb5",
        "parentId" : "f5acbe0c-44a4-4ed0-b135-03202f17ed1d",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "thank you. ",
        "createdAt" : "2020-08-13T16:47:30Z",
        "updatedAt" : "2020-08-14T18:29:05Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "916c73b8a56434b6be3c385d8718ee35592d8d81",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +64,68 @@\t\t\ttime.Sleep(15 * time.Second)\n\t\t})\n\t\tginkgo.It(\"should report resource usage through the resouce metrics api\", func() {\n\t\t\tginkgo.By(\"Fetching node so we can match against an appropriate memory limit\")\n\t\t\tnode := getLocalNode(f)"
  },
  {
    "id" : "293c0c59-9be3-45d9-a9af-8b6b449ea954",
    "prId" : 93868,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93868#pullrequestreview-468119445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b6f4846-8982-4af0-b9d5-3720d86083ae",
        "parentId" : null,
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "nit: remove `stable`, or refactor the log with something like `grabbing kubelet resource metrics`.",
        "createdAt" : "2020-08-17T01:27:12Z",
        "updatedAt" : "2020-08-17T01:27:12Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      }
    ],
    "commit" : "916c73b8a56434b6be3c385d8718ee35592d8d81",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +112,116 @@\nfunc getResourceMetrics() (e2emetrics.KubeletMetrics, error) {\n\tginkgo.By(\"getting stable resource metrics API\")\n\treturn e2emetrics.GrabKubeletMetricsWithoutProxy(framework.TestContext.NodeName+\":10255\", \"/metrics/resource\")\n}"
  },
  {
    "id" : "7de6fe32-9593-40a1-b778-6339dab4ddb1",
    "prId" : 73946,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73946#pullrequestreview-205459488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3df5632-01ad-427b-9ef4-3b33c286119d",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "this needs a `By` explaining what it's doing and why",
        "createdAt" : "2019-02-19T21:07:02Z",
        "updatedAt" : "2019-03-07T23:39:51Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "7c8bbe99-bf67-4c4c-b4d4-69956e207429",
        "parentId" : "e3df5632-01ad-427b-9ef4-3b33c286119d",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "done",
        "createdAt" : "2019-02-19T21:39:46Z",
        "updatedAt" : "2019-03-07T23:39:51Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "6051664c0fb0eb78a84cea8bf5a1e1e4584de50e",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@\n\t\t\tBy(\"Waiting for test pods to restart the desired number of times\")\n\t\t\tEventually(func() error {\n\t\t\t\tfor _, pod := range pods {\n\t\t\t\t\terr := verifyPodRestartCount(f, pod.Name, len(pod.Spec.Containers), numRestarts)"
  }
]