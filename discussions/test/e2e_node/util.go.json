[
  {
    "id" : "7aa9a9e9-19a1-40ad-8c41-51dc56764bc2",
    "prId" : 92709,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92709#pullrequestreview-444211422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4be332b7-aded-46b0-928c-77b2a644a36f",
        "parentId" : null,
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "This won't work for IPv6, see IPv6 example:\r\nhttps://golang.org/src/net/http/request_test.go",
        "createdAt" : "2020-07-07T19:23:02Z",
        "updatedAt" : "2020-07-07T19:28:50Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      },
      {
        "id" : "94be2726-3138-4d98-a189-e08259de649b",
        "parentId" : "4be332b7-aded-46b0-928c-77b2a644a36f",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@bsdnet that's true, but for this scope only ipv4 on 0.0.0.0:10255 address is being used, if this is not the case, or any other possible place will break, feel free to hold until we do the proper fix.",
        "createdAt" : "2020-07-07T20:06:01Z",
        "updatedAt" : "2020-07-07T20:09:12Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a392bf8fcb68c075cc6eaaa3f9a155ed2f03b8b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\treturn nil, fmt.Errorf(\"failed to get current kubelet config\")\n\t}\n\treq, err := http.NewRequest(\"GET\", fmt.Sprintf(\"http://%s:%d/stats/summary\", kubeletConfig.Address, kubeletConfig.ReadOnlyPort), nil)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to build http request: %v\", err)"
  },
  {
    "id" : "0192aec9-982d-4ef1-8a5d-167794a99328",
    "prId" : 80831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80831#pullrequestreview-424559641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8852744a-9bd5-476f-aea9-ef9496a33879",
        "parentId" : null,
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "I'd suggest to use ```systemctl stop``` here. Unlike ```systemctl kill``` it will use official configured way to stop the service. If killing kubelet is mandatory for your tests then it would be better to call this function killKubelet.",
        "createdAt" : "2019-12-05T10:16:36Z",
        "updatedAt" : "2020-03-19T12:08:55Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "ad2e11fd-f802-4714-8764-67b9d8ac6067",
        "parentId" : "8852744a-9bd5-476f-aea9-ef9496a33879",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "When using `systemctl stop` the systemd service will be deleted, making it impossible to start it again.\r\n\r\n> If killing kubelet is mandatory for your tests then it would be better to call this function killKubelet.\r\n\r\nNot sure what you mean with `killKubelet`.",
        "createdAt" : "2019-12-05T11:35:52Z",
        "updatedAt" : "2020-03-19T12:08:55Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "1cdbabd1-ab5c-4ad7-bda9-5376fac94525",
        "parentId" : "8852744a-9bd5-476f-aea9-ef9496a33879",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "> When using systemctl stop the systemd service will be deleted, making it impossible to start it again.\r\n\r\nCan you elaborate on this? Not sure I follow.\r\n\r\n> Not sure what you mean with killKubelet.\r\n\r\nI mean that you called function stopKubelet, but it doesn't stop Kubelet, it kills it. I proposed to call it KillKubelet.\r\n",
        "createdAt" : "2019-12-05T12:37:35Z",
        "updatedAt" : "2020-03-19T12:08:55Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "8a6bb34b-137d-4681-8f8b-47ef92ea365f",
        "parentId" : "8852744a-9bd5-476f-aea9-ef9496a33879",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "> Can you elaborate on this? Not sure I follow.\r\n\r\n```bash\r\n# Using stop\r\n> systemd-run --remain-after-exit sleep 100\r\nRunning as unit: run-u14192.service\r\n> systemctl stop run-u14192.service\r\n> systemctl start run-u14192.service\r\nFailed to start run-u14192.service: Unit run-u14192.service not found.\r\n\r\n# Using kill                                                                                                                                                                                             \r\n> systemd-run --remain-after-exit sleep 100\r\nRunning as unit: run-u14224.service \r\n> systemctl kill run-u14224.service\r\n> systemctl start run-u14224.service\r\n# service is restarted\r\n```\r\n\r\n> I mean that you called function stopKubelet, but it doesn't stop Kubelet, it kills it. I proposed to call it KillKubelet.\r\n\r\nAha, I agree that renaming it would make sense. I thought you meant to call a given function named `killKubelet` instead.\r\n",
        "createdAt" : "2019-12-05T12:55:49Z",
        "updatedAt" : "2020-03-19T12:08:55Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "33401d94-1be7-40ff-b0e2-58a6fde880c8",
        "parentId" : "8852744a-9bd5-476f-aea9-ef9496a33879",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "we can rename the function in a follow-on, but i don't see a major reason to block on the core issue addressed in the pr.",
        "createdAt" : "2020-06-04T15:22:43Z",
        "updatedAt" : "2020-06-04T15:24:06Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a233b9aab0d2ea595a08000d1c94564af8cd8e94",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +394,398 @@func stopKubelet() func() {\n\tkubeletServiceName := findRunningKubletServiceName()\n\tstdout, err := exec.Command(\"sudo\", \"systemctl\", \"kill\", kubeletServiceName).CombinedOutput()\n\tframework.ExpectNoError(err, \"Failed to stop kubelet with systemctl: %v, %v\", err, stdout)\n\treturn func() {"
  },
  {
    "id" : "3c0a7564-de39-4b50-95fe-010e45f60490",
    "prId" : 70508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70508#pullrequestreview-175011222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7c99baa-ebc3-443a-82cb-d0210f2e40e0",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Do we really need this big buffer size?",
        "createdAt" : "2018-11-14T06:29:49Z",
        "updatedAt" : "2018-11-15T17:45:19Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "28308c4e-2878-4985-a2d8-07e7334d0c4c",
        "parentId" : "e7c99baa-ebc3-443a-82cb-d0210f2e40e0",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Probably not.  I am reusing the value we use for the CRI, which it looks like some people have hit before: https://github.com/kubernetes/kubernetes/pull/64672.  Since this is just the client for our e2e test, I don't think this is a big deal either way.",
        "createdAt" : "2018-11-14T18:28:11Z",
        "updatedAt" : "2018-11-15T17:45:19Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "630cb53f82c19d0acc3116f7d48196f329ab6d10",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +70,74 @@\tdefaultPodResourcesPath    = \"/var/lib/kubelet/pod-resources\"\n\tdefaultPodResourcesTimeout = 10 * time.Second\n\tdefaultPodResourcesMaxSize = 1024 * 1024 * 16 // 16 Mb\n)\n"
  },
  {
    "id" : "908aae27-ebac-4446-9dcd-9bea3f48bcd4",
    "prId" : 60900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60900#pullrequestreview-107496086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dea27503-1a73-45fc-b6b5-e958746b26e2",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Is the cgroup name configurable?",
        "createdAt" : "2018-03-08T01:52:36Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "f6c2ed63-2700-4d8f-891a-8d5ecf80be33",
        "parentId" : "dea27503-1a73-45fc-b6b5-e958746b26e2",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "yes, but we don't configure it for testing.  The tests in pod_container_manager_test.go make the same assumption.",
        "createdAt" : "2018-03-08T17:29:15Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "8716fb3b-bce9-49b8-8d94-0563e51e447b",
        "parentId" : "dea27503-1a73-45fc-b6b5-e958746b26e2",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Can we get this from the text context?",
        "createdAt" : "2018-03-27T22:30:52Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "529810ac-2a4a-4008-94b4-42b00aab36f3",
        "parentId" : "dea27503-1a73-45fc-b6b5-e958746b26e2",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "I dont think we can get this from the test context.  It is a kubelet default.  I am actually just moving the constant to this file, because it doesn't build for some reason where it was...",
        "createdAt" : "2018-03-27T22:55:17Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "3254bdc1a46c208df379fb15a94e7415709f4933",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// Kubelet internal cgroup name for node allocatable cgroup.\nconst defaultNodeAllocatableCgroup = \"kubepods\"\n\nfunc getNodeSummary() (*stats.Summary, error) {"
  },
  {
    "id" : "87b94fef-0151-47da-9486-563901069435",
    "prId" : 32530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32530#pullrequestreview-6674947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ff28ef6-71bd-472f-9dc1-870dd8770745",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Can we check the feature gates first and only set kubelet configuration when dynamic kubelet configuration is enabled?\n",
        "createdAt" : "2016-10-24T17:44:38Z",
        "updatedAt" : "2016-11-02T17:02:39Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "92b35b9a-bf3b-478d-be93-e7039b28fb89",
        "parentId" : "2ff28ef6-71bd-472f-9dc1-870dd8770745",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Left a TODO pending #31556\n",
        "createdAt" : "2016-11-01T18:28:53Z",
        "updatedAt" : "2016-11-02T17:02:39Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "5190a7d72d6e52f99fa1b56eee7c3b17a1c61b3f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +92,96 @@// with the new configuration. Returns an error if the configuration after waiting 40 seconds\n// doesn't match what you attempted to set, or if the dynamic configuration feature is disabled.\nfunc setKubeletConfiguration(f *framework.Framework, kubeCfg *componentconfig.KubeletConfiguration) error {\n\tconst (\n\t\trestartGap = 30 * time.Second"
  },
  {
    "id" : "8e81c74a-2e5f-4a5b-9d2c-53ce78faa17c",
    "prId" : 31391,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a8da468-9794-4d8c-a69d-b08dfc1d947a",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "defer here. :)\n",
        "createdAt" : "2016-08-25T00:12:21Z",
        "updatedAt" : "2016-08-25T05:08:34Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "c846de2a-d7e6-4f63-8baa-b39530d70105",
        "parentId" : "5a8da468-9794-4d8c-a69d-b08dfc1d947a",
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "done\n",
        "createdAt" : "2016-08-25T00:42:15Z",
        "updatedAt" : "2016-08-25T05:08:34Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0577e7c74dc5e1e16c7f4b57414a8acec86c8ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +51,55 @@\n\tdefer resp.Body.Close()\n\tcontentsBytes, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tglog.Warningf(\"Failed to read /stats/summary: %+v\", resp)"
  }
]