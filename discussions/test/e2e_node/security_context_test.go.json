[
  {
    "id" : "d83a9547-244f-4414-a8ea-a211a5e35c46",
    "prId" : 58777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58777#pullrequestreview-91599461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1345004-c90e-479e-9538-01c408c79e1a",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Could we add a link to the upstream issue and perhaps add some TODO item to remove this code when it will be fixed in the upstream?",
        "createdAt" : "2018-01-25T10:54:48Z",
        "updatedAt" : "2018-01-25T17:11:34Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "151468f6-d27c-4260-8344-f2dad22b6d07",
        "parentId" : "a1345004-c90e-479e-9538-01c408c79e1a",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Done. PTAL",
        "createdAt" : "2018-01-25T17:11:45Z",
        "updatedAt" : "2018-01-25T17:11:45Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d30b026baed6e1906f96e7b982e7c205be7430d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +376,380 @@\t\t\t\t// It turns out SELinux policy in RHEL 7 does not play well with\n\t\t\t\t// the \"NoNewPrivileges\" flag. So let's skip this test when running\n\t\t\t\t// with SELinux support enabled.\n\t\t\t\t//\n\t\t\t\t// TODO(filbranden): Remove this after the fix for"
  },
  {
    "id" : "f028d962-2688-49b2-a3c5-2982b6153f8d",
    "prId" : 48858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48858#pullrequestreview-51001860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db477d2a-8af0-4e14-a618-9400e53a2aae",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Alternatively, you can simply run `\"sh\", \"-c\", \"touch checkfile` and see whether the pod succeeded or failed. The upside is that we wouldn't need \"logs\" to check the state of the pod.",
        "createdAt" : "2017-07-17T16:49:53Z",
        "updatedAt" : "2017-07-17T16:49:53Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ea60afe2-b6c3-4824-abeb-3e2e22cfc1de",
        "parentId" : "db477d2a-8af0-4e14-a618-9400e53a2aae",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yujuhong Yep, that's another way. I think both checking failure and logs are ok. And here using logs could be consistent with other places. I can change to checking failure if you prefer that way.",
        "createdAt" : "2017-07-19T03:26:40Z",
        "updatedAt" : "2017-07-19T03:26:40Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "8395db6c-fc74-430a-b921-7fdededf2100",
        "parentId" : "db477d2a-8af0-4e14-a618-9400e53a2aae",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think that's fine for now. We can try to minimize the reliance on logs in a separate PR if necessary.",
        "createdAt" : "2017-07-19T18:38:41Z",
        "updatedAt" : "2017-07-19T18:38:41Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "721047fe492140d7808ff0ff4464a5c1e8a37682",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +341,345 @@\t\t\tpodClient.Create(makeUserPod(podName,\n\t\t\t\t\"gcr.io/google_containers/busybox:1.24\",\n\t\t\t\t[]string{\"sh\", \"-c\", \"touch checkfile && [ -f checkfile ] && echo Found || true\"},\n\t\t\t\treadOnlyRootFilesystem,\n\t\t\t))"
  },
  {
    "id" : "2ad9e64a-0063-445f-a9fd-fd6d7e8bfe1d",
    "prId" : 45006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45006#pullrequestreview-36992816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f833345-864e-4fb1-b12d-51e359631146",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Clean up the resource after the test.",
        "createdAt" : "2017-05-08T19:21:19Z",
        "updatedAt" : "2017-05-09T10:25:37Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "80bacf37-a4f2-4d23-a820-aac183553de8",
        "parentId" : "4f833345-864e-4fb1-b12d-51e359631146",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ack",
        "createdAt" : "2017-05-09T10:21:50Z",
        "updatedAt" : "2017-05-09T10:25:37Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b540b6d74261ec1483e60c00f2bd0b04b5cbe1f",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +149,153 @@\t\thostSharedMemoryID := \"\"\n\t\tBeforeEach(func() {\n\t\t\toutput, err := exec.Command(\"sh\", \"-c\", \"ipcmk -M 1M | awk '{print $NF}'\").Output()\n\t\t\tif err != nil {\n\t\t\t\tframework.Failf(\"Failed to create the shared memory on the host: %v\", err)"
  }
]