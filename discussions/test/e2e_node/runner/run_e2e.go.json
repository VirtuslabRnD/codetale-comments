[
  {
    "id" : "61bc6700-42f9-4f0e-81c6-84203e192697",
    "prId" : 31039,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75a7102a-6b7f-4f12-9d0c-54729ef95d25",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Change the comment here.\n",
        "createdAt" : "2016-08-20T04:29:09Z",
        "updatedAt" : "2016-08-20T16:44:29Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ab0c50c5dffb175964d663a8e5cf5fea2bb1cc",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +111,115 @@\n\tMachine string `json:\"machine, omitempty\"`\n\t// The test is regarded as 'benchmark' is Tests is non-empty\n\tTests []string `json:\"tests, omitempty\"`\n}"
  },
  {
    "id" : "df5e9f8a-181e-481d-a638-88bed9e8ee06",
    "prId" : 31039,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68f15701-a2fd-4e3d-a3b4-1c50ed3b412d",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "nit: Only set `machine=defaultMachine` here.\n",
        "createdAt" : "2016-08-20T04:31:28Z",
        "updatedAt" : "2016-08-20T16:44:29Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "9af2336c-ebf7-4e22-9b70-76350c0b1440",
        "parentId" : "68f15701-a2fd-4e3d-a3b4-1c50ed3b412d",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-08-20T16:44:17Z",
        "updatedAt" : "2016-08-20T16:44:29Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ab0c50c5dffb175964d663a8e5cf5fea2bb1cc",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +600,604 @@\nfunc machineType(machine string) string {\n\tif machine == \"\" {\n\t\tmachine = defaultMachine\n\t}"
  },
  {
    "id" : "5e5e4d61-86be-4254-84a1-ebe5bfdc4c95",
    "prId" : 31039,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d48c05ed-1b10-4c30-b195-664b7b1ccd65",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The logic is not very clear currently. It could be more generic.\nAnyway, we can iterate in following PRs.\n",
        "createdAt" : "2016-08-21T02:08:19Z",
        "updatedAt" : "2016-08-21T02:08:19Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8ab0c50c5dffb175964d663a8e5cf5fea2bb1cc",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +421,425 @@\tginkgoFlagsStr := *ginkgoFlags\n\t// Check whether the test is for benchmark.\n\tif len(imageConfig.tests) > 0 {\n\t\t// Benchmark needs machine type non-empty.\n\t\tif imageConfig.machine == \"\" {"
  },
  {
    "id" : "19a80d43-b317-4bbe-9cb9-a7743792cb65",
    "prId" : 30728,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e9fa505-f22b-486b-b995-afc01dc29ff5",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "It is possible that instance deletion might fail due to GCE flake. Can we retry a couple of times just to be sure?\n",
        "createdAt" : "2016-08-17T19:28:59Z",
        "updatedAt" : "2016-08-17T19:28:59Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "b3bd3aba-07d4-4807-82ad-6a972706b6cf",
        "parentId" : "4e9fa505-f22b-486b-b995-afc01dc29ff5",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "That's possible, but we haven't observed it yet.\n",
        "createdAt" : "2016-08-17T19:42:31Z",
        "updatedAt" : "2016-08-17T19:42:31Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "036abcc9-5169-4f5a-b095-969450f9f78e",
        "parentId" : "4e9fa505-f22b-486b-b995-afc01dc29ff5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "If it happens frequently, we should check. Otherwise, I think it's ok to fall back to the periodic cleanup task.\n",
        "createdAt" : "2016-08-17T20:08:35Z",
        "updatedAt" : "2016-08-17T20:08:35Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5bd5540e0dd3aa9f8215a943cf66f01e8da39a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +503,507 @@\nfunc deleteInstance(image string) {\n\tinstanceName := imageToInstanceName(image)\n\tglog.Infof(\"Deleting instance %q\", instanceName)\n\t_, err := computeService.Instances.Delete(*project, *zone, instanceName).Do()"
  },
  {
    "id" : "af037edc-d935-44e8-bbc0-1d7e34365b43",
    "prId" : 28708,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e013813-ffe7-4c9e-bcb1-5f034a166269",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Missing empty line?\n",
        "createdAt" : "2016-07-08T23:36:19Z",
        "updatedAt" : "2016-07-12T02:20:36Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "af1700b41e893b42afa43c6113274686dae79646",
    "line" : null,
    "diffHunk" : "@@ -1,1 +401,405 @@}\n\nfunc sourceImage(image, imageProject string) string {\n\treturn fmt.Sprintf(\"projects/%s/global/images/%s\", imageProject, image)\n}"
  },
  {
    "id" : "c0eeb837-d3f0-4447-b140-fbb1107d0b13",
    "prId" : 21204,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53fe0abc-215a-4fe5-912a-04a1e010aeb5",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Should we set the size?\n",
        "createdAt" : "2016-02-13T00:14:22Z",
        "updatedAt" : "2016-02-25T00:34:50Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "22518274-6b08-47e8-98b1-8a7f996393ab",
        "parentId" : "53fe0abc-215a-4fe5-912a-04a1e010aeb5",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "So far I have been leaving the defaults and they seem to have worked.  Do you think we should shrink the size from the default, or just for consistency?\n",
        "createdAt" : "2016-02-13T01:02:09Z",
        "updatedAt" : "2016-02-25T00:34:50Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "1993342f-59ad-4afa-8a0b-d9605ba31fbe",
        "parentId" : "53fe0abc-215a-4fe5-912a-04a1e010aeb5",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "The default is `10GB` right? Would we ever use up all of that? May be disk usage tests?\n",
        "createdAt" : "2016-02-16T22:36:19Z",
        "updatedAt" : "2016-02-25T00:34:50Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "f9e564b1-f3f6-424b-99b1-8439bab30048",
        "parentId" : "53fe0abc-215a-4fe5-912a-04a1e010aeb5",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "I doubt we would, but I also don't think we are saving much by shrinking it to save 6-8GB.  The CPU and ram are more costly.  The requested size cannot be smaller than the image size, so shrinking it would make creating images more error prone since we would have to always change the defaults.\n",
        "createdAt" : "2016-02-16T23:26:59Z",
        "updatedAt" : "2016-02-25T00:34:50Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "4e631fed-3688-417f-8366-ffb16d0e9187",
        "parentId" : "53fe0abc-215a-4fe5-912a-04a1e010aeb5",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "As a follow up, most base images (ubuntu, jessie,centos) are 10GB, and we can't shrink smaller than that.\n",
        "createdAt" : "2016-02-24T17:07:24Z",
        "updatedAt" : "2016-02-25T00:34:50Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "c51c606f2236ddee01c3b95aa20300734cef69d2",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +183,187 @@\t\t\t\tAutoDelete: true,\n\t\t\t\tBoot:       true,\n\t\t\t\tType:       \"PERSISTENT\",\n\t\t\t\tInitializeParams: &compute.AttachedDiskInitializeParams{\n\t\t\t\t\tSourceImage: sourceImage(image),"
  },
  {
    "id" : "ac0053fd-b18e-46ef-867e-b4d4bbb9bbad",
    "prId" : 20872,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50c4a24d-a218-4230-ae39-33e00a3a835b",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`--v=4` is recommended for debugging kubelet issues, but the log tends to be long and will be better uploaded somewhere.\n",
        "createdAt" : "2016-02-09T01:30:04Z",
        "updatedAt" : "2016-02-09T18:41:25Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5ccd25ca-8139-4ff1-b760-ffc4355a4cac",
        "parentId" : "50c4a24d-a218-4230-ae39-33e00a3a835b",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "SGTM.  Added a TODO for that.\n",
        "createdAt" : "2016-02-09T17:03:16Z",
        "updatedAt" : "2016-02-09T18:41:25Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c708db4b874cc005fefefd1dab4b9a8079728e9",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +180,184 @@\tkh, err := c.RunAndWaitTillHealthy(\n\t\ttrue, true, \"10255\", healthyTimeoutDuration, \"healthz\", kubeletBin, \"--api-servers\", \"http://127.0.0.1:8080\",\n\t\t\"--v\", \"2\", \"--alsologtostderr\", \"--address\", \"0.0.0.0\", \"--port\", \"10250\")\n\tdefer func() {\n\t\tkh.TearDown()"
  },
  {
    "id" : "7f455ad9-202a-4123-a955-bb7336c8425a",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8e845ca-acae-4a3f-bd52-03c054d5d3ce",
        "parentId" : null,
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "nit: A newline here would be nice for readability :smile: \n",
        "createdAt" : "2015-11-16T18:46:33Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "2cf25844-4bb8-4fae-bf02-5fe4c04dcee3",
        "parentId" : "d8e845ca-acae-4a3f-bd52-03c054d5d3ce",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Done\n",
        "createdAt" : "2015-11-17T04:13:10Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +36,40 @@type RunFunc func(host string, port string) ([]byte, error)\n\ntype Result struct {\n\thost   string\n\toutput []byte"
  },
  {
    "id" : "850a243b-fe6a-4bd1-b1ee-82804a6a3c64",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "505c9abe-0aa6-4b44-9c49-d3d40806d426",
        "parentId" : null,
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "How about adding an optional `RepoRoot` flag which defaults to `../../.../` and use that instead of the `../../../` hardcoded in the code?\n",
        "createdAt" : "2015-11-16T18:52:06Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "be34fbbc-344a-429d-b7eb-f3fe2c578850",
        "parentId" : "505c9abe-0aa6-4b44-9c49-d3d40806d426",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : ":+1: What do you think of using runtime.Caller(0) to get the directory the file is in, and then calculating the hardcoded reporoot from that?  Should it still be a flag?\n",
        "createdAt" : "2015-11-17T01:32:42Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "a54d59ff-b247-4a8a-ad09-126ddeaf52e9",
        "parentId" : "505c9abe-0aa6-4b44-9c49-d3d40806d426",
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "I think using `runtime.Caller(0)` would be great to create a default but I'd still lobby for a flag. Off the top of my head I can't think of a quick way to ensure that the location the file was executed in will always be in the right place. However, I think it's fine to make that assumption for the first iteration or two along with the use of `runtime.Caller(0)`.\n",
        "createdAt" : "2015-11-17T15:39:06Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "215b9bbf-49eb-454a-92b5-4ef2228aacde",
        "parentId" : "505c9abe-0aa6-4b44-9c49-d3d40806d426",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Sounds good.  Added the runtime.Caller(0) and will add a flag when required.  99% of the time this will only be run by Jenkins.\n",
        "createdAt" : "2015-11-17T22:48:17Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@const ginkoTestRelPath = \"test/e2e_node\"\nconst healthyTimeoutDuration = time.Minute * 3\n\nfunc main() {\n\tflag.Parse()"
  },
  {
    "id" : "a9259da6-d6f3-4af5-b9db-6369e0535af3",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0f1aa3f-8efb-4ec3-9e50-c12944dd7105",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can we pick the default zone if the user doesn't specify one?\n",
        "createdAt" : "2015-11-16T19:02:28Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "248d7d20-3358-4597-a3e3-25d497f2d95c",
        "parentId" : "a0f1aa3f-8efb-4ec3-9e50-c12944dd7105",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Sure.  Is there a reasonable default?  Is this present in the gce profile?\n",
        "createdAt" : "2015-11-17T01:38:35Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "08042c44-f980-4051-9eba-fe2373b89f71",
        "parentId" : "a0f1aa3f-8efb-4ec3-9e50-c12944dd7105",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Never mind, I think I have addressed this.\n",
        "createdAt" : "2015-11-17T23:23:52Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@\nvar u = sync.WaitGroup{}\nvar zone = flag.String(\"zone\", \"\", \"gce zone the hosts live in\")\nvar hosts = flag.String(\"hosts\", \"\", \"hosts to test\")\nvar wait = flag.Bool(\"wait\", false, \"if true, wait for input before running tests\")"
  },
  {
    "id" : "1ed76967-082d-4349-9582-1a1115cd802b",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1531008-f1cc-4dd6-b31b-2d63867f1c85",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "IIUC, the tests are started before this wait. What purpose does this serve?\n",
        "createdAt" : "2015-11-16T19:04:13Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "7bf49055-7b74-4d1c-a4fd-79568dc0a93a",
        "parentId" : "f1531008-f1cc-4dd6-b31b-2d63867f1c85",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "The bootstrapping starts in go routines before wait, but the tests are not run until the user enters Done.  This could be more clear if the code was structured differently.  (line 122 blocks).  So far this has mainly been used for development so I can bootstrap the cluster and then mainly run tests without having the cluster torn down.  Thoughts on keeping it in?\n",
        "createdAt" : "2015-11-17T01:35:12Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "58e9806e-fc63-4709-ab2e-f75fd26d4a7b",
        "parentId" : "f1531008-f1cc-4dd6-b31b-2d63867f1c85",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "We can remove this. I don't see why we will need this, except for development maybe.\n",
        "createdAt" : "2015-11-18T18:29:50Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +91,95 @@\n\t// Maybe wait for user input before running tests\n\tif *wait {\n\t\tWaitForUser()\n\t}"
  },
  {
    "id" : "0903e5b7-c5b6-4552-a1c9-cbca00ee5a1d",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4060ac7-1707-40b6-b6eb-a0741853d3fe",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "How about building the `hyperkube` docker image and then running that instead?\nWe can define a test-only docker image that can be used to package the kubelet, etcd and api-server without any add-ons, copy out the data from the docker image, and then run the kubelet.\n",
        "createdAt" : "2015-11-16T19:06:01Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "58d83595-cea5-4301-a443-c79f40929e78",
        "parentId" : "c4060ac7-1707-40b6-b6eb-a0741853d3fe",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Sounds interesting, would love to talk more irl.  Would docker be running all 3 services then in 1 container, or would it just act a packaging mechanism for running the containers?  My main concerns with the harness as-is are around ensuring the setup and tear down are not flaky, which would be a lot simpler if the whole mess was run inside a container, but introduces other challenges.\n",
        "createdAt" : "2015-11-17T04:15:10Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "d7dbbe25-33f9-4372-a536-737b03ef1fda",
        "parentId" : "c4060ac7-1707-40b6-b6eb-a0741853d3fe",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Lets chew on that idea for a bit. Let's start with your current implementation and iterate.\n",
        "createdAt" : "2015-11-18T18:30:20Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@func runTests(host string) ([]byte, error) {\n\tc := gcloud.NewGCloudClient(host, *zone)\n\t// TODO(pwittrock): Come up with something better for bootstrapping the environment.\n\tetcdBin := filepath.Join(kubeRoot, \"third_party/etcd/etcd\")\n\teh, err := c.CopyAndWaitTillHealthy(false, \"4001\", healthyTimeoutDuration, \"v2/keys/\", etcdBin)"
  }
]