[
  {
    "id" : "2d3e92e5-111d-4715-abf2-fc20c4ad086b",
    "prId" : 101903,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101903#pullrequestreview-658318629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a6646d5-0fa1-4d25-a192-ec10bfa02562",
        "parentId" : null,
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "nit: ... for instance to stop responding via SSH",
        "createdAt" : "2021-05-12T19:53:20Z",
        "updatedAt" : "2021-05-12T19:54:34Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "93ff47b05b479eaca03d11b703a94bcc7f8f1003",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +760,764 @@func rebootInstance(instance *compute.Instance) error {\n\t// wait until the instance will not response to SSH\n\tklog.Info(\"Reboot the node and wait for instance not to be available via SSH\")\n\tif waitErr := wait.PollImmediate(5*time.Second, 5*time.Minute, func() (bool, error) {\n\t\tif _, err := remote.SSH(instance.Name, \"reboot\"); err != nil {"
  },
  {
    "id" : "cb19dad2-eef9-44c2-968f-285e67866f80",
    "prId" : 101903,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101903#pullrequestreview-658318629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "218a65c2-f12c-44e3-a766-38a7284ba61d",
        "parentId" : null,
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "I hope this is not too flacky...",
        "createdAt" : "2021-05-12T19:53:54Z",
        "updatedAt" : "2021-05-12T19:54:34Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "93ff47b05b479eaca03d11b703a94bcc7f8f1003",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +758,762 @@}\n\nfunc rebootInstance(instance *compute.Instance) error {\n\t// wait until the instance will not response to SSH\n\tklog.Info(\"Reboot the node and wait for instance not to be available via SSH\")"
  },
  {
    "id" : "f314eb3b-d6fc-49ec-b50d-a940fa4b559f",
    "prId" : 92204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92204#pullrequestreview-433700267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6684d1c1-4402-4d96-9c16-33d82c61e454",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "does this TODO become obsolete with this check?",
        "createdAt" : "2020-06-17T19:12:22Z",
        "updatedAt" : "2020-06-17T19:12:22Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "e8cff4ff-063a-4783-b4f4-1b795876d84e",
        "parentId" : "6684d1c1-4402-4d96-9c16-33d82c61e454",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "https://github.com/kubernetes/kubernetes/pull/92274",
        "createdAt" : "2020-06-18T22:58:03Z",
        "updatedAt" : "2020-06-18T22:58:04Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "01183e51f084b1a05420f743bca3011b3925a084",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +666,670 @@\t\t\tremote.AddHostnameIP(name, externalIP)\n\t\t}\n\t\t// TODO(random-liu): Remove the docker version check. Use some other command to check\n\t\t// instance readiness.\n\t\tvar output string"
  },
  {
    "id" : "73fbd63f-0fef-48ad-b256-21aec6032291",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-420417971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d92a1964-95c3-4525-aabf-859d9663f074",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "looks like it would be an improvement!",
        "createdAt" : "2020-05-28T19:22:24Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +81,85 @@\tkv := strings.SplitN(value, \"=\", 2)\n\tif len(kv) != 2 {\n\t\treturn fmt.Errorf(\"invalid env string %s\", value)\n\t}\n\temap := *e"
  },
  {
    "id" : "4da0656c-85df-49fa-a390-a10be3940e83",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422096469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8ba007e-52e0-47f7-959d-3f80a59dab55",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "should be using klog, not printf\r\n\r\nthis solves 2.) ? ",
        "createdAt" : "2020-05-28T19:29:05Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "2d03e1f3-58b8-4be4-b5b4-3cfa0eb61bf2",
        "parentId" : "a8ba007e-52e0-47f7-959d-3f80a59dab55",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "fmt.Printf is used here. It will print to the stdout. While klog writes to some file usually. Maybe we do not change for now.\r\n\r\nYes, this will give clear idea which image is used.  Output example is:\r\nubuntu/project/ubuntu-18-04 or\r\ncos-stable/cos-cloud/cos-77-12347-237-0",
        "createdAt" : "2020-05-28T20:44:02Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      },
      {
        "id" : "839c8c90-8a32-4cfe-9dd3-2438e2795619",
        "parentId" : "a8ba007e-52e0-47f7-959d-3f80a59dab55",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "Yea, it seems that way. I see other uses of printfs.",
        "createdAt" : "2020-06-01T18:54:10Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +319,323 @@\tfor shortName := range gceImages.images {\n\t\timageConfig := gceImages.images[shortName]\n\t\tfmt.Printf(\"Initializing e2e tests using image %s/%s/%s.\\n\", shortName, imageConfig.project, imageConfig.image)\n\t\trunning++\n\t\tgo func(image *internalGCEImage, junitFilePrefix string) {"
  },
  {
    "id" : "14a65e06-8284-4805-869d-568763a65a1f",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422185118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33477b40-c25a-406b-98c9-1207b53fd67c",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "kind of churny change for change sake.",
        "createdAt" : "2020-06-01T18:55:57Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "3c3e823f-9af7-4bf9-8e12-a1384f23b5d9",
        "parentId" : "33477b40-c25a-406b-98c9-1207b53fd67c",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "This is coding style and consistent issue.",
        "createdAt" : "2020-06-01T21:11:17Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +280,284 @@\t\t\t\tmetadata: getImageMetadata(*instanceMetadata),\n\t\t\t}\n\t\t\tgceImages.images[image] = gceImage\n\t\t}\n\t}"
  },
  {
    "id" : "3a4b8fc0-f6ac-457b-ab8c-679b90eef938",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422270087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "if we can only pull one out, we don't need a map.",
        "createdAt" : "2020-06-01T19:02:27Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "9f1065f3-3398-42a3-a490-3bfa1a229ba3",
        "parentId" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "I think the scope is keep changing. This is a minor refractor to clean up things. I do not  think we should rewrite existing code, Good for that to be in a separate CL.",
        "createdAt" : "2020-06-01T21:50:06Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      },
      {
        "id" : "efd831b7-87a5-4dd8-af50-f4cc68628611",
        "parentId" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "This one is separate from the change to `getGCEImages`.\r\n`getGCEImages` only gets one image, but a node config can have multiple images, see https://github.com/kubernetes/kubernetes/pull/91543#issuecomment-637141822",
        "createdAt" : "2020-06-01T22:02:36Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "b63fd228-7e1b-4f7a-972b-21b0cc4c6232",
        "parentId" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "Which I think means that this part should stay as is.",
        "createdAt" : "2020-06-01T22:02:57Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "04169518-8553-44a4-bcb7-c4e664f1fd60",
        "parentId" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "yup, I read it wrong here, scope changed.",
        "createdAt" : "2020-06-01T23:02:22Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "3ad1a0aa-83f8-4d3b-aa5b-ca45bb1a5da1",
        "parentId" : "61ac80e8-4b7d-4362-90ca-6a85a380a592",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "yes, alejandrox1@ is right.",
        "createdAt" : "2020-06-02T00:42:23Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +213,217 @@\t}\n\n\tgceImages := &internalImageConfig{\n\t\timages: make(map[string]internalGCEImage),\n\t}"
  },
  {
    "id" : "a3f76ec9-f220-4a11-b3c4-a928e9c04d3b",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422280986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6871b48c-a3fa-4fcf-ac95-481460ff092f",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "super!",
        "createdAt" : "2020-06-02T01:19:32Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +228,232 @@\t\t}\n\t\t// Unmarshal the given image config file. All images for this test run will be organized into a map.\n\t\t// shortName->GCEImage, e.g cos-stable->cos-stable-81-12871-103-0.\n\t\texternalImageConfig := ImageConfig{Images: make(map[string]GCEImage)}\n\t\terr = yaml.Unmarshal(imageConfigData, &externalImageConfig)"
  },
  {
    "id" : "d45fc275-0e63-4b40-a190-5e500569d542",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422282302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cc26830-f724-4a70-8dbb-454a03a5029d",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "so at the point this is printed, we've already made the choice of which image to run, and are getting ready to run it, awesome!",
        "createdAt" : "2020-06-02T01:22:06Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "7c9a354e-fff5-4e8a-bba8-f0d6a663a2e1",
        "parentId" : "6cc26830-f724-4a70-8dbb-454a03a5029d",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "yes, images and software version are important for troubleshooting. We should print as detailed as possible.",
        "createdAt" : "2020-06-02T01:24:13Z",
        "updatedAt" : "2020-06-02T06:43:45Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +319,323 @@\tfor shortName := range gceImages.images {\n\t\timageConfig := gceImages.images[shortName]\n\t\tfmt.Printf(\"Initializing e2e tests using image %s/%s/%s.\\n\", shortName, imageConfig.project, imageConfig.image)\n\t\trunning++\n\t\tgo func(image *internalGCEImage, junitFilePrefix string) {"
  },
  {
    "id" : "007b5eea-8967-415c-aedb-5c71773cfc12",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-423302098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a509af7e-5041-438d-8393-15a39850ce84",
        "parentId" : null,
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : "IIUC regular expression can be used to get a number of images and not the only one image, why do we remove this functionality?",
        "createdAt" : "2020-06-02T08:38:23Z",
        "updatedAt" : "2020-06-02T08:39:07Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      },
      {
        "id" : "d30f566b-d1e3-42b8-a748-d925da52ee56",
        "parentId" : "a509af7e-5041-438d-8393-15a39850ce84",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "Though we get multiple images, but the function always return one from same project or image family. Same as your below question. Regex is designed to match all available images to avoid yaml updates. That should be the design purpose.",
        "createdAt" : "2020-06-02T16:34:40Z",
        "updatedAt" : "2020-06-02T16:34:40Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      },
      {
        "id" : "a9f7b92c-8903-40e3-97b9-95d590cee4b3",
        "parentId" : "a509af7e-5041-438d-8393-15a39850ce84",
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : " I see now, because of `gceImages.images[shortName] = gceImage` we anyway use only one image, thank for clarification.",
        "createdAt" : "2020-06-03T07:50:40Z",
        "updatedAt" : "2020-06-03T07:50:40Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +468,472 @@\n// Returns an image name based on regex and given GCE project.\nfunc getGCEImage(imageRegex, imageFamily string, project string) (string, error) {\n\timageObjs := []imageObj{}\n\timageRe := regexp.MustCompile(imageRegex)"
  },
  {
    "id" : "36e31126-5ef4-4a15-bfae-3c85cfeecd67",
    "prId" : 91543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91543#pullrequestreview-422857249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f20307c-512e-477b-a184-214557bea8dc",
        "parentId" : null,
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : "Again the same question, why do we want to return only the first image?",
        "createdAt" : "2020-06-02T08:39:03Z",
        "updatedAt" : "2020-06-02T08:39:07Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      },
      {
        "id" : "2d28bc45-8097-481b-b3dc-efc5b20775d9",
        "parentId" : "3f20307c-512e-477b-a184-214557bea8dc",
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "We want to use the latest image after sorting.",
        "createdAt" : "2020-06-02T16:32:49Z",
        "updatedAt" : "2020-06-02T16:32:50Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d79f0c6b39b198e5478ee834a8d444e5f434a09e",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +498,502 @@\t// Pick the latest image after sorting.\n\tsort.Sort(byCreationTime(imageObjs))\n\tif len(imageObjs) > 0 {\n\t\tklog.V(4).Infof(\"found images %+v based on regex %q and family %q in project %q\", imageObjs, imageRegex, imageFamily, project)\n\t\treturn imageObjs[0].name, nil"
  },
  {
    "id" : "45e38520-a1a0-4258-aa91-ff7decde53b7",
    "prId" : 91470,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91470#pullrequestreview-422200533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4959c974-0b35-4ee7-a623-b172c460fec9",
        "parentId" : null,
        "authorId" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "body" : "It will be cleaner to put this into the function rather than outside. See #91543",
        "createdAt" : "2020-06-01T21:38:26Z",
        "updatedAt" : "2020-06-01T21:38:33Z",
        "lastEditedBy" : "76d4ae26-41c7-401e-a5bf-29ddbb8e780a",
        "tags" : [
        ]
      }
    ],
    "commit" : "58924c2de52b7eab88053622a6bb7f19787caee0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +245,249 @@\t\t\t\t\t\timageConfig.ImageRegex, imageConfig.ImageFamily, err)\n\t\t\t\t}\n\t\t\t\tif len(images) == 0 { // if we have no images we can't run anything\n\t\t\t\t\tklog.Fatalf(\"No matching images retrieved on image prefix %q and family %q: %v\",\n\t\t\t\t\t\timageConfig.ImageRegex, imageConfig.ImageFamily, err)"
  },
  {
    "id" : "d4e0a7fe-d0ea-4804-b7d0-d7984f937dbd",
    "prId" : 87003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87003#pullrequestreview-340517307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a6512d6-6685-4694-a55e-b4fae5b8f087",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Just to confirm my understanding - we are calling `continue`, which will cause us to retry the validation after the sleep?",
        "createdAt" : "2020-01-09T12:51:27Z",
        "updatedAt" : "2020-01-09T13:07:58Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "3e2774ac-955e-4604-9b89-594fa70a3973",
        "parentId" : "8a6512d6-6685-4694-a55e-b4fae5b8f087",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Correct. Since err is assigned to the outer scope/the func scope of `createInstance` it will be returned in the end of the func in case all retries fails.",
        "createdAt" : "2020-01-09T13:28:42Z",
        "updatedAt" : "2020-01-09T13:31:30Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c04ead5fb131f2f3a6847d075be8bee47eade4bf",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +652,656 @@\t\tinsertionOperation, err = computeService.ZoneOperations.Get(*project, *zone, insertionOperationName).Do()\n\t\tif err != nil {\n\t\t\tcontinue\n\t\t}\n\t\tif strings.ToUpper(insertionOperation.Status) != \"DONE\" {"
  },
  {
    "id" : "175884f9-d77a-4330-b915-8c4cf920b809",
    "prId" : 87003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87003#pullrequestreview-340517307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8841c6f3-7531-4a3e-80aa-da30b9d5a1da",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Just to confirm: This change is purely to ensure we include ALL errors in the returned error message?",
        "createdAt" : "2020-01-09T12:58:36Z",
        "updatedAt" : "2020-01-09T13:07:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "c4722450-842f-43d8-ae48-c2cd4c8d8633",
        "parentId" : "8841c6f3-7531-4a3e-80aa-da30b9d5a1da",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Yes! Since `op.Error` is a a struct, and `op.Error.Errors` is a struct with pointers to structs, a normal `fmt.Printf` will only return the slice as a list of the pointer values.\r\n\r\nSo this will end up as: `[&{Code:QUOTA_EXCEEDED Location: Message:Quota 'CPUS' exceeded. Limit: 24.0 in region europe-west6. ForceSendFields:[] NullFields:[]}]`",
        "createdAt" : "2020-01-09T13:27:26Z",
        "updatedAt" : "2020-01-09T13:31:30Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c04ead5fb131f2f3a6847d075be8bee47eade4bf",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +635,639 @@\t\t\treturn \"\", fmt.Errorf(ret)\n\t\t} else if op.Error != nil {\n\t\t\tvar errs []string\n\t\t\tfor _, insertErr := range op.Error.Errors {\n\t\t\t\terrs = append(errs, fmt.Sprintf(\"%+v\", insertErr))"
  },
  {
    "id" : "3824aeee-9c93-4847-a154-8c57c580befb",
    "prId" : 87003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87003#pullrequestreview-340517307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "107e37d3-12e3-4bbf-abb4-41ef2b4be09a",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Does assigning `err` actually do anything here?",
        "createdAt" : "2020-01-09T13:01:10Z",
        "updatedAt" : "2020-01-09T13:07:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "edaaa127-6554-41ce-90b0-ba1a2bac53e8",
        "parentId" : "107e37d3-12e3-4bbf-abb4-41ef2b4be09a",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Since err is assigned to the outer scope/the func scope of `createInstance` it will be returned in the end of the func in case all retries fails, and this is the last place it fails.",
        "createdAt" : "2020-01-09T13:29:20Z",
        "updatedAt" : "2020-01-09T13:31:30Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c04ead5fb131f2f3a6847d075be8bee47eade4bf",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +655,659 @@\t\t}\n\t\tif strings.ToUpper(insertionOperation.Status) != \"DONE\" {\n\t\t\terr = fmt.Errorf(\"instance insert operation %s not in state DONE, was %s\", name, insertionOperation.Status)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "af45dea1-2444-4927-a11f-6c0f921f3cc1",
    "prId" : 87003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87003#pullrequestreview-340517307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3debd227-ce20-44a9-934a-c8704d148d0b",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "To confirm, we are short circuiting the retry loop when we know the `insertionOperation` failed, because there's no way for that `insertionOperation` to come from failure to success, regardless of how long we wait, correct?",
        "createdAt" : "2020-01-09T13:02:59Z",
        "updatedAt" : "2020-01-09T13:07:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "5ec73096-7ad4-4e15-93b4-64cc5796339e",
        "parentId" : "3debd227-ce20-44a9-934a-c8704d148d0b",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Also, to be sure I'm understanding - the main goal of this PR is that now we will actually know the reasons why the `insertionOperation` failed, instead of simply knowing that the instance isn't running?",
        "createdAt" : "2020-01-09T13:04:01Z",
        "updatedAt" : "2020-01-09T13:07:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "95fa9433-8da5-4c8a-9a55-5286b6e0ff7f",
        "parentId" : "3debd227-ce20-44a9-934a-c8704d148d0b",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "> To confirm, we are short circuiting the retry loop when we know the insertionOperation failed, because there's no way for that insertionOperation to come from failure to success, regardless of how long we wait, correct?\r\n\r\nyes, afaik. Guess some of the gcloud folks have some more background info if that is interesting.\r\n\r\n> Also, to be sure I'm understanding - the main goal of this PR is that now we will actually know the reasons why the insertionOperation failed, instead of simply knowing that the instance isn't running?\r\n\r\nYes! The old `404 instance not found` doesn't tell anything about the reason, making it hard for developers to debug, causing huge delays in fixing the _real_ problem. :smile: ",
        "createdAt" : "2020-01-09T13:31:23Z",
        "updatedAt" : "2020-01-09T13:31:30Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c04ead5fb131f2f3a6847d075be8bee47eade4bf",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +663,667 @@\t\t\t\terrs = append(errs, fmt.Sprintf(\"%+v\", insertErr))\n\t\t\t}\n\t\t\treturn name, fmt.Errorf(\"could not create instance %s: %+v\", name, errs)\n\t\t}\n"
  },
  {
    "id" : "cca46e7c-6713-4af9-aee2-b10a0d0f1dd6",
    "prId" : 45430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45430#pullrequestreview-37318002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1077eadd-8da5-4133-8e46-ce93baa28a64",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Should we more formally organize these types by splitting into separate internal/external files?",
        "createdAt" : "2017-05-09T23:00:34Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "6636c1b6-ed4e-4ae7-ab5c-a473bb073f9c",
        "parentId" : "1077eadd-8da5-4133-8e46-ce93baa28a64",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "maybe. Why should we do it now?",
        "createdAt" : "2017-05-09T23:18:46Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ae7c5cc4-00e8-4d41-89a1-78faae1fb7be",
        "parentId" : "1077eadd-8da5-4133-8e46-ce93baa28a64",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Doesn't need to happen immediately, but often its easier to move things around when you still have a small surface area.",
        "createdAt" : "2017-05-10T14:18:40Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1b4dba4409e90b750d340d7389b289294495bf9",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +130,134 @@}\n\ntype internalGCEImage struct {\n\timage     string\n\tproject   string"
  },
  {
    "id" : "56b8a836-d58d-4b25-bd52-0a1414d0ddb8",
    "prId" : 45430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45430#pullrequestreview-38474731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41b6d600-d9f8-4330-ac51-b2324c6dbd29",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "it's a pet-peeve but I like fields in struct literals to appear in the same order as the type definition",
        "createdAt" : "2017-05-09T23:01:51Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "8ce52e6a-0be2-4309-9aae-864d23dd7182",
        "parentId" : "41b6d600-d9f8-4330-ac51-b2324c6dbd29",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : ":) ",
        "createdAt" : "2017-05-09T23:19:21Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "40d8beaf-6131-4d05-a4d5-9c315825bf64",
        "parentId" : "41b6d600-d9f8-4330-ac51-b2324c6dbd29",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "There is a bug here. If we are not using image config file, we'll not go to this line, and `resources` will be left nil.",
        "createdAt" : "2017-05-16T18:33:46Z",
        "updatedAt" : "2017-05-16T18:33:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1b4dba4409e90b750d340d7389b289294495bf9",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +210,214 @@\t\t\t\t\tmachine:   imageConfig.Machine,\n\t\t\t\t\ttests:     imageConfig.Tests,\n\t\t\t\t\tresources: &imageConfig.Resources,\n\t\t\t\t}\n\t\t\t\tif isRegex && len(images) > 1 {"
  },
  {
    "id" : "61a2e6cb-85c8-4c91-897e-e6563474d625",
    "prId" : 45430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45430#pullrequestreview-37179543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1a4c711-b764-446e-946f-b1d2ec4a4009",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "nit: single letter non-index variable (especially `i`) in a for loop made me do a double-take, even though it's technically correct in this case",
        "createdAt" : "2017-05-09T23:04:46Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "eefb9059-b291-43e1-8050-c9127764201d",
        "parentId" : "a1a4c711-b764-446e-946f-b1d2ec4a4009",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Reusing existing code. ",
        "createdAt" : "2017-05-09T23:20:16Z",
        "updatedAt" : "2017-05-13T23:36:09Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1b4dba4409e90b750d340d7389b289294495bf9",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +530,534 @@\n\tfor _, accelerator := range imageConfig.resources.Accelerators {\n\t\tif i.GuestAccelerators == nil {\n\t\t\ti.GuestAccelerators = []*compute.AcceleratorConfig{}\n\t\t\ti.Scheduling = &compute.Scheduling{"
  },
  {
    "id" : "e79b448d-28a7-41a0-872a-e01dfd9b8253",
    "prId" : 38153,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38153#pullrequestreview-12805499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdf646fb-43bb-4158-b9eb-40815e10aa90",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Parse the flags first, then use `flag.Args` instead of `os.Args`. That way it doesn't matter if the flags are specified before or after the positional argument.",
        "createdAt" : "2016-12-09T19:06:18Z",
        "updatedAt" : "2016-12-14T03:09:10Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "296b3556-0f29-4d4f-81ad-631b18a0c59d",
        "parentId" : "fdf646fb-43bb-4158-b9eb-40815e10aa90",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I parse the flag here, because I expect in the future, different subcommands may register different flags in init function.",
        "createdAt" : "2016-12-13T23:37:48Z",
        "updatedAt" : "2016-12-14T03:09:10Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "02e96df55c238e15a0c2cbd5be62d48c0a787196",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +143,147 @@\t}\n\t// Parse test flags.\n\tflag.CommandLine.Parse(os.Args[2:])\n}\n"
  }
]