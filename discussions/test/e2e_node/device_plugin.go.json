[
  {
    "id" : "221aaa27-7f62-4eb2-b3e6-56a7abf74e21",
    "prId" : 67928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67928#pullrequestreview-247730085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98627b9d-da0c-46b8-b847-2548c5575e1a",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "We can use `framework.ExpectNoError(err)` instead of `Expect(err).NotTo(BeNil())`",
        "createdAt" : "2019-06-10T17:23:45Z",
        "updatedAt" : "2019-06-21T06:11:50Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "53c0641686dc2b03fcde228581f494ac28782044",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +158,162 @@\t\t\tframework.ExpectNoError(err)\n\t\t\twaitForContainerRemoval(devicePluginPod.Spec.Containers[0].Name, devicePluginPod.Name, devicePluginPod.Namespace)\n\t\t\t_, err = f.ClientSet.CoreV1().Pods(metav1.NamespaceSystem).Get(dp.Name, getOptions)\n\t\t\te2elog.Logf(\"Trying to get dp pod after deletion. err must be non-nil. err: %v\", err)\n\t\t\tframework.ExpectError(err)"
  },
  {
    "id" : "69c872b5-5883-4cf5-a10e-5a72602df743",
    "prId" : 67928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67928#pullrequestreview-252350137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64d7ceea-9dd3-4f4d-b1e1-f340ef0d38d8",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "This log message seems a little strange for me, because line 168 expects no error but the log message seems to expect an error as `non-nil`.",
        "createdAt" : "2019-06-11T17:26:41Z",
        "updatedAt" : "2019-06-21T06:11:50Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "2d503e36-bdc2-42c2-bc28-9e28fca6e5d2",
        "parentId" : "64d7ceea-9dd3-4f4d-b1e1-f340ef0d38d8",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "addressed, changed to `ExpectError`",
        "createdAt" : "2019-06-20T15:04:06Z",
        "updatedAt" : "2019-06-21T06:11:50Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "53c0641686dc2b03fcde228581f494ac28782044",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\t\twaitForContainerRemoval(devicePluginPod.Spec.Containers[0].Name, devicePluginPod.Name, devicePluginPod.Namespace)\n\t\t\t_, err = f.ClientSet.CoreV1().Pods(metav1.NamespaceSystem).Get(dp.Name, getOptions)\n\t\t\te2elog.Logf(\"Trying to get dp pod after deletion. err must be non-nil. err: %v\", err)\n\t\t\tframework.ExpectError(err)\n"
  },
  {
    "id" : "52a84825-b6af-4313-aa1b-ea7e6f3886cb",
    "prId" : 63130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63130#pullrequestreview-117186519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9e05e93-5e83-430e-bfe4-75e03076a434",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "It might be good to check that the restart count is greater than 0",
        "createdAt" : "2018-05-03T08:21:33Z",
        "updatedAt" : "2018-05-03T18:19:44Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "bdcf6370-07e4-47e6-9b39-ffc6a4ffd9b3",
        "parentId" : "f9e05e93-5e83-430e-bfe4-75e03076a434",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "@RenaudWasTaken https://github.com/kubernetes/kubernetes/pull/63130/files#diff-fddcd07d6f1c92a33bbe2c1cf91d59f7R237 , test will fail if restart count is not greater than 0.",
        "createdAt" : "2018-05-03T08:42:13Z",
        "updatedAt" : "2018-05-03T18:19:44Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "9610e1e3-fcb2-4f42-b304-007125bc8e6d",
        "parentId" : "f9e05e93-5e83-430e-bfe4-75e03076a434",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Ah cool!",
        "createdAt" : "2018-05-03T09:17:18Z",
        "updatedAt" : "2018-05-03T18:19:44Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b953f852f535101bab1b929d4cf2a177bab70968",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\t\trestartKubelet()\n\n\t\t\tensurePodContainerRestart(f, pod1.Name, pod1.Name)\n\t\t\tBy(\"Confirming that after a kubelet restart, fake-device assignement is kept\")\n\t\t\tdevIdRestart1 := parseLog(f, pod1.Name, pod1.Name, deviceIDRE)"
  },
  {
    "id" : "93cca3ea-bcfd-4d15-a67c-0f7813b67f3c",
    "prId" : 60318,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60318#pullrequestreview-99094969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "609474b0-808a-44a4-bfb3-9a584b5d2667",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: fix indent. ",
        "createdAt" : "2018-02-24T01:20:20Z",
        "updatedAt" : "2018-02-24T01:20:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "07beac600469a2551ba92f08c2cd20ea15d02f96",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +239,243 @@\t\t\t}\n\n\t\t\tif dev.Health != pluginapi.Healthy {\n\t\t\t\treturn nil, fmt.Errorf(\"invalid allocation request with unhealthy device: %s\", requestID)\n\t\t\t}"
  },
  {
    "id" : "ff6697c3-8fb5-4cba-9983-90b1bfb5f0a5",
    "prId" : 58282,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58282#pullrequestreview-95239262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83f67b3-0e0e-4af8-9595-f82279b45e11",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Can you add a TODO in this file to test the `INIT` path?",
        "createdAt" : "2018-02-19T14:03:04Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64517cd7410166b01642efeb4a8d0374e236153",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\"k8s.io/kubernetes/test/e2e/framework\"\n\n\tpluginapi \"k8s.io/kubernetes/pkg/kubelet/apis/deviceplugin/v1beta1\"\n\tdm \"k8s.io/kubernetes/pkg/kubelet/cm/devicemanager\"\n"
  },
  {
    "id" : "d1709351-3911-442c-9122-7eb14d07136b",
    "prId" : 54792,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54792#pullrequestreview-76999741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98305ef8-e2cd-4fea-9e08-e6c64449f1e8",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "FYI, we are hoping to enable deviceplugin feature by default: https://github.com/kubernetes/kubernetes/pull/55828 which could help simplify this part.",
        "createdAt" : "2017-11-16T02:00:10Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "2a168b95-a021-49a2-8e58-e99e1872b14b",
        "parentId" : "98305ef8-e2cd-4fea-9e08-e6c64449f1e8",
        "authorId" : "784d1027-6681-40bf-820f-6ec72067791f",
        "body" : "Good!",
        "createdAt" : "2017-11-16T03:13:08Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "784d1027-6681-40bf-820f-6ec72067791f",
        "tags" : [
        ]
      }
    ],
    "commit" : "671c4eb2b79941983d89ef5b07b25b0d546504ad",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\ttempSetCurrentKubeletConfig(f, func(initialConfig *kubeletconfig.KubeletConfiguration) {\n\t\t\tinitialConfig.FeatureGates[string(features.DevicePlugins)] = true\n\t\t})\n\n\t\tIt(\"Verifies the Kubelet device plugin functionality.\", func() {"
  },
  {
    "id" : "a4d10ae1-c278-4ea8-8e98-8b2c12cb3678",
    "prId" : 54792,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54792#pullrequestreview-86300659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "510848bf-0ccd-4116-9d83-983975cf9377",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Is it possible that we define a few helper functions in this file: setupLocal (creates device files and mounted directories. called from BeforeEach()), cleanupLocal(removes any created files and mount directories. called from AfterEach()), allocFunc (creates AllocateResponse with some test DeviceSpec, Mounts, and Envs. for simplicity, we can use const mount points and envs that are easier to verify in user pod), and podRECMD(returns a cmd string that allows us to verify test DeviceSpec, Mounts, and Envs in the user pod).",
        "createdAt" : "2017-12-28T00:09:49Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "cb84f624-d91f-4d26-88eb-ff1919493731",
        "parentId" : "510848bf-0ccd-4116-9d83-983975cf9377",
        "authorId" : "784d1027-6681-40bf-820f-6ec72067791f",
        "body" : "I add a allocFunc() in stub_device_plugin as you suggested above :)",
        "createdAt" : "2017-12-29T10:47:42Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "784d1027-6681-40bf-820f-6ec72067791f",
        "tags" : [
        ]
      },
      {
        "id" : "7df23dde-e182-47d9-9c76-3c7a74a2ab31",
        "parentId" : "510848bf-0ccd-4116-9d83-983975cf9377",
        "authorId" : "784d1027-6681-40bf-820f-6ec72067791f",
        "body" : "And I think put these creation/deletion together in `allocFunc()` maybe better.\r\nThis PR is a basic test without verifying `DeviceSpec`, `Mounts`, and `Envs`, maybe be we can extend this podRECMD later.",
        "createdAt" : "2017-12-29T10:56:20Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "784d1027-6681-40bf-820f-6ec72067791f",
        "tags" : [
        ]
      },
      {
        "id" : "b6973c1e-d7de-4001-9b4e-f21b56fb11d1",
        "parentId" : "510848bf-0ccd-4116-9d83-983975cf9377",
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Sounds a reasonable plan to verify container runtime setting in a follow-up pr.",
        "createdAt" : "2018-01-03T06:20:02Z",
        "updatedAt" : "2018-01-11T06:42:08Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "671c4eb2b79941983d89ef5b07b25b0d546504ad",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@\t\t})\n\n\t\tIt(\"Verifies the Kubelet device plugin functionality.\", func() {\n\n\t\t\tBy(\"Wait for node is ready\")"
  }
]