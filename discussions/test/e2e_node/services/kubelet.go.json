[
  {
    "id" : "ad903621-7d3b-440c-81ea-bab2aa622529",
    "prId" : 97028,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97028#pullrequestreview-659229819",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "can another variable be used to store the flag state instead of framework.TestContext.RestartKubelet ?",
        "createdAt" : "2020-12-03T21:22:37Z",
        "updatedAt" : "2020-12-03T21:22:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "09237044-11ad-40a8-90b9-4fa5c73e115f",
        "parentId" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "Reading the flag from the file init is one option, I'm not sure if is a pattern we want to propagate here:\r\n\r\n```\r\nfunc init() {\r\n\tflag.Var(&kubeletArgs, \"kubelet-flags\", \"Kubelet flags passed to kubelet, this will override default kubelet flags in the test. Flags specified in multiple kubelet-flags will be concatenate.\")\r\n\tflag.BoolVar(&genKubeletConfigFile, \"generate-kubelet-config-file\", true, \"The test runner will generate a Kubelet config file containing test defaults instead of passing default flags to the Kubelet.\")\r\n \tflag.BoolVar(&restartKubelet, \"restart-kubelet\", true, \"If true, restart Kubelet unit when the process is killed.\")\r\n\r\n}\r\n```",
        "createdAt" : "2020-12-21T20:57:43Z",
        "updatedAt" : "2020-12-21T20:57:43Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "b32b2663-75ad-4280-8bd7-bbb42bc95bcb",
        "parentId" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "authorId" : "d8a01e28-9d15-4495-9c11-528752d69db2",
        "body" : "It seems to be the recommended way to do `init()` here and use a local variable for the `restart-kubelet` flag based on `test/e2e/framework/test_context.go` ln#49-76?",
        "createdAt" : "2021-04-21T00:39:31Z",
        "updatedAt" : "2021-04-21T00:39:45Z",
        "lastEditedBy" : "d8a01e28-9d15-4495-9c11-528752d69db2",
        "tags" : [
        ]
      },
      {
        "id" : "9d2ec70e-2c39-4704-9092-220b11c8ac74",
        "parentId" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "The point is to decouple specific node flags from the main e2e framework context. But adding these flags on the init() here without further context it's only augmenting the mess.",
        "createdAt" : "2021-05-12T16:47:54Z",
        "updatedAt" : "2021-05-12T16:47:55Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "baaf7987-fbc5-4e82-bcaf-0f53967b2304",
        "parentId" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@neolit123 we opened an issue to move this TestContext.RestartKubelet to a proper place, for this specific PR, we are keeping in the global one, wdyt?",
        "createdAt" : "2021-05-13T16:55:12Z",
        "updatedAt" : "2021-05-13T16:55:12Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "8685c7f6-e4c1-4b45-9d3f-3469f1192807",
        "parentId" : "9bfc0eb7-6080-46ae-a539-92f6c993e1d3",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "SGTM.",
        "createdAt" : "2021-05-13T19:26:37Z",
        "updatedAt" : "2021-05-13T19:26:37Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "00da68dbc25d9d12b05200b9207abc14dde71246",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +303,307 @@\n\tcmd := exec.Command(cmdArgs[0], cmdArgs[1:]...)\n\trestartOnExit := framework.TestContext.RestartKubelet\n\tserver := newServer(\n\t\t\"kubelet\","
  },
  {
    "id" : "4cb579f7-02bf-49f8-9943-376c7232fc8f",
    "prId" : 94723,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94723#pullrequestreview-490118774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0dfe66f-e544-47fe-92ef-ecbd768d9fdd",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Does the username here need to match the user name in the server-side token file?",
        "createdAt" : "2020-09-17T00:20:39Z",
        "updatedAt" : "2020-10-19T16:13:20Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "d321ac52a2513d5416053e179c5dcdf5e0378d0e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +360,364 @@kind: Config\nusers:\n- name: kubelet\n  user:\n    token: %s"
  },
  {
    "id" : "25f147af-ef54-4b07-a322-1cfe8f0de042",
    "prId" : 89897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89897#pullrequestreview-388461428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb572910-4e53-4cc5-a382-0a5ae6fd5913",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "thanks for updating this to ensure its explicit, i think we had previously assumed this was done globally via systemd config.",
        "createdAt" : "2020-04-06T17:29:09Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "26d94ad628691a61de52b67a05902eff4cf1753d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\tcmdArgs = append(cmdArgs,\n\t\t\tsystemdRun,\n\t\t\t\"-p\", \"Delegate=true\",\n\t\t\t\"-p\", \"CPUAccounting=true\",\n\t\t\t\"-p\", \"MemoryAccounting=true\","
  },
  {
    "id" : "069cc471-c02a-40e3-bb73-eedd5652876b",
    "prId" : 62101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62101#pullrequestreview-111593396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a86ecbe-008f-4525-ba92-eaf939da472d",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "we should also make sure boolean flags are handled properly in `addKubeletConfigFlags`, below\r\nhttps://github.com/kubernetes/kubernetes/blob/5fa4f2f6ec7669c7f9ee6e290bc91501e8fd965b/test/e2e_node/services/kubelet.go#L352-L359\r\n",
        "createdAt" : "2018-04-06T16:41:26Z",
        "updatedAt" : "2018-04-12T12:20:18Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "e9ce5f80-17bd-4625-8d47-85cc2f57ba77",
        "parentId" : "8a86ecbe-008f-4525-ba92-eaf939da472d",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "Thank you for pointing this out. Will fix by this patch and push again:\r\n```\r\n--- a/test/e2e_node/services/kubelet.go\r\n+++ b/test/e2e_node/services/kubelet.go\r\n@@ -354,7 +354,7 @@ func addKubeletConfigFlags(cmdArgs *[]string, kc *kubeletconfig.KubeletConfigura\r\n        fs := pflag.NewFlagSet(\"kubelet\", pflag.ExitOnError)\r\n        options.AddKubeletConfigFlags(fs, kc)\r\n        for _, name := range flags {\r\n-               *cmdArgs = append(*cmdArgs, \"--\"+name, fs.Lookup(name).Value.String())\r\n+               *cmdArgs = append(*cmdArgs, fmt.Sprintf(\"--%s=%s\", name, fs.Lookup(name).Value.String()))\r\n        }\r\n }\r\n```",
        "createdAt" : "2018-04-12T12:14:48Z",
        "updatedAt" : "2018-04-12T12:20:18Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e3d28b30f7e609606c42c9cdc4116bc9024df64",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\t\"--root-dir\", KubeletRootDirectory,\n\t\t\"--v\", LOG_VERBOSITY_LEVEL, \"--logtostderr\",\n\t\t\"--allow-privileged=true\",\n\t)\n"
  },
  {
    "id" : "32d285d5-666c-47da-a379-76361a1f9335",
    "prId" : 57638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57638#pullrequestreview-87296836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "702e9530-fe43-4f05-aff2-14c5d3ac817d",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "There is a helper in util.go, right?",
        "createdAt" : "2018-01-04T19:15:08Z",
        "updatedAt" : "2018-01-05T00:47:12Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "73f7bd6f-a980-4ac8-9ada-66924a925be3",
        "parentId" : "702e9530-fe43-4f05-aff2-14c5d3ac817d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "ah, yes",
        "createdAt" : "2018-01-05T00:21:25Z",
        "updatedAt" : "2018-01-05T00:47:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "f3e49398-87fe-454a-9ac3-6871a8c12034",
        "parentId" : "702e9530-fe43-4f05-aff2-14c5d3ac817d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "oh, import cycle to use anything in util from services, apparently:\r\n```\r\n# k8s.io/kubernetes/test/e2e_node\r\nimport cycle not allowed in test\r\npackage k8s.io/kubernetes/test/e2e_node (test)\r\n\timports k8s.io/kubernetes/test/e2e_node/services\r\n\timports k8s.io/kubernetes/test/e2e_node\r\n```",
        "createdAt" : "2018-01-05T00:31:30Z",
        "updatedAt" : "2018-01-05T00:47:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "a33443d9-c565-4954-b0e5-fe3d1b16cbb6",
        "parentId" : "702e9530-fe43-4f05-aff2-14c5d3ac817d",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "OK. I'm fine with this for now. We could probably add a new package, `kubeconfig_util` or something just put kubelet config util functions there, so that both test and services can use it.\r\nBut I'm fine with doing that in the future when we have more duplicated kube config related util functions.",
        "createdAt" : "2018-01-08T18:30:21Z",
        "updatedAt" : "2018-01-08T18:30:21Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "90814b3a9768791e262840e5c71e0401d37b832c",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +378,382 @@}\n\nfunc newKubeletConfigJSONEncoder() (runtime.Encoder, error) {\n\t_, kubeletCodecs, err := scheme.NewSchemeAndCodecs()\n\tif err != nil {"
  },
  {
    "id" : "f6a16e63-8894-487c-8c63-1d31741cf8ce",
    "prId" : 56250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56250#pullrequestreview-83783518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4a6ff22-dcd6-4999-b84a-e80bfa14bdda",
        "parentId" : null,
        "authorId" : "784d1027-6681-40bf-820f-6ec72067791f",
        "body" : "nit: the --hyperkube-image option must be set if we run kubelet in a docker container",
        "createdAt" : "2017-12-12T12:01:00Z",
        "updatedAt" : "2017-12-12T12:02:37Z",
        "lastEditedBy" : "784d1027-6681-40bf-820f-6ec72067791f",
        "tags" : [
        ]
      },
      {
        "id" : "b306e3e9-ca44-4f83-96a7-c56e61f12702",
        "parentId" : "d4a6ff22-dcd6-4999-b84a-e80bfa14bdda",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "The error message pops up only when the ``--containerized`` flag is set. Later, the ``--hyperkube-image`` can point to a container of non-docker container runtime. There is always a space for ambiguity. However, the ``hyperkube`` + ``image`` connection is currently strongly voting for containerized run, so the confusion will be minimal. But yeah, updating the message would help to make the statement clearer :).",
        "createdAt" : "2017-12-15T10:15:51Z",
        "updatedAt" : "2017-12-15T10:16:26Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "88a00aa9-8258-4691-9aac-4ca420fb6efd",
        "parentId" : "d4a6ff22-dcd6-4999-b84a-e80bfa14bdda",
        "authorId" : "784d1027-6681-40bf-820f-6ec72067791f",
        "body" : "SGTM.",
        "createdAt" : "2017-12-15T11:34:33Z",
        "updatedAt" : "2017-12-15T11:34:33Z",
        "lastEditedBy" : "784d1027-6681-40bf-820f-6ec72067791f",
        "tags" : [
        ]
      }
    ],
    "commit" : "607e863f85005b06b754b6c511e0f48bdca297bb",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +99,103 @@func (e *E2EServices) startKubelet() (*server, error) {\n\tif kubeletContainerized && hyperkubeImage == \"\" {\n\t\treturn nil, fmt.Errorf(\"the --hyperkube-image option must be set\")\n\t}\n"
  },
  {
    "id" : "da3f071d-8f73-4849-b1b3-4f2cd451144c",
    "prId" : 56097,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56097#pullrequestreview-82672921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32fbc94d-b0ca-48cf-882e-3fb0f4d6b94c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This seems unnecessarily complicated. Can we just have a \"test with flags\" and \"test from file\" option?",
        "createdAt" : "2017-11-22T03:45:59Z",
        "updatedAt" : "2017-11-22T03:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c8399470-d5c4-4e2d-85ec-3b7fb04a28bc",
        "parentId" : "32fbc94d-b0ca-48cf-882e-3fb0f4d6b94c",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Agree it's too complicated, simpler solution in #56995, though still not as simple as a flags vs. file option.",
        "createdAt" : "2017-12-11T23:12:24Z",
        "updatedAt" : "2017-12-11T23:12:24Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbebb6145000676fdf9a58c19ca1f180f0b80f8b",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +216,220 @@\t// If the config file feature gate is enabled, generate the file and remove the flags it applies to\n\tif utilfeature.DefaultFeatureGate.Enabled(features.KubeletConfigFile) {\n\t\tkc, other, err := splitKubeletConfigArgs(kubeArgs)\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "dfe3e640-892e-4946-95a9-9be2a46cc43e",
    "prId" : 56097,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56097#pullrequestreview-78329042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4556eff4-0276-4224-b9b8-c8f5b60bd21f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Need to make any relative file path references either absolute or relative to the target directory for the config file",
        "createdAt" : "2017-11-22T03:47:44Z",
        "updatedAt" : "2017-11-22T03:47:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbebb6145000676fdf9a58c19ca1f180f0b80f8b",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +302,306 @@\tif err != nil {\n\t\treturn \"\", err\n\t}\n\tif err := scheme.Convert(internal, versioned, nil); err != nil {\n\t\treturn \"\", err"
  },
  {
    "id" : "83bb0777-629d-438e-81f8-43d98b63abdd",
    "prId" : 51634,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51634#pullrequestreview-60438044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7ff6c12-7083-436a-b57f-5af79a11cdca",
        "parentId" : null,
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "If we set it here we don't need the change in `test/e2e_node/jenkins/jenkins-pull.properties`?\r\n\r\nActually, if we don't set it here there are other `properties` files in `test/e2e_node/jenkins/` need to be changed.",
        "createdAt" : "2017-09-01T15:44:24Z",
        "updatedAt" : "2017-09-01T21:51:49Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      },
      {
        "id" : "72639549-c8f8-4431-a08b-766ab5e502b6",
        "parentId" : "d7ff6c12-7083-436a-b57f-5af79a11cdca",
        "authorId" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "body" : "Ok, thanks. Based on this advice (and because it made the e2e node test pass) I've removed the jenkins config and set the flag here.",
        "createdAt" : "2017-09-04T15:23:07Z",
        "updatedAt" : "2017-09-04T15:23:07Z",
        "lastEditedBy" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "765374ce03213f789559314200175aba1d47c48f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +156,160 @@\t\t\"--pod-manifest-path\", manifestPath,\n\t\t\"--file-check-frequency\", \"10s\", // Check file frequently so tests won't wait too long\n\t\t\"--docker-disable-shared-pid=false\",\n\t\t// Assign a fixed CIDR to the node because there is no node controller.\n\t\t//"
  },
  {
    "id" : "b6b8c77b-0ce7-4de0-9d37-783e112d2b02",
    "prId" : 40050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40050#pullrequestreview-30360330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "It'd be great if we could remove this and connect securely. ",
        "createdAt" : "2017-03-07T18:01:50Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "7c96bdef-595f-4e78-a304-e0c61fb67d68",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "@Random-Liu is the intention to eventually do this, or is this not a big deal because this suite will only ever connect over localhost? I'd be scared if we were worried about something sniffing lo...",
        "createdAt" : "2017-03-30T13:57:14Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "8d8f035d-be2e-45a0-a7a7-fa499623c750",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we don't want real deployments running with unsecured localhost, so we want to run our tests with the fully secured environment to flush out assumptions that unsecured localhost is available",
        "createdAt" : "2017-03-30T14:23:00Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "238f6fc5-8e34-4f43-8a34-80386c39cd9c",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Even if all the tests run with secured localhost, that just validates that secured localhost is available. We'd need a test that explicitly tries to use unsecured localhost to ensure it is actually locked down.",
        "createdAt" : "2017-03-30T18:17:58Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "613cbf43-d7c0-4dca-9db3-6e1fd7738592",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "running with unsecured localhost disabled guarantees all the tested components take and respect secured configurations, and don't assume cluster-admin by virtue of using unsecured access",
        "createdAt" : "2017-03-30T20:19:10Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "689bf294-d933-46ba-9c65-b594c4f48e65",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I think we're on the same page. My point was that changing things like this line won't disable unsecured localhost, we would have to do that somewhere else and see the things still using it start to fail.",
        "createdAt" : "2017-03-31T22:35:37Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "a6de7bd1-fe9a-44c6-93cf-00bfdf17993e",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Ideally we'd also have a test that tries to use unsecured localhost and is expected to fail, so we get a signal if it is ever re-enabled too.",
        "createdAt" : "2017-03-31T22:36:31Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "c4913dbb-01f2-4955-85b5-cf07c578b0c2",
        "parentId" : "ed3ed0cc-f548-42bf-9faa-1e65b7400e1d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Filed #43931 and #43932 to track this, please don't block this PR on the issue of unsecured localhost, that can be handled separately.",
        "createdAt" : "2017-03-31T22:46:12Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "38aee0464dbcfb2ba22392537ee8f714e991ea1c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +223,227 @@- cluster:\n    server: ` + getAPIServerClientURL() + `\n    insecure-skip-tls-verify: true\n  name: local\ncontexts:"
  },
  {
    "id" : "b30d4453-7d73-45c8-8df6-4311113c9003",
    "prId" : 40050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40050#pullrequestreview-32954056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3799360-8e8a-4ed2-81dd-01777dc0e5cf",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is the current working dir a good place for temp test files? I'd expect it to not be writeable sometimes, to result in a dirty git tree sometimes, and to conflict if multiple tests are run in parallel",
        "createdAt" : "2017-04-04T02:18:59Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "19d78ccc-1772-4ccf-a496-43b8c1127678",
        "parentId" : "e3799360-8e8a-4ed2-81dd-01777dc0e5cf",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "CWD for e2e_node services runner should be under the time-stamped dir that corresponds to an individual test run, which should always be writable because it's under `/tmp`.\r\n\r\n Multiple Kubelets should never be run in parallel on the same node, even if multiple tests are being run in parallel.\r\n\r\nWhy would dirty git trees be an issue here?",
        "createdAt" : "2017-04-17T00:16:15Z",
        "updatedAt" : "2017-07-24T18:03:11Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "38aee0464dbcfb2ba22392537ee8f714e991ea1c",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +239,243 @@\nfunc kubeconfigCWDPath() (string, error) {\n\tcwd, err := os.Getwd()\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to get current working directory: %v\", err)"
  },
  {
    "id" : "e6533678-d094-47a2-8fdb-813838c407b2",
    "prId" : 36919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36919#pullrequestreview-8980195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af35e4e7-b6be-4959-8f63-2b665563546f",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "nit: missing boilerplate\n",
        "createdAt" : "2016-11-16T23:20:44Z",
        "updatedAt" : "2016-11-17T18:18:17Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "77b9ebeb-75d0-4938-a099-d0ff48ee5582",
        "parentId" : "af35e4e7-b6be-4959-8f63-2b665563546f",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done\n",
        "createdAt" : "2016-11-17T08:40:45Z",
        "updatedAt" : "2016-11-17T18:18:17Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "87a9d94f246cc93601fefa883e4c5b07d551cf41",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage services\n\nimport ("
  }
]