[
  {
    "id" : "684678e3-edec-4c4d-9200-d99d03da4231",
    "prId" : 85522,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85522#pullrequestreview-324227019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46c45a2a-689d-492c-b279-f2dd7bda14fe",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "We need to use tabs instead of spaces for passing pull-kubernetes-verify job as\r\n```\r\ndiff -u ./test/e2e_node/density_test.go.orig ./test/e2e_node/density_test.go\r\n--- ./test/e2e_node/density_test.go.orig\t2019-11-27 05:38:16.360037412 +0000\r\n+++ ./test/e2e_node/density_test.go\t2019-11-27 05:38:16.360037412 +0000\r\n@@ -536,16 +536,16 @@\r\n // verifyLatencyWithinThreshold verifies whether 50, 90 and 99th percentiles of a latency metric are\r\n // within the expected threshold.\r\n func verifyLatencyWithinThreshold(threshold, actual e2emetrics.LatencyMetric, metricName string) error {\r\n-        if actual.Perc50 > threshold.Perc50 {\r\n-                return fmt.Errorf(\"too high %v latency 50th percentile: %v\", metricName, actual.Perc50)\r\n-        }\r\n-        if actual.Perc90 > threshold.Perc90 {\r\n-                return fmt.Errorf(\"too high %v latency 90th percentile: %v\", metricName, actual.Perc90)\r\n-        }\r\n-        if actual.Perc99 > threshold.Perc99 {\r\n-                return fmt.Errorf(\"too high %v latency 99th percentile: %v\", metricName, actual.Perc99)\r\n-        }\r\n-        return nil\r\n+\tif actual.Perc50 > threshold.Perc50 {\r\n+\t\treturn fmt.Errorf(\"too high %v latency 50th percentile: %v\", metricName, actual.Perc50)\r\n+\t}\r\n+\tif actual.Perc90 > threshold.Perc90 {\r\n+\t\treturn fmt.Errorf(\"too high %v latency 90th percentile: %v\", metricName, actual.Perc90)\r\n+\t}\r\n+\tif actual.Perc99 > threshold.Perc99 {\r\n+\t\treturn fmt.Errorf(\"too high %v latency 99th percentile: %v\", metricName, actual.Perc99)\r\n+\t}\r\n+\treturn nil\r\n }\r\n```",
        "createdAt" : "2019-11-28T11:32:22Z",
        "updatedAt" : "2019-12-03T06:54:05Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd7859901c66736028cec9f673025b1a98c6d2a0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +547,551 @@\t}\n\treturn nil\n}\n\n// logAndVerifyLatency verifies that whether pod creation latency satisfies the limit."
  },
  {
    "id" : "dd6a39f8-4725-4740-af43-de87b16f9ca2",
    "prId" : 58980,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58980#pullrequestreview-92396632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04f18280-5550-47be-8e9a-076fe49ba6de",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Why not include the description directly in the `It(...)`?",
        "createdAt" : "2018-01-29T21:25:02Z",
        "updatedAt" : "2018-01-29T21:27:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "8c66a729-7188-4cde-892e-98647cd79dd8",
        "parentId" : "04f18280-5550-47be-8e9a-076fe49ba6de",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I think it's just too long, so the initial author make it a separate variable.",
        "createdAt" : "2018-01-29T21:40:15Z",
        "updatedAt" : "2018-01-29T21:40:15Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "46524cfc-ee71-4f30-ad60-7892dcbcac90",
        "parentId" : "04f18280-5550-47be-8e9a-076fe49ba6de",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "It would be better to just split the string with `\"\"+\"\"` notation, than to make a new variable.",
        "createdAt" : "2018-01-29T23:25:46Z",
        "updatedAt" : "2018-01-29T23:25:46Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "8d491c81-eadb-4a47-a858-df50fbb47db4",
        "parentId" : "04f18280-5550-47be-8e9a-076fe49ba6de",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "We can clean this up in the future, as this pattern is repeated across the test we should be consistent with the cleanup, and I want to merge this to fix the failing density test, without blocking on nits.",
        "createdAt" : "2018-01-29T23:33:00Z",
        "updatedAt" : "2018-01-29T23:33:00Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "244e5176-491d-4f12-b4cd-b61140b90d12",
        "parentId" : "04f18280-5550-47be-8e9a-076fe49ba6de",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Offline discussed. There are several `desc` used in this way in this test and resource_usage_test.go.\r\n\r\nWe may want to cleanup them all together. :)",
        "createdAt" : "2018-01-29T23:33:09Z",
        "updatedAt" : "2018-01-29T23:33:11Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d5157732740f5c854da542d68405c70402dbd07",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\t\titArg := testArg\n\t\t\tContext(\"\", func() {\n\t\t\t\tdesc := fmt.Sprintf(\"latency/resource should be within limit when create %d pods with %v interval (QPS %d) [Benchmark]\", itArg.podsNr, itArg.interval, itArg.APIQPSLimit)\n\t\t\t\t// The latency caused by API QPS limit takes a large portion (up to ~33%) of e2e latency.\n\t\t\t\t// It makes the pod startup latency of Kubelet (creation throughput as well) under-estimated."
  },
  {
    "id" : "76bd26e1-ec01-4f79-8258-0593c87e72c9",
    "prId" : 30568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c770546-f3ea-461f-a85d-935d156becdd",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Why no benchmark test for sequence test? It seems that it's straight forward to add it. :)\n",
        "createdAt" : "2016-08-14T23:37:02Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "8cdf48d7-4d08-47e8-9344-b8600281bd9e",
        "parentId" : "1c770546-f3ea-461f-a85d-935d156becdd",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-08-15T00:17:32Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2af00f8213fe30bb41baace52292b7907c2c745",
    "line" : null,
    "diffHunk" : "@@ -1,1 +183,187 @@\n\t\t\t\tBy(\"Verifying resource\")\n\t\t\t\tprintAndVerifyResource(f, rc, itArg.cpuLimits, itArg.memLimits, true)\n\t\t\t})\n\t\t}"
  },
  {
    "id" : "b4807399-c372-47ac-86d7-7b4b6a8e1b55",
    "prId" : 30568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43c53682-6f68-4a4c-8ab6-5ba4407ac8b9",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Use defer to clean up, or else things will not be cleaned up after fatal error such as `Failf` or `Eventually` failure.\n",
        "createdAt" : "2016-08-15T00:02:12Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "084e870a-d3ca-4406-925c-5c078d8921ab",
        "parentId" : "43c53682-6f68-4a4c-8ab6-5ba4407ac8b9",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-08-15T00:34:08Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2af00f8213fe30bb41baace52292b7907c2c745",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +252,256 @@\t// the controller watches the change of pod status\n\tcontroller := newInformerWatchPod(f, mutex, watchTimes, podType)\n\tgo controller.Run(stopCh)\n\tdefer close(stopCh)\n"
  },
  {
    "id" : "15cfd3c2-b7f7-43c4-9c69-0319c294976e",
    "prId" : 30568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71a33767-3563-4039-845a-2ed6c88a8b20",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "defer\n",
        "createdAt" : "2016-08-15T00:02:34Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "342e2f71-c0ff-4aba-b8bb-8ca97be0bd4d",
        "parentId" : "71a33767-3563-4039-845a-2ed6c88a8b20",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-08-15T00:36:34Z",
        "updatedAt" : "2016-08-15T01:56:13Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2af00f8213fe30bb41baace52292b7907c2c745",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +261,265 @@\ttime.Sleep(sleepBeforeCreatePods)\n\n\trc.Start()\n\tdefer rc.Stop()\n"
  },
  {
    "id" : "1ab621db-cb6d-4ea2-a488-6887d2c87d92",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07953d55-0cea-4d8c-afbd-10eb02246773",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The boilerplate is wrong. If you compare this with other files in the repository, you'll notice that an empty line missing before an after the URL. They probably got lost during copy/paste. Need to fix that to pass the tests. \n",
        "createdAt" : "2016-07-29T18:20:41Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "df2dc19f-428d-464e-9f76-aa1728710294",
        "parentId" : "07953d55-0cea-4d8c-afbd-10eb02246773",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-07-29T22:09:45Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +4,8 @@Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0"
  },
  {
    "id" : "829361ad-43ba-445e-bfba-2a0c856dd07c",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f142eefb-75f3-4d0a-ae5c-d63b4d23acda",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Do you have any idea what kubelet was doing that it didn't respond immediately? If there is any start up delay, we should either fix it, or add the workaround in the test framework itself. I don't think we should do this per test.\n",
        "createdAt" : "2016-07-29T19:16:46Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "db72e4e3-7ac2-4bd9-aa91-983f4a2a7c3a",
        "parentId" : "f142eefb-75f3-4d0a-ae5c-d63b4d23acda",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I agree this sleep seems odd... I would be curious what was needing to settle.\n",
        "createdAt" : "2016-07-29T20:07:32Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@\t\t\t\t// does not response to pod creation immediately. Creating the first pod has a delay around 5s.\n\t\t\t\t// The node status has been `ready' so `wait and check node being ready' does not help here.\n\t\t\t\t// Now wait here for a grace period to have `syncLoop' be ready\n\t\t\t\ttime.Sleep(sleepBeforeCreatePods)\n"
  },
  {
    "id" : "1b53c22d-46cb-49ee-a0e4-a17a468e716c",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb7df33b-5ba5-4e00-a81d-95031dd2af77",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I'd prefer defining the pod startup throughput (pods per second) and convert it into an interval. Pod throughput is more readable.\n",
        "createdAt" : "2016-07-29T19:27:50Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9f9b0ce1-2794-4608-946a-a10bbe89f5de",
        "parentId" : "eb7df33b-5ba5-4e00-a81d-95031dd2af77",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "The problem is that the `throughput' in configuration may be different from the throughput measured from result. For example, if the interval is zero, the throughput perhaps is infinite. In this case how to define it?\n",
        "createdAt" : "2016-07-29T22:06:41Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      },
      {
        "id" : "7662dcc1-c9c1-4e22-9cdc-383ca1a24255",
        "parentId" : "eb7df33b-5ba5-4e00-a81d-95031dd2af77",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "If it was a naming issue, just name it more precisely. E.g., `targetThroughput`\n\nI am not sure we should have a 0 interval anyway...\n",
        "createdAt" : "2016-08-01T23:22:10Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\t\t{\n\t\t\t\tpodsNr:   10,\n\t\t\t\tinterval: 0 * time.Millisecond,\n\t\t\t\tcpuLimits: framework.ContainersCPUSummary{\n\t\t\t\t\tstats.SystemContainerKubelet: {0.50: 0.20, 0.95: 0.30},"
  },
  {
    "id" : "846b4590-251d-49fa-a7f6-ab899c7b81a3",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d614772-a216-4018-989d-a0bc6452edde",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "what's `bgPodsNr`? Background pods? Add a comment for it.\n",
        "createdAt" : "2016-07-29T19:30:19Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "513e8425-156e-4799-a185-f1aa7889daaa",
        "parentId" : "2d614772-a216-4018-989d-a0bc6452edde",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "ACK\n",
        "createdAt" : "2016-07-29T22:23:40Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +251,255 @@\tpodsNr int\n\t// number of background pods\n\tbgPodsNr int\n\t// interval between creating pod (rate control)\n\tinterval time.Duration"
  },
  {
    "id" : "ffcf4a1b-dfcb-40fd-b59c-4299f8916c42",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78df1ada-60b5-44d6-a3b3-777be76cd897",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What does background pods do?\n",
        "createdAt" : "2016-07-29T19:30:57Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b11b37f0-30ad-4484-ada8-866c58a05a7a",
        "parentId" : "78df1ada-60b5-44d6-a3b3-777be76cd897",
        "authorId" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "body" : "The test measures the creation performance when there are already many pods running on the node. Do we need this?\n",
        "createdAt" : "2016-07-29T22:20:39Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "4c1cd2fc-9999-4ffa-a00a-a36ef62dcfe3",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\t\t\trm := NewResourceCollector(monitoringInterval)\n\n\t\t\t\tBy(\"Creating a batch of background pods\")\n\t\t\t\t// creatBatch is synchronized\n\t\t\t\t// all pods are running when it returns"
  },
  {
    "id" : "8ed02c02-0323-4d30-b061-7fec34fdc715",
    "prId" : 29764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05237d83-aaee-4619-9da4-37ae7ac2b1cd",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "nit: synchronized\n",
        "createdAt" : "2016-07-29T20:05:19Z",
        "updatedAt" : "2016-08-02T16:29:16Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "04f83c79e7cfebe5c625f091ef151a6de12d550b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@\tconst (\n\t\t// the data collection time of `resource collector' and the standalone cadvisor\n\t\t// is not synchronizated. Therefore `resource collector' may miss data or\n\t\t// collect duplicated data\n\t\tmonitoringInterval    = 500 * time.Millisecond"
  }
]