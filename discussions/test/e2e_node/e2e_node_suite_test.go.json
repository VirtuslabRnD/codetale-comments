[
  {
    "id" : "e06e09cb-62cc-4b05-af3c-21628d59df0d",
    "prId" : 98025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98025#pullrequestreview-568421116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8528508-cd76-4c98-a35c-0c2ba7c10427",
        "parentId" : null,
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "Thanks for doing this.\r\nI see the test failures like https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-node-kubelet-features/1349429706050506752 as an example.\r\nOne of failed tests sets `hostFQDN` like https://github.com/kubernetes/kubernetes/blob/5c58b222516c0c8547d2f699b7582db9df09df8d/test/e2e_node/pod_hostnamefqdn_test.go#L117\r\nIf `framework.TestContext.ClusterDNSDomain` becomes empty like this PR, the hostFQDN becomes like `foo-pod.foo-subdomain.foo-ns.svc.` without `cluster.local`.\r\nThe FQDN is different from common cases I feel like https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/\r\nCan we enable`cluster.local` instead?\r\n\r\n/cc @oomichi ",
        "createdAt" : "2021-01-13T20:01:30Z",
        "updatedAt" : "2021-01-13T20:02:14Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      },
      {
        "id" : "5c5d29e3-54d5-4408-9ce0-2ffdc1e0ad3c",
        "parentId" : "a8528508-cd76-4c98-a35c-0c2ba7c10427",
        "authorId" : "36d7f8b5-3497-43b0-96eb-612a05dccdf8",
        "body" : "@oomichi we could, although I am hesitant to require that for these tests to run successfully as that is not the default for the kubelet. If we were to set to `cluster.local` we would do so here: https://github.com/kubernetes/test-infra/blob/c094f147c10f9b667472e81a5b36e12a61446e37/config/jobs/kubernetes/sig-node/node-kubelet.yaml#L127",
        "createdAt" : "2021-01-14T01:07:33Z",
        "updatedAt" : "2021-01-14T01:07:34Z",
        "lastEditedBy" : "36d7f8b5-3497-43b0-96eb-612a05dccdf8",
        "tags" : [
        ]
      },
      {
        "id" : "c5d0ca32-4fa6-4ba9-b1a9-ef67da834b86",
        "parentId" : "a8528508-cd76-4c98-a35c-0c2ba7c10427",
        "authorId" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "body" : "I see, thanks for your explanation.\r\nI guess it is ideal to change the default value to \"cluster.local\" on kubelet side at the end of day, but current change is fine for me to solve test failure at this time.\r\n\r\n/triage accepted\r\n/lgtm\r\n",
        "createdAt" : "2021-01-14T16:44:00Z",
        "updatedAt" : "2021-01-14T16:44:01Z",
        "lastEditedBy" : "c2df03b8-26df-4018-9f8f-4ddea7f8f6cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ca31f52447013794de436f44c7c04a78cd60f4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +85,89 @@\tflags.Var(cliflag.NewMapStringString(&framework.TestContext.ExtraEnvs), \"extra-envs\", \"The extra environment variables needed for node e2e tests. Format: a list of key=value pairs, e.g., env1=val1,env2=val2\")\n\tflags.StringVar(&framework.TestContext.SriovdpConfigMapFile, \"sriovdp-configmap-file\", \"\", \"The name of the SRIOV device plugin Config Map to load.\")\n\tflag.StringVar(&framework.TestContext.ClusterDNSDomain, \"dns-domain\", \"\", \"The DNS Domain of the cluster.\")\n}\n"
  },
  {
    "id" : "b7d51bc8-abd2-441d-ae06-a33cf584fd0d",
    "prId" : 97028,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97028#pullrequestreview-544462880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1172b7a-2147-41ff-a6bf-e236167f58ef",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this seems fine as long as sig node are OK with the change.\r\n@kubernetes/sig-node-pr-reviews \r\n\r\n> Adding `--restart-kubelet` flag on E2E Node test suite\r\n\r\nplease explain what the flag does in the release note too.\r\n",
        "createdAt" : "2020-12-03T21:22:08Z",
        "updatedAt" : "2020-12-03T21:22:09Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "77091e89-4a94-48da-b389-11186dfbeb33",
        "parentId" : "a1172b7a-2147-41ff-a6bf-e236167f58ef",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "looks like the flag was already approved here:\r\nhttps://github.com/kubernetes/kubernetes/pull/96775#pullrequestreview-541122956\r\n",
        "createdAt" : "2020-12-03T21:27:23Z",
        "updatedAt" : "2020-12-03T21:27:23Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "00da68dbc25d9d12b05200b9207abc14dde71246",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +81,85 @@\tflags.BoolVar(&framework.TestContext.NodeConformance, \"conformance\", false, \"If true, the test suite will not start kubelet, and fetch system log (kernel, docker, kubelet log etc.) to the report directory.\")\n\tflags.BoolVar(&framework.TestContext.PrepullImages, \"prepull-images\", true, \"If true, prepull images so image pull failures do not cause test failures.\")\n\tflags.BoolVar(&framework.TestContext.RestartKubelet, \"restart-kubelet\", true, \"If true, restart Kubelet unit when the process is killed.\")\n\tflags.StringVar(&framework.TestContext.ImageDescription, \"image-description\", \"\", \"The description of the image which the test will be running on.\")\n\tflags.StringVar(&framework.TestContext.SystemSpecName, \"system-spec-name\", \"\", \"The name of the system spec (e.g., gke) that's used in the node e2e test. The system specs are in test/e2e_node/system/specs/. This is used by the test framework to determine which tests to run for validating the system requirements.\")"
  },
  {
    "id" : "1df353a0-c67a-43a1-92de-711bdeaf4e01",
    "prId" : 94723,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94723#pullrequestreview-498554952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9e8b797-16a4-4bd8-8c85-ef51c271d5c7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this seems fine as per the docs for SynchronizedBeforeSuite\r\nhttps://github.com/onsi/ginkgo/blob/master/ginkgo_dsl.go#L504\r\n\r\njust to double check my understanding here, does this mean that the rest of framework.TestContext is empty when the child processes are run and only the token field is set?\r\n",
        "createdAt" : "2020-09-29T12:24:02Z",
        "updatedAt" : "2020-10-19T16:13:21Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "7fce4417-b85a-45f7-af81-bacb8d36957c",
        "parentId" : "d9e8b797-16a4-4bd8-8c85-ef51c271d5c7",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "> does this mean that the rest of framework.TestContext is empty when the child processes are run and only the token field is set?\r\n\r\nnope, `framework.TestContext` is set like the parent process and the token field is another random token.",
        "createdAt" : "2020-09-29T14:32:18Z",
        "updatedAt" : "2020-10-19T16:13:21Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "85383365-164e-431e-b6a9-f5aa55953d87",
        "parentId" : "d9e8b797-16a4-4bd8-8c85-ef51c271d5c7",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ok, i see. so this persists the original token that we generated in the parent process.",
        "createdAt" : "2020-09-29T14:42:57Z",
        "updatedAt" : "2020-10-19T16:13:21Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "23470904-ced1-4303-9e2e-4d7969923a41",
        "parentId" : "d9e8b797-16a4-4bd8-8c85-ef51c271d5c7",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "yeah you are right.",
        "createdAt" : "2020-09-29T14:48:52Z",
        "updatedAt" : "2020-10-19T16:13:21Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "d321ac52a2513d5416053e179c5dcdf5e0378d0e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +214,218 @@\treturn []byte(framework.TestContext.BearerToken)\n}, func(token []byte) {\n\tframework.TestContext.BearerToken = string(token)\n\t// update test context with node configuration.\n\tgomega.Expect(updateTestContext()).To(gomega.Succeed(), \"update test context with node config.\")"
  },
  {
    "id" : "4c925bf2-76f0-4d52-afb4-3f9cbcee00aa",
    "prId" : 31093,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31093#pullrequestreview-7513705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b665855f-2899-4479-8e88-9b4b818d9ca1",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Are you intentionally including all the flags here? If yes, add a comment. Otherwise, use `flag.Args()`\n",
        "createdAt" : "2016-11-07T19:58:05Z",
        "updatedAt" : "2016-11-07T23:28:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "4121ea01-7ede-4b4c-ab9b-64e0afa1b4d3",
        "parentId" : "b665855f-2899-4479-8e88-9b4b818d9ca1",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah, I want to make sure that all processes see the same flag set, or else it confuses people sometimes.\n",
        "createdAt" : "2016-11-07T22:03:46Z",
        "updatedAt" : "2016-11-07T23:28:08Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "9345e12bc9dc3a233aa0aa002624f9b78bb7d264",
    "line" : null,
    "diffHunk" : "@@ -1,1 +188,192 @@\t}\n\t// Pass all flags into the child process, so that it will see the same flag set.\n\toutput, err := exec.Command(testBin, append([]string{\"--system-validate-mode\"}, os.Args[1:]...)...).CombinedOutput()\n\t// The output of system validation should have been formatted, directly print here.\n\tfmt.Print(string(output))"
  },
  {
    "id" : "29c603c6-bc7a-4bff-873f-32a45abc701b",
    "prId" : 30941,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a0b4e27-d1d8-48a6-923b-d8cf5d894831",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "For my education, why is this one treated differently? Why not consistently do:\n\nerr := e2es.Start()\nExpect(err).NotTo(HaveOccurred(), \"should be able to start node services.\")\n",
        "createdAt" : "2016-08-18T23:18:41Z",
        "updatedAt" : "2016-08-18T23:18:41Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      },
      {
        "id" : "3bb917d3-57de-44c2-83d2-fa8dffb8f8bc",
        "parentId" : "4a0b4e27-d1d8-48a6-923b-d8cf5d894831",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Just make the code pretty. :)\nThey are the same.\n",
        "createdAt" : "2016-08-18T23:22:14Z",
        "updatedAt" : "2016-08-18T23:22:14Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "35aad1593fd03310d4b57b20fee25766b633a2dd",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +115,119 @@\tif *startServices {\n\t\te2es = NewE2EServices()\n\t\tExpect(e2es.Start()).To(Succeed(), \"should be able to start node services.\")\n\t\tglog.Infof(\"Node services started.  Running tests...\")\n\t} else {"
  },
  {
    "id" : "0a5d45cc-278a-4a2b-a675-841e22b9215f",
    "prId" : 30728,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cb42288-2b73-443a-8c46-cc69359e4f2e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I assume the assertion failure won't cause the process to exit. Could you confirm that?\n",
        "createdAt" : "2016-08-17T01:23:19Z",
        "updatedAt" : "2016-08-17T01:23:19Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5bd5540e0dd3aa9f8215a943cf66f01e8da39a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +102,106 @@var _ = SynchronizedBeforeSuite(func() []byte {\n\tif *buildServices {\n\t\tExpect(buildGo()).To(Succeed())\n\t}\n\tif framework.TestContext.NodeName == \"\" {"
  },
  {
    "id" : "fc1cc2ff-4ab4-454b-a0c3-ed22cdb76185",
    "prId" : 30718,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "610e7b5d-7010-401a-bdf6-0823314a5051",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Nit. line 207-209 can be merged by Expect(len(nodes.Items)== 1).To(BeTrue())\n",
        "createdAt" : "2016-08-17T01:30:48Z",
        "updatedAt" : "2016-08-21T01:04:05Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb760a6ed4ba2be937e2fe553076de59c2b09241",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\t\treturn fmt.Errorf(\"the node list is nil.\")\n\t\t}\n\t\tExpect(len(nodes.Items) > 1).NotTo(BeTrue())\n\t\tif len(nodes.Items) == 0 {\n\t\t\treturn fmt.Errorf(\"empty node list: %+v\", nodes)"
  },
  {
    "id" : "a3eef3ea-4d11-49ac-a9ad-b8e1c15c8f2d",
    "prId" : 30116,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c03250e-a787-46cd-a16c-5253a780eb0e",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Could you make it a method since it's called twice?\n",
        "createdAt" : "2016-08-12T19:03:12Z",
        "updatedAt" : "2016-08-15T21:46:54Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      }
    ],
    "commit" : "3910a66bb5d7dda6eccb71e654767b258e0a11b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +95,99 @@\n\t// Initialize node name here, so that the following code can get right node name.\n\tif framework.TestContext.NodeName == \"\" {\n\t\thostname, err := os.Hostname()\n\t\tif err != nil {"
  },
  {
    "id" : "40da1270-1220-4102-8b58-2aa4b87e0216",
    "prId" : 30107,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adcde8ae-356b-4053-a2e7-e62b961c0195",
        "parentId" : null,
        "authorId" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "body" : "Is parallelNode different for each invocation?\n\nWhat if there's no parallelism? Will there be a trailing 0 or 1 on the end of every junit? \n",
        "createdAt" : "2016-08-04T23:11:34Z",
        "updatedAt" : "2016-08-04T23:11:34Z",
        "lastEditedBy" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "tags" : [
        ]
      },
      {
        "id" : "d739eaef-294d-48e9-a743-6fa42ae9f984",
        "parentId" : "adcde8ae-356b-4053-a2e7-e62b961c0195",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah, ginkgo framework will make sure that. We also use the same trick in e2e framework. https://github.com/kubernetes/kubernetes/blob/master/test/e2e/e2e.go#L235\n",
        "createdAt" : "2016-08-04T23:35:05Z",
        "updatedAt" : "2016-08-04T23:35:05Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fd2319ca77d8f2c3f0e00853998d86687d1c39b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +90,94 @@\t\t} else {\n\t\t\t// Configure a junit reporter to write to the directory\n\t\t\tjunitFile := fmt.Sprintf(\"junit_%s%02d.xml\", framework.TestContext.ReportPrefix, config.GinkgoConfig.ParallelNode)\n\t\t\tjunitPath := path.Join(*reportDir, junitFile)\n\t\t\treporters = append(reporters, more_reporters.NewJUnitReporter(junitPath))"
  },
  {
    "id" : "54229b56-54bc-4c96-858a-23fae68b9a88",
    "prId" : 29486,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f6026d-8d3c-457c-8880-63a3eb8d5c7e",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "A few comments here to explain what happened? :)\n",
        "createdAt" : "2016-07-23T00:36:23Z",
        "updatedAt" : "2016-07-25T19:21:49Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "13a627ff-63af-419d-844c-776a9a8e83cd",
        "parentId" : "36f6026d-8d3c-457c-8880-63a3eb8d5c7e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Done\n",
        "createdAt" : "2016-07-25T19:13:51Z",
        "updatedAt" : "2016-07-25T19:21:49Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d31608fcc8a07d6d83ab6782e4f02720f7032c57",
    "line" : null,
    "diffHunk" : "@@ -1,1 +137,141 @@\tif err != nil {\n\t\t// Not all distros contain this file.\n\t\tglog.Infof(\"Could not read /etc/os-release: %v\", err)\n\t\treturn\n\t}"
  },
  {
    "id" : "3a5c66d7-92f1-4d3b-bc15-0bcdeb400292",
    "prId" : 29092,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b4d8c91-40ae-437c-a1fc-257e1b94ea5a",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "What's going on here? Why do you have a separate function, and serialize the shared context in between?\n",
        "createdAt" : "2016-07-28T18:59:21Z",
        "updatedAt" : "2016-07-29T23:41:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "23678c7d-a170-450a-b480-8e812fe88ec6",
        "parentId" : "2b4d8c91-40ae-437c-a1fc-257e1b94ea5a",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "This is used for parallel test suite.\n\nFor each parallel instance, the `BeforeSuite` and `AfterSuite` will be run once.\nHowever, we don't want to start kubelet, apiserver and etcd in each parallel instance. So we've to use `SynchronizedBeofreSuite`, in which the first function will only be called once, and the second one will be called in each parallel instance.\n\nAnd if we want to pass some data from the function 1 to function 2, we must pass it via `data []byte`.\n",
        "createdAt" : "2016-07-28T19:53:28Z",
        "updatedAt" : "2016-07-29T23:41:18Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d48c7636153a6bea5d282a8d6e089fb2387d441",
    "line" : null,
    "diffHunk" : "@@ -1,1 +142,146 @@\tshared := &SharedContext{}\n\tExpect(json.Unmarshal(data, shared)).To(Succeed())\n\tcontext = *shared\n\n\tif framework.TestContext.NodeName == \"\" {"
  },
  {
    "id" : "cc5687d1-f6e8-464b-ba3b-87b5534a2b03",
    "prId" : 29092,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e20592-e422-44ba-a6d8-338c1138176d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Where is this `context` being consumed? Ginkgo inline'd code isn't that readable. Some some comments might help with the review.\n",
        "createdAt" : "2016-07-29T22:02:33Z",
        "updatedAt" : "2016-07-29T23:41:18Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "7ebeec67-a5a4-4764-af9f-8ae32ca13d8c",
        "parentId" : "67e20592-e422-44ba-a6d8-338c1138176d",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK. Will do that! :)\n",
        "createdAt" : "2016-07-29T22:09:58Z",
        "updatedAt" : "2016-07-29T23:41:18Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d48c7636153a6bea5d282a8d6e089fb2387d441",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +142,146 @@\tshared := &SharedContext{}\n\tExpect(json.Unmarshal(data, shared)).To(Succeed())\n\tcontext = *shared\n\n\tif framework.TestContext.NodeName == \"\" {"
  },
  {
    "id" : "e558d86c-2c19-4a7b-841b-489d48c83fa2",
    "prId" : 25004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cc8a827-2f08-42f8-bcaf-5a00e2d073d4",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@pwittrock Hmm, I didn't see this message in the log. So the function didn't seem to be called at all?\n",
        "createdAt" : "2016-05-02T19:10:28Z",
        "updatedAt" : "2016-05-02T19:10:28Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "b24921ed-bdf5-44b4-b6cd-088f88f6c905",
        "parentId" : "1cc8a827-2f08-42f8-bcaf-5a00e2d073d4",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "I see it in the [node e2e logs](https://storage.cloud.google.com/kubernetes-jenkins/pr-logs/pull/25004/node-pull-build-e2e-test/3847/build-log.txt)\n\n> Success Finished Host tmp-node-e2e-54dd96d6-e2e-node-coreos-stable20160218-image Test Suite\n> Warning: Permanently added 'tmp-node-e2e-54dd96d6-e2e-node-coreos-stable20160218-image'\n> ...\n> I0502 07:07:00.610062     911 e2e_node_suite_test.go:101] ******************************************************\n> I0502 07:07:00.774986     911 e2e_node_suite_test.go:138] Locksmithd is masked successfully\n",
        "createdAt" : "2016-05-02T20:28:43Z",
        "updatedAt" : "2016-05-02T20:28:43Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "d705cc5cf84d4385256ededd0797270c93382ecd",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t}\n\t}\n\tglog.Infof(\"Locksmithd is masked successfully\")\n}"
  },
  {
    "id" : "b484389b-ff9d-43b2-93b3-2dfbc74b744a",
    "prId" : 24339,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "861db95d-d729-49d1-aa78-c0daadada0dc",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "nit: level 0 is pretty much equivalent to just glog.Infof\n",
        "createdAt" : "2016-04-15T22:23:41Z",
        "updatedAt" : "2016-04-15T22:23:41Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "c78380ef-b9ad-4567-8396-ca0dc637d086",
        "parentId" : "861db95d-d729-49d1-aa78-c0daadada0dc",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Thanks.  Should I fix this here, or just do as a follow up when working on the next piece?\n",
        "createdAt" : "2016-04-15T22:28:06Z",
        "updatedAt" : "2016-04-15T22:28:06Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "d37222d1d9746cb798fa29e51a8899f38e615227",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +92,96 @@\tb := &bytes.Buffer{}\n\tb.WriteString(\"******************************************************\\n\")\n\tglog.V(0).Infof(b.String())\n}\n"
  },
  {
    "id" : "3e581b09-7ca0-4473-8321-019484cffed1",
    "prId" : 24271,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why aren't we logging by default?\n",
        "createdAt" : "2016-04-14T21:26:05Z",
        "updatedAt" : "2016-04-14T21:26:05Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "eaf46780-99db-4f3d-b7ab-2e2600f637ee",
        "parentId" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Because it makes the output hard to parse.  If the test suite is successful, I don't think we want to output all the logs.\n",
        "createdAt" : "2016-04-14T21:32:48Z",
        "updatedAt" : "2016-04-14T21:32:48Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "d801038d-71ca-468c-b800-2d3c86e8af2b",
        "parentId" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "This PR ensures that we do not print anything unless the test failed right? So other than an empty line, how else will it affect a successful test run? \n",
        "createdAt" : "2016-04-14T21:35:45Z",
        "updatedAt" : "2016-04-14T21:35:45Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "934322c7-3137-444d-ba0a-e30aa364e162",
        "parentId" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Things are particularly annoying when you have tests run against 6 different hosts and you want to look at the kubelet.logs for the failed host.\n",
        "createdAt" : "2016-04-14T22:43:30Z",
        "updatedAt" : "2016-04-14T22:43:30Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "2ca3d059-9e70-4c50-82c0-ef7001b8a5de",
        "parentId" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Sorry if I was not clear. The rationale to print logs only on failure is very sound. But why `V(2)` instead of `V(0)`?\n",
        "createdAt" : "2016-04-15T00:42:08Z",
        "updatedAt" : "2016-04-15T00:42:08Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "9c9bc65d-42a8-46c6-8f00-37f31752812b",
        "parentId" : "2f089b23-5066-4ded-a3ee-ab3160c450d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "No strong reason.  I will update this in a follow up.\n",
        "createdAt" : "2016-04-15T17:03:25Z",
        "updatedAt" : "2016-04-15T17:03:25Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "e88fdb85c0b4fc98c78bd6c411d77af650960668",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +116,120 @@\t}\n\tb.WriteString(\"******************************************************\\n\")\n\tglog.V(2).Infof(b.String())\n}"
  },
  {
    "id" : "427b3b65-5a02-46f4-bbd4-a6c27e4967f9",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b94e5bca-59d6-426a-ae22-efff8262372e",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "The main e2e framework uses ginkgo, which provides in-built setup and teardown semantics. Should we use that instead? We can start with this for now. So a TODO might be ok for this PR.\n",
        "createdAt" : "2015-11-16T18:45:16Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "39088b43-85f1-4598-a761-7ec94aa70eb4",
        "parentId" : "b94e5bca-59d6-426a-ae22-efff8262372e",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "This does use ginkgo, there just isn't much setup teardown.  This is the suite generated by ginkgo bootstrap: http://onsi.github.io/ginkgo/#bootstrapping-a-suite.\n\nThe reason the node bootstrapping is in the test runner instead of the suite is so that the suite can run against a node that has already been bootstrapped.  We could run the runner in another ginkgo suite if you think it would be useful.\n",
        "createdAt" : "2015-11-17T01:23:10Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "0ef04c1a-273c-43e5-952b-57e897602fea",
        "parentId" : "b94e5bca-59d6-426a-ae22-efff8262372e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Acknowledged!\n",
        "createdAt" : "2015-11-18T18:24:46Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@}\n\n// Setup the kubelet on the node\nvar _ = BeforeSuite(func() {\n})"
  },
  {
    "id" : "0d1c6162-1b37-4552-9116-8730b89294b9",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06b317c0-c6a1-49d0-a276-4a7f818372f6",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can we make this flag `host:port`?\n",
        "createdAt" : "2015-11-18T18:24:21Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@var kubeletPort = flag.Int(\"kubelet-port\", 10250, \"Kubelet port\")\n\nvar apiServerHost = flag.String(\"api-server-host\", \"localhost\", \"Host address of the api server\")\nvar apiServerPort = flag.Int(\"api-server-port\", 8080, \"Api server port\")\n"
  },
  {
    "id" : "59a4d288-7236-447d-8712-0336706cf44b",
    "prId" : 17260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "151accab-f0ac-4c14-8fda-bf0ae0b2cabd",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can we have a single flag that is `host:port`?\n",
        "createdAt" : "2015-11-18T18:24:36Z",
        "updatedAt" : "2015-11-18T21:05:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "49e1baa313e46a67aba07db11abc2fe5c3123e1d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@)\n\nvar kubeletHost = flag.String(\"kubelet-host\", \"localhost\", \"Host address of the kubelet\")\nvar kubeletPort = flag.Int(\"kubelet-port\", 10250, \"Kubelet port\")\n"
  }
]