[
  {
    "id" : "885d4fa4-0a5b-427b-8194-5f4c30abf2b6",
    "prId" : 82654,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82654#pullrequestreview-290469584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98e6a7af-611a-4ec8-aa49-80a6c2c472c9",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Can you share more about the purpose of the `defer` statement given the other changes you made?\r\n",
        "createdAt" : "2019-09-16T13:46:13Z",
        "updatedAt" : "2019-09-19T10:24:42Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "93809464-6ecf-4458-aa73-e1a22d7e8d4c",
        "parentId" : "98e6a7af-611a-4ec8-aa49-80a6c2c472c9",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "No problem! :smile: \r\n\r\nref. #82018, it makes sense to use defer since we want to run the pre pulling even tho the assertions in `AfterEach` fails.\r\n\r\nAfter we merged #82018, line [553](https://github.com/kubernetes/kubernetes/pull/82654/files#diff-590eb0d04c6b4987c1addfa5d2c4424aR553) started failing, since the image is used there can also be evicted too. I think we should do prepulling in `defer` as well as before the `PodClient().CreateSync`, so that we are 100% sure all images are present.",
        "createdAt" : "2019-09-17T15:14:34Z",
        "updatedAt" : "2019-09-19T10:24:42Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "33234e9a-c198-4ffd-bba1-c4ac50bfa7b5",
        "parentId" : "98e6a7af-611a-4ec8-aa49-80a6c2c472c9",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Works for me :) Might be worth copying this over into a comment (or putting in the commit message).",
        "createdAt" : "2019-09-19T03:04:14Z",
        "updatedAt" : "2019-09-19T10:24:42Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "80007714-0347-41e6-a000-8ba915a0f45b",
        "parentId" : "98e6a7af-611a-4ec8-aa49-80a6c2c472c9",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Added a comment now :smile: (but lost the lgtm :unamused:)",
        "createdAt" : "2019-09-19T10:28:59Z",
        "updatedAt" : "2019-09-19T10:29:00Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec605eb3000e132c3213687332af148280727d10",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +529,533 @@\t\t\t}\n\t\t\t// Run prePull using a defer to make sure it is executed even when the assertions below fails\n\t\t\tdefer prePullImagesIfNeccecary()\n\n\t\t\tginkgo.By(\"deleting pods\")"
  },
  {
    "id" : "9bcc9aa0-35f1-46f4-8d87-b6d06ef1e43d",
    "prId" : 60900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60900#pullrequestreview-110207773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "443d5da8-a49b-42d3-b4ee-70b2beeafb14",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should we do a sanity check on the node conditions?",
        "createdAt" : "2018-03-08T02:03:59Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "6300e6f7-519b-4e26-b2da-a61eb0636e0d",
        "parentId" : "443d5da8-a49b-42d3-b4ee-70b2beeafb14",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "I can, although it would be caught when the pod fails to schedule anyways.",
        "createdAt" : "2018-03-08T17:31:17Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "3a63cc1e-6d5b-4cb7-bce8-53a6c2e6a106",
        "parentId" : "443d5da8-a49b-42d3-b4ee-70b2beeafb14",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Can you add a comment explaining that the time may be unbounded but usually is done in a few seconds?",
        "createdAt" : "2018-04-06T20:55:27Z",
        "updatedAt" : "2018-04-06T21:01:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b310d12b-0af0-4b1b-b73d-cc363bc36e43",
        "parentId" : "443d5da8-a49b-42d3-b4ee-70b2beeafb14",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "added the comment where the function is defined.",
        "createdAt" : "2018-04-06T21:01:43Z",
        "updatedAt" : "2018-04-06T21:01:43Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "3254bdc1a46c208df379fb15a94e7415709f4933",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +382,386 @@\t\tBeforeEach(func() {\n\t\t\t// reduce memory usage in the allocatable cgroup to ensure we do not have MemoryPressure\n\t\t\treduceAllocatableMemoryUsage()\n\t\t\t// Nodes do not immediately report local storage capacity\n\t\t\t// Sleep so that pods requesting local storage do not fail to schedule"
  },
  {
    "id" : "a3afda44-811b-4fa9-98a4-c872be9a01d8",
    "prId" : 52373,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52373#pullrequestreview-64715968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa13cb45-3324-4223-bfbc-da8be93f3dd9",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Still prefer splitting the logging and predicate into separate functions, something like:\r\n```\r\nfunc hasNodeCondition(condition v1.NodeConditionType) bool {...}\r\nfunc logNodeCondition(f *framework.Framework, condition v1.NodeConditionType, expected bool) {...}\r\n```",
        "createdAt" : "2017-09-22T21:22:17Z",
        "updatedAt" : "2017-09-24T03:45:19Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "392d639b-912e-4a21-8947-b7aab9d284b9",
        "parentId" : "aa13cb45-3324-4223-bfbc-da8be93f3dd9",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "done",
        "createdAt" : "2017-09-22T22:47:44Z",
        "updatedAt" : "2017-09-24T03:45:19Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "828c2d9630f4cc7ae577547c9ad26349fd8ce2fd",
    "line" : 439,
    "diffHunk" : "@@ -1,1 +437,441 @@\n// Returns TRUE if the node has the node condition, FALSE otherwise\nfunc hasNodeCondition(f *framework.Framework, expectedNodeCondition v1.NodeConditionType) bool {\n\tlocalNodeStatus := getLocalNode(f).Status\n\t_, actualNodeCondition := nodeutil.GetNodeCondition(&localNodeStatus, expectedNodeCondition)"
  }
]