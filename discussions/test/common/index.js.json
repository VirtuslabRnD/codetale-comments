[
  {
    "id" : "9cd19433-5100-4bde-8eba-206b3255a674",
    "prId" : 14168,
    "prUrl" : "https://github.com/nodejs/node/pull/14168#pullrequestreview-49353025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3755d173-d37f-4999-be95-ebf8e28feca0",
        "parentId" : null,
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "Is block scoping really needed?",
        "createdAt" : "2017-07-11T15:49:54Z",
        "updatedAt" : "2017-07-14T23:36:54Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "f017f070-2ed5-4a98-b44f-455dfb552509",
        "parentId" : "3755d173-d37f-4999-be95-ebf8e28feca0",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Since the `const` are only used locally and there's a single exported side-effect (`exports.PIPE = ...`) IMHO it's cleaner.\r\nSimilar to the `function setupFoo(); setupFoo();` approach in node_bootstap.js\r\nMaybe even V8 will inline the `const`s ?",
        "createdAt" : "2017-07-11T16:35:41Z",
        "updatedAt" : "2017-07-14T23:36:54Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "3ec29535-de8b-4575-9b82-90144d6ec37a",
        "parentId" : "3755d173-d37f-4999-be95-ebf8e28feca0",
        "authorId" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "body" : "I like it, easier to see that the `consts` aren't used except in `exports.PIPE`.",
        "createdAt" : "2017-07-11T23:03:25Z",
        "updatedAt" : "2017-07-14T23:36:54Z",
        "lastEditedBy" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c34ae48083b44f1da7be75c8d11abc9f3aa7ab19",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +254,258 @@});\n\n{\n  const pipePrefix = exports.isWindows ? '\\\\\\\\.\\\\pipe\\\\' : `${exports.tmpDir}/`;\n  const pipeName = `node-test.${process.pid}.sock`;"
  },
  {
    "id" : "0d8cfb63-1c9d-433a-8f14-960c6e6a33df",
    "prId" : 14168,
    "prUrl" : "https://github.com/nodejs/node/pull/14168#pullrequestreview-49259835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c36caae6-be10-42b6-a3a9-111341b08d92",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Not a huge fan of `!!` outside of minimal code competitions.\r\nWilling to change if anyone has a strong opinion.",
        "createdAt" : "2017-07-11T16:38:13Z",
        "updatedAt" : "2017-07-14T23:36:54Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "e04d436e-fa3b-484b-915c-8150b188752b",
        "parentId" : "c36caae6-be10-42b6-a3a9-111341b08d92",
        "authorId" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "body" : "No strong opinion from me. I think it used to be preferred in hot paths for performance. No idea if that's still the case. Regardless, it's totally sensible to value readable code over performant code in `test/common/index.js`.",
        "createdAt" : "2017-07-11T16:50:07Z",
        "updatedAt" : "2017-07-14T23:36:54Z",
        "lastEditedBy" : "84392f84-0848-409d-9e1e-0627d211cf90",
        "tags" : [
        ]
      }
    ],
    "commit" : "c34ae48083b44f1da7be75c8d11abc9f3aa7ab19",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +244,248 @@Object.defineProperty(exports, 'hasCrypto', {\n  get: function() {\n    return Boolean(process.versions.openssl);\n  }\n});"
  },
  {
    "id" : "8ab8e6d9-22f2-4cff-b947-312e4c42fd7a",
    "prId" : 18800,
    "prUrl" : "https://github.com/nodejs/node/pull/18800#pullrequestreview-96943325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df8e86a0-d0e5-4f2d-80fe-4bf6c99b2090",
        "parentId" : null,
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Something similar wa sin here at some point and is used in another test file. It would be good to consolidate in that case.",
        "createdAt" : "2018-02-15T16:49:34Z",
        "updatedAt" : "2018-02-20T17:32:29Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "5b0e134b-b750-4b5d-b430-b9263a0fd3b0",
        "parentId" : "df8e86a0-d0e5-4f2d-80fe-4bf6c99b2090",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "If there is, I'm not sure where it is at. If there are tests somewhere that I missed that use something like this, they probably don't actually work...? I couldn't find any in a quick look.\r\n\r\nThere are some tests that don't even bother to go for something like this and just go for fd 0 instead. (Which could probably be added to the lookup list here? I'll do that.)",
        "createdAt" : "2018-02-15T17:11:46Z",
        "updatedAt" : "2018-02-20T17:32:29Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "101b5c50-1fdf-4e1f-9dd5-48426690f494",
        "parentId" : "df8e86a0-d0e5-4f2d-80fe-4bf6c99b2090",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "There is one in `sequential/test-async-wrap-getasyncid.js`. And zero was removed because it can cause issues on Windows.",
        "createdAt" : "2018-02-15T17:30:38Z",
        "updatedAt" : "2018-02-20T17:32:29Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "cc10a73d-c528-4e54-8a8f-7314aa157fb5",
        "parentId" : "df8e86a0-d0e5-4f2d-80fe-4bf6c99b2090",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "That part of that test definitely never ever runs. ðŸ˜¬ ",
        "createdAt" : "2018-02-15T17:47:34Z",
        "updatedAt" : "2018-02-20T17:32:29Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "00caed39-7cc4-46f2-9ca0-806ee2f9d3ea",
        "parentId" : "df8e86a0-d0e5-4f2d-80fe-4bf6c99b2090",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "I'll move that out next and base it off of this then, I suppose.",
        "createdAt" : "2018-02-15T17:49:19Z",
        "updatedAt" : "2018-02-20T17:32:29Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7514eb3cff9f333882db0a3173247df06c0257e5",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +790,794 @@    }\n  }\n  return ttyFd;\n};\n"
  }
]