[
  {
    "id" : "a30d3d05-8c47-4afd-9b69-a0dded80bbbb",
    "prId" : 68177,
    "prUrl" : "https://github.com/ansible/ansible/pull/68177#pullrequestreview-418695750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I'm not sure if we can actually have this sanity check enabled just by checking the date. I unfortunately don't have a good alternative but this will be problematic for a few reasons.\r\n\r\n* The dep by date is meant to enforce that deprecations will have a minimum of 2 years before they are removed, it's not to say that this will be removed at exactly 2 years time\r\n* To remove a feature we would typically need to increase the major version of the collection, doing this at random times just because a dep period has been reached won't paint the best picture of stability of the collection\r\n\r\nIn short having a sanity test fail when we don't have any immediate plans to actually remove the feature means either we need to ignore the error and defeat the purpose of the check or just live with the error, making CI failures harder to diagnose.\r\n\r\nAn example scenario of this problem would be the maintenance releases of a certified collection. These collections are currently set to have a rolling release and a 24 month maintenance release. The latter is a bug fix only release with no features being added or removed so it could potentially have a deprecated feature 6 months into it's lifecycle and we need to ignore this sanity check for that branch entirely.\r\n\r\nAnother scenario is for the rolling release, say we have 2 dep by dates set\r\n\r\n1. module x has a `removed_at_date: 2020-06-01`\r\n2. module y has a `removed_at_date: 2020-08-01`\r\n\r\nIn this scenario we would effectively have to remove the feature at the start of June **and** August to silence the ansible-test sanity checks and in the meantime we either release 2 major bumps in that timeframe or wait the 2 months before doing the next release.\r\n\r\nMaybe the best option here is to have this as a manual check, i.e. it's run before creating the release to ensure that all deprecations that can be removed are removed rather than something done in CI.",
        "createdAt" : "2020-05-26T20:15:50Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "88c766a0-003d-4e5c-85f5-fba1f8cff712",
        "parentId" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This test is part of the optional tests, i.e. you explicitly have to run `ansible-test sanity` with `--enable-optional-errors` for it to be a (reported) error. So it will only have an impact if people explicitly request this. (This might change in the future to a non-failing warning, but the result will still be the same: this won't make tests fail from a date on until these tests are explicitly requested. This definitely won't happen for 2.10 though.)",
        "createdAt" : "2020-05-26T21:20:59Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9e9300a4-ce29-436e-9aa7-8ed2b31c1023",
        "parentId" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(Optional errors were introduced in #66920, though not used there yet. This would be the first use of that feature.)",
        "createdAt" : "2020-05-26T21:21:42Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "fce93b29-8ddd-443c-8c3f-0ee2ccb1131e",
        "parentId" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Ah that's fantastic, solves this problem quite nicely. Having a quick skim of #66920 it seems like `--enable-optional-errors` is a true/false switch so by setting it you would enable all the optional errors. Is it mean to work in conjuction with the test name like `ansible-test sanity --test ansible-deprecated-date --enable-optional-errors` or is that not possible right now?",
        "createdAt" : "2020-05-26T21:28:04Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "8bdbb322-81aa-42a4-9bed-d7d2d5d48277",
        "parentId" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "`--test` only works with tests like `validate-modules` or `pylint`, not with explicit error codes returned by one of the tests. So you can only enable all of them, or none. @mattclay and me were discussing about that last week, I think the plan is to improve the interface eventually, but not for 2.10. Since it would probably be the only optional error for 2.10 it should be ok for now :)",
        "createdAt" : "2020-05-26T21:32:03Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ac0d13b8-1ae9-45b1-9091-1e42e451e619",
        "parentId" : "da7d3aeb-13a1-4d59-a290-8082da4a7550",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Fair enough.",
        "createdAt" : "2020-05-26T21:34:21Z",
        "updatedAt" : "2020-05-26T22:29:03Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f19ea507906a4f5985dfb13d2fda90452e2f49b",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +187,191 @@                    try:\n                        if parse_isodate(date) < datetime.date.today():\n                            self.add_message('ansible-deprecated-date', node=node, args=(date,))\n                    except ValueError:\n                        self.add_message('ansible-invalid-deprecated-date', node=node, args=(date,))"
  },
  {
    "id" : "37e1f2dd-4869-44e7-8269-7bec8d744aa7",
    "prId" : 68177,
    "prUrl" : "https://github.com/ansible/ansible/pull/68177#pullrequestreview-418873371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f86e2bcf-25d2-4e4b-b267-ef1f7fd723ed",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "This logic appears to be redundant. The exception handler below should catch the same cases the regex does and return the same exception.",
        "createdAt" : "2020-05-27T00:02:18Z",
        "updatedAt" : "2020-05-27T00:02:19Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "013e82f4-dfc5-4067-8c23-e339b86e3923",
        "parentId" : "f86e2bcf-25d2-4e4b-b267-ef1f7fd723ed",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "The code below also accepts `2020-1-1`, which is not ISO 8601. It does catch invalid dates such as `2019-02-29` though, which this regex won't catch.",
        "createdAt" : "2020-05-27T05:48:19Z",
        "updatedAt" : "2020-05-27T05:48:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f19ea507906a4f5985dfb13d2fda90452e2f49b",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +93,97 @@    # we have to do things manually.\n    if not re.match('^[0-9]{4}-[0-9]{2}-[0-9]{2}$', value):\n        raise ValueError(msg)\n    try:\n        return datetime.datetime.strptime(value, '%Y-%m-%d').date()"
  },
  {
    "id" : "109d4394-56c1-4266-a728-3c4e652eeaa2",
    "prId" : 69680,
    "prUrl" : "https://github.com/ansible/ansible/pull/69680#pullrequestreview-420639820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ed18ce4-26cd-414d-8b4d-9544f0675d70",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Shouldn't use of `ansible.builtin` be limited to cases where `self.collection_name` is `None`?",
        "createdAt" : "2020-05-28T22:59:10Z",
        "updatedAt" : "2020-05-28T23:06:12Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "f849260e-4d5c-4fbd-9282-8e5a88b7f617",
        "parentId" : "0ed18ce4-26cd-414d-8b4d-9544f0675d70",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "`collection_name` is either `None` or a \"real\" collection name, i.e. a truthy value. Or do I understand your comment wrong?\r\n\r\n(In case someone passes `--collection-name ''` when manually running `pylint`, it will be treated the same as `None`. But I'm not sure why we would want to support this.)",
        "createdAt" : "2020-05-28T23:11:47Z",
        "updatedAt" : "2020-05-28T23:11:48Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "3f9c534f-4b49-4bc6-9b92-c56dc5807c7d",
        "parentId" : "0ed18ce4-26cd-414d-8b4d-9544f0675d70",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Ah, I misread this.",
        "createdAt" : "2020-05-29T04:09:37Z",
        "updatedAt" : "2020-05-29T04:09:37Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      }
    ],
    "commit" : "f13045a26dda3a271a2ab50918f9eb9b4d7a1a3e",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +178,182 @@        date_str = matcher.group(2)\n\n        if collection != (self.collection_name or 'ansible.builtin'):\n            self.add_message('wrong-collection-deprecated-date-tag', node=node, args=(date,))\n"
  },
  {
    "id" : "09964c0e-ec3a-4486-a5ce-b75bdf6b0e23",
    "prId" : 69680,
    "prUrl" : "https://github.com/ansible/ansible/pull/69680#pullrequestreview-420548216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27a8ad45-1c4c-4aee-af1b-40c83ac7c72e",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Shouldn't use of `ansible.builtin` be limited to cases where `self.collection_name` is `None`?",
        "createdAt" : "2020-05-28T22:59:14Z",
        "updatedAt" : "2020-05-28T23:06:12Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      }
    ],
    "commit" : "f13045a26dda3a271a2ab50918f9eb9b4d7a1a3e",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +200,204 @@        version_no = matcher.group(2)\n\n        if collection != (self.collection_name or 'ansible.builtin'):\n            self.add_message('wrong-collection-deprecated-version-tag', node=node, args=(version,))\n"
  },
  {
    "id" : "8e30b32f-289a-4393-9182-b05a4924fb3a",
    "prId" : 69680,
    "prUrl" : "https://github.com/ansible/ansible/pull/69680#pullrequestreview-420554072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1729fd4d-eacd-46ff-8bc3-bac03680712a",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Shouldn't this be checking `self.collection_name` instead?\r\n\r\nYou could use the following (but the collection block would need to come first then):\r\n\r\n```suggestion\r\n        if self.collection_name:\r\n```\r\n",
        "createdAt" : "2020-05-28T23:00:22Z",
        "updatedAt" : "2020-05-28T23:06:12Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "4753d58f-b40c-4a8d-8c0d-63638ebf94de",
        "parentId" : "1729fd4d-eacd-46ff-8bc3-bac03680712a",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "No, since `ansible.builtin:2.14` should not trigger an `ansible-invalid-deprecated-version` or `ansible-deprecated-version` error, but only an `wrong-collection-deprecated-version-tag` error.\r\n\r\n(If someone uses `ansible.builtin:1.0.0`, they'll get more errors.)",
        "createdAt" : "2020-05-28T23:14:58Z",
        "updatedAt" : "2020-05-28T23:14:58Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "f13045a26dda3a271a2ab50918f9eb9b4d7a1a3e",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +203,207 @@            self.add_message('wrong-collection-deprecated-version-tag', node=node, args=(version,))\n\n        if collection == 'ansible.builtin':\n            # Ansible-base\n            try:"
  },
  {
    "id" : "af2f1451-2c8c-4724-9c08-9af44f7ab1cb",
    "prId" : 71679,
    "prUrl" : "https://github.com/ansible/ansible/pull/71679#pullrequestreview-484948983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d095c3c-3993-45bb-a47f-bbe62c828ce9",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n                if semantic_version.major == 0 or (semantic_version.major != 0 and (semantic_version.minor != 0 or semantic_version.patch != 0)):\r\n```",
        "createdAt" : "2020-09-09T10:18:54Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "c7e3256f-4dda-4ab8-acd7-82a8f1fc8cb1",
        "parentId" : "8d095c3c-3993-45bb-a47f-bbe62c828ce9",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "0.x.y as a removal version is fine, in 0.x.y versions anything can be done (see https://semver.org/ point 4 in the spec).",
        "createdAt" : "2020-09-09T11:42:15Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "793fddaf-0fa9-4360-90bd-a7dd4f632139",
        "parentId" : "8d095c3c-3993-45bb-a47f-bbe62c828ce9",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "ok",
        "createdAt" : "2020-09-09T12:19:46Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "25542c679f25b19c80ee0a8dd5825311a994d491",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +197,201 @@                    if self.collection_version >= semantic_version:\n                        self.add_message('collection-deprecated-version', node=node, args=(version,))\n                if semantic_version.major != 0 and (semantic_version.minor != 0 or semantic_version.patch != 0):\n                    self.add_message('removal-version-must-be-major', node=node, args=(version,))\n            except ValueError:"
  },
  {
    "id" : "fa2bf9cb-3a2e-4d40-b9e2-bfcb87706567",
    "prId" : 73015,
    "prUrl" : "https://github.com/ansible/ansible/pull/73015#pullrequestreview-565738597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4011aa01-3078-44a5-a36c-dff5ccabcd68",
        "parentId" : null,
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "@samdoran is this change related? If it's intentional, it likely needs a changelog mention since `ansible-test` is a shipped product.",
        "createdAt" : "2021-01-11T06:50:39Z",
        "updatedAt" : "2021-01-11T21:42:28Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      },
      {
        "id" : "ae8ce148-de62-48e2-adee-5b35ae4fda85",
        "parentId" : "4011aa01-3078-44a5-a36c-dff5ccabcd68",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "Ah just saw [the comment](https://github.com/ansible/ansible/pull/72987#issuecomment-745618630) in the original PR mentioning it. I still think it probably merits a changelog since it's changing an `ansible-test` component that could be used by others.",
        "createdAt" : "2021-01-11T06:54:05Z",
        "updatedAt" : "2021-01-11T21:42:28Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      },
      {
        "id" : "baf6aeac-a6b3-48c7-88f9-5bd9e9c146eb",
        "parentId" : "4011aa01-3078-44a5-a36c-dff5ccabcd68",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I meant for this to be included in another PR that could include a more specific changelog, but it got merged before hand. I'll add a changelog for this.",
        "createdAt" : "2021-01-11T21:06:26Z",
        "updatedAt" : "2021-01-11T21:42:28Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6ba45967823e71cebc626f03504d0ef6c1b6504",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +234,238 @@                    if not this_collection:\n                        self.add_message('wrong-collection-deprecated', node=node, args=(collection_name,))\n                elif self.collection_name is not None:\n                    self.add_message('ansible-deprecated-no-collection-name', node=node)\n"
  }
]