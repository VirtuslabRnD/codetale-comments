[
  {
    "id" : "b69daf63-46a7-437b-84e2-859d23b65893",
    "prId" : 59060,
    "prUrl" : "https://github.com/ansible/ansible/pull/59060#pullrequestreview-321156929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "225d3a4b-bcd4-4635-b615-a832257a0466",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "What's the purpose of the `and not context` check here?",
        "createdAt" : "2019-11-21T17:12:28Z",
        "updatedAt" : "2019-11-21T17:12:28Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "d85e5ecd-6201-43b5-972c-3f68934b9816",
        "parentId" : "225d3a4b-bcd4-4635-b615-a832257a0466",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It's to avoid that suboptions, which happen to be named as one of the `FILE_COMMON_ARGUMENTS` options, are ignored when they have no documentation, or that suboptions named like them are documented but don't actually exist.",
        "createdAt" : "2019-11-21T20:11:05Z",
        "updatedAt" : "2019-11-21T20:11:05Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e982ffe4d515c658003c819a3a948cb674f93ce",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +1475,1479 @@\n            # add_file_common_args is only of interest on top-level\n            add_file_common_args = kwargs.get('add_file_common_args', False) and not context\n\n            args_missing_from_docs = args_from_argspec.difference(args_from_docs)"
  },
  {
    "id" : "c5d5c3eb-ce16-44b1-84db-f332c9af7da7",
    "prId" : 60051,
    "prUrl" : "https://github.com/ansible/ansible/pull/60051#pullrequestreview-351878125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "010bfb72-7b12-4297-b0cb-3a5f05aa1d66",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You also want to check the option's aliases.",
        "createdAt" : "2020-02-01T10:26:40Z",
        "updatedAt" : "2020-02-18T08:41:28Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b20c0e69-623c-48c8-a968-01cdae103eca",
        "parentId" : "010bfb72-7b12-4297-b0cb-3a5f05aa1d66",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Also, you only need to check this for top-level options (i.e. if `not context` is true) IMO. Suboptions can still use these names. Or is that incorrect?",
        "createdAt" : "2020-02-01T10:28:42Z",
        "updatedAt" : "2020-02-18T08:41:28Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf28a0f305e1a9ae27d0215558c36a9a6202ae49",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1181,1185 @@        for arg, data in spec.items():\n            restricted_argument_names = ('message', 'syslog_facility')\n            if arg.lower() in restricted_argument_names:\n                msg = \"Argument '%s' in argument_spec \" % arg\n                if context:"
  },
  {
    "id" : "8b1c48bf-4a63-44d9-b175-5c97f6a5c404",
    "prId" : 66385,
    "prUrl" : "https://github.com/ansible/ansible/pull/66385#pullrequestreview-349387179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf3cf6f6-2650-4970-8d70-bc1c152788d5",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "I'm in favor of #66386 and making elements required, because actually wanting `elements='raw'` seems like the anomaly, but until then the default behavior for data_elements is 'raw', so maybe None and 'raw' should be seen as equivalent?",
        "createdAt" : "2020-01-27T17:40:04Z",
        "updatedAt" : "2020-01-28T16:48:04Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "d671fe44-9d30-4d1f-9b16-c48fbb655ad8",
        "parentId" : "cf3cf6f6-2650-4970-8d70-bc1c152788d5",
        "authorId" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "body" : "Something like this ?\r\n``... and not ((doc_elements or \"raw\") == (data_elements or \"raw\"))``",
        "createdAt" : "2020-01-28T11:44:45Z",
        "updatedAt" : "2020-01-28T16:48:04Z",
        "lastEditedBy" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "tags" : [
        ]
      },
      {
        "id" : "dd072fa8-78c7-4e66-9f01-66eecbaa4211",
        "parentId" : "cf3cf6f6-2650-4970-8d70-bc1c152788d5",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "I asked mattclay to weigh in on increasing ignore.txt in #66386, and he is also in favor of it so you don't need to change anything about this pull request. Let's merge that one and then this one, so if you could rebase that would be great.",
        "createdAt" : "2020-01-28T13:51:20Z",
        "updatedAt" : "2020-01-28T16:48:04Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "98545c589e842405f71d275d9e53f0375d7e8df0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1477,1481 @@                    msg=msg\n                )\n            if (doc_elements or data_elements) and not (doc_elements == data_elements):\n                msg = \"Argument '%s' in argument_spec\" % arg\n                if context:"
  },
  {
    "id" : "d95f914c-228a-4714-ae46-77b7e5799fe6",
    "prId" : 66961,
    "prUrl" : "https://github.com/ansible/ansible/pull/66961#pullrequestreview-359980705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4b6148d-900d-4dba-8530-f1520b83c70a",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "```suggestion\r\n                msg += \" must omit fourth value or it must be type bool; got %r\" % (check[3], )\r\n```",
        "createdAt" : "2020-02-17T21:57:41Z",
        "updatedAt" : "2020-02-19T13:36:22Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "e699b8a7ac39777e8cf46e81d77956c99d0dfa09",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +1213,1217 @@                if context:\n                    msg += \" found in %s\" % \" -> \".join(context)\n                msg += \" must have forth value omitted or of type bool; got %r\" % (check[3], )\n                self.reporter.error(\n                    path=self.object_path,"
  },
  {
    "id" : "e294b988-1e25-457a-85c7-d7ae273cd244",
    "prId" : 66961,
    "prUrl" : "https://github.com/ansible/ansible/pull/66961#pullrequestreview-359984903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ff15e2e-38b0-4d48-8ac1-52382de9d8db",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "You should be able to catch `TypeError` here rather than `Exception`. Though I suppose a custom callable as a type checker could raise something other than `TypeError`.",
        "createdAt" : "2020-02-17T22:04:56Z",
        "updatedAt" : "2020-02-19T13:36:22Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "be45dab9-2733-4390-92c1-fddbe58b39cb",
        "parentId" : "8ff15e2e-38b0-4d48-8ac1-52382de9d8db",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I used the same `catch` expression as https://github.com/ansible/ansible/blob/8839b5bf82382a7b7291563c0cca1d64959974f7/test/lib/ansible_test/_data/sanity/validate-modules/validate_modules/main.py#L1490-L1497 and https://github.com/ansible/ansible/blob/8839b5bf82382a7b7291563c0cca1d64959974f7/test/lib/ansible_test/_data/sanity/validate-modules/validate_modules/main.py#L1450-L1453",
        "createdAt" : "2020-02-17T22:13:13Z",
        "updatedAt" : "2020-02-19T13:36:22Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "e699b8a7ac39777e8cf46e81d77956c99d0dfa09",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +1298,1302 @@                    with CaptureStd():\n                        dummy = _type_checker(value)\n                except (Exception, SystemExit):\n                    msg = \"required_if\"\n                    if context:"
  }
]