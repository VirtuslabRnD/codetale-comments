[
  {
    "id" : "48202596-009a-478f-9165-c5df52232afe",
    "prId" : 70105,
    "prUrl" : "https://github.com/ansible/ansible/pull/70105#pullrequestreview-431969746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "We shouldn't be adding content-specific rules to the validation code. Why not allow any non `@` prefixed string to be used for collections instead? That will preserve the more strict check for ansible-base while allowing collection authors more flexibility.",
        "createdAt" : "2020-06-16T23:00:08Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "200940c2-d323-4f75-9fb3-12cf9776baab",
        "parentId" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "authorId" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "body" : "I'd be more than happy to do that. It doesn't look like there is branching logic for base vs collection in here now, yeah? I'd love a pointer as to how you think that should look.",
        "createdAt" : "2020-06-16T23:12:58Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "tags" : [
        ]
      },
      {
        "id" : "9d1af153-e09f-4354-b0c2-a4521b843fe0",
        "parentId" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "When the schema is constructed we indicate if a collection is being tested:\r\n\r\nhttps://github.com/ansible/ansible/blob/fc448ea54f1595e8d24e72abd9b5245ec6165842/test/lib/ansible_test/_data/sanity/validate-modules/validate_modules/schema.py#L327\r\n\r\nYou should be able to pass `for_collection` to `author` like we already do for `version`:\r\n\r\nhttps://github.com/ansible/ansible/blob/fc448ea54f1595e8d24e72abd9b5245ec6165842/test/lib/ansible_test/_data/sanity/validate-modules/validate_modules/schema.py#L335",
        "createdAt" : "2020-06-16T23:28:55Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "f218981a-32ac-42bd-88d1-2a687a36178a",
        "parentId" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "authorId" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "body" : "Sweet, thanks! And you think the collection one should basically just be \"there should be an author string\" Will update.",
        "createdAt" : "2020-06-16T23:53:00Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "tags" : [
        ]
      },
      {
        "id" : "eec70301-b1d3-4c67-84b9-b537fd8b9002",
        "parentId" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "@gundalow @acozine What are your thoughts? Should we keep our current author restrictions for ansible-base and allow any value for author in collections?",
        "createdAt" : "2020-06-16T23:54:43Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "0785a981-2250-49eb-a5dc-053fc534e07e",
        "parentId" : "54f6f2d2-55e9-4eb1-bd42-8bb3463a9b90",
        "authorId" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "body" : "I was totally working from a stale copy - my bad. The for_collection stuff is clear and obvious - when I'm actually up to date. :)\r\n",
        "createdAt" : "2020-06-16T23:59:29Z",
        "updatedAt" : "2020-06-17T14:34:23Z",
        "lastEditedBy" : "42defd1e-a8d3-439f-8710-76bae34e29ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbc94e97b9b4fcd6e5a903709178ceb37e03270f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +29,33 @@#     \"OpenStack Ansible SIG\" - OpenStack does not use GitHub\n#     \"Name (!UNKNOWN)\" - For the few untraceable authors\nauthor_line = re.compile(r'^\\w.*(\\(@([\\w-]+)\\)|!UNKNOWN)(?![\\w.])|^Ansible Core Team$|^Michael DeHaan$|^OpenStack Ansible SIG$')\n\n"
  },
  {
    "id" : "45a36337-1928-4913-bc88-a415de66b450",
    "prId" : 71679,
    "prUrl" : "https://github.com/ansible/ansible/pull/71679#pullrequestreview-484921907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d672dda-62f1-401a-9c5e-fd870eb73627",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n        if parsed_version.major == 0 or (parsed_version.major != 0 and (parsed_version.minor != 0 or parsed_version.patch != 0)):\r\n```",
        "createdAt" : "2020-09-09T10:24:17Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "333c6757-af64-4eae-b452-70383c634559",
        "parentId" : "9d672dda-62f1-401a-9c5e-fd870eb73627",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Same as above, this is allowed by the spec.",
        "createdAt" : "2020-09-09T11:43:18Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "25542c679f25b19c80ee0a8dd5825311a994d491",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +162,166 @@        parsed_version = SemanticVersion()\n        parsed_version.parse(version)\n        if parsed_version.major != 0 and (parsed_version.minor != 0 or parsed_version.patch != 0):\n            raise _add_ansible_error_code(\n                Invalid('%s (%r) must be a major release, not a minor or patch release (see specification at '"
  },
  {
    "id" : "16058f6d-b5ab-4a95-88b4-4de090e38d27",
    "prId" : 71679,
    "prUrl" : "https://github.com/ansible/ansible/pull/71679#pullrequestreview-484922479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c0d15e6-559b-4335-b15a-2e4a809b3c87",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n                    if version.major != 0 and version.patch != 0:\r\n```\r\n1. Shouldn't version.minor be here?\r\n2. If the current version is, for example, 1.2.3 and we plan to add add a feature in 1.3.3, will it work correctly? I guess .major and .minor version can be both not `0`",
        "createdAt" : "2020-09-09T10:32:17Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "ffe7469d-8e9f-456e-8106-4164c9a9de50",
        "parentId" : "5c0d15e6-559b-4335-b15a-2e4a809b3c87",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Also by the spec, 0.x.y can do whatever it wants. Only for x.y.z with x != 0, new features cannot happen for z != 0.",
        "createdAt" : "2020-09-09T11:44:10Z",
        "updatedAt" : "2020-09-11T04:08:13Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "25542c679f25b19c80ee0a8dd5825311a994d491",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +291,295 @@                    version = SemanticVersion()\n                    version.parse(version_added)\n                    if version.major != 0 and version.patch != 0:\n                        raise _add_ansible_error_code(\n                            Invalid('version_added (%r) must be a major or minor release, '"
  },
  {
    "id" : "96ae55ea-1c88-4d73-8a9e-743e1c46648b",
    "prId" : 73707,
    "prUrl" : "https://github.com/ansible/ansible/pull/73707#pullrequestreview-629349472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "741183c3-3413-4e49-8350-86345ee558e3",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "I'm not sure what this change means in terms of testing module docs against the schema. I like the new attributes. I'd also like to see them tested to prevent typos and other errors of omission and commission. It would be nice to avoid things like `asynch`/`async`.",
        "createdAt" : "2021-04-06T19:36:24Z",
        "updatedAt" : "2021-04-16T15:15:49Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "08da80de-6f26-4fd4-b120-fc8bef5def8c",
        "parentId" : "741183c3-3413-4e49-8350-86345ee558e3",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "this is what I got from felix when asking how to add to the schema.",
        "createdAt" : "2021-04-06T19:47:04Z",
        "updatedAt" : "2021-04-16T15:15:49Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a614e47df9fd56085e542b250039daee7730fccf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +524,528 @@            Schema(\n                doc_schema_dict,\n                extra=ALLOW_EXTRA\n            ),\n            partial(version_added, error_code='module-invalid-version-added', accept_historical=not for_collection),"
  },
  {
    "id" : "e61704ad-8ca6-4659-877c-f55e2d2aa46f",
    "prId" : 74295,
    "prUrl" : "https://github.com/ansible/ansible/pull/74295#pullrequestreview-639885238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71c29e92-978c-4fc2-9686-27c571c51a4a",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "How about \r\n```python\r\nfrom decimal import Context, Decimal\r\n\r\ndef emit_version_range(ver, num):\r\n    ctx = Context(3)  # x.xx\r\n    for _ in range(num):\r\n        ver = ver.next_plus(ctx)\r\n        yield ver\r\n```\r\nand then\r\n```suggestion\r\n    ver = Decimal('.'.join(__version__.split('.')[:2]))\r\n    return Any(*[str(v) for v in emit_version_range(ver, 5)])\r\n```\r\n\r\n(inspired by @nitzmahone's comments on Slack but it's probably overkill)",
        "createdAt" : "2021-04-20T12:29:32Z",
        "updatedAt" : "2021-04-20T12:47:35Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "617e95ff5656e38e35aec1cc34072f9909adeb0d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +64,68 @@    \"\"\"Create a list of valid version for deprecation entries, current+4\"\"\"\n    major, minor = [int(version) for version in __version__.split('.')[0:2]]\n    return Any(*['{0}.{1}'.format(major, minor + increment) for increment in range(0, 5)])\n\n"
  }
]