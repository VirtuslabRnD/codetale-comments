[
  {
    "id" : "402b51f4-e08c-496f-bfd9-d83238d325f7",
    "prId" : 3136,
    "prUrl" : "https://github.com/zio/zio/pull/3136#pullrequestreview-381049174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c406a63-6fdf-4cd6-9bdf-33b445d7ca22",
        "parentId" : null,
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "@ self => we could use Long internally instead of Int for the counter and have a formula like `(value - range.start) % range.step == 0` to check if its satisfied, therefore moveing the limit from Int.MaxValue to Long.MaxValue for open-ended repetition upper bounds, however letting the test repeat `Int.MaxValue` times is already an overkill, I can't imagine ATM a scenario where a higher limit is useful",
        "createdAt" : "2020-03-25T11:08:19Z",
        "updatedAt" : "2020-03-27T16:46:08Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      }
    ],
    "commit" : "55dd605b19c0be97eb203ae208797328ef7c8f08",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +176,180 @@                        if (range.end != -1) range contains value\n                        else {\n                          val fakeUnboundedRange = range.start to Int.MaxValue by range.step\n                          fakeUnboundedRange contains value\n                        }"
  }
]