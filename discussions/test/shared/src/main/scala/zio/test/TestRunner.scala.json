[
  {
    "id" : "5747c3cf-7bec-478d-a6c6-64b0a63b4af3",
    "prId" : 1438,
    "prUrl" : "https://github.com/zio/zio/pull/1438#pullrequestreview-281417757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41a65536-b7a1-48d4-b9ab-136f93ec9f25",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "One thing disturbs me about this: Where are these `E` and `S` values coming from? Of course we know they are in `T` but the code does not know that. I think we can still merge and figure it out later.",
        "createdAt" : "2019-08-29T07:47:49Z",
        "updatedAt" : "2019-08-31T01:34:31Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "40a547c5-0bc8-4db2-a01e-2ec76a342bc5",
        "parentId" : "41a65536-b7a1-48d4-b9ab-136f93ec9f25",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Totally agree. We're relying on the `TestExecutor` to be implemented for a specific `T` that does have an `E` and an `S` in it, like `ZSpec` does, or something convertible to those. Otherwise the `TestExecutor` would have to use some dummy values for those. Maybe `Spec` needs to have `E` and `S` parameters?",
        "createdAt" : "2019-08-29T12:24:57Z",
        "updatedAt" : "2019-08-31T01:34:31Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "655bd32fcc5c8743fdc7579c8c386e81985d7a51",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +39,43 @@   * Runs the spec, producing the execution results.\n   */\n  final def run(spec: Spec[L, T]): URIO[TestLogger with Clock, ExecutedSpec[L, E, S]] =\n    executor(spec, ExecutionStrategy.ParallelN(4)).timed.flatMap {\n      case (duration, results) => reporter(duration, results).as(results)"
  }
]