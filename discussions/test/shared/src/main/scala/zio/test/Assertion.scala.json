[
  {
    "id" : "061278aa-d987-4024-a1b2-d1e53e555e08",
    "prId" : 3142,
    "prUrl" : "https://github.com/zio/zio/pull/3142#pullrequestreview-376778148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb7e708b-4f0f-41a4-b46e-a8042198f64a",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Great!",
        "createdAt" : "2020-03-18T12:06:01Z",
        "updatedAt" : "2020-03-23T02:17:40Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9509b072907bdddb5280e1a9de965fab62e52ed0",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +584,588 @@   * assertion.\n   */\n  def isFailure(assertion: Assertion[Throwable]): Assertion[Try[Any]] =\n    Assertion.assertionRec(\"isSuccess\")(param(assertion))(assertion) {\n      case Failure(a) => Some(a)"
  },
  {
    "id" : "b39eb4b8-20cd-4cc2-9e1c-f6eaa1058451",
    "prId" : 2971,
    "prUrl" : "https://github.com/zio/zio/pull/2971#pullrequestreview-364301441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a96b284d-cd20-445c-a0c4-a5f9705440ed",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "TIL about ClassTag.unapply!",
        "createdAt" : "2020-02-25T17:06:03Z",
        "updatedAt" : "2020-02-25T17:06:28Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "6de40a513501ae0d3fd6c67a2f508df8bc4925d3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +598,602 @@   */\n  def isSubtype[A](assertion: Assertion[A])(implicit C: ClassTag[A]): Assertion[Any] =\n    Assertion.assertionRec(\"isSubtype\")(param(className(C)))(assertion)(C.unapply(_))\n\n  /**"
  },
  {
    "id" : "39e000cc-a6bf-4697-8e31-2da7fd371e7f",
    "prId" : 2875,
    "prUrl" : "https://github.com/zio/zio/pull/2875#pullrequestreview-357397847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18475878-dd98-4a9d-a1e9-60b2c25185b1",
        "parentId" : null,
        "authorId" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "body" : "It may be worth mentioning the Scala bug here, as this code can probably be dropped at some point in the future.",
        "createdAt" : "2020-02-12T10:11:35Z",
        "updatedAt" : "2020-02-12T12:01:50Z",
        "lastEditedBy" : "cc8bc8c4-90ec-4817-908a-529be81ef42a",
        "tags" : [
        ]
      },
      {
        "id" : "ace801cd-5362-4c48-ae4f-ba041a4a7852",
        "parentId" : "18475878-dd98-4a9d-a1e9-60b2c25185b1",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Good idea. Done now.",
        "createdAt" : "2020-02-12T12:02:15Z",
        "updatedAt" : "2020-02-12T12:02:16Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d45d785723c976433f49218e7feb460a0a9c3007",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +119,123 @@      } catch {\n        // See https://github.com/scala/bug/issues/2034.\n        case t: InternalError if t.getMessage == \"Malformed class name\" =>\n          C.runtimeClass.getName\n      }"
  },
  {
    "id" : "220e4b8d-20f0-41c2-91f0-072d29377f1b",
    "prId" : 2600,
    "prUrl" : "https://github.com/zio/zio/pull/2600#pullrequestreview-343240453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9587f183-5a21-4c22-9692-9d3579c6aba5",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I like this new version of `hasMessage` because it gives the caller flexibility to assert something other than just that the string is equal to the specified value. But I don't think we want to overload assertions like this since the description is also used for determining if two assertions are equal. Maybe we just keep the new version?",
        "createdAt" : "2020-01-13T02:00:52Z",
        "updatedAt" : "2020-01-15T21:13:10Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "a6e193e4-bbba-42c1-9c16-60d22e9ef777",
        "parentId" : "9587f183-5a21-4c22-9692-9d3579c6aba5",
        "authorId" : "1ca841ad-cf41-4d4d-ab0f-56c3559e6a2f",
        "body" : "What about renaming it to `hasMessageEqualTo`?",
        "createdAt" : "2020-01-15T13:36:14Z",
        "updatedAt" : "2020-01-15T21:13:10Z",
        "lastEditedBy" : "1ca841ad-cf41-4d4d-ab0f-56c3559e6a2f",
        "tags" : [
        ]
      },
      {
        "id" : "70ae06db-ca01-4127-a405-de20efae8299",
        "parentId" : "9587f183-5a21-4c22-9692-9d3579c6aba5",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "We definitely could. At that point I wonder if we should just get rid of it in favor of the new version and do `hasMessage(equalTo(s))`. It is about the same length, more composable, and I don't think the current usage of `hasMessage` is that common (it is only used 5 times in our entire code base today) where we need to have a special combinator for it.",
        "createdAt" : "2020-01-15T14:06:14Z",
        "updatedAt" : "2020-01-15T21:13:10Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "240de37999d4985ba219ac6e750d1b5ea13c93ed",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +297,301 @@   * Makes a new assertion that requires an exception to have a certain message.\n   */\n  def hasMessage(message: Assertion[String]): Assertion[Throwable] =\n    Assertion.assertionRec(\"hasMessage\")(param(message))(message)(th => Some(th.getMessage))\n"
  },
  {
    "id" : "dd8b1ad3-0ede-414f-832f-fb762d728b0b",
    "prId" : 2335,
    "prUrl" : "https://github.com/zio/zio/pull/2335#pullrequestreview-324194208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "354caf1a-063b-471c-93cb-ba6b374889d0",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "`UIO[Boolean]`?",
        "createdAt" : "2019-11-28T10:34:08Z",
        "updatedAt" : "2019-11-28T10:34:09Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "660f3d597830ba51299e4392892bd2fc4361ed89",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +187,191 @@  final def assertionM[R, E, A](\n    name: String\n  )(params: RenderParam*)(run: (=> A) => ZIO[Any, Nothing, Boolean]): Assertion[A] = {\n    lazy val assertion: Assertion[A] = assertionDirect(name)(params: _*) { actual =>\n      BoolAlgebraM.fromEffect(run(actual)).flatMap { p =>"
  },
  {
    "id" : "606d3c8c-93cf-46ae-beaf-958c9e6ed87c",
    "prId" : 2335,
    "prUrl" : "https://github.com/zio/zio/pull/2335#pullrequestreview-324195353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0d63893-f35d-4b2c-97f9-1c28c75eea84",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "I suppose we can add assertions on effects directly now, e.g. `failsM(zio)` and the like...",
        "createdAt" : "2019-11-28T10:35:58Z",
        "updatedAt" : "2019-11-28T10:35:59Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "660f3d597830ba51299e4392892bd2fc4361ed89",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +19,23 @@import scala.reflect.ClassTag\n\nimport zio.{ Cause, Exit, ZIO }\nimport zio.test.Assertion._\nimport zio.test.Assertion.Render._"
  },
  {
    "id" : "01c2b538-24ba-413b-8bcd-004ed9d20345",
    "prId" : 1737,
    "prUrl" : "https://github.com/zio/zio/pull/1737#pullrequestreview-291467161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88236917-2fdd-4df5-ad9e-b2ba2c8bbacf",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Great additional documentation! I wonder if we should add a `isSubtypeOf` assertion that doesn't take another parameter to make this use case more ergonomic.",
        "createdAt" : "2019-09-21T14:15:01Z",
        "updatedAt" : "2019-09-21T14:26:30Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "4d5efed0-6464-486c-9c52-24df9f86a670",
        "parentId" : "88236917-2fdd-4df5-ad9e-b2ba2c8bbacf",
        "authorId" : "cedd3d41-d7bd-43be-a43f-3a5351be8159",
        "body" : "I was really confused about that when I first started coding it - to be honest this was the only odd thing in the whole PR after I've read the ZIO test spec. So as a new user of this I'd recommend having an option to call `isSubtype[A]()`",
        "createdAt" : "2019-09-21T14:23:49Z",
        "updatedAt" : "2019-09-21T14:26:44Z",
        "lastEditedBy" : "cedd3d41-d7bd-43be-a43f-3a5351be8159",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e6fbedfdefa0c2ae727cc7c6f1f595bd7970d56",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +469,473 @@   * Example:\n   * {{{\n   *   assert(Duration.fromNanos(1), isSubtype[Duration.Finite](Assertion.anything))\n   * }}}\n   */"
  },
  {
    "id" : "de973a90-e298-4ec0-a6f0-302a91c752f4",
    "prId" : 1668,
    "prUrl" : "https://github.com/zio/zio/pull/1668#pullrequestreview-287957924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba41e09f-76ca-478d-97e0-4f5ced4967c9",
        "parentId" : null,
        "authorId" : "d0fd50f4-2db6-438e-b980-367d69a753a5",
        "body" : "maybe should I rename this function to `include`? ü§∑‚Äç‚ôÇ ",
        "createdAt" : "2019-09-13T11:26:44Z",
        "updatedAt" : "2019-09-14T09:30:45Z",
        "lastEditedBy" : "d0fd50f4-2db6-438e-b980-367d69a753a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b43cfdbfc896d4d96e488bbaca49841bee04efb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +199,203 @@   * Makes a new assertion that requires a substring to be present.\n   */\n  final def containsString(element: String): Assertion[String] =\n    Assertion.assertion(\"containsString\")(param(element))(_.contains(element))\n"
  },
  {
    "id" : "51827305-7036-4074-8fc1-a983112c47a6",
    "prId" : 1551,
    "prUrl" : "https://github.com/zio/zio/pull/1551#pullrequestreview-285210298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52baa449-9be0-48b8-8ece-fc55b4dc968c",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "This is good. Eventually we could embed precedence here to make rendering a bit nicer.",
        "createdAt" : "2019-09-08T11:27:13Z",
        "updatedAt" : "2019-09-08T11:36:14Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "77cdca20d4e6d6f636deac6644933e55d1114855",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +91,95 @@        name + paramLists.map(_.mkString(\"(\", \", \", \")\")).mkString\n      case Render.Infix(left, op, right) =>\n        \"(\" + left + \" \" + op + \" \" + right + \")\"\n    }\n  }"
  },
  {
    "id" : "7a3a73ca-3474-4151-b20a-401c50f5a8e5",
    "prId" : 1536,
    "prUrl" : "https://github.com/zio/zio/pull/1536#pullrequestreview-282305846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7912826e-ea1d-4edc-85b7-a1851431b6b2",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "üëç \r\n",
        "createdAt" : "2019-08-31T13:08:46Z",
        "updatedAt" : "2019-08-31T13:08:46Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd7beb4c1a3c898af21e91e1662a8f413235600e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +248,252 @@   * Makes a new assertion that requires an exit value to be interrupted.\n   */\n  final def isInterrupted: Assertion[Exit[Any, Any]] =\n    Assertion.assertionRec[Exit[Any, Any]](s\"isInterrupted\") { (self, actual) =>\n      actual match {"
  },
  {
    "id" : "b8c4ba9f-8183-4cdf-9f9a-646577a96a1d",
    "prId" : 1438,
    "prUrl" : "https://github.com/zio/zio/pull/1438#pullrequestreview-280157579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a51ab29-f232-41a4-b6a4-19e96fba28b7",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "This is a really nice cleanup!",
        "createdAt" : "2019-08-27T12:58:51Z",
        "updatedAt" : "2019-08-31T01:34:31Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "655bd32fcc5c8743fdc7579c8c386e81985d7a51",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +43,47 @@  final def ||[A1 <: A](that: => Assertion[A1]): Assertion[A1] =\n    Assertion.assertionDirect(s\"(${self} || ${that})\") { actual =>\n      self.run(actual) || that.run(actual)\n    }\n"
  }
]