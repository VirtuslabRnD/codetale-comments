[
  {
    "id" : "74e5b8ce-14bd-4ebb-9341-a52aed24922f",
    "prId" : 13121,
    "prUrl" : "https://github.com/nodejs/node/pull/13121#pullrequestreview-40151605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d893f9c8-4747-488d-a5f1-7543f7dc4613",
        "parentId" : null,
        "authorId" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "body" : "Would it be better to make it an array of objects instead of doing the string check for the title ? \r\nex\r\n{ title: 'External value without a finalizer', steps: [() => {...}, () => {...},  etc ]}",
        "createdAt" : "2017-05-19T21:11:41Z",
        "updatedAt" : "2017-05-30T19:58:33Z",
        "lastEditedBy" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "tags" : [
        ]
      },
      {
        "id" : "9221a660-4197-4157-802a-920ec38f0d05",
        "parentId" : "d893f9c8-4747-488d-a5f1-7543f7dc4613",
        "authorId" : "b168ffae-d178-46d3-90cb-cfc89396f4a4",
        "body" : "That would work too, but would be more complicated to do the nested iteration recursively. I didn't see a need to over-design this just for these few tests. I can do it if you want. :)",
        "createdAt" : "2017-05-19T22:06:34Z",
        "updatedAt" : "2017-05-30T19:58:33Z",
        "lastEditedBy" : "b168ffae-d178-46d3-90cb-cfc89396f4a4",
        "tags" : [
        ]
      },
      {
        "id" : "f29270e9-39ea-4b1d-845a-53bf2a1f8f4b",
        "parentId" : "d893f9c8-4747-488d-a5f1-7543f7dc4613",
        "authorId" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "body" : "I was thinking it would actually be easier/less code, but if you don't think that's the case I don't want to hold up getting this landed.  I may take a look/PR later on when I have time if what I was thinking can simply, if not then I'll leave it be.",
        "createdAt" : "2017-05-24T21:08:57Z",
        "updatedAt" : "2017-05-30T19:58:33Z",
        "lastEditedBy" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb91879f316088d165a79ee5d992796fdbc879e3",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +35,39 @@runTests(0, undefined, [\n\n  'External value without a finalizer',\n  () => {\n    const value = test_reference.createExternal();"
  },
  {
    "id" : "d19eb462-3ec8-402f-acae-31f7122f5892",
    "prId" : 13121,
    "prUrl" : "https://github.com/nodejs/node/pull/13121#pullrequestreview-39548325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a57cb570-a231-41a9-be5d-901692639588",
        "parentId" : null,
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "Couldn't you replace the `try...catch`, `throw`, and `console.error()` call with a call to `assert.doesNotThrow()`?",
        "createdAt" : "2017-05-22T14:21:08Z",
        "updatedAt" : "2017-05-30T19:58:33Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "c621cf91-0d98-4207-8411-7b6a2fd630dd",
        "parentId" : "a57cb570-a231-41a9-be5d-901692639588",
        "authorId" : "b168ffae-d178-46d3-90cb-cfc89396f4a4",
        "body" : "That could work, except `assert.doesNotThrow()` **loses the stack trace of the original exception**; it only displays the message. So I prefer not to use it except when checking for a very specific exceptional condition. In this case, the original exception stack trace is likely to point to a line number of another assertion in the file, so that's very helpful information.",
        "createdAt" : "2017-05-22T18:11:07Z",
        "updatedAt" : "2017-05-30T19:58:33Z",
        "lastEditedBy" : "b168ffae-d178-46d3-90cb-cfc89396f4a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb91879f316088d165a79ee5d992796fdbc879e3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +20,24 @@      runTests(i + 1, title, tests);\n    } else {\n      try {\n        tests[i]();\n      } catch (e) {"
  }
]