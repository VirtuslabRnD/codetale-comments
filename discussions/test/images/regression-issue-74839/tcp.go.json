[
  {
    "id" : "167a8b68-7f60-4c4a-87fd-f8c4463f09fe",
    "prId" : 95328,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95328#pullrequestreview-504075365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "you could just `chk.add([]byte{0, tcpProtoNum})` and then do a second add with just the length.\r\n(I guess this is just moving the existing code unchanged, but it's not really clear why it adds the src/dest separately but then agglomerates the remaining fields together. Likewise in the IPv6 case.)",
        "createdAt" : "2020-10-07T13:00:15Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "6d768573-bdd4-4911-8172-243738b0b8b3",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I copied pasted as you said, I tested the result and it works, if we'll need to reuse it sometime later I would take a completely approach or us a more prove library like gopacket",
        "createdAt" : "2020-10-07T13:35:49Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "b36c8ad7-b7c6-4cc5-a908-f62672af9e6a",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "actually the pseudo header is including the source ips , as I show in the comment `[ src (4) | dst (4) | rsv (1) | proto (1) | tcp length (2) ]`",
        "createdAt" : "2020-10-07T14:44:34Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "6e384ce4-85ae-4073-8761-9e1529bcc958",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "The pseudo header includes the IPs. `pseudoHeader` doesn't. That's the thing that's weird.",
        "createdAt" : "2020-10-07T14:48:08Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "71d24fe1-3722-437d-86d5-a5a04f82f918",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "will change it too thanks",
        "createdAt" : "2020-10-07T14:50:03Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "191f2023-119b-43c6-afaf-8dfb8fb94bc3",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "ok, I think that this is this way to use the `binary.BigEndian.PutUint16()` method",
        "createdAt" : "2020-10-07T14:55:55Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "e2246371-3f8a-4d02-a851-44df88b03d23",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, that should be fixed",
        "createdAt" : "2020-10-07T16:08:11Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "303f6ac8-a88e-4182-bee6-b37f52fb4069",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "it seems I can not assign directly a `type IP`to a slice `[]bytes` :/",
        "createdAt" : "2020-10-07T16:22:16Z",
        "updatedAt" : "2020-10-07T16:30:59Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ab13d71c-36b8-4eff-9cd3-d6d3af1367f9",
        "parentId" : "40c4ccf7-c37d-48f3-a6ff-e00191c57496",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "will keep it as is if you don't mind, ",
        "createdAt" : "2020-10-07T16:46:16Z",
        "updatedAt" : "2020-10-07T16:46:17Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0887285f51c916509947539ad817f33b908cdd2",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\tchk.add(dest.To4())\n\t\tpseudoHeader := make([]byte, 4)\n\t\tpseudoHeader[1] = tcpProtoNum\n\t\tbinary.BigEndian.PutUint16(pseudoHeader[2:], uint16(len(data)+len(tcpHeader)))\n\t\tchk.add(pseudoHeader)"
  }
]