[
  {
    "id" : "8488fd6a-6fed-4364-8f31-dff246e24aa6",
    "prId" : 89380,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89380#pullrequestreview-381232958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0168c437-ef8e-4558-87dd-bf28f74e4293",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Would it be more efficient to do `s.roundRobinIdx = (s.roundRobinIdx + 1) % len(s.LabelValues)` instead?",
        "createdAt" : "2020-03-25T13:57:19Z",
        "updatedAt" : "2020-03-26T19:52:54Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "cb283ee5-c1ac-4463-baca-fe161b69499c",
        "parentId" : "0168c437-ef8e-4558-87dd-bf28f74e4293",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I think both would be comparable. But this shouldn't account for much.",
        "createdAt" : "2020-03-25T14:59:28Z",
        "updatedAt" : "2020-03-26T19:52:54Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b2ff544ede9c064002637b5bd00597105347e94",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1001,1005 @@\tif s.roundRobinIdx == len(s.LabelValues) {\n\t\ts.roundRobinIdx = 0\n\t}\n\treturn []byte(patch)\n}"
  },
  {
    "id" : "2078c1f5-ded0-4b41-a4d3-901268f68f56",
    "prId" : 82170,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82170#pullrequestreview-282354604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da97ace4-1fcd-44f8-a258-89674e33960d",
        "parentId" : null,
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "Why not just have the application logic at the use sites apply whatever logic they want? Do we have similar \"get default value in certain situations\" methods for all the other values?\r\n\r\nIn what situations does the default change? Why not use the same default throughout and make it a constant?\r\n\r\nI'm not against having a method like this, but it seems slightly unnecessary and maybe even a bit confusing. If I was creating an object, I wouldn't know what the default should be and would expect that to just be set if there was a helper method like this. Otherwise this method is just a specific use case of\r\n\r\n```\r\nfunc firstPositiveInt64Val(vals ...*int64) *int64{\r\n   for _,v := range vals{\r\n    if v!=nil && *v>0 {return v}\r\n  }\r\n}\r\n```",
        "createdAt" : "2019-09-01T17:53:55Z",
        "updatedAt" : "2019-09-01T17:53:56Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      },
      {
        "id" : "e43b2edc-ef43-4b25-85f3-c824196a3a5f",
        "parentId" : "da97ace4-1fcd-44f8-a258-89674e33960d",
        "authorId" : "73cba353-2317-4305-8981-830b29b34769",
        "body" : "It seems this has maybe already been talked about by other comments and is otherwise lgtm/approved. Disregard if everyone is happy with it, but had just gotten around to review.",
        "createdAt" : "2019-09-01T17:55:05Z",
        "updatedAt" : "2019-09-01T17:55:05Z",
        "lastEditedBy" : "73cba353-2317-4305-8981-830b29b34769",
        "tags" : [
        ]
      }
    ],
    "commit" : "6392b69a1d010f1c1453fc1a3b346e3ff2d708b2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +1542,1546 @@}\n\nfunc (config *RCConfig) getTerminationGracePeriodSeconds(defaultGrace *int64) *int64 {\n\tif config.TerminationGracePeriodSeconds == nil || *config.TerminationGracePeriodSeconds < 0 {\n\t\treturn defaultGrace"
  },
  {
    "id" : "9d9b5dc2-e4cc-4f54-82dd-59f0652b71b1",
    "prId" : 70114,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70114#pullrequestreview-168913947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f574457e-530b-4bc3-888b-22bcb70125e3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do we want to include a namespace and configmap projection as well to model the primary usage?",
        "createdAt" : "2018-10-26T14:23:03Z",
        "updatedAt" : "2018-10-26T16:58:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "aa2e227e-c51e-4b57-ae3c-be07352909a2",
        "parentId" : "f574457e-530b-4bc3-888b-22bcb70125e3",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Done.",
        "createdAt" : "2018-10-26T16:58:59Z",
        "updatedAt" : "2018-10-26T16:58:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "76134826239445042e21d6558827601acbe8ba45",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1260,1264 @@\t\t\tVolumeSource: v1.VolumeSource{\n\t\t\t\tProjected: &v1.ProjectedVolumeSource{\n\t\t\t\t\tSources: []v1.VolumeProjection{\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tServiceAccountToken: &v1.ServiceAccountTokenProjection{"
  },
  {
    "id" : "272d31ec-d0ce-489b-b6e6-31a511f3da3e",
    "prId" : 67089,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67089#pullrequestreview-144096704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c91158c-5a11-44dc-8afb-14ccf8eba15a",
        "parentId" : null,
        "authorId" : "e739420e-d5c5-4f38-b9a7-7f3f738b886f",
        "body" : "nit: why do we need to copy this list?",
        "createdAt" : "2018-08-07T17:12:56Z",
        "updatedAt" : "2018-08-07T17:12:56Z",
        "lastEditedBy" : "e739420e-d5c5-4f38-b9a7-7f3f738b886f",
        "tags" : [
        ]
      }
    ],
    "commit" : "29a32307a71f6d3f355924d06bf2f21f44f0a90f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +610,614 @@\t}\n\tif config.Tolerations != nil {\n\t\ttemplate.Spec.Tolerations = append([]v1.Toleration{}, config.Tolerations...)\n\t}\n\tif config.Ports != nil {"
  },
  {
    "id" : "2f8b5dfc-e903-4478-acc9-6b4c8c0c36db",
    "prId" : 46117,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46117#pullrequestreview-39271841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "876dab76-0114-4c8b-9158-79ef23b39fb7",
        "parentId" : null,
        "authorId" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "body" : "Does this need to be exported?",
        "createdAt" : "2017-05-19T18:38:22Z",
        "updatedAt" : "2017-07-19T04:31:45Z",
        "lastEditedBy" : "9f7f8cbb-dba7-4f34-b35c-4736c33af13c",
        "tags" : [
        ]
      },
      {
        "id" : "cbbb9e53-0af0-4e4c-a664-8ce485ef9b1d",
        "parentId" : "876dab76-0114-4c8b-9158-79ef23b39fb7",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Yes, its being used in generatePods code.",
        "createdAt" : "2017-05-19T18:47:12Z",
        "updatedAt" : "2017-07-19T04:31:45Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f81f8b56ef42b7192ce29edc31973c29673dea92",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1004,1008 @@}\n\nfunc CreatePod(client clientset.Interface, namespace string, podCount int, podTemplate *v1.Pod) error {\n\tvar createError error\n\tlock := sync.Mutex{}"
  },
  {
    "id" : "82f6d9b1-e332-4de8-96f1-7080cc2cfd3f",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-20976170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e58b8486-4f3e-4742-af13-6df7aec9a807",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "My only nit left is 200ms enough time to not cause flakes?  ",
        "createdAt" : "2017-02-08T21:02:54Z",
        "updatedAt" : "2017-02-10T01:14:06Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "cc11458b-141b-4e76-9b39-f99101a28f62",
        "parentId" : "e58b8486-4f3e-4742-af13-6df7aec9a807",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "This is only the frequency of checks. I don't see how it can impact flakyness. Timeout is an important thing for that, and it's set for 2 minutes, so waay more than necessary (hopefully).",
        "createdAt" : "2017-02-09T10:31:40Z",
        "updatedAt" : "2017-02-10T01:14:06Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\treturn p, nil\n\t}\n\tpollingPeriod := 200 * time.Millisecond\n\tstartTime := time.Now()\n\tfor startTime.Add(timeout).After(time.Now()) {"
  },
  {
    "id" : "5471a517-f45e-4194-bade-61fcfe41d62f",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21465412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66f017dd-e9f9-4b6d-93f6-23992a7a8407",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "this is already defined as a top-level const, so delete this?",
        "createdAt" : "2017-02-12T01:46:05Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "ceeb1e1e-3945-482b-8a3e-7d423b2bdcd4",
        "parentId" : "66f017dd-e9f9-4b6d-93f6-23992a7a8407",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T09:26:11Z",
        "updatedAt" : "2017-02-13T09:26:11Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +72,76 @@\nfunc RunPodAndGetNodeName(c clientset.Interface, pod *v1.Pod, timeout time.Duration) (string, error) {\n\tretries := 5\n\tname := pod.Name\n\tnamespace := pod.Namespace"
  },
  {
    "id" : "4601e531-ab4c-40dc-b5a0-86bcda4b0c6a",
    "prId" : 38461,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38461#pullrequestreview-12685648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2a0bcd8-8772-40db-ad37-cd276927875b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "It's sad that we need to do such hacks :)",
        "createdAt" : "2016-12-13T10:50:28Z",
        "updatedAt" : "2016-12-13T12:21:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "571030eb-85fa-41c0-841c-5a1d191219aa",
        "parentId" : "e2a0bcd8-8772-40db-ad37-cd276927875b",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Sigh...",
        "createdAt" : "2016-12-13T14:16:28Z",
        "updatedAt" : "2016-12-13T14:16:28Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9e78f1cd5eefd064e4943811871b0839a5534c6",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +360,364 @@\t\t},\n\t\tSpec: batch.JobSpec{\n\t\t\tParallelism: func(i int) *int32 { x := int32(i); return &x }(config.Replicas),\n\t\t\tCompletions: func(i int) *int32 { x := int32(i); return &x }(config.Replicas),\n\t\t\tTemplate: v1.PodTemplateSpec{"
  },
  {
    "id" : "0575567d-881e-4d06-b600-ece56a00c236",
    "prId" : 37837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37837#pullrequestreview-11991636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39cd4bb0-3242-4c98-9d41-fbd705ae6afc",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can you please add a TODO to utilize secrets also in different ways (EnvVars, ImagePullSecrets, etc.)",
        "createdAt" : "2016-12-08T09:34:54Z",
        "updatedAt" : "2016-12-08T10:15:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9e74deff-3d50-4bfb-bd79-a88007a793b4",
        "parentId" : "39cd4bb0-3242-4c98-9d41-fbd705ae6afc",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done. Applying LGTM",
        "createdAt" : "2016-12-08T10:15:07Z",
        "updatedAt" : "2016-12-08T10:15:08Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "be3889810dd2a7a5ce8cf8315a74f7ac46169a41",
    "line" : null,
    "diffHunk" : "@@ -1,1 +980,984 @@\n// TODO: attach secrets using different possibilities: env vars, image pull secrets.\nfunc attachSecrets(template *v1.PodTemplateSpec, secretNames []string) {\n\tvolumes := make([]v1.Volume, 0, len(secretNames))\n\tmounts := make([]v1.VolumeMount, 0, len(secretNames))"
  },
  {
    "id" : "a0362e2c-c3d1-4bc3-983c-75ff37bddf22",
    "prId" : 37696,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37696#pullrequestreview-11365887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b448ae64-272d-42b1-a47a-5448624a31cb",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Since all commits are actually touching the same code, can you please squash all of them?",
        "createdAt" : "2016-12-05T11:28:25Z",
        "updatedAt" : "2016-12-06T11:29:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3ccaf0c6-ae66-491e-bbe4-c492ba07b37b",
        "parentId" : "b448ae64-272d-42b1-a47a-5448624a31cb",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2016-12-05T12:10:04Z",
        "updatedAt" : "2016-12-06T11:29:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "070f0979c29748584693c47b6b194d31c99c0785",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +363,367 @@\treturn config.Replicas\n}\n\nfunc (config *RCConfig) create() error {\n\tdnsDefault := v1.DNSDefault"
  },
  {
    "id" : "f7d5cd79-08ad-4e10-be28-85d5932be05e",
    "prId" : 35204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35204#pullrequestreview-6011276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eec39c6-827a-49a3-85f5-7f9778d1c1f9",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Will this add label or overwrite them? If the latter, this is bad.\n",
        "createdAt" : "2016-10-26T14:17:50Z",
        "updatedAt" : "2016-10-27T09:18:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "fb3b086b-8815-453e-9bce-fe84265f851f",
        "parentId" : "2eec39c6-827a-49a3-85f5-7f9778d1c1f9",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Overwrite them, but it's either that or failing the test alltogether. I think it's fine, as this is only for testing (either e2e or integration)\n",
        "createdAt" : "2016-10-26T15:04:01Z",
        "updatedAt" : "2016-10-27T09:18:59Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "883a0426-d17f-45a5-a80a-5bb368dcfff0",
        "parentId" : "2eec39c6-827a-49a3-85f5-7f9778d1c1f9",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't think overwriting labels for e2e is good. We shouldn't do that.\n",
        "createdAt" : "2016-10-27T08:22:41Z",
        "updatedAt" : "2016-10-27T09:18:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0ef0d238a881ecc2c6ad84f6956fecc8a71d87d",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +650,654 @@func (s *LabelNodePrepareStrategy) PreparePatch(*api.Node) []byte {\n\tlabelString := fmt.Sprintf(\"{\\\"%v\\\":\\\"%v\\\"}\", s.labelKey, s.labelValue)\n\tpatch := fmt.Sprintf(`{\"metadata\":{\"labels\":%v}}`, labelString)\n\treturn []byte(patch)\n}"
  },
  {
    "id" : "230a4dfe-54b0-438c-87f0-e0db8b89811b",
    "prId" : 35196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35196#pullrequestreview-5596015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9b80b05-717a-49ce-bbcd-4967a639a209",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Instead of having this big if-else, I would suggest just leaving the \"if branch\" and just do:\nif podCount > 5 {\n  workqueue.Parallelize(30, ...)\n} else {\n  workqueue.Parallelize(1, ...)\n}\n",
        "createdAt" : "2016-10-25T07:41:57Z",
        "updatedAt" : "2016-10-26T09:52:29Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "be57ca5015c1fbc148c6a8030355cd388a51af1d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +762,766 @@\tif podCount < 30 {\n\t\tworkqueue.Parallelize(podCount, podCount, createPodFunc)\n\t} else {\n\t\tworkqueue.Parallelize(30, podCount, createPodFunc)\n\t}"
  }
]