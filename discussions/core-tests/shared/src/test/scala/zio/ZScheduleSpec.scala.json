[
  {
    "id" : "dba036a0-c397-4399-94f1-d2484be0eaeb",
    "prId" : 1798,
    "prUrl" : "https://github.com/zio/zio/pull/1798#pullrequestreview-307533246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cbae50f-0d66-48a0-be7f-fe9b212c5002",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Are all of these additional type annotations really necessary?",
        "createdAt" : "2019-10-25T22:21:59Z",
        "updatedAt" : "2019-10-27T21:13:24Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "db2cf387-1bc4-4413-a5e8-e75281f6d8de",
        "parentId" : "8cbae50f-0d66-48a0-be7f-fe9b212c5002",
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "I double checked and most of them are necessary because otherwise the inferred any will cause warnings",
        "createdAt" : "2019-10-26T16:27:37Z",
        "updatedAt" : "2019-10-27T21:13:24Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85723fa5b39983f7ca4e00175970147787e755db",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +255,259 @@              i   <- alwaysFail(ref).retryOrElseEither(Schedule.once, ioFail)\n            } yield i)\n              .foldM[Any, Int, String](\n                err => IO.succeed(err),\n                _ => IO.succeed(\"it should not be a success\")"
  },
  {
    "id" : "b259903b-b790-40f0-bbfb-0d6457dc4131",
    "prId" : 1798,
    "prUrl" : "https://github.com/zio/zio/pull/1798#pullrequestreview-307477401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "042fdc66-f3ea-4375-996b-358a60547629",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "re all of these additional type annotations really necessary?",
        "createdAt" : "2019-10-25T22:22:10Z",
        "updatedAt" : "2019-10-27T21:13:24Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "85723fa5b39983f7ca4e00175970147787e755db",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +237,241 @@              i   <- alwaysFail(ref).retryOrElse(Schedule.once, ioFail)\n            } yield i)\n              .foldM[Any, Int, String](\n                err => IO.succeed(err),\n                _ => IO.succeed(\"it should not be a success\")"
  }
]