[
  {
    "id" : "da7d3f8e-cafb-4e8a-a180-64945c382131",
    "prId" : 5229,
    "prUrl" : "https://github.com/zio/zio/pull/5229#pullrequestreview-690719298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c0a5519-d519-4f28-8e18-79dd2e3730ae",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "❤️❤️❤️ This convention is so much nicer than before. We were using `M` to mean different things in different contexts, and that's quite apparent now.",
        "createdAt" : "2021-06-23T14:15:35Z",
        "updatedAt" : "2021-06-23T14:15:35Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "140dba88ecac0298b9bb2e25b34f585986a08e42",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +239,243 @@          for {\n            tmap <- TMap.make(\"a\" -> 1, \"aa\" -> 2, \"aaa\" -> 3)\n            _    <- tmap.transformSTM((k, v) => STM.succeed(k.replaceAll(\"a\", \"b\") -> v * 2))\n            res  <- tmap.toList\n          } yield res"
  },
  {
    "id" : "7cf8e4b3-6aba-4ac2-b048-afdf927b9d1b",
    "prId" : 2610,
    "prUrl" : "https://github.com/zio/zio/pull/2610#pullrequestreview-342008467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff5f89d3-99c7-4183-bffb-30de62fb772e",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Don't we want to assert here and below that the two collections are equal, not just that they have the same elements? It doesn't really matter for the map but we definitely want the lists to be the same (i.e. same elements in the same order) and the two maps should be equal as well.",
        "createdAt" : "2020-01-13T16:28:28Z",
        "updatedAt" : "2020-01-13T17:26:27Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "3c23aa8f-a2f3-4332-88ed-413a747f3613",
        "parentId" : "ff5f89d3-99c7-4183-bffb-30de62fb772e",
        "authorId" : "53ab038b-ef2d-4fc9-b239-9bb8213b6d0c",
        "body" : "@adamgfraser Good point! Is it requirement for TMap to preserve order? I thought it's only its implementation detail.",
        "createdAt" : "2020-01-13T16:49:28Z",
        "updatedAt" : "2020-01-13T17:26:27Z",
        "lastEditedBy" : "53ab038b-ef2d-4fc9-b239-9bb8213b6d0c",
        "tags" : [
        ]
      },
      {
        "id" : "83c3eb10-0aea-4828-aae5-92915f7d11ea",
        "parentId" : "ff5f89d3-99c7-4183-bffb-30de62fb772e",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "It isn’t a requirement to preserve order since you are correct that it is an implementation detail but for the same reason the definition of equality for maps is that they have the same bindings regardless of order.",
        "createdAt" : "2020-01-13T17:04:00Z",
        "updatedAt" : "2020-01-13T17:26:27Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "356b0b12-f159-44a7-bab2-76c3a68d3016",
        "parentId" : "ff5f89d3-99c7-4183-bffb-30de62fb772e",
        "authorId" : "53ab038b-ef2d-4fc9-b239-9bb8213b6d0c",
        "body" : ">  we definitely want the lists to be the same (i.e. same elements in the same order)\r\n\r\nIf I assert for equivalence here, if `tmap.toList` returns in different order (which it can, since TMap doesn't have such invariant to preserve order), the test would fail.",
        "createdAt" : "2020-01-13T17:13:16Z",
        "updatedAt" : "2020-01-13T17:26:27Z",
        "lastEditedBy" : "53ab038b-ef2d-4fc9-b239-9bb8213b6d0c",
        "tags" : [
        ]
      },
      {
        "id" : "d17464dc-a064-48d1-91ac-d8a0ba247f9d",
        "parentId" : "ff5f89d3-99c7-4183-bffb-30de62fb772e",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "You're right. The list won't necessarily be in the same order.",
        "createdAt" : "2020-01-13T17:23:20Z",
        "updatedAt" : "2020-01-13T17:26:27Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "951c4614400bb1afa9028895d4448a97296fee1d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +141,145 @@          } yield list\n\n        assertM(tx.commit)(hasSameElements(elems))\n      },\n      testM(\"toMap\") {"
  },
  {
    "id" : "ea5c43cb-c2be-4dae-89f0-293b9dbc9762",
    "prId" : 2476,
    "prUrl" : "https://github.com/zio/zio/pull/2476#pullrequestreview-355566753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76668718-7321-4876-87bb-df33cf41d3cf",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "This is unfortunate :(",
        "createdAt" : "2019-12-15T18:29:59Z",
        "updatedAt" : "2020-01-07T20:53:36Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "a4cc5dc2-9521-41a1-81b6-6b621c751d11",
        "parentId" : "76668718-7321-4876-87bb-df33cf41d3cf",
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "This is our good friend https://github.com/scala/bug/issues/11798 showing its ugly head",
        "createdAt" : "2019-12-15T19:46:37Z",
        "updatedAt" : "2020-01-07T20:53:36Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      },
      {
        "id" : "447bc0b0-fe3c-4d25-8416-b3beae9d0b63",
        "parentId" : "76668718-7321-4876-87bb-df33cf41d3cf",
        "authorId" : "ebfaa2a9-0d85-435c-9f29-84a8ee7afd0c",
        "body" : "The fix is in again for that lint limitation.",
        "createdAt" : "2020-02-08T20:16:23Z",
        "updatedAt" : "2020-02-08T20:16:24Z",
        "lastEditedBy" : "ebfaa2a9-0d85-435c-9f29-84a8ee7afd0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d23c487c1e7270fdd211f78bc2c27ad565e68e0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +26,30 @@    suite(\"factories\")(\n      testM(\"apply\") {\n        val tx = TMap.make(\"a\" -> 1, \"b\" -> 2, \"c\" -> 2, \"b\" -> 3).flatMap[Any, Nothing, List[(String, Int)]](_.toList)\n        assertM(tx.commit)(hasSameElements(List(\"a\" -> 1, \"b\" -> 3, \"c\" -> 2)))\n      },"
  }
]