[
  {
    "id" : "c543a00f-4124-4b57-a03d-ed75918e7346",
    "prId" : 3031,
    "prUrl" : "https://github.com/zio/zio/pull/3031#pullrequestreview-369990214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01a22af1-6b55-475a-a32d-38703a93f522",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Not as part of this PR but we should think about how to implement functionality like this in `STM` itself. In ZIO it is powered by `Schedule` which we have issues with using because it can execute arbitrary effects but maybe we could have a `TSchedule` structure more similar to the old encoding of `Schedule` that we could use for logic like this.",
        "createdAt" : "2020-03-05T20:59:36Z",
        "updatedAt" : "2020-03-05T21:42:05Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "de381b4e-53bc-48f5-b560-c25d1a19d485",
        "parentId" : "01a22af1-6b55-475a-a32d-38703a93f522",
        "authorId" : "e974b2e7-60e3-49f2-b458-d37af0a7a887",
        "body" : "I would love implementing this. We'll open an issue about this and suggest a PR if that's ok.",
        "createdAt" : "2020-03-05T21:48:08Z",
        "updatedAt" : "2020-03-05T21:48:21Z",
        "lastEditedBy" : "e974b2e7-60e3-49f2-b458-d37af0a7a887",
        "tags" : [
        ]
      },
      {
        "id" : "0d862b1d-cc73-4382-85fb-bbab480f0361",
        "parentId" : "01a22af1-6b55-475a-a32d-38703a93f522",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "My 2 cents here, let's have a `TSchedule` which is super simple as in just having `recurs`. It is quite new \"terrain\" so I'd rather explore this ground incrementally. Once this fella lands, we can add repeats to `ZSTM` / `STM`.",
        "createdAt" : "2020-03-05T22:10:01Z",
        "updatedAt" : "2020-03-05T22:12:22Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "e5c5d465-7668-45eb-a148-b7a37e3c6989",
        "parentId" : "01a22af1-6b55-475a-a32d-38703a93f522",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "That would be great!",
        "createdAt" : "2020-03-05T23:43:03Z",
        "updatedAt" : "2020-03-05T23:43:04Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b01e04de118346a804227744b2efe284b1c94c4e",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@  )\n\n  private def repeat[E, A](stm: STM[E, A])(n: Long): STM[E, A] = n match {\n    case x if x < 1 => STM.die(new Throwable(\"n must be greater than 0\"))\n    case 1          => stm"
  }
]