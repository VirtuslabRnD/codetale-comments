[
  {
    "id" : "ec41ab23-69ea-40a0-890a-2b5cb12b54ee",
    "prId" : 1940,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ebac96b-9d77-43b0-a777-021f702779a6",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Rather than generate a Haskell source tree I'd have generated string output directly. I find that's more concise and easy to follow. Of course, more error prone and less types too. Your choice ultimately. ",
        "createdAt" : "2019-06-29T10:07:20Z",
        "updatedAt" : "2019-07-01T11:27:19Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      },
      {
        "id" : "f7ef3052-9555-4d9f-acca-913e15a94b39",
        "parentId" : "1ebac96b-9d77-43b0-a777-021f702779a6",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "So in this particular case we already create a string. For the data declarations, I would prefer  going over the Haskell source tree because we can reuse the generic instances codegen copied from ghc, also the conversion is rather painless and straight forward.",
        "createdAt" : "2019-07-01T10:45:56Z",
        "updatedAt" : "2019-07-01T11:27:19Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d25ebc1830d3baac273a8895038c82cf8fb85240",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +71,75 @@-- | Generate non-consuming choices to upgrade all templates defined in the module.\ngenerateUpgradeModule :: [String] -> String -> String -> String -> String\ngenerateUpgradeModule templateNames modName pkgA pkgB =\n    unlines $ header ++ concatMap upgradeTemplate templateNames\n  where"
  }
]