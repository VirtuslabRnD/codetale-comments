[
  {
    "id" : "c644e647-79ce-496f-b66c-7f87dd61539f",
    "prId" : 1550,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8a7f3e-b266-4c4a-b182-e4265aeb4180",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Should Eq/Ord be in this module for it?",
        "createdAt" : "2019-06-06T19:33:56Z",
        "updatedAt" : "2019-06-07T21:36:40Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "71ee79a4-978b-4eda-8a76-e6dd65d48f94",
        "parentId" : "fc8a7f3e-b266-4c4a-b182-e4265aeb4180",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "`Eq` and `Ord` need `TextMap.toList`, which is defined in `DA.TextMap` as `primitive @\"BEMapToList\"`. It might make sense to add this as `textMapToList` here. I'm not 100% sure though.",
        "createdAt" : "2019-06-06T21:11:53Z",
        "updatedAt" : "2019-06-07T21:36:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e40aeb40fbf82a851c87a99859d87ecf2a54b5f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +104,108 @@data TextMap a =\n  -- | HIDE\n  TextMap Opaque\n\n-- | The `ContractId a` type represents an id for a contract made from template `a`."
  },
  {
    "id" : "496d72c0-9deb-468a-b6a9-1dc6dd34b9e8",
    "prId" : 1163,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "425467ab-1dac-4260-8a65-750a38c90aef",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "@neil-da Should we add a `Action m` super class constraint? Then the documentation could be:\r\nThe `HasTime` class is for `Action`s that support a notion of current time, like `Update` and `Scenario`.",
        "createdAt" : "2019-05-16T07:50:06Z",
        "updatedAt" : "2019-05-16T19:53:41Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b3ec6a8380b5ae386b7bea24b1b03865607c95a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +130,134 @@\n-- | The `HasTime` class is for where the time is available: `Scenario` and `Update`.\nclass HasTime m where\n    -- | Get the current time.\n    getTime : m Time"
  },
  {
    "id" : "e8d780f7-7405-4da9-896b-7635cbcb59d7",
    "prId" : 508,
    "prUrl" : "https://github.com/digital-asset/daml/pull/508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "903e0f69-7343-4489-8821-64e856fad326",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I am slightly confused here. We donâ€™t seem to convert to this type at any point. Is that left for a separate PR? If so, it might be nice to add a comment here in the meantime.",
        "createdAt" : "2019-04-16T06:28:38Z",
        "updatedAt" : "2019-04-16T06:30:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaf92b94a01cfef9127618cacb514fc95e11ff03",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +187,191 @@-- | HIDE A dummy type for the DAML-LF structural record type\n-- `<f1: a1, f2: a2>`.\ndata Pair (f1 : Symbol) (f2 : Symbol) a1 a2 = Pair Opaque\n\n-- | HIDE Function to turn a DAML-LF structural record type into a DAML pair."
  }
]