[
  {
    "id" : "246ac362-05ca-4560-b4c0-283633f7aa13",
    "prId" : 1695,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d410f584-44e7-41ad-ae8d-1b2e9b54a0f3",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We could generalize this to `instance IsParties a => IsParties (Optional a)`. Not sure how sensible that would be.",
        "createdAt" : "2019-06-16T19:58:03Z",
        "updatedAt" : "2019-06-16T19:58:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "54cc0fa4-98dc-47aa-9b19-e9fcf1dfd6e6",
        "parentId" : "d410f584-44e7-41ad-ae8d-1b2e9b54a0f3",
        "authorId" : "82031b13-11ba-4a52-9f92-f406f386b227",
        "body" : "Actually I was thinking today that I will need `[Optional Party]` too. So guess they ought to both be generalized. ",
        "createdAt" : "2019-06-16T20:06:37Z",
        "updatedAt" : "2019-06-16T20:06:37Z",
        "lastEditedBy" : "82031b13-11ba-4a52-9f92-f406f386b227",
        "tags" : [
        ]
      },
      {
        "id" : "5b4b9ec2-5113-4dff-a521-4b23b36b3791",
        "parentId" : "d410f584-44e7-41ad-ae8d-1b2e9b54a0f3",
        "authorId" : "ae60e743-c84b-4dcb-b3a0-6ab7bb28865b",
        "body" : "@cocreature \r\nHmm - something like this, perhaps?\r\n```\r\ninstance IsParties Party where\r\n  toParties p = [p]\r\n\r\ninstance IsParties a => IsParties [a] where\r\n  toParties ps = concat $ fmap toParties ps\r\n\r\ninstance IsParties a => IsParties (Optional a) where\r\n  toParties None = []\r\n  toParties (Some p) = toParties p\r\n```",
        "createdAt" : "2019-06-16T22:24:00Z",
        "updatedAt" : "2019-06-16T22:24:00Z",
        "lastEditedBy" : "ae60e743-c84b-4dcb-b3a0-6ab7bb28865b",
        "tags" : [
        ]
      },
      {
        "id" : "5e106d5e-6bbd-4cf4-a8d7-9c5db3f3ee3d",
        "parentId" : "d410f584-44e7-41ad-ae8d-1b2e9b54a0f3",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Looks sensible to me but it would probably be good if someone who is more familiar with this takes a look, maybe @bame-da or @hurryabit.",
        "createdAt" : "2019-06-17T08:30:28Z",
        "updatedAt" : "2019-06-17T08:30:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a1cb972a-c37b-46d7-8c2c-51531af0f527",
        "parentId" : "d410f584-44e7-41ad-ae8d-1b2e9b54a0f3",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Generalising the list version is going to lead to worse error messages. My inclination is that we should add `Optional Party` and `[Party]`, but if @sofus-da wants `[Optional Party]` then a catMaybes (or whatever we called it) should be used.",
        "createdAt" : "2019-06-17T10:57:41Z",
        "updatedAt" : "2019-06-17T10:58:17Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "68c44b56099e591a5db723d843c06f8eff5155f1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +180,184 @@  toParties ps = ps\n\ninstance IsParties (Optional Party) where\n  toParties None = []\n  toParties (Some p) = [p]"
  },
  {
    "id" : "43324a77-6776-4027-a44b-045a2f1ec670",
    "prId" : 1527,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b04e0560-4541-4a55-9c48-5bf8ec9945de",
        "parentId" : null,
        "authorId" : null,
        "body" : "Can the documentation in `//ghc-lib/template-desugaring.md` get an update please or if you prefer, you can instruct me to do it.",
        "createdAt" : "2019-06-05T12:43:55Z",
        "updatedAt" : "2019-06-05T13:46:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "63d3ffe9-8f9e-4917-95ca-85b21014ed67",
        "parentId" : "b04e0560-4541-4a55-9c48-5bf8ec9945de",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I updated it.",
        "createdAt" : "2019-06-05T12:54:20Z",
        "updatedAt" : "2019-06-05T13:46:52Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b75cf061a2690aa0beb68877031162e0c52644b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +185,189 @@\n    -- | The maintainers of the contract key.\n    maintainer : k -> [Party]\n\n    -- | HIDE"
  },
  {
    "id" : "e7feccd7-31c2-40eb-bf65-6737b40988ea",
    "prId" : 719,
    "prUrl" : "https://github.com/digital-asset/daml/pull/719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "913c9766-8d71-415e-bc15-3a747e5fb6df",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "@neil-da I forgot this in the beginning. I hope we can live with that.",
        "createdAt" : "2019-04-26T09:05:29Z",
        "updatedAt" : "2019-04-26T09:05:29Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "f74da899-a183-4838-b80c-fb7a5d25dc4d",
        "parentId" : "913c9766-8d71-415e-bc15-3a747e5fb6df",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Sure - it only impacts this one function.",
        "createdAt" : "2019-04-26T09:10:42Z",
        "updatedAt" : "2019-04-26T09:10:42Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab895ac0eb2ea7e36f6a5af836a5c0a394f84df",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@-- SPDX-License-Identifier: Apache-2.0\n\n{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n"
  },
  {
    "id" : "55b2c73b-eca0-4cab-8925-742ae1ce1031",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "848f955b-f2e9-41b4-91c7-5f69a8032f70",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "I'd usually uppercase ID (here and below) but up to you\r\n```suggestion\r\n-- | Look up the contract ID associated with a given contract key.\r\n```",
        "createdAt" : "2019-04-26T08:52:05Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      },
      {
        "id" : "32c58d92-1003-4669-be5b-60455ada2074",
        "parentId" : "848f955b-f2e9-41b4-91c7-5f69a8032f70",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The surrounding documentation uses \"contract id\" rather than \"contract ID\". I'd like to blend in.",
        "createdAt" : "2019-04-26T08:57:33Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +53,57 @@stakeholder c = signatory c ++ observer c\n\n-- | Look up the contract id associated with a given contract key.\n--\n-- The `c` needs to be passed using an explicit type application. For"
  },
  {
    "id" : "b9e6d492-a872-42b5-a7b2-ba07339b6dfe",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3ef99c4-adf3-456e-8787-b7cc3855aa71",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "Isn't this the one that requires lots of authorization? That feels like an important thing to put in here.",
        "createdAt" : "2019-04-26T08:52:43Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +57,61 @@-- The `c` needs to be passed using an explicit type application. For\n-- instance, if you want to look up a contract of template `Account` by its\n-- key `k`, you must call `lookupByKey @Account k`.\nlookupByKey : forall c k. TemplateKey c k => k -> Update (Optional (ContractId c))\nlookupByKey = internalLookupByKey"
  },
  {
    "id" : "4e66d81f-a1d4-4a93-8a49-dfbc8389697a",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85be3a40-33fb-458e-a0a5-852b03e33e04",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "```suggestion\r\n-- | Fetch the contract ID and contract data associated with a given\r\n```",
        "createdAt" : "2019-04-26T08:52:55Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +61,65 @@lookupByKey = internalLookupByKey\n\n-- | Fetch the contract id and contract data associated with a given\n-- contract key.\n--"
  },
  {
    "id" : "078258e9-5d29-4b24-b36e-3d6ae5b0ff04",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e18d9582-3baa-444b-a6d0-07b07f966b97",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "As above - I'd suggest adding something about authorization required. Maybe also the thing about if it fails, that doesn't mean the contract doesn't exist?",
        "createdAt" : "2019-04-26T08:53:29Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +66,70 @@-- The `c` needs to be passed using an explicit type application. For\n-- instance, if you want to fetch a contract of template `Account` by its\n-- key `k`, you must call `fetchByKey @Account k`.\nfetchByKey : forall c k. TemplateKey c k => k -> Update (ContractId c, c)\nfetchByKey k = fmap unpackPair (internalFetchByKey k)"
  },
  {
    "id" : "fd16e4ea-66c6-4815-a32d-0da5dd487e11",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa70bb44-0660-404e-a501-63314bdf4e69",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "This is a bit light. Could you add something saying what a key is? Doesn't need to be much - eg allowing unique lookup, can persist across changes of the contract (unlike the id)",
        "createdAt" : "2019-04-26T08:54:11Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +163,167 @@\nclass Template c => TemplateKey c k | c -> k where\n    -- | The key of a contract.\n    key : c -> k\n"
  },
  {
    "id" : "77b42a43-19e2-455f-929e-93482e9acba8",
    "prId" : 718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d907da44-ca13-4355-980b-3d2c9ce94776",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "Also a bit light. Could you add something about what it means to be a maintainer? eg the party/parties guaranteeing that the key is unique.\r\n\r\nAlso, I worry about saying 'maintainers' by default - implies there are usually more than one, and I'm not sure that's going to be the case.",
        "createdAt" : "2019-04-26T08:55:09Z",
        "updatedAt" : "2019-04-26T11:56:01Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "416019fcc7a4029d2870b08266720999566aea06",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +166,170 @@    key : c -> k\n\n    -- | The maintainers of the contract key.\n    maintainer : c -> [Party]\n"
  },
  {
    "id" : "dafa7fae-9791-4554-885c-57fdc9980acd",
    "prId" : 574,
    "prUrl" : "https://github.com/digital-asset/daml/pull/574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12a9cef0-e3ff-4731-a146-f18fd03bdb64",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Add HIDE on this and postconsuming please",
        "createdAt" : "2019-04-17T12:27:02Z",
        "updatedAt" : "2019-04-17T18:21:58Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "ffcd747a-4563-42ce-ae41-8810c3735a14",
        "parentId" : "12a9cef0-e3ff-4731-a146-f18fd03bdb64",
        "authorId" : null,
        "body" : "✔️ ",
        "createdAt" : "2019-04-17T14:36:20Z",
        "updatedAt" : "2019-04-17T18:21:58Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "825b9042188d04bf812ad2955222e5d8e39d33dc",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +100,104 @@\n-- | HIDE\npreconsuming : NoEvent c e -> Consuming\npreconsuming _ = PreConsuming\n"
  },
  {
    "id" : "7af88725-f2c3-4fd4-b84c-bf16dc0008ab",
    "prId" : 574,
    "prUrl" : "https://github.com/digital-asset/daml/pull/574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a19ff443-2681-4618-bc66-cd889f1a9242",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "What does this comment actually express? How could this not be a lambda?",
        "createdAt" : "2019-04-23T10:57:05Z",
        "updatedAt" : "2019-04-23T10:57:05Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "529352b4-3a8a-44c4-b210-b2df82086ed7",
        "parentId" : "a19ff443-2681-4618-bc66-cd889f1a9242",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "It could evaluate to a lambda, rather than being a lambda.",
        "createdAt" : "2019-04-23T10:59:10Z",
        "updatedAt" : "2019-04-23T10:59:10Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "80671504-cb71-4288-9c32-496c14cfb330",
        "parentId" : "a19ff443-2681-4618-bc66-cd889f1a9242",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Oh I see, it had to be a _syntactic_ lambda. Anyway, that's no longer necessary since I re-implemented the dictionary sanitization. I've prepared a PR to remove the comment: https://github.com/digital-asset/daml/pull/628",
        "createdAt" : "2019-04-23T11:21:24Z",
        "updatedAt" : "2019-04-23T11:21:25Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "da88efe6-e80f-4e41-9378-64c288c7df32",
        "parentId" : "a19ff443-2681-4618-bc66-cd889f1a9242",
        "authorId" : null,
        "body" : "The comment was pre-existing. I also had doubts about it, removed it, changed the implementation to `consuming = preconsuming` and found it did indeed cause non-termination so was forced to reinstate it.",
        "createdAt" : "2019-04-23T11:43:46Z",
        "updatedAt" : "2019-04-23T11:44:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "d26c1bc8-0ad8-42a2-be4d-eb7a1299b667",
        "parentId" : "a19ff443-2681-4618-bc66-cd889f1a9242",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "When I do `consuming = preconsuming`, the test suite still passes. I'll amend the other PR to use that implementation.",
        "createdAt" : "2019-04-23T11:50:55Z",
        "updatedAt" : "2019-04-23T11:50:55Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "825b9042188d04bf812ad2955222e5d8e39d33dc",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +110,114 @@    -- | HIDE\n    consuming : NoEvent c e -> Consuming\n    -- Must be a lambda since otherwise the default-dictionary method\n    -- causes a runtime loop as the method exists in the dictionary,\n    -- takes the dictionary, and can't be eta expanded."
  }
]