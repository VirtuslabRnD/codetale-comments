[
  {
    "id" : "fc78fa1c-0027-40a0-a734-061321ef6233",
    "prId" : 695,
    "prUrl" : "https://github.com/digital-asset/daml/pull/695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a8d08fa-bd6d-4f24-ae48-0624306fcc52",
        "parentId" : null,
        "authorId" : "f83fcdd8-c8c4-4799-ada6-fdfc811cfacd",
        "body" : "@martin-drhu-da Do you know why we need the `transformOn`? I was just finishing/testing my work on this and it looks like it's not needed. Also I used `encodePayload pkg` (from https://github.com/digital-asset/daml/blob/master/compiler/daml-lf-proto/src/DA/Daml/LF/Proto3/Encode.hs#L12) instead of the `JSONPB` stuff. Looks like our results are the same though. :)",
        "createdAt" : "2019-04-29T08:46:47Z",
        "updatedAt" : "2019-04-29T08:46:47Z",
        "lastEditedBy" : "f83fcdd8-c8c4-4799-ada6-fdfc811cfacd",
        "tags" : [
        ]
      },
      {
        "id" : "66dec720-34e9-431f-88f9-232da47429f8",
        "parentId" : "7a8d08fa-bd6d-4f24-ae48-0624306fcc52",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "IIRC, the `transformOn` encodes numbers as strings. This is a workaround for the circumstance that JSON numbers are all double and we sometimes lose precision.",
        "createdAt" : "2019-04-30T08:40:54Z",
        "updatedAt" : "2019-04-30T08:40:55Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "e99a8783cffeba68ec0da66f3f08de6fa371682d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +178,182 @@\n    let jq = \"external\" </> \"jq\" </> \"bin\" </> \"jq\"\n    let json = unpack $ A.encode $ transformOn A._Value numToString $ JSONPB.toJSONPB (encodePackage pkg) JSONPB.jsonPBOptions\n    out <- readProcess jq [q] json\n    case trim out of"
  }
]