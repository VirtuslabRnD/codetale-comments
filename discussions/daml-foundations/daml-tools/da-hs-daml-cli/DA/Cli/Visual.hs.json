[
  {
    "id" : "9be74e27-88b5-48cf-8334-df0f35c76b3b",
    "prId" : 1826,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d384c3-6ba8-4183-97cd-fad53f91a16e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Is this case really necessary?",
        "createdAt" : "2019-06-25T12:01:40Z",
        "updatedAt" : "2019-06-25T12:01:47Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ebe6755019f1a8df2c6be993222a7b7b1590119",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +47,51 @@            | otherwise -> startFromExpr (Set.insert ref seen)  world dvalBody\n        Left _ -> error \"This should not happen\"\n    LF.EUpdate upd -> startFromUpdate seen world upd\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _ (LF.ModuleName [\"DA\",\"Internal\",\"Template\"]) (LF.ExprValName \"fetch\"))) _) _ -> Set.empty\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _  (LF.ModuleName [\"DA\",\"Internal\",\"Template\"])  (LF.ExprValName \"archive\"))) _) _ -> Set.empty"
  },
  {
    "id" : "045efe6a-4382-47b9-8770-4965ffd00900",
    "prId" : 1727,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c11b702d-09af-4626-b3b6-50a6ccc1b7bd",
        "parentId" : null,
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Can we get a comment above these two?",
        "createdAt" : "2019-06-21T07:53:15Z",
        "updatedAt" : "2019-06-21T11:47:50Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "01a59a57d14e901916e81ef1eabf16d6bc8e1244",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +61,65 @@    -- Special cases to handle internal calls which do not add an edge to the graph.\n    LF.ERecUpd _ _ recExpr recUpdate -> startFromExpr seen world recExpr `Set.union` startFromExpr seen world recUpdate\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _ (LF.ModuleName [\"DA\",\"Internal\",\"Template\"]) (LF.ExprValName \"fetch\"))) _) _ -> Set.empty\n    LF.ETmApp (LF.ETyApp (LF.EVal (LF.Qualified _  (LF.ModuleName [\"DA\",\"Internal\",\"Template\"])  (LF.ExprValName \"archive\"))) _) _ -> Set.empty\n    LF.ETmApp tmExpr tmpArg -> startFromExpr seen world tmExpr `Set.union` startFromExpr seen world tmpArg"
  },
  {
    "id" : "4a6b92f3-7927-4f41-bcd4-fbb7a8f46a27",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d829dd7f-ea10-401a-a7b7-f544bdc3ae9e",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Usually imported as BS",
        "createdAt" : "2019-06-11T22:25:56Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +26,30 @@import Data.Word\nimport qualified Data.HashMap.Strict as DHM\nimport qualified Data.ByteString.Char8 as CH\nimport qualified Data.List.Split as DLS\nimport qualified Data.List as DL"
  },
  {
    "id" : "3c7f04e5-172f-4686-af19-174178d15d69",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe5ebfa-adfe-483a-b865-0cac8ea57ca3",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Usually imported as Map or HMS",
        "createdAt" : "2019-06-11T22:26:15Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +25,29 @@import qualified Data.Map as M\nimport Data.Word\nimport qualified Data.HashMap.Strict as DHM\nimport qualified Data.ByteString.Char8 as CH\nimport qualified Data.List.Split as DLS"
  },
  {
    "id" : "54193366-3826-4a94-81e8-c0f16a58fa56",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4b53c88-833a-4ec4-80b2-c1261c4ba1f0",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Why not versionDev? I don't want another place to change on each upgrade",
        "createdAt" : "2019-06-11T22:27:04Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      },
      {
        "id" : "f499168e-3b1f-4086-bf31-a4856c5cf323",
        "parentId" : "e4b53c88-833a-4ec4-80b2-c1261c4ba1f0",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The version parameter should have never been there in the first place https://github.com/digital-asset/daml/pull/1601 will remove it.",
        "createdAt" : "2019-06-12T11:11:36Z",
        "updatedAt" : "2019-06-12T11:11:36Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +99,103 @@\ndarToWorld :: ManifestData -> LF.Package -> LF.World\ndarToWorld manifest pkg = AST.initWorldSelf pkgs version1_4 pkg\n    where \n        pkgs = map dalfBytesToPakage (dalfsCotent manifest)"
  },
  {
    "id" : "e03071bb-8942-42ea-8258-1aa899cd822e",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ab6f6cb-a486-4a1f-ba7c-1e82b03d5952",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Just use extra library splitOn",
        "createdAt" : "2019-06-11T22:27:54Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +158,162 @@\nlineToKeyValue :: String -> (String, String)\nlineToKeyValue line = case DLS.splitOn \":\" line of\n    [l, r] -> (cleanString l , cleanString r)\n    _ -> (\"malformed\", \"malformed\")            "
  },
  {
    "id" : "b51db507-b7fb-4c47-8c56-2a54db9e74ff",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "711f0db1-69ba-465d-b2c7-780afb9193ba",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "THis is just trim in the extra library. ",
        "createdAt" : "2019-06-11T22:28:35Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +155,159 @@\ncleanString :: String -> String\ncleanString str = T.unpack (T.strip $ T.pack str)\n\nlineToKeyValue :: String -> (String, String)"
  },
  {
    "id" : "9531d341-9c0d-4106-804d-1537bcdc545d",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d64f48bb-011e-47d8-bd1f-fff1ce4c4495",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Set your editor to remove trailing white space on save. ",
        "createdAt" : "2019-06-11T22:29:25Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      },
      {
        "id" : "092eec60-981c-4bc8-8961-089774da31d1",
        "parentId" : "d64f48bb-011e-47d8-bd1f-fff1ce4c4495",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Yes, please.",
        "createdAt" : "2019-06-12T11:08:34Z",
        "updatedAt" : "2019-06-12T11:08:34Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c55b36cc-5710-4ad3-a902-4d0803c751ea",
        "parentId" : "d64f48bb-011e-47d8-bd1f-fff1ce4c4495",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "Sorry, Will do",
        "createdAt" : "2019-06-12T14:12:20Z",
        "updatedAt" : "2019-06-12T14:12:20Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +193,197 @@        world = darToWorld manifestData lfPkg\n        res = concatMap (moduleAndTemplates world) modules\n        actionEdges = map templatePairs res        \n    putStrLn $ showDot $ do \n        netlistGraph' srcLabel actionsForTemplate actionEdges"
  },
  {
    "id" : "a35bb90d-565c-410b-b6c7-3b2146b45a14",
    "prId" : 1589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d201b98-531a-4752-bb98-c30f3cc34943",
        "parentId" : null,
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "Use Data.ByteString.Char8 to avoid having to convert at all. Also use the ByteString lines function. ",
        "createdAt" : "2019-06-11T22:30:54Z",
        "updatedAt" : "2019-06-11T22:31:06Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "082c68d7a67a3de59912b2908dd799b28708c7af",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +182,186 @@        lines = BSL.split (charToWord8 '\\n') manifestEntry\n        linesStr = map (CH.unpack . BSL.toStrict) lines\n        manifest = manifestMapToManifest $ DHM.fromList $ map lineToKeyValue (filter (\\a -> a /= \"\" ) linesStr)\n\n"
  },
  {
    "id" : "f0ff34cf-ef46-479b-91aa-2f7d60bc26c5",
    "prId" : 1552,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1995f5ba-4fb4-4d55-9124-0288d3bbd10f",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why not make this an instance of the `Pretty` class?",
        "createdAt" : "2019-06-07T14:59:43Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@\n\nprettyAction :: Action -> String\nprettyAction (ACreate  (LF.Qualified _ _ tpl) )  = DAP.renderPretty tpl \nprettyAction (AExercise  (LF.Qualified _ _ tpl) _ ) = DAP.renderPretty tpl"
  },
  {
    "id" : "f5829172-77b2-4a3d-a441-f25eeaf5d4a7",
    "prId" : 1552,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef524b9d-3a05-4a5d-a0f7-70ea662c3315",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "These `startFromX` functions should get proper names. Maybe `actionsFromX`?",
        "createdAt" : "2019-06-07T15:01:44Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@\n\nstartFromUpdate :: Set.Set (LF.Qualified LF.ExprValName) -> LF.World -> LF.Update -> Set.Set Action\nstartFromUpdate seen world update = case update of \n    LF.UPure _ e -> startFromExpr seen world e"
  },
  {
    "id" : "af62bcfd-e830-4140-bb6d-ff4d14529543",
    "prId" : 1552,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b657946-f24e-454f-ae41-ef037a505d80",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We might have this function somewhere else already. Have you checked that?",
        "createdAt" : "2019-06-07T15:03:02Z",
        "updatedAt" : "2019-06-07T21:57:42Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ec3bf9852acf408563efda9362b6ebf167c3b86",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@    a .->. n2\n\nerrorOnLeft :: Show a => String -> Either a b -> IO b\nerrorOnLeft desc = \\case\n  Left err -> ioError $ userError $ unlines [ desc, show err ]"
  }
]