[
  {
    "id" : "a114bbec-7476-474c-bcf7-de336b1b7989",
    "prId" : 4421,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4421#pullrequestreview-676451342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85c11cf5-1929-40c4-b652-5f64ac5509d1",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "nit: could we put this one before all the ones that use `mock_spark_session`?",
        "createdAt" : "2021-06-04T16:07:37Z",
        "updatedAt" : "2021-06-04T16:09:13Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "52d0e79071304e856efb95e0774fb03e3350ed2d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +489,493 @@\n\ndef test_get_databricks_runtime_no_spark_session():\n    with mock.patch(\n        \"mlflow.utils.databricks_utils._get_active_spark_session\", return_value=None"
  },
  {
    "id" : "47976f47-d4b0-4e92-b666-55a90d6748bd",
    "prId" : 4421,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4421#pullrequestreview-676717849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dd51643-ae99-4621-977b-422964b75681",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "What does `default = None` do here?",
        "createdAt" : "2021-06-04T16:07:57Z",
        "updatedAt" : "2021-06-04T16:09:13Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "d8f73e65-3c4c-451f-8755-22566dc65a86",
        "parentId" : "8dd51643-ae99-4621-977b-422964b75681",
        "authorId" : "83c1eb37-2dfb-4f0a-a4d9-0dd41b0e4310",
        "body" : "It seems like `assert_called_once_with` also checks that keyword arguments match when making the call. When I called, `spark.conf.get` in `get_databricks_runtime`, if no default value was provided, the get call would throw an exception, so `default=None` just makes sure that a safe get is used.",
        "createdAt" : "2021-06-04T17:11:52Z",
        "updatedAt" : "2021-06-04T17:11:52Z",
        "lastEditedBy" : "83c1eb37-2dfb-4f0a-a4d9-0dd41b0e4310",
        "tags" : [
        ]
      },
      {
        "id" : "dd0a5c58-1563-4d0c-9fbb-27e948a3ed21",
        "parentId" : "8dd51643-ae99-4621-977b-422964b75681",
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Makes sense!",
        "createdAt" : "2021-06-04T23:17:59Z",
        "updatedAt" : "2021-06-04T23:17:59Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "52d0e79071304e856efb95e0774fb03e3350ed2d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +507,511 @@        get_databricks_runtime()\n        mock_spark_session.conf.get.assert_called_once_with(\n            \"spark.databricks.clusterUsageTags.sparkVersion\", default=None\n        )\n"
  },
  {
    "id" : "9f97a7c1-0d7a-4ab5-a5cb-53779f38d19b",
    "prId" : 2946,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2946#pullrequestreview-431941266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0920108-5826-4b89-9738-7362b2d0b75c",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "do we really need these deprecation tests - as something that will run forever? makes sense for this PR, but seems unnecessary for the future (we have other tests calling these methods, and if someone tries to use the old arguments, they will see python error thrown).",
        "createdAt" : "2020-06-16T21:29:22Z",
        "updatedAt" : "2020-06-16T21:32:53Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "dd4df1a8-017e-4c90-8f0e-7f24b4aa1c1b",
        "parentId" : "c0920108-5826-4b89-9738-7362b2d0b75c",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "I removed the deprecated part so now these test are only the legit non-deprecated arguments to `update_*` methods. Maybe these methods can move elsewhere.",
        "createdAt" : "2020-06-16T22:32:59Z",
        "updatedAt" : "2020-06-16T22:32:59Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "fa1b5fb1-e957-40d4-9261-b09d70181e4b",
        "parentId" : "c0920108-5826-4b89-9738-7362b2d0b75c",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "Ah, I see, these are the actual only tests for `update_registered_model` and `update_model_version`. I was confused because of the comment that suggested that we were specifically (and only) testing the deprecated behavior.",
        "createdAt" : "2020-06-16T22:41:32Z",
        "updatedAt" : "2020-06-16T22:41:33Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c85dc232f34608fd0d4419791cc15f4206ba11c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +179,183 @@def test_update_registered_model(mock_registry_store):\n    \"\"\"\n    Update registered model no longer supports name change.\n    \"\"\"\n    expected_return_value = \"some expected return value.\""
  },
  {
    "id" : "5e75f566-6939-4033-8cce-96a0c5bd0011",
    "prId" : 1363,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1363#pullrequestreview-243880315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcc23a78-96b1-4da3-81d4-b4cc0354e55a",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "I switched the mock of SearchFilter to a matcher pattern in order to assert on the exact value of the filter.",
        "createdAt" : "2019-05-30T16:00:51Z",
        "updatedAt" : "2019-05-30T16:00:51Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "53f4045d3dc6e0473aef7ccae7f9785a2a9ad248",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +71,75 @@\n\nclass SearchFilterMatcher:\n    \"\"\"Matches a SearchFilter object by comparing it to the given filter string.\"\"\"\n    def __init__(self, filter):"
  },
  {
    "id" : "8720f117-0eb0-46fa-8627-ff3c5230e5f0",
    "prId" : 1363,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1363#pullrequestreview-243883031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d9c4905-603a-4096-9458-f044f29a8cea",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "I broke these tests out since it reduced the overall code; we no longer need the comments or the reset_mock.",
        "createdAt" : "2019-05-30T16:01:17Z",
        "updatedAt" : "2019-05-30T16:01:18Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "50094e97-6b38-4efb-8b6b-1581fa060d53",
        "parentId" : "7d9c4905-603a-4096-9458-f044f29a8cea",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "legit!",
        "createdAt" : "2019-05-30T16:06:11Z",
        "updatedAt" : "2019-05-30T16:06:36Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "53f4045d3dc6e0473aef7ccae7f9785a2a9ad248",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +81,85 @@\n\ndef test_client_search_runs_defaults(mock_store):\n    MlflowClient().search_runs([1, 2, 3])\n    mock_store.search_runs.assert_called_once_with(experiment_ids=[1, 2, 3],"
  },
  {
    "id" : "f65599bb-32c2-4fa4-a68b-e0581e119da3",
    "prId" : 1055,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1055#pullrequestreview-220395703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14baef8c-cf65-4081-948e-5322dead2000",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Nice, it'd be cool to also add a similar end-to-end test without mocking out the store in `tests/tracking/test_tracking.py` that gets & inspects the search result (e.g. log a metric across two different runs, search, and verify that only one of the runs shows up)",
        "createdAt" : "2019-03-29T00:13:27Z",
        "updatedAt" : "2019-03-29T15:52:11Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "d3047d58-19cf-44c6-9c54-85f8271d980f",
        "parentId" : "14baef8c-cf65-4081-948e-5322dead2000",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "Done. Added a couple of tests for single and multiple experiments.",
        "createdAt" : "2019-03-29T07:00:00Z",
        "updatedAt" : "2019-03-29T15:52:11Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4669377d0ff033298ade84001359de706714bbec",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +84,88 @@\n\ndef test_client_search_runs(mock_store, mock_search_filter):\n    experiment_ids = [mock.Mock() for _ in range(5)]\n"
  }
]