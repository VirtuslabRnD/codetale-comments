[
  {
    "id" : "ef1af624-2df0-40c1-8da1-0dc490497d3a",
    "prId" : 7507,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7507#pullrequestreview-312626336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47218791-6d07-4bcd-be7a-f3390784cdf6",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "What is the current state of matches without semicolons? We should have neg/pos tests with at least the folowing cases\r\n```\r\nX match { case Int => String; case String => Int }\r\nX match { case Int => String case String => Int }\r\nx match { case 1 => 3; case 2 => 4 }\r\nx match { case 1 => 3 case 2 => 4 }\r\n```\r\n",
        "createdAt" : "2019-11-06T17:50:23Z",
        "updatedAt" : "2019-11-07T10:11:03Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "c878c01805bf61affa8b899ba93772167146e617",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +43,47 @@    println(identityMaped({ def f(x: => Int): Int = x; f(61) }))\n    println(identityMaped({ type T[X] = X; val x: T[Int] = 62; x }))\n    println(identityMaped({ type T[X] = X match { case Int => String case String => Int }; val x: T[String] = 63; x }))\n    println(identityMaped((Nil: List[Int]) match { case _: List[t] => 64 }))\n    println(identityMaped({ object F { type T = Int }; val x: F.T = 65; x }))"
  }
]