[
  {
    "id" : "187bb766-8bdd-4f8f-a719-7f4b0c5ac7d1",
    "prId" : 9304,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9304#pullrequestreview-443870623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "118688a4-f0c1-4c43-91ee-0753c976b73a",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "For such use cases, it seems we lose a little usability here.\r\n\r\nHowever, from my experience with Scala 3 macros, it is always good to be explicit, as it is so easy to make mistakes and write difficult to understand code.",
        "createdAt" : "2020-07-07T12:26:44Z",
        "updatedAt" : "2020-07-07T12:28:29Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "3138833e-5136-45ff-9388-90bfca7bc115",
        "parentId" : "118688a4-f0c1-4c43-91ee-0753c976b73a",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Note that the verbosity in only there because I made sure to not change the semantics in the tests.\r\nSeen this one would immediately try to make it shorter and the natural way would be to write:\r\n```scala\r\nerrors += Expr(Tuple5(true, 0, index, offset, message))\r\n```\r\n",
        "createdAt" : "2020-07-07T13:07:07Z",
        "updatedAt" : "2020-07-07T13:07:07Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "acc1612216514960a67594362424f3901693dcc9",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +33,37 @@      def partError(message : String, index : Int, offset : Int) : Unit = {\n        reported = true\n        errors += '{ Tuple5(true, 0, ${Expr(index)}, ${Expr(offset)}, ${Expr(message)}) }\n      }\n      def partWarning(message : String, index : Int, offset : Int) : Unit = {"
  }
]