[
  {
    "id" : "f2d3a244-50eb-402b-b882-d560003dedb8",
    "prId" : 10531,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10531#pullrequestreview-540833436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d346b7-a251-471f-b09f-5a7c41b307b2",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The subtle semantics in quoted patterns may cause problems.\r\n\r\nMaybe the programmer can change to Reflection for such use cases?\r\n\r\nOr, instead of quoted patterns, add extractors to support pattern match on `Expr[T]` with clear intention and more predictable semantics.",
        "createdAt" : "2020-11-30T10:14:58Z",
        "updatedAt" : "2020-11-30T10:15:01Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "3790f67c-ca15-409f-a06a-572238e8ce58",
        "parentId" : "20d346b7-a251-471f-b09f-5a7c41b307b2",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Yes, less common more precise matching can and must be done using reflection.\r\n\r\nThe intended semantics have not changed (https://github.com/lampepfl/dotty/issues/10464#issuecomment-733092889), it was just a bug in the implementation.",
        "createdAt" : "2020-11-30T11:37:13Z",
        "updatedAt" : "2020-11-30T11:37:13Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "44a56f16-2e3f-459c-a03b-28f5f4bc78cb",
        "parentId" : "20d346b7-a251-471f-b09f-5a7c41b307b2",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I see, thanks for the explanation üëç ",
        "createdAt" : "2020-11-30T11:47:02Z",
        "updatedAt" : "2020-11-30T11:47:09Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fe5c6ec9a37c6831ce8128ae36cd3d0cd060323",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@      }\n      '{ println(${Expr(res)}) }\n    }\n\n}"
  }
]