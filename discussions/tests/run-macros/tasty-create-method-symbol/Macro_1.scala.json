[
  {
    "id" : "189f975c-56fe-418b-b999-020a67c6062b",
    "prId" : 10406,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10406#pullrequestreview-535332465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfc24ea1-4377-482b-acb9-648fe19a4a46",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "This usage will be error-prone in a nested context, becuase `Symbol` is always imported by `qctx.reflect._`, instead of the nested context.",
        "createdAt" : "2020-11-20T10:51:51Z",
        "updatedAt" : "2020-11-20T15:59:12Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "02578379-a43c-417d-81c4-958ddd81ad23",
        "parentId" : "cfc24ea1-4377-482b-acb9-648fe19a4a46",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Indeed. I need to improve this interface. Note that the same happens with `currentOwner` in a more complex way as it looks for an implicit context that might come from the imported or implicitly available one, depending on how it is imported. This version is slightly more stable but still not perfect. I would fix this in a separate PR because it is an orthogonal concern.",
        "createdAt" : "2020-11-20T11:05:29Z",
        "updatedAt" : "2020-11-20T15:59:12Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fc53a23222e443f45063458c4b796249d01d68b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +28,32 @@    // test for no argument list (no Apply node)\n    val sym2 : Symbol = Symbol.newMethod(\n      Symbol.spliceOwner,\n      \"sym2\",\n      ByNameType(TypeRepr.of[Int]))"
  }
]