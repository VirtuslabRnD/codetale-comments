[
  {
    "id" : "b67f9191-f518-4a6b-a32b-a290e70f762a",
    "prId" : 4650,
    "prUrl" : "https://github.com/apache/kafka/pull/4650#pullrequestreview-105177306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "parentId" : null,
        "authorId" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "body" : "Not really related to this pr - I was looking at the surrounding code and noticed that the `server_prop_overides arg` is defaulted to `[]`. Its probably fine since its not being written, but you almost never want that since every instance will share the same global list. Might want to fix that while you're here.",
        "createdAt" : "2018-03-08T06:25:26Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "tags" : [
        ]
      },
      {
        "id" : "3cfadb11-1306-4ea7-8b88-9915d311037b",
        "parentId" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@rodesai what do you mean by the \"global list\"?",
        "createdAt" : "2018-03-14T00:47:40Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b13f36f5-b294-421c-ae70-705ce43e7785",
        "parentId" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "authorId" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "body" : "When the interpreter processes the function def it will initialize one list that it passes to every instance of KafkaService thats constructed without specifying its own server_prop_overrides. Here's an illustrative example:\r\n```code\r\n>>> class A(object):\r\n...     def __init__(self, a, b=[]):\r\n...         b.append(a)\r\n...         self.b = b\r\n...\r\n>>> print A(1).b\r\n[1]\r\n>>> print A(2).b\r\n[1, 2]\r\n>>> print A(3).b\r\n[1, 2, 3]\r\n```",
        "createdAt" : "2018-03-14T01:17:02Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "tags" : [
        ]
      },
      {
        "id" : "2cf5d232-f686-4978-9d32-ce9a2f991c7a",
        "parentId" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Got it, thanks! Please let me know if the fix makes sense to you.",
        "createdAt" : "2018-03-15T01:11:15Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "fffc22b2-6bc0-43ea-8d6e-bf38c70c8a60",
        "parentId" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "authorId" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "body" : "This still has the same problem, though its more explicit. Not sure if that was the intent. The standard approach is something like this\r\n```{code}\r\ndef __init__(self, ..., server_prop_overrides=None, ...):\r\n    if server_prop_overrides is None:\r\n        server_prop_overrides = []\r\n```",
        "createdAt" : "2018-03-19T23:26:57Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "tags" : [
        ]
      },
      {
        "id" : "0a4d6e6f-4001-4416-bec5-802fab3a533e",
        "parentId" : "79bf2aaf-82e1-43a6-a888-cad1e0841272",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ah got it. I will try this in the code:\r\n\r\n```\r\nif server_prop_overides is None:\r\n            self.server_prop_overides = []\r\nelse:\r\n            self.server_prop_overides = server_prop_overides\r\n```",
        "createdAt" : "2018-03-19T23:38:41Z",
        "updatedAt" : "2018-03-22T23:45:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d42620a1d7cc64ee0107012d24ff2e6d6329e78b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +76,80 @@        :type context\n        :type zk: ZookeeperService\n        :type topics: dict\n        \"\"\"\n        Service.__init__(self, context, num_nodes)"
  }
]