[
  {
    "id" : "0d910e8b-a076-4a12-8af4-57c47c1084dd",
    "prId" : 4513,
    "prUrl" : "https://github.com/apache/kafka/pull/4513#pullrequestreview-94758026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "326e2fcd-9997-4285-a47d-881b4482789e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Where is this function used?",
        "createdAt" : "2018-02-07T00:45:26Z",
        "updatedAt" : "2018-02-07T15:50:05Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "d8d3a6c3-ae7a-4ab7-bea3-428f2585d98f",
        "parentId" : "326e2fcd-9997-4285-a47d-881b4482789e",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "when calling `processor.start()`.  It overrides the `streams.py#start_cmd` which in turn overrides the [Service.start_cmd](http://ducktape-docs.readthedocs.io/en/latest/_modules/ducktape/services/service.html#Service.start) \r\n\r\nThis is needed due to one test starting with Kafka down.  The default implementation verifies Kafka is up, but we need to skip that for the `test_streams_runs_with_broker_down_initially`",
        "createdAt" : "2018-02-07T15:48:08Z",
        "updatedAt" : "2018-02-07T15:50:05Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0390346035e44f40d413e78cd08f1781c8e2bd46",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +217,221 @@                                                                 configs)\n\n    def start_cmd(self, node):\n        args = self.args.copy()\n        args['kafka'] = self.kafka.bootstrap_servers(validate=False)"
  },
  {
    "id" : "6aa5088a-3114-4bea-89a1-b950e62a21f0",
    "prId" : 4636,
    "prUrl" : "https://github.com/apache/kafka/pull/4636#pullrequestreview-123526358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cfdfb5e-582b-412c-89b2-159dfab97047",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "will the system test results still get errors when these files aren't found?",
        "createdAt" : "2018-05-25T21:30:29Z",
        "updatedAt" : "2018-05-31T03:24:33Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "a5eafb9b-7502-468c-8142-831dfc7f503c",
        "parentId" : "9cfdfb5e-582b-412c-89b2-159dfab97047",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes, we need to specify all used files here -- otherwise they won't be collected after the test finished.",
        "createdAt" : "2018-05-25T22:16:58Z",
        "updatedAt" : "2018-05-31T03:24:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a87bd5254155a9d60ba479371305ddaae99282d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +54,58 @@            \"collect_default\": True},\n        \"streams_log.1\": {\n            \"path\": LOG_FILE + \".1\",\n            \"collect_default\": True},\n        \"streams_stdout.1\": {"
  },
  {
    "id" : "ba34f1b7-62f8-4177-b905-5cf79bc86f71",
    "prId" : 4689,
    "prUrl" : "https://github.com/apache/kafka/pull/4689#pullrequestreview-103171384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be7775ee-f390-4d5b-a19f-e825819da993",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "So, this wasn't valid python3... It's also the only `super` invocation in kafkatest that's formatted this way. I'm not sure if it's valid python2.\r\n\r\nBut it only affects cleanup for the Eos test, and it just generates a warning instead of failing the test. So I can see how this could go unnoticed if the tests are usually run from a clean state instead of cleaning up after themselves.",
        "createdAt" : "2018-03-12T18:41:24Z",
        "updatedAt" : "2018-03-15T15:32:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "31719e4426c9591c2fb2f640070c1c0709f2a737",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +165,169 @@    def clean_node(self, node):\n        if self.clean_node_enabled:\n            super(StreamsEosTestBaseService, self).clean_node(node)\n\n"
  },
  {
    "id" : "257c8dbb-e083-4cbb-9dec-bbe04f6150de",
    "prId" : 4689,
    "prUrl" : "https://github.com/apache/kafka/pull/4689#pullrequestreview-103655784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6301adca-1f36-4c97-bc4e-9796dd524611",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I got a lot of value out of having this in the output. What do you think about leaving this in?",
        "createdAt" : "2018-03-13T18:49:01Z",
        "updatedAt" : "2018-03-15T15:32:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8e340265-3fad-45cd-81da-b34042ce5432",
        "parentId" : "6301adca-1f36-4c97-bc4e-9796dd524611",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "+1 from me",
        "createdAt" : "2018-03-13T20:32:40Z",
        "updatedAt" : "2018-03-15T15:32:40Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "79118d6b-d071-435a-89f7-9e6cf155e360",
        "parentId" : "6301adca-1f36-4c97-bc4e-9796dd524611",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "+1.",
        "createdAt" : "2018-03-14T00:03:45Z",
        "updatedAt" : "2018-03-15T15:32:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "31719e4426c9591c2fb2f640070c1c0709f2a737",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +124,128 @@              \" %(kafka)s %(state_dir)s %(user_test_args)s %(user_test_args1)s %(user_test_args2)s\" \\\n              \" %(user_test_args3)s & echo $! >&3 ) 1>> %(stdout)s 2>> %(stderr)s 3> %(pidfile)s\" % args\n        self.logger.info(\"Executing: \" + cmd)\n\n        return cmd"
  }
]