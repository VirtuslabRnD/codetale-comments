[
  {
    "id" : "98c34702-a24b-42d4-bc41-9e8ae12d1d9a",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd028429-1173-4f52-92b8-b9096da18a94",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Added this so we can test with/without EOS and with graceful/hard shutdown",
        "createdAt" : "2019-03-06T17:09:35Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +49,53 @@\n    @cluster(num_nodes=8)\n    @matrix(eos=[True, False], crash=[True, False])\n    def test_streams(self, eos, crash):\n        #"
  },
  {
    "id" : "418f1b11-09c1-4d85-ae11-4a171baff246",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f30d44-be7f-45d9-8904-27be77a14eab",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I went down to 3 processors and changed up the test scenario a little.\r\n\r\nInstead of starting two nodes concurrently at the start, we just start one so that we can be sure it will process some data before we kill it. The same logic applies to the second round of processing and kill.",
        "createdAt" : "2019-03-06T17:12:49Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +59,63 @@            processor1 = StreamsSmokeTestJobRunnerService(self.test_context, self.kafka)\n            processor2 = StreamsSmokeTestJobRunnerService(self.test_context, self.kafka)\n            processor3 = StreamsSmokeTestJobRunnerService(self.test_context, self.kafka)\n\n"
  },
  {
    "id" : "16800ad1-cff5-4a7e-94ed-9ac17cbbff27",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7889837b-8e79-4236-8e33-1731f542646f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Wait for Streams to start first (so we don't generate all the data before streams is even started)",
        "createdAt" : "2019-03-06T17:13:28Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +68,72 @@                               timeout_sec=60,\n                               err_msg=\"Never saw 'REBALANCING -> RUNNING' message \" + str(processor1.node.account)\n                               )\n\n            self.driver.start()"
  },
  {
    "id" : "3b317703-79a9-4626-af48-f93fb6a97a88",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d94eaa10-a969-49d8-a264-bbea29ac575b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "start generating data. This will run for 30 seconds before verifying. We have verifications in place to make sure we don't finish processing before we do both node bounces.",
        "createdAt" : "2019-03-06T17:14:20Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +70,74 @@                               )\n\n            self.driver.start()\n\n            monitor1.wait_until('processed',"
  },
  {
    "id" : "11cee43b-97e7-4a80-96ec-99ea556351e8",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75cf918e-ad1a-4fe7-899c-3d66f3e1eff4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Wait until we actually process some data (it's pointless if we bounce before we process anything)",
        "createdAt" : "2019-03-06T17:14:48Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +75,79 @@                                timeout_sec=30,\n                                err_msg=\"Didn't see any processing messages \" + str(processor1.node.account)\n                                )\n\n            # make sure we're not already done processing (which would invalidate the test)"
  },
  {
    "id" : "02c3c14e-a730-4629-9158-52b88d59dc1d",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46ec1e8b-ecf2-4ef2-8d0e-b59b043c45d1",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Here's where we check that we're not already done processing (it would be pointless to bounce after processing is complete).",
        "createdAt" : "2019-03-06T17:15:25Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +78,82 @@\n            # make sure we're not already done processing (which would invalidate the test)\n            self.driver.node.account.ssh(\"! grep 'Result Verification' %s\" % self.driver.STDOUT_FILE, allow_fail=False)\n\n            processor1.stop_nodes(not crash)"
  },
  {
    "id" : "1620d27f-7ee9-4d7f-9ab6-52a75df927d4",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98103b0b-db98-4b53-897c-745579b2d6be",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "either stop the node gracefully or crash it (`kill -9`), depending on the parameter.",
        "createdAt" : "2019-03-06T17:16:44Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +80,84 @@            self.driver.node.account.ssh(\"! grep 'Result Verification' %s\" % self.driver.STDOUT_FILE, allow_fail=False)\n\n            processor1.stop_nodes(not crash)\n\n        with processor2.node.account.monitor_log(processor2.STDOUT_FILE) as monitor2:"
  },
  {
    "id" : "33cd7cad-bc71-498c-9190-e74f3ee38eaf",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211950122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca84d0c8-a603-42b0-91f7-5fab0a81ee29",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Again, wait for the node to start. This isn't strictly necessary, since we're just going to wait for \"processed\" next, but I thought it made the tests more readable and debuggable. For example, when you get a test failure, you'll know whether the node failed to start or whether it started, but didn't process anything.",
        "createdAt" : "2019-03-06T17:18:13Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "476ae0f0-8133-4ad6-85c1-6433287d056e",
        "parentId" : "ca84d0c8-a603-42b0-91f7-5fab0a81ee29",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Not a comment: I actually think it is indeed necessary to avoid flakiness, remember @bbejeck once talked about it in an older PR?",
        "createdAt" : "2019-03-07T01:26:13Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "65713a80-cb20-47e4-844b-5135a99a87df",
        "parentId" : "ca84d0c8-a603-42b0-91f7-5fab0a81ee29",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think that was a different situation, like maybe we stopped and then re-started a node? In that case, you need to grab a new monitor after you stop and before you re-start, to be sure your grep won't match the \"started\" message from the first time it was running.\r\n\r\nSince we're querying the same monitor here in both blocks, we're grepping over the same range of the file. The monitor pins the start-point for grepping when you create it. For example, since we create this monitor before we start Streams, it uses \"byte 1\" as the starting points for all greps for both `REBALANCING -> RUNNING` and `processed`.",
        "createdAt" : "2019-03-07T18:34:41Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +86,90 @@            monitor2.wait_until('REBALANCING -> RUNNING',\n                                timeout_sec=120,\n                                err_msg=\"Never saw 'REBALANCING -> RUNNING' message \" + str(processor2.node.account)\n                                )\n            monitor2.wait_until('processed',"
  },
  {
    "id" : "eb63dca9-cd10-428e-9337-92cc3b778700",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af47ad63-3c9a-4562-8ffb-5e37a3e83381",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Again, before bouncing the node, make sure the verification isn't already done, which would be pointless.",
        "createdAt" : "2019-03-06T17:18:59Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +94,98 @@\n        # make sure we're not already done processing (which would invalidate the test)\n        self.driver.node.account.ssh(\"! grep 'Result Verification' %s\" % self.driver.STDOUT_FILE, allow_fail=False)\n\n        processor2.stop_nodes(not crash)"
  },
  {
    "id" : "7e283e8b-db0e-4a3d-806c-51d8119576f6",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1008303-9946-4878-8777-ed7e55190309",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The test is already over. We can stop the app gracefully.",
        "createdAt" : "2019-03-06T17:19:23Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +113,117 @@        self.driver.stop()\n\n        processor3.stop()\n\n        if crash and not eos:"
  },
  {
    "id" : "9c77590f-f269-44e9-be5f-5a5590b5d0bf",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211547757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f34f2487-9d10-4703-beca-8e764b150dc7",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "If we crash without EOS, we might process some duplicates (this is the whole point of EOS), so Streams is operating properly if it *either* does exactly the right thing or processes too many records.",
        "createdAt" : "2019-03-06T17:21:01Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d4c35cf8-247b-4490-aa39-e62e4d07b7e0",
        "parentId" : "f34f2487-9d10-4703-beca-8e764b150dc7",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "sgtm.",
        "createdAt" : "2019-03-07T01:25:03Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +116,120 @@\n        if crash and not eos:\n            self.driver.node.account.ssh(\"grep -E 'SUCCESS|PROCESSED-MORE-THAN-GENERATED' %s\" % self.driver.STDOUT_FILE, allow_fail=False)\n        else:\n            self.driver.node.account.ssh(\"grep SUCCESS %s\" % self.driver.STDOUT_FILE, allow_fail=False)"
  },
  {
    "id" : "242e5051-46dd-4e15-8667-848bdb34b763",
    "prId" : 6382,
    "prUrl" : "https://github.com/apache/kafka/pull/6382#pullrequestreview-211347664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecb30c04-04fd-431d-a36e-3452e484f700",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "In all other cases, we expect to get exactly the right result.",
        "createdAt" : "2019-03-06T17:21:21Z",
        "updatedAt" : "2019-03-08T19:03:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7420fd04c43eb0f9ac183756a964f27ab8d1d218",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +118,122 @@            self.driver.node.account.ssh(\"grep -E 'SUCCESS|PROCESSED-MORE-THAN-GENERATED' %s\" % self.driver.STDOUT_FILE, allow_fail=False)\n        else:\n            self.driver.node.account.ssh(\"grep SUCCESS %s\" % self.driver.STDOUT_FILE, allow_fail=False)"
  }
]