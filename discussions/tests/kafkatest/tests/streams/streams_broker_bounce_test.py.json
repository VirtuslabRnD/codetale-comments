[
  {
    "id" : "0f6e5a3d-64bd-43b3-9b1e-ad12cf851f16",
    "prId" : 4639,
    "prUrl" : "https://github.com/apache/kafka/pull/4639#pullrequestreview-101679297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a41fc2b-8d0f-47b4-91ee-99966836e951",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is intentional to avoid streams block on starting up trying to find the coordinator because the offset topic cannot be created with replication factor 3.",
        "createdAt" : "2018-03-06T19:18:03Z",
        "updatedAt" : "2018-03-06T19:18:03Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "79df7d4931824096d9157bd72e4b4a6e69b33f49",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +114,118 @@            'tagg' : { 'partitions': self.partitions, 'replication-factor': self.replication,\n                       'configs': {\"min.insync.replicas\": 2} },\n            '__consumer_offsets' : { 'partitions': 50, 'replication-factor': self.replication,\n                       'configs': {\"min.insync.replicas\": 2} }\n        }"
  },
  {
    "id" : "a23a2441-b2ec-43bd-aa72-44dcc5a9ec40",
    "prId" : 6241,
    "prUrl" : "https://github.com/apache/kafka/pull/6241#pullrequestreview-205906348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9057ba56-275f-4a55-b29c-dab8a989e3df",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:07:10Z",
        "updatedAt" : "2019-02-15T00:07:16Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "fc3ce3de-cddf-4929-8b7d-a35b705aa3ce",
        "parentId" : "9057ba56-275f-4a55-b29c-dab8a989e3df",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "lgtm.",
        "createdAt" : "2019-02-20T17:48:02Z",
        "updatedAt" : "2019-02-20T17:48:17Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0a2a34465d5f4d736f589e1bb32ed48449443ce",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  },
  {
    "id" : "1dc03fa3-4e7a-492e-bccc-249372906565",
    "prId" : 6242,
    "prUrl" : "https://github.com/apache/kafka/pull/6242#pullrequestreview-204032213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64981a4-91e7-4c39-a038-b4fb5ebefca8",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:06:09Z",
        "updatedAt" : "2019-02-15T00:06:14Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "181965458822cfe033bc3038e78875549765aded",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  },
  {
    "id" : "7f6e03ff-14a5-4bea-b170-bc4ba45b5721",
    "prId" : 6243,
    "prUrl" : "https://github.com/apache/kafka/pull/6243#pullrequestreview-204031431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "541165fa-eeac-4b16-8bfc-424e4690b9f8",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:02:40Z",
        "updatedAt" : "2019-02-15T00:04:08Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ef20593f38c198b6cbaea6be0eb11ed5e42137",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +141,145 @@            # so we can't just compare directly we must iterate over what's returned\n            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1"
  },
  {
    "id" : "a6e95a8f-d2d0-4605-b97b-5136a5053921",
    "prId" : 6244,
    "prUrl" : "https://github.com/apache/kafka/pull/6244#pullrequestreview-204032045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7082076a-84ac-4788-9050-076401a7acc3",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.  Also by creating a set of topics found on the broker, I'd have to remove any internal topics as well, further complicating the logic (admittedly not by much).",
        "createdAt" : "2019-02-15T00:05:25Z",
        "updatedAt" : "2019-02-15T00:25:41Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d74e6ea90475f2503ba4a66cd2174407e9b48bb3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  },
  {
    "id" : "15f6873d-1f38-452f-a3aa-9e9b2a99c663",
    "prId" : 8532,
    "prUrl" : "https://github.com/apache/kafka/pull/8532#pullrequestreview-400065935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dbc8d11-5ea9-4cdb-90a8-5b6fc28e21e9",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Is it enough to specify the processing guarantee as `at_least_once` here or do you want also for this test to include all processing guarantees in the test matrix?",
        "createdAt" : "2020-04-22T16:01:35Z",
        "updatedAt" : "2020-04-22T16:01:35Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "b9bce2f1-b714-4f91-93cb-47df9b955f09",
        "parentId" : "2dbc8d11-5ea9-4cdb-90a8-5b6fc28e21e9",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "On a different note, now that the processing guarantee can be passed to the service, do we still need `StreamsEosTestJobRunnerService` and `StreamsComplexEosTestJobRunnerService`?",
        "createdAt" : "2020-04-22T16:09:28Z",
        "updatedAt" : "2020-04-22T16:10:10Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "0accbbfc-a91c-4f7d-ba1d-c09107c550b1",
        "parentId" : "2dbc8d11-5ea9-4cdb-90a8-5b6fc28e21e9",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "I feel neutral about it, if we are adding 2X time to system tests, that's probably not good.",
        "createdAt" : "2020-04-24T14:51:08Z",
        "updatedAt" : "2020-04-24T14:51:09Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "525612ca-6117-4bf0-a127-4465df6b7381",
        "parentId" : "2dbc8d11-5ea9-4cdb-90a8-5b6fc28e21e9",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We can try to add both eos cases, too.\r\n\r\nFor `Streams[Complex]EosTestJobRunnerService`, they use a different Java class compared to the \"smoke test\" runner. Not sure if we could unify them?",
        "createdAt" : "2020-04-24T15:48:32Z",
        "updatedAt" : "2020-04-24T15:48:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0709bb511dc38016b7f93719095d8c5052e18bce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +165,169 @@        # Start test harness\n        self.driver = StreamsSmokeTestDriverService(self.test_context, self.kafka)\n        self.processor1 = StreamsSmokeTestJobRunnerService(self.test_context, self.kafka, \"at_least_once\", num_threads)\n\n        self.driver.start()"
  },
  {
    "id" : "c9875411-d98a-439e-9aba-a86f3284b1a3",
    "prId" : 8541,
    "prUrl" : "https://github.com/apache/kafka/pull/8541#pullrequestreview-400306958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "990d88cf-ede3-41a2-a8d8-b7352274c557",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This accounted for most of the test failures, and it's already fixed on trunk.",
        "createdAt" : "2020-04-24T22:37:06Z",
        "updatedAt" : "2020-04-28T03:20:48Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "d58f62dc73dc3f4832cb89b5be6a8c8ce2f32e60",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +165,169 @@        # Start test harness\n        self.driver = StreamsSmokeTestDriverService(self.test_context, self.kafka)\n        self.processor1 = StreamsSmokeTestJobRunnerService(self.test_context, self.kafka, \"at_least_once\", num_threads)\n\n        self.driver.start()"
  },
  {
    "id" : "01219129-9d94-41d6-a6d6-9628ae8c1054",
    "prId" : 9196,
    "prUrl" : "https://github.com/apache/kafka/pull/9196#pullrequestreview-481690941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e74417f5-3e4b-4f9a-b536-fd3e29aa226e",
        "parentId" : null,
        "authorId" : "80aa1ccc-053d-48ff-a4d2-ddd42858dcb3",
        "body" : "alternatively:\r\n`topic = random.choice(list(self.topics.keys()))`",
        "createdAt" : "2020-09-03T08:40:23Z",
        "updatedAt" : "2020-10-07T13:51:08Z",
        "lastEditedBy" : "80aa1ccc-053d-48ff-a4d2-ddd42858dcb3",
        "tags" : [
        ]
      },
      {
        "id" : "94012276-70e7-44f5-b203-3ca05eab13f7",
        "parentId" : "e74417f5-3e4b-4f9a-b536-fd3e29aa226e",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "I tried to do minimal changes and just fix the syntax difference between python2 and python3.\r\nLet's keep it to simplify ongoing reviews?",
        "createdAt" : "2020-09-03T10:06:11Z",
        "updatedAt" : "2020-10-07T13:51:08Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e47ec3772a39983c15ea7ae698915e78429454b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +120,124 @@        # Pick a random topic and bounce it's leader\n        topic_index = randint(0, len(self.topics.keys()) - 1)\n        topic = list(self.topics.keys())[topic_index]\n        failures[failure_mode](self, topic, broker_type)\n"
  }
]