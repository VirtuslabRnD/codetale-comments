[
  {
    "id" : "0f6e5a3d-64bd-43b3-9b1e-ad12cf851f16",
    "prId" : 4639,
    "prUrl" : "https://github.com/apache/kafka/pull/4639#pullrequestreview-101679297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a41fc2b-8d0f-47b4-91ee-99966836e951",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is intentional to avoid streams block on starting up trying to find the coordinator because the offset topic cannot be created with replication factor 3.",
        "createdAt" : "2018-03-06T19:18:03Z",
        "updatedAt" : "2018-03-06T19:18:03Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "79df7d4931824096d9157bd72e4b4a6e69b33f49",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +114,118 @@            'tagg' : { 'partitions': self.partitions, 'replication-factor': self.replication,\n                       'configs': {\"min.insync.replicas\": 2} },\n            '__consumer_offsets' : { 'partitions': 50, 'replication-factor': self.replication,\n                       'configs': {\"min.insync.replicas\": 2} }\n        }"
  },
  {
    "id" : "a23a2441-b2ec-43bd-aa72-44dcc5a9ec40",
    "prId" : 6241,
    "prUrl" : "https://github.com/apache/kafka/pull/6241#pullrequestreview-205906348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9057ba56-275f-4a55-b29c-dab8a989e3df",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:07:10Z",
        "updatedAt" : "2019-02-15T00:07:16Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "fc3ce3de-cddf-4929-8b7d-a35b705aa3ce",
        "parentId" : "9057ba56-275f-4a55-b29c-dab8a989e3df",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "lgtm.",
        "createdAt" : "2019-02-20T17:48:02Z",
        "updatedAt" : "2019-02-20T17:48:17Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0a2a34465d5f4d736f589e1bb32ed48449443ce",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  },
  {
    "id" : "1dc03fa3-4e7a-492e-bccc-249372906565",
    "prId" : 6242,
    "prUrl" : "https://github.com/apache/kafka/pull/6242#pullrequestreview-204032213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64981a4-91e7-4c39-a038-b4fb5ebefca8",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:06:09Z",
        "updatedAt" : "2019-02-15T00:06:14Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "181965458822cfe033bc3038e78875549765aded",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  },
  {
    "id" : "7f6e03ff-14a5-4bea-b170-bc4ba45b5721",
    "prId" : 6243,
    "prUrl" : "https://github.com/apache/kafka/pull/6243#pullrequestreview-204031431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "541165fa-eeac-4b16-8bfc-424e4690b9f8",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.",
        "createdAt" : "2019-02-15T00:02:40Z",
        "updatedAt" : "2019-02-15T00:04:08Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ef20593f38c198b6cbaea6be0eb11ed5e42137",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +141,145 @@            # so we can't just compare directly we must iterate over what's returned\n            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1"
  },
  {
    "id" : "a6e95a8f-d2d0-4605-b97b-5136a5053921",
    "prId" : 6244,
    "prUrl" : "https://github.com/apache/kafka/pull/6244#pullrequestreview-204032045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7082076a-84ac-4788-9050-076401a7acc3",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thinking about this I could add the returned topics from a generator to a set and make an `expected == actual` comparison but I also think this check is sufficient and I don't have to sort the sets before comparison.  Also by creating a set of topics found on the broker, I'd have to remove any internal topics as well, further complicating the logic (admittedly not by much).",
        "createdAt" : "2019-02-15T00:05:25Z",
        "updatedAt" : "2019-02-15T00:25:41Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d74e6ea90475f2503ba4a66cd2174407e9b48bb3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +142,146 @@            topic_list_generator = self.kafka.list_topics(\"placeholder\", node)\n            for topic in topic_list_generator:\n                if topic in expected_topic_set:\n                    match_count += 1\n"
  }
]