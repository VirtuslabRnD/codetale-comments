[
  {
    "id" : "5c31cb61-5895-4d70-8733-58604925ce77",
    "prId" : 7667,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7667#pullrequestreview-325994010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ad27fcb-6cd1-4ccd-975e-af3566036900",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems in the line above, each `$` has a different meaning. I'm wondering what's the correct way to write such matches?",
        "createdAt" : "2019-12-02T18:48:21Z",
        "updatedAt" : "2019-12-03T09:12:33Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "96034a0f-b762-4e49-b6ad-76d881400d6c",
        "parentId" : "8ad27fcb-6cd1-4ccd-975e-af3566036900",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Just write\r\n```scala\r\ncase '{ $x: List[$t] } =>\r\n  val y = summon[Type[List[$t]]]\r\n```\r\n\r\nNote that the splice would just cancel out with the quote.\r\n",
        "createdAt" : "2019-12-03T09:26:24Z",
        "updatedAt" : "2019-12-03T09:26:25Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "58c702359b7888045902da9e6b742a7c0e68bcca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@  def f[T2: Type](e: Expr[T2])(given QuoteContext) = e match {\n    case '{ $x: ${'[List[$t]]} } => // error\n    case '{ $x: ${y @ '[List[$t]]} } => // error // error\n  }\n}"
  }
]