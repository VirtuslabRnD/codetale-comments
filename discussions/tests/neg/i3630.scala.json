[
  {
    "id" : "20ca2362-fd17-4ab4-8d76-d8a46dc143a7",
    "prId" : 3718,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3718#pullrequestreview-88666007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8689aaac-131a-4271-b529-9a850e84c356",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Do we really need to disallow this? It seems to work OK in scalac.",
        "createdAt" : "2017-12-31T16:23:38Z",
        "updatedAt" : "2017-12-31T16:23:41Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "841a0a5c-b34c-4c44-bf68-1a9ae1bdfab0",
        "parentId" : "8689aaac-131a-4271-b529-9a850e84c356",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "The full error message says:\r\n\r\n    No ClassTag available for Array[_ >: Int & String <: Int | String]\r\n\r\nThe inferred type of the outer array is\r\n\r\n    Array[Array[_ >: Int & String <: Int | String]]\r\n\r\nThat is indeed the best type. But there's no ClassTag. We *could* infer some wider type such as \r\n\r\n    Array[AnyRef](Array(2), Array(\"a\"))\r\n\r\nfor the outer array. But it would be a special case. And I am not sure whether in the end it would not be better to reject this weird construction as an error and demand that the user write\r\n\r\n    Array[AnyRef](Array(2), Array(\"a\"))\r\n\r\nexplicitly.\r\n\r\n\r\n ",
        "createdAt" : "2018-01-13T19:57:44Z",
        "updatedAt" : "2018-01-13T19:57:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1643b1801d204fefa58be40f477e9d68f2d3771",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@class U { Array(Array(2), Array(\"a\")) } // error: no classtag"
  }
]