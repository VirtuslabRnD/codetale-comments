[
  {
    "id" : "61d4b53a-d196-40c5-8740-897a004a728e",
    "prId" : 4616,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4616#pullrequestreview-138323439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbeedd4b-f68c-46e3-975a-911e59849174",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Could we report this error (and other inline errors) at call site instead? `f` may be defined in an external library.\r\n\r\n",
        "createdAt" : "2018-07-18T12:46:40Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "bb211e39-03f2-4caf-a563-d354f66b70a9",
        "parentId" : "cbeedd4b-f68c-46e3-975a-911e59849174",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "It is reported at the definition site so you can see what was ambiguous. But then there is a line saying \"this code was inlined at ...\" where ... is the source and line of the callsite.\r\n",
        "createdAt" : "2018-07-18T13:24:34Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "9166782e-79fb-4c6f-bdc1-0609d9aff60c",
        "parentId" : "cbeedd4b-f68c-46e3-975a-911e59849174",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "But if I write\r\n```scala\r\nclass A\r\n\r\nobject Test  {\r\n  def f(implicit a: A) = ???\r\n\r\n  implicit val a1: A = new A\r\n  implicit val a2: A = new A\r\n  f // error: ambiguous implicit for type A\r\n}\r\n```\r\nthe error is reported at call site. Why would it be different?\r\n\r\n> But then there is a line saying \"this code was inlined at ...\" where ... is the source and line of the callsite.\r\n\r\nI believe we should do the opposite: report the issue at call site with \"this line was inlined from ...\" where ... is the source and line of the definition site. If you report the issue at definition site, your IDE might not be able to highlight anything.\r\n\r\nIn your example call site and definition site are in the same file, but most of the time it is not the case (and you might not have the source file of the definition, just a jar).",
        "createdAt" : "2018-07-18T13:39:34Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "47c08531-59e8-455c-b8c4-ed7c946da88e",
        "parentId" : "cbeedd4b-f68c-46e3-975a-911e59849174",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "> It is reported at the definition site so you can see what was ambiguous\r\n\r\nIsn't it enough to report the ambiguous type in the error message? Highlighting the case does not seem to give you more information",
        "createdAt" : "2018-07-18T14:01:12Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "6a1cdf7d-282e-4ced-afae-594a2c28a1bf",
        "parentId" : "cbeedd4b-f68c-46e3-975a-911e59849174",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "The problem is that many error messages refer to items of the code region that is highlighted. If we show the call site instead of the code region, these messages do not make sense. So in general we need to highlight the definition site and then can state from where it was inlined.  ",
        "createdAt" : "2018-07-18T15:56:02Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e7d180574eda8a71037d1735ac6a3ff76a1c08",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@\n  transparent def f: Any = implicit match {\n    case _: A => ???  // error: ambiguous implicits\n  }\n"
  }
]