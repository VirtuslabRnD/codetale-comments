[
  {
    "id" : "7b15fd9e-e482-4bfd-92e2-89c8b8cdf35b",
    "prId" : 11695,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11695#pullrequestreview-613123812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59346ad3-b946-4dc4-968b-82568667faa0",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "```suggestion\r\n  type CanThrow[-E <: Exception]\r\n```\r\nthere is no point in having the ability to instantiate instances of `CanThrow` if the only places where we will create them is in\r\n```scala\r\n    erased given CanThrow[Fail] = erasedValue\r\n```\r\nMaking it a type makes it simpler for users by removing ways they could miss-use this abstraction. It will also compile faster.",
        "createdAt" : "2021-03-15T09:59:55Z",
        "updatedAt" : "2021-03-17T17:59:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "cfa1de14-cfd4-4e8f-8ec3-124948702e62",
        "parentId" : "59346ad3-b946-4dc4-968b-82568667faa0",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Classes are sticky, types are not. That's why we use a class for `erased`.\r\n",
        "createdAt" : "2021-03-16T11:20:41Z",
        "updatedAt" : "2021-03-17T17:59:11Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0af3f598cc7026212393f7ca8271e0985adbf30a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4,8 @@object scalax:\n  @implicitNotFound(\"The capability to throw exception ${E} is missing.\\nThe capability can be provided by one of the following:\\n - A using clause `(using CanThrow[${E}])`\\n - A throws clause in a result type such as `X throws ${E}`\\n - an enclosing `try` that catches ${E}\")\n  erased class CanThrow[-E <: Exception]\n\n  infix type throws[R, +E <: Exception] = CanThrow[E] ?=> R"
  }
]