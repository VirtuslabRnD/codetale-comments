[
  {
    "id" : "9dc40343-8b8b-492f-9496-2133d09e6d99",
    "prId" : 3823,
    "prUrl" : "https://github.com/apache/airflow/pull/3823#pullrequestreview-153681222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a55b452d-2482-4b68-bd58-c0740a3080b1",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "I deleted test case `test_s3_delete_non_existent_object`. It can pass CI, but I realize it can only be reproduced by `moto.mock_s3`.\r\n\r\nThat is, when we use `moto.mock_s3` to mirror the S3 environment, deleting an non-existent object would result in an `Errors` entry in the response. But in AWS S3 and IBM COS (S3-compatible), deleting non-existent object is allowed, and the non-existent key would still be in the `Deleted` entry.\r\n\r\n**Regarding `S3DeleteObjectsOperator()`, if there is `Errors` entry in the response, the operator will raise exception and fail, as you advised earlier.**\r\n\r\n**Reference**:\r\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.delete_objects\r\nResponse Syntax\r\n```\r\n{\r\n    'Deleted': [\r\n        {\r\n            'Key': 'string',\r\n            'VersionId': 'string',\r\n            'DeleteMarker': True|False,\r\n            'DeleteMarkerVersionId': 'string'\r\n        },\r\n    ],\r\n    'RequestCharged': 'requester',\r\n    'Errors': [\r\n        {\r\n            'Key': 'string',\r\n            'VersionId': 'string',\r\n            'Code': 'string',\r\n            'Message': 'string'\r\n        },\r\n    ]\r\n}\r\n```",
        "createdAt" : "2018-09-07T05:18:06Z",
        "updatedAt" : "2018-09-07T05:19:45Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "5d9348fb-6fd3-4171-b121-e13af0605c5a",
        "parentId" : "a55b452d-2482-4b68-bd58-c0740a3080b1",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Confirmed, sounds good.",
        "createdAt" : "2018-09-10T09:00:21Z",
        "updatedAt" : "2018-09-10T09:00:21Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "37a7477734118771e082836954a52933a388f6ea",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@        # There should be no object found in the bucket created earlier\n        self.assertFalse('Contents' in conn.list_objects(Bucket=bucket,\n                                                         Prefix=key_pattern))"
  }
]