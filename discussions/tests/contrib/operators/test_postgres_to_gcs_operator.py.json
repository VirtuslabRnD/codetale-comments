[
  {
    "id" : "79584768-e178-452c-89a3-d46c005f96d3",
    "prId" : 2786,
    "prUrl" : "https://github.com/apache/airflow/pull/2786#pullrequestreview-76932226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1a18b88-3b48-4b9f-baef-4f2a0c11fe5d",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "Same question here. What's this needed for?",
        "createdAt" : "2017-11-15T20:26:49Z",
        "updatedAt" : "2017-11-15T20:26:53Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      },
      {
        "id" : "2531086b-38be-4934-aa58-5098f81271af",
        "parentId" : "f1a18b88-3b48-4b9f-baef-4f2a0c11fe5d",
        "authorId" : "8aa08b97-11a4-48ec-b317-9df6ae5b4776",
        "body" : "I'm importing the full stack of `from __future__`s here because I find it weird to only import the one I need, `unicode_literals`. This matches the style of [other `from __future__ ...` imports being used in airflow currently](https://github.com/apache/incubator-airflow/search?utf8=%E2%9C%93&q=from+__future__&type=).\r\n\r\nFor the test, I need `unicode_literals` so that my literal string representations in the constants are consistently and explicitly encoded (byte strings) or decoded (unicode strings). Without it, the py2.7 interpreter would identify a literal `\"foo\"` as encoded while the py3.4 interpreter would identify it as decoded.\r\n\r\nBeing explicit about this is important for testing the two weird 2.7/3.4 inconsistencies that the PostgresToGoogleCloudStorage operator deals with.\r\n1. [In py2.7 the psycopg2 cursor will return encoded bytes while the py3.4 one will return decoded strs.](http://initd.org/psycopg/docs/usage.html#strings-adaptation).\r\n2. In py2.7, json dumping creates encoded bytes and in py3.4 it returns decoded bytes (this is also the root problem behind [AIRFLOW-1613](https://issues.apache.org/jira/browse/AIRFLOW-1613)).\r\n",
        "createdAt" : "2017-11-15T21:15:07Z",
        "updatedAt" : "2017-11-15T21:15:07Z",
        "lastEditedBy" : "8aa08b97-11a4-48ec-b317-9df6ae5b4776",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8fa2e9049328341dc58a635b34f04fa52de543e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@# limitations under the License.\n#\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function"
  }
]