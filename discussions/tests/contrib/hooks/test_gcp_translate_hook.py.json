[
  {
    "id" : "8b9d5061-5bd4-48c4-9365-4c6250122eca",
    "prId" : 4755,
    "prUrl" : "https://github.com/apache/airflow/pull/4755#pullrequestreview-207431751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "137c2078-57e6-4fa9-bb8d-755b8a4090c6",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "In L31, mock could be `None`, should we use in L35?\r\n```suggestion\r\n@unittest.skipIf(mock is None, 'mock package not present')\r\n```\r\nSo as `test_gcp_translate_operator.py`",
        "createdAt" : "2019-02-25T11:19:55Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "68548028-88ae-48a2-9dbc-27ab69037e31",
        "parentId" : "137c2078-57e6-4fa9-bb8d-755b8a4090c6",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "This pattern is sprinkled all-over the Airflow code and copy&pasted everywhere. It's rather unlikely for mock to be None - in different python versions you simply expect it in either unittests or directly imported. I think this problem will be gone fairly soon when Airflow 2.0 drops python 2.7 compatibility, and until then I'd rather leave it as is.",
        "createdAt" : "2019-02-25T13:31:02Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "ecbe7c52-1fd7-4b11-a348-20f2df8c6495",
        "parentId" : "137c2078-57e6-4fa9-bb8d-755b8a4090c6",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "got",
        "createdAt" : "2019-02-25T14:46:08Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "439b3314589ee85f79f1a17e3a5eaf535f75e669",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@PROJECT_ID_TEST = 'project-id'\n\n\nclass TestCloudTranslateHook(unittest.TestCase):\n    def setUp(self):"
  }
]