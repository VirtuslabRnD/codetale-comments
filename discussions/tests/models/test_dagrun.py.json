[
  {
    "id" : "3ec59993-016e-465d-aebc-a17f50f3657e",
    "prId" : 8852,
    "prUrl" : "https://github.com/apache/airflow/pull/8852#pullrequestreview-429392877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "373681be-614c-4cfa-a576-aa93052c9826",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can you add a test for TI where it is UP_FOR_RETRY",
        "createdAt" : "2020-05-20T20:17:45Z",
        "updatedAt" : "2020-06-12T07:05:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "a9683e52-51ca-4cdd-8dd9-fba26896be14",
        "parentId" : "373681be-614c-4cfa-a576-aa93052c9826",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@milton0825 Can you add a test for TI where it is UP_FOR_RETRY\r\n\r\n\r\n",
        "createdAt" : "2020-06-12T00:24:23Z",
        "updatedAt" : "2020-06-12T07:05:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "a2416737-e8ff-4054-b2fe-ffb40d2913f0",
        "parentId" : "373681be-614c-4cfa-a576-aa93052c9826",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "Testing that probably won't add too much value as the logic is not based on the state of TI.",
        "createdAt" : "2020-06-12T00:24:48Z",
        "updatedAt" : "2020-06-12T07:05:23Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      },
      {
        "id" : "acd44245-61c9-4ef3-8f5e-8fd6ab882a37",
        "parentId" : "373681be-614c-4cfa-a576-aa93052c9826",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "https://github.com/apache/airflow/pull/8852#discussion_r428262018 Based on our discussion in that comment if in future someone removes L468, no test would fail but it would break the behaviour that ti_mutation_hook won't work on ti that are up for retry.",
        "createdAt" : "2020-06-12T00:28:56Z",
        "updatedAt" : "2020-06-12T07:05:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "a3e3a834-7abe-4fc4-be66-ccfa7990746d",
        "parentId" : "373681be-614c-4cfa-a576-aa93052c9826",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "added",
        "createdAt" : "2020-06-12T00:45:48Z",
        "updatedAt" : "2020-06-12T07:05:23Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      }
    ],
    "commit" : "8138738c9762f3f0fcfcd1a6a07376257115aea1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +567,571 @@\n    @parameterized.expand([(state,) for state in State.task_states])\n    @mock.patch('airflow.models.dagrun.task_instance_mutation_hook')\n    def test_task_instance_mutation_hook(self, state, mock_hook):\n        def mutate_task_instance(task_instance):"
  }
]