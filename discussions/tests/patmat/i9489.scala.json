[
  {
    "id" : "0622b086-856c-4a6d-98b5-02b659c8d47a",
    "prId" : 9952,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9952#pullrequestreview-511811747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems `'[T]` is more symmetric here. ",
        "createdAt" : "2020-10-07T08:48:31Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "c638ce85-8fcd-49b4-b3cb-3e97e7451dbd",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Indeed, and that is why it should not be used. The syntactic symmetry is what lead to most conceptual misunderstandings of how Type works.\r\n\r\nThis constructor should also never be used explicitly and giving it a shorter alias does not help users avoid the explicit use.\r\n\r\nIt is also uncertain that the `case '[...] ` pattern will be kept. We might remove them and use only a single matching abstraction as we do with `inline match`.",
        "createdAt" : "2020-10-07T09:32:19Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "236718de-3c08-4b07-b24c-ce55e7caf10b",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "If the usage is bad, what about disallowing it in syntax?",
        "createdAt" : "2020-10-09T08:22:20Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "5d3e2149-492c-4d8a-8bef-288b4891de0a",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "That is my intent as I explain in #9486. This is a first step to help migration. We can drop the syntax later on once users have adapted. I would prefer to have at least one release with a warning.",
        "createdAt" : "2020-10-09T08:57:12Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "9b1570e9-5374-40e9-9742-416b6413b0aa",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Might be good to bring this up in the meeting, as it's syntax related.",
        "createdAt" : "2020-10-12T12:21:06Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "81683f93-156f-47d3-86fc-cb336f981bb0",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This specific case is a corner case that should be avoided. It should have been written explicitly as\r\n\r\n```scala\r\ndef summonTypedType[T : Type](using QuoteContext): String = summon[Type[T]] match { ...\r\n// or \r\ndef summonTypedType[T](using tp: Type[T])(using QuoteContext): String = tp match { ...\r\n```",
        "createdAt" : "2020-10-12T13:10:44Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "c4e217c2-b326-4919-b2e3-17dd42706a7a",
        "parentId" : "a2d8c28d-c35b-423c-bd18-0a75c94ca74e",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Can we rewrite this test to remove the `'[Byte]` syntax?",
        "createdAt" : "2020-10-19T14:16:57Z",
        "updatedAt" : "2020-10-20T12:24:33Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "580b6fd7f1ff5dd3de1d7a59949a70acb080de8f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +4,8 @@  case '[Boolean] => \"Boolean\"\n  case '[Byte] => \"Byte\"\n  case _ => \"Other\"\n}"
  }
]