[
  {
    "id" : "567b4b8a-bd55-429f-b96b-010d07b2aa72",
    "prId" : 1526,
    "prUrl" : "https://github.com/scalameta/metals/pull/1526#pullrequestreview-381722117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eff95b0-ee30-4ad1-a325-6b498d3195b2",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "So, I just took a step back and tried to make this as simple as possible. In order to actually be able to just leave the new reference suite the way you had it @tgodzik I just grab the locations when I have them, group them by uri, grab all the line starts, and then assert that they are in order for each uri. The alternative to this would be having to make an entirely different way to do the check. I feel like this is the easiest way to do a simple check on the ordering. What do you think?",
        "createdAt" : "2020-03-26T06:04:55Z",
        "updatedAt" : "2020-03-26T06:04:56Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "13e263e8bec9aef93562dd691f75ec7caa748212",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +59,63 @@  }\n\n  def assertSimpleLocationOrdering(locations: List[lsp4j.Location]): Unit = {\n    val grouped = locations.groupBy(_.getUri)\n    grouped.foreach {"
  }
]