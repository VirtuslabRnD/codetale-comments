[
  {
    "id" : "b8e7cbb5-d01f-42bf-87d3-a37c46660840",
    "prId" : 1498,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1498#pullrequestreview-112055363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d5aca67-3ff9-4640-ad60-593deb5d9183",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "this does not capture the semicolon",
        "createdAt" : "2018-04-13T15:02:16Z",
        "updatedAt" : "2018-04-18T19:23:55Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      },
      {
        "id" : "4aab3b95-542f-412c-a0db-49df0cadbbf2",
        "parentId" : "2d5aca67-3ff9-4640-ad60-593deb5d9183",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Semicolon is considered to be a statement separator, just like newline. I think it makes sense for it to not be part of any statements (or cases like below), just like newline.",
        "createdAt" : "2018-04-13T15:25:29Z",
        "updatedAt" : "2018-04-18T19:23:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7978594c9a78fea63dd7b67e2662e5e4a4e04869",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@  check[Term.Ascribe](\"→(a)←: →(A)←\")\n  check[Term.Assign](\"→(a)← = →(b)←\")\n  check[Term.Block](\"{ →(a)←; →(b)← }\")\n  check[Term.Do](\"do →{d}← while (→p←)\")\n  check[Term.Eta](\"→(f)← _\")"
  },
  {
    "id" : "05440f8e-8e95-4405-a10b-77fbdbab5565",
    "prId" : 1498,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1498#pullrequestreview-112046387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f421aee-f424-4e21-b72e-567235842eb5",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "this does capture the semicolon (why ?)",
        "createdAt" : "2018-04-13T15:02:39Z",
        "updatedAt" : "2018-04-18T19:23:55Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      }
    ],
    "commit" : "7978594c9a78fea63dd7b67e2662e5e4a4e04869",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +89,93 @@  check[Term.NewAnonymous](\"new →(A){}←\")\n  check[Term.Param, Decl.Def](\"def f(→a←: →A← = →(da)←): A\")\n  check[Term.PartialFunction](\"{ →case x => x;← →case y => y← }\")\n  check[Term.Repeated, Term.Apply](\"f(→(x)←: _*)\")\n  check[Term.Return](\"return →(a)←\")"
  },
  {
    "id" : "7c0d8c9f-ae37-415b-afa9-1f2e203dab8a",
    "prId" : 1498,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1498#pullrequestreview-112046527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab366193-e03f-409d-ae2d-04d019cefbc9",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "semicolon ?",
        "createdAt" : "2018-04-13T15:03:01Z",
        "updatedAt" : "2018-04-18T19:23:55Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      }
    ],
    "commit" : "7978594c9a78fea63dd7b67e2662e5e4a4e04869",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@  check[Term.This](\"→a←.this\")\n  check[Term.Throw](\"throw →(e)←\")\n  check[Term.Try](\"try (→f←) catch { →case x => x;← →case y => y← } finally →{ }←\")\n  check[Term.TryWithHandler](\"try (→f←) catch →(h)← finally →{ }←\")\n  check[Term.Tuple](\"(→(a)←, →(b)←)\")"
  }
]