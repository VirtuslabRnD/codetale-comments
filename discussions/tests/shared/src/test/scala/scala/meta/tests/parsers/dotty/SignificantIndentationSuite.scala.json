[
  {
    "id" : "6f9d7087-a87c-422a-9376-4deebdcb94b1",
    "prId" : 2328,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2328#pullrequestreview-651472245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce8cc25-a59a-4479-b887-ebfc56a2356d",
        "parentId" : null,
        "authorId" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "body" : "you are testing anonymous classes. did it work, without this change, with regular\r\n```\r\nclass A:\r\n  ...\r\n```\r\nand does it work with early defs (that is, should line 4733 be changed as well):\r\n```\r\nclass A extends { def ... }:\r\n  ...\r\n```",
        "createdAt" : "2021-05-04T15:14:34Z",
        "updatedAt" : "2021-05-04T15:21:11Z",
        "lastEditedBy" : "b7bb2558-250e-4d73-909f-5c968a6a3505",
        "tags" : [
        ]
      },
      {
        "id" : "0ec56258-a93a-4ea3-86be-74364cfd6067",
        "parentId" : "5ce8cc25-a59a-4479-b887-ebfc56a2356d",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "The first one worked previously, only `new:` was not handled.\r\n\r\nAs for `early defs` they are no longer allowed in Dotty, so this is safe.",
        "createdAt" : "2021-05-04T17:07:18Z",
        "updatedAt" : "2021-05-04T17:07:19Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "3eaafa05ad72799c236cb981a55fd9f93403aaec",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +55,59 @@  }\n\n  test(\"anonymous-class\") {\n    val code = \"\"\"|new A:\n                  |  def f: Int"
  },
  {
    "id" : "ec5bfd40-7afe-48a2-8437-6033f4fab8a9",
    "prId" : 2148,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2148#pullrequestreview-515759948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0609671b-af08-473d-95f7-727332e3a7de",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "This is on purpose to test `EOF` ending an indent",
        "createdAt" : "2020-10-23T15:15:50Z",
        "updatedAt" : "2020-10-24T10:47:59Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "99ae819463c21f6b746c3fc55a94abfc494a0963",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +36,40 @@    val code = \"\"\"|trait A:\n                  |  def f: Int\n                  |  def y: String = { fa(); fb() }\"\"\".stripMargin\n    runTestAssert[Stat](code, assertLayout = None)(\n      Defn.Trait("
  },
  {
    "id" : "05fd3a25-0a5a-4687-a573-41d8d53f63c3",
    "prId" : 2104,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2104#pullrequestreview-499602132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38b2edfb-ad46-4bbd-a77a-8b293777b1df",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "This works in Dotty and apparently it's fine :/\r\n\r\nWhere is `\"error: illegal start of simple expression\"` coming from?",
        "createdAt" : "2020-09-25T13:15:49Z",
        "updatedAt" : "2020-09-30T16:20:26Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "3023efa6-333b-49b2-b27f-c54bec8c22f3",
        "parentId" : "38b2edfb-ad46-4bbd-a77a-8b293777b1df",
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "```scala\r\ndef fn: Unit = // next line insert <INDENT=4>\r\n    if cond then   // next indent=2 which is < 4, NO indent\r\n  truep  //indent=2 which is less than previous 4, OUTDENT\r\n    else\r\n```",
        "createdAt" : "2020-09-27T07:50:29Z",
        "updatedAt" : "2020-09-30T16:20:26Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      },
      {
        "id" : "2e0f7a8f-01b3-42de-95da-880427bea61a",
        "parentId" : "38b2edfb-ad46-4bbd-a77a-8b293777b1df",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Let's add a comment with a link to an issue: https://github.com/lampepfl/dotty/issues/9790",
        "createdAt" : "2020-09-29T13:57:58Z",
        "updatedAt" : "2020-09-30T16:20:26Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "6029f26a-28c9-4a8e-9058-7af5f20096e3",
        "parentId" : "38b2edfb-ad46-4bbd-a77a-8b293777b1df",
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : ":+1: ",
        "createdAt" : "2020-09-30T16:18:37Z",
        "updatedAt" : "2020-09-30T16:20:26Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      }
    ],
    "commit" : "abda6140f18cfdd322470f06e9c7b5a6fdee0156",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@    // Or accept mismatch with parsing rules and parse as 'if (cond) { truep } else {falsep }'\n    // Why error is thrown is described in mentioned issue.\n    val code = \"\"\"|def fn: Unit =\n                  |    if cond then\n                  |  truep"
  }
]