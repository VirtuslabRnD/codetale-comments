[
  {
    "id" : "60e163a4-8d6f-4140-8056-c03899398247",
    "prId" : 2239,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2239#pullrequestreview-592105578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f9d2249-a106-47c1-b2d7-cf2e76c23af0",
        "parentId" : null,
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "as we still need to support `_` it could be good to also keep a test for import + given + '_'",
        "createdAt" : "2021-02-17T11:41:59Z",
        "updatedAt" : "2021-02-17T15:50:20Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5ec732af4c3518ebdf33cbcf706919041605d24",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +767,771 @@    )\n\n    runTestAssert[Stat](\"import File.{ given TC, given AC, * }\")(\n      Import(\n        List("
  },
  {
    "id" : "10eeec70-dd83-4762-b736-fcd05bee7cab",
    "prId" : 2210,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2210#pullrequestreview-563628409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87b9b4c1-2e04-41b4-97bd-415f6e6eee3f",
        "parentId" : null,
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "(random place)\r\nwith can start in that case indentation block, could you add a test for that?\r\nsth like:\r\n```\r\ngiven intOrd: Ord[Int] with\r\n   def fa: Int = 1\r\n   def fb: Int = 2\r\n```",
        "createdAt" : "2021-01-06T19:28:51Z",
        "updatedAt" : "2021-01-07T16:32:29Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      },
      {
        "id" : "0d79eca0-fd0c-4d45-8ba9-551c7b875baa",
        "parentId" : "87b9b4c1-2e04-41b4-97bd-415f6e6eee3f",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Actually it was not supported, but it's not that hard to do. Fixed it and added a test for both indentation and legit `with`.",
        "createdAt" : "2021-01-07T16:25:02Z",
        "updatedAt" : "2021-01-07T16:32:29Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "a08d5544ed1a8f7ec41bf03154761d07b05f865b",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +169,173 @@    )\n  }\n\n  test(\"given-selftype-error\") {\n    runTestError("
  },
  {
    "id" : "4ee84366-c232-4d27-bc26-b2e588750999",
    "prId" : 2210,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2210#pullrequestreview-563629489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f7c0be1-60f5-43dd-906e-4dc7e0474a0a",
        "parentId" : null,
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "could you add test:\r\n```\r\nscala> given intM: Ord[Int] with Eq[Int] with {\r\n     |   def fx = 3\r\n     |}\r\n// defined object intM\r\n```\r\nDidn't check if it is handled, but seems like a tricky case",
        "createdAt" : "2021-01-06T19:45:57Z",
        "updatedAt" : "2021-01-07T16:32:29Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      },
      {
        "id" : "1298cc02-e8bd-41a9-a7cc-bfb88fe54092",
        "parentId" : "2f7c0be1-60f5-43dd-906e-4dc7e0474a0a",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "That might have never actually worked :thinking: \r\n",
        "createdAt" : "2021-01-07T15:08:46Z",
        "updatedAt" : "2021-01-07T16:32:29Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "c6f147a5-06e5-4595-937f-c884ad9314e7",
        "parentId" : "2f7c0be1-60f5-43dd-906e-4dc7e0474a0a",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Ok, so that was much more difficult than aniticipated - I had to rework given defs, there is no need for separate `decltype` anymore, but we can just use the inits from the Template.",
        "createdAt" : "2021-01-07T16:26:18Z",
        "updatedAt" : "2021-01-07T16:32:29Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "a08d5544ed1a8f7ec41bf03154761d07b05f865b",
    "line" : 495,
    "diffHunk" : "@@ -1,1 +582,586 @@        tname(\"???\")\n      )\n    )\n  }\n"
  },
  {
    "id" : "53ac565e-06b8-406d-94f3-8199fc2c657c",
    "prId" : 2148,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2148#pullrequestreview-516266770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e1ccdc2-dce4-4c0a-b941-ff32595d88c2",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "So this one currently works in Dotty, reported it as weird here https://github.com/lampepfl/dotty/issues/10074",
        "createdAt" : "2020-10-23T15:14:13Z",
        "updatedAt" : "2020-10-24T10:47:59Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "21728f37-fd8d-49bc-8905-981f827831e6",
        "parentId" : "7e1ccdc2-dce4-4c0a-b941-ff32595d88c2",
        "authorId" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "body" : "we could add this as a bullet in dotty generic issue to catch up later as this one you will probably merge in a moment :)",
        "createdAt" : "2020-10-23T21:50:06Z",
        "updatedAt" : "2020-10-24T10:47:59Z",
        "lastEditedBy" : "4505061e-6f7e-40b4-a615-ec2ee29e935c",
        "tags" : [
        ]
      },
      {
        "id" : "7b079e42-7c75-461b-aaca-a88a8b5f5f1b",
        "parentId" : "7e1ccdc2-dce4-4c0a-b941-ff32595d88c2",
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Added!",
        "createdAt" : "2020-10-24T10:20:23Z",
        "updatedAt" : "2020-10-24T10:47:59Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      }
    ],
    "commit" : "99ae819463c21f6b746c3fc55a94abfc494a0963",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +56,60 @@  }\n\n  test(\"given-anon-as\") {\n    runTestAssert[Stat](\"given as Context = ctx\", assertLayout = Some(\"given Context = ctx\"))(\n      Defn.GivenAlias(Nil, Name(\"\"), Nil, Nil, Type.Name(\"Context\"), Term.Name(\"ctx\"))"
  }
]