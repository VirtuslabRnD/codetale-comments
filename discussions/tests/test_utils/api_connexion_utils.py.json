[
  {
    "id" : "ae6aa858-20f9-4b5f-bfbb-0bc6095ceeca",
    "prId" : 10594,
    "prUrl" : "https://github.com/apache/airflow/pull/10594#pullrequestreview-478585563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f56016f-0bca-42d7-88ac-24fe857b9c08",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "What do you think about extending the create_user method to accept a list of permissions?\r\n```python\r\ndef create_user(app, username, role=None, permissions=None):\r\n    appbuilder = app.appbuilder\r\n    current_role = None\r\n    if role and permission:\r\n    \traise IllegalArgument(\"role and permission are muttually exclussive\")\r\n    elif role:\r\n\t    current_role = appbuilder.sm.find_role(role)\r\n\telif permission:\r\n\t\tranadom_suffix = get_random_string()\r\n\t    current_role = create_role(app, get_random_string(\"test-role-{ranadom_suffix}\"))\r\n\r\n    tester = appbuilder.sm.find_user(username=username)\r\n    if not tester:\r\n        appbuilder.sm.add_user(\r\n            username=username,\r\n            first_name=username,\r\n            last_name=username,\r\n            email=f\"{username}@fab.org\",\r\n            role=current_role,\r\n            password=username,\r\n        )\r\n```\r\nThis will simplify testing as we won't have to worry so much about side effects as each role will only be used once. This will also explicitly associate the user with a specific permission set.",
        "createdAt" : "2020-08-31T12:51:31Z",
        "updatedAt" : "2020-09-22T03:17:54Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7f590d1b4eedfb00ece0828e55e876ecd4babe3",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +36,40 @@\n\ndef create_role(app, name, permissions=None):\n    appbuilder = app.appbuilder\n    role = appbuilder.sm.find_role(name)"
  }
]