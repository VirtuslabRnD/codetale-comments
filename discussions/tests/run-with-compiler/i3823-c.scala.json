[
  {
    "id" : "c3724937-bef9-4628-921b-3fd8ef872093",
    "prId" : 3833,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3833#pullrequestreview-89188052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0287c8fa-0ea5-4af5-9850-79388043d2b7",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This quote will be pickled as \r\n```scala\r\ntype T = [[1| ]]\r\n{\r\n  val z: T = [[0| ]]\r\n  ()\r\n}\r\n```",
        "createdAt" : "2018-01-16T17:44:27Z",
        "updatedAt" : "2018-01-17T16:48:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "16f9025b-4452-4358-9cac-cc595297cd1f",
        "parentId" : "0287c8fa-0ea5-4af5-9850-79388043d2b7",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "After `ReifyQuotes` the tree is\r\n```scala\r\npackage <empty> {\r\n  import dotty.tools.dotc.quoted.Runners._\r\n  import scala.quoted._\r\n  final lazy module val Test: Test$ = new Test$()\r\n  @scala.annotation.internal.SourceFile(\"Foo.scala\") final module class Test$()\r\n     extends\r\n   Object() { this: Test.type => \r\n    def main(args: Array[String]): Unit = \r\n      {\r\n        def f[T >: Nothing <: Any](x: quoted.Expr[T])(implicit t: quoted.Type[T]\r\n          )\r\n        : scala.quoted.Expr[Unit] = \r\n          scala.runtime.quoted.Unpickler.unpickleExpr[Unit](\r\n            scala.collection.immutable.Nil.::[String](\r\n              \r\n                \"\\\\¡«\\037\\0203\\0200\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\016\\02M0£\\01\\0204ASTs\\01\\0206_root_\\01\\0201\\'\\01\\0203Any\\01\\0205scala\\01\\0201z\\01\\0201T\\0200¤\\0200¢6\\0201\\0201\\0236\\0202u\\02036\\0204\\0214\\0226\\0214\\0211\\02\\0201\\0206\\02055\\0230ÿ\\0201\\0200\\0203\\0211\\0206£\\0205ÿ\\0201\\02012\\0235\\025\\025\"\r\n              \r\n            )\r\n          , [x,new scala.quoted.Type[T]() : Any])\r\n        println(\r\n          f[Int](\r\n            scala.runtime.quoted.Unpickler.unpickleExpr[Int](\r\n              scala.collection.immutable.Nil.::[String](\r\n                \r\n                  \"\\\\¡«\\037\\0203\\0200\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\00\\n%fð\\0235\\01\\0204ASTs\\01\\0206_root_\\01\\0201\\'\\01\\0203Any\\01\\0205scala\\0200\\0216\\0200\\02146\\0201\\0201\\0210\\0202u\\02036\\0204<\\0202\\025\"\r\n                \r\n              )\r\n            , [ : Any])\r\n          )(quoted.Type.IntTag).show(\r\n            dotty.tools.dotc.quoted.Runners.runner[Unit]\r\n          )\r\n        )\r\n      }\r\n  }\r\n}\r\n```\r\n\r\nNote that the arguments for the holes are `x` and `new scala.quoted.Type[T]()` hence when unpickling we get an instance of `scala.quoted.Type` with an erased `T`. Instead of `new scala.quoted.Type[T]()` we should have `t`.",
        "createdAt" : "2018-01-16T17:50:00Z",
        "updatedAt" : "2018-01-17T16:48:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "b85ce0bb-a631-4913-9950-5905720b80a2",
        "parentId" : "0287c8fa-0ea5-4af5-9850-79388043d2b7",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "If we have \r\n```scala\r\ndef f[T](x: Expr[T])(implicit t: Type[T]) = '{\r\n   val z: ~t= ~x\r\n}\r\n```\r\n\r\nthen the hole receives the `t` and works as expected.",
        "createdAt" : "2018-01-16T17:51:18Z",
        "updatedAt" : "2018-01-17T16:48:31Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4b93e72d653ba1a2fcfa4caa20df47cbea87dc4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@    def f[T](x: Expr[T])(implicit t: Type[T]) = '{\n      val z = ~x\n    }\n    // FIXME uncomment next line\n    // println(f('(2))(Type.IntTag).show)"
  }
]