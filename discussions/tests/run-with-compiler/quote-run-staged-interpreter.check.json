[
  {
    "id" : "f23bacec-3957-4b99-aa83-e10c8a64349b",
    "prId" : 4255,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4255#pullrequestreview-109806901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80e2f270-1235-4086-9f69-48dede1affc1",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Could the result appear inside a \"template\" (class/trait)? Because then you sometimes do need parentheses around the closure to avoid `(x: Int) =>` being parsed as a self-type declaration.",
        "createdAt" : "2018-04-05T17:01:42Z",
        "updatedAt" : "2018-04-06T08:50:14Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "d88622e0-4c19-45c0-ac00-e7b9ff97d5cd",
        "parentId" : "80e2f270-1235-4086-9f69-48dede1affc1",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Indeed, if one writes\r\n```scala\r\nclass Test {\r\n  ((x: Int) => x)\r\n}\r\n```\r\nIt will be pretty printed as\r\n```scala\r\nclass Test() extends Object() { \r\n  (x: Int) => x\r\n}\r\n```\r\nwhich will be parsed as a self type. But I do think the lightweight syntax is worth the newly introduced bug. One can fix the issue in a separate PR",
        "createdAt" : "2018-04-05T17:35:00Z",
        "updatedAt" : "2018-04-06T08:50:14Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2143728bf046cb514748c2391e298197d71cb01a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +-1,3 @@(x: Int) => 2.+(x).+(4)\n6\n8"
  }
]