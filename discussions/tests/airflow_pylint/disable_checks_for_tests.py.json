[
  {
    "id" : "b0abe559-7fea-4a7b-83b9-377311bbb04c",
    "prId" : 10207,
    "prUrl" : "https://github.com/apache/airflow/pull/10207#pullrequestreview-463109693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48f0cd2e-8e1d-41a5-99b6-62f86c81a62b",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "I'm just wondering if we can first run pylint for main sources and then, just add additional disables to `pylintrc`? Not sure if this will be simpler",
        "createdAt" : "2020-08-07T05:22:19Z",
        "updatedAt" : "2020-08-07T08:02:14Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "9f93fb6d-1eca-4868-9c2f-421baa879afa",
        "parentId" : "48f0cd2e-8e1d-41a5-99b6-62f86c81a62b",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "This is exactly what we did before and that was a pain.  It took much more  time than this one.\r\nThis is a huge optimization, that's why I did it.\r\n\r\nThe problem is that when you run pylint for tests, it also pulls in all the tested code which means that basically a lot of the main airflow code was parsed and processed twice - once in the \"pylint main\" and once in the \"pylint tests\". This code was not verified by Pylint but it was parsed and analyzed so that the test code could be pylint-checked so it's not a full duplication, but I think the savings are significant\r\n\r\nSome random stats:\r\n\r\nBefore the change:\r\n\r\npylint main: 6:20s \r\npylint tests: 3:59s \r\n\r\nTota: 10m 20s\r\n\r\nAfter the change: \r\ncombined pylint: 8:20s\r\n\r\n\r\nSo we save 20% (2 minutes) of elapsed time by doing this.\r\n\r\n\r\n",
        "createdAt" : "2020-08-07T07:57:01Z",
        "updatedAt" : "2020-08-07T08:02:14Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b57575b7de43107d8f8196464f3312ccad7c300",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\n\nMANAGER.register_transform(scoped_nodes.Module, transform)"
  }
]