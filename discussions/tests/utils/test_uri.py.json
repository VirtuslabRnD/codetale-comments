[
  {
    "id" : "85bb06f4-16f3-4bf5-85c0-954e54fd2097",
    "prId" : 3232,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3232#pullrequestreview-462956112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dd4e88a-65a0-43b5-baab-a55b17e36da0",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "can we add the test case `'databricks://scope:key/random_stuff'` here? we will just ignore \"random_stuff\" right?",
        "createdAt" : "2020-08-07T00:14:36Z",
        "updatedAt" : "2020-08-07T19:07:48Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "59dae340c20f6df0255bb855eda2025d004db1e6",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +339,343 @@    ('dbfs:/path/a/b/', 'databricks://scope:key/random_stuff',\n     'dbfs://scope:key@databricks/path/a/b/'),\n    ('dbfs:/path/a/b/', 'nondatabricks://profile', 'dbfs:/path/a/b/'),\n    # test various artifact schemes\n    ('runs:/path/a/b/', 'databricks://Profile', 'runs://Profile@databricks/path/a/b/'),"
  },
  {
    "id" : "45f47f49-5aa6-45d7-9342-f03f8e328307",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-456001097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11c3417f-3e32-4e3b-a722-96e9058ee900",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Can we also get a `scope:key@nondatabricks` test?",
        "createdAt" : "2020-07-27T17:45:04Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +368,372 @@    ('dbfs://@databricks/a/b', True),\n    ('dbfs://profile@databricks/a/b', True),\n    ('dbfs://scope:key@databricks/a/b', True),\n    ('dbfs://profile@notdatabricks/a/b', False),\n    ('dbfs://scope:key@notdatabricks/a/b', False),"
  },
  {
    "id" : "f4bc1b56-2dbe-4c4e-b058-acfeb3107fe3",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-457279092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50b8f349-50b0-4b3e-8d81-fe698657a7ae",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Just making sure, the PR to switch this to be `scope:key` will have to change this test as well right?",
        "createdAt" : "2020-07-27T17:47:46Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "d3382bab-91d1-463c-9712-0cb1f654715d",
        "parentId" : "50b8f349-50b0-4b3e-8d81-fe698657a7ae",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "yep",
        "createdAt" : "2020-07-29T07:54:34Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +326,330 @@    ('dbfs:/path/a/b/', 'databricks://Profile', 'dbfs://Profile@databricks/path/a/b/'),\n    ('dbfs:/path/a/b/', 'databricks://profile/', 'dbfs://profile@databricks/path/a/b/'),\n    ('dbfs:/path/a/b/', 'databricks://scope/key', 'dbfs://scope:key@databricks/path/a/b/'),\n    ('dbfs:/path/a/b/', 'nondatabricks://profile', 'dbfs:/path/a/b/'),\n    # test various artifact schemes"
  },
  {
    "id" : "afe378d8-ec8d-4c32-8783-783ed884ef13",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-460218379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74645cc2-f97f-4710-9fb7-86639fd4d78f",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Do we support \"scope/key\" profile strategy for runs and models paths?",
        "createdAt" : "2020-07-27T17:54:38Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "53e89697-1dba-4e2d-8676-322bed57952e",
        "parentId" : "74645cc2-f97f-4710-9fb7-86639fd4d78f",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "yeah - just seemed duplicative, though technically we should add all combinations :-)",
        "createdAt" : "2020-07-29T07:55:52Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "b360555e-e72b-4e55-9c91-db2c5b0bd432",
        "parentId" : "74645cc2-f97f-4710-9fb7-86639fd4d78f",
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "definitely - we should also remember to document that it works for all the possible paths somewhere",
        "createdAt" : "2020-08-03T17:26:47Z",
        "updatedAt" : "2020-08-03T17:30:02Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "2d05d88e-ad88-4bf9-a99c-8388e060437d",
        "parentId" : "74645cc2-f97f-4710-9fb7-86639fd4d78f",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "yeah, i don't think we need to document these utility functions publicly, but should definitely be very clear on what's supported in the docs for working with different tracking and registry servers.",
        "createdAt" : "2020-08-03T17:38:36Z",
        "updatedAt" : "2020-08-03T17:38:36Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +329,333 @@    ('dbfs:/path/a/b/', 'nondatabricks://profile', 'dbfs:/path/a/b/'),\n    # test various artifact schemes\n    ('runs:/path/a/b/', 'databricks://Profile', 'runs://Profile@databricks/path/a/b/'),\n    ('runs:/path/a/b/', 'nondatabricks://profile', 'runs:/path/a/b/'),\n    ('models:/path/a/b/', 'databricks://profile', 'models://profile@databricks/path/a/b/'),"
  },
  {
    "id" : "c9c4f44f-1320-4693-acef-44116f218fcf",
    "prId" : 2221,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2221#pullrequestreview-334274666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa74afa0-6f9e-4e11-a695-5ddabedcc7d0",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "it's interesting that for 1-level deep paths we return a trailing \"/\" and for deeper paths we don't. is that intentional?",
        "createdAt" : "2019-12-18T17:45:10Z",
        "updatedAt" : "2019-12-18T17:48:11Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "fc8efd4b-6d90-45a4-9751-be7432097f4e",
        "parentId" : "aa74afa0-6f9e-4e11-a695-5ddabedcc7d0",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "and more importantly, are there any discrepancies in downstream behaviors this difference can cause?",
        "createdAt" : "2019-12-18T17:45:58Z",
        "updatedAt" : "2019-12-18T17:48:11Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "42be5312-6abd-4227-9b5c-08a2017b16e6",
        "parentId" : "aa74afa0-6f9e-4e11-a695-5ddabedcc7d0",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "This appears to be caused by the behavior of `posixpath.join()`. I tried the following cases out in Python2 and Python 3:\r\n```\r\n>>> import posixpath\r\n>>> posixpath.join(\"base\", \"\")\r\n'base/'\r\n>>> posixpath.join(\"base/\", \"\")\r\n'base/'\r\n>>> posixpath.join(\"/base\", \"\",)\r\n'/base/'\r\n```\r\n\r\nGiven that we were previously leveraging `posixpath.join()` for the FileStore and SqlAlchemyStore and that multiple artifact stores rely on it for URI path component construction, this behavior seems consistent with pre-existing behavior and is (hopefully) safe.",
        "createdAt" : "2019-12-18T21:29:06Z",
        "updatedAt" : "2019-12-18T21:29:07Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "96d1f070ac0cd5d6ffc6de76e728695d22cd6f7b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +70,74 @@        (\"///path\", \"/subpath\", \"///path/subpath\"),\n        (\"/path\", \"/subpath/subdir\", \"/path/subpath/subdir\"),\n        (\"file:path\", \"\", \"file:path/\"),\n        (\"file:path/\", \"\", \"file:path/\"),\n        (\"file:path\", \"subpath\", \"file:path/subpath\"),"
  }
]