[
  {
    "id" : "e19342da-4ba4-4f6d-a728-07f6ff113505",
    "prId" : 7905,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7905#pullrequestreview-338780346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a1f19c6-37d1-4f20-ba48-3bbcdf285c09",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I had to change the test case slightly to make sure  `Index` was fully defined before looking for `ValueOf[Index]`.",
        "createdAt" : "2020-01-06T17:27:15Z",
        "updatedAt" : "2020-01-06T17:27:15Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e094ced1939ed47220c7c9812a13c645a7fea513",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@  def upCast[A, B](a: A)(given erased evidence: (A <:< B)): B = a.asInstanceOf[B]\n\n  def from[Set, Value, Index <: Int](value: Value)(given erased at: At[Set, Value, Index]): (given ValueOf[Index]) => Coproduct[Set, Value, Index] = {\n    Coproduct[Set, Value, Index](upCast(value: Value)(given at.cast.liftCo[[+X] =>> Value & X]), valueOf[Index])\n  }"
  }
]