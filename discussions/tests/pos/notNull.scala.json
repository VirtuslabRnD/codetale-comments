[
  {
    "id" : "76b53957-3c97-4dfe-8fe0-b0d690b46826",
    "prId" : 7556,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7556#pullrequestreview-317285113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9826164d-8d97-4786-8d15-4807e5ef237d",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "The problem is that the compiler will insert `$nn` on a path, and that the path can appear in a type or a term. I don't see how that could work with the revised version of `notNull`, since that wrapping would be no longer a path.\r\n",
        "createdAt" : "2019-11-14T20:00:53Z",
        "updatedAt" : "2019-11-15T12:25:15Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "5c6644b3-e667-4884-98dd-ccfdb4675eb1",
        "parentId" : "9826164d-8d97-4786-8d15-4807e5ef237d",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "As I explained at https://github.com/lampepfl/dotty/pull/6344#issuecomment-553431009, I don't think the use in paths is a real issue. We can get away without supporting it.",
        "createdAt" : "2019-11-14T20:03:27Z",
        "updatedAt" : "2019-11-15T12:25:15Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "62fdec06-61d5-4fa0-8d28-fa31eae97364",
        "parentId" : "9826164d-8d97-4786-8d15-4807e5ef237d",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I put my answer on that thread as well, since it covered several earlier remarks. https://github.com/lampepfl/dotty/pull/6344#issuecomment-554062532.\r\n\r\nWith 4 PRs in flight it is getting difficult to origanize comments!",
        "createdAt" : "2019-11-14T21:52:52Z",
        "updatedAt" : "2019-11-15T12:25:15Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "016f47191c75c386f0af1cbfba041506ce9e5830",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@  locally {\n    val x: C { type T = Int } = new C { type T = Int }\n    val xnn: x.type & C { type T = Int } = notNull(x)\n    val y: xnn.T = 33\n    val z = y; val zc: Int = z"
  }
]