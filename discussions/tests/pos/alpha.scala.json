[
  {
    "id" : "87505c9f-c058-4240-a627-0a37c138affd",
    "prId" : 6597,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6597#pullrequestreview-245299976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a79eaa1-6147-4dfa-99df-848d3d04b940",
        "parentId" : null,
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "I'd like to see a pos test like the following:\r\n```scala\r\ndef foo(x: Any): Int = 1\r\n@alpha(\"bar\") def foo[A](x: A): Int = 2\r\n```\r\nWithout `@alpha`, those overloads would clash after erasure. But with `@alpha`, they should be fine.",
        "createdAt" : "2019-06-04T11:18:20Z",
        "updatedAt" : "2019-06-05T11:54:12Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "97a8a37e208e42857e61d33451fc0bfee42b15e9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@  def foo() = 1\n\n  @alpha(\"bar\") def foo(x: Int) = 2\n}"
  }
]