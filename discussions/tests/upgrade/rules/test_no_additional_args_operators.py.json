[
  {
    "id" : "158305fc-5b26-4edd-8839-4066972e6682",
    "prId" : 12660,
    "prUrl" : "https://github.com/apache/airflow/pull/12660#pullrequestreview-549993357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "318f91d1-8ecc-4b10-9194-6261721d6eaa",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "This was needed as we suppress DeprecationWarning and PendingDeprecationWarning when running pytest on CI:\r\n\r\n```\r\nStarting the tests with those pytest arguments: --verbosity=0 --strict-markers --durations=100 --cov=airflow/ --cov-config=.coveragerc --cov-report=xml:/files/coverage.xml --color=yes --maxfail=50 --pythonwarnings=ignore::DeprecationWarning --pythonwarnings=ignore::PendingDeprecationWarning --junitxml=/files/test_result.xml --setup-timeout=20 --execution-timeout=60 --teardown-timeout=20 -rfEX --with-db-init tests\r\n```\r\n\r\nLol took few hours for me & Dennis to figure why we were not able to replicate it when running it with breeze:\r\n\r\n```\r\nroot@e6768532ef19:/opt/airflow# pytest tests/upgrade/rules/test_no_additional_args_operators.py\r\n```\r\n\r\nuntil we ran it with:\r\n\r\n```\r\nroot@e6768532ef19:/opt/airflow# pytest tests/upgrade/rules/test_no_additional_args_operators.py --pythonwarnings=ignore::DeprecationWarning --pythonwarnings=ignore::PendingDeprecationWarning\r\n```\r\n\r\nðŸ˜„ ",
        "createdAt" : "2020-12-10T18:27:11Z",
        "updatedAt" : "2020-12-10T19:24:48Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "f287e6aa-cc7e-4e6f-8cd0-f3921feee2a8",
        "parentId" : "318f91d1-8ecc-4b10-9194-6261721d6eaa",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Good work you two!",
        "createdAt" : "2020-12-11T10:51:42Z",
        "updatedAt" : "2020-12-11T10:51:43Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bd2ae8fc17af7d22cd78c1fee83f7ba20a68fcd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@class TestNoAdditionalArgsInOperatorsRule(TestCase):\n\n    @pytest.mark.filterwarnings('always')\n    def test_check(self):\n        rule = NoAdditionalArgsInOperatorsRule()"
  }
]