[
  {
    "id" : "f80e4ba3-d9be-46a7-b0f9-7a5f43afece5",
    "prId" : 1477,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1477#pullrequestreview-110300443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbfc53a7-c697-4e25-9520-e9f1205660d3",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Later, we'll have to deal with instabilities in gensyms when pieces of code get moved around. But for this PR, the current situation with synthetic names is okay.",
        "createdAt" : "2018-04-08T21:16:46Z",
        "updatedAt" : "2018-04-08T21:20:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "21b41e6c84d84575561dfa16c16833fad3c589b9",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +944,948 @@  [67..68): T => example.Methods#[T]\n  [72..79): Nothing => scala.Nothing#\nexample.Methods#m7b(List,Function1).(evidence$2) => implicit param evidence$2: Function1[U, T]\n  [0..9): Function1 => scala.Function1#\n  [10..11): U => example.Methods#m7b(List,Function1).[U]"
  },
  {
    "id" : "c48242d1-81a7-4846-ba8b-000ed77a63e9",
    "prId" : 1416,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1416#pullrequestreview-102671053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c16e7356-8581-4e4b-ae9e-48cea8ad73d5",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "What is the canonical way to distinguish between the `var method` getter and setter?\r\n\r\n```\r\n +_root_.flags.p.package.AA#`z_=`(Int). => var method z_=: (x$1: Int): Unit \r\n +_root_.flags.p.package.AA#z(). => var method z: Int \r\n```\r\nIt does not seem to be possible to distinguish them with kind/properties alone.",
        "createdAt" : "2018-03-09T11:41:00Z",
        "updatedAt" : "2018-03-09T15:12:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "6ee8e6bb-e2a3-4c2e-885f-a0bad7785740",
        "parentId" : "c16e7356-8581-4e4b-ae9e-48cea8ad73d5",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "SLS mandates the `_=` suffix for setters, so that should be a canonical way.",
        "createdAt" : "2018-03-09T14:51:29Z",
        "updatedAt" : "2018-03-09T15:12:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff10c15502b6b6400abe286a263819084a11d18",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +256,260 @@_root_.flags.p.package.AA#`<init>`(Int,Int,Int).(z) => var param z: Int\n  [0..3): Int => _root_.scala.Int#\n_root_.flags.p.package.AA#`z_=`(Int). => var method z_=: (x$1: Int): Unit\n  [6..9): Int => _root_.scala.Int#\n  [12..16): Unit => _root_.scala.Unit#"
  },
  {
    "id" : "8970111f-2935-49c3-9a0c-1b00cd06fba5",
    "prId" : 1414,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1414#pullrequestreview-102507641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0be7b17-d922-40ec-97ce-a294696850f2",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "😍 ",
        "createdAt" : "2018-03-09T00:14:24Z",
        "updatedAt" : "2018-03-09T00:24:15Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb302a4761255026e7932da0feff1aa9ca82ec85",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +385,389 @@[63..72): MetacJava => _root_.com.javacp.MetacJava#\n[73..84): StaticInner => _root_.com.javacp.MetacJava#StaticInner#\n[85..93): isStatic => _root_.com.javacp.MetacJava#StaticInner#isStatic().\n[102..108): javacp => _root_.com.javacp.\n[109..118): MetacJava => _root_.com.javacp.MetacJava#"
  },
  {
    "id" : "8d828037-43c4-4de2-b204-72289f59d161",
    "prId" : 1414,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1414#pullrequestreview-102609930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1caa4376-c239-490c-90b9-f156819d2e05",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "`abstract` and `sealed` are interesting additions. `final` is pretty nuts. Looking forward to getting this sorted out in https://github.com/scalameta/scalameta/issues/1162.",
        "createdAt" : "2018-03-09T00:15:30Z",
        "updatedAt" : "2018-03-09T00:24:15Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "12b670af-0a49-4d9b-8a8a-0c9395508cbc",
        "parentId" : "1caa4376-c239-490c-90b9-f156819d2e05",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "haha yes, `abstract final` makes no sense :joy:",
        "createdAt" : "2018-03-09T11:12:39Z",
        "updatedAt" : "2018-03-09T11:21:04Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb302a4761255026e7932da0feff1aa9ca82ec85",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +1265,1269 @@_root_.java.nio. => package nio\n_root_.java.nio.file. => package file\n_root_.java.nio.file.LinkOption# => abstract final sealed javadefined class LinkOption\n_root_.java.nio.file.LinkOption#NOFOLLOW_LINKS. => final javadefined val NOFOLLOW_LINKS: LinkOption\n  [0..10): LinkOption => _root_.java.nio.file.LinkOption#"
  }
]