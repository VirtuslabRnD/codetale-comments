[
  {
    "id" : "3ae53ade-6b7e-4393-9b27-d3ca21d89674",
    "prId" : 1414,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1414#pullrequestreview-102609930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63019d44-2a5f-4eeb-9508-8586b620d6b3",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Why is this a `<?>`?",
        "createdAt" : "2018-03-09T00:18:02Z",
        "updatedAt" : "2018-03-09T00:24:16Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "4ad94a83-11e2-4ad2-8d15-d92d461a1bf6",
        "parentId" : "63019d44-2a5f-4eeb-9508-8586b620d6b3",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Not sure, looking at lowlevel.expect there seems to be quite a few other `<?>` which seem unrelated to this PR. I opened https://github.com/scalameta/scalameta/issues/1418 to track fixing these. I don't think this is a blocker at the moment.",
        "createdAt" : "2018-03-09T11:16:35Z",
        "updatedAt" : "2018-03-09T11:21:04Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb302a4761255026e7932da0feff1aa9ca82ec85",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +559,563 @@  a => _root_.com.javacp.MetacJava#overload(A+2).(a)\n  Unit => _root_.scala.Unit#\n_root_.com.javacp.MetacJava#overload(A+3). => def overload: (a: <?>): Unit\n  a => _root_.com.javacp.MetacJava#overload(A+3).(a)\n  Unit => _root_.scala.Unit#"
  },
  {
    "id" : "70669d97-368b-498d-a84a-0a3c9f7ca600",
    "prId" : 1414,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1414#pullrequestreview-102507641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0adf281d-8c6c-4e9e-a138-871b285cfeec",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "👍 ",
        "createdAt" : "2018-03-09T00:18:46Z",
        "updatedAt" : "2018-03-09T00:24:16Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb302a4761255026e7932da0feff1aa9ca82ec85",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +1259,1263 @@  extends Enum[LinkOption]\n  extends OpenOption\n  extends CopyOption\n_root_.java.nio.file.LinkOption#NOFOLLOW_LINKS. => final val NOFOLLOW_LINKS: NOFOLLOW_LINKS.type\n  NOFOLLOW_LINKS => _root_.java.nio.file.LinkOption#NOFOLLOW_LINKS."
  },
  {
    "id" : "ac7a4585-9153-4bd4-a200-642b3d704365",
    "prId" : 1373,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1373#pullrequestreview-99591959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62fe6ec7-28a2-4b67-9da0-a05b19a3555a",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "👏 ",
        "createdAt" : "2018-02-27T08:27:26Z",
        "updatedAt" : "2018-02-27T11:18:13Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "384068564d24a8d1d4b4b578ae673d40f3d2ab0d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +122,126 @@  Int => _root_.scala.Int#\n_root_.scala. => package scala\n_root_.scala.Array# => final class Array[T: <?>].{+6 decls}\n  extends AnyRef\n  extends Serializable"
  },
  {
    "id" : "d11e2713-5903-44bf-853b-472cf3800fa2",
    "prId" : 1326,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1326#pullrequestreview-97378290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfce3933-62c9-4fc4-9500-4c87044a4d14",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I'm a bit sad to see all val/var accesses become references to getters 😢 the uniformity between syntax and symbols was nice",
        "createdAt" : "2018-02-17T12:41:01Z",
        "updatedAt" : "2018-02-17T13:07:45Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "d94325dc-658a-45ab-88be-39e9b8330312",
        "parentId" : "cfce3933-62c9-4fc4-9500-4c87044a4d14",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yeah, that's what I meant by \"fun consequences\". Unfortunately, that's how the specification works.\r\n\r\nScalac has to do funny things as well - the entire `STABLE` flag and associated business is a direct consequence of this design.",
        "createdAt" : "2018-02-17T16:19:04Z",
        "updatedAt" : "2018-02-17T16:19:04Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "098e876247bdeb8c5b579978b237091752344f2d",
    "line" : 421,
    "diffHunk" : "@@ -1,1 +1001,1005 @@  Int => _root_.scala.Int#\n_root_.scala.language. => final object language\n_root_.scala.language.existentials(). => implicit lazy val existentials: existentials\n  existentials => _root_.scala.languageFeature.existentials#\n_root_.scala.language.higherKinds(). => implicit lazy val higherKinds: higherKinds"
  },
  {
    "id" : "1192d583-13d7-454c-9d79-1ca7770f0e92",
    "prId" : 1316,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1316#pullrequestreview-96927475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ed1dc64-a884-49d7-aa97-936a4903468b",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Why `@deprecated` twice?",
        "createdAt" : "2018-02-15T10:20:03Z",
        "updatedAt" : "2018-02-15T19:38:58Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "91455e5b-ffb1-4eb3-a5fc-26c7afdb772a",
        "parentId" : "6ed1dc64-a884-49d7-aa97-936a4903468b",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "You wouldn't believe: https://github.com/scala/scala/blob/c2a5883891a68180b143eb462c8b0cebc8d3b021/src/compiler/scala/tools/nsc/symtab/classfile/ClassfileParser.scala#L828-L831.",
        "createdAt" : "2018-02-15T17:03:26Z",
        "updatedAt" : "2018-02-15T19:38:58Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e38f5f1d7e7e09abb297f26cdb09e0a5e7d354a1",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +115,119 @@_root_.scala.collection. => package collection\n_root_.scala.collection.mutable. => package mutable\n_root_.scala.collection.mutable.Stack# => @deprecated @deprecated class Stack.{+20 decls}\n  extends AbstractSeq[Stack#[A]\n  extends Seq[Stack#[A]"
  },
  {
    "id" : "04949566-fb41-4fa5-8c85-8ff7c76752ee",
    "prId" : 1278,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1278#pullrequestreview-95166612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1b291ab-8a0b-42c2-8b92-382ab68f1a36",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "@xeno-by do you know why there are two colons `: :`? I expected there to be only one colon, the type is\r\n```scala\r\ntag: METHOD_TYPE\r\nmethodType {\r\n  result {\r\n    tag: LITERAL_TYPE\r\n    literalType {\r\n      tag: ENUM\r\n      primitive: 0\r\n      string: \"_root_.java.nio.file.LinkOption.NOFOLLOW_LINKS.\"\r\n    }\r\n  }\r\n}\r\n```",
        "createdAt" : "2018-02-08T14:38:19Z",
        "updatedAt" : "2018-02-09T14:09:57Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "13cdda52-8101-49fb-96c2-1f94f97a3434",
        "parentId" : "f1b291ab-8a0b-42c2-8b92-382ab68f1a36",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "`: T` corresponds to `NullaryMethodType`, which is the signature of the underlying getter.",
        "createdAt" : "2018-02-08T17:39:22Z",
        "updatedAt" : "2018-02-09T14:09:57Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a342aa48214370cf60327c899eabd7cf017c2d33",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +620,624 @@  X => _root_.types.P#X#\n_root_.types.Test.Literal. => final object Literal\n_root_.types.Test.Literal.bool. => final val bool: : true\n\n_root_.types.Test.Literal.char. => final val char: : 'a'"
  },
  {
    "id" : "a29fdeb8-24d1-4630-a15a-c2156f6f9093",
    "prId" : 1259,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1259#pullrequestreview-94133732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa6c9fb5-c9cb-46f7-ad4e-886f1bb12f34",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Do we have any secondary constructors?",
        "createdAt" : "2018-02-05T20:32:56Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "a72b1d79-1fdc-4ecf-973c-84c7a558567b",
        "parentId" : "fa6c9fb5-c9cb-46f7-ad4e-886f1bb12f34",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Sure, plenty.",
        "createdAt" : "2018-02-05T20:37:08Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfafd4238974683ed888ce24c52bd0fa4de7aa33",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +396,400 @@_root_.types. => package types.{+8 members}\n_root_.types.B# => class B\n_root_.types.B#`<init>`()V. => primaryctor <init>: (): B\n  B => _root_.types.B#\n_root_.types.C# => class C.{+1 decls}"
  }
]