[
  {
    "id" : "124e7a82-360f-4e4c-b405-3d000c6abddf",
    "prId" : 1734,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1734#pullrequestreview-143236311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3329396-e1aa-410f-88b7-fffcc80b3d71",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "👍 ",
        "createdAt" : "2018-08-03T15:48:14Z",
        "updatedAt" : "2018-08-03T15:48:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eff80ef3b1fc1ec66b1d0272860d8869886a2ebf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +153,157 @@        .withOut(AbsolutePath(target))\n        .withClasspath(Classpath(AbsolutePath(in)))\n        .withUsejavacp(true)\n        .withScalaLibrarySynthetics(false)\n      val reporter = Reporter().withOut(out).withErr(err)"
  },
  {
    "id" : "1796a6cc-accf-4029-9d4c-e0fb120f2e5e",
    "prId" : 1399,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1399#pullrequestreview-102146150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d8dcd5a-80ce-444f-84ec-ada115d60ae6",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "@olafurpg I would prefer the new methods from `ExpectHelpers` to be moved directly into this object, since they aren't used anywhere else.",
        "createdAt" : "2018-03-08T00:06:29Z",
        "updatedAt" : "2018-03-08T00:06:37Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e291668c412004029e2d27b5602b184c8b798016",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +258,262 @@}\n\nobject MetacMetacpDiffExpect extends ExpectHelpers {\n  def filename: String = \"metac-metacp.diff\"\n  def loadObtained: String = {"
  },
  {
    "id" : "10698b09-49aa-41ed-bfb6-4e1ce4659603",
    "prId" : 1395,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1395#pullrequestreview-102149780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3495f237-ba08-4b1d-8e50-d57b9d9e4ee9",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Seems we need `PathIO.toUnix(entry.uri)` on the right hand side to please Appveyor.",
        "createdAt" : "2018-03-07T22:22:17Z",
        "updatedAt" : "2018-03-08T00:57:40Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "772ba43b-9a65-4219-b32d-a193d9623e11",
        "parentId" : "3495f237-ba08-4b1d-8e50-d57b9d9e4ee9",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Done on the generator side.",
        "createdAt" : "2018-03-08T00:25:53Z",
        "updatedAt" : "2018-03-08T00:57:40Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f66ad367eba5d3307e2dfe61035d34647e8019",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +237,241 @@      buf.append(\"==========\" + EOL)\n      index.toplevels.sortBy(_.symbol).foreach { entry =>\n        buf.append(s\"${entry.symbol} => ${entry.uri}\" + EOL)\n      }\n      buf.toString"
  },
  {
    "id" : "46b411c3-4910-4c4d-9a1e-6fcbcfe057ad",
    "prId" : 1395,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1395#pullrequestreview-102255594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96f855a1-5df1-4876-b118-8ebdd1482cec",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "FYI, I had this method in ExpectHelpers because I was in fact reusing it between two test suites at one point, but then I figured out how to make the other suite redundant.",
        "createdAt" : "2018-03-08T11:36:19Z",
        "updatedAt" : "2018-03-08T11:50:13Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f66ad367eba5d3307e2dfe61035d34647e8019",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +118,122 @@  }\n\n  protected def normalizedSymbols(path: Path): Map[String, s.SymbolInformation] = {\n    for {\n      file <- FileIO.listAllFilesRecursively(AbsolutePath(path)).iterator"
  },
  {
    "id" : "1fb526d0-8a02-45b1-b76e-7e8fb980e2af",
    "prId" : 1395,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1395#pullrequestreview-102255594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7c1677b-63f6-429a-b396-0bd60e9242ca",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "👍 ",
        "createdAt" : "2018-03-08T11:37:02Z",
        "updatedAt" : "2018-03-08T11:50:13Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "44f66ad367eba5d3307e2dfe61035d34647e8019",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +125,129 @@      sym <- doc.symbols\n    } yield {\n      val normalizedSym = sym.copy(\n        language = None,\n        signature = None,"
  },
  {
    "id" : "47eedfec-989a-4e49-bac4-98dee4254f7f",
    "prId" : 1376,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1376#pullrequestreview-100107146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1427fee7-05bb-4909-97b0-a37c2e8a851f",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "`walk` works with `jarRoot` so why do we deflate to tmp directory?",
        "createdAt" : "2018-02-28T11:14:13Z",
        "updatedAt" : "2018-02-28T13:24:11Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "a96900f7-0982-415a-b0c8-3b1d21f6db7c",
        "parentId" : "1427fee7-05bb-4909-97b0-a37c2e8a851f",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Because metap doesn't support jars.",
        "createdAt" : "2018-02-28T15:30:03Z",
        "updatedAt" : "2018-02-28T15:30:04Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "452b259e539064f1eedb9d397712e9a524d97f1f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +80,84 @@      } else {\n        val tempDir = Files.createTempDirectory(\"jar_\")\n        val jarRoot = FileIO.jarRootPath(AbsolutePath(dirOrJar.toAbsolutePath.toString)).toNIO\n        Files.walk(jarRoot).iterator.asScala.foreach { jarPath =>\n          if (jarPath.toString.endsWith(\".semanticdb\")) {"
  }
]