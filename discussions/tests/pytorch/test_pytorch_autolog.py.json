[
  {
    "id" : "08123122-adb0-40d0-97cb-da362e1a14a6",
    "prId" : 4302,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4302#pullrequestreview-648189318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cc1930d-4686-4e45-9a0f-5e7483a08e81",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "This change in the pytorch-lightning repo caused the issue:\r\n\r\nhttps://github.com/PyTorchLightning/pytorch-lightning/pull/7232/files#diff-667a2513c158c2b01d73b479e4dea75587d8531f9cd286891d34570a2fd145dcR986-R987\r\n\r\nPrior to this change, `Trainer.test` calls `Trainer.fit` (which is patched and automatically creates / terminates a run). This means when `on_test_end` is called, an active run exists.\r\n\r\nNow `Trainer.test` no longer calls `Trainer.fit`. This means when `on_test_end` is called, no active run exists and a new run will be created by `mlflow.set_tag` and leaked.\r\n\r\n```python\r\ndef on_test_end(self, trainer, pl_module):\r\n    \"\"\"\r\n    Logs accuracy and other relevant metrics on the testing end\r\n\r\n    :param trainer: pytorch lightning trainer instance\r\n    :param pl_module: pytorch lightning base module\r\n    \"\"\"\r\n    try_mlflow_log(mlflow.set_tag, \"Mode\", \"testing\")\r\n    for key, value in trainer.callback_metrics.items():\r\n        try_mlflow_log(mlflow.log_metric, key, float(value))\r\n```\r\n",
        "createdAt" : "2021-04-29T13:14:32Z",
        "updatedAt" : "2021-04-30T01:16:19Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "29288dc9bc2749d554c904dcdda207709f9a37d1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +271,275 @@    with mlflow.start_run() as run:\n        trainer.fit(model, dm)\n        trainer.test()\n    client = mlflow.tracking.MlflowClient()\n    run = client.get_run(run.info.run_id)"
  },
  {
    "id" : "db0da58f-5d62-4230-b05b-f4d1c2583a5c",
    "prId" : 3901,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3901#pullrequestreview-558224593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1af848d-13e5-4924-9085-da6a0d41907d",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Should we add `pytorch-lightning` in the cross version tests (I'd be happy to file a follow-up PR)?\r\n\r\n```yml\r\npytorch-PL:\r\n  package_info:\r\n    pip_release: \"pytorch-lightning\"\r\n    install_dev: |\r\n      pip install ...\r\n\r\n  autologging:\r\n    minimum: \"x.x.x\"\r\n    maximum: \"y.y.y\"\r\n    run: |\r\n      pytest tests/pytorch/test_pytorch_autolog.py --large\r\n```",
        "createdAt" : "2020-12-23T13:50:52Z",
        "updatedAt" : "2020-12-23T13:51:11Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "f859ca37-fe6e-409f-af51-2d077cdd7bf2",
        "parentId" : "c1af848d-13e5-4924-9085-da6a0d41907d",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Sounds like a good follow-up :)",
        "createdAt" : "2020-12-23T20:54:57Z",
        "updatedAt" : "2020-12-23T20:54:58Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7f9e7b7f7033464003ed385b37d0243b89a721a",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +263,267 @@    LooseVersion(pl.__version__) < LooseVersion(\"1.1.0\"),\n    reason=\"`LightningOptimizer` doesn't exist in pytorch-lightning < 1.1.0\",\n)\ndef test_get_optimizer_name_with_lightning_optimizer():\n    from pytorch_lightning.core.optimizer import LightningOptimizer"
  },
  {
    "id" : "62f1fb27-141c-4df9-bf8d-850d9c9f6496",
    "prId" : 3809,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3809#pullrequestreview-549307339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1db6500a-2726-4de5-b50b-c7db7822bd2e",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Related PR in the pytorch-lightning repo: https://github.com/PyTorchLightning/pytorch-lightning/pull/4658",
        "createdAt" : "2020-12-10T15:22:19Z",
        "updatedAt" : "2020-12-10T15:22:19Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "955974ef33cebad175ae68bf5ba389a9a08078a0",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +65,69 @@    # In pytorch-lightning >= 1.1.0, optimizer names are prefixed with \"Lightning\".\n    prefix = \"Lightning\" if LooseVersion(pl.__version__) >= LooseVersion(\"1.1.0\") else \"\"\n    assert data.params[\"optimizer_name\"] == prefix + \"Adam\"\n\n    # Testing model_summary.txt is saved"
  },
  {
    "id" : "181086be-debe-47e3-ab27-45e906c3c5af",
    "prId" : 3601,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3601#pullrequestreview-522617512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3282102-67e7-4622-a115-1dbcf854443f",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we save the checkpoints in a temporary directory during the tests?",
        "createdAt" : "2020-11-03T04:25:23Z",
        "updatedAt" : "2020-11-03T06:17:49Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "5a712f26-2e84-4ab8-9836-454d2ab8cf4d",
        "parentId" : "a3282102-67e7-4622-a115-1dbcf854443f",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "and can we add `lightning_logs` (generated during the tests) to `.gitignore`?",
        "createdAt" : "2020-11-03T04:28:27Z",
        "updatedAt" : "2020-11-03T04:28:27Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "73c0f4b5-203d-40d5-94f2-9439f910ccdd",
        "parentId" : "a3282102-67e7-4622-a115-1dbcf854443f",
        "authorId" : "5ea9649b-c37c-4aab-88b3-7bfcd507163e",
        "body" : "@harupy I will create a follow up PR for autolog and example and i will address all the review comments in the follow up PRs.",
        "createdAt" : "2020-11-03T15:34:07Z",
        "updatedAt" : "2020-11-03T15:34:07Z",
        "lastEditedBy" : "5ea9649b-c37c-4aab-88b3-7bfcd507163e",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a0d0785d3d5162e9596922749f606ccd523a724",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@    checkpoint_callback = ModelCheckpoint(\n        filepath=os.getcwd(), save_top_k=1, verbose=True, monitor=\"val_loss\", mode=\"min\", prefix=\"\"\n    )\n\n    trainer = pl.Trainer("
  }
]