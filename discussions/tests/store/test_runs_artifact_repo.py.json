[
  {
    "id" : "abbe3ccf-030a-43b8-9df2-4e695f290e34",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230898685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22d16adb-6a00-499d-ba7a-b7ce0b5f7143",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "BTW, thanks for these tests - the parsing logic in RunsArtifactRepository was kinda fancy so it's good to have these cases to confirm things work. I was kinda wondering if it'd be better to use a regex to parse the URIs instead of `urllib` but the current approach seems better (otherwise we run into all sorts of complications around making sure the regex matches the URI spec)",
        "createdAt" : "2019-04-25T21:17:35Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "c4e8f79f-a9e2-407f-884f-aa2b0e486c59",
        "parentId" : "22d16adb-6a00-499d-ba7a-b7ce0b5f7143",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "lol yeah i couldn't get the logic right without tests xD",
        "createdAt" : "2019-04-25T21:40:52Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@    ('runs:/1234abcdf1394asdfwer33/path/to/model/', '1234abcdf1394asdfwer33', 'path/to/model/'),\n    ('runs:/1234abcdf1394asdfwer33', '1234abcdf1394asdfwer33', None),\n    ('runs:/1234abcdf1394asdfwer33/', '1234abcdf1394asdfwer33', None),\n    ('runs:///1234abcdf1394asdfwer33/', '1234abcdf1394asdfwer33', None),\n])"
  },
  {
    "id" : "01798ff2-219b-4b11-9dcb-62afb78add8e",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-231232212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70a4216b-7cf1-4ba1-9701-78e8a17d95aa",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "@mparkhe do you mind confirming this URI *should* be accepted as a valid Runs URI?",
        "createdAt" : "2019-04-25T21:43:04Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "f0d41298-8691-4731-af98-9affdf13820e",
        "parentId" : "70a4216b-7cf1-4ba1-9701-78e8a17d95aa",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "i think this one is valid. wiki link attached.",
        "createdAt" : "2019-04-25T23:29:17Z",
        "updatedAt" : "2019-04-25T23:29:20Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "a41596b3-13c2-486c-85fa-8c0a02a4b11e",
        "parentId" : "70a4216b-7cf1-4ba1-9701-78e8a17d95aa",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "It's a minor point, but I don't think that this necessarily *has* to be valid. As far as I can tell, each URI type determines the constraints of the `authority` field; `file` URIs allow the `authority` field to be an empty string, automatically resolving the empty field to `localhost` by default. In contrast, `http` URIs do not allow the `authority` field to be empty. For reference, here's a relevant GitHub thread from the `curl` project: https://github.com/curl/curl/issues/791.",
        "createdAt" : "2019-04-26T03:15:56Z",
        "updatedAt" : "2019-04-26T03:15:57Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "001b8203-83dc-4ff3-b6dc-cca9e981c674",
        "parentId" : "70a4216b-7cf1-4ba1-9701-78e8a17d95aa",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "Thanks for the pointer! Yeah I think the runs URIs are more like file URIs in that it could be local or remote. It'll be more relevant when we introduce hostnames to the runs URI but I think the current version is consistent with that future. ",
        "createdAt" : "2019-04-26T15:51:05Z",
        "updatedAt" : "2019-04-26T15:51:05Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@    ('runs:/1234abcdf1394asdfwer33', '1234abcdf1394asdfwer33', None),\n    ('runs:/1234abcdf1394asdfwer33/', '1234abcdf1394asdfwer33', None),\n    ('runs:///1234abcdf1394asdfwer33/', '1234abcdf1394asdfwer33', None),\n])\ndef test_parse_runs_uri_valid_input(uri, expected_run_id, expected_artifact_path):"
  },
  {
    "id" : "97947cca-f25e-4fbf-88a3-a7d80120c6f6",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230899738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cec62f93-ec5a-497b-b545-bd1b0654255f",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "@mparkhe And these (L24-L25) should not be?",
        "createdAt" : "2019-04-25T21:43:38Z",
        "updatedAt" : "2019-04-25T22:51:46Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@    'runs:/',                            # no run id\n    'runs:1234abcdf1394asdfwer33/',      # missing slash\n    'runs://1234abcdf1394asdfwer33/',    # hostnames are not yet supported\n])\ndef test_parse_runs_uri_invalid_input(uri):"
  },
  {
    "id" : "c71cba34-d709-498e-bfff-63090ab1d017",
    "prId" : 1169,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1169#pullrequestreview-230930865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48235c26-417c-4ae3-9697-5fc1ae454d31",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "URI scheme suggests that `/` is optional. No? Could this mean that `1234abcdf1394asdfwer33/` is a folder in the current directory and `run_uuid` is missing.",
        "createdAt" : "2019-04-25T23:28:17Z",
        "updatedAt" : "2019-04-25T23:29:20Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      },
      {
        "id" : "dba769f5-dd61-46a1-ab2c-ec2b0245b715",
        "parentId" : "48235c26-417c-4ae3-9697-5fc1ae454d31",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "discussed offline - we will reject the no slash case (i.e. leave this code as is) since the URI scheme definition neither mandates nor rejects that version and it is easier to add support for it later than to add it now and take it away.",
        "createdAt" : "2019-04-25T23:40:11Z",
        "updatedAt" : "2019-04-25T23:40:12Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f02e38954bd9ba508309bc4ad1758c9eacf340c",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@    'notruns:/1234abcdf1394asdfwer33/',  # wrong scheme\n    'runs:/',                            # no run id\n    'runs:1234abcdf1394asdfwer33/',      # missing slash\n    'runs://1234abcdf1394asdfwer33/',    # hostnames are not yet supported\n])"
  }
]