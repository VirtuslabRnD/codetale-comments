[
  {
    "id" : "f3f42f38-fce3-44ad-af8b-3458c6ff51a9",
    "prId" : 4402,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4402#pullrequestreview-670896401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72e2ed7e-0bad-481d-8c9c-420d2ada13a6",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "This change, and many others of the same form, just accommodate the renaming of `_get_write_credentials` and `_get_read_credentials_` to `_get_write_credential_infos` and `_get_read_credential_infos`, respectively, as well as the adjustment of these methods' return types from `GetCredentialsForRead.Response` and `GetCredentialsForWrite.Response` to lists of `ArtifactCredentialInfo` objects.\r\n\r\nThe only new test cases introduced in this suite are:\r\n\r\n```\r\ntest_get_read_credential_infos_handles_pagination\r\ntest_get_read_credential_infos_respects_max_request_size\r\ntest_get_write_credential_infos_handles_pagination\r\ntest_get_write_credential_infos_respects_max_request_size\r\n```",
        "createdAt" : "2021-05-28T03:14:04Z",
        "updatedAt" : "2021-05-28T03:15:00Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f09a96cfc07591d5960f1bc239a7e3738e448d69",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +215,219 @@            )\n            azure_upload_mock.assert_called_with(\n                mock_credential_info, test_file.strpath, expected_location\n            )\n"
  },
  {
    "id" : "cd50ccd1-b077-4850-9a41-bb80a9f8dbec",
    "prId" : 4402,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4402#pullrequestreview-670897016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d62179-5790-4991-8d28-9a24d511a56d",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "As discussed in https://github.com/mlflow/mlflow/pull/4402/files#r641201273, these are 2 of 4 new test cases",
        "createdAt" : "2021-05-28T03:16:03Z",
        "updatedAt" : "2021-05-28T03:16:03Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f09a96cfc07591d5960f1bc239a7e3738e448d69",
    "line" : 395,
    "diffHunk" : "@@ -1,1 +613,617 @@            assert call_endpoint_mock.call_count == 3\n\n    def test_get_read_credential_infos_respects_max_request_size(self, databricks_artifact_repo):\n        \"\"\"\n        Verifies that the `_get_read_credential_infos` method, which is used to resolve read access"
  },
  {
    "id" : "54d2ebf4-ee42-4a49-820d-b465dd0e77ea",
    "prId" : 4402,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4402#pullrequestreview-670897200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11dddde0-9656-44b6-8f04-00cf761b798b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "As discussed in https://github.com/mlflow/mlflow/pull/4402/files#r641201273, these are the other 2 of 4 new test cases",
        "createdAt" : "2021-05-28T03:16:36Z",
        "updatedAt" : "2021-05-28T03:16:36Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f09a96cfc07591d5960f1bc239a7e3738e448d69",
    "line" : 513,
    "diffHunk" : "@@ -1,1 +731,735 @@            assert call_endpoint_mock.call_count == 3\n\n    def test_get_write_credential_infos_respects_max_request_size(self, databricks_artifact_repo):\n        \"\"\"\n        Verifies that the `_get_write_credential_infos` method, which is used to resolve write"
  },
  {
    "id" : "2659cf30-4b94-48f1-81de-6d4ee2ba1330",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-456001097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f3a311a-6d5a-4579-a5d3-658b7a861349",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Arty the Artifact! Like Clippy, but better in every way",
        "createdAt" : "2020-07-27T18:51:00Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +118,122 @@        ('dbfs:/databricks/mlflow-tracking/MOCK-EXP/MOCK-RUN-ID/artifacts/arty', 'arty'),\n        ('dbfs://prof@databricks/databricks/mlflow-tracking/MOCK-EXP/MOCK-RUN-ID/artifacts/arty',\n         'arty'),\n        ('dbfs:/databricks/mlflow-tracking/MOCK-EXP/MOCK-RUN-ID/awesome/path', '../awesome/path'),\n    ])"
  },
  {
    "id" : "6bf56692-488d-4066-ad03-b93204dc2371",
    "prId" : 3119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3119#pullrequestreview-457289550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4069e4af-6434-4b25-b351-1e1cd9745657",
        "parentId" : null,
        "authorId" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "body" : "Is it worth to test artifact init failure modes here?",
        "createdAt" : "2020-07-27T18:54:11Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "436a8363-a9c6-409f-a948-2be39402f59c",
        "tags" : [
        ]
      },
      {
        "id" : "45985b20-3610-4691-8110-2dd13b9d1eb1",
        "parentId" : "4069e4af-6434-4b25-b351-1e1cd9745657",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "let me think about if there are actual failures due to the host info -- but at the least it'd make sense to add cases like `'dbfs://prof@nondatabricks/...'`",
        "createdAt" : "2020-07-29T08:09:25Z",
        "updatedAt" : "2020-08-03T06:34:09Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d857badd9b4f4e208367ba1e6c5b96e7c80b8a2b",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +103,107 @@         'databricks://getTrackingUriDefault'),\n    ])\n    def test_init_artifact_uri(self, artifact_uri, expected_uri, expected_db_uri):\n        with mock.patch(DATABRICKS_ARTIFACT_REPOSITORY_PACKAGE + \".get_databricks_host_creds\",\n                        return_value=None), \\"
  },
  {
    "id" : "6e4e6fb9-31c1-4f3f-9968-d74b38719d3a",
    "prId" : 2911,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2911#pullrequestreview-428355785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01bf4bb0-d09b-41c2-8053-0064b527a789",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@arjundc-db Can we add unit tests for `log_artifact()/`log_artifacts()`, `download_artifacts()`, and `list_artifacts()` that construct a `DatabricksArtifactRepo` rooted at a subdirectory of the run artifact root (e.g., `dbfs:/databricks/mlflow-tracking/<EXP_ID>/<RUN_ID>/artifacts/my/path`) and ensure that these APIs operate on paths relative to this subdirectory? (E.g., `list_artifacts('foo')` should list artifacts at `dbfs:/databricks/mlflow-tracking/<EXP_ID>/<RUN_ID>/artifacts/my/path/foo` rather than `dbfs:/databricks/mlflow-tracking/<EXP_ID>/<RUN_ID>/artifacts/foo`)\r\n\r\nTo test this, we should be able to mock out `_upload_to_cloud`, `_call_endpoint`, and `_download_from_cloud` and ensure that they're called with the expected paths / request bodies. Let me know if this makes sense!",
        "createdAt" : "2020-06-08T21:17:05Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "bfde1dee-5696-4a9d-b66b-552332cff76c",
        "parentId" : "01bf4bb0-d09b-41c2-8053-0064b527a789",
        "authorId" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "body" : "Done",
        "createdAt" : "2020-06-10T19:16:21Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfc7f6039b20fcfa0282c13f7d30a6f07a1bc1ad",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# -*- coding: utf-8 -*-\nimport os\n"
  },
  {
    "id" : "6ba5791c-ef44-4ad0-a8ef-e36b329f976b",
    "prId" : 2911,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2911#pullrequestreview-428355825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac5fe715-f5f8-471e-90bb-e039a7b01fea",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we test that outputs are computed relative to `run_relative_artifact_repo_root_path` by invoking list on a DatabricksArtifactRepo that is rooted at a subdirectory of the run artifact root?",
        "createdAt" : "2020-06-08T21:24:01Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "fe7d800c-b255-4cb9-9313-a72ff854b53f",
        "parentId" : "ac5fe715-f5f8-471e-90bb-e039a7b01fea",
        "authorId" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "body" : "Done",
        "createdAt" : "2020-06-10T19:16:25Z",
        "updatedAt" : "2020-06-16T03:14:43Z",
        "lastEditedBy" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfc7f6039b20fcfa0282c13f7d30a6f07a1bc1ad",
    "line" : 284,
    "diffHunk" : "@@ -1,1 +282,286 @@            assert log_artifact_mock.mock_calls == expected_calls\n\n    def test_list_artifacts(self, databricks_artifact_repo):\n        list_artifact_file_proto_mock = [FileInfo(path='a.txt', is_dir=False, file_size=0)]\n        list_artifacts_dir_proto_mock = [FileInfo(path='test/a.txt', is_dir=False, file_size=100),"
  }
]