[
  {
    "id" : "fa1763bd-fd36-4cae-92f5-8174cd863afa",
    "prId" : 1775,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1775#pullrequestreview-282243098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b75b9b73-11eb-4a70-8c87-1a773a976acb",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Here we confirm that the client doesn't try to fall back to ListExperiments if it gets a RESOURCE_DOES_NOT_EXIST from the server",
        "createdAt" : "2019-08-30T20:56:05Z",
        "updatedAt" : "2019-09-13T21:31:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5b83e8e83e583120edefbe3b1251878f29bc546",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +284,288 @@                                  \"experiments/get-by-name\", \"GET\",\n                                  message_to_json(expected_message1))\n            assert mock_http.call_count == 1\n\n            # Test REST client behavior against a mocked old server, which has handler for"
  },
  {
    "id" : "0e66c320-1125-45ba-a2cd-61b614d44d05",
    "prId" : 1576,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1576#pullrequestreview-261389336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e6966f5-60a0-4d21-acab-12d0d67f4d4c",
        "parentId" : null,
        "authorId" : "95a6f570-90f1-4826-a828-d9413861f837",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-07-12T14:24:14Z",
        "updatedAt" : "2019-07-16T16:29:53Z",
        "lastEditedBy" : "95a6f570-90f1-4826-a828-d9413861f837",
        "tags" : [
        ]
      },
      {
        "id" : "4f8af488-964d-48dc-9032-83d9194ed008",
        "parentId" : "3e6966f5-60a0-4d21-acab-12d0d67f4d4c",
        "authorId" : "1c2becea-8f19-46fc-8538-c784fb7a6920",
        "body" : "Its PEP8 recommendation-Need 2 blank lines after class or function definition.\r\nMy pycharm is throwing a warning if I dont.Even mlflow/lint.sh did the same thing when I ran it before pushing the code.",
        "createdAt" : "2019-07-12T17:41:07Z",
        "updatedAt" : "2019-07-16T16:29:53Z",
        "lastEditedBy" : "1c2becea-8f19-46fc-8538-c784fb7a6920",
        "tags" : [
        ]
      }
    ],
    "commit" : "daf3ff2aca1191407caa0055109f65e815452048",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +233,237 @@            assert result.token == \"67890fghij\"\n\n\nif __name__ == '__main__':\n    unittest.main()"
  },
  {
    "id" : "b7d905e5-d118-4975-9d2b-5e6300e58348",
    "prId" : 1067,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1067#pullrequestreview-226100200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7fb256f-02e5-43e2-be87-f97cf510cb80",
        "parentId" : null,
        "authorId" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "body" : "parametrizing this file to test rest_store with both int and string experiment_ids",
        "createdAt" : "2019-04-09T22:48:44Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "tags" : [
        ]
      },
      {
        "id" : "8f6684f6-1283-40ae-948d-6100dd656702",
        "parentId" : "b7fb256f-02e5-43e2-be87-f97cf510cb80",
        "authorId" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "body" : "the edit wil have to be after the message_to_json to avoid protobuf deserialization errors",
        "createdAt" : "2019-04-09T22:49:13Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "tags" : [
        ]
      },
      {
        "id" : "10e3e0e3-0987-4cd5-8796-5883850d7269",
        "parentId" : "b7fb256f-02e5-43e2-be87-f97cf510cb80",
        "authorId" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "body" : "We will be testing against the previous rest store manually to avoid carrying over unused code into the newer versions",
        "createdAt" : "2019-04-12T14:06:35Z",
        "updatedAt" : "2019-04-19T19:48:58Z",
        "lastEditedBy" : "668ead22-45dd-4911-8926-af33e1dbaebc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb76af9d3a1fbec543c2088c62370a476ef6c598",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@    def test_response_with_unknown_fields(self, request):\n        experiment_json = {\n            \"experiment_id\": \"1\",\n            \"name\": \"My experiment\",\n            \"artifact_location\": \"foo\","
  },
  {
    "id" : "a2513336-6ebf-4097-aa31-d92ec4c8bd56",
    "prId" : 974,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/974#pullrequestreview-212708217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb59312c-d2d5-40cd-a3e1-7f7c27c48217",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "added a new test that can catch issues related to `CreateRun` protobuf handling",
        "createdAt" : "2019-03-11T08:40:09Z",
        "updatedAt" : "2019-03-11T09:01:34Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f9e683d411a1b04d317c36a5386eee86410c07b",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +102,106 @@        source_name = \"rest test\"\n\n        with mock.patch('mlflow.store.rest_store.http_request_safe') as mock_http, \\\n                mock.patch('mlflow.tracking.utils._get_store', return_value=store), \\\n                mock.patch('mlflow.tracking.client._get_user_id', return_value=user_name), \\"
  },
  {
    "id" : "fc13c330-cf29-4b50-8c19-da3e12873176",
    "prId" : 951,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/951#pullrequestreview-212666348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60103144-7e99-44b4-8e78-5c5e6d8f2386",
        "parentId" : null,
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "let's add example(s) with real batches.\r\n- a bunch of just metrics, tags and params are empty\r\n- just tags,\r\n- one tag, and a bunch of params\r\n- params and tags with the same key\r\n- metric and param batches swapped in API call, and other such error cases\r\n- ... etc\r\n\r\nideally, we should have a generic test that is super comprehensive with all these options and applied to a any backend and ensure that the behavior is as intended",
        "createdAt" : "2019-03-11T05:39:40Z",
        "updatedAt" : "2019-03-12T01:21:46Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "72433f2b324872f29f1922a66987e289efe08fc0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +137,141 @@                                  \"runs/log-metric\", \"POST\", body)\n\n        with mock.patch('mlflow.store.rest_store.http_request_safe') as mock_http:\n            metrics = [Metric(\"m1\", 0.87, 12345), Metric(\"m2\", 0.49, 12345)]\n            params = [Param(\"p1\", \"p1val\"), Param(\"p2\", \"p2val\")]"
  },
  {
    "id" : "e2b8f4c5-54ed-42ea-b747-0ca4b7517855",
    "prId" : 551,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/551#pullrequestreview-158778192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13a37c59-0adb-4a9a-9118-add0a6687e90",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "It's a little inconsistent that we rely on the `message_to_json` helper (which the `RestStore` implementation also uses) here, but actually verify the desired string values of the endpoint / HTTP method. However I think it's fair to assume the correctness of `message_to_json` so I'm fine with this (the alternative would be writing out the expected JSON string, e.g. `body = json.loads({\"run_uuid\": \"some_uuid\"...})`).",
        "createdAt" : "2018-09-25T21:54:39Z",
        "updatedAt" : "2018-09-25T21:58:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "49b5ef5c-c6df-40a6-9916-88cbe9078f0c",
        "parentId" : "13a37c59-0adb-4a9a-9118-add0a6687e90",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "we could do that. however, these test are ensuring that `RestStore` is hydrating the API  requests and responses. IMHO, it is okay to rely on `message_to_json` if we can test that method independently.",
        "createdAt" : "2018-09-25T22:59:59Z",
        "updatedAt" : "2018-09-25T22:59:59Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "071b01b2de8b3b80cbbc697a8775f15087d8bb24",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +87,91 @@        with mock.patch('mlflow.store.rest_store.http_request') as mock_http:\n            store.log_param(\"some_uuid\", Param(\"k1\", \"v1\"))\n            body = message_to_json(LogParam(run_uuid=\"some_uuid\", key=\"k1\", value=\"v1\"))\n            self._verify_requests(mock_http, creds,\n                                  \"runs/log-parameter\", \"POST\", body)"
  },
  {
    "id" : "0da30c5a-34e9-42f7-9709-4357502e353c",
    "prId" : 551,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/551#pullrequestreview-158778200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72738652-5503-4339-8d3f-94396da23a0a",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "It would be nice to also test the API endpoints that don't have an empty response, but I don't think it's critical to do so in this PR.",
        "createdAt" : "2018-09-25T21:56:50Z",
        "updatedAt" : "2018-09-25T21:58:41Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "21feea1f-f0e6-4795-9a4a-361bb7de87a2",
        "parentId" : "72738652-5503-4339-8d3f-94396da23a0a",
        "authorId" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "body" : "yes -- we can add that. but i wanted to put in some test at least and we always add more.",
        "createdAt" : "2018-09-25T23:00:01Z",
        "updatedAt" : "2018-09-25T23:00:01Z",
        "lastEditedBy" : "585a7aa0-77e3-46ce-95a0-4a8de00c6c4a",
        "tags" : [
        ]
      }
    ],
    "commit" : "071b01b2de8b3b80cbbc697a8775f15087d8bb24",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +79,83 @@        response = mock.MagicMock\n        response.status_code = 200\n        response.text = '{}'\n        request.return_value = response\n"
  },
  {
    "id" : "4ec5d1b9-4539-4d5a-90ea-62192b8bcd70",
    "prId" : 225,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/225#pullrequestreview-143293185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b39edebf-c4fc-4053-82f0-5a8bef25eb59",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Nit: remove extra line",
        "createdAt" : "2018-08-03T18:42:23Z",
        "updatedAt" : "2018-08-13T20:25:41Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c8f2dfd128669667b0ec14203e08cf732e04853",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +40,44 @@        self.assertIn(\"RESOURCE_DOES_NOT_EXIST: No experiment\", str(cm.exception))\n\n\nif __name__ == '__main__':\n    unittest.main()"
  }
]