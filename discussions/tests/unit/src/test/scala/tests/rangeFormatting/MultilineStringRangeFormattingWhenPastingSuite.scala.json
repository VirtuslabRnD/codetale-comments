[
  {
    "id" : "0794f2da-fd08-4796-afa5-493fb2dfe472",
    "prId" : 2815,
    "prUrl" : "https://github.com/scalameta/metals/pull/2815#pullrequestreview-681043392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e11c63bf-f525-48e5-8f0d-c1b743eb9fad",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "The indentation should not have changed here I think",
        "createdAt" : "2021-06-09T10:20:09Z",
        "updatedAt" : "2021-06-09T10:31:13Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "e8872ed5-eb05-42ab-9c2f-6490c9174456",
        "parentId" : "e11c63bf-f525-48e5-8f0d-c1b743eb9fad",
        "authorId" : "248f1b54-151a-4753-a615-30d680b26c7e",
        "body" : "This case is not handled by the MultilineStringFormatter, or at least it seems it's not, so the `rangeFormatter` falls back on the `IndentOnPaste` formatter that tries to indent it as normal code, and not multiline strings.",
        "createdAt" : "2021-06-09T17:08:33Z",
        "updatedAt" : "2021-06-09T17:08:33Z",
        "lastEditedBy" : "248f1b54-151a-4753-a615-30d680b26c7e",
        "tags" : [
        ]
      },
      {
        "id" : "df3a2b8a-d830-4dfa-9143-74439bffdb02",
        "parentId" : "e11c63bf-f525-48e5-8f0d-c1b743eb9fad",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Hmm... but if the code is already indented in the paste snippet, shouldn't we keep the indentation? The same as with any block that has parts of it indented.",
        "createdAt" : "2021-06-10T08:22:55Z",
        "updatedAt" : "2021-06-10T08:22:55Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "d072f9ba-06fe-479d-99bd-123ad8a6b70a",
        "parentId" : "e11c63bf-f525-48e5-8f0d-c1b743eb9fad",
        "authorId" : "248f1b54-151a-4753-a615-30d680b26c7e",
        "body" : "I haven't actually checked the `MultilineString`'s code but if the `MultilineString` formatter doesn't return an empty list, but a `None`, the formatting \"passes\" to the `IndentOnPaste` that doesn't consider \"correct\" the multiline-string formatting, or well, in this particular cases behave like this:\r\n\r\n1. finds the correct indentation for the first line\r\n2. finds the correct indentation for the second line based on the first one\r\n3. computes all other lines according to the difference between the pasted indentation and the second line\r\n\r\nIt works like this because, as already discussed, the first line can either be pasted from the beginning of the line having references the copied indentation, or be pasted already in the correct indentation level not having those references. So the computation for the difference in indentation between the pasted lines and the current file is done comparing the second line to the others.",
        "createdAt" : "2021-06-10T16:35:44Z",
        "updatedAt" : "2021-06-10T16:36:23Z",
        "lastEditedBy" : "248f1b54-151a-4753-a615-30d680b26c7e",
        "tags" : [
        ]
      },
      {
        "id" : "a832a799-3094-4834-a73c-28d867d0de31",
        "parentId" : "e11c63bf-f525-48e5-8f0d-c1b743eb9fad",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "However, in this case ` val` is indented. We could tweak the algorithm in this case to adjust the intentation on the next lines starting with the second:\r\n```\r\nnewIndentation = secondLineIndentation - firstLineIndentation + caluclatedIndetationForFirstline\r\n```\r\nOtherwise, if the second line is indented, we will always get it wrong.\r\n\r\nOr, we could special case `|` and other operators to be always indented, which would work in most cases I think",
        "createdAt" : "2021-06-10T17:07:20Z",
        "updatedAt" : "2021-06-10T17:07:20Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfeeb39ebae10a35ee2de3a32302c1bb3cb4573a",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +329,333 @@       |               |ok'''.stripMargin\n       |  val other = '''\n       |  |  some text\n       |  |'''.stripMargin\n       |}\"\"\".stripMargin"
  }
]