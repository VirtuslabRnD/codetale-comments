[
  {
    "id" : "614a6dc4-5aeb-4019-860f-e80862e952f3",
    "prId" : 2906,
    "prUrl" : "https://github.com/scalameta/metals/pull/2906#pullrequestreview-696295200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392933e0-42f8-4713-9f42-cc3bdc1d7291",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I also fixed the issue with explicit tuples.",
        "createdAt" : "2021-06-30T15:13:09Z",
        "updatedAt" : "2021-06-30T15:13:09Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "7faa64045b3e939fc981c1668a12b61d40c81893",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +417,421 @@           |  val tupleBound @ (one: String, two: String) = (\"1\", \"2\")\n           |  val tupleExplicit: (String, String) = Tuple2[String, String](\"1\", \"2\")\n           |  val tupleExplicitApply: (String, String) = Tuple2.apply[String, String](\"1\", \"2\")\n           |  var variable: Int = 123\n           |  val bcd: Int = 2"
  },
  {
    "id" : "315f8b66-db90-4429-8808-47214f03d0d8",
    "prId" : 2467,
    "prUrl" : "https://github.com/scalameta/metals/pull/2467#pullrequestreview-580574320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "773774cf-e21f-45d9-b540-0eb499d80e59",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I discovered that symbol signatures are not produced by interactive semanticdb :/",
        "createdAt" : "2021-02-01T17:53:51Z",
        "updatedAt" : "2021-02-02T12:16:15Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8e340827464a5e7151fb6e1a653072cb791a959",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +315,319 @@        client.workspaceDecorations,\n        \"\"\"|object Main{\n           |  val value = augmentString(\"asd.\").stripSuffix(\".\")\n           |}\n           |\"\"\".stripMargin"
  },
  {
    "id" : "f5d35aec-01e7-4387-8933-5bee4c1e10b4",
    "prId" : 2449,
    "prUrl" : "https://github.com/scalameta/metals/pull/2449#pullrequestreview-580301858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "715087e5-3fa5-47b6-b436-60d1a02eefea",
        "parentId" : null,
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "A minor addition.\r\n\r\nI've tried the following sample:\r\n```scala\r\nval runnable = new Runnable {\r\n  override def run(): Unit = {}\r\n}\r\n```\r\nAnd got printed type:\r\n```scala\r\nval runnable: Object with Runnable {} = new Runnable {\r\n   override def run(): Unit = {}\r\n}\r\n```\r\n\r\nProbably in this case, `Object` should be dropped in the same way as it's done for `AnyRef` in `WithType`",
        "createdAt" : "2021-02-01T09:46:00Z",
        "updatedAt" : "2021-02-01T12:26:19Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      },
      {
        "id" : "fd2db41c-5078-4223-aa8f-942fdf0a9210",
        "parentId" : "715087e5-3fa5-47b6-b436-60d1a02eefea",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Good catch, fixed it also!",
        "createdAt" : "2021-02-01T12:26:31Z",
        "updatedAt" : "2021-02-01T12:26:31Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cc143492a501a2c67de5c3930ebd2f8b9d54405",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +467,471 @@           |  val job = ec.submit(new Runnable {\n           |     override def run(): Unit = {}\n           |  })\n           |  val runnable = new Runnable {\n           |    override def run(): Unit = {}"
  },
  {
    "id" : "83b58c12-cffa-4015-a9ea-39cb71f007ef",
    "prId" : 2345,
    "prUrl" : "https://github.com/scalameta/metals/pull/2345#pullrequestreview-559188572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a038c85-9f07-4fc5-a9b2-9f8443042cfc",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "It was easier to test out this issue with standalone files, because readonly files need to be opened from a build target to be associated to a compiler instance.",
        "createdAt" : "2020-12-28T15:22:35Z",
        "updatedAt" : "2020-12-31T10:33:41Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cd2ac8f7fbab36622dcb13d1c272c4f968a361",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +296,300 @@            |}\n            |\n            |/standalone/Main.scala\n            |object Main{\n            |  \"asd.\".stripSuffix(\".\")"
  },
  {
    "id" : "62c0e037-a071-49e4-9912-2c6daf94377b",
    "prId" : 2232,
    "prUrl" : "https://github.com/scalameta/metals/pull/2232#pullrequestreview-531477495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e800688-425b-40b8-8b2f-8d6dad3e2b27",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "So this is a curious sample and I think it makes sense for to add some filters later on if people complain.\r\n\r\nLooking through metals codebase it doesn't seem too bothersome, but might be be in some cases.",
        "createdAt" : "2020-11-16T16:01:16Z",
        "updatedAt" : "2020-11-16T17:30:01Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "75ee277f-9e73-4599-8f4b-ddc117a04b0d",
        "parentId" : "6e800688-425b-40b8-8b2f-8d6dad3e2b27",
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "lol yea this example isn't awesome, at the same time, I think it's fine. If people do start to complain about it, we can think about fine tuning it.",
        "createdAt" : "2020-11-16T16:16:22Z",
        "updatedAt" : "2020-11-16T17:30:01Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d968b16f63bed12de7c49bbcbabc0559798e84e",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +269,273 @@        client.workspaceDecorations,\n        \"\"\"|object Main{\n           |  (augmentString(augmentString(augmentString(\"1\" + \"2\"))\n           |    .stripSuffix(\".\"))\n           |    .stripSuffix(\"#\"))"
  }
]