[
  {
    "id" : "d7016601-4bfb-4209-b710-9c36b4b65313",
    "prId" : 2118,
    "prUrl" : "https://github.com/scalameta/metals/pull/2118#pullrequestreview-503709953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a40b94-2c36-443d-8525-82278941fdd1",
        "parentId" : null,
        "authorId" : "572d821c-0907-48d2-9186-2a573b87a9a4",
        "body" : "I've tried to adapt this test to reflect my changes from #2123, but this test keeps failing for me even when I try to run it locally from the main branch and I can't quite figure out yet why. ðŸ¤” \r\n\r\nWhen I run `sbt unit/testOnly *DebugProtocolSuite* -- *.start*` I get the following:\r\n```diff\r\n=> Diff (- obtained, + expected)\r\n-FooBar\r\n+FooBarFoo\r\n```\r\n\r\nDo I need to do anything special with my local setup or the way those tests are run to get this test to pass?\r\n\r\nI tried running them via `bin/test.sh \"unit/testOnly *DebugProtocolSuite* -- *.start*\"` and I can see in the logs bloop being set to `v1.4.4-13` rather than `1.4.4-17` which is what you changed it to in this PR.\r\n\r\nAm I missing something obvious here? Any help or pointers would be much appreciated.\r\n\r\nedit: It appears I had a sneaky old version of bloop running in the background and killing it has made the test pass. It's a bit of a tricky and fiddly setup because you kind of need to bootstrap your dev environment using a local snapshot and make sure you have the right version of bloop running etc. to get everything working, but anyway, I got it working eventually; apologies for the noise ðŸ˜„ ",
        "createdAt" : "2020-10-07T00:34:52Z",
        "updatedAt" : "2020-10-07T00:55:37Z",
        "lastEditedBy" : "572d821c-0907-48d2-9186-2a573b87a9a4",
        "tags" : [
        ]
      },
      {
        "id" : "d1230a76-f2aa-4cce-a0aa-f253edc7d014",
        "parentId" : "e6a40b94-2c36-443d-8525-82278941fdd1",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "no worries, we should not be probably using snapshot Bloop versions. I always creates additional confusion. ",
        "createdAt" : "2020-10-07T09:51:17Z",
        "updatedAt" : "2020-10-07T09:51:17Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ffd438b874a96cbe6e7ccf11149da05daa88044",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +55,59 @@      _ <- debugger.shutdown\n      output <- debugger.allOutput\n    } yield assertNoDiff(output, \"FooBarFoo\")\n  }\n"
  },
  {
    "id" : "e773812c-bba7-49a0-bc23-329e2faaa876",
    "prId" : 1625,
    "prUrl" : "https://github.com/scalameta/metals/pull/1625#pullrequestreview-408424298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a2d874-844f-45b2-b47f-d14a53346d4d",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Status bar is actually updated concurrently, which is causing spurious errors in CI",
        "createdAt" : "2020-05-08T18:11:04Z",
        "updatedAt" : "2020-05-11T14:17:44Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7c6f9fa61606c4021d0457804114d0f344e41a8",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +310,314 @@        .recover {\n          case WorkspaceErrorsException =>\n            WorkspaceErrorsException\n        }\n    } yield assertContains("
  },
  {
    "id" : "89d4daa4-26cd-4fc9-abb7-705e7a624ec7",
    "prId" : 1625,
    "prUrl" : "https://github.com/scalameta/metals/pull/1625#pullrequestreview-409217803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a250eed5-6a23-475e-a61b-7d625ef25a43",
        "parentId" : null,
        "authorId" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "body" : "We could add an automatic test during`server.startDebugging` checking if the main class contains the `System.exit(0)` string - it would be relatively fast and straight-forward smoke test preventing recurrence of this issue.",
        "createdAt" : "2020-05-11T09:31:59Z",
        "updatedAt" : "2020-05-11T14:17:44Z",
        "lastEditedBy" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "tags" : [
        ]
      },
      {
        "id" : "14c257ef-ffd6-4824-bbbb-9be8eb60afc6",
        "parentId" : "a250eed5-6a23-475e-a61b-7d625ef25a43",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Added and it actually detected one bad test.",
        "createdAt" : "2020-05-11T14:19:50Z",
        "updatedAt" : "2020-05-11T14:19:51Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7c6f9fa61606c4021d0457804114d0f344e41a8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +11,15 @@\n// note(@tgodzik) all test have `System.exit(0)` added to avoid occasional issue due to:\n// https://stackoverflow.com/questions/2225737/error-jdwp-unable-to-get-jni-1-2-environment\nclass DebugProtocolSuite extends BaseDapSuite(\"debug-protocol\") {\n"
  },
  {
    "id" : "d5ac0307-618d-417b-a864-29e925390059",
    "prId" : 1020,
    "prUrl" : "https://github.com/scalameta/metals/pull/1020#pullrequestreview-307589626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c370222-d6b5-4d9f-8521-4b8fd08970ae",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Debug is not working - ignored",
        "createdAt" : "2019-10-27T19:15:05Z",
        "updatedAt" : "2019-10-28T15:54:32Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf83d588297229d15d4ae4ac49c6d318dae867af",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +9,13 @@import scala.concurrent.Future\n\nobject DebugProtocolSuite extends BaseLspSuite(\"debug-protocol\") {\n\n  override def testAsync("
  }
]