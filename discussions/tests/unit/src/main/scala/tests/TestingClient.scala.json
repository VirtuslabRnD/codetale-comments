[
  {
    "id" : "231a3995-b3eb-40ea-b5d2-4e583de787a2",
    "prId" : 994,
    "prUrl" : "https://github.com/scalameta/metals/pull/994#pullrequestreview-303110377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2d2b66c-b79a-4522-82ac-2f153a95444d",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Nit: Could you keep the braces consistent?",
        "createdAt" : "2019-10-17T09:12:18Z",
        "updatedAt" : "2019-10-18T19:07:35Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaf364fe67cd256af8a8f743e5008246635310ce",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +76,80 @@      case ClientCommands.RefreshModel.id =>\n        if (refreshedOnIndex) {\n          refreshModelHandler()\n        } else {\n          refreshedOnIndex = true"
  },
  {
    "id" : "3b37d459-66e3-42b6-ae7e-d0a7f95bb027",
    "prId" : 862,
    "prUrl" : "https://github.com/scalameta/metals/pull/862#pullrequestreview-273613930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81e56519-6dee-49e6-9497-613d2f608766",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I would lose the additional newlines here too.",
        "createdAt" : "2019-08-09T14:24:06Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "c99dad36-5478-416f-bda7-19cf89c6b701",
        "parentId" : "81e56519-6dee-49e6-9497-613d2f608766",
        "authorId" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "body" : "newlines are great. And here they separate the three steps of the function quite well:\r\n1. prepare the input\r\n2. apply the edit\r\n3. write the new content\r\n\r\nmaybe 1. and 2. could be aggregated into?\r\n```scala\r\n      val content = uri.toAbsolutePath.readText\r\n      val editedContent = \r\n        TextEdits.applyEdits(content, textEdits.asScala.toList)\r\n```",
        "createdAt" : "2019-08-09T19:34:24Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "tags" : [
        ]
      },
      {
        "id" : "9bfdba4d-7469-48f0-80de-9cf2ed59c548",
        "parentId" : "81e56519-6dee-49e6-9497-613d2f608766",
        "authorId" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "body" : "It doesn't work.\r\n`Illegal character in path at index 44: /home/tdudzik/Projects/metals/target/e2e/add package/single-level/a/src/main/scala/a/Main.scala` \r\n\r\nAlso, `AbsolutePath` is used two times (`readText` and `writeText`) so I think it's good idea to have the `path` value. ",
        "createdAt" : "2019-08-12T10:02:38Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "tags" : [
        ]
      },
      {
        "id" : "5bc61998-9630-4766-8970-73465fb27804",
        "parentId" : "81e56519-6dee-49e6-9497-613d2f608766",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Illegal path seems to be because of the whitespace I think.",
        "createdAt" : "2019-08-12T10:12:26Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "f3e36b8b-a009-4803-94a2-5961e9f9b388",
        "parentId" : "81e56519-6dee-49e6-9497-613d2f608766",
        "authorId" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "body" : "Yes but after fixing whitespace issue another exception is thrown `Missing scheme\r\njava.lang.IllegalArgumentException: Missing scheme`",
        "createdAt" : "2019-08-12T10:21:57Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "tags" : [
        ]
      },
      {
        "id" : "139be890-f103-4920-a48f-d7f92282b0e6",
        "parentId" : "81e56519-6dee-49e6-9497-613d2f608766",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Ok, let's jsut leave whatever works, that's jsut the testing client",
        "createdAt" : "2019-08-12T10:34:59Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +76,80 @@    def applyEdits(uri: String, textEdits: java.util.List[TextEdit]): Unit = {\n      val path = AbsolutePath(uri)\n\n      val content = path.readText\n      val editedContent ="
  },
  {
    "id" : "52e00185-c251-45ec-98b7-111d41ed6abe",
    "prId" : 862,
    "prUrl" : "https://github.com/scalameta/metals/pull/862#pullrequestreview-273608301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77da625b-773c-4a6e-b141-98bd1b19b567",
        "parentId" : null,
        "authorId" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "body" : "this does some additional magic to string uri (see [XtensionStringUriProtocol::toAbsolutePath](https://github.com/scalameta/metals/blob/7f85d79c3596721e3afe7b7443860c8582648c86/metals/src/main/scala/scala/meta/internal/metals/MetalsEnrichments.scala#L329))\r\n```suggestion\r\n      val path = uri.toAbsolutePath\r\n```",
        "createdAt" : "2019-08-09T19:33:35Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "tags" : [
        ]
      },
      {
        "id" : "e664d09d-4dc8-4621-b247-4016edf31642",
        "parentId" : "77da625b-773c-4a6e-b141-98bd1b19b567",
        "authorId" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "body" : "After this change exception is thrown: `Missing scheme java.lang.IllegalArgumentException: Missing scheme`. It seems that `uri` is actually not a valid URI. ",
        "createdAt" : "2019-08-12T10:20:34Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : "2ef4c34a-2d44-4dc1-a1b4-1185e2a45213",
        "tags" : [
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +75,79 @@  ): CompletableFuture[ApplyWorkspaceEditResponse] = {\n    def applyEdits(uri: String, textEdits: java.util.List[TextEdit]): Unit = {\n      val path = AbsolutePath(uri)\n\n      val content = path.readText"
  }
]