[
  {
    "id" : "c381a8fc-846c-4965-a285-4355bd2f3f5a",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-431635570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4692314-05c1-495f-99c6-7d5bb5ab2188",
        "parentId" : null,
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "@mik-laj this field requires a uri for a human readable documentation, how do you envision this to be supported in airflow?",
        "createdAt" : "2020-06-13T09:00:54Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "2146500b-762c-4779-83d9-51540393b990",
        "parentId" : "b4692314-05c1-495f-99c6-7d5bb5ab2188",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I do not have a specific plan yet, but I will try to prepare a reference documentation that will be generated in Swagger UI or Redoc and add links where possible. \r\nHere is issue about docs: https://github.com/apache/airflow/issues/8143",
        "createdAt" : "2020-06-16T15:34:30Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +145,149 @@            \"title\": \"Invalid Variable schema\",\n            \"status\": 400,\n            \"type\": \"about:blank\",\n            \"detail\": \"{'value': ['Missing data for required field.']}\",\n        }"
  },
  {
    "id" : "b3831134-0163-4c84-bfba-d28f31e3c2dc",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-430140731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f44a3ad-ab42-4fb4-92e6-0d71b8abbbc3",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "Would be cool to add a query that checks that a variable was added to the db",
        "createdAt" : "2020-06-13T13:49:16Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +45,49 @@        assert response.status_code == 200\n\n        response = self.client.delete(\"/api/v1/variables/delete_var1\")\n        assert response.status_code == 204\n"
  },
  {
    "id" : "10df83e2-9394-4c34-b873-fca9ce4c388d",
    "prId" : 9273,
    "prUrl" : "https://github.com/apache/airflow/pull/9273#pullrequestreview-433489922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "588a178c-a5ce-425f-bd68-f87dcba6b781",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Using self.assertEquals is helpful because it provides clearer error messages, so it's easier to find an error, but I don't require it as per the mailing list voting. I only inform.\r\nassert statement\r\n![image (1)](https://user-images.githubusercontent.com/12058428/84798264-04c6a200-affb-11ea-8212-2c0dc0470a03.png)\r\nself.assertEquals\r\n![image (2)](https://user-images.githubusercontent.com/12058428/84798293-10b26400-affb-11ea-8182-f4b52a354d47.png)\r\n![image (3)](https://user-images.githubusercontent.com/12058428/84798300-13ad5480-affb-11ea-9256-ec370f16f0ee.png)\r\n\r\n",
        "createdAt" : "2020-06-16T15:59:18Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "6eae745a-f535-474d-adb6-29c178a01b0f",
        "parentId" : "588a178c-a5ce-425f-bd68-f87dcba6b781",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "That's strange, assert always give me nested diff on errors:\r\n\r\n```\r\n        assert response.status_code == 400\r\n>       assert response.json == {\r\n            \"title\": \"Invalid post body\",\r\n            \"status\": 401,\r\n            \"type\": \"about:blank\",\r\n            \"detail\": \"key from request body doesn't match uri parameter\",\r\n        }\r\nE       AssertionError: assert {'detail': \"key from request body doesn't match uri parameter\",\\n 'status': 400,\\n 'title': 'Invalid post body',\\n 'type': 'about:blank'} == {'detail': \"key from request body doesn't match uri parameter\",\\n 'status': 401,\\n 'title': 'Invalid post body',\\n 'type': 'about:blank'}\r\nE         Common items:\r\nE         {'detail': \"key from request body doesn't match uri parameter\",\r\nE          'title': 'Invalid post body',\r\nE          'type': 'about:blank'}\r\nE         Differing items:\r\nE         {'status': 400} != {'status': 401}\r\nE         Full diff:\r\nE           {\r\nE            'detail': \"key from request body doesn't match uri parameter\",\r\nE         -  'status': 401,\r\nE         ?              ^\r\nE         +  'status': 400,\r\nE         ?              ^\r\nE            'title': 'Invalid post body',\r\nE            'type': 'about:blank',\r\nE           }\r\n\r\ntests/api_connexion/endpoints/test_variable_endpoint.py:133: AssertionError\r\n```\r\n\r\nDo you mind sharing how you ran tests? I usually just invoke `py.test  tests/api_connexion/endpoints/test_variable_endpoint.py` to run tests.",
        "createdAt" : "2020-06-17T23:45:07Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      },
      {
        "id" : "0b61d3cb-f14e-4b3d-8591-fe92071c359f",
        "parentId" : "588a178c-a5ce-425f-bd68-f87dcba6b781",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I use green button in Intelij IDEA.\r\n<img width=\"316\" alt=\"Screenshot 2020-06-18 at 03 16 39\" src=\"https://user-images.githubusercontent.com/12058428/84966589-31211200-b112-11ea-99e1-e2bd7d57523a.png\">\r\n",
        "createdAt" : "2020-06-18T01:17:58Z",
        "updatedAt" : "2020-06-18T02:20:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "63a72105-f0eb-44c9-bb59-3906d44bd1bd",
        "parentId" : "588a178c-a5ce-425f-bd68-f87dcba6b781",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "@mik-laj maybe check out this: https://stackoverflow.com/questions/50608443/how-do-i-get-pycharm-to-show-entire-error-diffs-from-pytest",
        "createdAt" : "2020-06-18T12:04:00Z",
        "updatedAt" : "2020-06-18T12:04:01Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "72901b8b-effc-41b5-af91-6581e2c59c45",
        "parentId" : "588a178c-a5ce-425f-bd68-f87dcba6b781",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "Ha I see. I have not used IDEs myself, but definitely looks like something that can be easily fixed by tweaking the IDE config. Intelij IDEA is probably using some kind of custom test runner by default. Nested diffing with assert is supported natively by upstream py.test runner.",
        "createdAt" : "2020-06-18T17:16:25Z",
        "updatedAt" : "2020-06-18T17:16:25Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "9632636cd0476ea1970465176f56c09b1382d021",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +120,124 @@        assert response.status_code == 204\n        response = self.client.get(\"/api/v1/variables/var1\")\n        assert response.json == {\n            \"key\": \"var1\",\n            \"value\": \"updated\","
  }
]