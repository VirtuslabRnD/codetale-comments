[
  {
    "id" : "c05c3d14-3d05-4776-bc57-9601faa38e1d",
    "prId" : 9045,
    "prUrl" : "https://github.com/apache/airflow/pull/9045#pullrequestreview-440193334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e805a0e4-2cb4-4ea9-b249-f1819101bf9b",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "I would suggest that we also test for default limit of 100 if no limit is supplied to the url. ",
        "createdAt" : "2020-06-30T16:33:59Z",
        "updatedAt" : "2020-07-08T11:10:45Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe863b6b02b58c11c03aec6ae477b3302d0b2a21",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +248,252 @@        self.assertEqual(expected_dag_ids, dag_ids)\n        self.assertEqual(10, response.json['total_entries'])\n\n    def test_should_response_200_default_limit(self):\n        self._create_dag_models(101)"
  },
  {
    "id" : "cfab1d3f-18a9-4016-b950-70c031e1be54",
    "prId" : 9045,
    "prUrl" : "https://github.com/apache/airflow/pull/9045#pullrequestreview-444651494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42ee050e-eded-47a7-969e-4918c1ca850f",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Do you think it would make sense to sort the response data from API?",
        "createdAt" : "2020-07-08T11:08:24Z",
        "updatedAt" : "2020-07-08T11:10:45Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "4cf5c79e-ffbe-4d9f-b969-77fe32c8cd85",
        "parentId" : "42ee050e-eded-47a7-969e-4918c1ca850f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "The data is sorted.\r\n```\r\n.order_by(DagModel.dag_id)\r\n```",
        "createdAt" : "2020-07-08T11:10:29Z",
        "updatedAt" : "2020-07-08T11:10:45Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "a2e6a58d-b4ad-4953-9080-fb6b39b0cdc6",
        "parentId" : "42ee050e-eded-47a7-969e-4918c1ca850f",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Hm, it's interesting that `TEST_DAG_10` is before `TEST_DAG_2` as it's a longer name ðŸ¤” ",
        "createdAt" : "2020-07-08T11:17:36Z",
        "updatedAt" : "2020-07-08T11:17:36Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "90fb796c-6119-40e6-9145-aca1e5aa9a8e",
        "parentId" : "42ee050e-eded-47a7-969e-4918c1ca850f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Sorting numbers in strings is always tricky. ;-) ",
        "createdAt" : "2020-07-08T11:26:28Z",
        "updatedAt" : "2020-07-08T11:26:28Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe863b6b02b58c11c03aec6ae477b3302d0b2a21",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +223,227 @@                    \"TEST_DAG_10\",\n                    \"TEST_DAG_2\",\n                    \"TEST_DAG_3\",\n                    \"TEST_DAG_4\",\n                    \"TEST_DAG_5\","
  },
  {
    "id" : "afbd75d3-eb62-45f6-8b4d-b5cbff5f2628",
    "prId" : 14306,
    "prUrl" : "https://github.com/apache/airflow/pull/14306#pullrequestreview-594344091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "215b19dd-ea04-4621-a5d2-474543b4d1a5",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "is_active should never be None .",
        "createdAt" : "2021-02-19T15:51:47Z",
        "updatedAt" : "2021-05-08T18:11:09Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "702905d6-7180-4ca0-871d-f2c64b1f29c3",
        "parentId" : "215b19dd-ea04-4621-a5d2-474543b4d1a5",
        "authorId" : "50a23f60-50f7-4dc8-9e9f-213bf010d57f",
        "body" : "I think that in this case the DAG object hasn't been sync'd to the DB, which is why it returns None (the same happens with `is_paused` here, which should also never be None). \r\n\r\nFrom my understanding it should never be None in the real world, but in the current testing set up this makes sense?",
        "createdAt" : "2021-02-19T16:16:59Z",
        "updatedAt" : "2021-05-08T18:11:09Z",
        "lastEditedBy" : "50a23f60-50f7-4dc8-9e9f-213bf010d57f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a331f554f65a26b85723a2196d38f625ed7704e9",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +297,301 @@            \"file_token\": FILE_TOKEN,\n            \"is_paused\": None,\n            \"is_active\": None,\n            \"is_subdag\": False,\n            \"orientation\": \"LR\","
  },
  {
    "id" : "81cc9e07-827e-442a-af0f-4727fba2c316",
    "prId" : 16318,
    "prUrl" : "https://github.com/apache/airflow/pull/16318#pullrequestreview-679374711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e881992f-dae3-4f99-825f-677dfca007ca",
        "parentId" : null,
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "How about you add a query that asserts that the number of dags in DagModel is  3",
        "createdAt" : "2021-06-08T18:44:40Z",
        "updatedAt" : "2021-06-08T18:44:40Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      },
      {
        "id" : "f080ba91-b8a3-49d8-8050-0aea068fe242",
        "parentId" : "e881992f-dae3-4f99-825f-677dfca007ca",
        "authorId" : "81d0f378-1cf7-4583-9606-22cbd4acadbb",
        "body" : "Number of DAGs in DagModel should exclude inactive DAGs, as far as I understand. In my opinion are inactive DAGs `.trash` and play no significant role.",
        "createdAt" : "2021-06-08T18:55:41Z",
        "updatedAt" : "2021-06-08T18:55:42Z",
        "lastEditedBy" : "81d0f378-1cf7-4583-9606-22cbd4acadbb",
        "tags" : [
        ]
      },
      {
        "id" : "230e792f-cf4e-492c-9f55-df4eaa9a409d",
        "parentId" : "e881992f-dae3-4f99-825f-677dfca007ca",
        "authorId" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "body" : "I know but how are we sure that an inactive dag exists here? Do we have a test for the new method you created? I think that querying DagModel and asserting that it has 3 dags(both active and inactive) at this point will help to know that the method you created works fine. If there's an alteration in the method in the future to work another way, it'll be noticed. What do you think? ",
        "createdAt" : "2021-06-09T08:42:14Z",
        "updatedAt" : "2021-06-09T08:42:14Z",
        "lastEditedBy" : "c7b0cb1c-ff95-4ec9-a0c6-a9f1b5135a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbbb66f1003dd44e93d32cdcb0eb053fb546fbec",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +400,404 @@    def test_should_respond_200(self, session):\n        self._create_dag_models(2)\n        self._create_deactivated_dag()\n\n        dags_query = session.query(DagModel).filter(~DagModel.is_subdag)"
  }
]