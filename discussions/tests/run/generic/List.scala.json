[
  {
    "id" : "f0dd55cd-8449-4cf3-805a-a512441f990c",
    "prId" : 1918,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1918#pullrequestreview-20654066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2795de2-a35f-4769-9250-2bc6e1688e1d",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "@odersky Am I right in thinking that you'd like the `XXXShape` implicits to be derived by macros?",
        "createdAt" : "2017-02-04T00:59:27Z",
        "updatedAt" : "2017-02-08T08:36:15Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "03e7508b-3bc4-4756-9a43-3c82efcf9c7e",
        "parentId" : "a2795de2-a35f-4769-9250-2bc6e1688e1d",
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "And, in general, which parts of the `enum` proposal do you see implementable as macros, and what you'd like to hardcode in the compiler?",
        "createdAt" : "2017-02-04T01:00:14Z",
        "updatedAt" : "2017-02-08T08:36:15Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "fe6ab517-9cbd-40d5-8e09-20a878e3b02c",
        "parentId" : "a2795de2-a35f-4769-9250-2bc6e1688e1d",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "@xeno-by The `XXXShape` implicits can be done by the compiler. The part I need from macros are the implicits in Test.scala.",
        "createdAt" : "2017-02-08T00:04:15Z",
        "updatedAt" : "2017-02-08T08:36:15Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "56d32fa7bd548870c8382824fe748c5c5fde1d27",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@        def toShape(x: Cons[T]) = Prod(x.hd, x.tl)\n        def fromShape(p: Prod[T, List0[T]]) = new Cons(p.fst, p.snd) {}\n      }\n  }\n"
  },
  {
    "id" : "d8ec197e-e1fa-4d4b-a37e-ab9a87f0a97c",
    "prId" : 1918,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1918#pullrequestreview-20654243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83579330-2657-42c6-9035-b121cc1088da",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "Is the variance modifier omitted here on purpose?",
        "createdAt" : "2017-02-04T01:00:47Z",
        "updatedAt" : "2017-02-08T08:36:15Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "1dbdfe3d-e557-47ea-a743-fcc2f4af0e14",
        "parentId" : "83579330-2657-42c6-9035-b121cc1088da",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "There are actually two sources, one without variance for List0, the other with variance for List1. ",
        "createdAt" : "2017-02-08T00:05:29Z",
        "updatedAt" : "2017-02-08T08:36:15Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "56d32fa7bd548870c8382824fe748c5c5fde1d27",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@}\n\n/** enum List[T] {\n *    case Cons(x: T, xs: List[T])\n *    case Nil extends List[Nothing]"
  }
]