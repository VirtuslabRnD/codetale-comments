[
  {
    "id" : "81b9e10c-6957-4409-b368-6bdbb457366e",
    "prId" : 10938,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10938#pullrequestreview-560003943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e24c2a9-c6d4-4099-98b6-297037c535f1",
        "parentId" : null,
        "authorId" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "body" : "It's nice that `Singleton` helps inference here, the following compiles as expected:\r\n\r\n```scala\r\nnot(True): False.type\r\n```\r\n\r\nAlthough it's a bit fragile:\r\n\r\n```scala\r\nval vrais = True\r\nnot(vrais): False.type // error, we lost the singleton type...\r\n```",
        "createdAt" : "2020-12-30T07:19:37Z",
        "updatedAt" : "2020-12-30T13:26:04Z",
        "lastEditedBy" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "tags" : [
        ]
      },
      {
        "id" : "8c894eed-ae3d-4ea5-bb00-6db22b987c1f",
        "parentId" : "8e24c2a9-c6d4-4099-98b6-297037c535f1",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "yeah its true with enums a user must do a lot of work to avoid the widening but thats something hopefully we can tune based on feedback without ruining bincompat",
        "createdAt" : "2020-12-30T11:07:26Z",
        "updatedAt" : "2020-12-30T13:26:04Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0aeefc327eddf361b3aeb2d1298feca0bd8d174",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@}\n\ndef not[B <: Bool & Singleton](b: B): Not[B] = b match {\n  case b: True.type => False\n  case b: False.type => True"
  }
]