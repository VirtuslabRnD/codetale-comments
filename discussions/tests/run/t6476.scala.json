[
  {
    "id" : "9c4fcb9f-2dca-49d2-b141-8bdc8b7dd32c",
    "prId" : 11751,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11751#pullrequestreview-618353379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a62036d4-5d4a-4858-bd7d-bb9a1fa8b514",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It looks like this one was wrongly interpreted as `\\\"` instead of `\"`. The check file differs with the one in Scala 2.",
        "createdAt" : "2021-03-23T08:48:54Z",
        "updatedAt" : "2021-03-23T08:52:59Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "7dbefc7f-bbcb-4c53-a8c5-8ad84f0ca25c",
        "parentId" : "a62036d4-5d4a-4858-bd7d-bb9a1fa8b514",
        "authorId" : "998ba0f7-d6a6-448f-a3ba-0d2237ed0cf9",
        "body" : "I filed https://github.com/lampepfl/dotty/issues/11750 about that",
        "createdAt" : "2021-03-23T09:11:49Z",
        "updatedAt" : "2021-03-23T09:11:50Z",
        "lastEditedBy" : "998ba0f7-d6a6-448f-a3ba-0d2237ed0cf9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e757f26af046e439e3a19ae9aa3a41d282595460",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@    println(s\"\"\"\\\"Hello\\\", $person\"\"\")\n\n    println(f\"\\\"Hello\\\", $person\")\n    println(f\"\"\"\\\"Hello\\\", $person\"\"\")\n"
  },
  {
    "id" : "f2ae2530-794b-4a60-a3ce-5af454c1a85f",
    "prId" : 11751,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11751#pullrequestreview-618366137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb9448ce-69bd-40ac-9dd1-483887e19152",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Questions: Now that we have `$\"` as way to escape `\"` in any string interpolator, do we really need to special case `\\\"` in raw interpolators? Cant we just assume that `raw\"\\\"` is `\"\\\"`? How can we end with a `\\` in a `raw` now?",
        "createdAt" : "2021-03-23T08:52:53Z",
        "updatedAt" : "2021-03-23T08:52:59Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "a2edc088-c586-4f4e-bfda-8d53e32f8417",
        "parentId" : "cb9448ce-69bd-40ac-9dd1-483887e19152",
        "authorId" : "998ba0f7-d6a6-448f-a3ba-0d2237ed0cf9",
        "body" : "> do we really need to special case `\\\"` in raw interpolators?\r\n\r\nMaybe I misunderstand, but there's no special case or change in the `raw` interpolator. The change here is that `\\\"` no longer closes the string literal, but the interpretation of `\\\"` is unchanged (`raw\"\"\"\\\"\"\"\"` and `s\"\"\"\\\"\"\"\"` are the same as before).\r\n\r\nIn my opinion we should do this change change and fix https://github.com/scala/bug/issues/6476, even if we have `$\"` now. This issue affected a lot of people, and will keep affecting a lot of people in the future, especially beginners (https://stackoverflow.com/questions/21086263/how-to-insert-double-quotes-into-string-with-interpolation-in-scala).\r\n\r\nSee also the (updated) PR description of https://github.com/scala/scala/pull/8830#issue-394463165.\r\n\r\n> Cant we just assume that `raw\"\\\"` is `\"\\\"`?\r\n\r\nI'm not sure what you mean by that.\r\n\r\n> How can we end with a `\\` in a `raw` now?\r\n\r\nUsing triple-quote. The 2.13 compiler will even tell you that:\r\n\r\n```scala\r\nscala> raw\"c:\\\"\r\n           ^\r\n       error: unclosed string literal; note that `\\\"` no longer closes single-quoted interpolated string literals since 2.13.6, you can use a triple-quoted string instead\r\n```\r\n\r\nIf desired, I can include this message in Scala 3 as well.\r\n",
        "createdAt" : "2021-03-23T09:25:13Z",
        "updatedAt" : "2021-03-23T09:25:13Z",
        "lastEditedBy" : "998ba0f7-d6a6-448f-a3ba-0d2237ed0cf9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e757f26af046e439e3a19ae9aa3a41d282595460",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@    println(f\"\"\"\\\"Hello\\\", $person\"\"\")\n\n    println(raw\"\\\"Hello\\\", $person\")\n    println(raw\"\"\"\\\"Hello\\\", $person\"\"\")\n"
  }
]