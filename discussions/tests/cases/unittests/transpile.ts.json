[
  {
    "id" : "8dd9734c-34b3-4cd1-a93e-f38e6c5b485c",
    "prId" : 8988,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23fd383a-38f6-418e-bbbd-bb67a01a9928",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "can you also add a test for the out-of-range error you generate.\n",
        "createdAt" : "2016-06-06T20:16:04Z",
        "updatedAt" : "2016-06-09T15:23:37Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "385036a2-dc1a-4492-be3c-fa0a6c4769f2",
        "parentId" : "23fd383a-38f6-418e-bbbd-bb67a01a9928",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "something like `<ModuleKind>120`\n",
        "createdAt" : "2016-06-08T20:39:28Z",
        "updatedAt" : "2016-06-09T15:23:37Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ef9b743d10e26d0eda593a086b7516c82774e3c",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +319,323 @@            });\n\n            it(\"Fails on bad value\", () => {\n                for (const value in [123, {}, \"\"]) {\n                    test(``, {"
  },
  {
    "id" : "18413892-ce9a-4ce9-a19a-ae33a5e2e5c0",
    "prId" : 3274,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61359f21-9b26-4adc-9bf0-8968bcae74aa",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "When this fails what do we see? Also just use a string literal here.\n",
        "createdAt" : "2015-06-02T22:24:03Z",
        "updatedAt" : "2015-06-03T01:04:51Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "a675f519-2faa-4e14-9ff7-b04445fcf8f1",
        "parentId" : "61359f21-9b26-4adc-9bf0-8968bcae74aa",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "it shows a message and the two codes.. not sure i see what else to put in htere..\n",
        "createdAt" : "2015-06-02T22:25:37Z",
        "updatedAt" : "2015-06-03T01:04:51Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "1be41c15-ee49-4201-9bb5-b6e0edb34287",
        "parentId" : "61359f21-9b26-4adc-9bf0-8968bcae74aa",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "I'd rather you checked the sizes instead of `diagnostics[i] &&`, and that you always print out the entire results if something is wrong.\n",
        "createdAt" : "2015-06-02T22:27:04Z",
        "updatedAt" : "2015-06-03T01:04:51Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "c8207a75-5afd-45e8-816b-d37bbfc9bbae",
        "parentId" : "61359f21-9b26-4adc-9bf0-8968bcae74aa",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "size is checked in the next line.\n",
        "createdAt" : "2015-06-03T01:02:06Z",
        "updatedAt" : "2015-06-03T01:04:51Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "6902b050ca9cb94ba494d0900ad48a0780850ef4",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@\n            for (let i = 0; i < expectedDiagnosticCodes.length; i++) {\n                assert.equal(expectedDiagnosticCodes[i], diagnostics[i] && diagnostics[i].code, `Could not find expeced diagnostic.`);\n            }\n            assert.equal(diagnostics.length, expectedDiagnosticCodes.length, \"Resuting diagnostics count does not match expected\");"
  }
]