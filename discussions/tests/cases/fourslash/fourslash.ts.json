[
  {
    "id" : "76cd9c5f-0f1b-45f6-8512-a2cade61eae3",
    "prId" : 23591,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/23591#pullrequestreview-117088679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "910ae6f4-0c69-44f5-8aea-5b793091144e",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Personally, I find it confusing that \"Many\" might be mean \"one\".  I might have called it \"OneOrMore\".",
        "createdAt" : "2018-05-02T21:50:36Z",
        "updatedAt" : "2018-05-02T21:59:03Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "364cc8d4-06be-4783-8463-ffe760946318",
        "parentId" : "910ae6f4-0c69-44f5-8aea-5b793091144e",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "It could be 0 though... this is just a slightly less verbose way of writing an array. How about `ArrayOrSingle`?",
        "createdAt" : "2018-05-02T22:05:17Z",
        "updatedAt" : "2018-05-02T22:05:17Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "1ef840c7-806b-4473-9d50-04c153c9611e",
        "parentId" : "910ae6f4-0c69-44f5-8aea-5b793091144e",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "In that case, I guess I'm not sure I understand why we're not just using an array.",
        "createdAt" : "2018-05-02T22:08:15Z",
        "updatedAt" : "2018-05-02T22:08:15Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "f5db8b20-4ec2-47e3-b5bb-402513f55fe9",
        "parentId" : "910ae6f4-0c69-44f5-8aea-5b793091144e",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "In many places (such as `at`) there's usually only one element, so it saves a lot of typing. This type  is usually converted using `toArray`.",
        "createdAt" : "2018-05-02T22:11:09Z",
        "updatedAt" : "2018-05-02T22:11:10Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "ed830326-5125-4bbf-a226-068725417bbe",
        "parentId" : "910ae6f4-0c69-44f5-8aea-5b793091144e",
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "Oh, I didn't think about the call site.  In Roslyn, we had something similar, but it was a way to avoid allocating the array, which didn't seem to be (and isn't) a concern here.  Yeah, I like `ArrayOrSingle`.",
        "createdAt" : "2018-05-02T22:15:19Z",
        "updatedAt" : "2018-05-02T22:15:19Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      }
    ],
    "commit" : "96e90dd98907c52680e8e1696fd2829ee85a0296",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +563,567 @@    };\n\n    type Many<T> = T | ReadonlyArray<T>;\n}\ndeclare function verifyOperationIsCancelled(f: any): void;"
  },
  {
    "id" : "81cca69d-e68a-4bbd-970a-ed950892337b",
    "prId" : 5697,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b42bbb4a-40bf-4ed4-824d-1b4135560b0f",
        "parentId" : null,
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "namespace instead of module?\n",
        "createdAt" : "2015-11-17T01:04:36Z",
        "updatedAt" : "2015-11-17T01:04:36Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      },
      {
        "id" : "dfca53e8-52ea-4b24-aa1c-0ce300fbcc36",
        "parentId" : "b42bbb4a-40bf-4ed4-824d-1b4135560b0f",
        "authorId" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "body" : "it should be, but I decided to delete it instead :) nobody was using it anymore\n",
        "createdAt" : "2015-11-17T01:17:21Z",
        "updatedAt" : "2015-11-17T01:17:21Z",
        "lastEditedBy" : "ebe500ea-e2a7-4d57-a65b-c50e7640b049",
        "tags" : [
        ]
      }
    ],
    "commit" : "31bce223d98ed976542c4d2cd654618f10cdfb9c",
    "line" : 937,
    "diffHunk" : "@@ -1,1 +332,336 @@    }\n}\ndeclare module fs {\n    var test: FourSlashInterface.test_;\n    var goTo: FourSlashInterface.goTo;"
  },
  {
    "id" : "896e575f-78be-4277-8053-6744d5f010d8",
    "prId" : 817,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f97badc-f437-4907-a039-9879b3bec448",
        "parentId" : null,
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "if this is to fix a rename issue, then why not call one of the existing rename test functions?\n",
        "createdAt" : "2014-10-03T22:38:47Z",
        "updatedAt" : "2014-10-06T18:30:16Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      },
      {
        "id" : "b15813cb-7248-42d6-bb7f-9485bd39c928",
        "parentId" : "5f97badc-f437-4907-a039-9879b3bec448",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Because getDefinitionsAtPosition is used to get what to rename and not the existing rename api.\n",
        "createdAt" : "2014-10-03T22:48:53Z",
        "updatedAt" : "2014-10-06T18:30:16Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "37214ba8-ffe0-488a-8064-b448e3927d19",
        "parentId" : "5f97badc-f437-4907-a039-9879b3bec448",
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "But you're testing the rename feature.  This is data exposed by that API, and we should be testing that that doesn't break.  \n\nFor example, say rename _stops_ using getDefinition under the covers.  That could break this functionality, but there woudl be no test to catch it.\n",
        "createdAt" : "2014-10-04T00:32:35Z",
        "updatedAt" : "2014-10-06T18:30:16Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      },
      {
        "id" : "fca569f1-b94c-420d-b36b-205145994b30",
        "parentId" : "5f97badc-f437-4907-a039-9879b3bec448",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Makes sense, will add test case there. Do we actually use rename api?\n",
        "createdAt" : "2014-10-04T01:38:47Z",
        "updatedAt" : "2014-10-06T18:30:16Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "f691ab96-6106-4352-953b-9939b7af4646",
        "parentId" : "5f97badc-f437-4907-a039-9879b3bec448",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "Not in vs2013\n",
        "createdAt" : "2014-10-04T06:23:35Z",
        "updatedAt" : "2014-10-06T18:30:16Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "61f776b8f42ab7f99d62924d3146d3385c043877",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +239,243 @@        }\n\n        public verifyDefinitionsName(name: string, containerName: string) {\n            FourSlash.currentTestState.verifyDefinitionsName(this.negative, name, containerName);\n        }"
  },
  {
    "id" : "002e74c2-fbb3-42c6-a88d-60bacdfa6477",
    "prId" : 650,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71abaa9d-8257-4acd-ae7f-c6fbca5ddca3",
        "parentId" : null,
        "authorId" : "062f3bee-c17a-4517-ad46-ba1c73ac0962",
        "body" : "do we need to reimplement this enum from the compiler or can we just re-use that one? Harness might want to use this down the line\n",
        "createdAt" : "2014-09-11T00:02:00Z",
        "updatedAt" : "2014-09-17T00:41:31Z",
        "lastEditedBy" : "062f3bee-c17a-4517-ad46-ba1c73ac0962",
        "tags" : [
        ]
      },
      {
        "id" : "50c20046-4677-4dfb-9d73-a7aa4af6a9bc",
        "parentId" : "71abaa9d-8257-4acd-ae7f-c6fbca5ddca3",
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "Yes. Since the enum used by the languageServices is declared in types.ts.. We have to re-declare it here to prevent exposing the entire types.ts of compiler to fourslash of testcases\n",
        "createdAt" : "2014-09-11T17:34:16Z",
        "updatedAt" : "2014-09-17T00:41:31Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ee63fa21d6ad32072e797e0da72e6387b545075",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +54,58 @@    EmitErrorsEncountered = 4           // Emitter errors occurred during emitting process\n}\n\nmodule FourSlashInterface {\n    declare var FourSlash;"
  }
]