[
  {
    "id" : "7c913d49-5723-4be6-9fed-f18c13f1a4ad",
    "prId" : 32382,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/32382#pullrequestreview-261834283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aca1411d-bfa5-4a87-b81b-87977e8c50b7",
        "parentId" : null,
        "authorId" : "81221bf0-3534-445b-965c-c50cbee13866",
        "body" : "Sorry for the noob question: does `\"T\"` and `\"x\"` stand for \"Type\" and \"Value\" respectively? I'm trying to understand a little bit of the code by checking some PR's (yours is pretty cool!)",
        "createdAt" : "2019-07-15T13:30:26Z",
        "updatedAt" : "2019-07-15T13:30:26Z",
        "lastEditedBy" : "81221bf0-3534-445b-965c-c50cbee13866",
        "tags" : [
        ]
      },
      {
        "id" : "b4b91929-a2c1-4482-97d7-bf4c55af050b",
        "parentId" : "aca1411d-bfa5-4a87-b81b-87977e8c50b7",
        "authorId" : "ab15ed9e-363f-447f-850d-c2bd363aebf4",
        "body" : "@diguifi They do not intrinsically stand for type and value. In this test they are used as stand-ins  for  type and value, but only because they are defined as such above:\r\n```ts\r\n////const x = 0;\r\n////type T = number;\r\n```",
        "createdAt" : "2019-07-15T13:52:48Z",
        "updatedAt" : "2019-07-15T13:53:15Z",
        "lastEditedBy" : "ab15ed9e-363f-447f-850d-c2bd363aebf4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba79b5ffacec89ee79219eb6de5e35b90a0bf537",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +22,26 @@for (const marker of test.markers()) {\n    if (marker.data && marker.data.typeOnly) {\n        verify.completions({ marker, includes: \"T\", excludes: \"x\" });\n    }\n    else if (marker.data && marker.data.valueOnly) {"
  }
]