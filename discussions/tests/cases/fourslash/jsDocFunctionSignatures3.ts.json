[
  {
    "id" : "0f62945d-5bdc-4834-8eb2-64285dd5e0b5",
    "prId" : 6870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb6d03c0-fa0c-443b-ad37-cc27a5a30801",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Nit: instead of checking the member list which is dependent on the apparent type (and which can potentially be affected by various usages of identifiers), I think it's generally a better idea to stick with the quick info since that will tell you precisely the type you're using.\n",
        "createdAt" : "2016-02-03T08:34:00Z",
        "updatedAt" : "2016-02-03T08:45:00Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "723add72-a07c-44ba-8261-befc021d062c",
        "parentId" : "cb6d03c0-fa0c-443b-ad37-cc27a5a30801",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "Is there a method for just saying \"I expect this to be `string` ?\" I don't want to write out the entire quickinfo signature in every test (laziness)\n",
        "createdAt" : "2016-02-03T08:41:30Z",
        "updatedAt" : "2016-02-03T08:45:00Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "ab459817-da77-47da-99cb-0a48c6fb53a9",
        "parentId" : "cb6d03c0-fa0c-443b-ad37-cc27a5a30801",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "[We have something for that nowadays.](https://en.wikipedia.org/wiki/Cut,_copy,_and_paste) :wink: \n",
        "createdAt" : "2016-02-03T18:28:24Z",
        "updatedAt" : "2016-02-03T18:28:24Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c7062313d2dde764ea7f7d20f2415b02d8d6fbb",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@goTo.marker('2');\nedit.insert('.');\nverify.memberListContains('toFixed', undefined, undefined, 'method');\nedit.backspace();"
  }
]