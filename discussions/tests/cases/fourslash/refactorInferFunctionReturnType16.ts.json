[
  {
    "id" : "4189aa74-07b9-4109-bb4d-a2d2c4b8588e",
    "prId" : 42737,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42737#pullrequestreview-588324518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95366570-7906-48c8-8104-a937ee7add2b",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Can we have a few tests (you can reuse these files) for positions rather than ranges?",
        "createdAt" : "2021-02-10T20:34:10Z",
        "updatedAt" : "2021-02-11T08:36:50Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "f8599c82-c754-4aff-bf11-129ee2b97197",
        "parentId" : "95366570-7906-48c8-8104-a937ee7add2b",
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "Do you mean 1 selection range per file? or like so\r\n\r\n```ts\r\n////function /*a*/f1()/*b*/ {\r\n////    return { x: 1, y: 1 };\r\n////}\r\n\r\n////function f2/*c*/()/*d*/ {\r\n////    return { x: 1, y: 1 };\r\n////}\r\n\r\n////function f3() /*e*/{\r\n////    return { x: 1, y: 1 };\r\n////}/*f*/\r\n\r\n////function f4() {\r\n////    /*g*/return { x: 1, y: 1 };/*h*/\r\n////}\r\n```\r\n",
        "createdAt" : "2021-02-10T20:36:14Z",
        "updatedAt" : "2021-02-11T08:36:50Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      },
      {
        "id" : "e1c3e440-030f-4bdf-9881-3619cdd5eb3c",
        "parentId" : "95366570-7906-48c8-8104-a937ee7add2b",
        "authorId" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "body" : "You can use zero width spans for checking if the refactor is offered when the cursor is at a position but no span is selected,\r\n\r\n```ts\r\n////function f1(/*a*//*b*/x, y) {\r\n////    return x + y;\r\n////}\r\n```\r\n\r\nThere are some verifiers for trigger reason if you want different behavior when `ctrl` + `shift` + `r` is invoked, but I don't think there is a case for that here (maybe on the return statement?)\r\n`verify.not.refactorAvailableForTriggerReason(\"implicit\", Infer function return type);`\r\n`verify.refactorAvailableForTriggerReason(\"invoked\", Infer function return type);`\r\n\r\n",
        "createdAt" : "2021-02-10T21:04:42Z",
        "updatedAt" : "2021-02-11T08:36:50Z",
        "lastEditedBy" : "bb7feee5-7089-4110-a20e-a163a6be1501",
        "tags" : [
        ]
      },
      {
        "id" : "06300d83-976b-4a1e-bc5f-79da59ac8388",
        "parentId" : "95366570-7906-48c8-8104-a937ee7add2b",
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "@jessetrinity Thanks for the detailed clarification. ;), I didn't know about it.",
        "createdAt" : "2021-02-11T08:29:40Z",
        "updatedAt" : "2021-02-11T08:36:50Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3888805b04eb20125a559cc363314893a5d23901",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@////}\n\ngoTo.select(\"a\", \"b\");\nverify.refactorAvailable(\"Infer function return type\");\n"
  }
]