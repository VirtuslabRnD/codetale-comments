[
  {
    "id" : "1d9a06a7-2b39-4e2d-9ee0-4a47db285bd1",
    "prId" : 41089,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41089#pullrequestreview-518406023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "401a0aa0-8655-440d-be57-1860d1dcfd70",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "tryGetPropertyName produces a property name for other template strings with substitutions, right? If so, we need a test for that.",
        "createdAt" : "2020-10-27T18:09:26Z",
        "updatedAt" : "2020-10-27T18:20:30Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "c7b0a84d-da3e-47ae-94fa-eb84174a3550",
        "parentId" : "401a0aa0-8655-440d-be57-1860d1dcfd70",
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "Do you mean `${x}${y}`?",
        "createdAt" : "2020-10-27T18:18:30Z",
        "updatedAt" : "2020-10-27T18:20:30Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      },
      {
        "id" : "9053d543-5590-4a4c-879c-8caafc995aeb",
        "parentId" : "401a0aa0-8655-440d-be57-1860d1dcfd70",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Yes.",
        "createdAt" : "2020-10-27T22:58:18Z",
        "updatedAt" : "2020-10-27T22:58:18Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "24ab7b1b-1b46-493f-9f08-2d426c2c4535",
        "parentId" : "401a0aa0-8655-440d-be57-1860d1dcfd70",
        "authorId" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "body" : "@sandersn `tryGetPropertyName` doesn't handle `TemplateExpression` (``${x}``), only `NoSubstitutionTemplateLiteral` (``). There are several reasons why I omitted `TemplateExpression`:\r\n1. `TemplateExpression` is not a valid property/method name, so need to convert `TemplateExpression` to `StringLiteral` like `[\"text\" + x + \"text\"]() {}`\r\n2. `TemplateExpression` is not included in `symbol.members` ```(`Foo.prototype[`${1}`] = function () {}```, so there are no members to convert\r\n3. Not sure that using expressions as a property/method name is very common.\r\n4. I added handling `NoSubstitutionTemplateLiteral` because it is part of `StringLike`, it is absolutely valid to use ```Foo.prototype[`a b`] = function () {}``` and get method `static \"a b\"() {}`.\r\n\r\nDoes that make sense?",
        "createdAt" : "2020-10-28T08:09:37Z",
        "updatedAt" : "2020-10-28T08:09:37Z",
        "lastEditedBy" : "abcb489c-ecaa-43d7-a864-2305b3feb38c",
        "tags" : [
        ]
      }
    ],
    "commit" : "00424fefaa5362871a6f391ca2119dabdb1fc06c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@////    this.a = 0;\n////}\n////Foo[`a b c`] = function () {\n////}\n"
  }
]