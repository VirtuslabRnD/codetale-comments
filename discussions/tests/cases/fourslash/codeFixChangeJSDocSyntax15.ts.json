[
  {
    "id" : "e40b0af2-ec83-43c3-bf6b-e5d5cec3d3a7",
    "prId" : 37444,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37444#pullrequestreview-378741720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4c7050d-dd0d-4996-9a2b-736ac4af47dd",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Given the original was `function(number?): number` shouldnt this be `(arg0?: number) => number`\r\ni guess seeing `null` is bad as `undefined` is what people without --strict would think of?",
        "createdAt" : "2020-03-20T18:52:01Z",
        "updatedAt" : "2020-04-01T22:47:26Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "e9b52972-2cc8-485b-8642-9f0cdb2bb1de",
        "parentId" : "e4c7050d-dd0d-4996-9a2b-736ac4af47dd",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "jsdoc `?` means `| null`, jsdoc `=` means `| undefined` (affecting arity if in trailing argument). I know, confusing, but we get it right internally. It didn't include the `| null` before because rather than using the existing node tree, it was using the semantic type, which _didn't_ include `null` because `strictNullChecks` wasn't on. This is pretty much strictly an improvement, as we now retain more information from the original annotation.",
        "createdAt" : "2020-03-20T19:01:12Z",
        "updatedAt" : "2020-04-01T22:47:26Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ccb13613cc95e5a79f6e561eab1f1c0b335aa24",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +6,10 @@    errorCode: 8020,\n    index: 0,\n    newRangeContent: \"(arg0: number | null) => number\",\n});"
  }
]