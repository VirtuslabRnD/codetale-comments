[
  {
    "id" : "2ad69167-93e6-404c-b291-5ffa751fce57",
    "prId" : 42029,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42029#pullrequestreview-561271361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15f2b9cd-4679-441b-998f-04902f2ecce9",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "```suggestion\r\n//// var x10 = <Exp.M.SFCComp></      [|Exp./*10*/M.Foo.Bar.Baz.Wut|]>;\r\n```\r\n\r\nThis is the failing test case due to fixed expression depth. Where it is now, `location` is actually the `/` token.",
        "createdAt" : "2020-12-31T21:06:54Z",
        "updatedAt" : "2021-01-04T20:20:19Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "779117d4-63b6-4ba7-8fac-3acc3ba1c185",
        "parentId" : "15f2b9cd-4679-441b-998f-04902f2ecce9",
        "authorId" : "b4616077-7f3f-4889-8dce-244af46520c7",
        "body" : "I see so if completion was asked at mid expression it will be a the full closing tag with a replacement span of both sides. I’ll update the PR asap",
        "createdAt" : "2020-12-31T21:12:02Z",
        "updatedAt" : "2021-01-04T20:20:19Z",
        "lastEditedBy" : "b4616077-7f3f-4889-8dce-244af46520c7",
        "tags" : [
        ]
      },
      {
        "id" : "28eff041-a43a-4d26-a50a-f75f007fb8ba",
        "parentId" : "15f2b9cd-4679-441b-998f-04902f2ecce9",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Yeah, `location` could be anywhere in the tag name expression so you need to walk up until you either find the whole `tagName` or realize you’re not in one.",
        "createdAt" : "2020-12-31T21:14:15Z",
        "updatedAt" : "2021-01-04T20:20:19Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "eae94575-9bb4-4572-bd69-cedad6f869a3",
        "parentId" : "15f2b9cd-4679-441b-998f-04902f2ecce9",
        "authorId" : "b4616077-7f3f-4889-8dce-244af46520c7",
        "body" : "@andrewbranch is there a utility to check if we are in jsx/tsx file? we might wanna bail if we don't have any jsx elements at all.\r\n\r\nI updated the PR, let me know if you don't like my approach.",
        "createdAt" : "2021-01-01T21:09:42Z",
        "updatedAt" : "2021-01-04T20:20:19Z",
        "lastEditedBy" : "b4616077-7f3f-4889-8dce-244af46520c7",
        "tags" : [
        ]
      },
      {
        "id" : "81e50803-6f62-4135-8056-50d1cb8191dd",
        "parentId" : "15f2b9cd-4679-441b-998f-04902f2ecce9",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "> we might wanna bail if we don't have any jsx elements at all\r\n\r\nGood call. `getLanguageVariant(getScriptKind(fileName, host)) === LanguageVariant.JSX`.\r\n\r\n> I updated the PR, let me know if you don't like my approach.\r\n\r\nI don’t like the arbitrary counter—it’s more work than necessary to get a true negative in most places, and will return a false negative on super super deep closing tags, which should never happen in practice, but still feels kludgy. The only thing you’ll ever hit where you need to keep going up is a PropertyAccessExpression. Just continue as long as you have an Identifier or a PropertyAccessExpression.\r\n",
        "createdAt" : "2021-01-04T19:10:06Z",
        "updatedAt" : "2021-01-04T20:20:19Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bffdb42ae38f52ae8cbe3731acae1ad8d50bd95",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@//// var x8  = <Exp.M.SFCComp></[|Exp/*8*/|]>;\n//// var x9  = <Exp.M.SFCComp></[|Exp.M./*9*/|]>;\n//// var x10 = <Exp.M.SFCComp></      [|/*10*/Exp.M.Foo.Bar.Baz.Wut|]>;\n//// var x11 = <Exp.M.SFCComp></[|Exp./*11*/M.SFCComp|]>;\n//// var x12 = <Exp.M.SFCComp><div><span /></div></[|Exp.M./*12*/SFCComp|]>;"
  },
  {
    "id" : "048aadbc-7769-4f2d-84e1-2b66ac26c51a",
    "prId" : 42029,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42029#pullrequestreview-638118155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b253c572-b811-4ace-a41c-7ed18fe0e5d2",
        "parentId" : null,
        "authorId" : "e3af6b40-c5f3-4ec6-bc00-6840c300f714",
        "body" : "508",
        "createdAt" : "2021-04-16T22:23:17Z",
        "updatedAt" : "2021-04-16T22:23:18Z",
        "lastEditedBy" : "e3af6b40-c5f3-4ec6-bc00-6840c300f714",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bffdb42ae38f52ae8cbe3731acae1ad8d50bd95",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@/// <reference path='fourslash.ts' />\n//@module: commonjs\n//@jsx: preserve\n\n//// declare module JSX {"
  }
]