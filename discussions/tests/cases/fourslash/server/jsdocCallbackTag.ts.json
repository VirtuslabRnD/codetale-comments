[
  {
    "id" : "6e3b71db-0ecc-44d8-9441-a287c1c2995a",
    "prId" : 37444,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/37444#pullrequestreview-378740419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9885537-a65f-4b01-8c20-3c0cd41e2924",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "This seems like unwanted result of additional undefined given the parameter was written as `{string=}` ",
        "createdAt" : "2020-03-20T18:48:41Z",
        "updatedAt" : "2020-04-01T22:47:26Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "7521a20a-4dbe-4319-842e-3c9ece4eb2bb",
        "parentId" : "c9885537-a65f-4b01-8c20-3c0cd41e2924",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`{string=}` can appear in not-ending positions, which still add `| undefined` to the parameter type, but _don't_ add optionality to the parameter, so the existing node walker conservatively adds `| undefined` to the type nodes any time it sees the jsdoc optional type marker, since it's not semantically tracking if the `=` is actually implying a `?` or not. In the real world, the extra `| undefined` won't do anything if the `?` is present, so including it won't break anything, at least.",
        "createdAt" : "2020-03-20T18:59:09Z",
        "updatedAt" : "2020-04-01T22:47:26Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ccb13613cc95e5a79f6e561eab1f1c0b335aa24",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +31,35 @@verify.quickInfoIs(\"var t2: FooHandler2\");\ngoTo.marker(\"3\");\nverify.quickInfoIs(\"type FooHandler2 = (eventName?: string | undefined, eventName2?: string) => any\", \"- What, another one?\");\ngoTo.marker(\"8\");\nverify.quickInfoIs(\"type FooHandler = (eventName: string, eventName2: number | string, eventName3: any) => number\", \"- A kind of magic\");"
  }
]