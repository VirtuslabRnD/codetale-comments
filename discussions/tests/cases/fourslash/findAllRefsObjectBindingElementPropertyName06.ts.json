[
  {
    "id" : "ae86bf58-8f6a-4808-a0e1-4eb6249d4e1f",
    "prId" : 20706,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/20706#pullrequestreview-83939265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdb1e2cb-3751-42d5-bdda-6331f28f3abc",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "This is confusing. What is correct here? `any` shouldn't be it, but I don't think `I` is correct either.",
        "createdAt" : "2017-12-15T18:27:57Z",
        "updatedAt" : "2017-12-15T22:17:12Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "559cf4f2-c6d9-4b77-a463-d3ea25c7edf3",
        "parentId" : "cdb1e2cb-3751-42d5-bdda-6331f28f3abc",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`I` was very wrong. `any` is at least the type of `p2`, which is bound to the same symbol as that property because the object literal at this location isn't being correctly interpreted as a binding pattern in all locations. This PR is like a partial fix for that (now the type isn't completely incorrect, at least), but the symbols still need to be bound up correctly. IMO, the root cause is object literal/binding pattern confusion causing us to not handle binding patterns correctly in all the places we need to. I'd like to do a more directed fix at making binding patterns actually appear in expression positions instead of object literals when they're actually binding patterns, and use that to fix this.\r\n\r\nFor now, this is much better, though.",
        "createdAt" : "2017-12-15T22:13:10Z",
        "updatedAt" : "2017-12-15T22:17:12Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "07c7c6d2e9b2459a7cf7e0a3ee12e12a4a34c339",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +26,30 @@verify.referenceGroups(r4, [\n    { definition: \"(property) I.property1: number\", ranges: [r0, r1, r2, r3] },\n    { definition: \"(property) property1: any\", ranges: [r4] }\n]);"
  }
]