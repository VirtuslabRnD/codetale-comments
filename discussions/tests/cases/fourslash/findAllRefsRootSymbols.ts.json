[
  {
    "id" : "fdf0d033-071a-4807-91d4-82fba1d71e7a",
    "prId" : 20609,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/20609#pullrequestreview-84608141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41a5a518-e8f9-48f6-a2dd-477ae1612b56",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "how did this malfunction before this fix? were the first two references missing?",
        "createdAt" : "2017-12-13T19:21:05Z",
        "updatedAt" : "2017-12-13T20:28:22Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "ba4546cd-f58d-4136-a206-ec3aeeea3b0d",
        "parentId" : "41a5a518-e8f9-48f6-a2dd-477ae1612b56",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Currently, every `x` has no references except to itself, because we can't figure that they're all the same thing. `getRootSymbols` returns some synthetic symbols that aren't helpful.\r\nYou can test it out by pasting this in a file:\r\n```ts\r\ninterface I { x: {}; }\r\ninterface J { x: {}; }\r\ndeclare const o: (I | J) & { x: string };\r\no.x;\r\n```",
        "createdAt" : "2017-12-13T20:30:15Z",
        "updatedAt" : "2017-12-13T20:49:35Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "68023a66-3a5e-4def-b854-b344a6a8584d",
        "parentId" : "41a5a518-e8f9-48f6-a2dd-477ae1612b56",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "@sandersn Bump -- good to merge?",
        "createdAt" : "2017-12-19T22:10:39Z",
        "updatedAt" : "2017-12-19T22:10:39Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb0502914c85aaed32f00dbe294cceb3fda2b9e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@\t{ definition: \"(property) J.x: {}\", ranges: [r1] },\n\t{ definition: \"(property) x: string\", ranges: [r2] },\n\t{ definition: \"(property) x: string & {}\", ranges: [r3] },\n]);"
  }
]