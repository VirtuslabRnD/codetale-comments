[
  {
    "id" : "f8297ac7-c184-4cc4-87ed-39d506989990",
    "prId" : 8538,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a654cf37-fd0d-4140-ad5c-0e2c0ee25bf7",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "can you have an example of a mixed-type object that uses the any-based overload as well? Something like\n\n``` ts\nvar o2 = { a: 'first', b: 2 };\nvar entries = Object.entries(o); // <-- entries: [string, any][]\n```\n",
        "createdAt" : "2016-05-10T17:49:48Z",
        "updatedAt" : "2016-05-10T20:19:42Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "90264db22cecc5b5492dcc73c25a82b9991c3fc1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@// @lib: es5,es2017.object\n\nvar o = { a: 1, b: 2 };\n\nfor (var x of Object.values(o)) {"
  }
]