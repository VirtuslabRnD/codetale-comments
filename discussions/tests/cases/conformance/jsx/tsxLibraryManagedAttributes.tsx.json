[
  {
    "id" : "f3905d1a-a9ff-49db-938d-6b8fdabccc86",
    "prId" : 24422,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24422#pullrequestreview-126855439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff71a4cd-1bf6-432a-9cfa-9ee0a4914242",
        "parentId" : null,
        "authorId" : "a572e711-29ba-41cd-b92e-5f8cf538aa0c",
        "body" : "Why is the `Partial<TDefaults>` here intersected with the extracted mapped type from `TDefaults`? What kind of error does that produce if `typeof TProps[K]` is incompatible with `typeof TDefaults[K]`?",
        "createdAt" : "2018-06-07T16:16:24Z",
        "updatedAt" : "2018-06-30T00:19:57Z",
        "lastEditedBy" : "a572e711-29ba-41cd-b92e-5f8cf538aa0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f62ada9dff9a319b45bef409180e5954fe7eb3d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@    & {[K in Extract<keyof TProps, keyof TDefaults>]?: TProps[K]}\n    & {[K in Exclude<keyof TProps, keyof TDefaults>]: TProps[K]}\n    & Partial<TDefaults>;\n\ntype InferredPropTypes<P> = {[K in keyof P]: P[K] extends PropTypeChecker<infer T, infer U> ? PropTypeChecker<T, U>[typeof checkedType] : {}};"
  }
]