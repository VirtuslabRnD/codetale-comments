[
  {
    "id" : "d40d47f6-1396-478e-af5c-ff90e2771679",
    "prId" : 25886,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25886#pullrequestreview-171259249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "002139d5-bfa7-4618-99bc-c6f8e1aac722",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Need test for object literal properties. My understanding is bigints cannot be used as property name directly ?\r\n```ts\r\nconst a = {  1n: \"hello\" }\r\nconst b = { [1n]: \"hello\" }\r\n```",
        "createdAt" : "2018-11-01T19:55:04Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "3f950b7b-eae0-4ba1-9f5d-98a77ef02997",
        "parentId" : "002139d5-bfa7-4618-99bc-c6f8e1aac722",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Need test cases when bigInt is used as property name and type has index signature: 1. string, 2.number 3. both 4. no signature",
        "createdAt" : "2018-11-01T21:45:44Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "72588919-3138-44b7-96b4-44ccd7db1538",
        "parentId" : "002139d5-bfa7-4618-99bc-c6f8e1aac722",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Also need tests with these as contextual type",
        "createdAt" : "2018-11-01T21:46:40Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "5069ff01-67f4-460c-9ef1-f3ec5e37f00c",
        "parentId" : "002139d5-bfa7-4618-99bc-c6f8e1aac722",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Still need test case for `const b = { [1n]: \"hello\" }` to ensure it works in computed property.",
        "createdAt" : "2018-11-02T20:41:15Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb99c4123003ade3e471cf17472be6d3f72d96ff",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@typedArray[bigNum] = 0xAA; // should error\ntypedArray[String(bigNum)] = 0xAA;\ntypedArray[\"1\"] = 0xBB;\ntypedArray[2] = 0xCC;\n"
  },
  {
    "id" : "05a99cc9-3c7f-46bb-84e0-83697369574a",
    "prId" : 25886,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25886#pullrequestreview-170858477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "556ce556-4bb1-430d-8119-ad0e417069a2",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Need another test for class property and methods with bigint as name (shouldn't be allowed)",
        "createdAt" : "2018-11-01T20:03:01Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb99c4123003ade3e471cf17472be6d3f72d96ff",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@const bigNum: bigint = 0n;\nconst typedArray = new Uint8Array(3);\ntypedArray[bigNum] = 0xAA; // should error\ntypedArray[String(bigNum)] = 0xAA;\ntypedArray[\"1\"] = 0xBB;"
  },
  {
    "id" : "03f864d3-4ea6-4a80-96e4-e2775d1343cf",
    "prId" : 25886,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25886#pullrequestreview-170868880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ee68386-1e96-47b2-8747-72ed2d4be077",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Are bigints allowed as object literal binding element property as is? Test for the same",
        "createdAt" : "2018-11-01T20:13:14Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "241e8f07-5361-4e12-8c89-2698da970f86",
        "parentId" : "2ee68386-1e96-47b2-8747-72ed2d4be077",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "`getPropertyNameOfBindingOrAssignmentElement` need to be handled with bigint. Noting this for tracking purpose",
        "createdAt" : "2018-11-01T20:29:18Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb99c4123003ade3e471cf17472be6d3f72d96ff",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@key = 123n; // should error\n\n// Show correct usage of bigint index: explicitly convert to string\nconst bigNum: bigint = 0n;\nconst typedArray = new Uint8Array(3);"
  }
]