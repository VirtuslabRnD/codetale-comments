[
  {
    "id" : "3086617d-4c3d-4a1d-ae58-ddc67cdd5082",
    "prId" : 41166,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/41166#pullrequestreview-512186628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9165c15b-bac1-47f2-8129-64f99c777911",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "are react/react-jsx/react-jsxdev meaningfully different for this change? Or does this just help coverage some other way? \r\n\r\nIt was harder to read the baselines since they were in triplicate.",
        "createdAt" : "2020-10-19T21:46:31Z",
        "updatedAt" : "2020-10-19T21:58:03Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "8b3c953a-2e49-4172-869f-a9197b7c9b00",
        "parentId" : "9165c15b-bac1-47f2-8129-64f99c777911",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Yep! The JS output is different for each! In `react` `createElement` is used, with arrays or singleton children. In `react-jsx`, the `jsx` and `jsxs` ctors are toggled between based on if the child is detected as singleton or not (in addition to array/no array in the actual argument). In `react-jsxdev`, the `isStatic` parameter passed to the ctor is changed based on weather a singleton child is detected or not. So there's meaningful output to check for all 3!",
        "createdAt" : "2020-10-19T21:52:59Z",
        "updatedAt" : "2020-10-19T21:58:03Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "c29d3f8f6fcfbf45a745608d117936906a9d4802",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// @jsx: react,react-jsx,react-jsxdev\n// @strict: true\n/// <reference path=\"/.lib/react16.d.ts\" />"
  }
]