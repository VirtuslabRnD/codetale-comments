[
  {
    "id" : "ee5e2a80-c7ad-4b96-97d8-a6ae8b4beca6",
    "prId" : 8241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c17a73d9-c2a8-45ab-96ff-d5ff4fa073dc",
        "parentId" : null,
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "Should having default initializer be \"undefined\" get an noImplicitAny error? as it is similar to doing this \n`var x = undefined` or `function foo(x=undefined) {}` in both case, the compiler will give an error\n",
        "createdAt" : "2016-04-21T21:23:01Z",
        "updatedAt" : "2016-08-16T23:54:12Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      },
      {
        "id" : "b3f53764-1de4-41a8-9e86-8006af1d8dc0",
        "parentId" : "c17a73d9-c2a8-45ab-96ff-d5ff4fa073dc",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Not really. It is different than that because destructuring(here a2) gets the typing through rhs (here as number because of rhs assignment of [1,2,3])\n",
        "createdAt" : "2016-04-21T22:16:59Z",
        "updatedAt" : "2016-08-16T23:54:12Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "d84b65c6-2624-426d-8391-e21396df9c29",
        "parentId" : "c17a73d9-c2a8-45ab-96ff-d5ff4fa073dc",
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "got it! Thanks. Though, in below case\n\n``` ts\nlet [a=undefined] = [];\n```\n\nShould it be an error? (would you add the test in as well?)\n",
        "createdAt" : "2016-04-21T22:52:45Z",
        "updatedAt" : "2016-08-16T23:54:12Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      },
      {
        "id" : "79f4002e-016f-44bc-9f23-f9fb49dd81cb",
        "parentId" : "c17a73d9-c2a8-45ab-96ff-d5ff4fa073dc",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "sure\n",
        "createdAt" : "2016-04-22T00:01:39Z",
        "updatedAt" : "2016-08-16T23:54:12Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "00a73945-48ee-4b86-bc6f-504a72398cbb",
        "parentId" : "c17a73d9-c2a8-45ab-96ff-d5ff4fa073dc",
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "Cool. :+1:  After adding the tests \n",
        "createdAt" : "2016-04-22T15:57:38Z",
        "updatedAt" : "2016-08-16T23:54:12Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      }
    ],
    "commit" : "02f908afd3a72f8e70035627202db78475b00c3b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@let [a, b, c] = [1, 2, 3]; // no error\nlet [a1 = 10, b1 = 10, c1 = 10] = [1, 2, 3]; // no error\nlet [a2 = undefined, b2 = undefined, c2 = undefined] = [1, 2, 3]; // no error\nlet [a3 = <any>undefined, b3 = <any>null, c3 = <any>undefined] = [1, 2, 3]; // no error\nlet [a4] = [<any>undefined], [b4] = [<any>null], c4 = <any>undefined, d4 = <any>null; // no error"
  }
]