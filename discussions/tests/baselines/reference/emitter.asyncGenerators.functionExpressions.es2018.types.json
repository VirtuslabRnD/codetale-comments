[
  {
    "id" : "fd5ec5c5-0548-4a46-b3fa-454d2f168302",
    "prId" : 30790,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30790#pullrequestreview-257676495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b77857f-2177-4085-903d-6ae7b22b8df8",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "why does `const x = yield* [1]` give `undefined` instead of `unknown` ?",
        "createdAt" : "2019-07-01T18:11:40Z",
        "updatedAt" : "2019-07-04T03:48:16Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "45e123bc-87f5-44ed-b59c-437441dd6fa4",
        "parentId" : "2b77857f-2177-4085-903d-6ae7b22b8df8",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Explained it [here](https://github.com/microsoft/TypeScript/pull/30790#discussion_r299222752) - `yield*` uses `TReturn` for its result and not `TYield` or `TStep`.",
        "createdAt" : "2019-07-01T21:26:07Z",
        "updatedAt" : "2019-07-04T03:48:16Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "2964802b-aadc-498c-babd-1db3ae6f3777",
        "parentId" : "2b77857f-2177-4085-903d-6ae7b22b8df8",
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "What @sandersn is pointing to is the return type is `AsyncGenerator<number, void, undefined>`. This is because `yield* [1]` delegates to the iterator for `[1]`, which is `Iterator<number, void, undefined>`, so we *know* that the generator accepts `undefined` for `TNext` rather than `unknown`.",
        "createdAt" : "2019-07-03T18:48:17Z",
        "updatedAt" : "2019-07-04T03:48:16Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f94886850b185bce3e442c40d7b638890f0de7b",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +26,30 @@const f4 = async function * () {\n>f4 : () => AsyncGenerator<number, void, undefined>\n>async function * () {    const x = yield* [1];} : () => AsyncGenerator<number, void, undefined>\n\n    const x = yield* [1];"
  }
]