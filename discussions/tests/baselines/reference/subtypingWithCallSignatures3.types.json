[
  {
    "id" : "dd40f317-c997-463b-a75a-1330bc508736",
    "prId" : 824,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc8dc3ad-daec-43df-a817-11a4068babf4",
        "parentId" : null,
        "authorId" : "062f3bee-c17a-4517-ad46-ba1c73ac0962",
        "body" : "breaking change here, seems like we would want a union of the signatures? For clarity the case is:\n\n``` ts\nvar r7arg3 = <T extends Base>(x: { a: T; b: T }) => 1;\nvar r7arg2 = (x: { a: string; b: number }) => 1;\nvar r = [r7arg3; r7arg2]; // type of r is?\n```\n\nsame thing happens in the tests for construct signatures obviously\n",
        "createdAt" : "2014-10-09T00:57:26Z",
        "updatedAt" : "2014-10-13T23:16:25Z",
        "lastEditedBy" : "062f3bee-c17a-4517-ad46-ba1c73ac0962",
        "tags" : [
        ]
      },
      {
        "id" : "6db39c1b-b814-42c8-9fd7-4ca91dbcec12",
        "parentId" : "dc8dc3ad-daec-43df-a817-11a4068babf4",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "Both function types are a supertype of the other (for purposes of signature comparisons we substitute `any` for type parameters) therefore we choose one of them.\n",
        "createdAt" : "2014-10-09T17:16:22Z",
        "updatedAt" : "2014-10-13T23:16:25Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5cd4145d5e2e02672018c267dbfc00ee1d2ebcb",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +536,540 @@\n    var r7e = [r7arg3, r7arg2];\n>r7e : { (x: { a: string; b: number; }): number; }[]\n>[r7arg3, r7arg2] : { (x: { a: string; b: number; }): number; }[]\n>r7arg3 : <T extends Base>(x: { a: T; b: T; }) => number"
  }
]