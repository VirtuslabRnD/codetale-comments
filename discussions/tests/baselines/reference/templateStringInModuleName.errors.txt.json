[
  {
    "id" : "9c2df0f2-e76e-4f3d-8604-a14ffe2ff8e7",
    "prId" : 43005,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/43005#pullrequestreview-706598427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "This becomes unfortunate because you will now possibly get a semantic error. Ideally, we would just allow no-substitution template strings in these positions and gracefully handle them later in the compiler.\r\n\r\nI'm not sure if it's that big of a problem though. I'd hold off on any changes here.",
        "createdAt" : "2021-04-12T18:41:37Z",
        "updatedAt" : "2021-04-17T16:27:14Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "e6e4f195-a75f-42fc-bae9-bb478d0b24a0",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "In hindsight, I’m actually surprised this wasn’t one of the places that IllusionMH made work with NoSubstitutionTemplateLiterals. I thought we hit basically everything that didn’t conflict with the ES spec. Why even bother issuing a grammar error? But that’s a discussion for another PR 🙃 ",
        "createdAt" : "2021-04-13T16:08:27Z",
        "updatedAt" : "2021-04-17T16:27:14Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "ab30ef6f-c9ef-4ab9-8177-ebc204dd9727",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "body" : "A few clarification requests on this thread:\r\n* _\"possibly get a semantic error\"_ -- is giving a `parseErrorAt` with the `Module declaration names may only use ' or \" quoted strings` not going to stop that? I'm under the impression this PR only changes which diagnostic is emitted, not the phase.\r\n* I'm inferring _\"no-substitution template strings\"_ to be template strings that don't have any `${...}`s in them?\r\n* By _\"hold off on any changes here\"_ do you mean I should leave the PR as-is, or revert the logic back to the way it was before this PR?\r\n\r\n",
        "createdAt" : "2021-04-15T01:32:25Z",
        "updatedAt" : "2021-04-17T16:27:14Z",
        "lastEditedBy" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "tags" : [
        ]
      },
      {
        "id" : "b6f4d78d-a530-42a3-90e6-761fd8228687",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "body" : "Ping @andrewbranch @DanielRosenwasser 👋 , I think this PR is ready for re-review pending my questions in this thread? 🙏 ",
        "createdAt" : "2021-05-28T14:24:01Z",
        "updatedAt" : "2021-05-28T14:24:01Z",
        "lastEditedBy" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "tags" : [
        ]
      },
      {
        "id" : "e99ec239-6bb5-4534-934c-8dd78f6c7e41",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "I’m also not sure what Daniel meant on this one. This shouldn’t change semantic errors since the parse tree isn’t changing, as far as I can tell. My approval on the PR still stands, just want to make sure Daniel is happy with the changes to address his feedback.",
        "createdAt" : "2021-05-28T16:01:59Z",
        "updatedAt" : "2021-05-28T16:01:59Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "a0331946-3ba7-4a2a-b0ab-54116318a367",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "body" : "Ping, @DanielRosenwasser? 🙏 \r\n",
        "createdAt" : "2021-07-14T18:04:07Z",
        "updatedAt" : "2021-07-14T18:04:08Z",
        "lastEditedBy" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "tags" : [
        ]
      },
      {
        "id" : "455f2b0a-be36-4767-931d-8e31bfa9e574",
        "parentId" : "aa6b3f2a-40a0-4021-a724-4a59989036fc",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "I meant leave the PR as-is, sorry!\r\n\r\n> Module declaration names may only use ' or \" quoted strings.\r\n\r\nDon't know if I caught this diagnostic - I think that should be sufficient!",
        "createdAt" : "2021-07-14T18:36:33Z",
        "updatedAt" : "2021-07-14T18:36:34Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b16d5eb39b391abf45e1ec35f4e054ac37c9de63",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +12,16 @@!!! error TS2304: Cannot find name 'declare'.\n            ~~~~~~\n!!! error TS2580: Cannot find name 'module'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n                   ~~~~\n!!! error TS1443: Module declaration names may only use ' or \" quoted strings."
  }
]