[
  {
    "id" : "2bfd9104-f615-497c-9586-1b4862dbe184",
    "prId" : 30829,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30829#pullrequestreview-256607904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a9fdf42-0b67-4bcd-aa0d-e3e688950e6f",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "1. probably should be named `privateNameNestedClassNameShadow.ts` if there's no error.\r\n2. Why does the inner weakmap need to have a unique name?\r\n2. What is the emit for\r\n\r\n```ts\r\nclass A {\r\n  #foo = 1\r\n}\r\nclass B {\r\n  #foo = 1\r\n}\r\n```\r\n\r\nDo they both share a weakmap `_foo`? Or does B.#foo get a unique weakmap name?",
        "createdAt" : "2019-07-01T23:32:03Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "5a4a5c08-290a-4512-8955-3b75f1462808",
        "parentId" : "1a9fdf42-0b67-4bcd-aa0d-e3e688950e6f",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "privateNamesAndFields answers (3): They do not share a weakmap; B gets `_foo_1`.",
        "createdAt" : "2019-07-02T15:21:48Z",
        "updatedAt" : "2019-12-24T10:22:58Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbb84d1e81b35f944d994f6c71c3eda40f944b85",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@//// [privateNameNestedClassNameConflict.ts]\nclass A {\n    #foo: string;\n    constructor() {"
  }
]