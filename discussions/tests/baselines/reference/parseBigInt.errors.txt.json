[
  {
    "id" : "d7cbc263-1021-4b1f-b601-00e79a42676a",
    "prId" : 28896,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/28896#pullrequestreview-182880070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47e2632f-0122-481e-86bb-8b2d5ad4deb7",
        "parentId" : null,
        "authorId" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "body" : "You know, on second thought, I think the `~` should cover the number _and_ the identifier. Will switch...",
        "createdAt" : "2018-12-07T08:42:59Z",
        "updatedAt" : "2018-12-18T08:56:09Z",
        "lastEditedBy" : "3d76da9c-316b-4f38-a104-935b1d718f1d",
        "tags" : [
        ]
      },
      {
        "id" : "8a5afe7c-ef3b-4bd4-9125-5fc56d14efd2",
        "parentId" : "47e2632f-0122-481e-86bb-8b2d5ad4deb7",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Yup, in the bigint-like case, it should cover both.",
        "createdAt" : "2018-12-07T21:27:50Z",
        "updatedAt" : "2018-12-18T08:56:09Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d7e3f82d40885a29b42a190e758fa00f194ed97",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +81,85 @@                            ~\n!!! error TS1005: ',' expected.\n    { const scientific = 1e2n; }\n                         ~~~~\n!!! error TS1352: A bigint literal cannot use exponential notation."
  },
  {
    "id" : "39d3cca6-44f3-481a-b936-5267808a5328",
    "prId" : 28857,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/28857#pullrequestreview-182417572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1bbff9-8d28-4d0e-8bd8-aa9efbf2f127",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "This could be better if you want to send a follow-up PR to see if you have a length of `1` and the identifier is named `n`.",
        "createdAt" : "2018-12-06T19:49:39Z",
        "updatedAt" : "2018-12-06T19:49:39Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2111843479cbae191eac29b58fd016069fc53e2",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +83,87 @@    { const scientific = 1e2n; }\n                            ~\n!!! error TS1351: An identifier or keyword cannot immediately follow a numeric literal.\n    { const decimal = 4.1n; }\n                         ~"
  },
  {
    "id" : "20a7e347-f493-4b88-8b15-4bfd20955761",
    "prId" : 25886,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25886#pullrequestreview-142899549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec2a2405-22c6-4c48-944d-63d049cb2542",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "Question for @DanielRosenwasser  and @mhegazy  should we be type \"bigint\" in non ambient context without --experimentalBigInt as error?",
        "createdAt" : "2018-08-02T17:59:03Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb99c4123003ade3e471cf17472be6d3f72d96ff",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@    \n    // Using literals as types\n    const oneTwoOrThree = (x: 1n | 2n | 3n): bigint => x ** 2n;\n    oneTwoOrThree(0n); oneTwoOrThree(1n); oneTwoOrThree(2n); oneTwoOrThree(3n);\n                  ~~"
  },
  {
    "id" : "f293e8d5-bf9f-44c1-b67c-08f861b668d6",
    "prId" : 25886,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/25886#pullrequestreview-171703599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "parentId" : null,
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "octals are error right?",
        "createdAt" : "2018-11-02T21:57:12Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "26e5b358-e0bc-44ac-b6a0-d204c70ee1c8",
        "parentId" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "authorId" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "body" : "Only legacy octals, e.g. `0567n`. `0o567n` is allowed.",
        "createdAt" : "2018-11-02T22:08:44Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "tags" : [
        ]
      },
      {
        "id" : "12e869b7-dccb-4eb9-b058-88d60f7e7130",
        "parentId" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "But then I don't see test case for that. Please add one or point to where it is. Thanks",
        "createdAt" : "2018-11-02T22:20:14Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "cd166e07-8f91-4029-ba12-363b82fc6d7f",
        "parentId" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "authorId" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "body" : "Already have one here: https://github.com/Microsoft/TypeScript/pull/25886/files/0d54f041d66536b5712e9bb5e94f28aa7d430892#diff-f6f1b31177fd1675c39b4b3f7ad83581R80",
        "createdAt" : "2018-11-02T22:57:30Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "tags" : [
        ]
      },
      {
        "id" : "3f98c30a-63e6-4cf7-8c31-2c5d5ad66711",
        "parentId" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "authorId" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "body" : "The pointer is wrong. can you please provide correct link Thanks. Unresolving this comment so that i can track this.",
        "createdAt" : "2018-11-05T17:34:47Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "cb16561c-58c1-4f0a-a738-613be01155c9",
        "tags" : [
        ]
      },
      {
        "id" : "9cbeb289-730d-4842-80cf-3e12185a3954",
        "parentId" : "98c1afb3-b690-4df3-9f02-80a7c2e0bcd9",
        "authorId" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "body" : "Ah, sorry about that. Must be because I force-pushed. I'll copy the section here, from the `parseBigInt` test:\r\n````typescript\r\n{ const legacyOct = 0123n; }\r\n````",
        "createdAt" : "2018-11-05T18:48:58Z",
        "updatedAt" : "2018-11-05T20:24:02Z",
        "lastEditedBy" : "2a9ff7d0-9e5d-4e6a-9c76-06f809e7ccca",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb99c4123003ade3e471cf17472be6d3f72d96ff",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@    // All bases should allow \"n\" suffix\n    const bin = 0b101, binBig = 0b101n; // 5, 5n\n    const oct = 0o567, octBig = 0o567n; // 375, 375n\n    const hex = 0xC0B, hexBig = 0xC0Bn; // 3083, 3083n\n    const dec = 123,   decBig = 123n;"
  }
]