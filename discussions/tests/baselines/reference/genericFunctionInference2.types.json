[
  {
    "id" : "0bd0f6cb-1cb5-4a42-97eb-e1e6f3c7434e",
    "prId" : 30856,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30856#pullrequestreview-225649700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2de2f3bf-0f19-4040-8fdf-a95fab93ec0b",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Isn't this supposed to be `Reducer<{ combined: { foo: number; }; }>`?",
        "createdAt" : "2019-04-11T05:25:54Z",
        "updatedAt" : "2019-04-11T05:25:55Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "f7153bf9-78d8-4214-8589-807c54c56dec",
        "parentId" : "2de2f3bf-0f19-4040-8fdf-a95fab93ec0b",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "It's supposed to be `Reducer<{ combined: { foo: Reducer<number> } }>`, but we never elaborate more than one level of reverse mapped types, thus the any.",
        "createdAt" : "2019-04-11T16:26:51Z",
        "updatedAt" : "2019-04-11T16:26:52Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      },
      {
        "id" : "a4c5d7ae-248f-428f-b580-cd5fb2360c20",
        "parentId" : "2de2f3bf-0f19-4040-8fdf-a95fab93ec0b",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Ahhhhhh, right. I thought we printed those with `...` now, rather than `any`, but that may only be for quickinfo...",
        "createdAt" : "2019-04-11T16:36:16Z",
        "updatedAt" : "2019-04-11T16:36:16Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "791f56d22f080ee1dcc90b3b2e84c1af5cb2fd1c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@\nconst myReducer2 = combineReducers({\n>myReducer2 : Reducer<{ combined: { foo: any; }; }>\n>combineReducers({    combined: combineReducers({ foo }),}) : Reducer<{ combined: { foo: any; }; }>\n>combineReducers : <S>(reducers: { [K in keyof S]: Reducer<S[K]>; }) => Reducer<S>"
  }
]