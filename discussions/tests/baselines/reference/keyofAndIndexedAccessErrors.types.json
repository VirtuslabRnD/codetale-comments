[
  {
    "id" : "66d2e6ce-dd1a-4fa5-826d-3d5600148c26",
    "prId" : 42149,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42149#pullrequestreview-564437469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe2a8405-87f7-46d2-b95d-3e82a403245d",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "Interesting that we don't preserve `keyof keyof Object` here like we do for `keyof Object`.",
        "createdAt" : "2021-01-07T23:50:38Z",
        "updatedAt" : "2021-01-09T00:34:45Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "cefbbd3e-4ba4-4639-8d41-2ec48b4287ef",
        "parentId" : "fe2a8405-87f7-46d2-b95d-3e82a403245d",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "That's by design. We attach a `keyof XXX` origin type only when `XXX` is a referenced to a named type (i.e. class or interface reference or a reference to a type with an alias). We could of course choose another heuristic, but something like `keyof { a: string, b: number }` isn't really helpful compared to `\"a\" | \"b\"`.",
        "createdAt" : "2021-01-08T17:14:40Z",
        "updatedAt" : "2021-01-09T00:34:45Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8881f01fad9b89926a84a175180d361ebbd3a0fb",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +27,31 @@\ntype T02 = keyof keyof Object;\n>T02 : number | \"length\" | \"toString\" | \"valueOf\" | \"charAt\" | \"charCodeAt\" | \"concat\" | \"indexOf\" | \"lastIndexOf\" | \"localeCompare\" | \"match\" | \"replace\" | \"search\" | \"slice\" | \"split\" | \"substring\" | \"toLowerCase\" | \"toLocaleLowerCase\" | \"toUpperCase\" | \"toLocaleUpperCase\" | \"trim\" | \"substr\"\n\ntype T03 = keyof keyof keyof Object;"
  },
  {
    "id" : "8049164c-8405-45f8-b56d-8a635c20490b",
    "prId" : 42149,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/42149#pullrequestreview-563903133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4de2097-752e-4545-ba7f-6e1d66b64812",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I do feel like we're going to need some editor capability to expand these otherwise \"debugging\" types will become more complicated.",
        "createdAt" : "2021-01-07T23:51:15Z",
        "updatedAt" : "2021-01-09T00:34:45Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "8881f01fad9b89926a84a175180d361ebbd3a0fb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@\ntype T01 = keyof Object;\n>T01 : keyof Object\n\ntype T02 = keyof keyof Object;"
  },
  {
    "id" : "c160f9e4-f6e7-4f69-be5d-7430005390bf",
    "prId" : 23592,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/23592#pullrequestreview-114148932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fff2d77-a69d-4ef5-9640-0a5fbaced86a",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "I like how the `number` indexer on `String` causes this type to pingpong back and forth between the common keys between `number` and `string` and just `string` now. Just an observation.",
        "createdAt" : "2018-04-21T00:44:19Z",
        "updatedAt" : "2018-04-21T16:33:05Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7f55be90c31fbdbaaecb6612b76a2f0b1319465",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +35,39 @@\ntype T03 = keyof keyof keyof Object;\n>T03 : \"toString\" | \"toLocaleString\" | \"valueOf\"\n>Object : Object\n"
  }
]