[
  {
    "id" : "475ae91b-cdb4-4ec9-8d37-2554936cf2be",
    "prId" : 32538,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/32538#pullrequestreview-266879662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfc2b187-03a4-4fab-a2dc-3e70c321b37f",
        "parentId" : null,
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "I’m not sure what to do with `this: void`. It doesn’t have any special handling right now, so it intersects with `number` to produce `never`. But it feels fairly synonymous with completely omitting a `this` type, in which case I would drop it out of the intersection. I’m a bit fuzzy on how to interpret the `void` type outside of return types.",
        "createdAt" : "2019-07-24T19:24:27Z",
        "updatedAt" : "2019-07-24T22:04:05Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "f48a56fe-813e-4147-925a-431424836d67",
        "parentId" : "bfc2b187-03a4-4fab-a2dc-3e70c321b37f",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`void` is _usually_ best treated as synonymous with `undefined` in all non-return positions - at least that's what we've done thus far (despite the fact that any return type is assignable to a void returning function, thus you cannot guarantee that a void returning function returns `undefined`). It's a bit inconsistent.",
        "createdAt" : "2019-07-24T20:29:17Z",
        "updatedAt" : "2019-07-24T22:04:05Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "dab85a06-cf77-45c7-a2a2-1c5e45d4d77a",
        "parentId" : "bfc2b187-03a4-4fab-a2dc-3e70c321b37f",
        "authorId" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "body" : "Ok; by that logic I think the intersection stands.",
        "createdAt" : "2019-07-24T20:49:52Z",
        "updatedAt" : "2019-07-24T22:04:05Z",
        "lastEditedBy" : "7b7aae27-4774-41a7-bce2-94c871708547",
        "tags" : [
        ]
      },
      {
        "id" : "cf6fbbca-1fea-4d76-9211-b1cf6eb769f8",
        "parentId" : "bfc2b187-03a4-4fab-a2dc-3e70c321b37f",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "In this parameters, `void` is *definitely* a synonym of `undefined`. I wrote the feature before `undefined` existed. `this: void` is (was?) the idiomatic way to specify that there will be no `this` provided. \r\n\r\n`never` seems right because it arises from an union of signatures that require both (1) no `this` provided (2) some `this` provided.",
        "createdAt" : "2019-07-25T20:54:33Z",
        "updatedAt" : "2019-07-25T20:54:34Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f2a2e582d56c7bbbe7938304ec01b581ab1b962",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@    fn(0);\n    ~~~~~\n!!! error TS2684: The 'this' context of type 'void' is not assignable to method's 'this' of type 'never'.\n    "
  }
]