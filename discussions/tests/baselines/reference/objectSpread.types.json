[
  {
    "id" : "0e7ca935-78ce-4adc-994f-691b220a550e",
    "prId" : 20648,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/20648#pullrequestreview-83273419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "The result of a spread is definitely an `object`, so the old types are a bit more accurate.",
        "createdAt" : "2017-12-12T22:22:38Z",
        "updatedAt" : "2017-12-12T22:22:38Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "12066c43-b689-4f3c-8875-fc3b54dd15a8",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Very true. The only observable effect I can think of is this, though:\r\n\r\n```ts\r\nlet nonprim = { ...<object>{}};\r\nnonprim = 12;\r\n```\r\n",
        "createdAt" : "2017-12-12T22:32:49Z",
        "updatedAt" : "2017-12-12T22:32:49Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "acf98f98-792e-4314-90d8-2ab94087cc01",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "OK, I was going to try to find an example, but apparently this works:\r\n```ts\r\nfunction huh(x: {}): object {\r\n\treturn x;\r\n}\r\n```\r\nHuh? Aren't these different types?",
        "createdAt" : "2017-12-13T00:22:12Z",
        "updatedAt" : "2017-12-13T00:22:12Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "520b26c5-a5c2-42ae-8874-31728b599bbe",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "I think this is intentional, and a consequence of the rule that \"all object types are assignable to `object`\". This would be fine, except that we (incorrectly) allow `number` to be assignable to `{}` on the grounds that it's like assigning `Number => {}`.\r\n\r\n@DanielRosenwasser do you remember if this is correct?",
        "createdAt" : "2017-12-13T00:25:05Z",
        "updatedAt" : "2017-12-13T00:25:05Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "74360e91-71d0-4811-8b95-35b2dac6859b",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "33e0deb4-c96a-4040-a0a8-01bfaa7ca173",
        "body" : "@andy-ms type `object` was introduced by TS@2.2 (https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html). The example in the documentation seems to indicate that **`object`** is more accurate that **`{}`** when referring methods of **Object**, but they are inter-changeable in other cases. I used to find this [article](https://blog.mariusschulz.com/2017/02/24/typescript-2-2-the-object-type) very helpful for me to understand the differences. :)",
        "createdAt" : "2017-12-13T00:41:28Z",
        "updatedAt" : "2017-12-13T00:43:19Z",
        "lastEditedBy" : "33e0deb4-c96a-4040-a0a8-01bfaa7ca173",
        "tags" : [
        ]
      },
      {
        "id" : "1196588e-fb8e-4626-aa85-c640a9f3b837",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "@ZheyangSong I think that was @andy-msâ€™ original point. \r\n\r\nI realized that you can get the former type with a special case in getSpreadType when left is {} and right is object. But this only applies for exactly the example above, which should only show up in functions named cloneRecord. ",
        "createdAt" : "2017-12-13T15:57:14Z",
        "updatedAt" : "2017-12-13T15:57:14Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "73bacba0-8029-433b-8807-13556f4bf857",
        "parentId" : "5df8e644-5b22-4732-b1d5-4b52b809d15d",
        "authorId" : "33e0deb4-c96a-4040-a0a8-01bfaa7ca173",
        "body" : "I see. Thanks. :)",
        "createdAt" : "2017-12-13T18:36:00Z",
        "updatedAt" : "2017-12-13T18:36:00Z",
        "lastEditedBy" : "33e0deb4-c96a-4040-a0a8-01bfaa7ca173",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc0d85d29f6533f07368b93f7002b8f179b71bd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +572,576 @@// non primitive\nlet spreadNonPrimitive = { ...<object>{}};\n>spreadNonPrimitive : {}\n>{ ...<object>{}} : {}\n><object>{} : object"
  }
]