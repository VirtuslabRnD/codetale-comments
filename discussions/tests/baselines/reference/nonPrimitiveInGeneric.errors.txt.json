[
  {
    "id" : "9448df2d-25d4-4679-8a11-acca4d22d85d",
    "prId" : 12501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12501#pullrequestreview-13261616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c67c62c-5be8-4179-813c-0891bc6f90eb",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "line 51 and 52 are only ok because strictNullChecks is not turned on, right?",
        "createdAt" : "2016-12-15T23:45:29Z",
        "updatedAt" : "2016-12-22T02:07:51Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "5e721b0c-61a6-451f-a6dc-9fb119e213c4",
        "parentId" : "9c67c62c-5be8-4179-813c-0891bc6f90eb",
        "authorId" : "9f1f7c23-b07f-4d8c-b6cf-0442ffcf7c85",
        "body" : "Yes, and there are corresponding tests in `nonPrimitiveStrictNull.ts` which produces errors.",
        "createdAt" : "2016-12-16T02:20:34Z",
        "updatedAt" : "2016-12-22T02:07:51Z",
        "lastEditedBy" : "9f1f7c23-b07f-4d8c-b6cf-0442ffcf7c85",
        "tags" : [
        ]
      }
    ],
    "commit" : "899387706fb11d48c6b6a5f4f986d6723a3026f3",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@!!! error TS2344: Type 'number' does not satisfy the constraint 'object'.\n    var y: Proxy<null>; // ok\n    var z: Proxy<undefined> ; // ok\n    \n    "
  },
  {
    "id" : "2710d251-bff0-4386-9b11-cb3b2cc85698",
    "prId" : 12501,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/12501#pullrequestreview-13246526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54a3b3be-3116-4502-bed0-910da05c4fca",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "except for null and undefined, I don't think these tests are that valuable, since they are just testing assignability again",
        "createdAt" : "2016-12-15T23:52:04Z",
        "updatedAt" : "2016-12-22T02:07:51Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "899387706fb11d48c6b6a5f4f986d6723a3026f3",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@\n==== tests/cases/conformance/types/nonPrimitive/nonPrimitiveInGeneric.ts (7 errors) ====\n    function generic<T>(t: T) {}\n    var a = {};\n    var b = \"42\";"
  }
]