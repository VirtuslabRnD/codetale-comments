[
  {
    "id" : "caa58029-8ddc-4686-bca6-d301983f5d81",
    "prId" : 21156,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/21156#pullrequestreview-88552297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba667a6c-80f7-49df-9983-7bc4a7063dd6",
        "parentId" : null,
        "authorId" : "f6f9f6e7-b6dc-4ac7-9d04-3df732edd35b",
        "body" : "(on many people's wishlist): add these to `lib.d.ts` ðŸ’Ÿ",
        "createdAt" : "2018-01-12T01:25:28Z",
        "updatedAt" : "2018-01-12T23:08:24Z",
        "lastEditedBy" : "f6f9f6e7-b6dc-4ac7-9d04-3df732edd35b",
        "tags" : [
        ]
      },
      {
        "id" : "86d7ad53-9ce6-4710-a08f-781fc1eaa2fa",
        "parentId" : "ba667a6c-80f7-49df-9983-7bc4a7063dd6",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Diff and Omit might someday be in lib.d.ts once conditional types are in Typescript, but the current implementation is way too hacky.",
        "createdAt" : "2018-01-12T16:45:35Z",
        "updatedAt" : "2018-01-12T23:08:24Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "0a41cff8-b296-4d37-a1d8-0811dd4f4d17",
        "parentId" : "ba667a6c-80f7-49df-9983-7bc4a7063dd6",
        "authorId" : "498dfc29-3697-4f4a-8540-86da2992b269",
        "body" : "In fact, only Diff implementation is way too hacky. But it will be solved if subtraction types make it into typescript (someday).",
        "createdAt" : "2018-01-12T17:44:19Z",
        "updatedAt" : "2018-01-12T23:08:24Z",
        "lastEditedBy" : "498dfc29-3697-4f4a-8540-86da2992b269",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd1bb9bde21f79bc90325990129f45dc3b0185a0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@type Diff<T extends string, U extends string> =\n    ({ [P in T]: P } & { [P in U]: never } & { [x: string]: never })[T]\ntype Omit<U, K extends keyof U> = Pick<U, Diff<keyof U, K>>\ntype Omit1<U, K extends keyof U> = Pick<U, Diff<keyof U, K>>;\n// is in fact an equivalent of"
  }
]