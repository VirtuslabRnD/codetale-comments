[
  {
    "id" : "c47a66d7-61e9-439f-b348-42c34302bcf1",
    "prId" : 32610,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/32610#pullrequestreview-270424369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "506943f0-15bd-4393-bdcd-05cbc8b62ba9",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "so, before only `declare namespace C { }` and `C.prototype = {}` functioned as declarations. Now `C.bar = 2` does too. Why didn't this before?",
        "createdAt" : "2019-08-02T22:26:48Z",
        "updatedAt" : "2019-08-02T22:58:33Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "0db985af-0a67-498a-82af-0d3db688cb2f",
        "parentId" : "506943f0-15bd-4393-bdcd-05cbc8b62ba9",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`C.bar` saw `C` was already bound and declined to add `C` to `C`'s declarations (which simultaneously prevented `C` in `C.bar` from having a symbol!). Now we always add the new declaration (so the expression always gets a symbol).",
        "createdAt" : "2019-08-02T22:55:19Z",
        "updatedAt" : "2019-08-02T22:58:33Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "af569fb68b7c1195b6177379de78bad8deea0a19",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@=== tests/cases/conformance/salsa/a.d.ts ===\ndeclare namespace C {\n>C : Symbol(C, Decl(a.d.ts, 0, 0), Decl(b.js, 0, 0), Decl(b.js, 0, 17))\n\n    function bar(): void"
  }
]