[
  {
    "id" : "51ccdcf3-4021-4f09-b2d1-9e0aa009168b",
    "prId" : 2596,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fedf74ba-d498-473f-a3de-55385c9d543e",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "I don't think this should be an error in ambient contexts?\n",
        "createdAt" : "2015-04-02T22:36:03Z",
        "updatedAt" : "2015-04-04T00:59:55Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "5ebc17cf-162f-4831-89dd-f6b44c2a0dec",
        "parentId" : "fedf74ba-d498-473f-a3de-55385c9d543e",
        "authorId" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "body" : "That's interesting.  We haven't ever distinguished ambient/non-ambient parsing in that manner.\n\nI think it might be best if we kept hte behavior hte same regardless of if this was ambient or not.  But i could be convinced otherwise.\n",
        "createdAt" : "2015-04-02T22:51:10Z",
        "updatedAt" : "2015-04-04T00:59:55Z",
        "lastEditedBy" : "d46620b3-5a79-45a1-96fd-76f5c2ababd1",
        "tags" : [
        ]
      },
      {
        "id" : "7921c9de-572f-4f38-9a43-b49ab45b5990",
        "parentId" : "fedf74ba-d498-473f-a3de-55385c9d543e",
        "authorId" : "26699569-4335-45b0-a775-bfd0a044730b",
        "body" : "I can see it go both ways.  I just have small discussion with @mhegazy  and @CyrusNajmabadi that by giving an error in ambient contexts, we maintain a consistency with the rest. There is certainly going to be breaking change for DefinitelyType which I will have to submit a pull request for. \n",
        "createdAt" : "2015-04-02T23:07:19Z",
        "updatedAt" : "2015-04-04T00:59:55Z",
        "lastEditedBy" : "26699569-4335-45b0-a775-bfd0a044730b",
        "tags" : [
        ]
      }
    ],
    "commit" : "09d037fb6fd5de58ea91f7bc7ccb79d72d057e01",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +111,115 @@    declare class c4 {\n        constructor(i: number, ...arguments); // No error - no code gen\n                                  ~~~~~~~~~\n!!! error TS1210: Invalid use of 'arguments'. Class definitions are automatically in strict mode.\n    }"
  }
]