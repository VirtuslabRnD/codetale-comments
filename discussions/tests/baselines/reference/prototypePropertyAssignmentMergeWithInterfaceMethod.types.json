[
  {
    "id" : "ace2f74f-d011-4c03-94da-c2f008fa76b7",
    "prId" : 38368,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/38368#pullrequestreview-407939474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c6cebcf-14a7-44ac-b6d5-748ed3c19482",
        "parentId" : null,
        "authorId" : "4397350a-eae4-4e61-9495-290068d88fd2",
        "body" : "Is it a regression?",
        "createdAt" : "2020-05-08T01:22:18Z",
        "updatedAt" : "2020-05-08T01:22:18Z",
        "lastEditedBy" : "4397350a-eae4-4e61-9495-290068d88fd2",
        "tags" : [
        ]
      },
      {
        "id" : "fe26a47b-63a2-4057-8da7-d3af7d9f8d69",
        "parentId" : "9c6cebcf-14a7-44ac-b6d5-748ed3c19482",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`lf.schema.Table` doesn't actually exist in the test, so we were preserving a node that failed to resolve anyway. Technically we could keep it (since it's an error anyway), but since i changed the default for jsdoc type which fail to resolve in not-jsdoc to serialize the resolved type, it now prints back as the `any` the failed resolution returns.",
        "createdAt" : "2020-05-08T01:25:52Z",
        "updatedAt" : "2020-05-08T01:25:53Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "04e6b6fe920523344f120d1d5cd47df3b1066508",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +41,45 @@ */\nlf.Transaction.prototype.begin = function(scope) {};\n>lf.Transaction.prototype.begin = function(scope) {} : (scope: Array<any>) => any\n>lf.Transaction.prototype.begin : any\n>lf.Transaction.prototype : any"
  }
]