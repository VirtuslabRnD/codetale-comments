[
  {
    "id" : "1df64614-cadb-4a82-8887-0162bac59d17",
    "prId" : 17600,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/17600#pullrequestreview-80690090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2463f74b-ce67-4fe5-838f-d34bf3f620ee",
        "parentId" : null,
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "I think this change is correct because only the left hand side of the conditional is a type predicate. @ahejlsberg could you verify, then merge",
        "createdAt" : "2017-11-21T16:26:09Z",
        "updatedAt" : "2017-12-04T22:43:44Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "db96ec68-b80a-488a-b461-5471f799bb19",
        "parentId" : "2463f74b-ce67-4fe5-838f-d34bf3f620ee",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "Something seems fishy here. If you reverse the order of the operands you get the old result. So apparently both types are subtypes of each other, or otherwise subtype reduction would consistently pick one of them.  I'm not sure why this is the case, since `(x: any) => x is any[]` should be a subtype of `(x: any) => boolean`. You may want to investigate.",
        "createdAt" : "2017-11-21T17:20:06Z",
        "updatedAt" : "2017-12-04T22:43:44Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      },
      {
        "id" : "2d094ca2-8057-4590-be00-563bc15601a7",
        "parentId" : "2463f74b-ce67-4fe5-838f-d34bf3f620ee",
        "authorId" : "39105c25-586e-496a-9515-4fce35443a7c",
        "body" : "Added a test -- the return type seems to be `boolean` the other way around as well.",
        "createdAt" : "2017-11-28T19:37:53Z",
        "updatedAt" : "2017-12-04T22:43:44Z",
        "lastEditedBy" : "39105c25-586e-496a-9515-4fce35443a7c",
        "tags" : [
        ]
      },
      {
        "id" : "845b0169-1d14-4ea4-a420-d490be453669",
        "parentId" : "2463f74b-ce67-4fe5-838f-d34bf3f620ee",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "Ok, looks good.",
        "createdAt" : "2017-12-03T02:03:32Z",
        "updatedAt" : "2017-12-04T22:43:44Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d2ea5666af33b8cf44648209694233bb83cfc40",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +867,871 @@\n    isArray = ('isArray' in Array) ?\n>isArray = ('isArray' in Array) ?        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; } : (value: any) => boolean\n>isArray : any\n>('isArray' in Array) ?        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; } : (value: any) => boolean"
  }
]