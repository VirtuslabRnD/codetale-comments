[
  {
    "id" : "4d73c939-e091-4018-98b5-57ebc4dbf993",
    "prId" : 36342,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/36342#pullrequestreview-348304994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f84df657-230d-43ed-b452-e01ff81ef7e9",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "This is kind of a weird thing now that I think about it - why would I want to mark this as async? There's no `await` anywhere there.\r\n\r\nIf a user *did* write `await` in the function body, we already provide the same error message/quick fix to mark the function as `async`, so this could be annoying.\r\n\r\n```ts\r\ninterface Stuff {\r\n    b: () => Promise<string>;\r\n}\r\n\r\nfunction foo(): Stuff | Date {\r\n    return {\r\n        b: _ =>\r\n          await \"hello\" // two error spans with duplicate related spans\r\n        \r\n    }\r\n}\r\n```\r\n\r\nSo this is only distinct actionable advice information for a user if they *hadn't* written `await`. Would making this `async` actually be the right thing? It *does* come up, it's unclear if it's the real fix to a problem.",
        "createdAt" : "2020-01-25T02:06:52Z",
        "updatedAt" : "2020-02-15T01:02:15Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "0b1a4885-37ea-4b72-ac86-0641abe82660",
        "parentId" : "f84df657-230d-43ed-b452-e01ff81ef7e9",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "> This is kind of a weird thing now that I think about it - why would I want to mark this as async? There's no await anywhere there.\r\n\r\nBecause `async () => \"constant\"` is way, way more canonical and concise than `() => Promise.resolve(\"constant\")` when the API you're using expects a function returning a promise.\r\n\r\n> So this is only distinct actionable advice information for a user if they hadn't written await\r\n\r\nMore like, using `await` means the containing function should be async to make what you're trying to do work, while if assignability to a promise return fails, it should be async to satisfy the API. Different reasons entirely that happen to have the same fix.",
        "createdAt" : "2020-01-25T02:28:29Z",
        "updatedAt" : "2020-02-15T01:02:15Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b0ea9450b0e7badfb2fb4c0a24d63239156196a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +43,47 @@!!! error TS2322: Type 'string' is not assignable to type 'Promise<string>'.\n!!! related TS6502 tests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts:4:8: The expected type comes from the return type of this signature.\n!!! related TS1356 tests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts:19:10: Did you mean to mark this function as 'async'?\n          d: () => \"hello\",\n                   ~~~~~~~"
  },
  {
    "id" : "1ee8dfd0-1c53-4e64-a38d-3400789ab08c",
    "prId" : 35278,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35278#pullrequestreview-334305688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bc0b76d-a2a8-4d03-bb8f-b87ce52b77f2",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "As a separate change, it might be nice to special case the message `Foo is not assignable to Promise<Foo>` to say something about adding `await`, rather than listing missing properties.",
        "createdAt" : "2019-11-22T18:52:24Z",
        "updatedAt" : "2019-11-22T18:56:11Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "973f7701-26bb-4e59-b677-b6b001b73948",
        "parentId" : "7bc0b76d-a2a8-4d03-bb8f-b87ce52b77f2",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "I don't think it's as much about missing `await` since it's the target - but https://github.com/microsoft/TypeScript/issues/35300 covers the basic idea here.",
        "createdAt" : "2019-12-18T22:31:10Z",
        "updatedAt" : "2019-12-18T22:31:11Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2af8985a5b4ec7f63d5c25d6369857d3f51fa757",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@tests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(17,7): error TS2322: Type '() => number[]' is not assignable to type '() => Promise<number[]>'.\n  Type 'number[]' is missing the following properties from type 'Promise<number[]>': then, catch\ntests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(18,16): error TS2322: Type 'string' is not assignable to type 'Promise<string>'.\ntests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(19,16): error TS2322: Type 'string' is not assignable to type 'Promise<string>'."
  },
  {
    "id" : "3adb1c75-149e-4490-aa81-048f9ef0d40f",
    "prId" : 35278,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/35278#pullrequestreview-321810999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9eb932c-8a0e-44a8-845b-fd2a3bebc8a4",
        "parentId" : null,
        "authorId" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "body" : "But these ones didn't list missing properties?",
        "createdAt" : "2019-11-22T18:52:55Z",
        "updatedAt" : "2019-11-22T18:56:11Z",
        "lastEditedBy" : "4fe07f9f-2018-4a29-969c-e58ed20233c7",
        "tags" : [
        ]
      },
      {
        "id" : "bd7982d1-846a-4a7e-9c20-e0548566fa5c",
        "parentId" : "a9eb932c-8a0e-44a8-845b-fd2a3bebc8a4",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Primitives skip the property listing check. An array is treated like an arbitrary object type.",
        "createdAt" : "2019-11-22T21:08:52Z",
        "updatedAt" : "2019-11-22T21:08:52Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2af8985a5b4ec7f63d5c25d6369857d3f51fa757",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@tests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(17,7): error TS2322: Type '() => number[]' is not assignable to type '() => Promise<number[]>'.\n  Type 'number[]' is missing the following properties from type 'Promise<number[]>': then, catch\ntests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(18,16): error TS2322: Type 'string' is not assignable to type 'Promise<string>'.\ntests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(19,16): error TS2322: Type 'string' is not assignable to type 'Promise<string>'.\ntests/cases/compiler/errorOnUnionVsObjectShouldDeeplyDisambiguate.ts(20,16): error TS2322: Type 'string' is not assignable to type 'Promise<string>'."
  }
]