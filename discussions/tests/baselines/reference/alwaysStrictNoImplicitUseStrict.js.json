[
  {
    "id" : "643afb51-ff30-42d4-b07a-4c863718b8d9",
    "prId" : 11473,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/11473#pullrequestreview-4183837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd02f384-9ef1-4822-ae56-fbdd2ab4fe12",
        "parentId" : null,
        "authorId" : "564d94ba-8cc9-42a0-9ef8-3696c1bc6d20",
        "body" : "alwaysStrict overrides noImplicitUseStrict\n",
        "createdAt" : "2016-10-09T23:10:23Z",
        "updatedAt" : "2016-10-10T21:04:03Z",
        "lastEditedBy" : "564d94ba-8cc9-42a0-9ef8-3696c1bc6d20",
        "tags" : [
        ]
      },
      {
        "id" : "c27d5c22-4cce-4a50-86cb-3f55dc3454ad",
        "parentId" : "cd02f384-9ef1-4822-ae56-fbdd2ab4fe12",
        "authorId" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "body" : "Can you add a check in program.ts::verifyCompilerOptions to flag teh use of `--noImplicitUseStrict` and `--alwaysStrict` as invalid combination.. so somthing like\n\n``` ts\nif (options.noImplicitUseStrict && options.alwaysStrict) {\n    programDiagnostics.add(createCompilerDiagnostic(Diagnostics.Option_0_cannot_be_specified_with_option_1, \"noImplicitUseStrict \", \"alwaysStrict\"));\n}\n```\n",
        "createdAt" : "2016-10-13T23:13:02Z",
        "updatedAt" : "2016-10-13T23:13:02Z",
        "lastEditedBy" : "7a428a65-3bd3-41f2-b899-b42dc7177963",
        "tags" : [
        ]
      }
    ],
    "commit" : "8210634e8dbc9a1bc41c108b21c19b4cfac4d91c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@\n//// [alwaysStrictNoImplicitUseStrict.js]\n\"use strict\";\nvar M;\n(function (M) {"
  }
]