[
  {
    "id" : "78b9a177-efeb-40f2-9f9f-9fe4280c9e81",
    "prId" : 32610,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/32610#pullrequestreview-270424866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4123e8a7-79b2-4e2e-a9dd-0ecf8e736c17",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "shouldn't the containing `declare class Point` give a type meaning to this symbol? I thought that the first declaration won, but maybe it's the non-ambient one?",
        "createdAt" : "2019-08-02T22:30:33Z",
        "updatedAt" : "2019-08-02T22:58:33Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "8f823b6b-7837-48c5-9726-534727bc2fdb",
        "parentId" : "4123e8a7-79b2-4e2e-a9dd-0ecf8e736c17",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "`function Point` was the chosen declaration before (functions are bound early, classes and functions cannot merge) - this only \"worked\" because the `Assignment` flag (added by the `Point.origin` assignment) conferred a `Type` meaning before - the type on inspection could only have been the `errorType`. Now `Assignment` no longer adds any extraneous meaning, so this is correctly marked as an error.",
        "createdAt" : "2019-08-02T22:57:52Z",
        "updatedAt" : "2019-08-02T22:58:33Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "af569fb68b7c1195b6177379de78bad8deea0a19",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@          public add(dx: number, dy: number): Point;\n                                              ~~~~~\n!!! error TS2709: Cannot use namespace 'Point' as a type.\n          static origin: Point;\n                         ~~~~~"
  }
]