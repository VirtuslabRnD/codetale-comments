[
  {
    "id" : "436dde10-db35-41b3-a104-a189d0ed55c7",
    "prId" : 7029,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92a69887-b5ec-4833-a871-e9fb98407385",
        "parentId" : null,
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "Can you not report the index signature here? This is probably confusing for users, especially if the index signature type ever gets cut out.\n",
        "createdAt" : "2016-02-12T00:06:36Z",
        "updatedAt" : "2016-02-12T00:06:49Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "6f0ccc27-d2f4-47eb-99f4-b8269dc38129",
        "parentId" : "92a69887-b5ec-4833-a871-e9fb98407385",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "I dunno. I think it is pretty decent the way it is now and the last line makes it completely clear what isn't compatible with what.\n",
        "createdAt" : "2016-02-12T00:19:16Z",
        "updatedAt" : "2016-02-12T00:19:16Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      },
      {
        "id" : "0489f401-2034-4993-b928-b69ac1a6738b",
        "parentId" : "92a69887-b5ec-4833-a871-e9fb98407385",
        "authorId" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "body" : "It's not clear what the type of `p` is without the full type, so it'd be better to just report the index signature given that it'd take relatively little effort on our part.\n",
        "createdAt" : "2016-02-12T00:42:53Z",
        "updatedAt" : "2016-02-12T00:42:53Z",
        "lastEditedBy" : "cbc74313-e7e9-4313-b106-3e17fde5473d",
        "tags" : [
        ]
      },
      {
        "id" : "604a32b4-5a5e-4e51-90cc-1e1ad03601b6",
        "parentId" : "92a69887-b5ec-4833-a871-e9fb98407385",
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "Agreed, I don't see how it would be better if we didn't show the index signature\n",
        "createdAt" : "2016-02-12T00:47:38Z",
        "updatedAt" : "2016-02-12T00:47:43Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "d85cde90-5e09-491d-93cc-2cbb93d7780b",
        "parentId" : "92a69887-b5ec-4833-a871-e9fb98407385",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "Right, but the whole point of our elaboration scheme is to not try to show everything on one line. The respective types of `p` and the index signature follow in the next elaboration. It's completely analogous to how we report a mismatch between two properties.\n",
        "createdAt" : "2016-02-12T00:58:02Z",
        "updatedAt" : "2016-02-12T00:58:02Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1040f02c4f844d86c791194f1da17e263609c5f",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@tests/cases/compiler/contextualTypeAny.ts(3,5): error TS2322: Type '{ p: string; q: any; }' is not assignable to type '{ [s: string]: number; }'.\n  Property 'p' is incompatible with index signature.\n    Type 'string' is not assignable to type 'number'.\n"
  },
  {
    "id" : "91d88f17-0604-4f85-a09a-45db9b6dc833",
    "prId" : 7029,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2947f40d-75fe-4101-9637-846e76c164b8",
        "parentId" : null,
        "authorId" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "body" : "It's unfortunate that this is still legal.\n",
        "createdAt" : "2016-02-12T00:14:35Z",
        "updatedAt" : "2016-02-12T00:14:35Z",
        "lastEditedBy" : "8ef7dcc8-4842-40e3-9f9a-182aa5f9b120",
        "tags" : [
        ]
      },
      {
        "id" : "dc6f868d-a181-4470-b5e8-b544afeece1c",
        "parentId" : "2947f40d-75fe-4101-9637-846e76c164b8",
        "authorId" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "body" : "Yeah, would be nice to catch this, but it would require adding discrete properties 0, 1, 2,... to the array which I don't think anyone wants. Or perhaps we could consider giving array literals type `any[]` only when all elements are of type `any` and otherwise just ignore the `any` elements. Basically like saying that `any` elements in an array literal are presumed to be of the same type(s) as the non-`any` elements. Not sure how well that would work, though.\n",
        "createdAt" : "2016-02-12T00:28:31Z",
        "updatedAt" : "2016-02-12T00:28:31Z",
        "lastEditedBy" : "bdee90d3-fa06-43ed-8bf1-d381c3d69e0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1040f02c4f844d86c791194f1da17e263609c5f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@!!! error TS2322:     Type 'string' is not assignable to type 'number'.\n    \n    var arr: number[] = [\"\", x];"
  }
]