[
  {
    "id" : "7f2949d1-034f-4719-b5ae-cb902f52d761",
    "prId" : 21526,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/21526#pullrequestreview-93157939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2473e36f-2808-4c1a-8a69-d99657ee9de6",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "The full type here would be `module(\"x\").default`, but there's no handle to `module(\"x\")` available in scope. (And I added `defaultDeclarationEmitDefaultImport.ts` as a test to prove that all is named as expected when there's a viable alias in scope.) When there's an error like that, our current behavior when ignore errors is set (as is the case here) is simply to print what we can - namely the name of the symbol.\r\n\r\nEffectively, the new behavior is to consider the name of a `default` symbol as `default` unless an override is passed (not the case in type baseline emit), or we're at the very LHS of a name in the same file as the `default` symbol's declaration.",
        "createdAt" : "2018-02-01T03:22:32Z",
        "updatedAt" : "2018-02-01T03:44:07Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a51c854cafa49610ffdd0633aad68d4d1ea8e95",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@=== /src/a.ts ===\nimport { a } from \"a\";\n>a : (x: default) => void\n\nimport { b } from \"b\";"
  }
]