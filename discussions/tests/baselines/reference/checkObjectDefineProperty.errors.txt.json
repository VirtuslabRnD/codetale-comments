[
  {
    "id" : "04d7c07e-de28-4b2e-982e-03ebdaddf74c",
    "prId" : 27208,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27208#pullrequestreview-163440294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6463fb3f-f67b-4530-87e3-1fbe48f2216d",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "you should have a value test that leaves off writable, if that's allowed. Actually, you should have a test with value left out too. And maybe a test with some of the properties we don't care about?\n\nAlso a test with non-literals, just in case that hurts our ... error reporting or something?\n\nAccording to [MDN's Object.defineProperty page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty), we should have an error if both get/set and value are present. I didn't see a test for that either.\n\nAlso, who spells 'writeable' as 'writable'?\nLater:everybody else, it turns out.",
        "createdAt" : "2018-10-10T16:08:01Z",
        "updatedAt" : "2018-10-19T20:11:48Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "8da77c620ad27941a71286374e62b6b73408f75a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@==== tests/cases/conformance/jsdoc/index.js (0 errors) ====\n    const x = {};\n    Object.defineProperty(x, \"name\", { value: \"Charles\", writable: true });\n    Object.defineProperty(x, \"middleInit\", { value: \"H\" });\n    Object.defineProperty(x, \"lastName\", { value: \"Smith\", writable: false });"
  }
]