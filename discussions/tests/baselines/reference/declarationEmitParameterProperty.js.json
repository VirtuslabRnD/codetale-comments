[
  {
    "id" : "adc4049b-a80f-4e01-a730-ed0b7137be6e",
    "prId" : 21930,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/21930#pullrequestreview-104357742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0fd11ec-8469-4480-ba4c-231fe8749f05",
        "parentId" : null,
        "authorId" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "body" : "I don't think this is correct. `Foo` is _guaranteed_ to have an own property of `bar`. The optionality of the constructor parameter property shouldn't carry over to the property definition on the class.",
        "createdAt" : "2018-03-15T02:22:29Z",
        "updatedAt" : "2018-03-15T23:08:04Z",
        "lastEditedBy" : "1eec7f68-de25-4f88-827c-00769c75a2d7",
        "tags" : [
        ]
      },
      {
        "id" : "000c6617-76d6-4373-8311-8eb7a68a0df2",
        "parentId" : "c0fd11ec-8469-4480-ba4c-231fe8749f05",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "This matches our current typesystem behavior:\r\n\r\n```ts\r\nclass Foo {\r\n  constructor(public bar?: string) {}\r\n}\r\nconst a: Foo = {}; // valid\r\n```",
        "createdAt" : "2018-03-15T19:57:10Z",
        "updatedAt" : "2018-03-15T23:08:04Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d729cfb9b8d9064b79960f234b1e462ba2fe497",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +20,24 @@//// [declarationEmitParameterProperty.d.ts]\nexport declare class Foo {\n    bar?: string | undefined;\n    constructor(bar?: string | undefined);\n}"
  }
]