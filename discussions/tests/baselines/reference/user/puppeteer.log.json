[
  {
    "id" : "491cdf0a-cde5-4c1b-b87f-a74494a8d38b",
    "prId" : 40950,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/40950#pullrequestreview-513942710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2814bd74-73a1-472f-be09-8b1fe230c5c4",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "node-fetch isn't compatible with fetch anymore, but I can't figure out why. However, it's the same on 4.1 and 4.0, so I'm going to merge for now.",
        "createdAt" : "2020-10-21T22:15:34Z",
        "updatedAt" : "2020-10-21T22:27:49Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "acee68670c229030fea9d61548fba6dfa1dde0b7",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4,8 @@src/common/fetch.ts(21,3): error TS2322: Type '((input: RequestInfo, init?: RequestInit) => Promise<Response>) | typeof import(\"../../../node_modules/@types/node-fetch/index\")' is not assignable to type '(input: RequestInfo, init?: RequestInit) => Promise<Response>'.\n  Type 'typeof import(\"../../../node_modules/@types/node-fetch/index\")' is not assignable to type '(input: RequestInfo, init?: RequestInit) => Promise<Response>'.\n    Type 'typeof import(\"../../../node_modules/@types/node-fetch/index\")' provides no match for the signature '(input: RequestInfo, init?: RequestInit): Promise<Response>'.\n\n"
  },
  {
    "id" : "931f8e5c-9718-4dc2-8d3c-611555e183ce",
    "prId" : 33635,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/33635#pullrequestreview-294571386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d9d962e-0462-4921-bbcb-56b89c24090d",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "It looks more strange, but now you know that the global `WebSocket ` and the `WebSocket` referred to on the LHS differ. I'm pretty sure this is just due to some better prioritization in symbols during symbol name lookup (also actually recognizing that a `exports = WebSocket` means the module symbol is a viable reference to the `WebSocket`).",
        "createdAt" : "2019-09-27T21:32:00Z",
        "updatedAt" : "2019-09-27T21:32:41Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb84199bb020817524831a12dee0cd008d04bce5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +73,77 @@lib/Target.js(135,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/WebSocketTransport.js(32,72): error TS2345: Argument of type 'import(\"/puppeteer/puppeteer/node_modules/@types/ws/index\")' is not assignable to parameter of type 'WebSocket'.\n  Property 'dispatchEvent' is missing in type 'import(\"/puppeteer/puppeteer/node_modules/@types/ws/index\")' but required in type 'WebSocket'.\nlib/Worker.js(25,50): error TS2503: Cannot find namespace 'Protocol'.\nlib/Worker.js(26,24): error TS2503: Cannot find namespace 'Protocol'."
  },
  {
    "id" : "c1a15449-08e1-4f91-97f9-5c83cbbd9ab7",
    "prId" : 30937,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30937#pullrequestreview-226807083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7c14903-3a6e-4596-a6c4-1c1e1b1463c4",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "```ts\r\nnode[userStringProperty] = properties.get(userStringProperty) :\r\n    SerialisedAXNode[keyof SerialisedAXNode] <== number | string | boolean\r\n```\r\n\r\nwhere\r\n\r\n```ts\r\nkeyof SerialisedAXNode : string | number | boolean | SerialisedAXNode[]\r\n```\r\n\r\nThe difference is *probably* that now\r\n\r\n```ts\r\nSerialisedAXNode[keyof SerialisedAXNode] : never\r\n```",
        "createdAt" : "2019-04-15T16:08:39Z",
        "updatedAt" : "2019-04-15T16:09:08Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      },
      {
        "id" : "073af24b-72ec-4c11-a728-68453b36d0bc",
        "parentId" : "c7c14903-3a6e-4596-a6c4-1c1e1b1463c4",
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Yeah, this is an intended result of https://github.com/Microsoft/TypeScript/pull/30769 - since there's no generic tying `userStringProperty` to the result of `properties.get(userStringProperty)`, we don't know they you're assigning the value corresponding to the selected key to the correct key'd member. Unfortunately, you need to write a subtype of `Map`'s type to do that (otherwise `Map.get` has no method type parameter to be generic on).",
        "createdAt" : "2019-04-15T18:23:48Z",
        "updatedAt" : "2019-04-15T18:23:49Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0768134a7196f6150c9693b7161e88f45dff3159",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@Standard output:\nlib/Accessibility.js(118,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/Accessibility.js(310,7): error TS2322: Type 'string | number | boolean' is not assignable to type 'never'.\n  Type 'string' is not assignable to type 'never'.\nlib/Accessibility.js(333,7): error TS2322: Type 'string | number | true' is not assignable to type 'never'."
  },
  {
    "id" : "9e65fbed-f483-4b09-a792-e27c7b7958c4",
    "prId" : 30832,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/30832#pullrequestreview-224497204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba8cacc-d89a-4ef8-8d01-839add25db1f",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "numeric index signature means that `window[x] : Window` where `x: any`. And the arrow in question is not assignable to Window. ",
        "createdAt" : "2019-04-09T16:32:22Z",
        "updatedAt" : "2019-04-09T16:33:42Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "923c381e65d187e4569c91560c3066949ac8e72e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@lib/Page.js(369,20): error TS2503: Cannot find namespace 'Protocol'.\nlib/Page.js(432,7): error TS2740: Type '(...args: any[]) => Promise<any>' is missing the following properties from type 'Window': Blob, TextDecoder, TextEncoder, URL, and 231 more.\nlib/Page.js(442,9): error TS2349: Cannot invoke an expression whose type lacks a call signature. Type 'Window' has no compatible call signatures.\nlib/Page.js(478,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/Page.js(488,22): error TS2503: Cannot find namespace 'Protocol'."
  },
  {
    "id" : "ab9cea5e-a41f-4c76-8e57-9657765fa806",
    "prId" : 29336,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/29336#pullrequestreview-190997294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86257ee5-1a17-436c-8f93-93ae10c3baa3",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "looks good to me!",
        "createdAt" : "2019-01-09T23:50:09Z",
        "updatedAt" : "2019-01-09T23:50:09Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "5153fd184bfc722ac900b52fcee3a214203a8e22",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +65,69 @@lib/externs.d.ts(3,29): error TS2497: This module can only be referenced with ECMAScript imports/exports by turning on the 'allowSyntheticDefaultImports' flag and referencing its default export.\nlib/externs.d.ts(5,32): error TS2497: This module can only be referenced with ECMAScript imports/exports by turning on the 'allowSyntheticDefaultImports' flag and referencing its default export.\nlib/externs.d.ts(9,37): error TS2497: This module can only be referenced with ECMAScript imports/exports by turning on the 'allowSyntheticDefaultImports' flag and referencing its default export.\nlib/externs.d.ts(16,26): error TS2503: Cannot find namespace 'Protocol'.\nlib/externs.d.ts(16,69): error TS2503: Cannot find namespace 'Protocol'."
  },
  {
    "id" : "d0ccea97-df99-4d6b-ae8d-b75227a3b363",
    "prId" : 27498,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/27498#pullrequestreview-160801741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e992ce-3b50-4996-8af0-e911ec1b2664",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "`@types/node` got stricter in DefinitelyTyped/DefinitelyTyped#29151. Not sure this is a good thing.",
        "createdAt" : "2018-10-02T16:06:39Z",
        "updatedAt" : "2018-10-02T16:08:54Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "60a4b83b7d1baccabe9b381e069324bc0d0d8ea7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +27,31 @@  Type 'string' is not assignable to type 'number'.\nlib/FrameManager.js(773,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/Launcher.js(120,11): error TS2322: Type 'string[]' is not assignable to type 'StdioOptions'.\n  Type 'string[]' is not assignable to type '(number | \"inherit\" | Stream | \"pipe\" | \"ipc\" | \"ignore\")[]'.\n    Type 'string' is not assignable to type 'number | \"inherit\" | Stream | \"pipe\" | \"ipc\" | \"ignore\"'."
  },
  {
    "id" : "78f78568-fb9f-46a8-83e7-d958bca7ebac",
    "prId" : 26186,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26186#pullrequestreview-143352534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06f588f9-040b-4c63-af94-acf3ca48f4c8",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "Right. So this new error is a tad awkward and is cause by the index signature removal. Should an assignment like this be allowed? I looked at this - it looks like so:\r\n```ts\r\nconst headers = {}\r\nif (a) {\r\n  headers[\"foo\"] = \"whatever\";\r\n}\r\ndoThingWithIndexableObject(headers);\r\n```\r\n\r\nSo there's no _intent_ as far as types go there, but it worked before... I could patch it to work (allow assigning js literals to things with indexes), however the assignment is _certainly_ unsafe. I could have easily done\r\n```ts\r\nconst headers = {}\r\nif (a) {\r\n  headers[\"foo\"] = 42; // Not a string!\r\n}\r\ndoThingWithIndexableObject(headers);\r\n```\r\nand have hilarious runtime issues hidden by the `any` indexer. So I'm on the fence on this one. I kinda wanna just leave it like this, since this is certainly more correct. @sandersn @RyanCavanaugh ?",
        "createdAt" : "2018-08-03T21:34:24Z",
        "updatedAt" : "2018-08-03T21:34:24Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      },
      {
        "id" : "e393000d-def5-4792-91be-b393dc27ae28",
        "parentId" : "06f588f9-040b-4c63-af94-acf3ca48f4c8",
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "This is actually a new bug. I filed #26198 to track it.",
        "createdAt" : "2018-08-03T22:32:20Z",
        "updatedAt" : "2018-08-03T22:32:20Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "0309e8f429c6f4c332cad351bd2b7d1ad72655c7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@lib/FrameManager.js(773,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/NetworkManager.js(82,5): error TS2322: Type '{}' is not assignable to type '{ [x: string]: string; }'.\n  Index signature is missing in type '{}'.\nlib/NetworkManager.js(129,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/NetworkManager.js(174,15): error TS2503: Cannot find namespace 'Protocol'."
  },
  {
    "id" : "f6e362ac-0b8b-4688-bb2a-eb27ce65b697",
    "prId" : 26088,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26088#pullrequestreview-142030027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e07807cd-2ac3-4c15-a338-d814bd43989c",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "Bad use of `@enum`:\r\n\r\n```js\r\n/** @enum {string} */\r\nPage.PaperFormats = {\r\n  letter: { width: 8.5, height: 11 },\r\n  legal: { width: 8.5, height: 14 }\r\n}\r\n```\r\n\r\nShould be `@enum {{width: number, heigh: number}}`",
        "createdAt" : "2018-07-31T16:07:46Z",
        "updatedAt" : "2018-07-31T16:22:28Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f9676d2b6c1596d5d65b4856b7561b03f180245",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +40,44 @@lib/Page.js(407,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/Page.js(731,19): error TS2503: Cannot find namespace 'Protocol'.\nlib/Page.js(928,3): error TS2322: Type '{ [x: string]: any; width: number; height: number; }' is not assignable to type 'string'.\nlib/Page.js(929,3): error TS2322: Type '{ [x: string]: any; width: number; height: number; }' is not assignable to type 'string'.\nlib/Page.js(930,3): error TS2322: Type '{ [x: string]: any; width: number; height: number; }' is not assignable to type 'string'."
  },
  {
    "id" : "47fba338-27af-4139-8d1e-84693fdffba3",
    "prId" : 24952,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/24952#pullrequestreview-128995478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c88757a2-b98f-4b5a-a997-a86c31f099b3",
        "parentId" : null,
        "authorId" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "body" : "this error occurs because we now support `@this`.",
        "createdAt" : "2018-06-14T22:44:15Z",
        "updatedAt" : "2018-06-14T22:56:49Z",
        "lastEditedBy" : "2b0d3f17-3eae-4173-ad8a-73c9440bf608",
        "tags" : [
        ]
      }
    ],
    "commit" : "190609aca399690d21f31051df92eac19a94fd10",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +19,23 @@lib/EmulationManager.js(36,16): error TS2503: Cannot find namespace 'Protocol'.\nlib/ExecutionContext.js(22,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/ExecutionContext.js(87,15): error TS2304: Cannot find name 'Frame'.\nlib/ExecutionContext.js(132,15): error TS2503: Cannot find namespace 'Protocol'.\nlib/FrameManager.js(28,15): error TS2503: Cannot find namespace 'Protocol'."
  }
]