[
  {
    "id" : "f663aaf7-c45a-489f-8550-c256bd3868c8",
    "prId" : 26895,
    "prUrl" : "https://github.com/microsoft/TypeScript/pull/26895#pullrequestreview-152379921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b85bcb-05d9-444a-94b6-a1b22c2aaece",
        "parentId" : null,
        "authorId" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "body" : "We could avoid these baseline changes if we choose the last matching invokable instead of the first.",
        "createdAt" : "2018-09-05T08:14:21Z",
        "updatedAt" : "2018-09-05T22:12:31Z",
        "lastEditedBy" : "f7813195-22a2-4200-9f53-7aadb83a2cc9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0673762f10262209401765ea4bfd5810252b63c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +23,27 @@        Type 'string' is not assignable to type 'number'.\ntests/cases/conformance/types/union/contextualTypeWithUnionTypeObjectLiteral.ts(58,5): error TS2322: Type '(a: string, b: number) => string | number' is not assignable to type '((a: string, b: number) => string) | ((a: string, b: number) => number)'.\n  Type '(a: string, b: number) => string | number' is not assignable to type '(a: string, b: number) => string'.\n    Type 'string | number' is not assignable to type 'string'.\n      Type 'number' is not assignable to type 'string'."
  }
]