[
  {
    "id" : "f63d1f6a-d8f6-43b2-a466-ab34cee688f3",
    "prId" : 3844,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3844#pullrequestreview-552134223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19a9ffa3-9170-4dc4-b091-d708660ab8b5",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Rather than constructing multi-input / list output models in TensorFlow & scikit-learn, which requires the use of `onnxmltools` in order to export models in ONNX format, we instead reload pretrained / serialized models from the resources folder.\r\n\r\nIn order to preserve a true end-to-end example from training through inference, I've opted to include a `torch.onnx` workflow here in place of the preexisting  tf/keras workflow. This has the benefit of only depending on a single library (`torch`) as opposed to 2 libraries (`tensorflow` and `onnxmltools`).",
        "createdAt" : "2020-12-15T06:14:45Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "040e2fc3f53388eb30e3647f12e756368f1dab68",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +28,32 @@\nTEST_DIR = \"tests\"\nTEST_ONNX_RESOURCES_DIR = os.path.join(TEST_DIR, \"resources\", \"onnx\")\n\npytestmark = pytest.mark.skipif("
  },
  {
    "id" : "2d8d30b4-1582-41d5-aef4-4ae456e17508",
    "prId" : 3844,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3844#pullrequestreview-552134931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "405fcc99-fabc-4202-af06-cae3941dc28b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "The ONNX runtime no longer raises a `RuntimeError`. I considered removing this case along with casting behavior as discussed in the TODO comment on line 266, but it's not clear to me that https://github.com/mlflow/mlflow/issues/1286 was truly fixed (it appears to have been closed). I'm also not sure that tensor input schemas will fully address this use case. Accordingly, I've opted to keep the casting behavior and associated test case for now.",
        "createdAt" : "2020-12-15T06:16:30Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "040e2fc3f53388eb30e3647f12e756368f1dab68",
    "line" : 324,
    "diffHunk" : "@@ -1,1 +295,299 @@    )\n\n    with pytest.raises(Exception, match=\"Unexpected input data type\"):\n        pyfunc_loaded.predict(data_multiple_inputs.astype(\"int32\"))\n"
  },
  {
    "id" : "efd2bc5a-c9b9-40a1-a202-7c902cca2450",
    "prId" : 3844,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3844#pullrequestreview-552185958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e0b11fe-7703-4504-9260-cfd6c61433eb",
        "parentId" : null,
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "If [this comment](https://github.com/mlflow/mlflow/pull/3844/files?file-filters%5B%5D=.py#r543074478) is actually what you want to test, then why are you testing `onnx_sklearn_model `. Not the pytorch run",
        "createdAt" : "2020-12-15T07:11:40Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "146e580c-eed0-4342-9ab2-38b78f57a91f",
        "parentId" : "9e0b11fe-7703-4504-9260-cfd6c61433eb",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "The `onnx_sklearn_model` returns a list, unlike the PyTorch model. We test for compatibility with models that produce lists in `test_pyfunc_predict_supports_models_with_list_outputs`. I've added a clarifying inline comment.",
        "createdAt" : "2020-12-15T07:57:37Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "040e2fc3f53388eb30e3647f12e756368f1dab68",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +96,100 @@\n@pytest.fixture(scope=\"module\")\ndef onnx_sklearn_model():\n    \"\"\"\n    A scikit-learn model in ONNX format that is used to test the behavior"
  },
  {
    "id" : "c65ccd72-7707-45fb-9c3c-773cfff5bde2",
    "prId" : 3844,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3844#pullrequestreview-552185958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4635016-ea9f-45be-912f-71a11396b459",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Should we include the scripts for generating these onnx model files in this PR?",
        "createdAt" : "2020-12-15T07:15:14Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "6f4fabe0-fa23-4b93-8574-f2b0f56e6017",
        "parentId" : "f4635016-ea9f-45be-912f-71a11396b459",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Doh! Yes! Added them :) ",
        "createdAt" : "2020-12-15T08:15:15Z",
        "updatedAt" : "2020-12-15T08:37:32Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "040e2fc3f53388eb30e3647f12e756368f1dab68",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +124,128 @@@pytest.fixture(scope=\"module\")\ndef onnx_model_multiple_inputs_float64():\n    model_path = os.path.join(TEST_ONNX_RESOURCES_DIR, \"tf_model_multiple_inputs_float64.onnx\")\n    return onnx.load(model_path)\n"
  },
  {
    "id" : "e0cebadc-de69-4a64-9b57-01917313567e",
    "prId" : 2742,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2742#pullrequestreview-398613542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e88219eb-b26f-4cea-b63c-58d989f0358b",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "I think we might have to import `mlflow.onnx` here for this test to pass",
        "createdAt" : "2020-04-22T21:46:35Z",
        "updatedAt" : "2020-04-23T21:45:01Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ecc7abad7369938d48a816b8445103e801fdb49",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +454,458 @@    The issue resulted in an error because MLflow assumed it would be a numpy array. Therefore,\n    the this test validates the service does not receive that error when using such a model.\n    \"\"\"\n    import onnx\n    import mlflow.onnx"
  },
  {
    "id" : "3326811e-60f1-4121-86f4-540d3f5ddbbf",
    "prId" : 1127,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1127#pullrequestreview-232450600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb01914b-558c-42c7-a493-d4d7cb135356",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "The `onnxruntime` repo README indicates that the library is compatible with Python 3.5 and above (https://github.com/Microsoft/onnxruntime): \r\n\r\n```\r\nPython binaries are compatible with Python 3.5-3.7\r\n```\r\n\r\nCan we loosen this restriction to run tests against Python 3.5?",
        "createdAt" : "2019-04-29T22:21:58Z",
        "updatedAt" : "2019-06-03T05:45:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "d396ce5a-5bf9-4910-b98c-7df88ffd6dc6",
        "parentId" : "bb01914b-558c-42c7-a493-d4d7cb135356",
        "authorId" : "769ac4dd-ca08-4bc5-8fbc-5ed596bd9046",
        "body" : "I can do that but since mlflow is tested with Python 3.6, I thought it's better to specify that version.",
        "createdAt" : "2019-04-30T23:21:27Z",
        "updatedAt" : "2019-06-03T05:45:38Z",
        "lastEditedBy" : "769ac4dd-ca08-4bc5-8fbc-5ed596bd9046",
        "tags" : [
        ]
      }
    ],
    "commit" : "432c1de8fda039f755f765c169dc920f408a7d1f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@\npytestmark = pytest.mark.skipif(\n    (sys.version_info < (3, 6)),\n    reason=\"Tests require Python 3 to run!\")\n"
  },
  {
    "id" : "182b3aac-c4b9-4f69-9075-41b8da41f586",
    "prId" : 1127,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1127#pullrequestreview-231389327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaf84077-ab68-412a-aca3-6da2818ae62f",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Remove `large` mark because this is not a large test.",
        "createdAt" : "2019-04-29T22:56:47Z",
        "updatedAt" : "2019-06-03T05:45:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "432c1de8fda039f755f765c169dc920f408a7d1f",
    "line" : 352,
    "diffHunk" : "@@ -1,1 +350,354 @@\n\n@pytest.mark.large\ndef test_model_log_persists_specified_conda_env_in_mlflow_model_directory(onnx_model,\n                                                                          onnx_custom_env):"
  },
  {
    "id" : "3d490f7e-0528-4e88-8cff-faf9b896c921",
    "prId" : 1127,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1127#pullrequestreview-231389327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e403ac8-8e29-4670-9494-157d46597e28",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Remove `large` mark because this is not a large test.",
        "createdAt" : "2019-04-29T22:57:37Z",
        "updatedAt" : "2019-06-03T05:45:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "432c1de8fda039f755f765c169dc920f408a7d1f",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +316,320 @@\n\n@pytest.mark.large\ndef test_model_save_persists_specified_conda_env_in_mlflow_model_directory(\n        onnx_model, model_path, onnx_custom_env):"
  },
  {
    "id" : "cbef360a-d3e1-43c2-9e56-3f45ce271d0d",
    "prId" : 1127,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1127#pullrequestreview-231389327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7899e2aa-0a51-4caa-946f-0924559d708d",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Remove `large` mark because this is not a large test.",
        "createdAt" : "2019-04-29T22:57:43Z",
        "updatedAt" : "2019-06-03T05:45:38Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "432c1de8fda039f755f765c169dc920f408a7d1f",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +264,268 @@# TODO: Use the default conda environment once MLflow's Travis build supports the onnxruntime\n# library\n@pytest.mark.large\ndef test_model_log(tracking_uri_mock, onnx_model, onnx_custom_env):\n    # pylint: disable=unused-argument"
  }
]