[
  {
    "id" : "d48450e3-e85b-4754-8f94-4a24a69bafa1",
    "prId" : 9768,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9768#pullrequestreview-494566093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "parentId" : null,
        "authorId" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "body" : "Should the name be something like `extension-isBlack().` ? I think we can't name a method like that, but we can name  a method `extension_isBlack` Or is that not an issue?",
        "createdAt" : "2020-09-10T16:32:41Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "tags" : [
        ]
      },
      {
        "id" : "1b2caede-10e6-4d71-98c4-992f4be68ecb",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "Sorry, I'm not sure what you mean",
        "createdAt" : "2020-09-10T18:51:58Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "0b8f7eff-fa75-452d-a10e-9b451a8c8e9a",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "body" : "I am just wondering what is the string representation for extension methods (since basically everything is represented by string in semanticdb)  and can it not conflict with a normal method in the class prefixed with `extension_`\r\nIt is highly unlikely that a method like that will be created, but I wonder if we should maybe change the string representation for extension methods.",
        "createdAt" : "2020-09-11T06:01:11Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "tags" : [
        ]
      },
      {
        "id" : "6693048f-f1ac-440c-b545-91b303e9bee3",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "I see, there is a check in desugaring that proves only extension methods can have that prefix, although its probably not been enforced in macros",
        "createdAt" : "2020-09-11T08:12:58Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "34f45493-040c-4536-be3e-bf1dd3fe1956",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "actually it seems val/vars can also have this name ðŸ˜•",
        "createdAt" : "2020-09-11T08:18:57Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "2aaf4880-79b9-4371-a8d6-55e9aac88308",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "body" : "what do you think about using `extension-` to signal it's an extension? We can't use `-` in the name so it should be good.",
        "createdAt" : "2020-09-11T09:47:01Z",
        "updatedAt" : "2020-09-18T21:20:49Z",
        "lastEditedBy" : "b0a3e0ce-5278-4dad-8026-49b4b4041725",
        "tags" : [
        ]
      },
      {
        "id" : "b4c0cc5a-9435-47fc-a6cf-99eeb05201b1",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "so `extension [T,U](t: T) def <*>: (T,U) = ???` would be ```extension-`<*>`().```?",
        "createdAt" : "2020-09-23T09:01:20Z",
        "updatedAt" : "2020-09-23T09:01:21Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "427c5099-162e-4825-baa3-21391236b401",
        "parentId" : "3a623e2b-c564-48f8-983f-8361d173675e",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "the other alternative is that we add another Property kind (alongside FINAL, SEALED, etc.)",
        "createdAt" : "2020-09-23T11:38:50Z",
        "updatedAt" : "2020-09-23T11:38:51Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc9438204f6446e00589d61f424ef07a9989ba72",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +16,20 @@      suit/*->_empty_::Enums.Suits.extension_isRed().(suit)*/ ==/*->scala::Any#`==`().*/ Hearts/*->_empty_::Enums.Suits.Hearts.*/ ||/*->scala::Boolean#`||`().*/ suit/*->_empty_::Enums.Suits.extension_isRed().(suit)*/ ==/*->scala::Any#`==`().*/ Diamonds/*->_empty_::Enums.Suits.Diamonds.*/\n\n    extension (suit/*<-_empty_::Enums.Suits.extension_isBlack().(suit)*/: Suits/*->_empty_::Enums.Suits#*/) def isBlack/*<-_empty_::Enums.Suits.extension_isBlack().*/: Boolean/*->scala::Boolean#*/ = suit/*->_empty_::Enums.Suits.extension_isBlack().(suit)*/ match\n      case Spades/*->_empty_::Enums.Suits.Spades.*/ | Clubs/*->_empty_::Enums.Suits.Clubs.*/ => true\n      case _              => false"
  }
]