[
  {
    "id" : "312e3517-ea32-4d24-88d6-8254de95248e",
    "prId" : 7633,
    "prUrl" : "https://github.com/apache/airflow/pull/7633#pullrequestreview-373546722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5219a45-344d-4486-ab04-f8051f7de355",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n        Test that templated_fields exists for all Operators in Serialized DAG\r\n        \r\n        Since we don't want to inflate arbitrary python objects (it poses a RCE/security risk etc.) we want check that non-\"basic\" objects are turned in to strings after deserializing.\r\n```",
        "createdAt" : "2020-03-12T11:13:27Z",
        "updatedAt" : "2020-03-12T13:19:23Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "4d34da3e-79db-45f6-88fa-aecc727c8d31",
        "parentId" : "b5219a45-344d-4486-ab04-f8051f7de355",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Updated",
        "createdAt" : "2020-03-12T13:20:06Z",
        "updatedAt" : "2020-03-12T13:20:06Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c77bd7c92d79c3e71fc69d65a8341ba92c8869a",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +599,603 @@    def test_templated_fields_exist_in_serialized_dag(self, templated_field, expected_field):\n        \"\"\"\n        Test that templated_fields exists for all Operators in Serialized DAG\n\n        Since we don't want to inflate arbitrary python objects (it poses a RCE/security risk etc.)"
  },
  {
    "id" : "74d9cc04-f492-46e2-89c7-fa5574fab4da",
    "prId" : 8772,
    "prUrl" : "https://github.com/apache/airflow/pull/8772#pullrequestreview-408676832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bea98830-6235-4c4a-b302-a650c1b19726",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "@kaxil this is the case that means we need to check the MRO for defaults.\n\nI think storing all non-defaults is nicer anyway - we can show these in the UI that way",
        "createdAt" : "2020-05-09T19:09:47Z",
        "updatedAt" : "2020-05-09T22:37:28Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d28a7c0da64d0918cf2d4c820a78720ce3954fb",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +693,697 @@        self.assertEqual(set(DAG.get_serialized_fields()), dag_params)\n\n    def test_operator_subclass_changing_base_defaults(self):\n        assert BaseOperator(task_id='dummy').do_xcom_push is True, \\\n            \"Precondition check! If this fails the test won't make sense\""
  },
  {
    "id" : "f9c4dba5-155e-470f-b3d5-a24c2d653823",
    "prId" : 12530,
    "prUrl" : "https://github.com/apache/airflow/pull/12530#pullrequestreview-538069419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8403a65a-0a9f-4596-b6d7-fa3f82293fb9",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Was my suggestion here not valid then @houqp, given you said:\r\n\r\n\r\n> Depends on how you use the context manager. with DAG(): works as expected, but we have huge DAGs (> 9K loc) in production that would be a lot easier to maintain without that extra indentation introduced with the with block. So we are using DagContext.push_context_managed_dag(dag) directly in the DAG definition. This is what triggered the crash.\r\n\r\nI.e. does this actually test the code you need it to?",
        "createdAt" : "2020-11-24T09:56:49Z",
        "updatedAt" : "2020-11-24T09:56:49Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "6436a719-3a8a-4688-9659-446a12979970",
        "parentId" : "8403a65a-0a9f-4596-b6d7-fa3f82293fb9",
        "authorId" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "body" : "your suggestion is still valid, calling serialization within the with block means the dummy task will be created with a DAG pushed to the top of dag context. it covers the same edge case, it's just not how some of our DAGs are written :)",
        "createdAt" : "2020-11-25T00:25:31Z",
        "updatedAt" : "2020-11-25T00:25:32Z",
        "lastEditedBy" : "00f2d683-1e14-4545-aec8-d448205f3465",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4288f91f3df56ab53ee10640ee22b007f130295",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +449,453 @@\n    def test_deserialization_with_dag_context(self):\n        with DAG(dag_id='simple_dag', start_date=datetime(2019, 8, 1, tzinfo=timezone.utc)) as dag:\n            BaseOperator(task_id='simple_task')\n            # should not raise RuntimeError: dictionary changed size during iteration"
  },
  {
    "id" : "6a7b365e-c66d-4c64-8e0f-8b967dc5f448",
    "prId" : 14909,
    "prUrl" : "https://github.com/apache/airflow/pull/14909#pullrequestreview-616872151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5bea28a-37ff-4e37-8f40-88f54a88d7fa",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "This is to take care of the following code:\r\n\r\nhttps://github.com/apache/airflow/blob/2f32df7b711cf63d18efd5e0023b22a79040cc86/airflow/serialization/serialized_objects.py#L190-L193",
        "createdAt" : "2021-03-20T01:43:52Z",
        "updatedAt" : "2021-03-20T20:01:02Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "997eb9e1a6a1a5878fbd98a996ac1db596b4a59a",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1053,1057 @@        serialized_obj = SerializedDAG._serialize(object_to_serialized)\n        if isinstance(serialized_obj, dict) and \"__type\" in serialized_obj:\n            serialized_obj = serialized_obj[\"__var\"]\n        assert serialized_obj == expected_output\n"
  }
]