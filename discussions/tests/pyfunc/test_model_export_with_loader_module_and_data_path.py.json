[
  {
    "id" : "8fb0cd9e-4532-4bfa-913a-849704809db6",
    "prId" : 3808,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3808#pullrequestreview-555711944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3206577-7722-45b8-97da-ed0fe24833b8",
        "parentId" : null,
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Can we also test that his works if the schema has no column names?",
        "createdAt" : "2020-12-18T17:37:01Z",
        "updatedAt" : "2020-12-21T19:44:39Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      },
      {
        "id" : "76446d41-05ee-4c20-b3dc-7fe9f5254585",
        "parentId" : "f3206577-7722-45b8-97da-ed0fe24833b8",
        "authorId" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "body" : "i think this case is tested [here](https://github.com/mlflow/mlflow/pull/3808/files/eaa1adc24505080fcb35a82c7508a3cb9b1d5966#diff-d2db4c32cb1efe50d5cb6196b5e24a807707c07e5806ac8e60c569d6ca3ce8dfR360) under `test_schema_enforcement_no_col_names`",
        "createdAt" : "2020-12-18T18:19:30Z",
        "updatedAt" : "2020-12-21T19:44:39Z",
        "lastEditedBy" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "tags" : [
        ]
      }
    ],
    "commit" : "b515a54d7e1dda24141c4615b42df81f58863060",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +269,273 @@\n    # 8. np.ndarrays can be converted to dataframe but have no columns\n    with pytest.raises(MlflowException) as ex:\n        pyfunc_model.predict(pdf.values)\n    assert \"Model input is missing columns\" in str(ex)"
  },
  {
    "id" : "a27bc147-c32b-4cc5-8af4-af62ecc7099f",
    "prId" : 3798,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3798#pullrequestreview-550658844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b68c990-975f-461e-8ba9-eeaad80811e2",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "For completeness, do we need to test `double -> long` and `double -> float`?",
        "createdAt" : "2020-12-11T23:55:04Z",
        "updatedAt" : "2020-12-12T00:51:57Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "da890618-f617-4efa-aed5-9175680d00e1",
        "parentId" : "7b68c990-975f-461e-8ba9-eeaad80811e2",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "We might as well",
        "createdAt" : "2020-12-12T00:16:27Z",
        "updatedAt" : "2020-12-12T00:51:57Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "243b813a2c8dba66f5f74327e818cac147bf682d",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +236,240 @@    pdf[\"d\"] = pdf[\"d\"].astype(np.float64)\n\n    # 10. any float -> any int raises\n    pdf[\"a\"] = pdf[\"a\"].astype(np.float32)\n    with pytest.raises(MlflowException) as ex:"
  },
  {
    "id" : "922f3331-8f6a-4b24-a49d-235f82220d7d",
    "prId" : 1514,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/1514#pullrequestreview-254889244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc352ac-baf1-41fa-8638-b1e18fbf1ce4",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "As a sanity check, can we add a line that confirms `mlflow.active_run() == None` before we call `mlflow.pyfunc.log_model`?",
        "createdAt" : "2019-06-26T21:45:50Z",
        "updatedAt" : "2019-06-27T18:53:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "196d53cb0ea5b52c5b55db1ed01f5c00d1eecac6",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +102,106 @@    pyfunc_artifact_path = \"pyfunc_model\"\n    assert mlflow.active_run() is None\n    mlflow.pyfunc.log_model(artifact_path=pyfunc_artifact_path,\n                            data_path=sk_model_path,\n                            loader_module=os.path.basename(__file__)[:-3],"
  }
]