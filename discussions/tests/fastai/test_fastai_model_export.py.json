[
  {
    "id" : "7a95494e-4e8e-493a-bbd6-9992b7c6b3f4",
    "prId" : 2689,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2689#pullrequestreview-400559833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61cd4319-3988-4bbf-9473-9181ca9ef050",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Could we update this test to verify that the reloaded model produces the same raw output as the original model, in addition to verifying correctness of the `_FastAiModelWrapper` output? e.g. something like:\r\n\r\n```\r\ndef test_model_save_load(fastai_model, model_path):\r\n    model = fastai_model.model\r\n\r\n    mlflow.fastai.save_model(fastai_learner=model, path=model_path)\r\n    reloaded_model = mlflow.fastai.load_model(model_uri=model_path)\r\n    # Verify reloaded model computes same predictions as original model\r\n    test_data = TabularList.from_df(fastai_model.inference_dataframe)\r\n    model.data.add_test(test_data)\r\n    real_preds, real_target = map(lambda output: output.numpy(), model.get_preds(DatasetType.Test))\r\n    reloaded_model.data.add_test(test_data)\r\n    reloaded_preds, reloaded_target = map(lambda output: output.numpy(), reloaded_model.get_preds(DatasetType.Test))\r\n    np.testing.assert_array_almost_equal(real_preds, reloaded_preds)\r\n    np.testing.assert_array_almost_equal(real_target, reloaded_target)\r\n\r\n    # Verify pyfunc produces same output as raw model\r\n    reloaded_pyfunc = pyfunc.load_model(model_uri=model_path)\r\n    pyfunc_predictions = reloaded_pyfunc.predict(fastai_model.inference_dataframe)\r\n\r\n    assert len(pyfunc_predictions) == len(real_preds)\r\n    assert set(pyfunc_predictions.columns) == {\"predictions\", \"target\"}\r\n    for i, prediction_arr in enumerate(pyfunc_predictions[\"predictions\"]):\r\n        np.testing.assert_array_almost_equal(real_preds[i], prediction_arr)\r\n    for i, target in enumerate(pyfunc_predictions[\"target\"]):\r\n        assert real_target[i] == target\r\n```",
        "createdAt" : "2020-04-26T23:09:39Z",
        "updatedAt" : "2020-04-28T06:11:47Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "55298b5c5d3a67d8fa6fbd14804538c4cf243592",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@\n@pytest.mark.large\ndef test_model_save_load(fastai_model, model_path):\n    model = fastai_model.model\n"
  }
]