[
  {
    "id" : "92351bfd-9679-4e25-acd3-ea1a5a55ccce",
    "prId" : 4119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4119#pullrequestreview-599327488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c01cfff6-0541-4016-b7e9-c54a6aa09980",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we move these tests in a separate test function to make it easier to debug?",
        "createdAt" : "2021-02-26T07:55:54Z",
        "updatedAt" : "2021-03-03T08:09:54Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "228d54cfc0b09d6b60302a9b2eadd85766bd9fa1",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +656,660 @@    assert not _check_version_in_range(\"0.99.99\", \"1.0.1\", \"1.0.3\")\n    assert not _check_version_in_range(\"1.1.0\", \"1.0.1\", \"1.0.3\")\n    assert _check_version_in_range(\"1.0.3\", \"1.0.1\", \"1.0.3.post1\")\n\n"
  },
  {
    "id" : "4c655b80-9432-4ffc-a12e-672e90d47245",
    "prId" : 4119,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4119#pullrequestreview-602111534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88903454-5574-4b77-9d27-f75e215db4ca",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Why do we need to clear `AUTOLOGGING_INTEGRATIONS` each time? I'd expect the warning message to fire even if a preexisting autologging configuration was present. Let me know if I'm missing something here.",
        "createdAt" : "2021-03-02T05:38:19Z",
        "updatedAt" : "2021-03-03T08:09:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "2c0c22ac-86a0-4f14-841c-14038402a243",
        "parentId" : "88903454-5574-4b77-9d27-f75e215db4ca",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "According to the setup_autologging code, \r\nif we called  a specific lib autolog first, then call universal autolog, then the latter universal autolog won't change the specific autolog config (this case when calling universal autolog, the specific lib `autolog_fn(**autologging_params)` won't be called again, so won't fire the warning again):\r\n```\r\n            # Only call integration's autolog function with `mlflow.autolog` configs\r\n            # if the integration's autolog function has not already been called by the user.\r\n            # Logic is as follows:\r\n            # - if a previous_config exists, that means either `mlflow.autolog` or\r\n            #   `mlflow.integration.autolog` was called.\r\n            # - if the config contains `CONF_KEY_IS_GLOBALLY_CONFIGURED`, the configuration\r\n            #   was set by `mlflow.autolog`, and so we can safely call `autolog_fn` with\r\n            #   `autologging_params`.\r\n            # - if the config doesn't contain this key, the configuration was set by an\r\n            #   `mlflow.integration.autolog` call, so we should not call `autolog_fn` with\r\n            #   new configs.\r\n```",
        "createdAt" : "2021-03-02T09:01:51Z",
        "updatedAt" : "2021-03-03T08:09:54Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "ee12bea6-0425-4025-86c4-fef34d1b72c7",
        "parentId" : "88903454-5574-4b77-9d27-f75e215db4ca",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Got it :)! Thanks!",
        "createdAt" : "2021-03-02T18:02:43Z",
        "updatedAt" : "2021-03-03T08:09:54Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "228d54cfc0b09d6b60302a9b2eadd85766bd9fa1",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +751,755 @@\n    with mock.patch(\"sklearn.__version__\", \"0.20.3\"):\n        AUTOLOGGING_INTEGRATIONS.clear()\n        with mock.patch(log_warn_fn_name) as log_warn_fn, mock.patch(\n            log_info_fn_name"
  },
  {
    "id" : "01b34b7b-98f1-47af-a17a-29175528ec69",
    "prId" : 3957,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3957#pullrequestreview-564662768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67226abe-f309-48cc-8287-810783a415e9",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "@dbczumar\r\n\r\nCan we add `pytest.warns` here to ensure the deprecation warning is emitted?\r\n\r\n```python\r\nwith pytest.warns(DeprecationWraning, match=\"Receivied 1 positional arugments\"):\r\n        AutologgingEventLogger.get_logger().log_autolog_called(\r\n            \"test_integration\", (\"a\"), {\"b\": 1, \"c\": \"d\"}\r\n        )\r\n```",
        "createdAt" : "2021-01-09T00:32:30Z",
        "updatedAt" : "2021-01-09T00:44:21Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "cd3dd488-d0a4-4ac5-ad77-842cf98410be",
        "parentId" : "67226abe-f309-48cc-8287-810783a415e9",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Added a separate test case for this.",
        "createdAt" : "2021-01-09T00:38:23Z",
        "updatedAt" : "2021-01-09T00:44:21Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "8e954809-4562-473b-bc37-d5895bbd3353",
        "parentId" : "67226abe-f309-48cc-8287-810783a415e9",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "I just saw https://github.com/mlflow/mlflow/pull/3957/files#diff-040921246593fba29d003ad475ba69ca9e9149f4df85d4aaf5f6d7c9407aaefaR634 :)",
        "createdAt" : "2021-01-09T00:39:00Z",
        "updatedAt" : "2021-01-09T00:44:21Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e017e7a129cac0e6af5d54bc886a892d4adbd97",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +588,592 @@    AutologgingEventLogger.get_logger().log_autolog_called(\n        \"test_integration\", (\"a\"), {\"b\": 1, \"c\": \"d\"}\n    )\n    AutologgingEventLogger.get_logger().log_patch_function_start(\n        AutologgingSession(\"test_integration\", \"123\"), PatchObj(), \"test_fn\", (1000), {\"a\": 2}"
  }
]