[
  {
    "id" : "2b8c6f01-7196-43a5-8f67-573ed98a3c45",
    "prId" : 4173,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4173#pullrequestreview-614619073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbda3a14-8af7-4652-b013-864bda214b61",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Since some of our tests reassign `stderr` to a test stream to ensure that no content is written during silent mode, this fixture is used to reset `stderr` at the end of each test.",
        "createdAt" : "2021-03-17T17:47:01Z",
        "updatedAt" : "2021-03-26T00:10:56Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "becef61f28e9166eca3411a8e0acdef801113c21",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +53,57 @@\n@pytest.fixture(autouse=True)\ndef reset_stderr():\n    prev_stderr = sys.stderr\n    yield"
  },
  {
    "id" : "b6056b41-8f6d-46ed-839c-bf1ef2d1fbfc",
    "prId" : 4173,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4173#pullrequestreview-614619528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c77c89c-c130-4fbe-ba66-76a49cad3b91",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Since some of our tests disable MLflow event logging to test silent mode, this fixture is used to re-enable MLflow event logging at the end of each test.",
        "createdAt" : "2021-03-17T17:47:28Z",
        "updatedAt" : "2021-03-26T00:10:56Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "becef61f28e9166eca3411a8e0acdef801113c21",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +59,63 @@\n\n@pytest.fixture(autouse=True)\ndef reset_logging_enablement():\n    yield"
  },
  {
    "id" : "718ecf79-7775-425e-badb-4f43ff5495c4",
    "prId" : 4173,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4173#pullrequestreview-619254306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28047845-6136-4846-a621-e774e73629eb",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Moved from `tests/autologging/test_autologging_safety_unit.py` for reuse across multiple test suites",
        "createdAt" : "2021-03-24T02:23:26Z",
        "updatedAt" : "2021-03-26T00:10:56Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "becef61f28e9166eca3411a8e0acdef801113c21",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@\n@pytest.fixture\ndef patch_destination():\n    class PatchObj:\n        def __init__(self):"
  },
  {
    "id" : "9e9e0eed-2abd-4f23-b60a-3f02351b6fcf",
    "prId" : 4173,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4173#pullrequestreview-621662583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2baa7d1f-7330-4542-90e6-acefbe4a2b42",
        "parentId" : null,
        "authorId" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "body" : "What does this line do? I don't have context how this function is used.",
        "createdAt" : "2021-03-25T00:28:39Z",
        "updatedAt" : "2021-03-26T00:10:56Z",
        "lastEditedBy" : "ae7dd827-9f9e-4fb6-b1ba-d051793e929e",
        "tags" : [
        ]
      },
      {
        "id" : "3793430b-d006-408f-b1c6-451159e4b38e",
        "parentId" : "2baa7d1f-7330-4542-90e6-acefbe4a2b42",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Great question! Pytest fixtures can be used as generators: all code after the `yield` is executed after the test case terminates as a teardown procedure. For reference: https://docs.pytest.org/en/stable/fixture.html#yield-fixtures-recommended",
        "createdAt" : "2021-03-25T23:46:46Z",
        "updatedAt" : "2021-03-26T00:12:04Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "becef61f28e9166eca3411a8e0acdef801113c21",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +61,65 @@@pytest.fixture(autouse=True)\ndef reset_logging_enablement():\n    yield\n    logging_utils.enable_logging()"
  },
  {
    "id" : "c6c13a7c-d21a-456c-80d0-018c40bed0b2",
    "prId" : 3859,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3859#pullrequestreview-554424014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d574e5e-82f8-4eaa-abd5-bf635fb70dfe",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "I've refactored these fixtures to move away from mocking `autologging_utils._is_testing`, which is only effective if a module calls `autologging_utils._is_testing` without re-importing the `_is_testing` function. If we rely purely on environment variables (which are unit tested in the autologging safety suite), mocking challenges are avoided.",
        "createdAt" : "2020-12-17T09:32:49Z",
        "updatedAt" : "2020-12-18T08:47:55Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a9e86b6c2addaa063c8690260b50cd71702022",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +9,13 @@def test_mode_off():\n    try:\n        prev_env_var_value = os.environ.pop(_AUTOLOGGING_TEST_MODE_ENV_VAR, None)\n        os.environ[_AUTOLOGGING_TEST_MODE_ENV_VAR] = \"false\"\n        assert not _is_testing()"
  }
]