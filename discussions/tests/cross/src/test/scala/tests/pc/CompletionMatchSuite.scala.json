[
  {
    "id" : "61855487-2087-4b83-a3f9-747a09dbf1e5",
    "prId" : 1787,
    "prUrl" : "https://github.com/scalameta/metals/pull/1787#pullrequestreview-425426294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fe7631a-dbe1-471f-80ac-ca51c3ebff2c",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Could we maybe add a test also with `def testExhaustive[T <: TestA](test: T): Boolean =`\r\n\r\nTo be sure it works without refinement too?",
        "createdAt" : "2020-06-05T15:02:50Z",
        "updatedAt" : "2020-06-05T16:00:28Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "da3166d5-4b10-4b06-ad44-52c062da724f",
        "parentId" : "6fe7631a-dbe1-471f-80ac-ca51c3ebff2c",
        "authorId" : "888c7596-690b-4510-8c6d-7a358228cfd9",
        "body" : "Added",
        "createdAt" : "2020-06-05T15:56:31Z",
        "updatedAt" : "2020-06-05T16:00:28Z",
        "lastEditedBy" : "888c7596-690b-4510-8c6d-7a358228cfd9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dbc361817838563154efde0e38d589afc1909ac",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +287,291 @@      |\n      |object Main {\n      |  def testExhaustive[T <: TestA with TestB](test: T): Boolean =\n      |    test m@@\n      |}\"\"\".stripMargin,"
  },
  {
    "id" : "b8a6adf8-5da0-46fd-b0a8-698971e14cea",
    "prId" : 1254,
    "prUrl" : "https://github.com/scalameta/metals/pull/1254#pullrequestreview-338412620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a939a6d9-f59c-48a2-a12f-8d8317ecb246",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "here's an example. You could technically also do \r\n\r\n```suggestion\r\n    \"exhaustive-fully-qualify\".tag(Tag.ExpectedFailure),\r\n```\r\n\r\nbut since we'll reasonably have a few tags, I opted for a utility \"DSL\" method",
        "createdAt" : "2020-01-05T17:06:10Z",
        "updatedAt" : "2020-01-05T17:30:54Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "1ff5b311-946f-491b-abff-0c5ed6026288",
        "parentId" : "a939a6d9-f59c-48a2-a12f-8d8317ecb246",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I think it's fine to have a method here to ease discovery.",
        "createdAt" : "2020-01-05T17:38:33Z",
        "updatedAt" : "2020-01-05T17:40:53Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c01432863b62a73bbfb809ed6739a6bf33ed62f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +188,192 @@  // https://github.com/scalameta/metals/issues/1253\n  checkEdit(\n    \"exhaustive-fully-qualify\".expectedToFail,\n    \"\"\"\n      |package example"
  },
  {
    "id" : "08470c7e-6317-4b86-b959-6c224d5a1291",
    "prId" : 1174,
    "prUrl" : "https://github.com/scalameta/metals/pull/1174#pullrequestreview-331842863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8718245e-d8ee-4184-97ba-737ec673101a",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Can we add another cross test case for 3rd party defined symbols? Cross tests have the ability to index library dependencies, see `indexScalaLibrary()`",
        "createdAt" : "2019-12-13T12:36:29Z",
        "updatedAt" : "2019-12-16T12:57:43Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d5f96fb977b6c73c44b8b5c061480393ecb1c82",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +109,113 @@\n  checkEdit(\n    \"exhaustive-sorting\",\n    \"\"\"package sort\n      |sealed abstract class TestTree"
  },
  {
    "id" : "98021892-eb8f-4ae1-8426-a41bc945725a",
    "prId" : 712,
    "prUrl" : "https://github.com/scalameta/metals/pull/712#pullrequestreview-234584167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "339642ba-d1e4-4d03-bfb7-f760c15738d9",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Is this used any other way than `_ => false` or `_=> true` ? It could just be a flag then",
        "createdAt" : "2019-05-07T14:52:35Z",
        "updatedAt" : "2019-05-24T13:32:42Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "b7910165-78f7-4d21-974a-43aa3611b3bf",
        "parentId" : "339642ba-d1e4-4d03-bfb7-f760c15738d9",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "The `filter: String => Boolean` parameter is identical to the `checkEditLine` method.",
        "createdAt" : "2019-05-07T15:17:43Z",
        "updatedAt" : "2019-05-24T13:32:42Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c468269d2e0e47b5eaffc75cab0b2c825678b7fe",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +45,49 @@      |\"\"\".stripMargin,\n    \"\",\n    filter = _ => false\n  )\n  if (!isScala211)"
  }
]