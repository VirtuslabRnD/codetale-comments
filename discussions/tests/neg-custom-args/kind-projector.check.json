[
  {
    "id" : "a1c836f5-516f-4ade-95b1-f47037fd0be6",
    "prId" : 8082,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8082#pullrequestreview-351011311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c34f42-c340-4015-981a-a71e325a74d6",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This looks wrong to me,  `[_$1]` is not a bound, it's a type parameter list.",
        "createdAt" : "2020-01-30T13:36:47Z",
        "updatedAt" : "2020-01-31T13:40:50Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "a947fa88-9f93-466f-bed0-83690f6d1a42",
        "parentId" : "98c34f42-c340-4015-981a-a71e325a74d6",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "It's the way we print bounds now. An abstract type\r\n```scala\r\ntype A >: Nothing <: [X] => X\r\n```\r\nprints as \r\n```scala\r\ntype A[X] <: X\r\n```\r\nEverything after the `A` is the bound. I think it's ultimately better this way since it is closer to the source but it might need some fine tuning.\r\n",
        "createdAt" : "2020-01-30T17:11:03Z",
        "updatedAt" : "2020-01-31T13:40:50Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "b73af4a4-ca89-47b0-b53a-5fa3964fbce7",
        "parentId" : "98c34f42-c340-4015-981a-a71e325a74d6",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I see, I think if the error message did not elide the Any and printed `...its bound [_$1] <: Any` it'd be clearer",
        "createdAt" : "2020-01-30T17:35:03Z",
        "updatedAt" : "2020-01-31T13:40:50Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "2396fe9ddec940c8f7bbadc99577e12fadadc752",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +6,10 @@5 |class Bar1 extends Foo[Either[*, *]] // error\n  |                       ^^^^^^^^^^^^\n  |                       Type argument Either has not the same kind as its bound [_$1]\n-- Error: tests/neg-custom-args/kind-projector.scala:6:22 --------------------------------------------------------------\n6 |class Bar2 extends Foo[*] // error"
  }
]