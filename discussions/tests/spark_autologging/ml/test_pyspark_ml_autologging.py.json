[
  {
    "id" : "2a275f4d-a092-43ab-ac46-f0ada3b7ed4c",
    "prId" : 4270,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4270#pullrequestreview-648787964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86c0bded-8081-49e1-a647-97c193560bd4",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Can we extract `best_params` from `model` instead of hard-coding it ([example](https://stackoverflow.com/a/43794841/6943581))?\r\n\r\n",
        "createdAt" : "2021-04-29T13:28:07Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "0e659447-d72b-4a26-820b-3656897387c9",
        "parentId" : "86c0bded-8081-49e1-a647-97c193560bd4",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "We can. But here, I want to test: it always search out the best param : `{\"LinearRegression.maxIter\": 200, \"LinearRegression.standardization\": True}`, \r\nThis is for testing whether the \"best_parameter\" selection logic works correctly.\r\nNote: I copied some lines code from ml tuning, the test here is to ensure the copied code works correctly, see https://github.com/mlflow/mlflow/pull/4270/files#r623506659\r\nThat's also the reason I test 2 metrics \"rmse\" and \"r2\" here, one metric is \"smaller better\" and another \"larger better\", so they will cover the 2 branch in the copied code logic.",
        "createdAt" : "2021-04-30T00:21:39Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "ecc76408-b85c-4074-b7d2-4a3d4d6f1798",
        "parentId" : "86c0bded-8081-49e1-a647-97c193560bd4",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Ah I see. It makse sense now. Thanks for the explanation!",
        "createdAt" : "2021-04-30T00:58:25Z",
        "updatedAt" : "2021-05-05T02:46:17Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "9746c89394a56e29985e2e7c0b2a9de1cc1dfa8b",
    "line" : 270,
    "diffHunk" : "@@ -1,1 +372,376 @@        {lr.maxIter: 2, lr.standardization: False},\n    ]\n    best_params = {\"LinearRegression.maxIter\": 200, \"LinearRegression.standardization\": True}\n    eva = RegressionEvaluator(metricName=metric_name)\n    estimator = param_search_estimator(estimator=lr, estimatorParamMaps=lrParamMaps, evaluator=eva)"
  },
  {
    "id" : "645f0617-fb8e-4cf1-86df-8c6b8ec800cd",
    "prId" : 4263,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4263#pullrequestreview-641747672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4599ad96-2311-4678-8631-9d8da28bf3d3",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@WeichenXu123 can we add some test coverage for `_get_instance_param_map` to ensure that it's producing a reasonable set of parameters? Otherwise, this test would pass even if the parameters returned by `_get_instance_param_map` were broken / incorrect.",
        "createdAt" : "2021-04-22T03:28:00Z",
        "updatedAt" : "2021-04-23T05:38:18Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "24bab0edc04e8f775977e26985d367031440c313",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +305,309 @@        run_data = get_run_data(run_id)\n        assert run_data.params == truncate_param_dict(\n            stringify_dict_values(_get_instance_param_map(estimator))\n        )\n        assert run_data.tags == get_expected_class_tags(estimator)"
  }
]