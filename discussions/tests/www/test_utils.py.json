[
  {
    "id" : "9ef63f1b-f6fa-44af-a987-b2d1b244acf0",
    "prId" : 3937,
    "prUrl" : "https://github.com/apache/airflow/pull/3937#pullrequestreview-161253435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1d53a38-0430-4df5-90a8-5430c536ddf4",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Thanks -I see what I did wrong and came to fix it to find you'd done it already :)",
        "createdAt" : "2018-10-03T16:33:19Z",
        "updatedAt" : "2018-10-03T19:32:18Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bdea186ee84ed794f4245cd0573322a60c7d041",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +144,148 @@                mocked_session_instance.add.assert_called_once()\n\n    @mock.patch(\"flask_login.utils._get_user\")\n    @mock.patch(\"airflow.settings.Session\")\n    def test_action_logging_with_invalid_user(self, mocked_session, mocked_get_user):"
  },
  {
    "id" : "ea9e2451-eed9-4501-9362-8ae53ed25a32",
    "prId" : 4911,
    "prUrl" : "https://github.com/apache/airflow/pull/4911#pullrequestreview-214410897",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92ed4a32-47e1-4919-8f3f-1307d7074da8",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "`assertRegex` is not available in Python 2.*.\r\n\r\nThis change is causing failures in the three Py 2.7 tests",
        "createdAt" : "2019-03-14T06:21:03Z",
        "updatedAt" : "2019-03-15T15:56:17Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "829d50c5-16ff-4487-a927-59ac035d94de",
        "parentId" : "92ed4a32-47e1-4919-8f3f-1307d7074da8",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "https://pythonhosted.org/six/#six.assertRegex\r\nIt's available, but with different name. You should a six package to ensure compatibility. ",
        "createdAt" : "2019-03-14T06:42:26Z",
        "updatedAt" : "2019-03-15T15:56:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "60c76686-bfd9-4869-a2fa-e2efabdd4fad",
        "parentId" : "92ed4a32-47e1-4919-8f3f-1307d7074da8",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh whoops. The other way we've dealt with this in the past is to use `import unittest2 as unittest` (which is a py2-only dep already). For consistency I'll do that",
        "createdAt" : "2019-03-14T09:58:30Z",
        "updatedAt" : "2019-03-15T15:56:17Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d8fe64a15b9c228654441166a5ba85d0a5f8ef",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +84,88 @@                self.assertIn('active', item['class'])\n            else:\n                self.assertRegex(href_link, r'^\\?', 'Link is page-relative')\n                query = parse_qs(href_link[1:])\n                self.assertListEqual(query['page'], [str(int(node_text) - 1)])"
  }
]