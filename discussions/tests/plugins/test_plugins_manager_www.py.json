[
  {
    "id" : "bcd7edda-4a60-40c7-8f81-53c809c98b4c",
    "prId" : 4412,
    "prUrl" : "https://github.com/apache/airflow/pull/4412#pullrequestreview-191954670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42e5725f-e75c-44d3-968e-32a8aad39d02",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "are these two unit test only worked for old UI? If not I would suggest to move to test_plugins_manager_rbac.py once we delete the old UI code, we will remove this unit test file as well.",
        "createdAt" : "2019-01-10T20:34:39Z",
        "updatedAt" : "2019-01-10T22:18:01Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "a83e7c8e-5c1a-41be-af8c-561f8b137477",
        "parentId" : "42e5725f-e75c-44d3-968e-32a8aad39d02",
        "authorId" : "89215173-b24c-4c10-96fd-18a104284519",
        "body" : "I'm not sure, as I haven't touched on the UI parts of the code base yet.\r\n\r\nThis code is not really anything to do with the UI as far as I'm aware. Or at least, it's not specific to one UI or the other. When I pulled the above PR changes in, this is where my code was move to, so the old test/plugin_manager.py file was renamed to this.\r\n\r\ntl;dr it's not UI specific(?), so I'm not sure where it goes.",
        "createdAt" : "2019-01-10T20:38:01Z",
        "updatedAt" : "2019-01-10T22:18:01Z",
        "lastEditedBy" : "89215173-b24c-4c10-96fd-18a104284519",
        "tags" : [
        ]
      },
      {
        "id" : "80899341-3296-4538-bcc0-8b93349e2deb",
        "parentId" : "42e5725f-e75c-44d3-968e-32a8aad39d02",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I guess we could leave it as it is now. But FYI, the old UI and new UI depends on different flask framework which works a bit differently with the plugin manager(e.g. old UI could integrate with blueprint while old UI could not etc). But tldr: let's leave it as it is now.",
        "createdAt" : "2019-01-10T23:06:39Z",
        "updatedAt" : "2019-01-10T23:06:39Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "367c8515-4fb3-4adb-afdd-53d733b9a2f8",
        "parentId" : "42e5725f-e75c-44d3-968e-32a8aad39d02",
        "authorId" : "89215173-b24c-4c10-96fd-18a104284519",
        "body" : "From what I've seen so far, the plugin manager loads the plugins, and dumps their respective components (hooks, operators, blueprints, etc) into lists and then it's up to other components to decide which lists to reference.\r\n\r\nI'm happy to put in another PR to move it so keep thing Cleanâ„¢, but I'm not sure where it'd go. Are there plans for the old UI to be deprecated at a time in the future? That could solve the problem.",
        "createdAt" : "2019-01-12T23:00:39Z",
        "updatedAt" : "2019-01-12T23:00:39Z",
        "lastEditedBy" : "89215173-b24c-4c10-96fd-18a104284519",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d8783586c7f25eb448add547e895f03870334f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +89,93 @@\n\nclass PluginsTestEntrypointLoad(unittest.TestCase):\n\n    def setUp(self):"
  }
]