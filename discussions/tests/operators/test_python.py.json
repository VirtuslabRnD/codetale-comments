[
  {
    "id" : "309b68a3-ab93-4e95-91e1-3319c4a4e468",
    "prId" : 7276,
    "prUrl" : "https://github.com/apache/airflow/pull/7276#pullrequestreview-358993254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88448f79-ff95-4e73-939f-4cd3b85b3fb6",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "What is this change for? It seems unrelated to your change.",
        "createdAt" : "2020-02-14T09:41:01Z",
        "updatedAt" : "2020-02-21T10:14:30Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "aa50de7c-cb79-4cb6-bd17-0c45564aa4ae",
        "parentId" : "88448f79-ff95-4e73-939f-4cd3b85b3fb6",
        "authorId" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "body" : "I was changing this from `Exception` to `ValueError` in one of the new test cases I added following previous suggestions from reviewers. So I replaced the same usage in this test module too. I will revert this change if you prefer leaving the existing code untouched.",
        "createdAt" : "2020-02-14T10:02:28Z",
        "updatedAt" : "2020-02-21T10:14:30Z",
        "lastEditedBy" : "f85ef659-e88b-40c6-856b-c86350e0d001",
        "tags" : [
        ]
      },
      {
        "id" : "c268a46c-2b1e-459f-94e8-40526b42a59d",
        "parentId" : "88448f79-ff95-4e73-939f-4cd3b85b3fb6",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Cool keep it",
        "createdAt" : "2020-02-14T14:50:51Z",
        "updatedAt" : "2020-02-21T10:14:30Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "685735ae9b51a791677f8454f838b2130938ba0d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +398,402 @@                    self.assertEqual(ti.state, State.SKIPPED)\n                else:\n                    raise ValueError(f'Invalid task id {ti.task_id} found!')\n\n    def test_branch_list_without_dag_run(self):"
  },
  {
    "id" : "bec72961-422f-4082-8034-381caa371f66",
    "prId" : 8962,
    "prUrl" : "https://github.com/apache/airflow/pull/8962#pullrequestreview-417033794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aa18300-5def-4044-83b0-46ff6894f063",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Do defaults work? We should add a test for that I think.",
        "createdAt" : "2020-05-22T10:30:44Z",
        "updatedAt" : "2020-06-23T18:02:27Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "8d3f3423-302b-4aca-a1c9-6d53b9ea963f",
        "parentId" : "5aa18300-5def-4044-83b0-46ff6894f063",
        "authorId" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "body" : "They do. I can add a test.",
        "createdAt" : "2020-05-22T17:04:01Z",
        "updatedAt" : "2020-06-23T18:02:27Z",
        "lastEditedBy" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dd411303e2604e1e0a81d91b186b189733db332",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +530,534 @@\n        @task_decorator\n        def add_num(number: int, num2: int = 2):\n            return number + num2\n"
  },
  {
    "id" : "2de23641-99b4-4101-bd4f-24ff49c0c651",
    "prId" : 10349,
    "prUrl" : "https://github.com/apache/airflow/pull/10349#pullrequestreview-470709865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de64d27a-05f2-42c1-9753-cbbdb794eec1",
        "parentId" : null,
        "authorId" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "body" : "What happens if I manually set `multiple_outputs=False` but it has annotations? ",
        "createdAt" : "2020-08-18T15:44:53Z",
        "updatedAt" : "2020-12-09T14:44:39Z",
        "lastEditedBy" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "tags" : [
        ]
      },
      {
        "id" : "c7e8cc1e-df84-4402-bfaf-6d7233f446cb",
        "parentId" : "de64d27a-05f2-42c1-9753-cbbdb794eec1",
        "authorId" : "27db609f-0fec-47c4-baac-a9a768a9fae8",
        "body" : "Hmm ohh good q, right now it would override but handling that would make this more complex too, like if we set it to none by default and only infer from typings if it's None, ",
        "createdAt" : "2020-08-18T18:36:48Z",
        "updatedAt" : "2020-12-09T14:44:39Z",
        "lastEditedBy" : "27db609f-0fec-47c4-baac-a9a768a9fae8",
        "tags" : [
        ]
      },
      {
        "id" : "b814af42-3a12-44d9-8d96-62949991033a",
        "parentId" : "de64d27a-05f2-42c1-9753-cbbdb794eec1",
        "authorId" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "body" : "Yup, I would vote in favour of using the None strategy you just mentioned",
        "createdAt" : "2020-08-18T18:45:32Z",
        "updatedAt" : "2020-12-09T14:44:39Z",
        "lastEditedBy" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "tags" : [
        ]
      },
      {
        "id" : "453bcbec-57c8-4022-95b8-9ee71edff541",
        "parentId" : "de64d27a-05f2-42c1-9753-cbbdb794eec1",
        "authorId" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "body" : "Let's add a test regarding this new case where is set to false and annotations are set.",
        "createdAt" : "2020-08-19T17:59:06Z",
        "updatedAt" : "2020-12-09T14:44:39Z",
        "lastEditedBy" : "d22b786b-b06e-462c-a530-7ee1b6ae12d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "046f519153a2c8a8e0b2d2a84dbe3536eea525b3",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +402,406 @@        assert ti.xcom_pull(key=\"return_value_0\") is None\n        assert ti.xcom_pull(key=\"return_value_1\") is None\n\n    def test_fails_bad_signature(self):\n        \"\"\"Tests that @task will fail if signature is not binding.\"\"\""
  }
]