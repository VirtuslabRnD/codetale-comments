[
  {
    "id" : "eb6b7f71-84db-45a4-92a0-548a5ce1d898",
    "prId" : 4195,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4195#pullrequestreview-618216672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4276feac-8321-4719-8039-95f6fceaec16",
        "parentId" : null,
        "authorId" : "9b00f760-3323-47e3-bb69-3add3073befc",
        "body" : "Just making sure, did this test fail without your change above?",
        "createdAt" : "2021-03-22T19:37:58Z",
        "updatedAt" : "2021-03-23T05:27:02Z",
        "lastEditedBy" : "9b00f760-3323-47e3-bb69-3add3073befc",
        "tags" : [
        ]
      },
      {
        "id" : "91b27ba5-5bf6-48bb-b969-325f6568fdeb",
        "parentId" : "4276feac-8321-4719-8039-95f6fceaec16",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Oh yeah, big time. It still fails against TF 2.0.4 - will need to look into that before merging",
        "createdAt" : "2021-03-22T19:54:03Z",
        "updatedAt" : "2021-03-23T05:27:02Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "24154d3a-57ac-485f-919c-27f9b2dcb6ea",
        "parentId" : "4276feac-8321-4719-8039-95f6fceaec16",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Fixed the 2.0.4 issue (needed to apply similar fix logic to our patch for `fit_generator()`, which is only relevant for TF < 2.1.0 (e.g. 2.0.4))",
        "createdAt" : "2021-03-23T05:29:45Z",
        "updatedAt" : "2021-03-23T05:29:51Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bd723e33525cef9608ec58e3296808ba3731232",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +461,465 @@@pytest.mark.parametrize(\"fit_variant\", [\"fit\", \"fit_generator\"])\n@pytest.mark.parametrize(\"positional\", [True, False])\ndef test_tf_keras_autolog_does_not_mutate_original_callbacks_list(\n    tmpdir, random_train_data, random_one_hot_labels, fit_variant, positional\n):"
  },
  {
    "id" : "bd16357d-6e5f-41ee-b274-c470084f4740",
    "prId" : 4101,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4101#pullrequestreview-589937745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136fb1e1-a947-46d3-9e1d-b82326430b2b",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Fix for this error:\r\n\r\nhttps://github.com/mlflow/mlflow/runs/1891436216#step:5:321\r\n\r\n```\r\nE           mlflow.exceptions.MlflowException: Got invalid value bar for metric 'foo' (timestamp=100). Please specify value as a valid double (64-bit floating point)\r\n```\r\n\r\nand\r\n\r\nhttps://github.com/mlflow/mlflow/runs/1891792593#step:5:331\r\n\r\n```\r\nE           mlflow.exceptions.MlflowException: Run with id=run_id1 not found\r\n```",
        "createdAt" : "2021-02-13T03:09:43Z",
        "updatedAt" : "2021-02-13T06:18:32Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff75b3333bde3d5f693352b0db912d3845d2ea04",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +678,682 @@    client = mlflow.tracking.MlflowClient()\n    run = client.create_run(experiment_id=\"0\")\n    metric_queue_item = (run.info.run_id, Metric(\"foo\", 0.1, 100, 1))\n    mlflow.tensorflow._metric_queue.append(metric_queue_item)\n"
  },
  {
    "id" : "7ea55fcb-dfcf-48b7-805b-872ac08b3af2",
    "prId" : 4097,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4097#pullrequestreview-590948423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a0dabfa-91da-474a-a6b4-59b254e5272e",
        "parentId" : null,
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "Based on classifier that extends EstimatorV2:\r\n\r\nsee: [DNNClassifierV2](https://github.com/tensorflow/estimator/blob/master/tensorflow_estimator/python/estimator/canned/dnn.py#L593-L594)",
        "createdAt" : "2021-02-16T07:39:19Z",
        "updatedAt" : "2021-02-16T20:24:42Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b75343af4e1c85418c84da67b7905e0ae66d216",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +567,571 @@        )\n    else:\n        classifier = tf.estimator.DNNClassifier(\n            feature_columns=my_feature_columns,\n            # Two hidden layers of 10 nodes each."
  },
  {
    "id" : "9468568c-3d29-4264-b72c-05f677cd86dc",
    "prId" : 4097,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4097#pullrequestreview-590949056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6bb4476-602b-478d-b61c-8d30be173f4d",
        "parentId" : null,
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "Based on classifier that extends Estimator:\r\n\r\nsee: [DNNClassifier](https://github.com/tensorflow/estimator/blob/master/tensorflow_estimator/python/estimator/canned/dnn.py#L770-L771)",
        "createdAt" : "2021-02-16T07:40:22Z",
        "updatedAt" : "2021-02-16T20:24:42Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b75343af4e1c85418c84da67b7905e0ae66d216",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +558,562 @@    # If flag set to false, then use the v2 classifier that extends EstimatorV2\n    if use_v1_estimator:\n        classifier = tf.compat.v1.estimator.DNNClassifier(\n            feature_columns=my_feature_columns,\n            # Two hidden layers of 10 nodes each."
  },
  {
    "id" : "74e8a6f3-372c-4b0b-a2c0-356ee6226ebb",
    "prId" : 3735,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3735#pullrequestreview-538205375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11bf1fab-1ecf-48d1-8101-8f4444f84d56",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "As per https://github.com/tensorflow/tensorflow/issues/38618, manually constructing `ProgbarLogger` produces an infinity-related arithmetic error on recent versions of TensorFlow. Accordingly, we swap in a simpler, valid callback here instead.",
        "createdAt" : "2020-11-25T07:07:00Z",
        "updatedAt" : "2020-11-26T00:31:10Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc2957ff2b6882e6c2b73b437c7c6f434ee09bd",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +244,248 @@    else:\n\n        class CustomCallback(tf.keras.callbacks.Callback):\n            def on_train_end(self, logs=None):\n                print(\"Training completed\")"
  },
  {
    "id" : "39646049-5b19-4f32-8e61-af865a4f9340",
    "prId" : 3723,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3723#pullrequestreview-542654138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25a51cf4-1eee-4fcd-8ddd-32a63b55da93",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Is there a non-tf-keras test case that we should add? Vanilla TensorFlow workflows are also important here.",
        "createdAt" : "2020-12-02T04:27:08Z",
        "updatedAt" : "2020-12-03T08:37:47Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "73ac0ac2-8f1e-4975-bbd9-f40ff41b262a",
        "parentId" : "25a51cf4-1eee-4fcd-8ddd-32a63b55da93",
        "authorId" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "body" : "No. We only add batch metrics logger to tf.keras `fit` and `fit_generator`.  We don't use the logger for Vanilla TensorFlow. For `tf.estimator` we use TensorBoard to log metrics, and  that already has a custom batching solution implemented `_metric_queue`. Correct me if I am wrong",
        "createdAt" : "2020-12-02T09:30:24Z",
        "updatedAt" : "2020-12-03T08:37:47Z",
        "lastEditedBy" : "c7dda55d-9e2b-478f-9c63-d6cdec83a883",
        "tags" : [
        ]
      },
      {
        "id" : "c94c116c-9c5a-4231-87f6-ebe405e58fda",
        "parentId" : "25a51cf4-1eee-4fcd-8ddd-32a63b55da93",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Right! We had this discussion previously. Thanks for the reminder!",
        "createdAt" : "2020-12-02T09:40:16Z",
        "updatedAt" : "2020-12-03T08:37:47Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffc8b8e2ec950e7532a387cc7f49dc05851bc6c3",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +313,317 @@@pytest.mark.parametrize(\"patience\", [0, 1, 5])\n@pytest.mark.parametrize(\"initial_epoch\", [0, 10])\ndef test_tf_keras_autolog_batch_metrics_logger_logs_expected_metrics(\n    callback, restore_weights, patience, initial_epoch\n):"
  },
  {
    "id" : "4268ce99-5eb7-4c78-a743-37ff24759271",
    "prId" : 2094,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2094#pullrequestreview-317287704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2be09420-0d93-4b3f-8590-66e37776d0fa",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Hm how does this test work? As it stands, it only pass if we have `manual_run=True` (because otherwise the run we log metrics etc & the run we log the saved model under will be different?)",
        "createdAt" : "2019-11-14T04:46:14Z",
        "updatedAt" : "2019-11-19T01:55:37Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "6e3ca8d1-06cf-4cf4-acbd-803edf9420bb",
        "parentId" : "2be09420-0d93-4b3f-8590-66e37776d0fa",
        "authorId" : "e71c4958-9dfb-45f1-bc0b-6dd7ac6aef54",
        "body" : "It works because the fixture `tf_estimator_random_data_run` would return the most recent run, where in both cases of `manual_run=True` and `manual_run=False` would return the run where the model is logged.",
        "createdAt" : "2019-11-14T21:57:45Z",
        "updatedAt" : "2019-11-19T01:55:37Z",
        "lastEditedBy" : "e71c4958-9dfb-45f1-bc0b-6dd7ac6aef54",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef49a17e1bf649ad100e1f57b8e1a11ec7197129",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +247,251 @@@pytest.mark.parametrize('export', [True])\ndef test_tf_estimator_autolog_model_can_load_from_artifact(tf_estimator_random_data_run):\n    artifacts = client.list_artifacts(tf_estimator_random_data_run.info.run_id)\n    artifacts = map(lambda x: x.path, artifacts)\n    assert 'model' in artifacts"
  }
]