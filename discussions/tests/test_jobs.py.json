[
  {
    "id" : "0d029a49-0e37-427c-bef3-121491df4f5b",
    "prId" : 4808,
    "prUrl" : "https://github.com/apache/airflow/pull/4808#pullrequestreview-218024009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0dba4e0-dda3-4c43-825a-a231fc33a865",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "nit: you mean `Unlike SchedulerJob, BackfillJobs are allowed to not respect start dates` ?",
        "createdAt" : "2019-03-23T03:11:35Z",
        "updatedAt" : "2019-03-23T03:19:41Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "4546f827-a1c9-4a2a-bf33-ffbd0977c5bd",
        "parentId" : "f0dba4e0-dda3-4c43-825a-a231fc33a865",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "@dima-asana , WDYT?",
        "createdAt" : "2019-03-23T03:21:34Z",
        "updatedAt" : "2019-03-23T03:21:34Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e2931573c6f05fea1aacbca6cedd764d9b807cd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +2438,2442 @@        scheduler = SchedulerJob(dag_id, num_runs=2)\n        # we can't use dag.run or evaluate_dagrun because it uses BackfillJob\n        # instead of SchedulerJob and BackfillJobs are allowed to not respect start dates\n        scheduler.run()\n"
  },
  {
    "id" : "14d54347-94a5-4486-b5c7-87d2a6d7a22f",
    "prId" : 4968,
    "prUrl" : "https://github.com/apache/airflow/pull/4968#pullrequestreview-218205251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "@feng-tao may be necessary to update the docstring of this test case as well? Currently it's `DagRuns with one successful and one future root task -> SUCCESS`",
        "createdAt" : "2019-03-25T05:57:22Z",
        "updatedAt" : "2019-03-25T06:21:03Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "e804e457-b9ae-4af9-beb4-58094729ecae",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "I think in real scenario it will only have success state for the dagRun. The issue only happens in unit test as we don't wait / sleep to retrieve the result during CI test for speeding up the CI test effort hence we sometimes(or in some ORM) get the running state for the task which the dagrun state is still running.",
        "createdAt" : "2019-03-25T06:18:31Z",
        "updatedAt" : "2019-03-25T06:21:03Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "49cfb26a-a91b-44d5-ad9a-ce4bec1ada9e",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "updated with a note.",
        "createdAt" : "2019-03-25T06:21:04Z",
        "updatedAt" : "2019-03-25T06:21:04Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "df686641-68bc-4071-8063-9de62a011f43",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Not sure if I'm missing anything, but I'm thinking if it would be better/clearer to just add a sleep here If the race condition only occurs in this test case?",
        "createdAt" : "2019-03-25T06:47:24Z",
        "updatedAt" : "2019-03-25T06:47:24Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "195f9142-a3ff-4840-991b-a0afbe870ffa",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "@XD-DENG , you could take a look at more on this pr(https://github.com/apache/airflow/pull/4730/files) as it tries to speed up the CI time.",
        "createdAt" : "2019-03-25T06:52:07Z",
        "updatedAt" : "2019-03-25T06:52:07Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "683d3df4-5152-4f7a-9f92-228850eb4b36",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Very similar to https://github.com/apache/airflow/pull/4737/files",
        "createdAt" : "2019-03-25T08:51:45Z",
        "updatedAt" : "2019-03-25T08:51:45Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f15e8683-dd03-4f44-a5c6-b9ebc037f03b",
        "parentId" : "3649bbb2-dcfa-4707-ace4-70469aac29f8",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Thanks @feng-tao for the clarification.",
        "createdAt" : "2019-03-25T09:00:06Z",
        "updatedAt" : "2019-03-25T09:00:06Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5e6c4742a68cec5436c47aab5c6cd41a0da5b48",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +2556,2560 @@\n        self.assertEqual(ti_ids, [('current', State.SUCCESS)])\n        self.assertIn(first_run.state, [State.SUCCESS, State.RUNNING])\n\n    def test_dagrun_deadlock_ignore_depends_on_past_advance_ex_date(self):"
  },
  {
    "id" : "1e495f92-8584-46cd-8491-8896c9c3225d",
    "prId" : 5128,
    "prUrl" : "https://github.com/apache/airflow/pull/5128#pullrequestreview-228860396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92f447ba-de71-449b-8e41-49305f5d90f4",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Since we have now three similar methods (pool_limit and concurrency_limit and test_backfill_with_no_pool_limit ) maybe we could actually test if the right limit has been reached by inspecting the log output. It should be fairly easy with mocking the log.debug method and checking the log produced as all three methods produce different method. Then the assertions could be more accurate (and we could actually check that the right limits are limiting us).",
        "createdAt" : "2019-04-19T18:02:46Z",
        "updatedAt" : "2019-04-20T02:20:59Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "875d66a5-26e2-4e0d-8bed-2924aaf91ae9",
        "parentId" : "92f447ba-de71-449b-8e41-49305f5d90f4",
        "authorId" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "body" : "Agree. I have updated the tests to inspect `log.debug` and verify that we are hitting the right threshold.",
        "createdAt" : "2019-04-20T01:24:45Z",
        "updatedAt" : "2019-04-20T02:20:59Z",
        "lastEditedBy" : "7fbede4f-85b0-4371-a620-3b1f92a91855",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7ea91860c2d7da0dc0d022d19838a991255cc10",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +348,352 @@        self.assertEquals(8, num_running_task_instances)\n        self.assertTrue(concurrency_limit_reached_at_least_once)\n\n        times_concurrency_limit_reached_in_debug = self._times_called_with(\n            mock_log.debug,"
  }
]