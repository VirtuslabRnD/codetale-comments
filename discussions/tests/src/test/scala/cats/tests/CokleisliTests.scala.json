[
  {
    "id" : "4e09fb70-1a9c-4a55-a068-7d155c313b2e",
    "prId" : 1766,
    "prUrl" : "https://github.com/typelevel/cats/pull/1766#pullrequestreview-50959065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2bd87fb-56f5-48cf-afd9-8bd091fce414",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "I think we need to add a test for `Cokleisli[F, ?, ?]` as well (maybe the existing one using `NonEmptyList`)?\r\n\r\nNitpicking, can we put these `CommutativeArrow` tests not between the `MonoidK` and `SemigroupK` tests?",
        "createdAt" : "2017-07-19T15:44:44Z",
        "updatedAt" : "2017-07-19T16:07:07Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      },
      {
        "id" : "a441a694-31dd-4aaf-b5fe-b3e686200c81",
        "parentId" : "d2bd87fb-56f5-48cf-afd9-8bd091fce414",
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "addressed. ",
        "createdAt" : "2017-07-19T16:07:18Z",
        "updatedAt" : "2017-07-19T16:07:18Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f34c6e512e51298c0d704f49c6feeefb607efced",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +53,57 @@    checkAll(\"Cokleisli[Id, Int, Int]\", CommutativeArrowTests[Cokleisli[Id, ?, ?]].commutativeArrow[Int, Int, Int, Int, Int, Int])\n    checkAll(\"CommutativeArrow[Cokleisli[Id, ?, ?]]\", SerializableTests.serializable(CommutativeArrow[Cokleisli[Id, ?, ?]]))\n  }\n\n  test(\"contramapValue with Id consistent with lmap\"){"
  },
  {
    "id" : "ad863fe2-f173-4750-9a68-eb0325512fea",
    "prId" : 1759,
    "prUrl" : "https://github.com/typelevel/cats/pull/1759#pullrequestreview-48455995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "301b14e9-ce9a-4d96-9738-3909bd18832a",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "`Cokleisli`'s `SemigroupK` instance just needs a `CoflatMap[F]` so I replaced `NonEmptyList` with `List`.",
        "createdAt" : "2017-07-06T20:37:38Z",
        "updatedAt" : "2017-07-06T21:18:17Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8354c0fcf749767c58b03202405668686bfd2fe",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +47,51 @@\n  checkAll(\"Cokleisli[List, Int, Int]\", SemigroupKTests[λ[α => Cokleisli[List, α, α]]].semigroupK[Int])\n  checkAll(\"SemigroupK[λ[α => Cokleisli[List, α, α]]]\", SerializableTests.serializable(SemigroupK[λ[α => Cokleisli[List, α, α]]]))\n\n  test(\"contramapValue with Id consistent with lmap\"){"
  }
]