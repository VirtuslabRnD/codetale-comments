[
  {
    "id" : "8799aa25-ddf8-4628-8ed5-4c77441d327d",
    "prId" : 1759,
    "prUrl" : "https://github.com/typelevel/cats/pull/1759#pullrequestreview-48455995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "541f379b-df82-4143-8c87-245a9761d749",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "Keeping `minSuccessful` as it is set in `CatsSuite` only seems to add around half a second to the total test time of `WriterTTests`.",
        "createdAt" : "2017-07-06T20:39:49Z",
        "updatedAt" : "2017-07-06T21:18:17Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8354c0fcf749767c58b03202405668686bfd2fe",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +17,21 @@  // issues.\n  implicit override val generatorDrivenConfig: PropertyCheckConfiguration =\n    checkConfiguration.copy(sizeRange = 5)\n\n  checkAll(\"WriterT[List, Int, Int]\", OrderLaws[WriterT[List, Int, Int]].eqv)"
  },
  {
    "id" : "a863d00b-04bd-48d5-8205-d11e00f7262f",
    "prId" : 1752,
    "prUrl" : "https://github.com/typelevel/cats/pull/1752#pullrequestreview-48494012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1eb2565e-c985-459f-9967-f9fc71a0b4f8",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "Should we add `SerializableTests` for the `Monoid` instance of `WriterT`?\r\n\r\nAnd for the `Semigroup` instance below as well?",
        "createdAt" : "2017-07-06T10:57:51Z",
        "updatedAt" : "2017-07-14T18:36:59Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      },
      {
        "id" : "3ae6865c-fd19-4c5a-846e-6ecdc62dbd79",
        "parentId" : "1eb2565e-c985-459f-9967-f9fc71a0b4f8",
        "authorId" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "body" : "Added.",
        "createdAt" : "2017-07-06T23:59:02Z",
        "updatedAt" : "2017-07-14T18:36:59Z",
        "lastEditedBy" : "b084ae12-948e-41db-b85f-097bb81e5826",
        "tags" : [
        ]
      }
    ],
    "commit" : "2989d4509a1a3172f4e9ca811cded199f04dc40b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +340,344 @@\n    Monoid[Writer[Int, Int]]\n    checkAll(\"Writer[Int, Int]\", kernel.laws.GroupLaws[Writer[Int, Int]].monoid)\n  }\n"
  },
  {
    "id" : "cb8e6c78-3eeb-45b3-b6a2-4236e5c4f82a",
    "prId" : 1049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a58defef-cc7f-4bfc-86e1-baa911a1bbff",
        "parentId" : null,
        "authorId" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "body" : "need to check serializability\n",
        "createdAt" : "2016-05-20T20:00:37Z",
        "updatedAt" : "2016-05-21T14:54:08Z",
        "lastEditedBy" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "82443c9f68f54c53a9836c89d3cb16e99d208946",
    "line" : null,
    "diffHunk" : "@@ -1,1 +276,280 @@    Functor[WriterT[ListWrapper, Int, ?]]\n    CoflatMap[WriterT[ListWrapper, Int, ?]]\n    checkAll(\"WriterT[Listwrapper, Int, ?]\", CoflatMapTests[WriterT[ListWrapper, Int, ?]].coflatMap[Int, Int, Int])\n    checkAll(\"WriterT[ListWrapper, Int, ?]\", SerializableTests.serializable(CoflatMap[WriterT[ListWrapper, Int, ?]]))\n"
  },
  {
    "id" : "e7528c8b-2c97-40b5-b814-154258e6ecc9",
    "prId" : 1049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c1d4aa2-0f57-40bb-ad49-5331e274e13c",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Could you also summon the `Functor[WriterT[Id, Int, ?]]` and ``Functor[WriterT[ListWrapper, Int, ?]]` to ensure there aren't ambiguity issues with the `Functor` instances?\n",
        "createdAt" : "2016-05-21T11:27:23Z",
        "updatedAt" : "2016-05-21T14:54:08Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "82443c9f68f54c53a9836c89d3cb16e99d208946",
    "line" : null,
    "diffHunk" : "@@ -1,1 +281,285 @@    // Id has a Functor\n    Functor[WriterT[Id, Int, ?]]\n    CoflatMap[WriterT[Id, Int, ?]]\n  }\n}"
  }
]