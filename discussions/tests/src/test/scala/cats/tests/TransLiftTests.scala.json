[
  {
    "id" : "7b59615e-4575-4d2e-9b9e-1c1965700b06",
    "prId" : 853,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ff7cd21-4b4f-416e-ba3b-8948ae20c054",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "FWIW, there are `ListWrapper` helpers for this sort of thing.\n",
        "createdAt" : "2016-02-02T11:56:02Z",
        "updatedAt" : "2016-02-02T11:56:02Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6750c3e9da6a1622ec5d0dcc0bcca3337565e33",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@  case class JustAp[A](a: A)\n\n  implicit val jfApp: Applicative[JustAp] = new Applicative[JustAp] {\n    override def pure[A](a: A): JustAp[A] = JustAp(a)\n    override def ap[A, B](ff: JustAp[A => B])(fa: JustAp[A]): JustAp[B] = JustAp(ff.a(fa.a))"
  },
  {
    "id" : "d29d6a8e-10fb-4765-b138-7511bb2fc1b9",
    "prId" : 853,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10d81730-f694-4379-b133-72c9b7c11bb9",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "I think it would be good to have a test to see if we can lift a `ValidatedNel` into some transformers. I suspect it would reveal that we currently can't use syntax to do that because we don't have `Unapply`-based syntax.\n",
        "createdAt" : "2016-02-02T11:57:25Z",
        "updatedAt" : "2016-02-02T11:57:25Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6750c3e9da6a1622ec5d0dcc0bcca3337565e33",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@    val e: Kleisli[NoTypeclass, Int, Int] = NoTypeclass(1).liftT[({type λ[α[_], β] = Kleisli[α, Int, β]})#λ]\n  }\n}"
  }
]