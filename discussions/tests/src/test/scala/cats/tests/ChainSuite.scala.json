[
  {
    "id" : "8dd69e27-5ab1-4685-a91b-d745ea03b52e",
    "prId" : 2996,
    "prUrl" : "https://github.com/typelevel/cats/pull/2996#pullrequestreview-276912902",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8e831da-cd1c-47b4-a7c7-0698fb45b261",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "Nit can we use 'init' and 'last' instead of h and t?",
        "createdAt" : "2019-08-20T03:17:35Z",
        "updatedAt" : "2019-08-20T03:22:52Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "23908b79c196818307112c0fd3388c5d8467e04b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +88,92 @@    Chain(1, 2, 3) match {\n      case init :== last => (init, last) should ===(Chain(1, 2) -> 3)\n    }\n\n  }"
  },
  {
    "id" : "9ca9882a-6718-4143-b5ba-6c57281d59ff",
    "prId" : 2610,
    "prUrl" : "https://github.com/typelevel/cats/pull/2610#pullrequestreview-174940942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0f0c9bc-4edd-4fe5-8683-962ef0fb2598",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "nitpick: this doesn't test the None scenario. How about \r\n\r\n```scala\r\nforAll { (s: Seq[Int]) =>\r\n      Chain.fromSeq(s).headOption should ===(s.headOption)\r\n    }\r\n```",
        "createdAt" : "2018-11-14T15:21:17Z",
        "updatedAt" : "2018-11-14T15:59:34Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "0e312953-627f-4d61-b02b-f042e9bb736e",
        "parentId" : "e0f0c9bc-4edd-4fe5-8683-962ef0fb2598",
        "authorId" : "ce9cc6fe-d087-4e61-af3c-d6e934c9aa8e",
        "body" : "Addressed. Thanks.",
        "createdAt" : "2018-11-14T16:05:32Z",
        "updatedAt" : "2018-11-14T16:05:32Z",
        "lastEditedBy" : "ce9cc6fe-d087-4e61-af3c-d6e934c9aa8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "af0a6afa558174761103d5b4554ee122e3b2a00b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +57,61 @@  }\n\n  test(\"headOption\") {\n    forAll { (s: Seq[Int]) =>\n      Chain.fromSeq(s).headOption should ===(s.headOption)"
  }
]