[
  {
    "id" : "cbb67f0e-4f40-4429-b7b9-09a7f6d2b475",
    "prId" : 751,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c707034-3a89-4aea-b9db-26719cc615ab",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "I was surprised to see that these aren't already provided. I consider it outside of the scope of this PR, but I think we should follow up on this and add these instances in the `OneAnd` companion object.\n",
        "createdAt" : "2015-12-15T13:06:01Z",
        "updatedAt" : "2015-12-15T13:06:01Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "9b8ef127-16de-4fbd-92dd-8c248c6a0bb0",
        "parentId" : "0c707034-3a89-4aea-b9db-26719cc615ab",
        "authorId" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "body" : "Agreed on both counts.\n",
        "createdAt" : "2015-12-15T13:25:23Z",
        "updatedAt" : "2015-12-15T13:25:23Z",
        "lastEditedBy" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "tags" : [
        ]
      }
    ],
    "commit" : "9938d341b8a306d3e973d7d715225fc81d3b4e38",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@      new NonEmptyReducible[NonEmptyVector, Vector] {\n        def split[A](fa: NonEmptyVector[A]): (A, Vector[A]) = (fa.head, fa.tail)\n      }\n\n    implicit val reducibleListVector: Reducible[Lambda[A => NonEmptyList[NonEmptyVector[A]]]] = nelReducible compose nevReducible"
  }
]