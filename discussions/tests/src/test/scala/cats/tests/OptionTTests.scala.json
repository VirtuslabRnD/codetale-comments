[
  {
    "id" : "f8029d25-4574-42ab-9016-504b6aaec6f4",
    "prId" : 1103,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "318c10aa-1f27-4907-b804-af20d2791002",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "`MonadErrorTests` is working now, but I had to supply all the `Arbitrary` and `Eq` instances myself, I don't know if there is a better way ?\n",
        "createdAt" : "2016-06-10T20:59:28Z",
        "updatedAt" : "2016-06-14T11:27:55Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      },
      {
        "id" : "737f6039-1bfe-4b05-b8e4-459ed20ff5f6",
        "parentId" : "318c10aa-1f27-4907-b804-af20d2791002",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "The better way is probably #1073 but let's hold off on that for this PR.\n",
        "createdAt" : "2016-06-11T12:52:22Z",
        "updatedAt" : "2016-06-14T11:27:55Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "2183b75c376c4f349e3dc3736d00f57e554c51d5",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +101,105 @@    implicit val iso = CartesianTests.Isomorphisms.invariant[OptionT[SXor, ?]]\n\n    checkAll(\"OptionT[String Xor ?, Int]\", MonadErrorTests[OptionT[SXor, ?], String].monadError[Int, Int, Int])\n    checkAll(\"MonadError[OptionT[String Xor ?, ?]]\", SerializableTests.serializable(monadError))\n"
  }
]