[
  {
    "id" : "893b543d-b9c9-4ce8-955a-acdfbd56fa66",
    "prId" : 549,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67d00503-e65f-4dd2-84a0-47cd73ade514",
        "parentId" : null,
        "authorId" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "body" : "Doesn't `order` include both `partialOrder` and `eqv` ?\n",
        "createdAt" : "2015-09-30T23:41:44Z",
        "updatedAt" : "2015-09-30T23:41:44Z",
        "lastEditedBy" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "tags" : [
        ]
      },
      {
        "id" : "d412627d-e472-435e-b84b-b465869b58ce",
        "parentId" : "67d00503-e65f-4dd2-84a0-47cd73ade514",
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Please see comment by one @adelbertc: https://github.com/non/cats/blob/master/tests/src/test/scala/cats/tests/ConstTests.scala#L27-L30\n\n;)\n\nThis probably isn't quite as good as the `Const` approach of using types that _only_ have the instance for the laws being checked.\n",
        "createdAt" : "2015-09-30T23:48:56Z",
        "updatedAt" : "2015-09-30T23:48:56Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      },
      {
        "id" : "940db88e-265c-4caf-bb94-5b510281dbac",
        "parentId" : "67d00503-e65f-4dd2-84a0-47cd73ade514",
        "authorId" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "body" : "Ahh I see :-) I think I actually prefer your way over figuring our which types happen to have the instances I want\n",
        "createdAt" : "2015-10-01T05:29:43Z",
        "updatedAt" : "2015-10-01T05:29:43Z",
        "lastEditedBy" : "4aafd631-794d-4704-aeda-a6c56ce667d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5adf3031d6e3d0650812eba04f20f36b83f0514f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +22,26 @@  checkAll(\"Either[Int, String]\", orderLaws.eqv)\n  checkAll(\"Either[Int, String]\", orderLaws.partialOrder(partialOrder))\n  checkAll(\"Either[Int, String]\", orderLaws.order(order))\n\n"
  }
]