[
  {
    "id" : "6614c368-6aec-4883-b56f-26efbbd02331",
    "prId" : 1464,
    "prUrl" : "https://github.com/typelevel/cats/pull/1464#pullrequestreview-39178029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5f025ae-741f-42bb-871c-5d3ddf40aa04",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "This is sort of already checked through `ReducibleNonEmptyStreamCheck` in _OneAndTests.scala_",
        "createdAt" : "2017-05-19T09:54:08Z",
        "updatedAt" : "2017-05-19T11:16:18Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      },
      {
        "id" : "672d01ee-d057-433c-829a-6150f496ea29",
        "parentId" : "c5f025ae-741f-42bb-871c-5d3ddf40aa04",
        "authorId" : "b43434dc-f706-4cba-a4f2-eb4b74682cdf",
        "body" : "I agree there is some duplication, but I don't think it should be tackled in this issue and should probably a different issue where we discuss what to do with tests for a typeclass which aren't part of the discipline laws.",
        "createdAt" : "2017-05-19T12:10:27Z",
        "updatedAt" : "2017-05-19T12:10:27Z",
        "lastEditedBy" : "b43434dc-f706-4cba-a4f2-eb4b74682cdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "71d4fd6c6a86a8a713be3db3f1c4a4c4cc55db19",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +268,272 @@}\n\nclass FoldableOneAndCheck extends FoldableCheck[OneAnd[List, ?]](\"oneAnd\") {\n  def iterator[T](oneAnd: OneAnd[List, T]) = (oneAnd.head :: oneAnd.tail).iterator\n}"
  },
  {
    "id" : "64989c11-817e-4c22-b7ed-882efd1e398e",
    "prId" : 1117,
    "prUrl" : "https://github.com/typelevel/cats/pull/1117#pullrequestreview-46019612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf170ec5-859a-4e8f-9c8a-945a77cbb829",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "This test fails if we remove `Foldable.iteratorFoldM`, because it actually no longer tests the default `foldM` implementation from `Foldable`  after #1414 which overrides `foldLeftM` in the instance of `Stream` using `iteratorFoldM`. This test fails when using the default `foldM` because, if I am not mistaken, the new `foldM` still have to evaluate one element after the stop. Also these two tests are now redundant with the test(\"Foldable[Stream]\") above. I will fix this in a PR removing `iteratorFoldM`",
        "createdAt" : "2017-06-23T14:48:04Z",
        "updatedAt" : "2017-06-23T14:58:53Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "55861d4d-f4a5-4c25-af5e-0940a448471e",
        "parentId" : "bf170ec5-859a-4e8f-9c8a-945a77cbb829",
        "authorId" : "5fc8c7f8-34e6-46ea-986e-eb92cd93a6ce",
        "body" : "Huh, I didn't notice that I was testing some other code ðŸ˜ƒ. I suppose changing the signature of\r\n\r\n```scala\r\ndef uncons: Option[(A, Source[A])]\r\n```\r\n\r\nto\r\n\r\n```scala\r\ndef uncons: Option[(A, Eval[Source[A]])]\r\n```\r\n\r\nand doing the necessary changes would make it pass.",
        "createdAt" : "2017-06-23T15:24:50Z",
        "updatedAt" : "2017-06-23T15:24:50Z",
        "lastEditedBy" : "5fc8c7f8-34e6-46ea-986e-eb92cd93a6ce",
        "tags" : [
        ]
      },
      {
        "id" : "f07c5e50-96fa-4f65-9739-8acff6ef663a",
        "parentId" : "bf170ec5-859a-4e8f-9c8a-945a77cbb829",
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "right, I updated #1740\r\n",
        "createdAt" : "2017-06-23T15:45:29Z",
        "updatedAt" : "2017-06-23T15:45:29Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eab2053a53fd815c895a016ad0addb13459dc6a2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +214,218 @@  }\n\n  test(\".foldLeftM short-circuiting optimality\") {\n    // test that no more elements are evaluated than absolutely necessary\n"
  }
]