[
  {
    "id" : "a635ce61-8181-493a-94cf-8185c7b62ff5",
    "prId" : 2911,
    "prUrl" : "https://github.com/typelevel/cats/pull/2911#pullrequestreview-254608937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0157b0f2-828e-4498-9040-09a6399b5366",
        "parentId" : null,
        "authorId" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "body" : "Is it really necessary to have an import like this in user code? Can't we hide the compat layer somehow?",
        "createdAt" : "2019-06-26T11:20:33Z",
        "updatedAt" : "2019-06-26T11:20:33Z",
        "lastEditedBy" : "ca741d6d-c629-4558-85cb-02e76238d728",
        "tags" : [
        ]
      },
      {
        "id" : "0cb4aa60-1bca-491e-b753-db428a799188",
        "parentId" : "0157b0f2-828e-4498-9040-09a6399b5366",
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "The compat layer is hidden (package private to `cats`).  It's used here because the test referenced `Stream`, and is cross-compiled against 2.12 and 2.13, so the test itself needs the same cross scala compat machinery provided by the `scalaVersionSpecific` \r\nUsers who are not cross compiling do not need to use any of these compat to use Cats. But users who are might need their own compat layer if they are using a deprecated feature from 2.12. E.g. if a cross-compiling user is using `Stream`, there is simply no `Stream` instances in Cats for 2.13, only `Lazy List` instances. The user will need the same compat layer (could be copied from Cats) to use `Stream` in 2.12 and `LazyList` in 2.13.  Another example is `TraversableOnce`. ",
        "createdAt" : "2019-06-26T13:25:15Z",
        "updatedAt" : "2019-06-26T13:46:57Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f55ddf5bb1f362eebcd6d01feab9b4fe7875bd34",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +9,13 @@import cats.kernel.laws.discipline.{MonoidTests, SemigroupTests}\nimport org.scalacheck.{Arbitrary, Gen}\nimport kernel.compat.scalaVersionSpecific._\n\nobject BinCodecInvariantMonoidalSuite {"
  }
]