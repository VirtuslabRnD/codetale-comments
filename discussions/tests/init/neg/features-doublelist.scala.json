[
  {
    "id" : "90ec5154-ecbe-44ad-850f-cb6f5e7461b8",
    "prId" : 12495,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12495#pullrequestreview-662799266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db22d10e-74c3-4594-9cc4-1262fd8345e3",
        "parentId" : null,
        "authorId" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "body" : "Is this change related to this PR or to the global objects checker? Or point to `inner-loop.scala`.",
        "createdAt" : "2021-05-18T20:27:13Z",
        "updatedAt" : "2021-05-18T22:21:53Z",
        "lastEditedBy" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "tags" : [
        ]
      },
      {
        "id" : "ec97e0fa-3e2e-4f12-bf50-f8adf6e5d8ae",
        "parentId" : "db22d10e-74c3-4594-9cc4-1262fd8345e3",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "According to concrete semantics, the code will run into loop.\r\nThe previous version ignores the effects in parent calls (assumimg they are hot, except super ctor calls).\r\nThe current version is more eager in check, thus report two warnings: `Promote the value under initialization to fully-initialized`. It's not related to the global object checker (which is not merged yet).",
        "createdAt" : "2021-05-19T06:12:46Z",
        "updatedAt" : "2021-05-19T06:12:47Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "12bfbd27637d381f8860fcaf804dd8c2859bfa49",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@class DoubleList {\n  class Node(var prev: Node, var next: Node, data: Int)\n  object sentinel extends Node(sentinel, sentinel, 0)  // error // error\n\n  def insert(x: Int) = ???"
  }
]