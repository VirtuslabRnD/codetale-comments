[
  {
    "id" : "53570b82-8f68-456d-bd98-93e46f8f672f",
    "prId" : 6811,
    "prUrl" : "https://github.com/apache/airflow/pull/6811#pullrequestreview-339491284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2305b787-faf4-4679-91a0-bb1a87fac64a",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I think we should use the more generic approach of checking for a raised exception via [assertRaises](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises), don't you think?",
        "createdAt" : "2020-01-06T15:50:36Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "4946a3d1-ba1b-4316-9e05-214d9506ff28",
        "parentId" : "2305b787-faf4-4679-91a0-bb1a87fac64a",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Or is there a good reason to stick to pytests method?",
        "createdAt" : "2020-01-06T15:51:43Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "6606a9a8-feb5-45ce-b481-9f50b7ef7443",
        "parentId" : "2305b787-faf4-4679-91a0-bb1a87fac64a",
        "authorId" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "body" : "Thanks for asking.  In the context of a pytest function, this is the only way that works, AFAIK.  The tests on the waiter that use moto mock infrastructure are based on work that already paved this way of testing code that requires AWS batch infrastructure (i.e. something like this is approved in moto, for example).  AFAIK, this is just how it's done with pytest and as Airflow migrates to pytest, this pattern is likely the way it will be done.  (As an aside, I'd prefer that this PR is not held up as a proving ground for the best practices for Airflow pytest vs. unittest, but those debates should take place and the tests in this PR can be revised when those practices are worked out in total.)",
        "createdAt" : "2020-01-06T22:58:01Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "tags" : [
        ]
      },
      {
        "id" : "9f1d29f0-e0e4-4fd4-963b-b551e02a8423",
        "parentId" : "2305b787-faf4-4679-91a0-bb1a87fac64a",
        "authorId" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "body" : "I'll take a liberty to resolve this and the related discussion below (there are dev-list discussions about these things that might result in changes that are out of scope here).",
        "createdAt" : "2020-01-07T20:35:26Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "tags" : [
        ]
      }
    ],
    "commit" : "302d536ce0fd86be97a68dd497274fbaa8583358",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +274,278 @@\n    # test waiting on a jobId that does not exist (this throws immediately)\n    with pytest.raises(botocore.exceptions.WaiterError) as err:\n        job_exists_waiter.config.delay = 0.2\n        job_exists_waiter.config.max_attempts = 2"
  },
  {
    "id" : "f63d21d6-404b-4243-b3a7-51674b5725a2",
    "prId" : 6811,
    "prUrl" : "https://github.com/apache/airflow/pull/6811#pullrequestreview-338946783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48ea6ad6-b9c6-471e-8806-a9f40a8ffdcb",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Same here?",
        "createdAt" : "2020-01-06T15:50:59Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "261e1820-b04a-4b2a-9818-a01afdc21db1",
        "parentId" : "48ea6ad6-b9c6-471e-8806-a9f40a8ffdcb",
        "authorId" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "body" : "Same reply.",
        "createdAt" : "2020-01-06T22:58:28Z",
        "updatedAt" : "2020-01-08T04:27:04Z",
        "lastEditedBy" : "56d38e66-557d-4fab-8ba8-0921b6ba3e58",
        "tags" : [
        ]
      }
    ],
    "commit" : "302d536ce0fd86be97a68dd497274fbaa8583358",
    "line" : 311,
    "diffHunk" : "@@ -1,1 +309,313 @@    job_complete_waiter.config.delay = 0.1\n    job_complete_waiter.config.max_attempts = 1\n    with pytest.raises(botocore.exceptions.WaiterError) as err:\n        job_complete_waiter.wait(jobs=[job_id])\n    assert isinstance(err.value, botocore.exceptions.WaiterError)"
  }
]