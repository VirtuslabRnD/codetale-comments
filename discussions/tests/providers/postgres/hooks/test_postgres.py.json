[
  {
    "id" : "0742add6-6dbd-4b52-8464-a09d7af6289b",
    "prId" : 9841,
    "prUrl" : "https://github.com/apache/airflow/pull/9841#pullrequestreview-450100271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Please delete the table after test to avoid side effects ðŸ‘Œ ",
        "createdAt" : "2020-07-15T19:50:30Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "2a6141be-b35d-4868-b775-cc9cceb316f6",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "body" : "I believe that should be covered in `TestPostgresHook.tearDown` already.",
        "createdAt" : "2020-07-15T19:53:59Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "tags" : [
        ]
      },
      {
        "id" : "cce64f82-e7b6-45d0-8ce6-225ed8552c08",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "It is indeed! ",
        "createdAt" : "2020-07-16T09:57:32Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "f17af630-26db-4abc-be58-0341faaa408a",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "@cjsekl - I believe we also wanted to test if the log is written via mocking, rather than test if rowcount is in the cursor?\r\n\r\nAnd since we are at that and it is added in dbapi_hook - maybe we can also add ver similar test in test_mysql/test_sqlite ",
        "createdAt" : "2020-07-16T12:14:08Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "000a6258-31e7-427f-b835-18954c45f5a4",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "body" : "Sure thing. Just remind me which log class I need to mock again please?\r\nI've tried this, but not getting any calls to that `log`.\r\n\r\n```\r\nclass TestDbApiHook(unittest.TestCase):\r\n\r\n    def setUp(self):\r\n        super().setUp()\r\n\r\n        self.cur = mock.MagicMock()\r\n        self.conn = mock.MagicMock()\r\n        self.conn.cursor.return_value = self.cur\r\n        conn = self.conn\r\n\r\n        class UnitTestDbApiHook(DbApiHook):\r\n            conn_name_attr = 'test_conn_id'\r\n            log = mock.MagicMock()\r\n\r\n            def get_conn(self):\r\n                return conn\r\n\r\n        self.db_hook = UnitTestDbApiHook()\r\n\r\n    def test_run_log(self):\r\n        statement = 'SQL'\r\n        self.db_hook.run(statement)\r\n        assert self.db_hook.log.call_count == 2\r\n```",
        "createdAt" : "2020-07-16T15:59:31Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "tags" : [
        ]
      },
      {
        "id" : "982b1af2-167c-4dca-b44c-2aa112a1a74f",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "body" : "Ah, that should be `assert self.db_hook.log.info.call_count == 2`.\r\nIs that what you had in mind?",
        "createdAt" : "2020-07-16T16:10:36Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "5052d6ad-643b-4aed-a48a-226348b0c513",
        "tags" : [
        ]
      },
      {
        "id" : "76910663-d78e-4f5f-af28-3f95e93d0a2e",
        "parentId" : "4e50fa9b-d936-497b-a371-e9af821b3558",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yep",
        "createdAt" : "2020-07-16T18:19:10Z",
        "updatedAt" : "2020-07-16T19:55:25Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "582dfa3f32673464dd1f1c904de278e343d0431e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +271,275 @@                cur.execute(\"INSERT INTO {} VALUES {}\".format(self.table, values))\n                conn.commit()\n                self.assertEqual(cur.rowcount, len(input_data))"
  }
]