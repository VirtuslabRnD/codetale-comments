[
  {
    "id" : "9ab95ea1-30f8-4ae0-ade7-87fd9e8a6634",
    "prId" : 9861,
    "prUrl" : "https://github.com/apache/airflow/pull/9861#pullrequestreview-468274542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7677bc95-23b5-4030-8382-2ce6a215ab6f",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Can't we do something like this:\r\nhttps://github.com/apache/airflow/blob/d4e3a42034b343d93b22e76fdadff8c0c5133c2c/tests/cli/commands/test_celery_command.py#L76\r\n\r\ninstead of calling subprocess? Also, do we need call the cli at all? Won't it be possible to execute those actions from code level?",
        "createdAt" : "2020-08-17T07:41:04Z",
        "updatedAt" : "2020-08-17T07:42:10Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "9a7e334b-44d2-481e-ba5d-ce14c6e9477b",
        "parentId" : "7677bc95-23b5-4030-8382-2ce6a215ab6f",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "We can try, but it is not advisable in this case:\r\n1. These are system tests, not unit tests, so they can take longer than other tests.\r\n2. Sometimes, due to the fact that we have cyclicall imports, we may not be able to load the configuration, but only when we have a new process. For example: https://github.com/apache/airflow/pull/4601\r\n3. I want to get rid of the side effects, because in this way I reload the configuration from scratch.\r\n4. Now I am sure that in the new process I have the same configuration as I have set. Here, too, it is a workaround for Airflow's problems, which has many global variables that store the configuration.\r\n5.  I avoid creating side effects through my test because changing the logger configuration takes place in a separate process.",
        "createdAt" : "2020-08-17T08:40:49Z",
        "updatedAt" : "2020-08-17T08:51:29Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "a32c287d1a7094e32626bcf0c8784d94e8cd6fdb",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@            self.assertEqual(0, subprocess.Popen(\n                [\"airflow\", \"scheduler\", \"--num-runs\", \"1\"]\n            ).wait())\n\n        ti = session.query(TaskInstance).filter(TaskInstance.task_id == \"create_entry_group\").first()"
  }
]