[
  {
    "id" : "7fe0116c-36d9-4183-a410-09ee3ad08000",
    "prId" : 13289,
    "prUrl" : "https://github.com/apache/airflow/pull/13289#pullrequestreview-558183560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf940c7-9b47-4876-b360-ea47a6ea96d9",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "Shall we have one more test case, where we don't explicitly specify `image_pull_policy` then assert it against default value `IfNotPresent `?",
        "createdAt" : "2020-12-23T19:13:18Z",
        "updatedAt" : "2020-12-24T16:19:26Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      }
    ],
    "commit" : "392b34506e24edd87d8da0ad3f23f89db792c5d8",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +129,133 @@    @mock.patch(\"airflow.kubernetes.pod_launcher.PodLauncher.monitor_pod\")\n    @mock.patch(\"airflow.kubernetes.kube_client.get_kube_client\")\n    def test_image_pull_policy_correctly_set(self, mock_client, monitor_mock, start_mock):\n        from airflow.utils.state import State\n"
  },
  {
    "id" : "2389b689-8930-43e1-ae7b-618319a60bed",
    "prId" : 15373,
    "prUrl" : "https://github.com/apache/airflow/pull/15373#pullrequestreview-635957371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f03e7e8-2107-46df-900a-ac8793992686",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Can you add a single-line comment in the code to say why we assert this",
        "createdAt" : "2021-04-14T18:27:26Z",
        "updatedAt" : "2021-04-14T18:40:43Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "68e15f300364bbe081f24a63d0874ae0dfdfeb9b",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +304,308 @@        # make sure the kwargs takes precedence (and that name is randomized)\n        assert start_mock.call_args[0][0].metadata.name.startswith(name_base)\n        assert start_mock.call_args[0][0].metadata.name != name_base\n        assert start_mock.call_args[0][0].spec.containers[0].image == image\n"
  },
  {
    "id" : "ffc3b849-b8cb-4614-8b5b-cd3991f72056",
    "prId" : 15373,
    "prUrl" : "https://github.com/apache/airflow/pull/15373#pullrequestreview-635962406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "638fe9a6-344d-48f2-8acb-f8eb5e41a00a",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "We should probably just move this at top level of this file -- I know for some reason we have imported this class in all tests in this file",
        "createdAt" : "2021-04-14T18:28:02Z",
        "updatedAt" : "2021-04-14T18:40:43Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "e22b34bf-92be-4509-8aa8-dc133638b4ef",
        "parentId" : "638fe9a6-344d-48f2-8acb-f8eb5e41a00a",
        "authorId" : "2b57321e-ffa6-49a5-a626-e83c2595de23",
        "body" : "I'm planning a follow up cleanup PR with more, don't want to muddy the waters of this review, so I'm following the same pattern as the existing tests here.",
        "createdAt" : "2021-04-14T18:30:35Z",
        "updatedAt" : "2021-04-14T18:40:43Z",
        "lastEditedBy" : "2b57321e-ffa6-49a5-a626-e83c2595de23",
        "tags" : [
        ]
      },
      {
        "id" : "f9ecef72-4fa7-4da0-ad30-10531f80e3ed",
        "parentId" : "638fe9a6-344d-48f2-8acb-f8eb5e41a00a",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Sure, works for me",
        "createdAt" : "2021-04-14T18:33:31Z",
        "updatedAt" : "2021-04-14T18:40:43Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "68e15f300364bbe081f24a63d0874ae0dfdfeb9b",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +311,315 @@    @mock.patch(\"airflow.kubernetes.kube_client.get_kube_client\")\n    def test_pod_template_file(self, mock_client, monitor_mock, start_mock):\n        from airflow.utils.state import State\n\n        pod_template_yaml = b\"\"\""
  }
]