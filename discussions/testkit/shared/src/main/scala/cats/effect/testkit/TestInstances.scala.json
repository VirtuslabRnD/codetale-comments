[
  {
    "id" : "fa518bb0-3584-490e-a375-560167a49d8b",
    "prId" : 2107,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/2107#pullrequestreview-704720040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "443d0bee-af06-431f-8b5c-1471cc9b304e",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Out of curiosity, can we just have `TestInstances` extend `KernelTestkitTestInstances`?",
        "createdAt" : "2021-07-13T02:18:59Z",
        "updatedAt" : "2021-07-13T02:18:59Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      },
      {
        "id" : "41a0a65f-7aad-4c98-9648-ac77b929b56f",
        "parentId" : "443d0bee-af06-431f-8b5c-1471cc9b304e",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Oh, it's because forwarders aren't bincompat. Got it.",
        "createdAt" : "2021-07-13T03:51:09Z",
        "updatedAt" : "2021-07-13T03:51:09Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "966a4e6b94e9c503b2d7f08eb02be5984053a393",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +26,30 @@  SyncGenerators,\n  SyncTypeGenerators,\n  TestInstances => KernelTestkitTestInstances\n}\nimport cats.syntax.all._"
  },
  {
    "id" : "8ca8ee55-fa82-41b9-9903-1c21e0df32ae",
    "prId" : 1800,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1800#pullrequestreview-617052483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35c267fc-11d7-4d30-9973-be2fcadc61a6",
        "parentId" : null,
        "authorId" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "body" : "Looking to learn, is this something users (or even other library authors of libraries dependent on CE3) will ever need to worry about?",
        "createdAt" : "2021-03-21T19:06:51Z",
        "updatedAt" : "2021-03-21T19:49:27Z",
        "lastEditedBy" : "566d094c-978a-46cc-94f5-bc87e03c9fd3",
        "tags" : [
        ]
      },
      {
        "id" : "733c3c1b-86c3-4b9c-a2a3-ac68b60eabba",
        "parentId" : "35c267fc-11d7-4d30-9973-be2fcadc61a6",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "I don't *believe* anyone else will ever need to worry about this. The problem is we're effectively drawing a distinction between \"canceled but we haven't seen it yet\" vs \"canceled and we *have* seen it\". The identity `flatMap` + `handleErrorWith` trick turns the former scenario into the latter, and I believe that this is something that is unlikely to be a meaningful thing outside of Cats Effect itself. Everything else downstream is operating in at least a slightly higher level of abstraction, and remember it only takes one `flatMap` to sort this out.",
        "createdAt" : "2021-03-21T19:18:45Z",
        "updatedAt" : "2021-03-21T19:49:27Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "16f971c4e49c14b46995637e21ec58d2a837aa1b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +226,230 @@        .handleErrorWith(IO.raiseError(_))\n        .unsafeRunAsyncOutcome { oc => results = oc.mapK(someK) }(unsafe\n          .IORuntime(ticker.ctx, ticker.ctx, scheduler, () => (), unsafe.IORuntimeConfig()))\n\n      ticker.ctx.tickAll(1.second)"
  }
]