[
  {
    "id" : "78f0ccbb-8e13-447b-95d5-03e6845dedd8",
    "prId" : 1145,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1145#pullrequestreview-478695601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fcf8881-c88e-4fb8-8ce8-7a7fa45f04d7",
        "parentId" : null,
        "authorId" : "3b5d55eb-40d5-4d14-a8a4-3ed1601b5bff",
        "body" : "Implementation for `Ref` and `Deferred` are here. I wanted to use `MVarPartiallyApplied` to avoid typing every call, but didn't manage to get it to work, need to take a closer look",
        "createdAt" : "2020-08-30T22:15:22Z",
        "updatedAt" : "2020-09-02T00:17:29Z",
        "lastEditedBy" : "3b5d55eb-40d5-4d14-a8a4-3ed1601b5bff",
        "tags" : [
        ]
      },
      {
        "id" : "4d137b55-6c84-4a5f-9a65-0a25f092cb7a",
        "parentId" : "6fcf8881-c88e-4fb8-8ce8-7a7fa45f04d7",
        "authorId" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "body" : "So, unfortunately these implementations are unsafe in multiple ways, and after giving it more thought, I think they might be _fundamentally_ unsafe (talking about `Ref` mostly, `Deferred` has different semantics here but it's easily fixable).  I'm really thinking we should add `Ref+Deferred` to `PureConc` and remove `MVar` (`MVar` can safely written in terms of `Ref+Deferred`, but now I don't think the opposite is true, definitely not with a single `MVar` at least).\r\n\r\n\r\n\r\n",
        "createdAt" : "2020-08-30T22:50:59Z",
        "updatedAt" : "2020-09-02T00:17:29Z",
        "lastEditedBy" : "a5a514ff-cd89-45cb-bcc8-796f0fa2a445",
        "tags" : [
        ]
      },
      {
        "id" : "12ce85c5-1e99-43e3-9331-cc6dccd0c752",
        "parentId" : "6fcf8881-c88e-4fb8-8ce8-7a7fa45f04d7",
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Honestly that might be the simplest approach. `MVar` is in coop, and the only reason I did it rather than `Ref` + `Deferred` was pure laziness: I wanted to write one thing rather than two.",
        "createdAt" : "2020-08-31T15:04:05Z",
        "updatedAt" : "2020-09-02T00:17:29Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "f37f7c7866bf40e727f86ce43f6f12d43633c3ec",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +212,216 @@        Thread.annotate(\"never\")(Thread.done[A])\n\n      def ref[A](a: A): PureConc[E, Ref[PureConc[E, *], A]] =\n        MVar[PureConc[E, *], A](a).flatMap(mVar => Kleisli.pure(unsafeRef(mVar)))\n"
  },
  {
    "id" : "d50cb597-b77d-4cd6-bcc3-7eefcfecfafc",
    "prId" : 914,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/914#pullrequestreview-445741644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09631deb-e64d-424b-a786-abcbf609ed89",
        "parentId" : null,
        "authorId" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "body" : "Now that we're upgraded to the latest RC, we can actually drop the `catsFreeMonadErrorForFreeT2` jazz, because the one upstream has the fix merged. Task for another PR. :-)",
        "createdAt" : "2020-07-09T15:46:31Z",
        "updatedAt" : "2020-07-09T15:47:18Z",
        "lastEditedBy" : "5b44dcf3-8819-42b0-9a49-4cdbf5a8a305",
        "tags" : [
        ]
      }
    ],
    "commit" : "c69abc5025e7d2e4104e11411c40c555b26541bd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +179,183 @@      : MonadError[FreeT[S, M, *], E] =\n    new MonadError[FreeT[S, M, *], E] {\n      private val F = FreeT.catsFreeMonadErrorForFreeT2[S, M, E]\n\n      def pure[A](x: A): FreeT[S, M, A] ="
  }
]