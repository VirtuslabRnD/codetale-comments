[
  {
    "id" : "5435ab85-b820-4d31-a1d3-c4274d1a82c9",
    "prId" : 2217,
    "prUrl" : "https://github.com/akka/alpakka/pull/2217#pullrequestreview-376774067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3106ab65-495f-41b7-99f6-25483bebefe2",
        "parentId" : null,
        "authorId" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "body" : "Maybe also include the contentType in the \"Unexpected response\" exception below, to help debugging when the response is rejected because the content-type is wrong?",
        "createdAt" : "2020-03-18T11:25:07Z",
        "updatedAt" : "2020-03-18T12:10:18Z",
        "lastEditedBy" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "tags" : [
        ]
      }
    ],
    "commit" : "2486b99b685214449ce450d7615a3085c7cac631",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +165,169 @@        case Success(response) =>\n          response.status match {\n            case StatusCodes.Success(_) if response.entity.contentType == ContentTypes.`application/json` =>\n              Unmarshal(response).to[PullResponse]\n            case status =>"
  },
  {
    "id" : "4c326dd3-c54c-4d1b-a03a-502da3e39b5f",
    "prId" : 1983,
    "prUrl" : "https://github.com/akka/alpakka/pull/1983#pullrequestreview-303177462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b545e15c-2019-4a3a-8ffc-e97db2b23275",
        "parentId" : null,
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "Very nice to have the emulation pushed to a central place instead.",
        "createdAt" : "2019-10-17T11:49:37Z",
        "updatedAt" : "2019-11-27T21:19:00Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      }
    ],
    "commit" : "e329c1d036fa2c8d35981bf4e709c3e0f462cb27",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +134,138 @@      implicit as: ActorSystem\n  ): Flow[(HttpRequest, T), (Try[HttpResponse], T), Http.HostConnectionPool] =\n    if (isEmulated) {\n      Http().cachedHostConnectionPool[T](PubSubGoogleApisHost, PubSubGoogleApisPort)\n    } else {"
  },
  {
    "id" : "78b464d7-d904-49f0-9060-3c969f7aaa31",
    "prId" : 1928,
    "prUrl" : "https://github.com/akka/alpakka/pull/1928#pullrequestreview-287049080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4affe91d-254b-4535-8d11-2be23863d8c6",
        "parentId" : null,
        "authorId" : "f0d97bd1-87cb-45e5-a91b-fc6df3c90517",
        "body" : "I'm using same pattern in pull, acknowledge and publish.\r\nI'm matching for every success status code. If it's not successful, then trying to read error as String to add it to an exception. It works for response with no entity, returning empty string (checked in added spec for acknowledge).",
        "createdAt" : "2019-09-11T20:20:54Z",
        "updatedAt" : "2019-09-11T20:20:55Z",
        "lastEditedBy" : "f0d97bd1-87cb-45e5-a91b-fc6df3c90517",
        "tags" : [
        ]
      }
    ],
    "commit" : "f24562823fdffade61bed2f2a0ac2633fa5fc076",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +149,153 @@              throw new RuntimeException(s\"Unexpected pull response. Code: [$status]. Entity: [$entity]\")\n            }\n      }\n    } yield pullResponse\n  }"
  }
]