[
  {
    "id" : "f81fcfa5-38b0-4e30-8c92-e7e017883197",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-518149329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbdc82d5-5d43-4a95-b5a4-b70d37411e65",
        "parentId" : null,
        "authorId" : "f59e487c-3347-4ce2-a76a-108be3478d82",
        "body" : "```suggestion\r\n\r\n* TensorFlow profiler now supports profiling multiple workers using the [sampling mode API](https://www.tensorflow.org/guide/profiler#profiling_apis).\r\n\r\n```",
        "createdAt" : "2020-10-27T21:04:02Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "f59e487c-3347-4ce2-a76a-108be3478d82",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 305,
    "diffHunk" : "@@ -1,1 +6,10 @@\n* [`MultiWorkerMirroredStrategy`](https://www.tensorflow.org/api_docs/python/tf/distribute/MultiWorkerMirroredStrategy) is now a stable API and is no longer considered experimental. Some of the major improvements involve handling peer failure and many bug fixes. Please check out the detailed tutorial on [Multi-worker training with Keras](https://www.tensorflow.org/tutorials/distribute/multi_worker_with_keras). \n\n* Introduces experimental support for a new module named [`tf.experimental.numpy`](https://www.tensorflow.org/api_docs/python/tf/experimental/numpy) which is a NumPy-compatible API for writing TF programs. See the [detailed guide](https://www.tensorflow.org/guide/tf_numpy) to learn more. Additional details below. \n"
  },
  {
    "id" : "455ab8e7-85ad-4ae0-8e60-654a451f2493",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-521072500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1f38fcd-02aa-428d-b8b0-22d7652ac027",
        "parentId" : null,
        "authorId" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "body" : "Can we also add\r\n\r\n    * GPU acceleration now supports quantized models by default\r\n",
        "createdAt" : "2020-10-28T23:03:53Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "188e576a-21d3-4c6f-bf41-5747a83bdb5b",
        "tags" : [
        ]
      },
      {
        "id" : "2f0ecbbd-3f70-4be4-8c0f-1bdff958e46e",
        "parentId" : "e1f38fcd-02aa-428d-b8b0-22d7652ac027",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Added.",
        "createdAt" : "2020-10-30T22:41:02Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 571,
    "diffHunk" : "@@ -1,1 +192,196 @@    * GPU acceleration now supports quantized models by default\n  * `DynamicBuffer::AddJoinedString()` will now add a separator if the first string to be joined is empty.\n  *  Adds support for cumulative sum (cumsum), both as builtin op and MLIR conversion.\n  \n### `TensorRT`"
  },
  {
    "id" : "65689986-b055-45c2-a12f-507ceec482a8",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550609358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a600a10-c260-48af-8724-e05e76b0735b",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "we are working on another tutorial for custom training loop users that would have been nice to include here. We don't have it up though yet - there is a CL out. Can we update the relnotes later once we have it? ",
        "createdAt" : "2020-12-11T01:38:34Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "596a3815-bfd0-478f-a0de-235b0142ffd5",
        "parentId" : "6a600a10-c260-48af-8724-e05e76b0735b",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "yes we should be able to update it afterwards both here and on Github release page as well.",
        "createdAt" : "2020-12-11T22:07:10Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +5,9 @@* `tf.distribute` introduces experimental support for asynchronous training of models via the [`tf.distribute.experimental.ParameterServerStrategy`](https://www.tensorflow.org/api_docs/python/tf/distribute/experimental/ParameterServerStrategy) API. Please see the [tutorial](https://www.tensorflow.org/tutorials/distribute/parameter_server_training) to learn more.\n\n* [`MultiWorkerMirroredStrategy`](https://www.tensorflow.org/api_docs/python/tf/distribute/MultiWorkerMirroredStrategy) is now a stable API and is no longer considered experimental. Some of the major improvements involve handling peer failure and many bug fixes. Please check out the detailed tutorial on [Multi-worker training with Keras](https://www.tensorflow.org/tutorials/distribute/multi_worker_with_keras). \n\n* Introduces experimental support for a new module named [`tf.experimental.numpy`](https://www.tensorflow.org/api_docs/python/tf/experimental/numpy) which is a NumPy-compatible API for writing TF programs. See the [detailed guide](https://www.tensorflow.org/guide/tf_numpy) to learn more. Additional details below. "
  },
  {
    "id" : "4e8a37ae-2fbd-4a9a-9041-5e3d2af8c7f3",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550632773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4908d38e-a6c5-4e6d-8477-678872a2f998",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "This section is alphabetical ordering? ",
        "createdAt" : "2020-12-11T01:40:41Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "f691089e-e9c1-488e-ad64-f5415e441e6c",
        "parentId" : "4908d38e-a6c5-4e6d-8477-678872a2f998",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "yes",
        "createdAt" : "2020-12-11T23:02:45Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 450,
    "diffHunk" : "@@ -1,1 +85,89 @@    * When using mixed precision, calling `RMSprop.apply_gradients` or `Nadam.apply_gradients` outside a `tf.function` does not work and will raise the                 AttributeError \"Tensor.op is meaningless when eager execution is enabled\". See this [issue](https://github.com/tensorflow/tensorflow/issues/45536) for           details and a workaround.\n\n## Bug Fixes and Other Changes\n\n### TF Core:"
  },
  {
    "id" : "c631c6a3-049f-4da0-b7ed-29e291efe311",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550672906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e9980c9-2a59-4a19-929d-3664b44fbe89",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "Is this section supposed to be complete? if so, it might be good to repeat some of the stuff from the topmost section (e.g. MultiWorkerMirrroredStrategy). I don't know what the norm is.",
        "createdAt" : "2020-12-11T01:41:31Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "eda338b0-c8ac-4873-a48b-c512355af19b",
        "parentId" : "3e9980c9-2a59-4a19-929d-3664b44fbe89",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Added.",
        "createdAt" : "2020-12-12T01:21:27Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 514,
    "diffHunk" : "@@ -1,1 +145,149 @@  * `tf.data.experimental.AUTOTUNE` is now available in the core API as `tf.data.AUTOTUNE`.\n\n### `tf.distribute`:\n  * Introduces experimental support for asynchronous training of models via `tf.distribute.experimental.ParameterServerStrategy`:\n    * Replaces the existing `tf.distribute.experimental.ParameterServerStrategy` symbol with a new class that is for parameter server training in TF2. Usage of"
  },
  {
    "id" : "ca26cd75-8481-4097-93ce-fec273f76edb",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550687493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40efcfd0-8be1-4b3e-8196-a7db710e458a",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "can we mention here a bit about the proper way of using XLA?",
        "createdAt" : "2020-12-11T01:54:15Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "c2f58cbf-8f09-41e9-b67e-9b3993cd6f55",
        "parentId" : "40efcfd0-8be1-4b3e-8196-a7db710e458a",
        "authorId" : "6f904d11-bed6-4022-8971-4dbfb55561c0",
        "body" : "Same here.",
        "createdAt" : "2020-12-12T04:01:36Z",
        "updatedAt" : "2020-12-12T04:01:36Z",
        "lastEditedBy" : "6f904d11-bed6-4022-8971-4dbfb55561c0",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 390,
    "diffHunk" : "@@ -1,1 +32,36 @@  * `tensorflow.python`, `tensorflow.core` and `tensorflow.compiler` modules are now hidden. These modules are not part of TensorFlow public API.\n  * `tf.raw_ops.Max` and `tf.raw_ops.Min` no longer accept inputs of type `tf.complex64` or `tf.complex128`, because the behavior of these ops is not well defined for complex types.\n  * XLA:CPU and XLA:GPU devices are no longer registered by default. Use `TF_XLA_FLAGS=--tf_xla_enable_xla_devices` if you really need them, but this flag will eventually be removed in subsequent releases.\n\n* `tf.keras`:  "
  },
  {
    "id" : "24a7a1d9-dc6d-41a3-abe7-8bd333a33331",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-549741233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96f89c67-25fc-4fd2-8d0d-684d6467e7f3",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "can we link to what \"op layers\" are",
        "createdAt" : "2020-12-11T01:56:32Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 399,
    "diffHunk" : "@@ -1,1 +41,45 @@    * Code that is overly dependent on the exact names attached to symbolic tensors (e.g. assumes there will be \":0\" at the end of the inputs, treats names as unique identifiers instead of using `tensor.ref()`, etc.) may break. \n    * Code that uses full path for `get_concrete_function` to trace Keras symbolic inputs directly should switch to building matching `tf.TensorSpec`s directly and tracing the `TensorSpec` objects.\n    * Code that relies on the exact number and names of the op layers that TensorFlow operations  were converted into may have changed.\n    * Code that uses `tf.map_fn`/`tf.cond`/`tf.while_loop`/control flow as op layers and  happens to work before TF 2.4. These will explicitly be unsupported now. Converting these ops to Functional API op layers was unreliable before TF 2.4, and prone to erroring incomprehensibly  or being silently buggy.\n    * Code that directly asserts on a Keras symbolic value in cases where ops like `tf.rank` used to  return a static or symbolic value depending on if the input had a fully static shape or not. Now these ops always return symbolic values."
  },
  {
    "id" : "2463773b-3f5d-4e01-9fce-0e811e29807c",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550674790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12f2447a-05c6-44ed-ba71-728bf561a72c",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "Should rename this section as \"Features and bug fixes\"? \r\nAlso should this be before the breaking changes section? or are people more interested in breaking changes than features?",
        "createdAt" : "2020-12-11T01:59:06Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "0a46a88e-b335-4b0a-b52f-636a8126cc1f",
        "parentId" : "12f2447a-05c6-44ed-ba71-728bf561a72c",
        "authorId" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "body" : "I think breaking changes are the most important (for people who don't read the full release notes).\r\n\r\nWe should rename this section in the future, I think",
        "createdAt" : "2020-12-12T01:35:25Z",
        "updatedAt" : "2020-12-12T01:35:25Z",
        "lastEditedBy" : "9f15379f-126a-430d-93cb-7cc21488adf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 450,
    "diffHunk" : "@@ -1,1 +85,89 @@    * When using mixed precision, calling `RMSprop.apply_gradients` or `Nadam.apply_gradients` outside a `tf.function` does not work and will raise the                 AttributeError \"Tensor.op is meaningless when eager execution is enabled\". See this [issue](https://github.com/tensorflow/tensorflow/issues/45536) for           details and a workaround.\n\n## Bug Fixes and Other Changes\n\n### TF Core:"
  },
  {
    "id" : "8b0262c8-30fe-42a8-a41e-24f191891a0e",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550672644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29cb10dc-5892-4384-9faa-b66115646d9f",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "should the CUDA updates go here as well?",
        "createdAt" : "2020-12-11T02:04:06Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "ac3d293a-4afc-4212-9b52-9a696c9b814b",
        "parentId" : "29cb10dc-5892-4384-9faa-b66115646d9f",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "I think its not needed, for the others we had additional info which was kind of too much in the major features section.",
        "createdAt" : "2020-12-12T01:19:46Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 474,
    "diffHunk" : "@@ -1,1 +108,112 @@* `tf.debugging`:\n  * `tf.debugging.assert_shapes()` now works on `SparseTensor`s (Fixes [#36268](https://github.com/tensorflow/tensorflow/issues/36268)).\n* GPU\n  * Adds Support for [TensorFloat-32](https://blogs.nvidia.com/blog/2020/05/14/tensorfloat-32-precision-format/) on Ampere based GPUs. \n    TensorFloat-32, or TF32 for short, is a math mode for NVIDIA Ampere based GPUs which causes certain float32 ops, such as matrix "
  },
  {
    "id" : "f5838f2b-aa4b-4162-b8c0-dec99b639e9a",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-549741233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d195e9-be76-46f7-aea0-ae03053cb67c",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "might want to nest the first 4 points here under one bullet \"tf.data service\" ?",
        "createdAt" : "2020-12-11T02:06:45Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 494,
    "diffHunk" : "@@ -1,1 +128,132 @@  \n### `tf.data`:\n  * Adds new `tf.data.experimental.service.register_dataset` and `tf.data.experimental.service.from_dataset_id` APIs to enable one\n    process to register a dataset with the tf.data service, and another process to consume data from the dataset.\n  * Adds support for dispatcher fault tolerance. To enable fault tolerance, configure a `work_dir` when running your dispatcher server and set"
  },
  {
    "id" : "d6e57c14-4b5f-4bb4-b500-7789ed10e228",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550676403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dbd09c5-679c-4fc6-b51d-e53a13ccf962",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "can we link to the relevant API here",
        "createdAt" : "2020-12-11T02:09:59Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      },
      {
        "id" : "79d88d2c-7983-4448-a529-0679eaf3cc01",
        "parentId" : "8dbd09c5-679c-4fc6-b51d-e53a13ccf962",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done",
        "createdAt" : "2020-12-11T23:24:16Z",
        "updatedAt" : "2020-12-12T01:34:20Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      },
      {
        "id" : "0d7139fe-577e-4474-8085-d38b64fb0d83",
        "parentId" : "8dbd09c5-679c-4fc6-b51d-e53a13ccf962",
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "hm, i don't see this part changed. i meant fully expand the relevant TPU embedding API ",
        "createdAt" : "2020-12-12T01:53:55Z",
        "updatedAt" : "2020-12-12T02:00:56Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 578,
    "diffHunk" : "@@ -1,1 +199,203 @@    \n### TPU Enhancements:\n  * Adds support for the `beta` parameter of the FTRL optimizer for TPU embeddings. Users of other TensorFlow platforms can implement equivalent\n    behavior by adjusting the `l2` parameter.\n"
  },
  {
    "id" : "0e5a133d-d895-4888-ba36-f32df054275e",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550676403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5871154-6285-4d83-adf6-0e476e8170c4",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "typo: precision",
        "createdAt" : "2020-12-12T01:48:27Z",
        "updatedAt" : "2020-12-12T02:00:56Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 383,
    "diffHunk" : "@@ -1,1 +25,29 @@\n* TF Core:\n  * Certain float32 ops run in lower precsion on Ampere based GPUs, including  matmuls and convolutions, due to the use of [TensorFloat-32](https://blogs.nvidia.com/blog/2020/05/14/tensorfloat-32-precision-format/). Specifically, inputs to such ops are rounded from 23 bits of precision to 10\n  bits of precision. This is unlikely to cause issues in practice for deep learning models. In some cases, TensorFloat-32 is also used for complex64 ops.\n  TensorFloat-32 can be disabled by running `tf.config.experimental.enable_tensor_float_32_execution(False)`. "
  },
  {
    "id" : "fcce7ee1-9159-4b74-9982-594602b57eeb",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550676403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e76c814-c915-426a-a5fc-b829012db37a",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "nit : there is some extra whitespace between \"for\" and \"details\"",
        "createdAt" : "2020-12-12T01:58:37Z",
        "updatedAt" : "2020-12-12T02:00:56Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 445,
    "diffHunk" : "@@ -1,1 +83,87 @@## Known Caveats\n  * `tf.keras.mixed_precision`\n    * When using mixed precision, calling `RMSprop.apply_gradients` or `Nadam.apply_gradients` outside a `tf.function` does not work and will raise the                 AttributeError \"Tensor.op is meaningless when eager execution is enabled\". See this [issue](https://github.com/tensorflow/tensorflow/issues/45536) for           details and a workaround.\n\n## Bug Fixes and Other Changes"
  },
  {
    "id" : "4085604f-9bc4-4e7b-889d-ded88116b6fb",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550676403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f10cec95-531e-4c10-be90-d182d7e2a96e",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "typo: Multi-worker",
        "createdAt" : "2020-12-12T01:59:04Z",
        "updatedAt" : "2020-12-12T02:00:56Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 520,
    "diffHunk" : "@@ -1,1 +151,155 @@    * Added `tf.distribute.experimental.coordinator.*` namespace, including the main API `ClusterCoordinator` for coordinating the training cluster, the related data structure `RemoteValue` and `PerWorkerValue`.\n  * `MultiWorkerMirroredStrategy`](https://www.tensorflow.org/api_docs/python/tf/distribute/MultiWorkerMirroredStrategy) is now a stable API and is no longer considered experimental. Some of the major improvements involve handling peer failure and many bug fixes. Please check out the detailed tutorial on \n     [Multi-worer training with Keras](https://www.tensorflow.org/tutorials/distribute/multi_worker_with_keras).    \n  * Adds `tf.distribute.Strategy.gather` and `tf.distribute.ReplicaContext.all_gather` APIs to support gathering dense distributed values.\n  * Fixes various issues with saving a distributed model."
  },
  {
    "id" : "8e6cb5ac-b10d-4c1b-9b7b-9e9323e9255f",
    "prId" : 44220,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/44220#pullrequestreview-550676403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1048878-1e6e-49a1-99f1-0a947a5dbd63",
        "parentId" : null,
        "authorId" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "body" : "nit: missing period at the end",
        "createdAt" : "2020-12-12T02:00:46Z",
        "updatedAt" : "2020-12-12T02:00:56Z",
        "lastEditedBy" : "41542927-e19d-470d-b24b-77a91acd82ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "c16387f692bf46a95100adc91a68922414b53d4c",
    "line" : 549,
    "diffHunk" : "@@ -1,1 +179,183 @@    * `tf.keras.mixed_precision.Policy` no longer takes in a `tf.mixed_precision.experimental.LossScale` in the constructor, and no longer has a `LossScale`           associated with it. Instead, `Model.compile` will automatically wrap the optimizer with a `LossScaleOptimizer` using dynamic loss scaling if `Policy.name`       is \"mixed_float16\".\n    * `tf.keras.mixed_precision.LossScaleOptimizer`'s constructor takes in different arguments. In particular, it no longer takes in a `LossScale`, and there is       no longer a `LossScale` associated with the `LossScaleOptimizer`. Instead, `LossScaleOptimizer` directly implements fixed or dynamic loss scaling. See the       documentation of [`tf.keras.mixed_precision.experimental.LossScaleOptimizer`](https://www.tensorflow.org/api_docs/python/tf/keras/mixed_precision/experimental/LossScaleOptimizer?version=nightly) for details on the differences between the       experimental `LossScaleOptimizer` and the new non-experimental `LossScaleOptimizer`.\n    * `tf.mixed_precision.experimental.LossScale` and its subclasses are deprecated, as all of its functionality now exists within                      `tf.keras.mixed_precision.LossScaleOptimizer`\n\n### `tf.lite`:"
  },
  {
    "id" : "d0adccf3-2658-402b-8bb2-e4bd467ffe25",
    "prId" : 40701,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/40701#pullrequestreview-454487421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7a69400-2b21-41de-b56a-8bc94f5ca961",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Do we have issues IDs for all of these? It would be great to include them where they exist... This might be an action item for the script that collects them in the first place -- if the commit adding the item had an issue attached to it, add the issue number (or complain if it wasn't added). ",
        "createdAt" : "2020-07-07T01:26:20Z",
        "updatedAt" : "2020-07-22T21:21:12Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "ce82686a-a92d-4fba-8a8c-fc22b2f1fb38",
        "parentId" : "e7a69400-2b21-41de-b56a-8bc94f5ca961",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "no issue ids :(",
        "createdAt" : "2020-07-15T21:28:04Z",
        "updatedAt" : "2020-07-22T21:21:12Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      },
      {
        "id" : "65944895-7744-4b87-a2bc-40df7fffbf86",
        "parentId" : "e7a69400-2b21-41de-b56a-8bc94f5ca961",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "action item noted, resolving this for now. ",
        "createdAt" : "2020-07-23T20:53:56Z",
        "updatedAt" : "2020-07-23T20:53:56Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbbdcde0fde46a1005a31645a7039c0759419b08",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@  * `tf.distribute.experimental.MultiWorkerMirroredStrategy` adds support for partial batches. Workers running out of data now continue to participate in the training with empty inputs, instead of raising an error. Learn more about [partial batches here](https://www.tensorflow.org/tutorials/distribute/input#partial_batches).\n  * Improve the performance of reading metrics eagerly under `tf.distribute.experimental.MultiWorkerMirroredStrategy`.\n  * Fix the issue that `strategy.reduce()` inside `tf.function` may raise exceptions when the values to reduce are from loops or if-clauses.\n  * Fix the issue that `tf.distribute.MirroredStrategy` cannot be used together with `tf.distribute.experimental.MultiWorkerMirroredStrategy`.\n  * Add a `tf.distribute.cluster_resolver.TPUClusterResolver.connect` API to simplify TPU initialization."
  },
  {
    "id" : "887e5bd2-d4ed-483b-8bd4-93cacb59b1ee",
    "prId" : 37312,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37312#pullrequestreview-391087969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11417d70-049e-4c5c-993c-89bd89445a75",
        "parentId" : null,
        "authorId" : "31e9c6a9-4365-4551-91c2-c4d047815157",
        "body" : "Would it be possible to bucketize these by themes?",
        "createdAt" : "2020-04-09T19:52:11Z",
        "updatedAt" : "2020-04-10T07:24:51Z",
        "lastEditedBy" : "31e9c6a9-4365-4551-91c2-c4d047815157",
        "tags" : [
        ]
      },
      {
        "id" : "8bccc39e-23e1-46c6-9bbd-796b37eedd21",
        "parentId" : "11417d70-049e-4c5c-993c-89bd89445a75",
        "authorId" : "31e9c6a9-4365-4551-91c2-c4d047815157",
        "body" : "Ahh! I see - they're nested. Resolving.",
        "createdAt" : "2020-04-09T19:54:01Z",
        "updatedAt" : "2020-04-10T07:24:51Z",
        "lastEditedBy" : "31e9c6a9-4365-4551-91c2-c4d047815157",
        "tags" : [
        ]
      }
    ],
    "commit" : "48776310dba080a194677145dd476224164d85fe",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@* The current TensorFlow release now **requires** [gast](https://pypi.org/project/gast/) version 0.3.3. \n\n## Bug Fixes and Other Changes\n* `tf.data`:\n  * Removed `autotune_algorithm` from experimental optimization options."
  },
  {
    "id" : "2ca9d8d2-5986-4377-8d92-14b26b4df25e",
    "prId" : 34887,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/34887#pullrequestreview-362284398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "parentId" : null,
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "@timshen91 shouldn't this also make XLAs' convolution deterministic?  And XLA's max-pool is already deterministic I think.",
        "createdAt" : "2019-12-08T20:28:27Z",
        "updatedAt" : "2019-12-08T20:28:28Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "7bdf3115-3cff-423b-82c2-cea6acd8fd85",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "@sanjoy, `TF_DETERMINISTIC_OPS` **does** make XLA-JIT-compiled cuDNN convolution and max-pooling deterministic, just as `TF_CUDNN_DETERMINISTIC` does. However, the current (temporary) [solution](https://github.com/tensorflow/tensorflow/pull/31465) to make [`tf.nn.bias_add`](https://github.com/tensorflow/tensorflow/blob/v2.1.0-rc0/tensorflow/python/ops/nn_ops.py#L2699) deterministic under `TF_DETERMINISTIC_OPS` is [undone by XLA JIT compilation](https://github.com/tensorflow/tensorflow/pull/31465#discussion_r333793547). When `tf.nn.bias_add` is made deterministic at the CUDA kernel level (which I plan to do), then XLA JIT compilation will not be able to undo the deterministic mode.\r\n\r\nFor v2.1, this functionality is finalized. If someone can suggest to me a way to locally prevent JIT optimization of only the Python code that provides a deterministic implementation of `tf.nn.bias_add` then that could be added for v2.2, and all determinism promised by `TF_DETERMINISTIC_OPS` could be delivered with XLA JIT compilation enabled.",
        "createdAt" : "2019-12-08T20:48:04Z",
        "updatedAt" : "2019-12-08T21:04:19Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "f85df471-8be4-4609-93b0-6f3d48440f05",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "> However, the current (temporary) [solution](https://github.com/tensorflow/tensorflow/pull/31465) to make [`tf.nn.bias_add`](https://github.com/tensorflow/tensorflow/blob/v2.1.0-rc0/tensorflow/python/ops/nn_ops.py#L2699) deterministic under `TF_DETERMINISTIC_OPS` is [undone by XLA JIT compilation](https://github.com/tensorflow/tensorflow/pull/31465#discussion_r333793547).\r\n\r\nI'm investigating why this happens but given what you said the notes LGTM.",
        "createdAt" : "2019-12-09T15:34:26Z",
        "updatedAt" : "2019-12-09T15:34:27Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "df274baf-1d7a-4f38-92df-a883d9f562f5",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "I don't know if this helps, and I'm not sure if I've written this anywhere else:\r\n\r\nAt the highest level, my working hypothesis was that the compiler was able to (1) find the original, non-deterministic op code, (2) recognize that it was arithmetically equivalent to the alternative grouping of deterministic ops, and (3) switch in the original op because it has higher performance.\r\n\r\nHowever, I didn't the use profiler to confirm that the old op's CUDA kernel was re-appearing with XLA JIT compilation enabled, and also I understand very little about the mechanics of the XLA JIT compiler and how it would have been able to accomplish this.",
        "createdAt" : "2019-12-09T18:13:01Z",
        "updatedAt" : "2019-12-09T18:13:02Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "96a2a034-9c09-4ce4-8987-ce1b03becda8",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "The HLO (XLA IR) we get out of TF has a `reduce` operation in it and reductions on XLA GPU are not deterministic: https://gist.github.com/sanjoy/bc9636188eb59bf42b211aa1e4614068\r\n\r\n@cheshire is working on a fix for this.  Can you share some context on why you need this?  That will help us prioritize implementing deterministic reductions.",
        "createdAt" : "2019-12-09T18:29:38Z",
        "updatedAt" : "2019-12-09T18:29:39Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "66c00ae1-3e10-4e85-92f0-ecfd060383c9",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "@sanjoy: Awesome! That makes so much more sense to me. Great to know. Thank you.\r\n\r\nRegarding, \"Can you share some context on why you need this?\" Is this a question for me? If so, are you asking why deterministic `tf.nn.bias_add` is important in TensorFlow in general?",
        "createdAt" : "2019-12-09T18:38:16Z",
        "updatedAt" : "2019-12-09T18:38:16Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "eb568c69-0941-4fbe-8951-25aa84a2e062",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "body" : "> Is this a question for me? If so, are you asking why deterministic `tf.nn.bias_add` is important in TensorFlow in general?\r\n\r\nYes.  I realize that there are general reasons why determinism is important (debuggability comes to mind) but if you have a more specific use case we'd like to know about it.",
        "createdAt" : "2019-12-09T20:04:12Z",
        "updatedAt" : "2019-12-09T20:04:12Z",
        "lastEditedBy" : "2861a495-42d5-4ac3-b543-23cf14c0a980",
        "tags" : [
        ]
      },
      {
        "id" : "eb146275-a90f-44f5-8049-e6b2211bdabe",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "There are four main areas I think about related to determinism:\r\n\r\nDeterminism is important for [1] experimentation (including hyper-parameter tuning), [2] debugging (as you noted), and [3] being able to detect and prevent regressions.\r\n\r\nOn the last point, for example, I discovered a serious bug in the simple LSTM cell in tensorflow/models while visually inspecting the code. Despite this bug, in the small configuration used for regression-testing the model happened to be able to train to within the expected range of accuracy. So the bug didn't fail the test and was not easily discovered.\r\n\r\nHowever, the biggest current factor driving the need for determinism is [4] deep learning solutions being deployed into production in safety-critical applications and markets (which are often government-regulated). This applies to any robotic application with proximity to humans, such as autonomous vehicles, and also to healthcare applications, such as medical diagnosis and imaging.\r\n\r\nI don't know the full history here, but non-deterministic `reduce_sum` and `reduce_mean` operators in TensorFlow were historically problematic. There were a lot of complaints about them in places like TF issues and on Stack Overflow. Non-determinism from `reduce_sum` and `reduce_mean` also often resulted in non-determinism in back-propagation because reduction is the way to back-prop gradients through an implicit broadcast. However, since at least v1.12, `reduce_sum` and `reduce_mean` have been operating deterministically.\r\n\r\nCoincidentally, the (temporary) solution (referred to by this current pull request) to provide a deterministic mode for `tf.nn.bias_add` relies on deterministic functionality of the reduction that is used to back-propagate the gradients through the implicit broadcast that it uses.\r\n\r\nIt's a relief to know what the source of non-determinism when using `tf.nn.bias_add` with both `TF_DETERMINISTIC_OPS` and XLA enabled is, and to know that @cheshire is working on a fix for it.\r\n\r\nPlease will you keep me informed about the status of this so that I can reflect it in the public documentation I maintain [here](https://github.com/NVIDIA/tensorflow-determinism)? Also, at that time (note to self), `xla_enable_strict_auto_jit` should be set to `True` for [this test](https://github.com/tensorflow/tensorflow/blob/v2.1.0-rc0/tensorflow/python/kernel_tests/BUILD#L1680).",
        "createdAt" : "2019-12-10T20:25:48Z",
        "updatedAt" : "2019-12-10T21:35:44Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "f44f12ea-ba79-4cbd-bfbb-62ab44e24383",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "@duncandean I have landed deterministic reductions in XLA behind the flag (XLA_FLAGS=--xla_gpu_deterministic_reductions), this commit will appear in the repository shortly. We are currently evaluating the performance to see whether we can switch it on by default.",
        "createdAt" : "2020-01-07T23:53:58Z",
        "updatedAt" : "2020-01-07T23:53:58Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "32de4df0-7a93-4233-b8f5-e921f9e5fd8b",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "@cheshire,\r\n\r\nWow! Thank you so much for doing that and also for letting me know.\r\n\r\nYes, please let me know if that becomes the default.\r\n\r\nPS. You tagged the wrong Duncan.",
        "createdAt" : "2020-01-07T23:58:24Z",
        "updatedAt" : "2020-01-07T23:58:25Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "9a555748-3814-4a19-ad88-cb3103682691",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "Also, please let me know if it gets cherry-picked into version 2.1. My default assumption is that it will be released in version 2.2.",
        "createdAt" : "2020-01-08T00:13:38Z",
        "updatedAt" : "2020-01-08T00:17:56Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "b357713f-ec41-4dc8-8c62-430e614a022b",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "I don't think we'll cherry-pick it to 2.1. I expect it to end up in 2.2. If we are lucky, it might become the default by then, but no promises.",
        "createdAt" : "2020-01-08T00:14:52Z",
        "updatedAt" : "2020-01-08T00:14:53Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "d49039ac-bd21-4320-8fdd-4ef1cee760f9",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "Sounds good. In the tensorflow-determinism project README, I have added info about this to the [solutions section](https://github.com/NVIDIA/tensorflow-determinism#confirmed-current-gpu-specific-sources-of-non-determinism-with-solutions) and a link to your commit to the [pull requests section](https://github.com/NVIDIA/tensorflow-determinism#tensorflow-pull-requests). I have also added your name to the [credits section](https://github.com/NVIDIA/tensorflow-determinism#credits).",
        "createdAt" : "2020-01-09T02:21:11Z",
        "updatedAt" : "2020-01-10T01:41:54Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "3a98767d-4502-4967-8dab-fac2484ccb34",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "@duncanriach As of https://github.com/tensorflow/tensorflow/commit/8b7a3db0b6e09415b5640be4986fb4d7c6e5209a reduction emitter respects TF_DETERMINISTIC_OPS. On our benchmark, it's performance is within 0.9x of the emitter which uses atomics.",
        "createdAt" : "2020-02-20T01:59:53Z",
        "updatedAt" : "2020-02-20T01:59:53Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "00e64abf-e9cd-4ef3-83d4-ba9308722a1f",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "Awesome! Thanks for doing this and for letting me know, @cheshire. I now plan to do the following:\r\n  1. DONE: Update [tensorflow-determinism](https://github.com/NVIDIA/tensorflow-determinism) to reflect this feature enhancement (coming in TF 2.2).\r\n  2. DONE ([PR 37377](https://github.com/tensorflow/tensorflow/pull/37377)): Submit a PR (hopefully before the 2.2 snap) to (1) make `TF_DETERMINISTIC_OPS` cached and sticky here, to exactly match its functionality elsewhere and (2) to enable the deterministic `bias_add` [kernel test](https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/kernel_tests/BUILD#L1680) for XLA.\r\n  3. DONE ([PR 38509](https://github.com/tensorflow/tensorflow/pull/38509))Add info about this to the TF 2.2 release notes when that snaps.",
        "createdAt" : "2020-02-20T22:27:21Z",
        "updatedAt" : "2020-04-13T21:16:35Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      },
      {
        "id" : "5b8a1165-321a-498d-82a1-5a79d4d00960",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "body" : "Cool. Once the performance is closer to the atomic version, I hope we can even switch to deterministic reductions by default.",
        "createdAt" : "2020-02-20T22:33:41Z",
        "updatedAt" : "2020-02-20T22:33:41Z",
        "lastEditedBy" : "46fa9a61-9f6f-4ecb-a276-f19713d630df",
        "tags" : [
        ]
      },
      {
        "id" : "509aceac-f71e-4e44-81e8-830e10d75f31",
        "parentId" : "ef866c25-ed38-40f7-a81f-c1a2637b22fe",
        "authorId" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "body" : "Nice. Thank you so much, @cheshire!",
        "createdAt" : "2020-02-20T22:35:46Z",
        "updatedAt" : "2020-02-20T22:35:56Z",
        "lastEditedBy" : "39e3aa8c-a3d1-45a2-8300-9bf553814b31",
        "tags" : [
        ]
      }
    ],
    "commit" : "544e1a1a7f139938a4f398eeeaa9eb1c74b6e0aa",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +20,24 @@* `TensorRT`\n  * [TensorRT 6.0](https://developer.nvidia.com/tensorrt#tensorrt-whats-new) is now supported and enabled by default. This adds support for more TensorFlow ops including Conv3D, Conv3DBackpropInputV2, AvgPool3D, MaxPool3D, ResizeBilinear, and ResizeNearestNeighbor. In addition, the TensorFlow-TensorRT python conversion API is exported as `tf.experimental.tensorrt.Converter`.\n  * Environment variable `TF_DETERMINISTIC_OPS` added. When set to \"true\" or \"1\", this environment variable makes `tf.nn.bias_add` operate deterministically (i.e. reproducibly) when XLA JIT compilation is *not* enabled. It also makes cuDNN convolution and max-pooling operate deterministically. This makes Keras Conv*D and MaxPool*D layers operate deterministically in both the forward and backward directions when running on a CUDA-enabled GPU.\n\n## Known issues"
  },
  {
    "id" : "e5c96c9e-6922-48f4-8515-e3ab309f4a3a",
    "prId" : 32247,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32247#pullrequestreview-284979668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70d58e12-4887-43d2-a65c-7d763fbc12aa",
        "parentId" : null,
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "We should link to the migration instructions, converter script, etc, very soon here",
        "createdAt" : "2019-09-05T17:18:51Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      },
      {
        "id" : "ab78a706-51d2-4b72-aadd-07fbbda39a24",
        "parentId" : "70d58e12-4887-43d2-a65c-7d763fbc12aa",
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "It does link to those guides. Do you mean link directly to the upgrade script?",
        "createdAt" : "2019-09-05T23:48:52Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "d1bc0c67-3550-41b9-90bd-9beadc55d59e",
        "parentId" : "70d58e12-4887-43d2-a65c-7d763fbc12aa",
        "authorId" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "body" : "It does, but not right at the top.",
        "createdAt" : "2019-09-06T16:48:00Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "0184dacc-e36e-4f02-9c48-fb3acedd41da",
        "tags" : [
        ]
      }
    ],
    "commit" : "05b627d38856b6048817f7bf89edfa17522bf3c4",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@# Release 2.0.0\n\n## Major Features and Improvements\n\nTensorFlow 2.0 focuses on **simplicity** and **ease of use**, featuring updates like:"
  },
  {
    "id" : "4c2adc85-6917-40b1-aa12-c0909d095f74",
    "prId" : 32247,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32247#pullrequestreview-285671642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03267d5f-92ff-4ea5-afa3-64e960dfd8c3",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Add here (@gunan to confirm words are correct):\r\n\r\n>TensorFlow 2.0 is built using devtoolset7 on Ubuntu 16. This may lead to ABI incompatibilities with extensions built against earlier versions of TensorFlow.",
        "createdAt" : "2019-09-05T23:51:40Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "bda2e3ab-fb7f-49fc-8215-1eaba47ebaad",
        "parentId" : "03267d5f-92ff-4ea5-afa3-64e960dfd8c3",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done.",
        "createdAt" : "2019-09-09T17:40:39Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "05b627d38856b6048817f7bf89edfa17522bf3c4",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@* Add `UnifiedGRU` as the new GRU implementation for tf2.0. Change the default recurrent activation function for GRU from `hard_sigmoid` to `sigmoid`, and `reset_after` to True in 2.0. Historically recurrent activation is `hard_sigmoid` since it is fast than 'sigmoid'. With new unified backend between CPU and GPU mode, since the CuDNN kernel is using sigmoid, we change the default for CPU mode to sigmoid as well. With that, the default GRU will be compatible with both CPU and GPU kernel. This will enable user with GPU to use CuDNN kernel by default and get a 10x performance boost in training. Note that this is checkpoint breaking change. If user want to use their 1.x pre-trained checkpoint, please construct the layer with GRU(recurrent_activation='hard_sigmoid', reset_after=False) to fallback to 1.x behavior.\n* `CUDNN_INSTALL_PATH`, `TENSORRT_INSTALL_PATH`, `NCCL_INSTALL_PATH`, `NCCL_HDR_PATH` are deprecated. Use `TF_CUDA_PATHS` instead which supports a comma-separated list of base paths that are searched to find CUDA libraries and headers.\n\nRefer to our [public project status tracker](https://github.com/orgs/tensorflow/projects/4) and [issues tagged with `2.0`](https://github.com/tensorflow/tensorflow/issues?q=is%3Aopen+is%3Aissue+label%3A2.0) on GitHub for insight into recent issues and development progress.\n"
  },
  {
    "id" : "e30ab5f6-d086-4345-93ad-62f8295faa68",
    "prId" : 32247,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/32247#pullrequestreview-294438397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09692055-5c47-4f49-bfc6-9d52e66773dd",
        "parentId" : null,
        "authorId" : "71391536-2b94-4e96-8ffe-c543e3034ace",
        "body" : "Can you add \"Deprecated `freeze_graph` command line tool.\"\r\n\r\nThanks!",
        "createdAt" : "2019-09-12T17:12:15Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "71391536-2b94-4e96-8ffe-c543e3034ace",
        "tags" : [
        ]
      },
      {
        "id" : "5e12a942-6c40-4e53-ae77-b1a61ecc0971",
        "parentId" : "09692055-5c47-4f49-bfc6-9d52e66773dd",
        "authorId" : "71391536-2b94-4e96-8ffe-c543e3034ace",
        "body" : "@martinwicke Yup I mean removed. Should it be \"Removed\" instead of \"Deprecated\"?\r\n\r\nHow about: \"Removed the `freeze_graph` command line tool; SavedModel should be used in place of frozen graphs.\"",
        "createdAt" : "2019-09-12T17:29:32Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "71391536-2b94-4e96-8ffe-c543e3034ace",
        "tags" : [
        ]
      },
      {
        "id" : "45f3766c-739b-45bb-9760-5465982d1524",
        "parentId" : "09692055-5c47-4f49-bfc6-9d52e66773dd",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done.",
        "createdAt" : "2019-09-27T16:37:02Z",
        "updatedAt" : "2019-09-27T17:30:26Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "05b627d38856b6048817f7bf89edfa17522bf3c4",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@* Add `UnifiedGRU` as the new GRU implementation for tf2.0. Change the default recurrent activation function for GRU from `hard_sigmoid` to `sigmoid`, and `reset_after` to True in 2.0. Historically recurrent activation is `hard_sigmoid` since it is fast than 'sigmoid'. With new unified backend between CPU and GPU mode, since the CuDNN kernel is using sigmoid, we change the default for CPU mode to sigmoid as well. With that, the default GRU will be compatible with both CPU and GPU kernel. This will enable user with GPU to use CuDNN kernel by default and get a 10x performance boost in training. Note that this is checkpoint breaking change. If user want to use their 1.x pre-trained checkpoint, please construct the layer with GRU(recurrent_activation='hard_sigmoid', reset_after=False) to fallback to 1.x behavior.\n* `CUDNN_INSTALL_PATH`, `TENSORRT_INSTALL_PATH`, `NCCL_INSTALL_PATH`, `NCCL_HDR_PATH` are deprecated. Use `TF_CUDA_PATHS` instead which supports a comma-separated list of base paths that are searched to find CUDA libraries and headers.\n\nRefer to our [public project status tracker](https://github.com/orgs/tensorflow/projects/4) and [issues tagged with `2.0`](https://github.com/tensorflow/tensorflow/issues?q=is%3Aopen+is%3Aissue+label%3A2.0) on GitHub for insight into recent issues and development progress.\n"
  },
  {
    "id" : "cfa5447f-d025-49a3-9bd1-d82ccf3443ce",
    "prId" : 31861,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/31861#pullrequestreview-284652139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f92745b9-f6b7-46d3-bd83-168559a70377",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Let's add here: \r\n\r\n>This is the last 1.x release for TensorFlow. We do not expect to update the 1.x branch with features, although we will issue patch releases to fix vulnerabilities for at least one year. ",
        "createdAt" : "2019-09-05T23:18:21Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "4c99eede-98b1-4d25-9f75-198c8d974af3",
        "parentId" : "f92745b9-f6b7-46d3-bd83-168559a70377",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done!",
        "createdAt" : "2019-09-06T04:39:27Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "b27ac431aa37cfeb9d5c35cc50081cdb6763a40e",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@# Release 1.15.0\nThis is the last 1.x release for TensorFlow. We do not expect to update the 1.x branch with features, although we will issue patch releases to fix vulnerabilities for at least one year. \n\n## Major Features and Improvements\n* As [announced](https://groups.google.com/a/tensorflow.org/forum/#!topic/developers/iRCt5m4qUz0), `tensorflow` pip package will by default include GPU support (same as `tensorflow-gpu` now) for the platforms we currently have GPU support (Linux and Windows). It will work on machines with and without Nvidia GPUs. `tensorflow-gpu` will still be available, and CPU-only packages can be downloaded at `tensorflow-cpu` for users who are concerned about package size."
  },
  {
    "id" : "182fd672-ff08-4135-aaa0-d4b7dbf6701c",
    "prId" : 31861,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/31861#pullrequestreview-284652376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54eb3e40-1ae2-43cb-8ea4-39a2c055ce3d",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Add here: \r\n\r\n\r\n>TensorFlow 1.15 contains a complete implementation of the 2.0 API in its `compat.v2` module. It contains a copy of the 1.15 main module (without `contrib`) in the `compat.v1` module. TensorFlow 1.15 is able to emulate 2.0 behavior using the `enable_v2_behavior()` function.\r\n>\r\n>This enables writing forward compatible code: by explicitly importing either `tensorflow.compat.v1` or `tensorflow.compat.v2`, you can ensure that your code works without modifications against an installation of 1.15 or 2.0.\r\n",
        "createdAt" : "2019-09-05T23:22:16Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "149e5f5b-9da8-4f75-8902-b7afb4c0c80e",
        "parentId" : "54eb3e40-1ae2-43cb-8ea4-39a2c055ce3d",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done.",
        "createdAt" : "2019-09-06T04:40:52Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "b27ac431aa37cfeb9d5c35cc50081cdb6763a40e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@  * Tensors are no longer hashable.\n  * Tensors can be compared with `==` and `!=`, yielding a Boolean Tensor with element-wise comparison results. This will be the default behavior in 2.0.\n\n## Breaking Changes\n* Tensorflow code now produces 2 different pip packages: `tensorflow_core` containing all the code (in the future it will contain only the private implementation) and `tensorflow` which is a virtual pip package doing forwarding to `tensorflow_core` (and in the future will contain only the public API of tensorflow). We don't expect this to be breaking, unless you were importing directly from the implementation."
  },
  {
    "id" : "5fe4b863-ffa5-4de3-909b-b57965773b21",
    "prId" : 31861,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/31861#pullrequestreview-284653040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e7878ee-caf3-4d89-a620-9977d2d1d8a2",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Add here (@gunan to confirm words are correct): \r\n\r\n>TensorFlow 1.15 is built using devtoolset7 on Ubuntu 16. This may lead to ABI incompatibilities with extensions built against earlier versions of TensorFlow.",
        "createdAt" : "2019-09-05T23:29:51Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "24fdc571-32fe-4c39-9784-a5a7d939dd9e",
        "parentId" : "8e7878ee-caf3-4d89-a620-9977d2d1d8a2",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Updated. @gunan PTAL",
        "createdAt" : "2019-09-06T04:44:42Z",
        "updatedAt" : "2019-10-14T20:00:21Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "b27ac431aa37cfeb9d5c35cc50081cdb6763a40e",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@  * Layers now default to `float32`, and automatically cast their inputs to the layer's dtype. If you had a model that used `float64`, it will probably silently use `float32` in TensorFlow2, and a warning will be issued that starts with Layer \"layer-name\" is casting an input tensor from dtype float64 to the layer's dtype of float32. To fix, either set the default dtype to float64 with `tf.keras.backend.set_floatx('float64')`, or pass `dtype='float64'` to each of the Layer constructors. See `tf.keras.layers.Layer` for more information.\n  * Some `tf.assert_*` methods now raise assertions at operation creation time (i.e. when this Python line executes) if the input tensors' values are known at that time, not during the session.run(). When this happens, a noop is returned and the input tensors are marked non-feedable. In other words, if they are used as keys in `feed_dict` argument to `session.run()`, an error will be raised. Also, because some assert ops don't make it into the graph, the graph structure changes. A different graph can result in different per-op random seeds when they are not given explicitly (most often).\n\n## Bug Fixes and Other Changes\n* `tf.estimator`:"
  },
  {
    "id" : "baba51da-2073-45dd-b8f7-9db9d7193098",
    "prId" : 29742,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/29742#pullrequestreview-249400921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f52d379f-a5f5-46cb-9fe4-5296e71d3337",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "Partially?",
        "createdAt" : "2019-06-13T14:25:08Z",
        "updatedAt" : "2019-06-13T14:25:08Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "c5b88cf7-4f89-43b5-920f-9892d0d29a1e",
        "parentId" : "f52d379f-a5f5-46cb-9fe4-5296e71d3337",
        "authorId" : "d9857ae4-1f12-46ba-8f0b-0bc35ebb4bfa",
        "body" : "There is a minor use case for masked input, which is still using the normal low performant kernel and need to be addressed.",
        "createdAt" : "2019-06-13T14:47:14Z",
        "updatedAt" : "2019-06-13T14:47:14Z",
        "lastEditedBy" : "d9857ae4-1f12-46ba-8f0b-0bc35ebb4bfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ea23f8722b7a5aa5a354eafa2c54124b1c287ef",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@\n## Bug Fixes and Other Changes\n* Partially fix the function inlining and performance regression for LSTM/GRU.\n* Replace training tensor argument with python boolean. Required for TFLite, which does not yet support control flow ops.\n* Allow SavedModel serialization to accept `None` InputSpec values."
  },
  {
    "id" : "be3e1735-107d-40ed-92e2-5fd8d4e900e1",
    "prId" : 26369,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/26369#pullrequestreview-210883255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc342cd1-7e78-41e9-861b-e3d0d0d8f95b",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "remove, since all of contrib is removed",
        "createdAt" : "2019-03-05T19:43:53Z",
        "updatedAt" : "2019-03-05T20:23:52Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b77d218591459304d8d9738b24e1afa6f3ea1b25",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@## Bug Fixes and Other Changes\n\n* `tf.estimator`\n  * Use `tf.compat.v1.estimator.inputs` instead of `tf.estimator.inputs` in Estimator.\n  * Replace contrib references with `tf.estimator.experimental.*` for apis in `early_stopping.py` in Estimator."
  },
  {
    "id" : "49dfa177-baec-4b5e-a134-d80e403e9157",
    "prId" : 22782,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22782#pullrequestreview-162567320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8f5f83d-20fa-4e62-845b-cefdc0c75f3c",
        "parentId" : null,
        "authorId" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "body" : "We should also add a bullet for the new `tf.data.Dataset.reduce()` and `tf.data.Dataset.window()` transformations:\r\n\r\n```\r\n  * New `tf.data.Dataset.reduce()` API allows users to reduce a finite dataset to a single element using a user-provided reduce function.\r\n  * New `tf.data.Dataset.window()` API allows users to create finite windows of input dataset; when combined with the `tf.data.Dataset.reduce()` API, this allows users to implement customized batching.\r\n```\r\n",
        "createdAt" : "2018-10-08T17:14:23Z",
        "updatedAt" : "2018-10-08T17:53:59Z",
        "lastEditedBy" : "b4c739be-8aba-4687-9314-60b582f3b6d6",
        "tags" : [
        ]
      },
      {
        "id" : "caaafb29-e81f-4343-90bf-1195bf176f5a",
        "parentId" : "d8f5f83d-20fa-4e62-845b-cefdc0c75f3c",
        "authorId" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "body" : "Done.",
        "createdAt" : "2018-10-08T17:21:33Z",
        "updatedAt" : "2018-10-08T17:53:59Z",
        "lastEditedBy" : "e3bfaa8e-80c0-42ab-8407-1068d8dcd170",
        "tags" : [
        ]
      }
    ],
    "commit" : "5474ecfc623a826ca307e75057732ba190660d67",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@## Bug Fixes and Other Changes\n\n* tf.data:\n  * tf.data users can now represent, get, and set options of TensorFlow input pipelines using `tf.data.Options()`, `tf.data.Dataset.options()`, and `tf.data.Dataset.with_options()` respectively.\n  * New `tf.data.Dataset.reduce()` API allows users to reduce a finite dataset to a single element using a user-provided reduce function."
  },
  {
    "id" : "0df14aa0-97dc-4df9-aa90-2c858fc31873",
    "prId" : 22067,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/22067#pullrequestreview-153091954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d487616-3ebf-461c-aba3-aa5083a99d53",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Also:\r\n  * Experimental / preview support for eager execution on Google Cloud TPUs",
        "createdAt" : "2018-09-05T22:41:10Z",
        "updatedAt" : "2018-09-06T19:45:07Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "2b0e0422-71e6-4283-adde-e89e05b51ddc",
        "parentId" : "6d487616-3ebf-461c-aba3-aa5083a99d53",
        "authorId" : "73965441-3b1c-418f-a1b6-66ac293feeb2",
        "body" : "Done, thanks!",
        "createdAt" : "2018-09-06T19:47:13Z",
        "updatedAt" : "2018-09-06T19:47:13Z",
        "lastEditedBy" : "73965441-3b1c-418f-a1b6-66ac293feeb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52d1e2c594105d0a70891fc9c1f1fe7157f1d5d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@  * Prebuilt binaries are now (as of TensorFlow 1.11) built against cuDNN 7.2 and TensorRT 4. See updated install guides: [Installing TensorFlow on Ubuntu](https://www.tensorflow.org/install/install_linux#tensorflow_gpu_support)\n* Google Cloud TPU:\n  * Experimental tf.data integration for Keras on Google Cloud TPUs.\n  * Experimental / preview support for eager execution on Google Cloud TPUs.\n* DistributionStrategy:"
  },
  {
    "id" : "42c3fbb0-e789-41f6-aefc-f31b05c23180",
    "prId" : 16671,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/16671#pullrequestreview-93387083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87d591f6-bbac-483d-b97e-acecd8445108",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "This also should stay in 1.5 notes, as it also applies to 1.5",
        "createdAt" : "2018-02-01T18:22:09Z",
        "updatedAt" : "2018-02-02T08:28:07Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "d9912bd6-2695-4faa-b689-5eeb85015e8b",
        "parentId" : "87d591f6-bbac-483d-b97e-acecd8445108",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "Done.",
        "createdAt" : "2018-02-01T18:27:38Z",
        "updatedAt" : "2018-02-02T08:28:07Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ffd76dda92a37198a220d8e49cc454e248f8776",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +40,44 @@* Move `layers_dense_variational_impl.py` to `layers_dense_variational.py`.\n\n## Known Bugs\n* Using XLA:GPU with CUDA 9 and CUDA 9.1 results in garbage results and/or\n  `CUDA_ILLEGAL_ADDRESS` failures."
  },
  {
    "id" : "aec773ae-d7ff-4eee-8a48-80c6ffbca945",
    "prId" : 16671,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/16671#pullrequestreview-93395631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbae5c83-f263-4642-be23-da7754513a3e",
        "parentId" : null,
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "This has not changed since 1.5. So technically it is not a breaking change. But I like it to be easy to find.\r\nSo While I have some objections to the section, I like it being in the release notes.",
        "createdAt" : "2018-02-01T18:53:56Z",
        "updatedAt" : "2018-02-02T08:28:07Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ffd76dda92a37198a220d8e49cc454e248f8776",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2,6 @@\n## Breaking Changes\n* Prebuilt binaries are now built against CUDA 9.0 and cuDNN 7.\n* Prebuilt binaries will use AVX instructions. This may break TF on older CPUs.\n"
  },
  {
    "id" : "538c60ec-9081-49cc-afa3-95d8596143df",
    "prId" : 11616,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/11616#pullrequestreview-51007519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ad1e958-799f-4b27-98eb-85735ed3943e",
        "parentId" : null,
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "Add\r\n* TensorFlow Debugger (tfdbg):\r\n** Fixed a bug that prevent tfdbg from functioning with multi-GPU setups.\r\n** Fixed a bug that prevent tfdbg from working with `tf.Session.make_callable`.",
        "createdAt" : "2017-07-19T17:59:09Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "88ef63bc-9d4a-442a-86a4-657eacfcd34d",
        "parentId" : "0ad1e958-799f-4b27-98eb-85735ed3943e",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "Done.",
        "createdAt" : "2017-07-19T18:18:26Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      },
      {
        "id" : "6636f350-572d-4466-935e-b091dda0b8ad",
        "parentId" : "0ad1e958-799f-4b27-98eb-85735ed3943e",
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "oops, sorry for the grammar errors. please fix when you add them :) thanks",
        "createdAt" : "2017-07-19T18:45:25Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "c730ba11-f61e-45da-8fa8-4b88c7ee6c3c",
        "parentId" : "0ad1e958-799f-4b27-98eb-85735ed3943e",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "Done.",
        "createdAt" : "2017-07-19T18:58:22Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe004f9f7b462668f1650eb070205f539e85c9c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@* Adds FULLY_CONNECTED Op to tensorflow/contrib/lite/schema.fbs\n\n## Bug Fixes and Other Changes\n* Fixes 'strides' and 'begin' dtype mismatch when slicing using int64 Tensor index in python.\n* Improved convolution padding documentation."
  },
  {
    "id" : "c7a3e9d5-f3f5-4236-8835-a501ae9e7cf9",
    "prId" : 11616,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/11616#pullrequestreview-50995703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8672b8a7-bfda-4600-a0f6-22e4096cf573",
        "parentId" : null,
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "Add:\r\n* TensorFlow Debugger (tfdbg): Display summaries of numeric tensor values with the `-s` flag to command `print_tensor` or `pt`.",
        "createdAt" : "2017-07-19T18:00:19Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "2b3d849a-cd75-4810-9c39-5fa1483113e3",
        "parentId" : "8672b8a7-bfda-4600-a0f6-22e4096cf573",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "Done.",
        "createdAt" : "2017-07-19T18:18:22Z",
        "updatedAt" : "2017-07-19T18:58:48Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe004f9f7b462668f1650eb070205f539e85c9c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@* Introduces base implementations of ClusterResolvers.\n* Unify memory representations of TensorShape and PartialTensorShape. As a consequence, tensors now have a maximum of 254 dimensions, not 255.\n* Changed references to LIBXSMM to use version 1.8.1.\n* TensorFlow Debugger (tfdbg): Display summaries of numeric tensor values with the `-s` flag to command `print_tensor` or `pt`.\n"
  },
  {
    "id" : "6f62269c-0d4b-4014-a370-1c27f3e6d952",
    "prId" : 9206,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/9206#pullrequestreview-32785560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68b8b83e-f624-40d7-afb0-07f6724efd02",
        "parentId" : null,
        "authorId" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "body" : "nit: Is it usually called \"Text Summary\", instead of \"Text Dashboard\"? (I have personally never heard of the latter term).\r\n\r\ncc @dandelionmane @dsmilkov ",
        "createdAt" : "2017-04-14T03:45:13Z",
        "updatedAt" : "2017-04-14T03:46:11Z",
        "lastEditedBy" : "f5dd8398-4230-4def-9f54-7223465d62b8",
        "tags" : [
        ]
      },
      {
        "id" : "66906667-ec95-4027-8b7a-5c7e3a6ccccf",
        "parentId" : "68b8b83e-f624-40d7-afb0-07f6724efd02",
        "authorId" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "body" : "I am quoting @dandelionmane from an email regarding that feature. ",
        "createdAt" : "2017-04-14T05:44:55Z",
        "updatedAt" : "2017-04-14T05:44:55Z",
        "lastEditedBy" : "790d4095-991a-4f3f-b02b-5a0e25c6c19f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a8d055eb632e981f685920bf17c9d6d18cc54e6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +17,21 @@  * NodeStepper (command `invoke_stepper`) now uses intermediate tensor dumps. It also uses `TensorHandles` as direct feeds during successive `cont` calls for improved performance and reduced memory consumption.\n* Initial release of installation guides for Java, C, and Go.\n* Added Text Dashboard to TensorBoard.\n\n## Deprecations"
  },
  {
    "id" : "a117c3ef-0254-490c-b710-50ab4fe7de08",
    "prId" : 5797,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/5797#pullrequestreview-9955190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0709a613-b628-4696-b2ab-35af7f518715",
        "parentId" : null,
        "authorId" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "body" : "I think we're missing @ilblackdragon's change of the initialization function names here.",
        "createdAt" : "2016-11-23T02:15:00Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "3517ca44-bbf1-44f4-bada-c2b75e1ecd1e",
        "tags" : [
        ]
      },
      {
        "id" : "6da5df6c-231d-4e3e-8671-493865b4b640",
        "parentId" : "0709a613-b628-4696-b2ab-35af7f518715",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "@ilblackdragon Could you send me what you would like to have included here?",
        "createdAt" : "2016-11-23T06:29:35Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "3c1014ce-706e-44e1-a795-f554475083c3",
        "parentId" : "0709a613-b628-4696-b2ab-35af7f518715",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Done",
        "createdAt" : "2016-11-23T22:29:09Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "b002a886f22e0480f69bc31f52ccd0df6379eb01",
    "line" : null,
    "diffHunk" : "@@ -1,1 +35,39 @@* New contrib module for tensors with named axes, `tf.contrib.labeled_tensor`.\n\n## Breaking Changes to the API\n\n* `BusAdjacency` enum replaced with a protocol buffer `DeviceLocality`.  PCI bus"
  },
  {
    "id" : "6127bd4d-8477-4b94-a596-6bc8ca8e8ba3",
    "prId" : 5797,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/5797#pullrequestreview-9958519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dc15097-7f23-4892-b144-8d3b00b6d11e",
        "parentId" : null,
        "authorId" : "ac96eec7-88c0-43fe-a145-8fe3cbfe5b49",
        "body" : "It would also be good to mention two other new contrib modules, `integrate` and `labeled_tensor`. I'm happy to come up with some appropriate language.\r\n\r\nDo we have a standard process for maintaining/updating these notes before we issue the release?",
        "createdAt" : "2016-11-23T03:26:04Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "ac96eec7-88c0-43fe-a145-8fe3cbfe5b49",
        "tags" : [
        ]
      },
      {
        "id" : "26ea3d9f-0dd0-4c53-90ca-2d60540dfc84",
        "parentId" : "8dc15097-7f23-4892-b144-8d3b00b6d11e",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "You can add these to RELEASES.md at the \"Updates since the release\" section at the top. Or you can leave a RELNOTES: with a one line description in your change. Either of the two would work.\r\nIf you can ping me what you would like included here, I will be happy to add them here.",
        "createdAt" : "2016-11-23T06:29:17Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      },
      {
        "id" : "4ad66543-e6c6-4651-bd2f-d508b4b586c1",
        "parentId" : "8dc15097-7f23-4892-b144-8d3b00b6d11e",
        "authorId" : "ac96eec7-88c0-43fe-a145-8fe3cbfe5b49",
        "body" : "Short but sweet:\r\n\r\n* Added a solver for ordinary differential equations, tf.contrib.integrate.odeint.\r\n* New contrib module for tensors with named axes, tf.contrib.labeled_tensor.",
        "createdAt" : "2016-11-23T22:41:20Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "ac96eec7-88c0-43fe-a145-8fe3cbfe5b49",
        "tags" : [
        ]
      },
      {
        "id" : "f945895d-b318-4513-81f9-77db51d73d40",
        "parentId" : "8dc15097-7f23-4892-b144-8d3b00b6d11e",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "Done.",
        "createdAt" : "2016-11-23T23:00:39Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "b002a886f22e0480f69bc31f52ccd0df6379eb01",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@  `tf.contrib.integrate.odeint`.\n* New contrib module for tensors with named axes, `tf.contrib.labeled_tensor`.\n\n## Breaking Changes to the API\n"
  },
  {
    "id" : "726802d3-ccea-45b9-989c-098ad02ee546",
    "prId" : 5797,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/5797#pullrequestreview-9955226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc2b9d97-9c90-4955-9c17-f888b9975442",
        "parentId" : null,
        "authorId" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "body" : "Optional: Make this a link?\r\n([godoc](https://godoc.org/...))",
        "createdAt" : "2016-11-23T08:23:09Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "ff531721-78ce-45aa-b6a0-b9f2e664f0c2",
        "tags" : [
        ]
      },
      {
        "id" : "1b94cb09-9756-4886-9a4b-70c12c8430f3",
        "parentId" : "fc2b9d97-9c90-4955-9c17-f888b9975442",
        "authorId" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "body" : "I feel like The release notes are going to be copy pasted a lot, so having the full link visible I think will be more beneficial.",
        "createdAt" : "2016-11-23T22:29:32Z",
        "updatedAt" : "2016-11-25T08:20:05Z",
        "lastEditedBy" : "28fabc34-a1ac-4aba-988b-9c9e03232122",
        "tags" : [
        ]
      }
    ],
    "commit" : "b002a886f22e0480f69bc31f52ccd0df6379eb01",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +17,21 @@  QuantizeV2, RequantizationRange, and Requantize.\n* Go: Experimental API in Go to create and execute graphs\n  (https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go)\n* New checkpoint format becomes the default in `tf.train.Saver`. Old V1\n  checkpoints continue to be readable; controlled by the `write_version`"
  }
]