[
  {
    "id" : "935a9ee8-0f52-4197-888d-75adb92a4fe8",
    "prId" : 21203,
    "prUrl" : "https://github.com/flutter/flutter/pull/21203#pullrequestreview-151114837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc95bb3d-241a-4b76-b8a6-70bda3f70e24",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what about these others?",
        "createdAt" : "2018-08-30T18:01:45Z",
        "updatedAt" : "2018-08-30T18:01:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c9faaafc-dd3b-4e5e-91b9-8c937b62702f",
        "parentId" : "bc95bb3d-241a-4b76-b8a6-70bda3f70e24",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh i see what's going on.",
        "createdAt" : "2018-08-30T18:02:28Z",
        "updatedAt" : "2018-08-30T18:02:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0031892ffffa96f2048534e02274fea96fdebffe",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +269,273 @@        final int count = 'package:test'.allMatches(data).length;\n        if (path.split(file.path).contains('test_driver') ||\n            name.startsWith('dev/missing_dependency_tests/') ||\n            name.startsWith('dev/automated_tests/') ||\n            name.startsWith('packages/flutter/test/engine/') ||"
  },
  {
    "id" : "ade3345b-aac1-407d-8105-a49178af97c3",
    "prId" : 26539,
    "prUrl" : "https://github.com/flutter/flutter/pull/26539#pullrequestreview-192345696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe33457-652e-489b-85a6-916038e648e1",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I thought we expected imports to use single quotes?",
        "createdAt" : "2019-01-14T19:36:19Z",
        "updatedAt" : "2019-01-14T19:36:19Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c8793ca4-3407-4a69-9d21-d00a1eb957dc",
        "parentId" : "cfe33457-652e-489b-85a6-916038e648e1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think checking for both makes this more resilient to lint failures.",
        "createdAt" : "2019-01-14T20:23:33Z",
        "updatedAt" : "2019-01-14T20:23:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "98800096-bb0a-422d-9dc9-0d93d01c0949",
        "parentId" : "cfe33457-652e-489b-85a6-916038e648e1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "We do, but if this check doesn't look for double quotes, then it might miss a problem in imports.  There is another analyzer lint that checks for double quotes here, so it will still fail the analysis.\r\n\r\nI wanted those to be independent checks: imagine if you put double quotes on a problematic import: the analysis would fail the first time on the double quote check, but give no other errors.  The second time you ran it, it would give the \"import problem\" error.  The way this RegExp is, you'd now get both errors on the first run.",
        "createdAt" : "2019-01-14T20:23:41Z",
        "updatedAt" : "2019-01-14T20:24:31Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8da205f7abc1085dd8b68891c380e9b59d6677",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +385,389 @@\nfinal RegExp _importPattern = RegExp(r'''^\\s*import (['\"])package:flutter/([^.]+)\\.dart\\1''');\nfinal RegExp _importMetaPattern = RegExp(r'''^\\s*import (['\"])package:meta/meta.dart\\1''');\n\nSet<String> _findDependencies(String srcPath, List<String> errors, { bool checkForMeta = false }) {"
  },
  {
    "id" : "cd07ecf9-40ab-48a2-8196-740f4acc1e10",
    "prId" : 26539,
    "prUrl" : "https://github.com/flutter/flutter/pull/26539#pullrequestreview-192345105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "How do these ignore comments?",
        "createdAt" : "2019-01-14T20:19:50Z",
        "updatedAt" : "2019-01-14T20:19:50Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "6dba82c3-98a1-4e88-9a41-d44813199e53",
        "parentId" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "The \"^\" anchors the search at the start of the line.",
        "createdAt" : "2019-01-14T20:20:22Z",
        "updatedAt" : "2019-01-14T20:20:23Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "6c30372e-dedd-4970-9ffc-8810c6f555a1",
        "parentId" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "mind = blown",
        "createdAt" : "2019-01-14T20:22:03Z",
        "updatedAt" : "2019-01-14T20:22:03Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8da205f7abc1085dd8b68891c380e9b59d6677",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +385,389 @@\nfinal RegExp _importPattern = RegExp(r'''^\\s*import (['\"])package:flutter/([^.]+)\\.dart\\1''');\nfinal RegExp _importMetaPattern = RegExp(r'''^\\s*import (['\"])package:meta/meta.dart\\1''');\n\nSet<String> _findDependencies(String srcPath, List<String> errors, { bool checkForMeta = false }) {"
  },
  {
    "id" : "5ec4487b-2ca8-4670-b7cf-dd7d17efaf79",
    "prId" : 27811,
    "prUrl" : "https://github.com/flutter/flutter/pull/27811#pullrequestreview-210100531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a053e228-c3f9-42ba-a482-170e93a7c81e",
        "parentId" : null,
        "authorId" : "45730bc7-c629-493b-a214-3d2bad023a3c",
        "body" : "can't second type specification be omitted?\r\nlike: `final Set<String> outOfDate = {};`\r\n(theoretically - yes as it can be inferred from variable type declared)",
        "createdAt" : "2019-03-04T11:44:02Z",
        "updatedAt" : "2019-03-06T03:55:02Z",
        "lastEditedBy" : "45730bc7-c629-493b-a214-3d2bad023a3c",
        "tags" : [
        ]
      },
      {
        "id" : "d5da7858-0236-4ecf-b386-b7c146fb44d4",
        "parentId" : "a053e228-c3f9-42ba-a482-170e93a7c81e",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "yes but the internal Flutter style guide requires to always specify types.",
        "createdAt" : "2019-03-04T11:48:54Z",
        "updatedAt" : "2019-03-06T03:55:02Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b492e31c15ad9695dd719e9ddef09ce979ab1a19",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +544,548 @@  }\n\n  final Set<String> outOfDate = <String>{};\n\n  for (String package in packageToRegistrants.keys) {"
  },
  {
    "id" : "274b4426-0029-4f00-9e4b-7e3fc75a6591",
    "prId" : 44618,
    "prUrl" : "https://github.com/flutter/flutter/pull/44618#pullrequestreview-317949926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccf84675-a093-4902-a564-70f1a9fa2648",
        "parentId" : null,
        "authorId" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "body" : "```suggestion\r\n      lineNumber++;\r\n```",
        "createdAt" : "2019-11-15T22:55:47Z",
        "updatedAt" : "2019-11-15T22:58:38Z",
        "lastEditedBy" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "tags" : [
        ]
      },
      {
        "id" : "80a282b5-ef4d-4c21-8383-ad1999b3f30d",
        "parentId" : "ccf84675-a093-4902-a564-70f1a9fa2648",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "We prefer `+=` over `++` for several reasons. First, in some languages/compilers suffix `++` is an antipattern because of performance reasons, and so it's easier to just avoid it in general. Second, it isn't as obvious that it actually mutates the underlying variable, whereas `+=` very clearly does (it's an assignment with an `=` sign). Third, it makes it more convenient when changing the increment to a number other than 1.",
        "createdAt" : "2019-11-16T03:21:08Z",
        "updatedAt" : "2019-11-16T03:21:09Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9731d0b2da7b83dd585e3cb6497837e132078e1a",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +157,161 @@        linesWithDeprecations.add(lineNumber);\n      }\n      lineNumber += 1;\n    }\n    for (int lineNumber in linesWithDeprecations) {"
  },
  {
    "id" : "c0a2f598-423c-4e1c-a2cd-282b06ed612e",
    "prId" : 44618,
    "prUrl" : "https://github.com/flutter/flutter/pull/44618#pullrequestreview-317912539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e37327c1-7bd0-429b-a46f-56c52ee016c8",
        "parentId" : null,
        "authorId" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "body" : "```suggestion\r\n          lineNumber++;\r\n```",
        "createdAt" : "2019-11-15T22:56:13Z",
        "updatedAt" : "2019-11-15T22:58:38Z",
        "lastEditedBy" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9731d0b2da7b83dd585e3cb6497837e132078e1a",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +182,186 @@          }\n          message = match2[1];\n          lineNumber += 1;\n          if (lineNumber >= lines.length)\n            throw 'Incomplete deprecation notice.';"
  },
  {
    "id" : "d1a6faa3-ef2b-4aa8-a358-999a7c7941ac",
    "prId" : 44618,
    "prUrl" : "https://github.com/flutter/flutter/pull/44618#pullrequestreview-317912539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7adbb43-d2ca-4a80-850f-0e2577d2f1de",
        "parentId" : null,
        "authorId" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "body" : "```suggestion\r\n        lineNumber++;\r\n```",
        "createdAt" : "2019-11-15T22:56:26Z",
        "updatedAt" : "2019-11-15T22:58:38Z",
        "lastEditedBy" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9731d0b2da7b83dd585e3cb6497837e132078e1a",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +195,199 @@            throw 'A URL to the deprecation notice is required.';\n        }\n        lineNumber += 1;\n        if (lineNumber >= lines.length)\n          throw 'Incomplete deprecation notice.';"
  },
  {
    "id" : "b2dd5d85-bc94-4985-8139-6996c145c350",
    "prId" : 44772,
    "prUrl" : "https://github.com/flutter/flutter/pull/44772#pullrequestreview-316565838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392bd2b3-69bc-43a1-b458-322cd6c86863",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "`@alwaysThrows` since you were using it above?",
        "createdAt" : "2019-11-13T00:07:32Z",
        "updatedAt" : "2019-11-13T21:27:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "3ae02f79-0567-4091-8b8d-d56de919ba5c",
        "parentId" : "392bd2b3-69bc-43a1-b458-322cd6c86863",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "i removed it in both places.",
        "createdAt" : "2019-11-13T21:23:37Z",
        "updatedAt" : "2019-11-13T21:27:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b99150fb1ddde6daa9f9f402956419365bc4727",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +34,38 @@// than truly immediately terminating the application, so that we can\n// test the exit code in unit tests (see test/analyze_test.dart).\nvoid exit(int exitCode) {\n  throw ExitException(exitCode);\n}"
  },
  {
    "id" : "bdf7dc21-a2a8-4c4f-a727-e32efe447284",
    "prId" : 44772,
    "prUrl" : "https://github.com/flutter/flutter/pull/44772#pullrequestreview-316566646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bfd9c5c-f405-40d4-b721-4fb43f94d4c7",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe also add a comment here explaining why we do this dance around `exit`. Future reader will probably appreciate it.",
        "createdAt" : "2019-11-13T00:18:42Z",
        "updatedAt" : "2019-11-13T21:27:20Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "c458e1d7-376f-4fa8-b6b6-bcad9926bdbb",
        "parentId" : "7bfd9c5c-f405-40d4-b721-4fb43f94d4c7",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "done",
        "createdAt" : "2019-11-13T21:25:01Z",
        "updatedAt" : "2019-11-13T21:27:20Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b99150fb1ddde6daa9f9f402956419365bc4727",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +34,38 @@// than truly immediately terminating the application, so that we can\n// test the exit code in unit tests (see test/analyze_test.dart).\nvoid exit(int exitCode) {\n  throw ExitException(exitCode);\n}"
  },
  {
    "id" : "8afaf5bd-66a5-4d33-90b0-45df3e6e0184",
    "prId" : 47875,
    "prUrl" : "https://github.com/flutter/flutter/pull/47875#pullrequestreview-336885560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36b6386c-3a85-4318-aee7-6422ae2983e5",
        "parentId" : null,
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "to avoid `\\n` it could be \r\n\r\n```dart\r\n...errors.expand((String paragraph) => <String>[paragraph, '']),\r\n```\r\n\r\nor \r\n\r\n```dart\r\nfor (String paragraph in errors) ...<String>[\r\n  paragraph,\r\n  '',\r\n],\r\n```",
        "createdAt" : "2019-12-27T15:36:07Z",
        "updatedAt" : "2019-12-30T23:36:49Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      },
      {
        "id" : "ec330028-137d-4b87-b7f7-c4ce2ccb0408",
        "parentId" : "36b6386c-3a85-4318-aee7-6422ae2983e5",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Strictly speaking I don't know which is better... I've left the `\\n` for now.",
        "createdAt" : "2019-12-27T22:57:01Z",
        "updatedAt" : "2019-12-30T23:36:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4462464f6cadab1ffbb37c21c08b271de9b746fb",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +472,476 @@      else\n        '${bold}Multiple errors were detected when looking at import dependencies within the flutter_tools package:$reset',\n      ...errors.map((String paragraph) => '$paragraph\\n'),\n    ]);\n  }"
  },
  {
    "id" : "ba0e8d55-a2e6-4a3e-84a6-83178e36e12e",
    "prId" : 47875,
    "prUrl" : "https://github.com/flutter/flutter/pull/47875#pullrequestreview-337278494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fb4555d-69d3-4b4f-bf39-9a54d21ab11b",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Isn't this O^6?  Or is the compiler really able to fold these into a single test on one iteration?",
        "createdAt" : "2019-12-29T21:56:17Z",
        "updatedAt" : "2019-12-30T23:36:49Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "5806c8ed-00b3-4688-aa5e-1f1db3426eab",
        "parentId" : "7fb4555d-69d3-4b4f-bf39-9a54d21ab11b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I would assume it's O(N), why would it be O(N^6)? Where is just a mapping iterator, it walks the incoming iterator, filters it, and only yields matching lines.\r\n\r\nI don't think the compiler knows anything here, it's just how the iterator API is implemented.",
        "createdAt" : "2019-12-30T23:27:19Z",
        "updatedAt" : "2019-12-30T23:36:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "b2c2cd23-c39e-49f9-8bc6-8f1cb79c31f2",
        "parentId" : "7fb4555d-69d3-4b4f-bf39-9a54d21ab11b",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Sorry, it's not O(N^6), but it's close to O(N*6) (a bit shy of that since each iteration eliminates at least one element) - each of those `where` clauses has to iterate the entire yielded set from the previous one, and those first few are only eliminating one or two files a piece.\r\n\r\nYou'd save a bunch of iterations if this was just a single `where` with a larger `path.basename(file.path) != ... &&`, or maybe even just `!file.path.endsWith(...) && !file.path.endsWith...`",
        "createdAt" : "2019-12-31T00:09:12Z",
        "updatedAt" : "2019-12-31T00:09:12Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "e0f03b5a-f95e-4175-bfc3-a7fea4db382e",
        "parentId" : "7fb4555d-69d3-4b4f-bf39-9a54d21ab11b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "This code runs in milliseconds, I'm not really that concerned about making it faster, certainly not at the cost of readability. :-)",
        "createdAt" : "2019-12-31T01:12:12Z",
        "updatedAt" : "2019-12-31T01:12:12Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4462464f6cadab1ffbb37c21c08b271de9b746fb",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +534,538 @@    .where((File file) => path.extension(file.path) != '.jpg')\n    .where((File file) => path.extension(file.path) != '.jar')\n    .toList();\n  final List<String> problems = <String>[];\n  for (File file in files) {"
  },
  {
    "id" : "3fb34ea7-4ea7-4fd8-bc97-de74d3e16d20",
    "prId" : 48316,
    "prUrl" : "https://github.com/flutter/flutter/pull/48316#pullrequestreview-340827069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4983528d-c743-4f0a-b489-137ff4a03902",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "mention the other places you use this file, like the other examples above",
        "createdAt" : "2020-01-09T21:18:53Z",
        "updatedAt" : "2020-01-09T21:31:42Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "dc582428-ff53-4627-a21b-087aa17c82b0",
        "parentId" : "4983528d-c743-4f0a-b489-137ff4a03902",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Done",
        "createdAt" : "2020-01-09T21:30:52Z",
        "updatedAt" : "2020-01-09T21:31:42Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2168978431cf0c87f3dd036753b8158f9a5e7bd",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +752,756 @@  // packages/flutter_tools/templates/app/web/icons/Icon-512.png.copy.tmpl\n  // examples/flutter_gallery/web/icons/Icon-512.png\n  Hash256(0xBACCB205AE45f0B4, 0x21BE1657259B4943, 0xAC40C95094AB877F, 0x3BCBE12CD544DCBE),\n\n  // GALLERY ICONS"
  },
  {
    "id" : "94391025-be72-4de3-bb1a-9974004a3f8f",
    "prId" : 48316,
    "prUrl" : "https://github.com/flutter/flutter/pull/48316#pullrequestreview-341430671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3129402-f395-4590-98fe-904e98e34d2d",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Heads up, you are modifying this line :)",
        "createdAt" : "2020-01-10T04:25:25Z",
        "updatedAt" : "2020-01-10T04:25:25Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "2fdc58fc-4682-4a88-8d19-1ae45d658260",
        "parentId" : "e3129402-f395-4590-98fe-904e98e34d2d",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah, i authorized it this one time, to get web up to parity with the other platforms.",
        "createdAt" : "2020-01-10T21:26:24Z",
        "updatedAt" : "2020-01-10T21:26:24Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2168978431cf0c87f3dd036753b8158f9a5e7bd",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +986,990 @@    _grandfatheredBinaries\n      .expand<int>((Hash256 hash) => <int>[hash.a, hash.b, hash.c, hash.d])\n      .reduce((int value, int element) => value ^ element) == 0xBFC18DE113B5AE8E // Please do not modify this line.\n  );\n  grandfatheredBinaries ??= _grandfatheredBinaries;"
  },
  {
    "id" : "7e5b4ec4-0cdf-4bed-b67f-1289636dfc2d",
    "prId" : 54617,
    "prUrl" : "https://github.com/flutter/flutter/pull/54617#pullrequestreview-395773173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c09e5d38-1ab1-4c2d-a1f4-7eec1137dc64",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "do we need to validate swap files?",
        "createdAt" : "2020-04-17T20:20:39Z",
        "updatedAt" : "2020-04-22T03:03:45Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "c0402069-1196-4271-a23b-ad542744a093",
        "parentId" : "c09e5d38-1ab1-4c2d-a1f4-7eec1137dc64",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This keep the analysis from getting flagged while I have vim open, otherwise I seemingly cant run them concurrently",
        "createdAt" : "2020-04-17T21:07:13Z",
        "updatedAt" : "2020-04-22T03:03:45Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e17f8ec958375e7693c8b6643e464008e0dcc62",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +606,610 @@    .where((File file) => path.extension(file.path) != '.ico')\n    .where((File file) => path.extension(file.path) != '.jar')\n    .where((File file) => path.extension(file.path) != '.swp')\n    .toList();\n  final List<String> problems = <String>[];"
  }
]