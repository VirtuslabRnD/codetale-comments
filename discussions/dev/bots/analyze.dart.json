[
  {
    "id" : "935a9ee8-0f52-4197-888d-75adb92a4fe8",
    "prId" : 21203,
    "prUrl" : "https://github.com/flutter/flutter/pull/21203#pullrequestreview-151114837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc95bb3d-241a-4b76-b8a6-70bda3f70e24",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "what about these others?",
        "createdAt" : "2018-08-30T18:01:45Z",
        "updatedAt" : "2018-08-30T18:01:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "c9faaafc-dd3b-4e5e-91b9-8c937b62702f",
        "parentId" : "bc95bb3d-241a-4b76-b8a6-70bda3f70e24",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "oh i see what's going on.",
        "createdAt" : "2018-08-30T18:02:28Z",
        "updatedAt" : "2018-08-30T18:02:28Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0031892ffffa96f2048534e02274fea96fdebffe",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +269,273 @@        final int count = 'package:test'.allMatches(data).length;\n        if (path.split(file.path).contains('test_driver') ||\n            name.startsWith('dev/missing_dependency_tests/') ||\n            name.startsWith('dev/automated_tests/') ||\n            name.startsWith('packages/flutter/test/engine/') ||"
  },
  {
    "id" : "ade3345b-aac1-407d-8105-a49178af97c3",
    "prId" : 26539,
    "prUrl" : "https://github.com/flutter/flutter/pull/26539#pullrequestreview-192345696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe33457-652e-489b-85a6-916038e648e1",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "I thought we expected imports to use single quotes?",
        "createdAt" : "2019-01-14T19:36:19Z",
        "updatedAt" : "2019-01-14T19:36:19Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "c8793ca4-3407-4a69-9d21-d00a1eb957dc",
        "parentId" : "cfe33457-652e-489b-85a6-916038e648e1",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I think checking for both makes this more resilient to lint failures.",
        "createdAt" : "2019-01-14T20:23:33Z",
        "updatedAt" : "2019-01-14T20:23:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "98800096-bb0a-422d-9dc9-0d93d01c0949",
        "parentId" : "cfe33457-652e-489b-85a6-916038e648e1",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "We do, but if this check doesn't look for double quotes, then it might miss a problem in imports.  There is another analyzer lint that checks for double quotes here, so it will still fail the analysis.\r\n\r\nI wanted those to be independent checks: imagine if you put double quotes on a problematic import: the analysis would fail the first time on the double quote check, but give no other errors.  The second time you ran it, it would give the \"import problem\" error.  The way this RegExp is, you'd now get both errors on the first run.",
        "createdAt" : "2019-01-14T20:23:41Z",
        "updatedAt" : "2019-01-14T20:24:31Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8da205f7abc1085dd8b68891c380e9b59d6677",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +385,389 @@\nfinal RegExp _importPattern = RegExp(r'''^\\s*import (['\"])package:flutter/([^.]+)\\.dart\\1''');\nfinal RegExp _importMetaPattern = RegExp(r'''^\\s*import (['\"])package:meta/meta.dart\\1''');\n\nSet<String> _findDependencies(String srcPath, List<String> errors, { bool checkForMeta = false }) {"
  },
  {
    "id" : "cd07ecf9-40ab-48a2-8196-740f4acc1e10",
    "prId" : 26539,
    "prUrl" : "https://github.com/flutter/flutter/pull/26539#pullrequestreview-192345105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "How do these ignore comments?",
        "createdAt" : "2019-01-14T20:19:50Z",
        "updatedAt" : "2019-01-14T20:19:50Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "6dba82c3-98a1-4e88-9a41-d44813199e53",
        "parentId" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "The \"^\" anchors the search at the start of the line.",
        "createdAt" : "2019-01-14T20:20:22Z",
        "updatedAt" : "2019-01-14T20:20:23Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "6c30372e-dedd-4970-9ffc-8810c6f555a1",
        "parentId" : "825f4de7-50d7-4ec8-913a-1f2545803dfe",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "mind = blown",
        "createdAt" : "2019-01-14T20:22:03Z",
        "updatedAt" : "2019-01-14T20:22:03Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8da205f7abc1085dd8b68891c380e9b59d6677",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +385,389 @@\nfinal RegExp _importPattern = RegExp(r'''^\\s*import (['\"])package:flutter/([^.]+)\\.dart\\1''');\nfinal RegExp _importMetaPattern = RegExp(r'''^\\s*import (['\"])package:meta/meta.dart\\1''');\n\nSet<String> _findDependencies(String srcPath, List<String> errors, { bool checkForMeta = false }) {"
  },
  {
    "id" : "5ec4487b-2ca8-4670-b7cf-dd7d17efaf79",
    "prId" : 27811,
    "prUrl" : "https://github.com/flutter/flutter/pull/27811#pullrequestreview-210100531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a053e228-c3f9-42ba-a482-170e93a7c81e",
        "parentId" : null,
        "authorId" : "45730bc7-c629-493b-a214-3d2bad023a3c",
        "body" : "can't second type specification be omitted?\r\nlike: `final Set<String> outOfDate = {};`\r\n(theoretically - yes as it can be inferred from variable type declared)",
        "createdAt" : "2019-03-04T11:44:02Z",
        "updatedAt" : "2019-03-06T03:55:02Z",
        "lastEditedBy" : "45730bc7-c629-493b-a214-3d2bad023a3c",
        "tags" : [
        ]
      },
      {
        "id" : "d5da7858-0236-4ecf-b386-b7c146fb44d4",
        "parentId" : "a053e228-c3f9-42ba-a482-170e93a7c81e",
        "authorId" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "body" : "yes but the internal Flutter style guide requires to always specify types.",
        "createdAt" : "2019-03-04T11:48:54Z",
        "updatedAt" : "2019-03-06T03:55:02Z",
        "lastEditedBy" : "56ac428d-9cbf-4129-a73c-504eecfd585b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b492e31c15ad9695dd719e9ddef09ce979ab1a19",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +544,548 @@  }\n\n  final Set<String> outOfDate = <String>{};\n\n  for (String package in packageToRegistrants.keys) {"
  }
]