[
  {
    "id" : "91af99dd-a7d6-4f4f-8bdc-4136b867264f",
    "prId" : 7954,
    "prUrl" : "https://github.com/flutter/flutter/pull/7954#pullrequestreview-112883023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d546a7-e3aa-41ce-89fc-e79760a42a4a",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "@goderbauer do you remember why we even support suppressing output?",
        "createdAt" : "2018-04-17T15:51:02Z",
        "updatedAt" : "2018-04-17T15:51:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "cfce7caf-63ae-4023-a3b1-6689c6803d23",
        "parentId" : "42d546a7-e3aa-41ce-89fc-e79760a42a4a",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "It looks like it's because the bash code whence this was forked redirected stdout to `/dev/null`.  That in turn was originated in https://github.com/flutter/flutter/pull/3977.\r\n\r\nI'm gonna send a PR to remove it.  Swallowing the stdio obfuscated a serious Windows issue last night.",
        "createdAt" : "2018-04-17T15:55:39Z",
        "updatedAt" : "2018-04-17T15:55:39Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "724894a0-180f-473e-86ae-07e5dd50f074",
        "parentId" : "42d546a7-e3aa-41ce-89fc-e79760a42a4a",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Sounds good.",
        "createdAt" : "2018-04-17T16:06:18Z",
        "updatedAt" : "2018-04-17T16:06:19Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "330aa89e-2cd5-49ff-9499-93c9c089f791",
        "parentId" : "42d546a7-e3aa-41ce-89fc-e79760a42a4a",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Sent https://github.com/flutter/flutter/pull/16666",
        "createdAt" : "2018-04-17T16:07:32Z",
        "updatedAt" : "2018-04-17T16:07:33Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "efd6a00c80e6be4c9c17362496e40adc408bed9b",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@  );\n\n  if (printOutput) {\n    stdout.addStream(process.stdout);\n    stderr.addStream(process.stderr);"
  },
  {
    "id" : "0918a8e8-20b7-42b1-99fb-6ef16b1c4555",
    "prId" : 9441,
    "prUrl" : "https://github.com/flutter/flutter/pull/9441#pullrequestreview-33580650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c56b39fe-5681-4ee1-99d3-897c4a061bb1",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "was this intentional?",
        "createdAt" : "2017-04-19T18:04:21Z",
        "updatedAt" : "2017-04-19T18:04:21Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7006665d-8350-48aa-a6dd-79eadc41845b",
        "parentId" : "c56b39fe-5681-4ee1-99d3-897c4a061bb1",
        "authorId" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "body" : "Yes - to help see what tests were running on the bots. Here's the before: https://travis-ci.org/flutter/flutter/jobs/223314813#L5740, and the after: https://travis-ci.org/flutter/flutter/jobs/223317672#L5804.\r\n",
        "createdAt" : "2017-04-19T18:22:29Z",
        "updatedAt" : "2017-04-19T18:22:29Z",
        "lastEditedBy" : "0fc1222a-8e68-4923-bf2e-18203f0657f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8377c2c963331081169c8cacf9cc03ae2d329215",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +119,123 @@  String testPath,\n}) {\n  final List<String> args = <String>['run', 'test', '-rexpanded'];\n  if (testPath != null)\n    args.add(testPath);"
  },
  {
    "id" : "539d6460-a001-4817-8474-52ed161805b8",
    "prId" : 11045,
    "prUrl" : "https://github.com/flutter/flutter/pull/11045#pullrequestreview-47501955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaa5671a-065f-4eac-ab06-4907fe1bff26",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "```\r\na.length == b.length && a.asMap().keys.every((int i) => a[i] == b[i])\r\n```",
        "createdAt" : "2017-06-30T21:01:23Z",
        "updatedAt" : "2017-06-30T21:14:48Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "cf84b495-6de9-4c3f-b0bd-e99f7957fd35",
        "parentId" : "aaa5671a-065f-4eac-ab06-4907fe1bff26",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "How strongly do you feel about this? I think the code I have now is both more efficient and more readable, but I don't feel strongly about this.",
        "createdAt" : "2017-06-30T21:38:52Z",
        "updatedAt" : "2017-06-30T21:38:52Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "41489d38-b958-4bfc-af36-4bd63b6bc8d4",
        "parentId" : "aaa5671a-065f-4eac-ab06-4907fe1bff26",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I like the brevity, but I don't feel strongly about it, so your call.",
        "createdAt" : "2017-06-30T21:41:46Z",
        "updatedAt" : "2017-06-30T21:41:46Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "225de39fe915c6e95f79ef0c2b10ed371f051cf1",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +304,308 @@\nbool _matches<T>(List<T> a, List<T> b) {\n  assert(a != null);\n  assert(b != null);\n  if (a.length != b.length)"
  },
  {
    "id" : "d74e39f8-33c7-4498-a0b1-b431546a436e",
    "prId" : 11045,
    "prUrl" : "https://github.com/flutter/flutter/pull/11045#pullrequestreview-47501924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56bbc141-5b14-46e5-8cac-07dd3ab6ef50",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I think you can just make this take `File file` since you have the `entity is File` check above",
        "createdAt" : "2017-06-30T21:08:17Z",
        "updatedAt" : "2017-06-30T21:14:48Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "6f9de584-5c51-4277-8490-ae05dad29e67",
        "parentId" : "56bbc141-5b14-46e5-8cac-07dd3ab6ef50",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "[error] The function expression type '(File) → Set<String>' isn't of type '(FileSystemEntity) → Set<String>'. This means its parameter or return type does not match what is expected. Consider changing parameter type(s) or the returned type(s).",
        "createdAt" : "2017-06-30T21:41:35Z",
        "updatedAt" : "2017-06-30T21:41:35Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "225de39fe915c6e95f79ef0c2b10ed371f051cf1",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +321,325 @@  return new Directory(srcPath).listSync().where((FileSystemEntity entity) {\n    return entity is File && path.extension(entity.path) == '.dart';\n  }).map<Set<String>>((FileSystemEntity entity) {\n    final Set<String> result = new Set<String>();\n    final File file = entity;"
  },
  {
    "id" : "40153781-7146-41d4-adb8-9c457ed89ad5",
    "prId" : 12197,
    "prUrl" : "https://github.com/flutter/flutter/pull/12197#pullrequestreview-64395296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d393d324-c043-48aa-9a96-e02719f4d01d",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This is great!",
        "createdAt" : "2017-09-21T19:23:04Z",
        "updatedAt" : "2017-09-22T17:15:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb937f11d8d78f475fa39c53bdc2327f6515e40c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +72,76 @@  );\n\n  if (genResult.stdout.trim() != sourceContents.stdout.trim()) {\n    stderr\n      ..writeln('<<<<<<< $localizationsFile')"
  },
  {
    "id" : "bd243e74-8997-42a9-8db4-59d04d4a4845",
    "prId" : 12197,
    "prUrl" : "https://github.com/flutter/flutter/pull/12197#pullrequestreview-64631726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7998019-6d89-4c7f-99dc-a0da934ce236",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This seems to assume that the last 'RUNNING' message will inform the reader about the error.  I don't think you can assume that's true, since the processes run asynchronously. If that's correct, then it would be best to repeat the relativeWorkingDir, commandDescription (and the environment) on failure. It's probably worthwhile always printing this stuff anyway, since there might be tons of program output above the error message.",
        "createdAt" : "2017-09-21T19:28:59Z",
        "updatedAt" : "2017-09-22T17:15:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "fdc5509b-a3f7-43a5-ae8e-6d2a064ae683",
        "parentId" : "c7998019-6d89-4c7f-99dc-a0da934ce236",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2017-09-22T16:30:49Z",
        "updatedAt" : "2017-09-22T17:15:20Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb937f11d8d78f475fa39c53bdc2327f6515e40c",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +247,251 @@  );\n\n  if (exitCode != 0) {\n    stderr.write(result.stderr);\n    print("
  },
  {
    "id" : "25428ff3-f514-46c3-810c-24c135c6f1b5",
    "prId" : 14728,
    "prUrl" : "https://github.com/flutter/flutter/pull/14728#pullrequestreview-97360171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23aed42c-a213-46c7-a299-b7f4a7c86886",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "how about these?",
        "createdAt" : "2018-02-16T02:52:30Z",
        "updatedAt" : "2018-03-01T16:13:59Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "943cbae0-5c95-425a-800d-d8c7f3e70c7d",
        "parentId" : "23aed42c-a213-46c7-a299-b7f4a7c86886",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Not sure how `pub run` can run in dart2 mode.",
        "createdAt" : "2018-02-16T04:18:02Z",
        "updatedAt" : "2018-03-01T16:13:59Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      },
      {
        "id" : "57e55cce-cde3-4562-bdac-10cdd37fb020",
        "parentId" : "23aed42c-a213-46c7-a299-b7f4a7c86886",
        "authorId" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "body" : "We need to file an issue against pub for this.\r\nCurrently it has the following options for pub run\r\nUsage: pub run <executable> [args...]\r\n-h, --help            Print this usage information.\r\n-c, --[no-]checked    Enable runtime type checks and assertions.\r\n    --mode            Mode to run transformers in.\r\n                      (defaults to \"release\" for dependencies, \"debug\" for entrypoint)\r\n\r\nit needs another option here '--preview-dart-2' to be consistent that would run in dart2 mode.",
        "createdAt" : "2018-02-17T00:39:27Z",
        "updatedAt" : "2018-03-01T16:13:59Z",
        "lastEditedBy" : "dbb88831-fbb2-4d00-b5ba-077417c6d4c1",
        "tags" : [
        ]
      },
      {
        "id" : "cecfb1d8-f192-43ee-a7d7-1c9bb54ec724",
        "parentId" : "23aed42c-a213-46c7-a299-b7f4a7c86886",
        "authorId" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "body" : "Opened https://github.com/dart-lang/sdk/issues/32214",
        "createdAt" : "2018-02-17T01:42:33Z",
        "updatedAt" : "2018-03-01T16:13:59Z",
        "lastEditedBy" : "324f8243-b35a-40e4-a3a7-2939450eef90",
        "tags" : [
        ]
      }
    ],
    "commit" : "e647d16fe455d44463c568e3110aa109e7617293",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +193,197 @@  await _runFlutterTest(path.join(flutterRoot, 'packages', 'flutter_test'), options: options);\n  await _pubRunTest(path.join(flutterRoot, 'packages', 'flutter_tools'));\n  await _pubRunTest(path.join(flutterRoot, 'dev', 'bots'));\n\n  await _runAllDartTests(path.join(flutterRoot, 'dev', 'devicelab'), options: options);"
  },
  {
    "id" : "ee8dbd41-06e9-48a4-8805-8d11e53e1ae8",
    "prId" : 20602,
    "prUrl" : "https://github.com/flutter/flutter/pull/20602#pullrequestreview-146295372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91d1822d-6885-4fbc-a791-67a28f31b464",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why not put this in `flutter_tools/test/forbidden_imports_test.dart`?",
        "createdAt" : "2018-08-14T23:17:44Z",
        "updatedAt" : "2018-08-15T01:11:45Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "4adcf5d3-dc85-4473-aefa-04b6d7981023",
        "parentId" : "91d1822d-6885-4fbc-a791-67a28f31b464",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Ah, because it applies to more than flutter_tools 😄 ",
        "createdAt" : "2018-08-14T23:21:22Z",
        "updatedAt" : "2018-08-15T01:11:45Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "ca270a6d-3246-49e9-9997-7373229a1009",
        "parentId" : "91d1822d-6885-4fbc-a791-67a28f31b464",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "That only checks `flutter_tools`. This checks the whole repo.",
        "createdAt" : "2018-08-15T00:04:14Z",
        "updatedAt" : "2018-08-15T01:11:45Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "facb1aa1b259644f981e0292287440b74b2c3147",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +530,534 @@}\n\nFuture<Null> _verifyNoTestPackageImports(String workingDirectory) async {\n  // TODO(ianh): Remove this whole test once https://github.com/dart-lang/matcher/issues/98 is fixed.\n  final List<String> shims = <String>[];"
  },
  {
    "id" : "8d2eaf5a-1493-4d21-b3f4-94b4c1323909",
    "prId" : 20682,
    "prUrl" : "https://github.com/flutter/flutter/pull/20682#pullrequestreview-146968765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c21ef1c2-1fae-4596-9b4f-07c5f6ef4319",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "We don't have to worry about the Windows \"access denied\" error here?",
        "createdAt" : "2018-08-16T16:19:12Z",
        "updatedAt" : "2018-08-17T03:18:49Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "4cc3c193-b4ed-457b-9b00-f86d43930d08",
        "parentId" : "c21ef1c2-1fae-4596-9b4f-07c5f6ef4319",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I don't think we run analysis on Windows.",
        "createdAt" : "2018-08-16T18:28:31Z",
        "updatedAt" : "2018-08-17T03:18:49Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07558fc4561c1361a752bdec9cd936e129388641",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +206,210 @@    await _runFlutterAnalyze(outDir.path, options: <String>['--watch', '--benchmark']);\n  } finally {\n    outDir.deleteSync(recursive: true);\n  }\n"
  },
  {
    "id" : "a208c24a-fcd6-40c9-9e9f-17b5a82f7faf",
    "prId" : 22596,
    "prUrl" : "https://github.com/flutter/flutter/pull/22596#pullrequestreview-161271741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e69466aa-e930-442d-87a3-265e6a541cfe",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Is there a performance impact to this? If no, It should be ok to run all tests with that flag just to get more coverage. ",
        "createdAt" : "2018-10-03T16:45:23Z",
        "updatedAt" : "2018-10-03T16:45:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "f22505a3-2709-4b55-951b-d68a556e1c35",
        "parentId" : "e69466aa-e930-442d-87a3-265e6a541cfe",
        "authorId" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "body" : "Running the tests with the flag takes only slightly longer than running the tests without the flag.",
        "createdAt" : "2018-10-03T17:16:42Z",
        "updatedAt" : "2018-10-03T17:16:42Z",
        "lastEditedBy" : "bd34c32e-f433-4933-84ed-f1939445c5b3",
        "tags" : [
        ]
      },
      {
        "id" : "82fa3941-3146-4abb-acfc-a76e4c657dae",
        "parentId" : "e69466aa-e930-442d-87a3-265e6a541cfe",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "OK, let's se what the impact is and if it gets too slow we can always revisit.",
        "createdAt" : "2018-10-03T17:19:27Z",
        "updatedAt" : "2018-10-03T17:19:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "64b1bd0a9028a77b2de08ba844421ec05853346e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +154,158 @@\n  await _runFlutterTest(path.join(flutterRoot, 'packages', 'flutter'));\n  // Only packages/flutter/test/widgets/widget_inspector_test.dart really\n  // needs to be run with --track-widget-creation but it is nice to run\n  // all of the tests in package:flutter with the flag to ensure that"
  },
  {
    "id" : "c340a4c3-e7dd-4d08-bcc4-40bf8ca8f5b6",
    "prId" : 24601,
    "prUrl" : "https://github.com/flutter/flutter/pull/24601#pullrequestreview-179636260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eb6d447-cde9-408c-9f49-42d968644fe1",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#never-check-if-a-port-is-available-before-using-it-never-add-timeouts-and-other-race-conditions\r\n\r\n(and several places below)",
        "createdAt" : "2018-11-29T05:37:34Z",
        "updatedAt" : "2018-11-29T05:48:13Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "6bf3fa08-b792-4bc3-82f9-0a30f4bf2e0b",
        "parentId" : "5eb6d447-cde9-408c-9f49-42d968644fe1",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This was existing code from this test.  I'm not entirely sure why it's there or if it's really necessary.",
        "createdAt" : "2018-11-29T05:47:27Z",
        "updatedAt" : "2018-11-29T05:48:13Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fecf52159751b0449f16dc7e242ea11b771d269",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +178,182 @@    workingDirectory: path.join(flutterRoot, relativePathToApplication),\n    expectNonZeroExit: false,\n    timeout: _kShortTimeout,\n  );\n  print('Done.');"
  },
  {
    "id" : "9f3d5aa8-a6a1-442a-8bd3-350fbf0adec0",
    "prId" : 28297,
    "prUrl" : "https://github.com/flutter/flutter/pull/28297#pullrequestreview-217975766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec2c06c-c844-4fd0-a453-671b39ce580b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#avoid-checking-in-comments-that-ask-questions",
        "createdAt" : "2019-03-22T21:06:45Z",
        "updatedAt" : "2019-03-22T21:06:46Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ff36231695611d00c5d012239578dff68ec7f49",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +146,150 @@\nFuture<bq.BigqueryApi> _getBigqueryApi() async {\n  // TODO(dnfield): How will we do this on LUCI?\n  final String privateKey = Platform.environment['GCLOUD_SERVICE_ACCOUNT_KEY'];\n  if (privateKey == null || privateKey.isEmpty) {"
  },
  {
    "id" : "2f1ced4e-3750-423b-9963-dda93c8bb576",
    "prId" : 28297,
    "prUrl" : "https://github.com/flutter/flutter/pull/28297#pullrequestreview-217975943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc194f88-3316-4721-ac51-87cbdaa38fa7",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "nit: stray comment on this line?",
        "createdAt" : "2019-03-22T21:07:16Z",
        "updatedAt" : "2019-03-22T21:07:16Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ff36231695611d00c5d012239578dff68ec7f49",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +151,155 @@    return null;\n  }\n  final auth.ServiceAccountCredentials accountCredentials = auth.ServiceAccountCredentials( //.fromJson(credentials);\n    'flutter-ci-test-reporter@flutter-infra.iam.gserviceaccount.com',\n    auth.ClientId.serviceAccount('114390419920880060881.apps.googleusercontent.com'),"
  },
  {
    "id" : "8bcb97ee-240e-4990-8752-5418920a9c40",
    "prId" : 35074,
    "prUrl" : "https://github.com/flutter/flutter/pull/35074#pullrequestreview-254783119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "219b7767-3751-4968-b0e3-a8de8153f7ac",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "It seems like we might be able to use the same logic as what I'm attempting in https://github.com/flutter/flutter/pull/34877",
        "createdAt" : "2019-06-26T17:56:56Z",
        "updatedAt" : "2019-06-26T21:16:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "b9315e67-b34e-43ba-8a1f-cae2f13776dd",
        "parentId" : "219b7767-3751-4968-b0e3-a8de8153f7ac",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I'm not quite sure - the coverage collection uses a test runner that I wrote, since it isn't supported by package:test or build_runner",
        "createdAt" : "2019-06-26T17:59:58Z",
        "updatedAt" : "2019-06-26T21:16:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "d740dbb0-e747-4ff2-be26-aa1a51bdc173",
        "parentId" : "219b7767-3751-4968-b0e3-a8de8153f7ac",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Ahh ok.  ",
        "createdAt" : "2019-06-26T18:02:40Z",
        "updatedAt" : "2019-06-26T21:16:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd4382f3b0df62e18ec0f0b6165f71c0a0a697f2",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +179,183 @@}\n\n// Partition tool tests into two groups, see explanation on `_runToolCoverage`.\nList<List<String>> _partitionToolTests() {\n  final List<String> pending = <String>[];"
  },
  {
    "id" : "9b7eea6f-a2aa-401d-9cac-0f5a0fd76dc9",
    "prId" : 35217,
    "prUrl" : "https://github.com/flutter/flutter/pull/35217#pullrequestreview-262136315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cace651f-3889-4bc1-a5c1-681ff8b63c97",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Putting these all in `gradle1` makes that test take almost 40 minutes.  Can we split them out?",
        "createdAt" : "2019-07-12T19:53:20Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "e0178b6d-bba0-4dc4-97cc-0b83545c18b6",
        "parentId" : "cace651f-3889-4bc1-a5c1-681ff8b63c97",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Good point. I'd like to try parallelize these calls. Do you know how many cores each VM on  cirrus have?",
        "createdAt" : "2019-07-14T23:53:07Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      },
      {
        "id" : "ab835872-f8b0-4ddb-a1fa-68101b960300",
        "parentId" : "cace651f-3889-4bc1-a5c1-681ff8b63c97",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "Can we just put all these stuff into subshard 3?",
        "createdAt" : "2019-07-16T00:20:57Z",
        "updatedAt" : "2019-07-23T00:50:35Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "6eacd79cdab237c5ba4e6c1a681b171af79ccfc3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +962,966 @@    await _runDevicelabTest('gradle_plugin_light_apk_test', env: env);\n    await _runDevicelabTest('gradle_plugin_fat_apk_test', env: env);\n    await _runDevicelabTest('gradle_jetifier_test', env: env);\n    await _runDevicelabTest('gradle_plugin_dependencies_test', env: env);\n    await _runDevicelabTest('gradle_migrate_settings_test', env: env);"
  },
  {
    "id" : "b21ccfa7-f83c-4c9c-95e5-561408f30ae7",
    "prId" : 35825,
    "prUrl" : "https://github.com/flutter/flutter/pull/35825#pullrequestreview-260269614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49a6c15a-2b78-4f05-bf52-777c9a73714a",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Also could you remove the expectIpaBuildFailure parameter in _flutterBuildIpa since now it's unused?",
        "createdAt" : "2019-07-10T17:57:22Z",
        "updatedAt" : "2019-07-10T18:11:45Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "aaff4b44-23bc-4c28-9b41-c8218dc48ba6",
        "parentId" : "49a6c15a-2b78-4f05-bf52-777c9a73714a",
        "authorId" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "body" : "Done.",
        "createdAt" : "2019-07-10T18:12:13Z",
        "updatedAt" : "2019-07-10T18:12:13Z",
        "lastEditedBy" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "tags" : [
        ]
      }
    ],
    "commit" : "51bece16e80d7d18c884f86cd40f19cef99fe162",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +276,280 @@    await _flutterBuildAot(examplePath);\n    await _flutterBuildApk(examplePath);\n    await _flutterBuildIpa(examplePath);\n  }\n  await _flutterBuildDart2js(path.join('dev', 'integration_tests', 'web'));"
  },
  {
    "id" : "de9a7af9-7be8-44a0-bfd1-194d11fe1d53",
    "prId" : 35839,
    "prUrl" : "https://github.com/flutter/flutter/pull/35839#pullrequestreview-259882220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "befd4bf2-8d5b-427e-9695-74b5c9baaad8",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "We need to update the logic at https://github.com/flutter/flutter/pull/35839/files#diff-a9d73960c607f511d218217af489e4d5R587 and following for this",
        "createdAt" : "2019-07-10T02:45:21Z",
        "updatedAt" : "2019-07-10T06:05:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "24c0a9cf-282f-4a3f-8eeb-df0c0438eca3",
        "parentId" : "befd4bf2-8d5b-427e-9695-74b5c9baaad8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Not quite sure what you mean",
        "createdAt" : "2019-07-10T03:21:38Z",
        "updatedAt" : "2019-07-10T06:05:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "85e77334-7315-4079-b652-43494fd006aa",
        "parentId" : "befd4bf2-8d5b-427e-9695-74b5c9baaad8",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "There's logic in there to check the subshard and run the right subset of tests using tags.  I don't think it matches the logic in the build runner variant of the method.",
        "createdAt" : "2019-07-10T03:27:52Z",
        "updatedAt" : "2019-07-10T06:05:54Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "91b85af1-c69c-4f57-b692-2d169f8b6f3a",
        "parentId" : "befd4bf2-8d5b-427e-9695-74b5c9baaad8",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Oh duh, got it my bad",
        "createdAt" : "2019-07-10T05:56:06Z",
        "updatedAt" : "2019-07-10T06:05:54Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cd37bb403aad332ad1034a01e59c13dcd06104",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +242,246 @@  }\n  // reduce overhead of build_runner in the create case.\n  if (noUseBuildRunner || Platform.environment['SUBSHARD'] == 'create') {\n    await _pubRunTest(\n      path.join(flutterRoot, 'packages', 'flutter_tools'),"
  },
  {
    "id" : "bf6d9eed-bc9e-44f7-8268-7f71058ff0f5",
    "prId" : 40200,
    "prUrl" : "https://github.com/flutter/flutter/pull/40200#pullrequestreview-287136323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2636556e-4c9c-4f53-bd76-cd06a51c26cb",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue filed for this? If so it should go in the TODO comment somewhere.",
        "createdAt" : "2019-09-11T16:16:32Z",
        "updatedAt" : "2019-09-11T16:16:33Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "f71008ed-c80a-4d91-ae21-e4134ba8d3e0",
        "parentId" : "2636556e-4c9c-4f53-bd76-cd06a51c26cb",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "It's https://github.com/flutter/flutter/issues/39991",
        "createdAt" : "2019-09-12T00:08:13Z",
        "updatedAt" : "2019-09-12T00:08:17Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "154c03ac178b0ff6abc533d294b03108788041d9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +465,469 @@  await _runFlutterWebTest(path.join(flutterRoot, 'packages', 'flutter'), tests: <String>[\n    // TODO(yjbanov): re-enable when flakiness is resolved\n    // 'test/foundation/',\n    // 'test/physics/',\n    // 'test/rendering/',"
  },
  {
    "id" : "0a14fe07-1744-4ca7-937a-143a379b5a31",
    "prId" : 41828,
    "prUrl" : "https://github.com/flutter/flutter/pull/41828#pullrequestreview-297126862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5ce5c27-b000-46f5-9c4b-234aa8568bf2",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Is there an issue filed for this TODO?",
        "createdAt" : "2019-10-03T15:31:02Z",
        "updatedAt" : "2019-10-03T21:38:52Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "8b8c0eeb-6230-439a-9e61-2a87565df8e8",
        "parentId" : "c5ce5c27-b000-46f5-9c4b-234aa8568bf2",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "It's https://github.com/flutter/flutter/issues/37525.  https://github.com/flutter/flutter/issues/37519 is a really good idea.",
        "createdAt" : "2019-10-03T20:21:12Z",
        "updatedAt" : "2019-10-03T21:38:52Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "84f18ae5ebf30bfa6cfda81d40a3dd761bf3111f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +883,887 @@        await _runDevicelabTest('flutter_create_offline_test_mac');\n        await _runDevicelabTest('plugin_lint_mac');\n// TODO(jmagman): Re-enable once flakiness is resolved.\n//        await _runDevicelabTest('module_test_ios');\n      }"
  },
  {
    "id" : "08c66bf8-54eb-4343-bf75-c4b566e2c1f5",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-302046459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f7f63bc-a7e8-4e34-ac1e-fb4a3d1a5b2f",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Does this guarantee that `end <= allTests.length`? IOW is there a risk of getting a `RangeError`?",
        "createdAt" : "2019-10-14T18:13:55Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "852edf34-9acf-4d3e-8846-4b6901349821",
        "parentId" : "0f7f63bc-a7e8-4e34-ac1e-fb4a3d1a5b2f",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yes because we don't do the last shard here, we do it below.",
        "createdAt" : "2019-10-14T23:26:38Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "ed2251be-539d-439f-83dd-b2555a12f542",
        "parentId" : "0f7f63bc-a7e8-4e34-ac1e-fb4a3d1a5b2f",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Ah, gotcha!",
        "createdAt" : "2019-10-15T16:37:10Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 538,
    "diffHunk" : "@@ -1,1 +481,485 @@      allTests.sublist(\n        index * testsPerShard,\n        (index + 1) * testsPerShard,\n      ),\n    );"
  },
  {
    "id" : "88d0692d-5a3d-41e6-bca1-d2a88f9a0a20",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-303607751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09642a08-1905-4d99-83c5-523df95f20fd",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Should `_runFlutterTest()` always just do a pass with `--track-widget-creation` and a pass with `--no-track-widget-creation`?",
        "createdAt" : "2019-10-16T18:51:25Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "daf1f9da-e5a9-4cda-965c-8c8d77a566a8",
        "parentId" : "09642a08-1905-4d99-83c5-523df95f20fd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "that could get pretty expensive. What bugs are you hoping to catch?",
        "createdAt" : "2019-10-16T22:17:00Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "f1b49e8d-a4e4-47b5-aeb9-4324e828850b",
        "parentId" : "09642a08-1905-4d99-83c5-523df95f20fd",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I was just reacting to the fact that we seem to be calling it with both of those flags in many places already.",
        "createdAt" : "2019-10-17T01:55:42Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "567f6a97-d6b2-4531-b473-fb2f36e4af3b",
        "parentId" : "09642a08-1905-4d99-83c5-523df95f20fd",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "some places, yeah. intentionally not all though.",
        "createdAt" : "2019-10-17T23:59:17Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 360,
    "diffHunk" : "@@ -1,1 +381,385 @@      .toList();\n    print('${green}Running packages/flutter tests$reset for: $cyan${tests.join(\", \")}$reset');\n    await _runFlutterTest(\n      path.join(flutterRoot, 'packages', 'flutter'),\n      options: <String>['--track-widget-creation'],"
  },
  {
    "id" : "7328a27b-e4bb-4e57-9ac9-1b360305e76d",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-302966210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdc0ae5e-8183-4c0d-8481-888f0a345b59",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "If we ever add a new directory that matches `packages/flutter/test/**/widgets`, its tests will silently never be run...",
        "createdAt" : "2019-10-16T18:52:50Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "e7c192bf-3506-4e87-b437-30e6a7418c27",
        "parentId" : "fdc0ae5e-8183-4c0d-8481-888f0a345b59",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "unless i misunderstand, i don't believe that's an issue; `recursive` is false",
        "createdAt" : "2019-10-16T22:17:38Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "cc4b035a-95c8-4bf5-98ae-c695473ee728",
        "parentId" : "fdc0ae5e-8183-4c0d-8481-888f0a345b59",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Ah, I missed the recursive:false - nevermind.",
        "createdAt" : "2019-10-17T01:55:03Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 352,
    "diffHunk" : "@@ -1,1 +377,381 @@      .listSync(followLinks: false, recursive: false)\n      .whereType<Directory>()\n      .where((Directory dir) => dir.path.endsWith('widgets') == false)\n      .map<String>((Directory dir) => path.join('test', path.basename(dir.path)) + path.separator)\n      .toList();"
  },
  {
    "id" : "db0e4e07-438c-478f-933a-f764440d1b2c",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-302966118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e18cc1e-1207-43f7-ae4f-ec86948fe7ce",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Can you make sure that this cleanup will yield Cirrus tests that pass on dev, beta, and stable?  Right now, we have tests that are guaranteed to fail on those channels (e.g. because Flutter for web is disabled on non-master).",
        "createdAt" : "2019-10-16T18:54:34Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "0517cc04-17f3-46a9-aba0-24281b337de2",
        "parentId" : "5e18cc1e-1207-43f7-ae4f-ec86948fe7ce",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'm not sure how to test that short of actually doing a release.",
        "createdAt" : "2019-10-16T22:18:43Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "68e34cac-6683-47aa-ac23-9bb63f40c0cc",
        "parentId" : "5e18cc1e-1207-43f7-ae4f-ec86948fe7ce",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "You could temporarily (with no intention of submitting) edit the tools logic for what channel you're on to synthesize fake runs of dev|beta|stable.  I leave it up to you on whether that churn of git push, wait, repeat is worth it.",
        "createdAt" : "2019-10-17T01:54:29Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +335,339 @@    expectNonZeroExit: expectNonZeroExit,\n    environment: <String, String>{\n      'FLUTTER_WEB': 'true',\n    },\n  );"
  },
  {
    "id" : "4d317d40-954e-4c40-abe9-50a151049a0f",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-302910362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fdce799-8c26-4e81-93f7-0f052e5c23ea",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "Why shuffle it at all if we're going to hard code the seed?",
        "createdAt" : "2019-10-16T18:56:25Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "7b6ce925-8404-4cd7-beca-6d5d54769227",
        "parentId" : "9fdce799-8c26-4e81-93f7-0f052e5c23ea",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I'm not sure what Ian's motivation was, but I like this change because randomizing should break up clusters of big tests making sharding more effective.",
        "createdAt" : "2019-10-16T19:19:22Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "bc822731-a4d3-41f6-91d1-7a663442bec3",
        "parentId" : "9fdce799-8c26-4e81-93f7-0f052e5c23ea",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Might be worth a comment explaining why this is done.",
        "createdAt" : "2019-10-16T19:19:40Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "86b486f4-4034-4ca0-88b4-fe429e8607a7",
        "parentId" : "9fdce799-8c26-4e81-93f7-0f052e5c23ea",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "yeah you want to shuffle so that the average cost-per-file is uniform.\r\ni'll add a comment.",
        "createdAt" : "2019-10-16T22:19:20Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 526,
    "diffHunk" : "@@ -1,1 +469,473 @@    // very different characteristics.\n    // We use a constant seed for repeatability.\n    ..shuffle(math.Random(0));\n\n  assert(kWebShardCount >= 1);"
  },
  {
    "id" : "67b3ab50-f3b0-4c75-9301-58a14efc3644",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-303504983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff0802b4-1b67-4559-8168-e4c5d2127b05",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "It looks like we can probably remove `key` now (it looks like we never set `$SHARD` or `$SUBSHARD` anymore).",
        "createdAt" : "2019-10-17T06:47:00Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "65a2ebb1-5d75-4a77-8d7d-aeb472c88a6f",
        "parentId" : "ff0802b4-1b67-4559-8168-e4c5d2127b05",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "I'll add a comment. It's useful when doing local testing so you can run a whole shard (or a specific shard+subshard) without having to figure out the corresponding task name.",
        "createdAt" : "2019-10-17T19:51:11Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 1258,
    "diffHunk" : "@@ -1,1 +976,980 @@const String CIRRUS_TASK_NAME = 'CIRRUS_TASK_NAME';\n\nFuture<void> _runFromList(Map<String, ShardRunner> items, String key, String name, int positionInTaskName) async {\n  String item = Platform.environment[key];\n  if (item == null && Platform.environment.containsKey(CIRRUS_TASK_NAME)) {"
  },
  {
    "id" : "b7db27ac-48b4-4b4e-b955-abb8688569ae",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-303622492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d93dd0b-63c6-4520-b1bb-5260f974277b",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "You can say `recursive: true` and not need the `existsSync()` check",
        "createdAt" : "2019-10-17T07:09:36Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      },
      {
        "id" : "0f7e92d9-b2b2-49d6-a297-398f25550e0b",
        "parentId" : "7d93dd0b-63c6-4520-b1bb-5260f974277b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Interesting. Done.",
        "createdAt" : "2019-10-17T19:57:28Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "7e453c41-f714-4688-a88a-336b831df776",
        "parentId" : "7d93dd0b-63c6-4520-b1bb-5260f974277b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Looks like you were wrong. :-)\r\nhttps://cirrus-ci.com/task/6550651382792192?command=main#L104",
        "createdAt" : "2019-10-18T00:13:11Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "9fe77524-7bd0-49af-b728-01be0ba8271d",
        "parentId" : "7d93dd0b-63c6-4520-b1bb-5260f974277b",
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "It happens to the best of us.  I even wrote a [test that shows what the behavior is](https://github.com/google/file.dart/blob/master/packages/file/test/common_tests.dart#L2735) 😄 ",
        "createdAt" : "2019-10-18T01:10:17Z",
        "updatedAt" : "2019-10-18T01:10:17Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 1070,
    "diffHunk" : "@@ -1,1 +815,819 @@  final File file = File(path);\n  if (file.existsSync())\n    file.deleteSync();\n}\n"
  },
  {
    "id" : "af0c4f5e-795f-49ab-81ff-67ecfe6ec995",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-303027961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2432dc0-1a8d-4005-a385-8baaf6301d9d",
        "parentId" : null,
        "authorId" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "body" : "I wish enums could have properties & methods like they can in Java.",
        "createdAt" : "2019-10-17T07:11:14Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "1dc608b7-5634-49db-a2de-36dd357356e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 1177,
    "diffHunk" : "@@ -1,1 +895,899 @@}\n\nString get ciProviderName {\n  switch (ciProvider) {\n    case CiProviders.cirrus:"
  },
  {
    "id" : "033fe0c2-6017-45d3-a6b1-85e19d806b92",
    "prId" : 41880,
    "prUrl" : "https://github.com/flutter/flutter/pull/41880#pullrequestreview-303607971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8254e025-0156-46a6-a1f9-1623a2af5a68",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "cc @tvolkert @blasten this block is new, it's the result of merging with @blasten's recent changes\r\n\r\nBasically I took the same approach as with the web tests (though sadly it's different enough that I couldn't reuse code).",
        "createdAt" : "2019-10-18T00:00:13Z",
        "updatedAt" : "2019-10-18T00:37:02Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3583a98c2c054de610bd8487629aa7066f68e176",
    "line" : 965,
    "diffHunk" : "@@ -1,1 +720,724 @@}\n\nfinal Map<String, String> gradleEnvironment = _initGradleEnvironment();\n\nFuture<void> _runHostOnlyDeviceLabTests() async {"
  },
  {
    "id" : "03f75005-3c89-412a-950f-5181bd1c78e0",
    "prId" : 42708,
    "prUrl" : "https://github.com/flutter/flutter/pull/42708#pullrequestreview-302244298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7668c72f-f39c-4cbe-9e92-3df1537b993d",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would start with the assumption that this is running in a separate shard.",
        "createdAt" : "2019-10-15T19:57:17Z",
        "updatedAt" : "2019-10-16T20:34:40Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "bf4ba396-6cdf-424e-961f-a6642e256a73",
        "parentId" : "7668c72f-f39c-4cbe-9e92-3df1537b993d",
        "authorId" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "body" : "Done",
        "createdAt" : "2019-10-15T23:02:05Z",
        "updatedAt" : "2019-10-16T20:34:40Z",
        "lastEditedBy" : "26bed5e6-ee43-49f6-93fd-a565b3ee8889",
        "tags" : [
        ]
      }
    ],
    "commit" : "13ad5cbb4117d4e076aeaaceda7cbaed0f7e88b5",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +954,958 @@    return;\n  }\n  final Map<String, String> defaultEnv = <String, String>{\n    'ANDROID_HOME': androidSdkRoot,\n    'ANDROID_SDK_ROOT': androidSdkRoot,"
  },
  {
    "id" : "f7ec5499-3766-4d9f-9917-b906145cf6b7",
    "prId" : 45431,
    "prUrl" : "https://github.com/flutter/flutter/pull/45431#pullrequestreview-325237830",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "762cbcf4-77de-4bb1-ad0a-5a59874c1bae",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "Is the TODO above this now on the wrong line?",
        "createdAt" : "2019-12-02T13:32:33Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "35f2c1c43d03a805038695ca521d386ff835b3ba",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +767,771 @@    if (Platform.isLinux) () => _runDevicelabTest('flutter_create_offline_test_linux'),\n    if (Platform.isWindows) () => _runDevicelabTest('flutter_create_offline_test_windows'),\n    () => _runDevicelabTest('gradle_fast_start_test', environment: gradleEnvironment),\n    // TODO(ianh): Fails on macOS looking for \"dexdump\", https://github.com/flutter/flutter/issues/42494\n    if (!Platform.isMacOS) () => _runDevicelabTest('gradle_jetifier_test', environment: gradleEnvironment),"
  },
  {
    "id" : "402e7a98-d44b-4265-8829-01b88d5e7791",
    "prId" : 45431,
    "prUrl" : "https://github.com/flutter/flutter/pull/45431#pullrequestreview-325809804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dab69f87-36e8-429a-9eb0-83a35c03e8f5",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Could you test it without --fast-start?\r\n\r\nCould you add a comment explaining the reason to skip it?",
        "createdAt" : "2019-12-02T20:30:38Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "eac11815-3b98-4a07-871b-f337df70bceb",
        "parentId" : "dab69f87-36e8-429a-9eb0-83a35c03e8f5",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added a comment explaining the skip: there is nothing to build for this app",
        "createdAt" : "2019-12-02T23:22:08Z",
        "updatedAt" : "2019-12-04T18:08:09Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "35f2c1c43d03a805038695ca521d386ff835b3ba",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +278,282 @@  // This application contains no platform code and cannot be built, except for\n  // as a part of a '--fast-start' Android application.\n  'splash',\n];\n"
  },
  {
    "id" : "5a00ed8c-8943-4e5e-93c5-a6e5930d6f68",
    "prId" : 51004,
    "prUrl" : "https://github.com/flutter/flutter/pull/51004#pullrequestreview-375574265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f3bfd2e-a5ba-4fcf-9751-e8a6969a800e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Without this change, we would try to spin up multiple chrome instances and stall. I'm also suspicious that some of the previous flakes in integration tests were caused by having multiple flutter_tester shells active.",
        "createdAt" : "2020-03-16T20:00:03Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "0773d452-5ead-4336-949d-5c6817e504a0",
        "parentId" : "4f3bfd2e-a5ba-4fcf-9751-e8a6969a800e",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "This should go in a comment.",
        "createdAt" : "2020-03-16T20:10:02Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "9ee7d465-4fce-437a-832d-66ca67616db8",
        "parentId" : "4f3bfd2e-a5ba-4fcf-9751-e8a6969a800e",
        "authorId" : "34aab7de-0210-4ddd-b571-fd6bfd6f9bfb",
        "body" : "This is interesting. Do you not use the concurrency parameter of `package:test`?",
        "createdAt" : "2020-03-16T20:23:34Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "34aab7de-0210-4ddd-b571-fd6bfd6f9bfb",
        "tags" : [
        ]
      },
      {
        "id" : "336bf521-e637-4b70-84c9-dd62ee63dae4",
        "parentId" : "4f3bfd2e-a5ba-4fcf-9751-e8a6969a800e",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "We do, but by default it gets set to the number of cores that the bot has.",
        "createdAt" : "2020-03-16T20:52:21Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4786835fef117b6c7204b34d02df71fb93a16df",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +723,727 @@  String coverage,\n  bq.TabledataResourceApi tableData,\n  bool forceSingleCore = false,\n}) async {\n  int cpus;"
  },
  {
    "id" : "8b63088b-a6fe-4ef4-9b77-300b7f8bd7f2",
    "prId" : 51004,
    "prUrl" : "https://github.com/flutter/flutter/pull/51004#pullrequestreview-375585863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec5241ae-3cd0-4a57-8b7b-604bfb557198",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Why only Linux? (Add a comment explaining)",
        "createdAt" : "2020-03-16T20:09:39Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "9f976581-8a29-4084-a134-4dab7edec323",
        "parentId" : "ec5241ae-3cd0-4a57-8b7b-604bfb557198",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Added comment",
        "createdAt" : "2020-03-16T21:12:03Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4786835fef117b6c7204b34d02df71fb93a16df",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +281,285 @@      // Only linux has Chrome installed and is running web integration tests.\n      // See `_pubRunTest` for more information.\n      final bool forceSingleCore = Platform.isLinux && subshard == 'integration';\n      await _pubRunTest(\n        toolsPath,"
  },
  {
    "id" : "7c1d47aa-41b5-4aa7-a4bf-79e6d61c793d",
    "prId" : 51004,
    "prUrl" : "https://github.com/flutter/flutter/pull/51004#pullrequestreview-375548081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02101f90-5b3c-429a-8ccb-3b94d4d0832c",
        "parentId" : null,
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "Oh, nm. I see it here.",
        "createdAt" : "2020-03-16T20:10:19Z",
        "updatedAt" : "2020-03-17T22:40:37Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4786835fef117b6c7204b34d02df71fb93a16df",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +737,741 @@    cpus = 2; // Don't default to 1, otherwise we won't catch race conditions.\n  }\n  // Integration tests that depend on external processes like chrome\n  // can get stuck if there are multiple instances running at once.\n  if (forceSingleCore) {"
  },
  {
    "id" : "68520266-d91a-40ba-8451-afe634e31e1f",
    "prId" : 55223,
    "prUrl" : "https://github.com/flutter/flutter/pull/55223#pullrequestreview-396699591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a773e4a-72d1-475f-8a56-bebb2b86d966",
        "parentId" : null,
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This is the new part from last time (minor some slight refactoring).  Bot ID was taken from https://logs.chromium.org/logs/dart/buildbucket/cr-buildbucket.appspot.com/8882487817844098672/+/steps/flutter_test_add_to_app_tests/0/logs/execution_details/0",
        "createdAt" : "2020-04-20T18:18:58Z",
        "updatedAt" : "2020-04-20T22:21:42Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7248ab38dbb9520ba96f6197739d83e270983fa",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +143,147 @@          'bot $luciBotId.');\n    return;\n  }\n  final String expectedVersion = File(engineVersionFile).readAsStringSync().trim();\n  final CapturedOutput flutterTesterOutput = CapturedOutput();"
  },
  {
    "id" : "f4758607-47f3-495d-86b0-a87e1b399647",
    "prId" : 56594,
    "prUrl" : "https://github.com/flutter/flutter/pull/56594#pullrequestreview-408451947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d299e940-e38c-4a38-9487-0c919881b182",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It might make sense to do the trick we use elsewhere that verifies that the right number of shards are actually given (by having the last shard be named something like `5_last` or something, I forget exactly how we do it).\r\n\r\nUp to you.",
        "createdAt" : "2020-05-08T18:55:43Z",
        "updatedAt" : "2020-05-08T22:19:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8d29259f555583dc7b8a7093a9cc543dd728993",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +662,666 @@\n  await selectSubshard(subshards);\n}\n\nFuture<void> _runFrameworkCoverage() async {"
  },
  {
    "id" : "68433baf-0305-4a4c-9d3f-86c93891b8f2",
    "prId" : 59291,
    "prUrl" : "https://github.com/flutter/flutter/pull/59291#pullrequestreview-429402225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af24514d-96ba-457b-9e8c-bdfb5272cadf",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "these tests now set the right version when the experiment is enabled but the library is not opted in",
        "createdAt" : "2020-06-12T01:18:20Z",
        "updatedAt" : "2020-06-15T21:30:07Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7c2edaf72f4423ea72314c9f09970c69c512e71",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +545,549 @@Future<void> _runFrameworkTests() async {\n  final bq.BigqueryApi bigqueryApi = await _getBigqueryApi();\n  final List<String> nullSafetyOptions = <String>['--enable-experiment=non-nullable'];\n  final List<String> trackWidgetCreationAlternatives = <String>['--track-widget-creation', '--no-track-widget-creation'];\n"
  },
  {
    "id" : "f4ce011a-5e0d-43a2-a83e-df266a571c0f",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-512080651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Web installers package does this.\r\n\r\nIn february we discussed that this functionality will be needed in 3 repos. That was the reason we first started web_installers repo. I think we should keep using it instead of duplicating code.",
        "createdAt" : "2020-10-08T18:09:38Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "67905ab4-1ec9-4ea5-94e4-836a4c79a264",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Happy to switch to web_installers when it's ready. Currently there's no way to add a dependency on web_installers. We could use a pub dependency, but web_installers is not on pub. We could git clone it, but that's not how flutter/flutter manages its pub dependencies and it's a lot more code to make the git cloning work smoothly.",
        "createdAt" : "2020-10-15T20:57:34Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "936d3024-3913-41f3-a297-579e9b4417fa",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Why not, we are doing that since February? We are adding the dependency as SHA (as we are doing it with goldens).\r\n\r\nhttps://github.com/flutter/engine/blob/master/lib/web_ui/pubspec.yaml#L35\r\n\r\n(Actually going back to February, both creating web_installers and using it like this was your ideas. You said you didn't want to create a copy code again (as we did for Chrome), so insisted that we should definitely have a web_installers repo for driver. I initially wanted to name that repo as \"web_drivers\" and you said Chrome should also be there. but never had a chance to carry Chrome :( )",
        "createdAt" : "2020-10-15T23:36:34Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "a260b067-50c4-4d42-bb34-f3817482c439",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "In short, the flutter/engine method doesn't work in flutter/flutter due to the single-version rule policy and avoidance of git dependencies (the `flutter update-packages --force-upgrade` does not understand them leading to issues).\r\n\r\nIf web_installers were in pub, we could use it here. I'm not sure if it's worth it though. All I'm trying to do is launch `chromedriver`, which is already in PATH, unless it's already running. If web_installers improves this over the code as written in the PR, I'm all for switching. We should be mindful, however, that this will add a dependency, which has costs, such as having to send multiple PRs and going through the `flutter update-packages --force-upgrade` process in order to fix bugs.",
        "createdAt" : "2020-10-16T21:48:57Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "52bd98bc-ba48-4eb6-a15f-e3165eec1eea",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "As you mentioned in the offline discussion, if you believe \"circumstances changed therefore we don't need a common repository\" feel free to use this code. I personally favor common code usage. Especially considering this long running test will need:\r\n- firefox driver code\r\n- ios-safari simulator code\r\n-safari driver code\r\nin its lifetime, I feel like this class will be a very big copy/paste location. \r\n\r\nNote that if change something in the future (add verbose to drivers,  run on a different port), this is the only driver starting code outside of the `web_installers` common package. Therefore forgetting this will be easier. \r\n\r\nAlso @godofredoc has a plan for separating tests/builds/dependency steps. When we do that,  this type of code (for example related to chrome driver or ios-simulator) will be in another step. When we look at a LUCI result, we will be able to clearly see \"is tests failed\", \"is build failed\", \"is setup failed\". \r\n\r\nI was hoping to use web_installers directly in that pre-steps. In this case looks like we would need to modify this class in the future.\r\n\r\nIf you want to use this code you can document these discussions to comments so if one webdriver tests fails and all the others are passing the developers who do the firefighting can clearly see how this one is different. \r\n\r\n\r\n\r\n\r\n",
        "createdAt" : "2020-10-16T22:07:44Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "55a023ee-ffb6-410f-9fda-1c7915e78a78",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Ah, I'm sorry, while checking the code I realize this part of the comment is not true: \"Note that if change something in the future (add verbose to drivers, run on a different port), this is the only driver starting code outside of......\". There are other places which use a stand alone chromedriver command.",
        "createdAt" : "2020-10-17T01:46:56Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "e7e0635d-f006-45db-b912-beab9aa88d20",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "The risk of code duplication makes sense. Would you be able to publish `web_installers` to pub so we can reuse it across all repos like a regular pub dependency?",
        "createdAt" : "2020-10-19T17:07:57Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "e5ba9d2f-3e30-4b80-ad6a-413143798cce",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Can you create an issue? I'm working on other P3 but I will try prioritize it.",
        "createdAt" : "2020-10-19T18:22:34Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "1d88d06b-c042-4ce2-80cd-e75e55797890",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I will. In the meantime, can you PTAL at the PR again?",
        "createdAt" : "2020-10-19T18:31:48Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "5bf876f4-851c-456a-8318-bfd09aba96b0",
        "parentId" : "3505527c-51c2-4af3-8b66-8b1f361037f5",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Sure, I reviewed it all now :) Thanks for adding me as a reviewer.",
        "createdAt" : "2020-10-19T19:12:43Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +863,867 @@}\n\nFuture<void> _ensureChromeDriverIsRunning() async {\n  // If we cannot connect to ChromeDriver, assume it is not running. Launch it.\n  if (!await _isChromeDriverRunning()) {"
  },
  {
    "id" : "3c6298a4-0bdd-4de7-a339-1cdb1b1c2100",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-519819508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22623a7b-d444-41df-8f8c-c11aa2b08fa8",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Is there any reason we also add the shard count is here? We are normally setting the shard counts from config files. ex: https://github.com/flutter/infra/blob/e6d2883f0fdd81d653c3ec0ed554a477a09bb9ec/config/framework_config.star#L188",
        "createdAt" : "2020-10-19T18:46:22Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "91ebf560-f616-4e9f-8254-16cbb8259ac7",
        "parentId" : "22623a7b-d444-41df-8f8c-c11aa2b08fa8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Shard count is not passed to the test script, only the shard index. E.g. when you run it as `SHARD=web_tests SUBSHARD=4 dart dev/bots/test.dart` the script needs to know if it's 4 out of 10, or 4 out of 20. So total shard counts are hard-coded in the test script. See also `kBuildTestShardCount`, `webShardCount`, and usages of `selectSubshard`.",
        "createdAt" : "2020-10-19T20:42:11Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "78d2027f-effe-47d9-b14b-d4b82d93c18d",
        "parentId" : "22623a7b-d444-41df-8f8c-c11aa2b08fa8",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "It may be because, the shard count is not passed that way to builders.\r\n\r\nI usually refer to already running builders to understand how properties work, for example: https://ci.chromium.org/p/flutter/builders/prod/Linux%20web_tests/878\r\n\r\nShards is:  \"web_tests\", subshards is: [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7_last\" ]\r\n\r\nWhen these are provided is there an information not set by the recipe?\r\n\r\nRecipe code is here btw: https://flutter.googlesource.com/recipes/+/refs/heads/master/recipes/flutter/flutter_drone.py",
        "createdAt" : "2020-10-28T17:01:05Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "80e740d1-b369-4873-9a52-34227f0c44a0",
        "parentId" : "22623a7b-d444-41df-8f8c-c11aa2b08fa8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "> When these are provided is there an information not set by the recipe?\r\n\r\nYes, the recipe only sets `SHARD` (e.g. `web_tests`) and `SUBSHARD` (e.g. `3`) environment variables: https://flutter.googlesource.com/recipes/+/refs/heads/master/recipes/flutter/flutter_drone.py#55. The recipe does not pass the total number of available shards. That's the missing information.",
        "createdAt" : "2020-10-29T15:55:09Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +79,83 @@///\n/// WARNING: this number must match the shard count in LUCI configs.\nconst int kWebLongRunningTestShardCount = 3;\n\n/// Tests that we don't run on Web for various reasons."
  },
  {
    "id" : "071c9f12-b1e8-4672-8db7-f88f932e116a",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-519835069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "question: will these all be distributed to different shards? Or will all long running tests will run in one shard?\r\n\r\nI think the setup will change according to that. For example currently for running web_integration_tests shard we are using flutter_drone: https://github.com/flutter/infra/blob/e6d2883f0fdd81d653c3ec0ed554a477a09bb9ec/config/framework_config.star#L166\r\n\r\nThe LUCI build has the shard=web_integration_tests as you see can see in the input properties section of an example : https://ci.chromium.org/p/flutter/builders/prod/Linux%20web_integration_tests/692 Looks like we can use the `subshards`.\r\n\r\n",
        "createdAt" : "2020-10-19T18:56:00Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "30f259c7-2af8-4594-a313-0652329dc71b",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "It will be one shard, but it will be split into `kWebLongRunningTestShardCount` subshards, which we can tweak over time. The setup we use for the `web_tests` shard is ideal for this use-case. `web_integration_tests` doesn't have subshards, so it won't scale.",
        "createdAt" : "2020-10-19T20:45:15Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "b22a8a73-eaaa-4550-9bdc-52da80807dc8",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "web_tests are setup to shards from config file as well. I might be missing something but I didn't get the usage for `kWebLongRunningTestShardCount`. Also the comment might also be misleading since the number we set to the config will determine the number of subshards not the constant we add here.\r\n\r\n```\r\n/// These tests are sharded into [kWebLongRunningTestShardCount] shards.\r\n```\r\n\r\nNote for later: I added another recipe to the engine side for running web_tests. we might still need to make some modifications on that.\r\n\r\n",
        "createdAt" : "2020-10-20T00:37:08Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "0d9a470d-853a-4f34-9d82-b37bcd1acb2d",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Check out the line below: `await _selectIndexedSubshard(tests, kWebLongRunningTestShardCount);`. `_selectIndexedSubshard` uses the count to divide the total number of tests (6) into subshards (3) then run one of them (2 tests per subshard). The hard-coded count is needed because `test.dart` doesn't receive it from LUCI configs (i.e. the number 3). Started a discussion on #hackers-infra.",
        "createdAt" : "2020-10-20T17:42:16Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "593a75d5-b4fb-47b4-86e3-d7805a3dd3c5",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "I see thanks for the explanation. For using the same value with LUCI infra we have 2 options:\r\n\r\n-> We can use the value from flutter/infra as source of truth. We modify the recipes to write an env variable. This code reads that env variable.\r\n-> We can write it to a yaml file in this repo (so the source of truth is flutter/flutter). We can read the yaml file from the LUCI recipe (we need to be careful with this design since flutter.py and flutter_drone.py is very generic, we don't want to add a random if/else there).\r\n\r\nBoth options can easily be tested with `led`.\r\n\r\n@godofredoc @christopherfujino which do you think would be the best approach.",
        "createdAt" : "2020-10-20T18:11:35Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "337faf30-56e2-4066-b52f-bc6a1ca626db",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "30d2601d-99bc-42d9-a76b-c407fcffa2d3",
        "body" : "I'd vote for adding the value to flutter/infra and use it in the script. As part of the LUCI transition we would like to keep everything related to infra resources allocation/usage in the LUCI space to have more visibility and better management of the resources.    ",
        "createdAt" : "2020-10-20T18:32:54Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "30d2601d-99bc-42d9-a76b-c407fcffa2d3",
        "tags" : [
        ]
      },
      {
        "id" : "efa88fb4-8a90-4697-9101-a79d9a580a6a",
        "parentId" : "c07b4ba0-7b98-4c89-bfd8-0775fd9c95b8",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "This sounds like something outside the scope of my PR. However, I'd vote for adding these to flutter/flutter. Currently flutter/infra leads to non-hermetic builds (you build a PR with 5 subshards and see subshard 3 fail; you build it again but someone changed the shard count to 8 in flutter/infra, and now subshards 1 and 6 fail; you pull your hair).\r\n\r\nIf the system is designed correctly, adding new shards or subshards should not affect infra resource allocation. Instead a PR should get up to a limited amount of resources (the limit can change depending on the overall system load), and schedule the shards/subshards (no matter how many of them) on top of the available resources, similar to how an OS will schedule processes/threads on a limited number of CPU cores, no matter how many processes/threads there are, and similar to how Bazel schedules thousands of build targets with concurrency limited to your CPU core count.\r\n\r\nHowever, if the infra is unable to implement per-PR scheduling yet, we could require that the file that controls sharding is reviewed by someone from the infra team.",
        "createdAt" : "2020-10-29T16:10:24Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +825,829 @@Future<void> _runWebLongRunningTests() async {\n  final List<ShardRunner> tests = <ShardRunner>[\n    () => _runGalleryE2eWebTest('debug'),\n    () => _runGalleryE2eWebTest('debug', canvasKit: true),\n    () => _runGalleryE2eWebTest('profile'),"
  },
  {
    "id" : "6b50068c-0b03-4ac2-9ceb-636d3fdd5b8c",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-512060602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec156d9b-af24-4211-935c-edfd4dac623b",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Yup it will be :) if we send chrome_and_driver dependency as a property to LUCI builder. Ex: https://ci.chromium.org/p/flutter/builders/prod/Linux%20web_integration_tests/692",
        "createdAt" : "2020-10-19T18:56:46Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +867,871 @@  if (!await _isChromeDriverRunning()) {\n    print('Starting chromedriver');\n    // Assume chromedriver is in the PATH.\n    _chromeDriver = await startCommand(\n      'chromedriver',"
  },
  {
    "id" : "cfff9896-92c3-42cf-aa9e-5dcb81078ce9",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-512147755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "491a5c55-c477-4c7e-81db-b1be6714acaa",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Shall we also add a link to `integration_test` package?\r\n\r\nSince we have to use e2e in the name, we can may be direct the reader to the correct place by adding more comments.",
        "createdAt" : "2020-10-19T18:58:55Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "39424015-40ae-4fcb-8951-8cb9d54ce95d",
        "parentId" : "491a5c55-c477-4c7e-81db-b1be6714acaa",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2020-10-19T20:49:07Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +906,910 @@/// This is not a performance test.\n///\n/// If [canvasKit] is set to true, runs the test in CanvasKit mode.\n///\n/// The test is written using `package:integration_test` (despite the \"e2e\" in"
  },
  {
    "id" : "2a7d0fbe-f4ab-450c-8f72-72902f266da5",
    "prId" : 67324,
    "prUrl" : "https://github.com/flutter/flutter/pull/67324#pullrequestreview-512149120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e846bd2d-4131-41f5-8a2d-129c7b8804d4",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "question: why do we use both '--driver=test_driver/transitions_perf_e2e_test.dart' and '--target=test_driver/transitions_perf_e2e.dart'? We only used target so far in the other tests. I'm curious if this makes a difference for `flutter drive` command?",
        "createdAt" : "2020-10-19T18:59:54Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "4e39a699-b810-494c-9230-d061c08a6fcf",
        "parentId" : "e846bd2d-4131-41f5-8a2d-129c7b8804d4",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I don't have a strong preference. Specifying both makes it more explicit, I think.",
        "createdAt" : "2020-10-19T20:51:11Z",
        "updatedAt" : "2020-10-29T19:00:31Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3581edba0996532fd19c979dd7205bd8ffdf0f38",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +925,929 @@        '--dart-define=FLUTTER_WEB_USE_SKIA=true',\n      '--driver=test_driver/transitions_perf_e2e_test.dart',\n      '--target=test_driver/transitions_perf_e2e.dart',\n      '--browser-name=chrome',\n      '-d',"
  },
  {
    "id" : "810f57f0-d28f-429e-bc2b-38c51fc77777",
    "prId" : 68642,
    "prUrl" : "https://github.com/flutter/flutter/pull/68642#pullrequestreview-513950603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea2eb245-c3ed-44e4-9f5a-1799d21e8fc4",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I might've missed the context, but what about the layer example that's giving it  `mixedModeNullSafetyOptions` vs the rest of the tests?",
        "createdAt" : "2020-10-21T12:13:16Z",
        "updatedAt" : "2020-10-21T12:50:28Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "f0d0d3b6-2628-44f7-a5d7-a3a4216da9b3",
        "parentId" : "ea2eb245-c3ed-44e4-9f5a-1799d21e8fc4",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Some files from this example are imported from the framework tests, so I've only migrated those files. The remaining files are still unmigrated, so the tests for the examples themselves need to run in mixed mode.",
        "createdAt" : "2020-10-21T16:52:36Z",
        "updatedAt" : "2020-10-21T16:52:36Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "386151e3c76f405a877219c231d2c6f9efe87d7b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +615,619 @@    await _runFlutterTest(path.join(flutterRoot, 'dev', 'tools', 'vitool'), tableData: bigqueryApi?.tabledata);\n    await _runFlutterTest(path.join(flutterRoot, 'examples', 'hello_world'), tableData: bigqueryApi?.tabledata);\n    await _runFlutterTest(path.join(flutterRoot, 'examples', 'layers'), tableData: bigqueryApi?.tabledata, options: mixedModeNullSafetyOptions);\n    await _runFlutterTest(path.join(flutterRoot, 'dev', 'benchmarks', 'test_apps', 'stocks'), tableData: bigqueryApi?.tabledata);\n    await _runFlutterTest(path.join(flutterRoot, 'packages', 'flutter_driver'), tableData: bigqueryApi?.tabledata, tests: <String>[path.join('test', 'src', 'real_tests')]);"
  },
  {
    "id" : "a70a8f4f-ce6d-4cfc-b702-3826ccabdb1f",
    "prId" : 69443,
    "prUrl" : "https://github.com/flutter/flutter/pull/69443#pullrequestreview-521079717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b3a30a2-00c6-4c34-9514-80dd5ce861d1",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Suggestion:Shall we add a comment explaining why we shutdown?",
        "createdAt" : "2020-10-30T22:44:31Z",
        "updatedAt" : "2020-10-30T22:44:31Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "62611b1e-4d88-4bd1-8c56-c0c02ec72eec",
        "parentId" : "2b3a30a2-00c6-4c34-9514-80dd5ce861d1",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I'm not sure? All our tests try to shutdown processes they start. It's like `tearDown`. If you can think of something that would explain something special about chromedriver, I'd be happy to add it. LMK.",
        "createdAt" : "2020-10-30T23:07:53Z",
        "updatedAt" : "2020-10-30T23:07:53Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee7053bda2b0f646382f272de51c3c60f85a03ce",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +819,823 @@  ];\n  await _ensureChromeDriverIsRunning();\n  await _selectIndexedSubshard(tests, kWebLongRunningTestShardCount);\n  await _stopChromeDriver();\n}"
  },
  {
    "id" : "86abb6b4-1210-415c-b922-d2bd8750f0d2",
    "prId" : 70714,
    "prUrl" : "https://github.com/flutter/flutter/pull/70714#pullrequestreview-533918062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31e8a6f3-c58c-409f-92d3-90b799c263d6",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "allows running on windows",
        "createdAt" : "2020-11-18T22:03:31Z",
        "updatedAt" : "2020-11-18T22:52:08Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da35fc6be2d58882619d981c3eb2d84edebb1c1e",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +796,800 @@    .whereType<File>()\n    .map<String>((File file) => path.relative(file.path, from: flutterPackageDirectory.path))\n    .where((String filePath) => !kWebTestFileKnownFailures.contains(path.split(filePath).join('/')))\n    .toList()\n    // Finally we shuffle the list because we want the average cost per file to be uniformly"
  },
  {
    "id" : "a7488f82-3760-4f61-8204-3afaceae56ff",
    "prId" : 76192,
    "prUrl" : "https://github.com/flutter/flutter/pull/76192#pullrequestreview-599961803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7206e93c-97ee-416e-82b6-00be4656370b",
        "parentId" : null,
        "authorId" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "body" : "Makes the log much more readable. Quick fix for me totally missing the \"skipped: false\" entries in this line because it was 90% cut off onscreen.",
        "createdAt" : "2021-03-04T22:02:06Z",
        "updatedAt" : "2021-03-04T22:27:27Z",
        "lastEditedBy" : "c0d7f839-5e59-4a67-97c5-02c9087845b5",
        "tags" : [
        ]
      },
      {
        "id" : "8985a640-e0ae-4795-9b37-aaf86b5f8c24",
        "parentId" : "7206e93c-97ee-416e-82b6-00be4656370b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "awesome!",
        "createdAt" : "2021-03-04T22:10:37Z",
        "updatedAt" : "2021-03-04T22:27:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc5d6bd3f07e32a9535d243d24065de66ab62048",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +520,524 @@    if (!_allTargetsCached(file)) {\n      print('${red}Not all build targets cached after second run.$reset');\n      print('The target performance data was: ${file.readAsStringSync().replaceAll('},', '},\\n')}');\n      exit(1);\n    }"
  },
  {
    "id" : "9141df11-45e0-4150-89f0-d9da5c67e2d1",
    "prId" : 77956,
    "prUrl" : "https://github.com/flutter/flutter/pull/77956#pullrequestreview-612694975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6477de8b-8100-4c8e-851a-ff862a70b2a2",
        "parentId" : null,
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "This was the best way I found to bypass the global in the bin/task to get around a device needing to be connected, but there may be an easier way.",
        "createdAt" : "2021-03-15T22:29:25Z",
        "updatedAt" : "2021-03-15T23:01:14Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c4c396bc9f54b45070b91d81dd4468daed23440",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +377,381 @@    '--task', task,\n    '--task-args', 'build',\n    '--task-args', 'target-platform=$targetPlatform',\n  ],\n  workingDirectory: path.join('dev', 'devicelab'));"
  },
  {
    "id" : "70b71a65-b7bd-458a-9fd1-fd3d9c34ba69",
    "prId" : 78361,
    "prUrl" : "https://github.com/flutter/flutter/pull/78361#pullrequestreview-629358234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3ef768d-13a1-4b3d-a72c-3af80d1ad54b",
        "parentId" : null,
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "@jmagman the issue was the unittests are run on multiple cores. In practice, we only run one devicelab test at a time so I opted to forceSingleCore here instead of resolving the race conditions. SG?",
        "createdAt" : "2021-04-06T19:29:15Z",
        "updatedAt" : "2021-04-06T21:36:27Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      },
      {
        "id" : "fe4d62ed-1b30-4d62-b918-dbc95c5536f1",
        "parentId" : "b3ef768d-13a1-4b3d-a72c-3af80d1ad54b",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "LGTM",
        "createdAt" : "2021-04-06T19:58:12Z",
        "updatedAt" : "2021-04-06T21:36:27Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b60e1d8df4d98f7d7287574e2a8d6733ff27f6b",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +668,672 @@    print('${green}Running package tests$reset for directories other than packages/flutter');\n    await _pubRunTest(path.join(flutterRoot, 'dev', 'bots'));\n    await _pubRunTest(path.join(flutterRoot, 'dev', 'devicelab'), forceSingleCore: true);\n    await _pubRunTest(path.join(flutterRoot, 'dev', 'snippets'));\n    await _pubRunTest(path.join(flutterRoot, 'dev', 'tools'), forceSingleCore: true);"
  },
  {
    "id" : "e26f4fa9-1d30-4d60-957a-8fb9111cb8a9",
    "prId" : 78508,
    "prUrl" : "https://github.com/flutter/flutter/pull/78508#pullrequestreview-615640104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43deeefa-1553-4ed6-b7f6-217003779631",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "@annagrin I thought of this after we had already merged your change...",
        "createdAt" : "2021-03-18T06:45:53Z",
        "updatedAt" : "2021-03-18T06:46:02Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "2dbf3ce8-8930-4527-a563-387a4d7445a6",
        "parentId" : "43deeefa-1553-4ed6-b7f6-217003779631",
        "authorId" : "d53e3cf5-c6c3-4b9d-bfd0-17bf230f6155",
        "body" : "thanks!",
        "createdAt" : "2021-03-18T16:49:47Z",
        "updatedAt" : "2021-03-18T16:49:47Z",
        "lastEditedBy" : "d53e3cf5-c6c3-4b9d-bfd0-17bf230f6155",
        "tags" : [
        ]
      }
    ],
    "commit" : "d41330e6eff2bc0a4fc309f59764c85957384e6f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +310,314 @@          testPaths: <String>[path.join(kTest, '$kWeb$kDotShard', '')],\n          enableFlutterToolAsserts: true,\n          perTestTimeout: const Duration(minutes: 3),\n        );\n      }"
  },
  {
    "id" : "e3f7af9e-c528-469f-a372-82ed90c4981f",
    "prId" : 78636,
    "prUrl" : "https://github.com/flutter/flutter/pull/78636#pullrequestreview-616696926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "371335f8-0e03-4338-848e-b88c098f261b",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Make it look like https://github.com/flutter/flutter/blob/4851bd51f9028a197f25649160a39d3d3d689945/dev/bots/test.dart#L256-L264",
        "createdAt" : "2021-03-19T18:38:56Z",
        "updatedAt" : "2021-03-19T18:38:56Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d9492f71609da25332e2d5022f3a1f3ccaf7c3c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +275,279 @@}\n\nFuture<void> _runWebToolTests() async {\n  await _pubRunTest(\n    path.join(flutterRoot, 'packages', 'flutter_tools'),"
  },
  {
    "id" : "2aab9a76-e8ce-4956-b807-d3a93d6cd4f9",
    "prId" : 79008,
    "prUrl" : "https://github.com/flutter/flutter/pull/79008#pullrequestreview-620308187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "375eba7d-d9ab-4050-b66a-307b05f4a89a",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Do we need a `pub get` first, or is that already being explicitly done by an earlier step?",
        "createdAt" : "2021-03-24T22:53:47Z",
        "updatedAt" : "2021-03-24T22:53:47Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "51fc3cd5-969c-4977-8012-61487088b083",
        "parentId" : "375eba7d-d9ab-4050-b66a-307b05f4a89a",
        "authorId" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "body" : "It seems that incremental_build.sh does a pub get here:\r\n\r\nhttps://github.com/flutter/plugins/blob/master/script/common.sh#L54\r\n\r\n_(The output of the subshell is redirected to /dev/null, so the effects of the pub get can't be seen in the log output, though.)_",
        "createdAt" : "2021-03-24T23:01:30Z",
        "updatedAt" : "2021-03-24T23:08:52Z",
        "lastEditedBy" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "tags" : [
        ]
      },
      {
        "id" : "45af9d2e-9280-4134-866f-863af98deedb",
        "parentId" : "375eba7d-d9ab-4050-b66a-307b05f4a89a",
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Oops, I should have known that",
        "createdAt" : "2021-03-24T23:22:25Z",
        "updatedAt" : "2021-03-24T23:22:25Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      }
    ],
    "commit" : "143c29a5140d9bcf12047bea91ffcd77bce628c1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +841,845 @@    );\n    await runCommand(\n      './script/incremental_build.sh',\n      <String>[\n        'analyze',"
  },
  {
    "id" : "ac506c11-6b47-4a3d-a6fd-c90a3a402570",
    "prId" : 86793,
    "prUrl" : "https://github.com/flutter/flutter/pull/86793#pullrequestreview-716025488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4036de4f-312f-405e-84bc-3a2d7a7c357a",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Why 7am UTC? Just curious.\r\n",
        "createdAt" : "2021-07-27T06:37:04Z",
        "updatedAt" : "2021-07-27T06:40:34Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "02849841-8f1b-4a15-a0dd-7a64ebfb16d7",
        "parentId" : "4036de4f-312f-405e-84bc-3a2d7a7c357a",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "It is approximately midnight Pacific, and for the majority of Flutter framework developers will switch sometime between midnight and 9am. I would have made it be midnight Pacific, except that Dart has no way to compute whether it is daylight savings time or not, so it is sometimes 11pm, sometimes midnight. I also didn't want to make it midnight local time, since who knows where our servers will be running the tests in the future, so UTC was a better bet.",
        "createdAt" : "2021-07-27T14:54:01Z",
        "updatedAt" : "2021-07-27T14:54:01Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "02541ed126bbdaa977ae88d1d78c4417f687543c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +92,96 @@String get shuffleSeed {\n  if (_shuffleSeed == null) {\n    // Change the seed at 7am, UTC.\n    final DateTime seedTime = DateTime.now().toUtc().subtract(const Duration(hours: 7));\n    // Generates YYYYMMDD as the seed, so that testing continues to fail for a"
  }
]