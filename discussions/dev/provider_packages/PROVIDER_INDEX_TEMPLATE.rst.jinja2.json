[
  {
    "id" : "024fcf3f-c5ae-4fa1-864f-8a2bf36f3620",
    "prId" : 13767,
    "prUrl" : "https://github.com/apache/airflow/pull/13767#pullrequestreview-573607373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "In my opinion, this page has too much content and some are missing (but the missing ones do not need to be added now).  I like the README files. which is available in the documentation of Google libraries. https://googleapis.dev/python/firestore/latest/index.html\r\nIt is standardized too, but contains all the information you need.\r\n\r\n1. Starting at the top. So I think it's worth adding a description of the package itself.  This information is available in the `provider.yaml` file, although so far the descriptions are not very. precise.h ttps://github.com/apache/airflow/blob/1602ec97c8d5bc7a7a8b42e850ac6c7a7030e47d/airflow/provider.yaml.schema.json#L13-L16\r\nI hope that we will be able to prepare descriptions in the future gradually, but so far I have made a minimum step and added a link to the product page for each provider.\r\n\r\n2. The next step is to link to the documentation, if we want to use the same file in setup.py and in the documentation. This will make it easier to find the documentation when you are in pypi.\r\n\r\nWe have these links in the side menu, but this is quite a new feature and not everyone uses this menu. Especially on mobile devices, I start reading from the package description, not the side menu.\r\n![Screenshot 2021-01-20 at 03 10 13](https://user-images.githubusercontent.com/12058428/105117662-2924b880-5acd-11eb-987b-445ed4334f9d.png)\r\n\r\n3.  The division into a detailed changelog and a normal changelog is strange for me. As for me, the contents of the ADDITIONAL_INFO.rst file should be a normal documentation page and have the title \"Migration guide\" because this is exactly what this file contains. As this file is fully human written, I don't think other scripts need to process it as well.\r\n\r\n4.  I think the detailed changelog and migration guides worth moving to new subpages, because it is not important for the new user.  This then will look similar to the Google documentation\r\n![Screenshot 2021-01-20 at 03 16 53](https://user-images.githubusercontent.com/12058428/105118117-1959a400-5ace-11eb-8d74-1cdc3afe3680.png).\r\nWhen we move the guides to new pages, we will also be able to easily prepare the migration guide from Airflow 1.10, because we already have a table that facilitates these migrations. \r\n\r\n![Screenshot 2021-01-20 at 03 21 33](https://user-images.githubusercontent.com/12058428/105118493-d5b36a00-5ace-11eb-9346-10337d43b906.png)\r\n\r\n5. The links in the table use markdown syntax instead of rst.",
        "createdAt" : "2021-01-20T02:22:29Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "6dd790f3-2285-439f-819f-d0cf4d9b0b16",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "> In my opinion, this page has too much content and some are missing (but the missing ones do not need to be added now). I like the README files. which is available in the documentation of Google libraries. https://googleapis.dev/python/firestore/latest/index.html\r\n> It is standardized too, but contains all the information you need.\r\n> \r\n> 1. Starting at the top. So I think it's worth adding a description of the package itself.  This information is available in the `provider.yaml` file, although so far the descriptions are not very. precise.h ttps://github.com/apache/airflow/blob/1602ec97c8d5bc7a7a8b42e850ac6c7a7030e47d/airflow/provider.yaml.schema.json#L13-L16\r\n\r\nSure. Happy to add it. This will be easy to incorporate.\r\n\r\n> 2. The next step is to link to the documentation, if we want to use the same file in setup.py and in the documentation. This will make it easier to find the documentation when you are in pypi.\r\n\r\nI thiink the PyPI and documentation should be different than documentation. PyPI should be more focused on how to install packages and what are the limitations/requirements, but the \"full\" documentation\" should be reached (including the ChangeLog which I think should not be part of README as it will grow over tim). This is how I approached it and I think this is a better idea than to keep the same documentation index and README.\r\n\r\n> We have these links in the side menu, but this is quite a new feature and not everyone uses this menu. Especially on mobile devices, I start reading from the package description, not the side menu.\r\n\r\nYeah. I will modify setup.cfg to include few more links (Documentation especially).\r\n \r\n> 1. The division into a detailed changelog and a normal changelog is strange for me. As for me, the contents of the ADDITIONAL_INFO.rst file should be a normal documentation page and have the title \"Migration guide\" because this is exactly what this file contains. As this file is fully human written, I don't think other scripts need to process it as well.\r\n\r\nADDITIONAL_INFO is for backport providers. IMHO this README is something that will evolve evertime. ADDITIONAL_INFO was more about migrating from 1.0 to backports. Effectively CHANGELOG should be written by human as a summary of changes in each version. The assumption is that there will be very rare \"migration needed\" for those.  Google provider is a bit different than the others, because we migrate python APIs. But in most other packages this will not be a migration guide but human description on what changed in each version. Which I think CHANGELOG is a great name for.\r\n\r\n> 2. I think the detailed changelog and migration guides worth moving to new subpages, because it is not important for the new user.  This then will look similar to the Google documentation\r\n\r\nSure. The Detailed guide can be added as a separate page in the docs and linked to. I thought about it as well. Happy to hear why others think but I think we should have this:\r\n\r\n* README.md in PyPI describing gerneral \"what it is about\" + all things important to installing PyPI + link to the Provider \"index\" documentation\r\n\r\n* Provider's index documentation with the same information added + link to detailed commit changelog. It might contain more information (but each Provider is free to add it in the index.rst above the automatically generated part). I do not want to discuss \"standard\" for this documentation here - we can discuss it separately. In this  change I only want to focus on automatically generated part.\r\n\r\n* Detailed changelog - this might be separate page (happy to name it differently if someone has a good proposal).\r\n\r\n>    When we move the guides to new pages, we will also be able to easily prepare the migration guide from Airflow 1.10, because we already have a table that facilitates these migrations.\r\n \r\nWe already have it in Backport providers. I think Provider's documentation should be more \"forward\" looking rather than focuing in the migration from 1.10. \r\nWe might instead point out to backport's PYPI readme and mention that for migration from 1.10 people \r\n\r\n> 1. The links in the table use markdown syntax instead of rst.\r\n\r\nI think I fixed that, but I can take a look. ",
        "createdAt" : "2021-01-20T14:17:51Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "5e0325b9-1fdb-41ee-a2d5-f0904e7a2456",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "> human description on what changed in each version. Which I think CHANGELOG is a great name for.\r\n\r\nI am afraid nobody will write it by hand. Google automatically generates CHANGELOG.md files. Everyone has similar references to Github. \r\nhttps://github.com/googleapis/python-bigquery/blob/master/CHANGELOG.md\r\nhttps://github.com/googleapis/python-bigquery/commit/b0e074f7522710886be1da2f117ea22de411b408\r\nTo generate the changelog, they use the[googleapis/release-please](https://github.com/googleapis/python-bigquery/commit/b0e074f7522710886be1da2f117ea22de411b408) tool, which analyzes the message and generates a changelog based on it.\r\n\r\n> Release Please assumes you are using Conventional Commit messages.\r\n> \r\n> The most important prefixes you should have in mind are:\r\n> \r\n> fix: which represents bug fixes, and correlates to a SemVer patch.\r\n> feat: which represents a new feature, and correlates to a SemVer minor.\r\n> feat!:, or fix!:, refactor!:, etc., which represent a breaking change (indicated by the !) and will result in a SemVer major.\r\n\r\nIn the first version, I think that we don't need the changes to be divided into several categories, although that would be super functional, we can limit ourselves to listing the changes. If we publish these packages regularly, each release will not have a very long list of changes.",
        "createdAt" : "2021-01-20T23:53:45Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "8787cc82-09b1-47c0-a035-761aa9b6668a",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I like what you have suggested here Jarek.\r\n\r\n- Concise README\r\n- Link to commit changelog\r\n- detailed changelog is the Updating guide right?",
        "createdAt" : "2021-01-20T23:56:18Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "74b764a9-9b9d-4834-a8fc-241ecfda7d89",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "@kaxil For now, I can see that we have two changelogs, one with only a list of breaking changes and the detailed changelog with a list of all commits.\r\nhttp://gabby-cough.surge.sh/#changelog\r\nWe don't have any updating guide yet.\r\n\r\nI only suggest changing the name from \"Changelog\" to \"Upgrading guide\" and from \"Detailed changelog\" to \"Changelog\", because I am concerned that we will be able to maintain the changelog if we have as many contributions as we do now. After time, I suspect we'll be creating a handwritten changelog by copying only the titles of a few changes. ",
        "createdAt" : "2021-01-21T00:09:20Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "893d9fb7-5f4b-4f21-a4d6-a41b2a19cb7c",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Oh yes, I agree with that @mik-laj -- My assumption was detailed changelog was updating guide but looks like it is just list of commits.\r\n\r\nSo yeah, **Changelog** -> **Upgrading guide** and **Detailed changelog** -> **Changelog** . ",
        "createdAt" : "2021-01-21T00:30:54Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "8c28a678-8adb-4b13-98c4-fa0da5719c6a",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "> (happy to name it differently if someone has a good proposal).\r\n\r\nAlternatively, we can call it \"Commits\"",
        "createdAt" : "2021-01-21T02:12:01Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "5836586a-979d-45ca-ac66-5d2940292919",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "> > feat!:, or fix!:, refactor!:, etc., which represent a breaking change (indicated by the !) and will result in a SemVer major.\r\n\r\nI think automatically generating nice changelog is something we can think about in the future. And if you look at the commit changes now, there are many we would have to exclude because they are just refactors/global updates. For now I thin we should generate changelog manually (and every time someone makes a new feature or breaking change - during review, we should ask the person to add entry to the changelog. I will update the changelogs manually with the first release, but from the 1.0.1 onwards, this is just a matter that all committers will pay attention to it and make sure that Changelog is updated.\r\n\r\nAs the next step we could introduce the semantic commits and automated changelog generation. But this would require discussion, voting and likely some automation to make sure we follow it. I would like to decouple this from this change.\r\n",
        "createdAt" : "2021-01-21T09:10:07Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "657ffa47-2171-4bf8-abc2-0955adbae40e",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Just one comment here @kaxil @mik-laj about the naming/change process.\r\n\r\nI am not totally against naming it UPDATING.md, but I think we are confusing a bit airflow and providers release cycle.  I think we should get the naming right and content of this \"manually written\" parts.\r\n\r\nI believe  most of provider releases will be incremental updates - new hooks/operators added basically or new (backwards-compatible) changes in the operators. The changes that we have now in Google Providers are exception rather than rule. We only need to add the \"upgrading\" guide because we make backwards-incompatible changes due to 2.0 APIs. In vast majority of cases people should be able to do 'pip install --upgrade `apache-airflow-providers-<NN>` and there should be no need to follow any \"updating\" guide. This is the main premise of semver, which communicates breaking changes. The only time where we need to add \"updating\" information is when we go 1.0.0 -> 2.0.0 etc.\r\n\r\n\r\nNow - this means that vast majority of changes will be simply \"new operator \"xxx\" added\". That's why I think CHANGELOG.rst is a good name, and this is also a good name for the Heading in the docs.\r\n\r\nWhile idally indeed we should be able to automaticaly get it from semantic commits (and I am more and more convinced that we should switch to those), this is a decision that will time to discuss and vote and apply and it will take some time for people to adjust to, and we can do it as a follow-up. For now I think this will be very little overhead if we just agree between committers, that every time a new stuff is added to  provider, we ask the PR author to add entry in the CHANELOG.md and provider.yaml:\r\n\r\n1) Add new version in provider.yaml patchelevel number (for bugfixes) or minor version (for features)\r\n2) Add a line in CHANGELOG.txt to describe the change added.\r\n\r\nI think this makes it nicely distributed among the PR authors, and decreases a lot the work needed by release manager (@kaxil :) - then PR authors and commiters will take care about updating the versions and the role of release manager will be just to review whether everything was included. Remember that release manager will have to sometimes release 10-20 providers at a time and mostly providers that the release manager knows very little about, so the less work is put on the shoulders of that person, the better. \r\n\r\nLet me know WDYT @kaxil @mik-laj and @ashb (I am mentioning @ashb here for the release management part mainly).\r\n\r\n",
        "createdAt" : "2021-01-21T09:26:07Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "dd8bbcd6-a75a-4b29-b618-23ddbb33cc5e",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Also one small comment here.\r\n\r\nLooking at https://apache-airflow.slack.com/archives/CCR6P6JRL/p1611225089006700 - this is why I think we should have the detailed commit log (as a separate document linked from the index). Users are sometimes aware of the PRs they are interested in and want to know in which version they were included. And it's not very easy to find it out. We will have a separate set of tags for each provider, so for some people, it would be great to have it in this nicely formatted document rather than having to run some complex git commands to find out. \r\n\r\n",
        "createdAt" : "2021-01-21T11:39:11Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "b5f17e2d-d6d0-4c64-977e-0e8b5d594494",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Oh we should definitely have a Changelog which contains the commit log whether it is automated or done manually",
        "createdAt" : "2021-01-21T16:54:00Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "b047d709-017b-4904-be35-0bfeeed05a71",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I will make it separate page then next to index.rst and link to it.",
        "createdAt" : "2021-01-21T18:12:04Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "bca3a5a2-db8e-48fe-8b2a-9362576fc9a1",
        "parentId" : "32abab9d-8983-4783-a5f0-bac690dfc2b7",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I will also add a few hyperlinks here and there, so that we will be able to freely jump between those different pages - \r\n* README in PyPI, \r\n* index.rst in docs\r\n* commit changes in docs\r\n\r\n\r\nThose will be interlinked with version numbers so that we will be able to jump from PYPI 2.0.0 package straight to detailed commit log for 2.0.0 and 2.0.0 Changelog (and all the cross-links between those).\r\n\r\n",
        "createdAt" : "2021-01-21T18:14:50Z",
        "updatedAt" : "2021-02-01T15:04:27Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c96eec3cbd9954cb92995c7cfe356f2df847bb",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@{{ CROSS_PROVIDERS_DEPENDENCIES_TABLE_RST | safe }}\n\n{%- endif %}\n\n{{ CHANGELOG | safe }}"
  }
]