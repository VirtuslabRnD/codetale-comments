[
  {
    "id" : "65c325e3-3017-46b8-a393-5de7f6cb8428",
    "prId" : 20971,
    "prUrl" : "https://github.com/flutter/flutter/pull/20971#pullrequestreview-151560282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I think the agent code should do the clean-up (perhaps _in addition_ to the clean-up here). Otherwise, this is pretty much guaranteed to leak into other tests. The proper place to add it is somewhere in the CI loop, perhaps next to the place where we turn off the screen: https://github.com/flutter/cocoon/blob/master/agent/lib/src/commands/ci.dart#L120",
        "createdAt" : "2018-08-24T19:40:05Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "acc11692-38cb-45f6-885e-61e616d42a8c",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "That would require refactoring and updating the cocoon agent code to dart 2 as well...\r\n\r\nYou're right though, we'll need to expose some sort of AndroidAccessibilityTest config to handle this.\r\n\r\n(_But_  leaving talkback on shouldn't negatively effect testing, since all of the driver gestures bypass the talkback gestures, just saying)",
        "createdAt" : "2018-08-24T20:13:03Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "63904e9d-8093-4da2-8c56-f07977b95d4f",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "cc @goderbauer , @gspencergoog do you guys agree with yegor that we need to do this in coccon agent? tearDownAll is always called so I believe the chance of it failing to execute are minimal - or rather the agent process invoking it has the same risks.",
        "createdAt" : "2018-08-28T22:43:28Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f843d332-712a-4e45-b05d-0a815b83c789",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Leaving it up to @goderbauer and @gspencergoog (and perhaps @cbracken) to make a final call, . If I was among the ones maintaining the devicelab right now I'd continue insisting that the agents do the clean-up :smile: I built the devicelab with the philosophy that flutter/flutter repository cannot be trusted, and where possible (and practical) did all the clean-up in the agent code, which doesn't change often. For example, the agents are currently reponsible for managing screen on/off state, cleaning up dangling processes, and smoke-testing the USB connections. I think this falls under the same category.",
        "createdAt" : "2018-08-28T22:55:51Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "caad08ef-1ec1-4766-9b08-b8a864deaef1",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "I would agree with Yegor that the clean-up should also happen in the agent. Is turning it off a no-op if it is already off? In that case we could turn it off before we run a test to ensure that this doesn't leak across tests even if the agent or test was killed mid-execution?\r\n\r\n@jonahwilliams Why is this dependent on moving the agents to Dart 2?",
        "createdAt" : "2018-08-29T16:08:01Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "dadad6bd-f807-4c5b-b033-5cc11df67fe8",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Actually we might not need to move to dart 2 I think I was confused a bit with something else. Turning it off is a no-op, so we can run that as a part of clean up. In that case, the test would still be required to set up TalkBack and could tear it down too, but there would be way less risk of leaks. @yjbanov does that sound good to you?",
        "createdAt" : "2018-08-29T16:29:45Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "c666a816-d466-4166-9698-1c9de9a1e324",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : ":+1: ",
        "createdAt" : "2018-08-29T17:01:07Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "ea39c07d-5df1-4dfe-918c-f4889e2354b2",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I've updated linux1/2 ... just a bunch of macs to go",
        "createdAt" : "2018-08-31T17:06:45Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "f93776d3-9854-4a22-8a93-ea6452fe2164",
        "parentId" : "19833cd6-f88d-430a-bb72-68754fedbc9b",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "macs updated",
        "createdAt" : "2018-08-31T22:01:14Z",
        "updatedAt" : "2018-09-06T16:26:32Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "54e43f8fb353ba1cf171281e92633acdd80520e1",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@    tearDownAll(() async {\n      // ... And turn it off again\n      final io.Process run = await io.Process.start('adb', const <String>[\n        'shell',\n        'settings',"
  },
  {
    "id" : "5384f7da-82d1-4632-bf7d-0f008a2e6b19",
    "prId" : 43384,
    "prUrl" : "https://github.com/flutter/flutter/pull/43384#pullrequestreview-307347328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d22f20f-cb73-456b-b20a-b032131b937b",
        "parentId" : null,
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Why does this need to be against `_CheckboxRenderObjectWidget` and not just the key?",
        "createdAt" : "2019-10-25T01:50:42Z",
        "updatedAt" : "2019-10-25T01:53:44Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      },
      {
        "id" : "cd3f23e2-b567-4223-82c3-99a33eca098f",
        "parentId" : "6d22f20f-cb73-456b-b20a-b032131b937b",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Because the key corresponds to a `RenderMouseRegion` now that I've added the `MouseRegion`, so we have to dig down to find the render object for the checkbox which adds the semantics.",
        "createdAt" : "2019-10-25T17:27:31Z",
        "updatedAt" : "2019-10-25T17:29:26Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "483b551e698c89d93fd2fe9fbdffebf222447a5c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +203,207 @@            find.descendant(\n              of: find.byValueKey(key),\n              matching: find.byType('_CheckboxRenderObjectWidget'),\n            ),\n          );"
  },
  {
    "id" : "3149f8b6-f25b-457e-b1c3-eff035c327f7",
    "prId" : 44031,
    "prUrl" : "https://github.com/flutter/flutter/pull/44031#pullrequestreview-310750174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eceb5aeb-3e1c-4b57-94aa-d283a8423161",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Can you leave a comment describing how/when this value was selected? Example:\r\n\r\n\"Delay for talkback to ... as of November 2019 with Pixel 4 and Android X.Y.Z\"",
        "createdAt" : "2019-11-02T01:45:03Z",
        "updatedAt" : "2019-11-04T20:17:38Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "41ccc883-3834-4be4-ad34-3500da89e8e2",
        "parentId" : "eceb5aeb-3e1c-4b57-94aa-d283a8423161",
        "authorId" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "body" : "Yeah, I wasn't sure how to document those, but that is a good idea. Will do.\r\n",
        "createdAt" : "2019-11-02T01:46:50Z",
        "updatedAt" : "2019-11-04T20:17:38Z",
        "lastEditedBy" : "4d6ff42b-5e54-4527-b55d-0fb7f3c5513b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4142225b895b79869281cb4d22f7bebe50b91aa8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +63,67 @@        await driver.tap(find.text(textFieldRoute));\n        // Delay for TalkBack to update focus as of November 2019 with Pixel 3 and Android API 28\n        await Future<void>.delayed(const Duration(milliseconds: 500));\n      });\n"
  }
]