[
  {
    "id" : "afbc3118-f6ae-4309-ac14-34faaa7aff66",
    "prId" : 67693,
    "prUrl" : "https://github.com/flutter/flutter/pull/67693#pullrequestreview-505871463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c8d2e6f-ac43-4dbe-b11d-b75c54035c08",
        "parentId" : null,
        "authorId" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "body" : "Wow, this test is involved, and text edition is still changing quite a bit, do you think this can break because of legit changes in the way text editing is handled in the engine? Can this prevent engine rolls to flow into flutter?",
        "createdAt" : "2020-10-09T16:31:41Z",
        "updatedAt" : "2020-10-09T17:24:10Z",
        "lastEditedBy" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "tags" : [
        ]
      },
      {
        "id" : "c0979e37-93c0-4888-bd1e-f43e9c4c56e8",
        "parentId" : "5c8d2e6f-ac43-4dbe-b11d-b75c54035c08",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "Thanks! yes this is a very good test.\r\n\r\nI think the current situation is worse (which happened a few times)\r\n- If there is a change on the framework, engine tests won't run and won't break. \r\n- developer will merge the change to flutter/flutter\r\n- engine developers will start seeing failure on random PRs for felt firefox step (since it's the first step that runs integration tests)\r\n- Later (after a research probably) the flutter/flutter PR will be reverted\r\n- PR author will try to test the PR running felt locally, this is also a little tricky since there are many flutter/flutter developers who does not normally do engine development\r\n\r\nIn the new process,\r\n- flutter/flutter developers would be protected against the changes to e2e and also against platform channels and text editing changes\r\n- flutter/engine developers, will break the the tests on the engine side first if they are making a change that would change the communication between flutter and the web engine (so the tree will be read)\r\n- If the change is on purpose, then there should be a handshake (there should be 3 PRs in a row, first one would change the test or the code to a temporary state. Last one will fix it.)\r\n\r\nI think this is good since this is also reminds both engine/flutter PRs about the other repo. If this was a package (rather than the engine itself) best could have been to use a version in the pubspec of course. But I think we have this problem for many issues between engine<->flutter repo.\r\n\r\nThanks for the reminder though I'm chat with @Hixie to see what can we do for this type of changes. May be we can add a guide for developers.",
        "createdAt" : "2020-10-09T17:38:28Z",
        "updatedAt" : "2020-10-09T17:38:29Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "eafda22f99d27198351c7ddf04d0dc7f810ec371",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@  IntegrationTestWidgetsFlutterBinding.ensureInitialized();\n\n  testWidgets('Focused text field creates a native input element',\n      (WidgetTester tester) async {\n    app.main();"
  },
  {
    "id" : "f3c9081f-fda0-4c88-82b4-f73fb8bbfc83",
    "prId" : 82926,
    "prUrl" : "https://github.com/flutter/flutter/pull/82926#pullrequestreview-663547287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87fa0b98-9487-4492-b9e5-4bdcf06bc454",
        "parentId" : null,
        "authorId" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "body" : "`composed` needs to be set to `true` in synthetic events (similar to `bubbles`) so the event propagates in a similar way as to when it's dispatched by the browser. [Docs](https://developer.mozilla.org/en-US/docs/Web/API/Event/composed).",
        "createdAt" : "2021-05-19T18:45:23Z",
        "updatedAt" : "2021-05-19T18:46:32Z",
        "lastEditedBy" : "da7c6230-81e0-42ca-a747-81cf34aaa357",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2ae83871e6e07ea4521062d66a2fd5d4c266ff2",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +172,176 @@      'bubbles': true,\n      'cancelable': true,\n      'composed': true,\n    });\n    dispatchKeyboardEvent(input, 'keyup', <String, dynamic>{"
  }
]