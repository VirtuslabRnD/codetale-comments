[
  {
    "id" : "332caf94-904b-45a8-a6c0-2b6d158b7a4a",
    "prId" : 26265,
    "prUrl" : "https://github.com/flutter/flutter/pull/26265#pullrequestreview-190875135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03f53609-6913-4adf-8f5e-ca6a5bc411b5",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "What about iOS? ",
        "createdAt" : "2019-01-09T17:48:25Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ecf80bea-d4aa-4ceb-8ae7-233eccca2c66",
        "parentId" : "03f53609-6913-4adf-8f5e-ca6a5bc411b5",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "iOS isn't yet supported by the engine, but when it is, we'll have to do the same thing for it.",
        "createdAt" : "2019-01-09T18:49:30Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be7ef87c295a744e9b7b69fd1a2ef727658d180",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +89,93 @@            dataText.add(Text('hidUsage: ${data.hidUsage} (${_asHex(data.hidUsage)})'));\n            dataText.add(Text('modifiers: ${data.modifiers} (${_asHex(data.modifiers)})'));\n          }\n          for (ModifierKey modifier in data.modifiersPressed.keys) {\n            for (KeyboardSide side in KeyboardSide.values) {"
  },
  {
    "id" : "fd330a61-dde9-40f4-a6a7-7dc26774454c",
    "prId" : 26265,
    "prUrl" : "https://github.com/flutter/flutter/pull/26265#pullrequestreview-191809369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b296dad-84f5-4297-b0a7-47a4533ee0d8",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Will this show each keypress twice (once for left/right and once for any)? And is that intentionally?",
        "createdAt" : "2019-01-11T17:50:05Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "ead9c7c2-a38a-4c41-8f3e-308c4fba77ed",
        "parentId" : "9b296dad-84f5-4297-b0a7-47a4533ee0d8",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Yes, and yes, it was intentional.\r\n\r\nIt's just a test, and I wanted to show the states that would be active when a key was pressed.",
        "createdAt" : "2019-01-11T19:26:45Z",
        "updatedAt" : "2019-01-11T20:38:15Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2be7ef87c295a744e9b7b69fd1a2ef727658d180",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +91,95 @@          }\n          for (ModifierKey modifier in data.modifiersPressed.keys) {\n            for (KeyboardSide side in KeyboardSide.values) {\n              if (data.isModifierPressed(modifier, side: side)) {\n                dataText.add("
  }
]