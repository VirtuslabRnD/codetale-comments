[
  {
    "id" : "474bd093-28c3-4181-84ce-9549fa400ca5",
    "prId" : 41247,
    "prUrl" : "https://github.com/flutter/flutter/pull/41247#pullrequestreview-293176401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38c20dee-2519-4163-a37e-8e2019967e80",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "We should probably annotate this (throughout the PR) with the bug number to make it easier to find and remove places we've done this later.",
        "createdAt" : "2019-09-25T04:08:57Z",
        "updatedAt" : "2019-09-25T15:56:37Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "a3019cb8-6fd6-4177-b506-541e160854fa",
        "parentId" : "38c20dee-2519-4163-a37e-8e2019967e80",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Sure. Added a TODO referencing flutter/flutter#31366, but left the link to the shell Wiki too.",
        "createdAt" : "2019-09-25T15:39:44Z",
        "updatedAt" : "2019-09-25T15:56:37Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "141bf13a5d64b225b704e7662e4d39a211737a16",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@  if (Platform.isMacOS) {\n    // TODO(gspencergoog): Update this when TargetPlatform includes macOS. https://github.com/flutter/flutter/issues/31366\n    // See https://github.com/flutter/flutter/wiki/Desktop-shells#target-platform-override\n    debugDefaultTargetPlatformOverride = TargetPlatform.fuchsia;\n  }"
  },
  {
    "id" : "55c431df-7cbf-4f84-90f6-89a0af0445de",
    "prId" : 41247,
    "prUrl" : "https://github.com/flutter/flutter/pull/41247#pullrequestreview-293181866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5734b2f7-3902-47f1-bd33-a9da753c864c",
        "parentId" : null,
        "authorId" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "body" : "Do these tests run on web? If so, we need the kIsWeb check to not break web, I believe.",
        "createdAt" : "2019-09-25T04:09:42Z",
        "updatedAt" : "2019-09-25T15:56:37Z",
        "lastEditedBy" : "a37bcf63-7713-4b5b-8625-f91c635e284e",
        "tags" : [
        ]
      },
      {
        "id" : "66b8f5e2-eea9-4f79-85c0-69dbdffb3426",
        "parentId" : "5734b2f7-3902-47f1-bd33-a9da753c864c",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "For the most part, these are \"manual\" tests, so they don't run unless we run them manually. There are a couple (`card_collection` and `color_testing_demo`) that are run as part of the smoke tests that I've now reverted so that they don't run on desktop (or web).",
        "createdAt" : "2019-09-25T15:47:28Z",
        "updatedAt" : "2019-09-25T15:56:37Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "141bf13a5d64b225b704e7662e4d39a211737a16",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\nvoid main() {\n  if (Platform.isMacOS) {\n    // TODO(gspencergoog): Update this when TargetPlatform includes macOS. https://github.com/flutter/flutter/issues/31366\n    // See https://github.com/flutter/flutter/wiki/Desktop-shells#target-platform-override"
  },
  {
    "id" : "c032f1ab-d05d-4854-8c80-1a9868ee5020",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-385133429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "957bf497-49e8-437a-9cfb-8a57e1423031",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Maybe give this a short doc comment?",
        "createdAt" : "2020-03-26T17:45:17Z",
        "updatedAt" : "2020-04-06T20:51:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "049a1a34-c46a-42ef-b9f4-72df1164905d",
        "parentId" : "957bf497-49e8-437a-9cfb-8a57e1423031",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Done.",
        "createdAt" : "2020-03-31T21:56:11Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +23,27 @@/// Instances of this class are returned from [UndoableAction]s and placed on\n/// the undo stack when they are invoked.\nclass Memento extends Object with DiagnosticableMixin implements Diagnosticable {\n  const Memento({\n    @required this.name,"
  },
  {
    "id" : "c024d289-f769-40d4-ae41-bc8dfba656b4",
    "prId" : 42940,
    "prUrl" : "https://github.com/flutter/flutter/pull/42940#pullrequestreview-385133429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da4ad412-207a-49d3-9b7e-9201e1886140",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Why have these if they are always true?",
        "createdAt" : "2020-03-26T17:46:30Z",
        "updatedAt" : "2020-04-06T20:51:29Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "49804579-6cde-495d-bd4c-a7addaeca9a9",
        "parentId" : "da4ad412-207a-49d3-9b7e-9201e1886140",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "If this is to demonstrate that you could do something else here, maybe comment?",
        "createdAt" : "2020-03-26T17:46:57Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "88261b61-b193-490e-9c85-3e6f905cfd6d",
        "parentId" : "da4ad412-207a-49d3-9b7e-9201e1886140",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Added comments.",
        "createdAt" : "2020-03-31T21:56:19Z",
        "updatedAt" : "2020-04-06T20:51:30Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc3b796a17c25612a6204aadd9cd3d592423dbe",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +34,38 @@  /// Subclasses could override to provide their own conditions when a command is\n  /// undoable.\n  bool get canUndo => true;\n\n  /// Returns true if this Memento can be used to redo."
  },
  {
    "id" : "6588001c-ed6c-402e-994d-a4ac4c1485f5",
    "prId" : 82611,
    "prUrl" : "https://github.com/flutter/flutter/pull/82611#pullrequestreview-667048842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eff19c3e-067b-4b00-ac71-cc542652a788",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Same",
        "createdAt" : "2021-05-24T22:22:37Z",
        "updatedAt" : "2021-05-24T22:53:52Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b8f855804de15bd3fc4404f52266555b333419b",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +208,212 @@      return;\n    }\n    final UndoableActionDispatcher manager = Actions.of(primaryFocus?.context ?? FocusDemo.appKey.currentContext!) as UndoableActionDispatcher;\n    manager.undo();\n  }"
  }
]