[
  {
    "id" : "8d0ccccd-dece-439a-b62c-45e2c589a27d",
    "prId" : 49460,
    "prUrl" : "https://github.com/flutter/flutter/pull/49460#pullrequestreview-350526242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f896717-2abc-40b7-b8a3-10ad60163638",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "suggestion: this file also seems very long. may be we can keep the recorder and carry Profile and FrameMetrics to another common or util class",
        "createdAt" : "2020-01-29T23:13:24Z",
        "updatedAt" : "2020-01-30T17:33:46Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "db996a1a-a9f3-47e7-b44f-35af698bb17a",
        "parentId" : "2f896717-2abc-40b7-b8a3-10ad60163638",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "This repository, unlike flutter/engine, does not use part files, and so one Dart file is also one library. I wouldn't break it up because these classes are closely related to the other classes in this library and are exported by one library. Otherwise, we'd need to re-export them, or have call sites import multiple libraries. Hopefully this file won't grow that much because most of the code will be in the many many benchmarks that we'll write, each of which will be quite small.\r\n\r\nI also grepped the code in this repo and found 724 files that are longer than this file, so the current line count is not at all excessive by Flutter standards.",
        "createdAt" : "2020-01-30T00:58:35Z",
        "updatedAt" : "2020-01-30T17:33:46Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dd3f220d0fddf32f23675468d89af11a054852f",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// Copyright 2014 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file."
  },
  {
    "id" : "372a4535-83a1-4a20-99ca-0ab6ab3d1411",
    "prId" : 51490,
    "prUrl" : "https://github.com/flutter/flutter/pull/51490#pullrequestreview-365283815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c5de0f8-d64f-433c-ace7-9de83232a653",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "Instead of checking for `_hasErrored` in multiple places, what if we check for it in `_shouldContinue()` and rely on existing logic to stop pumping frames?",
        "createdAt" : "2020-02-26T19:45:44Z",
        "updatedAt" : "2020-02-26T19:47:00Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "c8f67ecf-b400-403c-9c84-8babcb9c9874",
        "parentId" : "6c5de0f8-d64f-433c-ace7-9de83232a653",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "I can't think of a clean way to use it. Currently `_shouldContinue` depends on everything being healthy. For example, it extracts the profile from rendered frames. It only communicates two signals: \"continue running\" and \"benchmark finished successfully\". We'd have to add a third value communicating \"benchmark errored and must halt\". When an error happens the system could be in a corrupted state, in which case our job is to halt immediately and report the error before it's obscured by something else. IOW I think they have sufficiently different roles to warrant separate codepaths and separate signals.",
        "createdAt" : "2020-02-26T22:14:44Z",
        "updatedAt" : "2020-02-26T22:14:44Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "21a0ce373facb306ebe7c222ff1a64dc204520c7",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +591,595 @@    if (_hasErrored) {\n      return;\n    }\n    _benchmarkStopped = !_listener._shouldContinue();\n    super.handleBeginFrame(rawTimeStamp);"
  },
  {
    "id" : "ab4c0d68-89e0-4f37-a3d6-116b81cb2133",
    "prId" : 51493,
    "prUrl" : "https://github.com/flutter/flutter/pull/51493#pullrequestreview-366697744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f19db96-7d87-40a6-86e5-3ea92ddebf2d",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "For consistency with the devicelab nomenclature let's call this \"benchmarkScoreKeys\"",
        "createdAt" : "2020-02-28T21:04:04Z",
        "updatedAt" : "2020-02-28T21:05:09Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "78e991d0-98a3-43ec-9a9e-899ef00b20c1",
        "parentId" : "8f19db96-7d87-40a6-86e5-3ea92ddebf2d",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "I have another, larger PR sitting on top of this PR (I'll send it your way soon). Would you mind if I make this change in the other PR? It's easier that way.",
        "createdAt" : "2020-02-28T21:21:59Z",
        "updatedAt" : "2020-02-28T21:21:59Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "44e8dfa7-00e6-47cc-8c30-cf2e75fec206",
        "parentId" : "8f19db96-7d87-40a6-86e5-3ea92ddebf2d",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "SGTM",
        "createdAt" : "2020-02-28T21:31:36Z",
        "updatedAt" : "2020-02-28T21:31:37Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a3061764acc71fa78790b22133f31a5b5e86781",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +421,425 @@    return <String, dynamic>{\n      'name': name,\n      'scoreKeys': <String>['averageDrawFrameDuration'],\n      'averageDrawFrameDuration': averageDrawFrameDuration.inMicroseconds,\n      'drawFrameDurationNoise': drawFrameDurationNoise,"
  }
]