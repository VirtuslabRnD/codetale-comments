[
  {
    "id" : "ca42aefe-cc7e-42eb-8308-90ec40879418",
    "prId" : 69791,
    "prUrl" : "https://github.com/flutter/flutter/pull/69791#pullrequestreview-523834239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b15629f-4c97-4707-a0d9-a3633d122aaf",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Just a note, once this is opted into null safety you can give `_reportFailureAndExit` a return type of `Never` and then there will be no analyzer warning",
        "createdAt" : "2020-11-05T00:32:54Z",
        "updatedAt" : "2020-11-06T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf8dbafb288b9c4e99ad667ab238362dbded87e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@      return stdoutToString(result.stdout);\n    }\n    _reportFailureAndExit(args, workingDirectory, result, explanation);\n    return null; // for the analyzer's sake\n  }"
  },
  {
    "id" : "788d1b66-b88c-4309-bc8d-ed47e2450543",
    "prId" : 69791,
    "prUrl" : "https://github.com/flutter/flutter/pull/69791#pullrequestreview-524661759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c78c3d3-bd66-464f-9ecf-c560dab9feac",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Here and elsewhere, I would separate the cast from the method invocation. maybe a little helper method like:\r\n\r\n`String decode(dynamic value) => (value as String).trim();`\r\n\r\nbut with a better name ðŸ˜­ ",
        "createdAt" : "2020-11-05T00:35:28Z",
        "updatedAt" : "2020-11-06T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "aef2d251-3d9e-4d81-bc3c-537316fd470c",
        "parentId" : "5c78c3d3-bd66-464f-9ecf-c560dab9feac",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I can do that. Is your concern line numbers in the stack trace, or is there a higher level code quality concern?",
        "createdAt" : "2020-11-05T18:27:30Z",
        "updatedAt" : "2020-11-06T17:40:36Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "1c26f8e7-7c70-4109-a23e-beda3383ada5",
        "parentId" : "5c78c3d3-bd66-464f-9ecf-c560dab9feac",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Its a bit awkward to read with the cast inline. Another approach would be to use `toString()` instead since that is defined on Object/dynamic",
        "createdAt" : "2020-11-05T18:30:39Z",
        "updatedAt" : "2020-11-06T17:40:36Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "575a105b-24a3-47fe-add3-2a2e388e6489",
        "parentId" : "5c78c3d3-bd66-464f-9ecf-c560dab9feac",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "implemented `String stdoutToString(dynamic input)`",
        "createdAt" : "2020-11-05T20:59:43Z",
        "updatedAt" : "2020-11-06T17:40:36Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf8dbafb288b9c4e99ad667ab238362dbded87e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    String explanation, {\n    @required String workingDirectory,\n  }) {\n    final ProcessResult result = _run(args, workingDirectory);\n    if (result.exitCode == 0) {"
  }
]