[
  {
    "id" : "9747d6c2-ec26-476a-b2a6-9aecb2d4de3a",
    "prId" : 26386,
    "prUrl" : "https://github.com/flutter/flutter/pull/26386#pullrequestreview-191437435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57f69b01-e659-45e7-9148-f0847f2dc613",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "I was going to put this whole block of code into a separate function that returns an Archive, but I guess it's just for prettiness, since it's only called here.",
        "createdAt" : "2019-01-10T21:15:34Z",
        "updatedAt" : "2019-01-10T22:01:48Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "2649bb5d-b4d5-4ccc-bf21-1ad0d3386e1d",
        "parentId" : "57f69b01-e659-45e7-9148-f0847f2dc613",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Done. Just returning null on failure rather than dealing with an exception since this is effectively one-off utility code.",
        "createdAt" : "2019-01-10T21:42:00Z",
        "updatedAt" : "2019-01-10T22:01:48Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      },
      {
        "id" : "99b6f846-5c22-478c-85ab-80d1208bfcdd",
        "parentId" : "57f69b01-e659-45e7-9148-f0847f2dc613",
        "authorId" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "body" : "Also added a tiny bit of code just now to print out the first 80 chars of the body in case it turns out to be useful in diagnosing what's up (on the assumption that if we're not getting a 200, we may be getting an error msg.",
        "createdAt" : "2019-01-10T22:06:50Z",
        "updatedAt" : "2019-01-10T22:06:50Z",
        "lastEditedBy" : "e51c798e-576f-47fe-bcd8-577d78e2a5a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ef3f01cccd0d0b6f817cd614e1d0ffdcd30359",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +28,32 @@/// Returns null if the archive fails to download after [maxTries] attempts.\nFuture<Archive> fetchArchive(String url, int maxTries) async {\n  List<int> responseBytes;\n  for (int i = 0; i < maxTries; i++) {\n    final http.Response response = await http.get(url);"
  }
]