[
  {
    "id" : "0b0b847b-8d68-4a38-93e0-5367be819d0a",
    "prId" : 82462,
    "prUrl" : "https://github.com/flutter/flutter/pull/82462#pullrequestreview-664845942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a915103-54b0-4548-bfc5-d4e60e0eeba0",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "This passes analysis both on CI and locally for me, but how are you able to declare this `final` and then assign it a value later?",
        "createdAt" : "2021-05-20T18:59:01Z",
        "updatedAt" : "2021-05-20T18:59:02Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "f3d8e069-6dd1-479e-a642-3715ec4c9b0e",
        "parentId" : "8a915103-54b0-4548-bfc5-d4e60e0eeba0",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "this is a new feature with null safety! If the compiler can prove that it'll be initialized before it's used, you can declare it final without an initializer. (It's like `late` but the compiler can prove it's safe, whereas `late` is like `dynamic` in that it tells the compiler \"trust me I know what I'm doing\" and therefore is probably a source of bugs.)",
        "createdAt" : "2021-05-20T19:28:47Z",
        "updatedAt" : "2021-05-20T19:28:47Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "a9fca850-7d7c-4c44-84bb-96c5cea93632",
        "parentId" : "8a915103-54b0-4548-bfc5-d4e60e0eeba0",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "> this is a new feature with null safety! If the compiler can prove that it'll be initialized before it's used, you can declare it final without an initializer. (It's like `late` but the compiler can prove it's safe, whereas `late` is like `dynamic` in that it tells the compiler \"trust me I know what I'm doing\" and therefore is probably a source of bugs.)\r\n\r\nmind blown.",
        "createdAt" : "2021-05-20T19:59:49Z",
        "updatedAt" : "2021-05-20T19:59:50Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e3222175df08bcab1e26175bc02f045b6e9efea",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@  required String secondaryBranch,\n}) {\n  final Commit anchor;\n  if (primaryBranch == primaryTrunk) {\n    log('on $primaryTrunk, using last commit as anchor');"
  }
]