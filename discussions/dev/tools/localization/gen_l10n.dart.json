[
  {
    "id" : "a4070839-2ce9-4e42-a686-d4508624d6de",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-311254835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bb38b4d-5d27-4117-ac50-e1443ee031a2",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This would be a good place to check everything:\r\n\r\n- The l10nDirectory exists and  supports read/write.\r\n- The inputArbFile is readable \r\n- The outputFile is writable or doesn't exist.\r\n- The stringClassName is a legit Dart class name.",
        "createdAt" : "2019-11-01T23:38:00Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c5b19136-4118-490b-a106-1893583ec76f",
        "parentId" : "3bb38b4d-5d27-4117-ac50-e1443ee031a2",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I managed to add checks for the following:\r\n- If l10nDirectory exists\r\n- The stringClassName is a legit Dart class name (check for first character being uppercase alphabet and for non alphanumeric characters in the string.\r\n\r\nI'm not quite sure how to check if a file is readable/writable. Is there an example I can reference? ",
        "createdAt" : "2019-11-04T07:08:12Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "c99600b3-fd03-4df7-8452-cd71881804dc",
        "parentId" : "3bb38b4d-5d27-4117-ac50-e1443ee031a2",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It looks like you can use the [FileSytemEntity stat method](https://api.flutter.dev/flutter/dart-io/FileSystemEntity/stat.html) to check the value of the FileSystemStat's [mode string](https://api.flutter.dev/flutter/dart-io/FileStat/modeString.html).",
        "createdAt" : "2019-11-04T16:27:56Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "87ec4ac4-9a8c-42b3-a5ce-4543db7c2703",
        "parentId" : "3bb38b4d-5d27-4117-ac50-e1443ee031a2",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Done! Let me know if it looks good, I'm not terribly familiar with the stat() method and file system permissions, so let me know if there's something we should change here.",
        "createdAt" : "2019-11-04T18:04:16Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 332,
    "diffHunk" : "@@ -1,1 +330,334 @@      \"The 'output-class', $stringsClassName, is not valid Dart class name.\\n\"\n    );\n\n  final List<String> arbFilenames = <String>[];\n  final Set<String> supportedLanguageCodes = <String>{};"
  },
  {
    "id" : "fccb6eb9-d5f2-40ee-b1e0-f1e0614483a2",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-310887857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e98475b4-1950-419f-a304-581b3eb51d77",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Presumably this can fail. If it does we should probably abort.",
        "createdAt" : "2019-11-01T23:53:50Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "c0b9f983-9688-46e3-99d7-ac2ec2f2dc50",
        "parentId" : "e98475b4-1950-419f-a304-581b3eb51d77",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Done",
        "createdAt" : "2019-11-04T06:24:47Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 344,
    "diffHunk" : "@@ -1,1 +342,346 @@      if (arbFilenameRE.hasMatch(entityPath)) {\n        final File arbFile = File(entityPath);\n        final Map<String, dynamic> arbContents = json.decode(arbFile.readAsStringSync());\n        String localeString = arbContents['@@locale'];\n"
  },
  {
    "id" : "80ab64c9-65e6-490e-a47b-e735a9a099e7",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-310887857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d66d273-ccf5-4945-96b8-0bb7ddf665e4",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "If localeString is null at this point then we found an arb file but couldn't determine what locale it was for. That seems bad; probably abort here.",
        "createdAt" : "2019-11-02T00:03:14Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "81560f37-5b59-45d4-b01c-8bce4e58e1f7",
        "parentId" : "7d66d273-ccf5-4945-96b8-0bb7ddf665e4",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Done",
        "createdAt" : "2019-11-04T06:18:18Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 358,
    "diffHunk" : "@@ -1,1 +356,360 @@            );\n          }\n\n          localeString = arbFilenameLocaleRE.firstMatch(entityPath)[1];\n        }"
  },
  {
    "id" : "6ff7e4a7-a93a-4fa8-9006-d3f378973322",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-310735333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36bb01a6-d15f-4d89-82b5-924074537f7b",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Eventually we should add support for a --verbose option.",
        "createdAt" : "2019-11-02T00:04:02Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +299,303 @@  parser.addOption('output-localization-file', defaultsTo: 'app_localizations.dart');\n  parser.addOption('output-class', defaultsTo: 'AppLocalizations');\n  final argslib.ArgResults results = parser.parse(args);\n\n  final String arbPathString = results['arb-dir'];"
  },
  {
    "id" : "92afd27a-73a4-4a8e-a7fb-83d975d41185",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-310887857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cd30219-3a1d-49eb-aa25-f8ba13736808",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Maybe show the import here as well (assuming that the app is defined in lib/).",
        "createdAt" : "2019-11-02T00:08:31Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "9c678d30-55e0-47f0-83df-391ebfa9375e",
        "parentId" : "9cd30219-3a1d-49eb-aa25-f8ba13736808",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Done",
        "createdAt" : "2019-11-04T07:16:31Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@/// import '@importFile';\n///\n/// return MaterialApp(\n///   localizationsDelegates: @className.localizationsDelegates,\n///   supportedLocales: @className.supportedLocales,"
  },
  {
    "id" : "85dc2ec5-1850-4645-ab0c-ee46aa716b35",
    "prId" : 43934,
    "prUrl" : "https://github.com/flutter/flutter/pull/43934#pullrequestreview-311254835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9b0130f-558f-4f8f-912f-d71b4f52b352",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We could map no-parameter lookups to a getter. Would need a `getterMethodTemplate` .. and some other changes :-).",
        "createdAt" : "2019-11-04T17:01:08Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "3a1e563b-d013-4c99-9e85-aab77958693a",
        "parentId" : "a9b0130f-558f-4f8f-912f-d71b4f52b352",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Done! ",
        "createdAt" : "2019-11-04T18:03:34Z",
        "updatedAt" : "2019-11-04T23:42:37Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c99587f81864273d6bf544cda368e53f4c258e",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@''';\n\nconst String simpleMethodTemplate = '''\n  String @methodName(@methodParameters) {\n    return Intl.message("
  },
  {
    "id" : "8402baaf-7778-45f8-b976-2351a88651c7",
    "prId" : 44313,
    "prUrl" : "https://github.com/flutter/flutter/pull/44313#pullrequestreview-312896102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81895080-8ed2-4a81-aa78-82d9ff4e5c80",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Since developers will likely cut-and-paste this, maybe include a comment. For example:\r\n```dart\r\n///   # Internationalization support. \r\n///   flutter_localizations:\r\n///     sdk: flutter\r\n...\r\n```\r\n\r\nActually, when there's a gen_l10n doc to point at, the comment should include a link.",
        "createdAt" : "2019-11-07T00:19:11Z",
        "updatedAt" : "2019-11-07T00:35:04Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f29681c189f1b48f04f66a2f722144bfdacd8402",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +46,50 @@/// dependencies:\n///   # Internationalization support.\n///   flutter_localizations:\n///     sdk: flutter\n///   intl: 0.16.0"
  },
  {
    "id" : "0bc0fa25-8122-4ab4-b442-1b110fecafed",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-318516656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ecf9cbc-7c9e-43a4-843c-487084e8a812",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I'm not quite sure how to find existing exceptions that make sense for the error cases I'm writing. I created this as a placeholder for now, but is there a sane way to figure out if an existing exception class is better for my use cases? Or is it normal to create your own?",
        "createdAt" : "2019-11-14T19:06:18Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "e0c40185-a088-4e0f-80e3-0947433fd2fa",
        "parentId" : "3ecf9cbc-7c9e-43a4-843c-487084e8a812",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would either create your own or re-use Exception.",
        "createdAt" : "2019-11-18T17:51:34Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 454,
    "diffHunk" : "@@ -1,1 +554,558 @@}\n\nclass L10nException implements Exception {\n  L10nException(this.message);\n"
  },
  {
    "id" : "32ba410b-b634-4f3c-9dcc-70f53ba7d176",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-318516656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a712d953-011f-454e-a9ae-1e6848989fb6",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would create a single `initialize` method which takes all of this data as named arguments. Then later on, you can throw a StateError if anything is accessed before this method is called",
        "createdAt" : "2019-11-18T17:57:46Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +396,400 @@  /// Sets the reference [Directory] for [l10nDirectory].\n  @visibleForTesting\n  void setL10nDirectory(String arbPathString) {\n    if (arbPathString == null)\n      throw L10nException('arbPathString argument cannot be null');"
  },
  {
    "id" : "ec117332-e2c2-4e64-be6a-f9027685aa34",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-318516656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04a63504-b0b4-4a9f-863f-c691d80eeebb",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "It doesn't really look like this class is doing localization generation, just collecting some directories for processing.",
        "createdAt" : "2019-11-18T17:58:25Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +315,319 @@/// classes, as well as all pertinent Dart files required to internationalize a\n/// Flutter application.\nclass LocalizationsGenerator {\n  /// Creates an instance of the localizations generator class.\n  ///"
  },
  {
    "id" : "ada2b561-9b5e-4e0b-b280-7129bdabdba5",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-325009576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "309163f9-1716-4394-8ab6-759140b46328",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "IsDirectoryReadableAndWritable was factored out, maybe factor out `bool _isReadable(FileSystemEntity file)` too",
        "createdAt" : "2019-11-27T23:07:59Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "bc256098-c5a9-4cf1-b666-72f1dbcd77b8",
        "parentId" : "309163f9-1716-4394-8ab6-759140b46328",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I cleaned up the function a little -- Decided to create `_isNotReadable` and `_isNotWritable` functions that are directly used by `setL10nDirectory` instead of nesting the logic.",
        "createdAt" : "2019-12-02T04:22:15Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +424,428 @@    templateArbFile = _fs.file(path.join(l10nDirectory.path, templateArbFileName));\n    final String templateArbFileStatModeString = templateArbFile.statSync().modeString();\n    if (templateArbFileStatModeString[0] == '-' && templateArbFileStatModeString[3] == '-')\n      throw FileSystemException(\n        \"The 'template-arb-file', $templateArbFile, is not readable.\\n\""
  },
  {
    "id" : "25872018-ffa8-474d-abf4-232a948ca1cd",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-327178094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed1e440a-8e44-45a5-840b-a0b5368207a1",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Document the exceptions thrown by this method",
        "createdAt" : "2019-12-04T21:50:31Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +382,386 @@  /// Throws a [FileSystemException] when a file operation necessary for setting\n  /// up the [LocalizationsGenerator] cannot be completed.\n  void initialize({\n    String l10nDirectoryPath,\n    String templateArbFileName,"
  },
  {
    "id" : "d04cf230-9158-4a20-877c-6749e2606699",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-327249770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b73637a-d484-453f-8125-863e1798a5f7",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "You can make this private or visible for testing. Also, instead of `setMethodName`, use a setter:\r\n\r\n```\r\nset l10Directory(String absPath) {\r\n ...\r\n}\r\n```",
        "createdAt" : "2019-12-04T21:51:25Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "bd76b9fe-d542-45b8-9d17-e9308761c5c3",
        "parentId" : "8b73637a-d484-453f-8125-863e1798a5f7",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I don't think that's possible, since the argument is a String, but the variable being set is usually a `Directory` or a `File`. I updated it for `setClassName`",
        "createdAt" : "2019-12-05T00:49:18Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +396,400 @@  /// Sets the reference [Directory] for [l10nDirectory].\n  @visibleForTesting\n  void setL10nDirectory(String arbPathString) {\n    if (arbPathString == null)\n      throw L10nException('arbPathString argument cannot be null');"
  },
  {
    "id" : "b5e3eaf4-8e1a-44f0-a143-5b3280b55983",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-327249770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5526d25-f29b-4d36-8a17-d5c5861af4b7",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Is it intentional that this doesn't check things recursively?",
        "createdAt" : "2019-12-04T21:52:15Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "fc3ad189-9bcd-4e81-8d23-e93afc22e3d6",
        "parentId" : "a5526d25-f29b-4d36-8a17-d5c5861af4b7",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "Yes -- the tool assumes that all `arb` files should just remain in the root directory",
        "createdAt" : "2019-12-05T00:51:07Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +454,458 @@  void parseArbFiles() {\n    final List<File> fileSystemEntityList = l10nDirectory\n      .listSync()\n      .whereType<File>()\n      .toList();"
  },
  {
    "id" : "48a27780-f8b9-4a52-a0a8-f0a0cac232b3",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-327179289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ab36da6-10e9-40ed-b108-9e4c918d79d0",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Add a `.whereType<File>` and you can remove the `entity is File` check nesting below",
        "createdAt" : "2019-12-04T21:52:44Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +454,458 @@  void parseArbFiles() {\n    final List<File> fileSystemEntityList = l10nDirectory\n      .listSync()\n      .whereType<File>()\n      .toList();"
  },
  {
    "id" : "fe825a85-4df0-4f3a-b1dd-9097a23f9f7b",
    "prId" : 44856,
    "prUrl" : "https://github.com/flutter/flutter/pull/44856#pullrequestreview-327965326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed220771-1084-4739-b2e1-0e8c9bc116c0",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "nit: document throws FileSystemException, FormatException",
        "createdAt" : "2019-12-06T02:17:31Z",
        "updatedAt" : "2019-12-06T17:24:27Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19154cbe94976c3e6f297e832476db583f441a79",
    "line" : 373,
    "diffHunk" : "@@ -1,1 +512,516 @@  ///\n  /// Throws a [FormatException] when parsing the arb file is unsuccessful.\n  void generateClassMethods() {\n    Map<String, dynamic> bundle;\n    try {"
  },
  {
    "id" : "1fd2d8a1-f3a5-4993-989e-8ef47263bf76",
    "prId" : 47006,
    "prUrl" : "https://github.com/flutter/flutter/pull/47006#pullrequestreview-332970480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b099d41-1364-48a8-926f-ecda666aaf73",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "It would be helpful to include a comment that points to https://pub.dev/documentation/intl/latest/intl/DateFormat-class.html and explains that these are the formats which will be automatically localized",
        "createdAt" : "2019-12-17T00:59:07Z",
        "updatedAt" : "2019-12-17T02:32:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "346337f68116e36a3016a819abe0ea181fd97a3d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +167,171 @@// * <https://pub.dev/documentation/intl/latest/intl/DateFormat-class.html>\n// * <https://api.dartlang.org/stable/2.7.0/dart-core/DateTime-class.html>\nconst Set<String> allowableDateFormats = <String>{\n  'd',\n  'E',"
  },
  {
    "id" : "2a3a8c11-f85b-4369-9425-23ac3daba14c",
    "prId" : 47006,
    "prUrl" : "https://github.com/flutter/flutter/pull/47006#pullrequestreview-333437388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd97d66d-b814-4537-a2fb-2ef264cc0cf8",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-12-17T17:08:07Z",
        "updatedAt" : "2019-12-17T17:09:53Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "346337f68116e36a3016a819abe0ea181fd97a3d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +150,154 @@''';\n\n// The set of date formats that can be automatically localized.\n//\n// The localizations generation tool makes use of the intl library's"
  },
  {
    "id" : "e48125ef-439f-4f5b-ac03-238893cc335c",
    "prId" : 47006,
    "prUrl" : "https://github.com/flutter/flutter/pull/47006#pullrequestreview-333437388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37df6dbe-5bea-4531-9d2a-a489f7383378",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2019-12-17T17:09:06Z",
        "updatedAt" : "2019-12-17T17:09:53Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "346337f68116e36a3016a819abe0ea181fd97a3d",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +231,235 @@    return true;\n  throw L10nException(\n    'The placeholder, $placeholder, has its \"type\" resource attribute set to '\n    'the \"DateTime\" type. To properly resolve for the right DateTime format, '\n    'the \"format\" attribute needs to be set to determine which DateFormat to '"
  },
  {
    "id" : "1f6250ae-5cee-4da4-900f-859903de66da",
    "prId" : 47483,
    "prUrl" : "https://github.com/flutter/flutter/pull/47483#pullrequestreview-335431110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15eb4ee4-1421-4e02-879d-ccf2dafd49fd",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This will fail in a confusing way if the plurals string isn't formatted correctly. Maybe check the resourceValue string first, and exit with an error if it doesn't appear to be formatted correctly, i.e. if it looks like `resourceValue.split(',')[0].substring(1)` would fail.\r\n",
        "createdAt" : "2019-12-20T15:52:42Z",
        "updatedAt" : "2019-12-20T22:07:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "06afe140-bd54-449b-9d2e-819938eb8ce2",
        "parentId" : "15eb4ee4-1421-4e02-879d-ccf2dafd49fd",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I tried creating an exception here and writing a test to error out if:\r\n1) If the first character was not '{'\r\n2) If `resourceValue.split(',').length <= 2`\r\n\r\nHowever, it seems that the string is not parsed as a plural message earlier in the tool (it is instead treated as a simple message). So, it never reaches these checks I added. Can you think of any other situation where the plurals string might be formatted incorrectly here? ",
        "createdAt" : "2019-12-20T17:18:52Z",
        "updatedAt" : "2019-12-20T22:07:02Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "e8494e36-531a-4a4a-99f6-d29203f1ecc3",
        "parentId" : "15eb4ee4-1421-4e02-879d-ccf2dafd49fd",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "You're right - we only get here if the resource matches pluralValueRE, which requires the string to contain `fooVar,plural`.  There are probably other ways for plural strings to go wrong, but I don't think that needs to be addressed in this PR. ",
        "createdAt" : "2019-12-20T18:14:48Z",
        "updatedAt" : "2019-12-20T22:07:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c48a077ab32c820f8e2ad7b5ef54d2f97b87a7f",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +384,388 @@  // Used to determine which placeholder is the plural count placeholder\n  final String resourceValue = arbBundle[resourceId] as String;\n  final String countPlaceholder = resourceValue.split(',')[0].substring(1);\n\n  // To make it easier to parse the plurals message, temporarily replace each"
  },
  {
    "id" : "f77401b4-182b-4a24-8ea3-5e0894051e7c",
    "prId" : 49357,
    "prUrl" : "https://github.com/flutter/flutter/pull/49357#pullrequestreview-348847903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fae1a2bf-2fde-4f37-90e6-0099486b452e",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Or underscore?",
        "createdAt" : "2020-01-27T17:11:08Z",
        "updatedAt" : "2020-01-27T17:35:31Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "5535154a-fb84-4ea0-a142-8ee7cdb7b6fb",
        "parentId" : "fae1a2bf-2fde-4f37-90e6-0099486b452e",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "In this case className must work as a public identifier so there shouldn't be a leading underscore. Added a check for that.",
        "createdAt" : "2020-01-27T17:36:58Z",
        "updatedAt" : "2020-01-27T17:36:59Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c712c691c5bbe21e76918482d05e061ce81c0073",
    "line" : 668,
    "diffHunk" : "@@ -1,1 +500,504 @@      return false;\n    // Dart class name must start with upper case character\n    if (className[0].contains(RegExp(r'[a-z]')))\n      return false;\n    // Dart class name cannot start with a number"
  },
  {
    "id" : "d7ddee9d-7bec-4cf4-9b4b-6ca3c113285a",
    "prId" : 49357,
    "prUrl" : "https://github.com/flutter/flutter/pull/49357#pullrequestreview-348847940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3aa1c90-3bc9-41f9-a5d8-0397688a2c76",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Or underscore?",
        "createdAt" : "2020-01-27T17:11:26Z",
        "updatedAt" : "2020-01-27T17:35:31Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      },
      {
        "id" : "47665ffe-8438-44b2-89f6-500d9b11cf3e",
        "parentId" : "c3aa1c90-3bc9-41f9-a5d8-0397688a2c76",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "In this case (method) name must work as a public identifier so there shouldn't be a leading underscore. Added a check for that.",
        "createdAt" : "2020-01-27T17:37:01Z",
        "updatedAt" : "2020-01-27T17:37:02Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c712c691c5bbe21e76918482d05e061ce81c0073",
    "line" : 703,
    "diffHunk" : "@@ -1,1 +608,612 @@      return false;\n    // Dart method name must start with lower case character\n    if (name[0].contains(RegExp(r'[A-Z]')))\n      return false;\n    // Dart class name cannot start with a number"
  },
  {
    "id" : "7bb60752-ca36-42da-9df2-fbe68ea666f9",
    "prId" : 50132,
    "prUrl" : "https://github.com/flutter/flutter/pull/50132#pullrequestreview-353357524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e3da1e9-1da2-44a7-b06f-4663ef0d6354",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "I think we can remove line 357 `static RegExp _pluralRE...`, since it's not being used anywhere else ",
        "createdAt" : "2020-02-04T20:52:01Z",
        "updatedAt" : "2020-02-05T02:10:46Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "f04a51c9-3eff-4c91-9065-92883bd3533f",
        "parentId" : "9e3da1e9-1da2-44a7-b06f-4663ef0d6354",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Oops, thanks for catching that!",
        "createdAt" : "2020-02-04T22:46:50Z",
        "updatedAt" : "2020-02-05T02:10:46Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b965d3a3d1dab90a3ac3882949d8515d61ac1b5",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +681,685 @@\n      final Message message = Message(bundle, key);\n      if (message.isPlural)\n        classMethods.add(generatePluralMethod(message));\n      else"
  },
  {
    "id" : "86866371-8b2f-45ff-8ba1-022f267ee064",
    "prId" : 51952,
    "prUrl" : "https://github.com/flutter/flutter/pull/51952#pullrequestreview-369034803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74058c40-fc42-42a3-a324-0eda5df08678",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Shouldn't we be using generateString - https://github.com/flutter/flutter/blob/master/dev/tools/localization/localizations_utils.dart#L387",
        "createdAt" : "2020-03-04T18:24:27Z",
        "updatedAt" : "2020-03-04T23:26:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "3d52c629-d1b3-406e-8e54-449c2832a2a2",
        "parentId" : "74058c40-fc42-42a3-a324-0eda5df08678",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "That seems to be breaking integration tests. Investigating",
        "createdAt" : "2020-03-04T18:45:38Z",
        "updatedAt" : "2020-03-04T23:26:40Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "3ca261c0-89ea-4437-b79a-f440ad05626e",
        "parentId" : "74058c40-fc42-42a3-a324-0eda5df08678",
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "It seems to be generating raw strings for scenarios like:\r\n```\r\n  @override\r\n  String helloOn(Object world, DateTime date, DateTime time) {\r\n    final intl.DateFormat dateDateFormat = intl.DateFormat.yMd(_localeName);\r\n    final String dateString = dateDateFormat.format(date);\r\n    final intl.DateFormat timeDateFormat = intl.DateFormat.Hm(_localeName);\r\n    final String timeString = timeDateFormat.format(time);\r\n\r\n    return r\"'Hello ${world} on ${dateString} at ${timeString}'\";\r\n  }\r\n```\r\n\r\nI could repurpose the generateString function to not do so",
        "createdAt" : "2020-03-04T18:49:14Z",
        "updatedAt" : "2020-03-04T23:26:40Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "6a07b188-c608-48b9-9744-6d2a0a0ca863",
        "parentId" : "74058c40-fc42-42a3-a324-0eda5df08678",
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Lets leave the PR as it is for now.",
        "createdAt" : "2020-03-04T18:53:03Z",
        "updatedAt" : "2020-03-04T23:26:40Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "8073cfd7375520ab08dcd55fb170b0d4cbd02185",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +166,170 @@\n    // Escape single and double quotes.\n    messageValue = messageValue.replaceAll(\"'\", '\\\\\\'');\n    messageValue = messageValue.replaceAll('\"', '\\\\\\\"');\n"
  },
  {
    "id" : "7041b640-e0df-4bf3-8312-b1e10dce3451",
    "prId" : 52125,
    "prUrl" : "https://github.com/flutter/flutter/pull/52125#pullrequestreview-373018548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "364b5bea-85d2-4bbf-bd2c-10d4e10089c7",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "NICE",
        "createdAt" : "2020-03-11T18:26:21Z",
        "updatedAt" : "2020-03-11T18:26:22Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f553893389d815216a023bd6d2d3ceb462f3db",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +468,472 @@        header = _fs.file(path.join(l10nDirectory.path, headerFile)).readAsStringSync();\n      } on FileSystemException catch (error) {\n        throw L10nException (\n          'Failed to read header file: \"$headerFile\". \\n'\n          'FileSystemException: ${error.message}'"
  },
  {
    "id" : "b17f3c55-3647-4ed3-bf96-2ae4d0fbdcf1",
    "prId" : 53824,
    "prUrl" : "https://github.com/flutter/flutter/pull/53824#pullrequestreview-389922430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88e1d31f-3740-4083-b885-1ca97fb1b45b",
        "parentId" : null,
        "authorId" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "body" : "We should throw an `L10nException` here if `useDeferredLoading` ends up being null. We would likely want to have a test for this as well",
        "createdAt" : "2020-04-06T18:58:32Z",
        "updatedAt" : "2020-04-09T09:40:36Z",
        "lastEditedBy" : "8214f119-d2d3-484d-aea2-02799ab41da5",
        "tags" : [
        ]
      },
      {
        "id" : "984d36b1-c851-44e2-97ee-182315143fed",
        "parentId" : "88e1d31f-3740-4083-b885-1ca97fb1b45b",
        "authorId" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "body" : "Done!",
        "createdAt" : "2020-04-08T12:24:10Z",
        "updatedAt" : "2020-04-09T09:40:36Z",
        "lastEditedBy" : "d48930d9-61da-495f-bdf6-e0405429cfbb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d8e41d98bb90965f60cd99dc86df0f9db8ba4a9",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +493,497 @@    bool useDeferredLoading = false,\n  }) {\n    setL10nDirectory(l10nDirectoryPath);\n    setTemplateArbFile(templateArbFileName);\n    setOutputFile(outputFileString);"
  }
]