[
  {
    "id" : "7ee6a14d-3470-4ee6-8d31-039733a26b19",
    "prId" : 12082,
    "prUrl" : "https://github.com/apache/airflow/pull/12082#pullrequestreview-524142667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29109233-0987-4c78-948f-55eb749feb2c",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Why do we even need these as args? The driver script is using the same python interpreter to find the params that we then exec this with.\r\n\r\n```suggestion\r\n    import airflow.providers\r\n\r\n    print()\r\n    print(f\"Walking all packages in {airflow.providers.__path__}\")\r\n    print()\r\n    classes = import_all_classes(print_imports=True, print_skips=True, paths=airflow.providers.__path__, prefix=\"airflow.providers.\")\r\n```",
        "createdAt" : "2020-11-05T10:49:11Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "001aeea9-fe1e-465a-a7e1-83f753520e82",
        "parentId" : "29109233-0987-4c78-948f-55eb749feb2c",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "As discussed on slack yesterday - this does not work. walk_packages does not work with PEP 420: https://stackoverflow.com/questions/41203765/init-py-required-for-pkgutil-walk-packages-in-python3 and the issue where it was rejected: https://bugs.python.org/issue29258\r\n\r\nProbably you might solve it differently but I am planning to use import_all_classses as a generic tool for other stuff in the future, that's why I also moved it out of the \"provider_package\" to \"|dev\" and made it independent.",
        "createdAt" : "2020-11-05T10:53:41Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a587d871f61f999029e16c652762ae8d536438",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@    print(f\"Walking all packages in {args.path} with prefix {args.prefix}\")\n    print()\n    classes = import_all_classes(print_imports=True, print_skips=True, paths=args.path, prefix=args.prefix)\n    if len(classes) == 0:\n        raise Exception(\"Something is seriously wrong - no classes imported\")"
  }
]