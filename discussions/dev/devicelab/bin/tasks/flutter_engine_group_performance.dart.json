[
  {
    "id" : "07aa2dab-366a-4abb-bf36-5e4be6f1fe44",
    "prId" : 75374,
    "prUrl" : "https://github.com/flutter/flutter/pull/75374#pullrequestreview-584788053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db2a61fb-a9a0-4850-9630-bef61fb0fc60",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Can you move `_doTest` work into `main` directly to match the other tests?",
        "createdAt" : "2021-02-05T22:57:02Z",
        "updatedAt" : "2021-02-08T17:47:05Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "7604f05b-40f4-4b3b-8dd2-e5f9ba8e71ea",
        "parentId" : "db2a61fb-a9a0-4850-9630-bef61fb0fc60",
        "authorId" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "body" : "I don't think there is a rule in the dart style guide about when to use local functions versus anonymous functions.",
        "createdAt" : "2021-02-05T23:59:57Z",
        "updatedAt" : "2021-02-08T17:47:05Z",
        "lastEditedBy" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "tags" : [
        ]
      },
      {
        "id" : "c7e3bd51-cef5-4b81-a8d0-3a312669410f",
        "parentId" : "db2a61fb-a9a0-4850-9630-bef61fb0fc60",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "It's not a rule, just a request for consistency.  I'm fine with it either way.",
        "createdAt" : "2021-02-06T00:07:49Z",
        "updatedAt" : "2021-02-08T17:47:05Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b0d3071a066075e238e1746278aad91446f9ba1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@}\n\nFuture<TaskResult> _doTest() async {\n  try {\n    final String flutterDirectory = utils.flutterDirectory.path;"
  },
  {
    "id" : "ce56531f-4193-41ac-b845-8f371a9680f5",
    "prId" : 82833,
    "prUrl" : "https://github.com/flutter/flutter/pull/82833#pullrequestreview-662360088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "170ca8cd-0215-47f4-b306-0e8f641b64e3",
        "parentId" : null,
        "authorId" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "body" : "This should probably have an await.",
        "createdAt" : "2021-05-18T16:58:11Z",
        "updatedAt" : "2021-05-18T17:01:25Z",
        "lastEditedBy" : "b565e8d4-349d-472b-89fe-c7310f57516e",
        "tags" : [
        ]
      },
      {
        "id" : "b20d0e5f-fd72-4c3d-9001-45e2671319a4",
        "parentId" : "170ca8cd-0215-47f4-b306-0e8f641b64e3",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "you could return the future from task, i think technically this might be fine since the test runner sets up some handlers to detect the test starting",
        "createdAt" : "2021-05-18T17:09:12Z",
        "updatedAt" : "2021-05-18T17:11:11Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "272070b75a5c75bf9d232ea8a556518e1d8157ec",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +108,112 @@\nFuture<void> main() async {\n  unawaited(task(_doTest));\n}"
  }
]