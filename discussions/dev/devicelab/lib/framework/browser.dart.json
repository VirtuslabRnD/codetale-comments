[
  {
    "id" : "53387657-232b-4a67-ab03-6296c0d7ab62",
    "prId" : 50652,
    "prUrl" : "https://github.com/flutter/flutter/pull/50652#pullrequestreview-358416754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b6613a3-8b72-46fd-92c9-9ef24b4c156c",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "note: since this only uses the version available on the system and on the engine we are running a pinned version, the results might be different. \r\n\r\nCan you add a printout saying which version of chrome is being used? (If it is easy to do)\r\n\r\nTherefore if something fails unexpectedly we can also compare the versions by looking at the log.",
        "createdAt" : "2020-02-12T22:33:42Z",
        "updatedAt" : "2020-02-13T21:26:05Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "709ee470-3ac9-46ea-ae8d-b5f6b19f8b73",
        "parentId" : "3b6613a3-8b72-46fd-92c9-9ef24b4c156c",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Good idea. Done.",
        "createdAt" : "2020-02-13T17:36:44Z",
        "updatedAt" : "2020-02-13T21:26:05Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4eb1abd7212e2293c92fc5df3a33a491961d6547",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@  // non-standard location and is provided via the following environment\n  // variable.\n  final String envExecutable = io.Platform.environment['CHROME_EXECUTABLE'];\n  if (envExecutable != null) {\n    return envExecutable;"
  },
  {
    "id" : "1020a05c-5298-40a0-9d4b-53be2bfbbaee",
    "prId" : 53879,
    "prUrl" : "https://github.com/flutter/flutter/pull/53879#pullrequestreview-387361820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd028fc3-c299-4b98-af9f-ffcdf692dadc",
        "parentId" : null,
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "add error handling : if (event.params['value'] is! List<dynamic>) throw FormatException('Unrecognized tracing data....)",
        "createdAt" : "2020-04-02T23:49:42Z",
        "updatedAt" : "2020-04-03T20:59:58Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      },
      {
        "id" : "9ed673b0-2cf9-41ba-9762-0804a26c0c29",
        "parentId" : "cd028fc3-c299-4b98-af9f-ffcdf692dadc",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2020-04-03T18:41:20Z",
        "updatedAt" : "2020-04-03T21:00:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d35b389bec98a7c33499a22ce6f824c6ec6a3",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +157,161 @@              'Expected a List but got: ${value.runtimeType}');\n        }\n        _tracingData.addAll((event.params['value'] as List<dynamic>).cast<Map<String, dynamic>>());\n      }\n    });"
  },
  {
    "id" : "7b4b8756-339d-4028-ab06-16af812d29c8",
    "prId" : 53879,
    "prUrl" : "https://github.com/flutter/flutter/pull/53879#pullrequestreview-387361820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee6609fb-319a-4824-bfbf-3298a12f98fe",
        "parentId" : null,
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "Suggestion: Paste a sample line. So reader can see format, makes it easy to diag when format changes and things break.",
        "createdAt" : "2020-04-02T23:53:18Z",
        "updatedAt" : "2020-04-03T20:59:58Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      },
      {
        "id" : "01803f07-1057-466b-8363-74beeb022a18",
        "parentId" : "ee6609fb-319a-4824-bfbf-3298a12f98fe",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done. (added to `BlinkTraceEvent.fromJson` because that's the function that parses JSON)",
        "createdAt" : "2020-04-03T19:07:16Z",
        "updatedAt" : "2020-04-03T21:00:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d35b389bec98a7c33499a22ce6f824c6ec6a3",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +276,280 @@  static BlinkTraceSummary fromJson(List<Map<String, dynamic>> traceJson) {\n    try {\n      // Convert raw JSON data to BlinkTraceEvent objects sorted by timestamp.\n      List<BlinkTraceEvent> events = traceJson\n        .map<BlinkTraceEvent>(BlinkTraceEvent.fromJson)"
  },
  {
    "id" : "1c704a47-2bac-4598-9984-ff748e7f9c02",
    "prId" : 53879,
    "prUrl" : "https://github.com/flutter/flutter/pull/53879#pullrequestreview-387361820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58328e79-a25e-4f2b-8bd7-abe810f14053",
        "parentId" : null,
        "authorId" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "body" : "comment what the fold does",
        "createdAt" : "2020-04-02T23:58:31Z",
        "updatedAt" : "2020-04-03T20:59:58Z",
        "lastEditedBy" : "6f375fe5-c051-4de5-a3bf-80579a781e7f",
        "tags" : [
        ]
      },
      {
        "id" : "d13e8210-31ad-4cd9-9094-cebceffb888b",
        "parentId" : "58328e79-a25e-4f2b-8bd7-abe810f14053",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Done.",
        "createdAt" : "2020-04-03T19:33:19Z",
        "updatedAt" : "2020-04-03T21:00:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d35b389bec98a7c33499a22ce6f824c6ec6a3",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +379,383 @@  final double sum = events\n    .skip(math.max(events.length - _kMeasuredSampleCount, 0))\n    .fold(0.0, (double previousValue, BlinkTraceEvent event) {\n      if (event.tdur == null) {\n        throw FormatException('Trace event lacks \"tdur\" field: $event');"
  },
  {
    "id" : "c68b676c-3633-4266-98f4-e6c68efc362a",
    "prId" : 53879,
    "prUrl" : "https://github.com/flutter/flutter/pull/53879#pullrequestreview-387601887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce429a98-77bb-43e8-8660-49c8b9b8811a",
        "parentId" : null,
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "I see this pattern a lot in Dart code (using `$ClassName` instead of plain `ClassName`). Is there a reason for it? The only reason I can think of is that the string doesn't get out of date if the class is renamed (the analyzer would complain that `$OldClassName` isn't defined). Is that it?",
        "createdAt" : "2020-04-03T00:03:41Z",
        "updatedAt" : "2020-04-03T20:59:58Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      },
      {
        "id" : "219fab29-1e4f-4c13-b1d9-f052a054b52f",
        "parentId" : "ce429a98-77bb-43e8-8660-49c8b9b8811a",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "That's the only reason I'm using it. I've had symbol names in strings going out of sync in the past, then I learned this trick. I wish it worked for functions, fields, and variables too.",
        "createdAt" : "2020-04-03T19:27:29Z",
        "updatedAt" : "2020-04-03T21:00:01Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "4b67ca1f-2487-4b0a-abcf-4c988ed30cd8",
        "parentId" : "ce429a98-77bb-43e8-8660-49c8b9b8811a",
        "authorId" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "body" : "... and in comments.",
        "createdAt" : "2020-04-03T21:52:16Z",
        "updatedAt" : "2020-04-03T21:52:16Z",
        "lastEditedBy" : "8e61038c-e0e3-49db-a5f4-64b67a3393e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d35b389bec98a7c33499a22ce6f824c6ec6a3",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +353,357 @@\n  @override\n  String toString() => '$BlinkTraceSummary('\n    'averageBeginFrameTime: ${averageBeginFrameTime.inMicroseconds / 1000}ms, '\n    'averageUpdateLifecyclePhasesTime: ${averageUpdateLifecyclePhasesTime.inMicroseconds / 1000}ms)';"
  },
  {
    "id" : "4338739f-fdba-41e1-a867-34e25fa8cefa",
    "prId" : 71705,
    "prUrl" : "https://github.com/flutter/flutter/pull/71705#pullrequestreview-545261274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03f39067-1b77-4307-b297-d603bc69f33c",
        "parentId" : null,
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "very nit: is this spaces intentional?",
        "createdAt" : "2020-12-04T18:19:21Z",
        "updatedAt" : "2020-12-04T18:19:21Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      },
      {
        "id" : "0f2a6c93-6c47-4869-bdb9-05323c3cf5dc",
        "parentId" : "03f39067-1b77-4307-b297-d603bc69f33c",
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Yes, the 4-space indent is treated by dartdoc as a code snippet.",
        "createdAt" : "2020-12-04T19:59:56Z",
        "updatedAt" : "2020-12-04T19:59:56Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      },
      {
        "id" : "2e6d20b8-f37a-421e-a665-4eb4a5e4a139",
        "parentId" : "03f39067-1b77-4307-b297-d603bc69f33c",
        "authorId" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "body" : "thanks! I haven't used this before.",
        "createdAt" : "2020-12-04T20:05:33Z",
        "updatedAt" : "2020-12-04T20:05:33Z",
        "lastEditedBy" : "33d4efee-c6a1-4637-abbd-c961729e041d",
        "tags" : [
        ]
      }
    ],
    "commit" : "73377751fe37909ac592a5df31554c1e94ae0d4b",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +569,573 @@/// When this happens Chrome spits out something like the following then exits with code 127:\n///\n///     Inconsistency detected by ld.so: ../elf/dl-tls.c: 493: _dl_allocate_tls_init: Assertion `listp->slotinfo[cnt].gen <= GL(dl_tls_generation)' failed!\nconst String _kGlibcError = 'Inconsistency detected by ld.so';\n"
  }
]