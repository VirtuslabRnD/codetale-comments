[
  {
    "id" : "beef290d-7f7c-4b4f-a138-ddeaec282534",
    "prId" : 5945,
    "prUrl" : "https://github.com/flutter/flutter/pull/5945#pullrequestreview-674914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7fb58a0-7fe4-4f0a-a090-5830e4147af5",
        "parentId" : null,
        "authorId" : "29909713-5424-4233-a02b-b02672141af4",
        "body" : "Why do these count as unawaited?  What's the bug this lint would be catching?\n",
        "createdAt" : "2016-09-20T01:46:03Z",
        "updatedAt" : "2016-09-20T01:46:03Z",
        "lastEditedBy" : "29909713-5424-4233-a02b-b02672141af4",
        "tags" : [
        ]
      },
      {
        "id" : "23932598-4ff6-413d-af2e-69ec02b9e39b",
        "parentId" : "f7fb58a0-7fe4-4f0a-a090-5830e4147af5",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "`then` returns a future.\n",
        "createdAt" : "2016-09-20T03:19:36Z",
        "updatedAt" : "2016-09-20T03:19:36Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f1239aba48dc285d14d05a2e3cf74154882931",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +35,39 @@  bool runnerFinished = false;\n\n  // ignore: unawaited_futures\n  runner.exitCode.then((_) {\n    runnerFinished = true;"
  },
  {
    "id" : "eb473046-8744-4f55-8aac-aab812c5f4df",
    "prId" : 20968,
    "prUrl" : "https://github.com/flutter/flutter/pull/20968#pullrequestreview-150277073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cbfff0c-8131-47a9-bb9c-9a84fe42e97a",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "If we're allowing this to fail, do we want to log if it does (so if the issue doesn't seem to be fixed, we can check that it wasn't failing here)?",
        "createdAt" : "2018-08-24T09:04:42Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "73ff283d-bf7b-427c-b991-7898e699f611",
        "parentId" : "6cbfff0c-8131-47a9-bb9c-9a84fe42e97a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "exec() always dumps the exit code, iirc",
        "createdAt" : "2018-08-24T17:44:09Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "1a74db80-411e-4a0c-b27a-522ba8e9f840",
        "parentId" : "6cbfff0c-8131-47a9-bb9c-9a84fe42e97a",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "If I'm reading it correctly, it looks silent when `canFail = true`:\r\n\r\n```dart\r\nfinal int exitCode = await process.exitCode;\r\n\r\nif (exitCode != 0 && !canFail)\r\n  fail('Executable failed with exit code $exitCode.');\r\n\r\nreturn exitCode;\r\n```",
        "createdAt" : "2018-08-25T18:40:28Z",
        "updatedAt" : "2018-08-25T18:40:28Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "b471f363-fc8e-4811-abbe-73519acc124c",
        "parentId" : "6cbfff0c-8131-47a9-bb9c-9a84fe42e97a",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "It's printed by startProcess; see line 238.",
        "createdAt" : "2018-08-28T18:27:30Z",
        "updatedAt" : "2018-08-28T18:27:30Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "184ad053-9036-42b6-a42f-f4ef0e913c5a",
        "parentId" : "6cbfff0c-8131-47a9-bb9c-9a84fe42e97a",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "Whoops, I thought that was a framework function. All good, thanks! :-)",
        "createdAt" : "2018-08-28T19:17:46Z",
        "updatedAt" : "2018-08-28T19:17:46Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f5eeafa710807c4d88ccc5205f1ec67a2b499ca",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +157,161 @@      environment: <String, String>{ 'JAVA_HOME': javaHome },\n      workingDirectory: tempDir.path,\n      canFail: true,\n    );\n    rmTree(tempDir);"
  },
  {
    "id" : "52642aa4-2307-4831-96fa-c1df2db78a69",
    "prId" : 20968,
    "prUrl" : "https://github.com/flutter/flutter/pull/20968#pullrequestreview-149396958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35bcb9ca-0f4a-4557-8cde-b5b3c31d4106",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "Might be worth a comment explaining why we have to do this (I guess we can't run `gradlew` from an arbitrary folder that doesn't have a properties file?)",
        "createdAt" : "2018-08-24T09:05:55Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "a7a67d83-deb2-43c6-84d6-493b1ee9e40f",
        "parentId" : "35bcb9ca-0f4a-4557-8cde-b5b3c31d4106",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "will do",
        "createdAt" : "2018-08-24T17:44:35Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f5eeafa710807c4d88ccc5205f1ec67a2b499ca",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +144,148 @@    final Directory tempDir = Directory.systemTemp.createTempSync('flutter_devicelab_shutdown_gradle.');\n    recursiveCopy(new Directory(path.join(flutterDirectory.path, 'bin', 'cache', 'artifacts', 'gradle_wrapper')), tempDir);\n    copy(new File(path.join(path.join(flutterDirectory.path, 'packages', 'flutter_tools'), 'templates', 'create', 'android.tmpl', 'gradle', 'wrapper', 'gradle-wrapper.properties')), new Directory(path.join(tempDir.path, 'gradle', 'wrapper')));\n    if (!Platform.isWindows) {\n      await exec("
  },
  {
    "id" : "c3ce9ce6-1b62-4dfb-a939-99ebe834e31e",
    "prId" : 20968,
    "prUrl" : "https://github.com/flutter/flutter/pull/20968#pullrequestreview-149518108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a091d9a1-7a04-4d7c-8d26-cf0afef1283b",
        "parentId" : null,
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "We've had issues in the past with Windows having mysterious file locks when we try to delete newly-created files in cleanup scripts, not sure if we may need to tolerate errors for this? (If you don't have easy access to Windows and want to check before landing, I can see if I can test this a little on my PC later)",
        "createdAt" : "2018-08-24T09:07:36Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      },
      {
        "id" : "245d6e14-500d-4c31-8244-632d9b2e8bbd",
        "parentId" : "a091d9a1-7a04-4d7c-8d26-cf0afef1283b",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "`rmTree` uses `rm` which tolerates errors.",
        "createdAt" : "2018-08-24T17:45:39Z",
        "updatedAt" : "2018-08-24T17:48:34Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "8d2bd265-9e67-4fab-aefc-a307f54980fb",
        "parentId" : "a091d9a1-7a04-4d7c-8d26-cf0afef1283b",
        "authorId" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "body" : "Doh! I was looking at old code, it looked like this:\r\n\r\n```dart\r\n/// Remove recursively.\r\nvoid rmTree(FileSystemEntity entity) {\r\n  if (entity.existsSync())\r\n    entity.deleteSync(recursive: true);\r\n}\r\n```\r\n\r\nBut I see it's changed recently, sorry! :)",
        "createdAt" : "2018-08-25T18:45:56Z",
        "updatedAt" : "2018-08-25T19:31:35Z",
        "lastEditedBy" : "d8d45103-cfb7-4f47-88cd-8ac318d5175d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f5eeafa710807c4d88ccc5205f1ec67a2b499ca",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +159,163 @@      canFail: true,\n    );\n    rmTree(tempDir);\n    print('\\n');\n  } else {"
  },
  {
    "id" : "9db5fa05-e7eb-4411-b4d8-1cf75f437187",
    "prId" : 66487,
    "prUrl" : "https://github.com/flutter/flutter/pull/66487#pullrequestreview-495044549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21f4e515-f24f-4782-83a3-1c49860a07a1",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This is the only change other than the import.  The rest is whitespace.",
        "createdAt" : "2020-09-23T21:00:26Z",
        "updatedAt" : "2020-09-23T21:00:26Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d31edbed02aa1236185fc17f61e0a94563d4f76e",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +124,128 @@\nFuture<void> cleanupSystem() async {\n  if (deviceOperatingSystem == null || deviceOperatingSystem == DeviceOperatingSystem.android) {\n    print('\\n\\nCleaning up system after task...');\n    final String javaHome = await findJavaHome();"
  }
]