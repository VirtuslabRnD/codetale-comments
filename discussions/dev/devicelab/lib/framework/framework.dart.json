[
  {
    "id" : "32d82b6c-7307-45a8-b8ca-23fe5bd464e7",
    "prId" : 5945,
    "prUrl" : "https://github.com/flutter/flutter/pull/5945#pullrequestreview-663741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a053ee7b-e64c-41ba-9d1f-830c03ba87d4",
        "parentId" : null,
        "authorId" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "body" : "Good catch!\n",
        "createdAt" : "2016-09-20T00:32:40Z",
        "updatedAt" : "2016-09-20T00:32:47Z",
        "lastEditedBy" : "ac2c92fd-803c-4666-96b1-db1044c762c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f1239aba48dc285d14d05a2e3cf74154882931",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +84,88 @@      return new TaskResult.failure('Task timed out after $taskTimeout');\n    } finally {\n      await forceQuitRunningProcesses();\n      _closeKeepAlivePort();\n    }"
  },
  {
    "id" : "add1855b-d394-4144-a6b3-91796000c817",
    "prId" : 29196,
    "prUrl" : "https://github.com/flutter/flutter/pull/29196#pullrequestreview-213180117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8888effe-80df-40e3-97b4-a613c76300f7",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Do these prints end up in the devicelab logs? If so we might want to only print on a failure, and in that case make sure we print both sets together so it is easier to found.",
        "createdAt" : "2019-03-12T02:06:03Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "379ecc8b-784a-4dc4-bbca-e6bd822b2ba2",
        "parentId" : "8888effe-80df-40e3-97b4-a613c76300f7",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "They do.  My thought is that this is useful information if anything goes wrong and we need to debug something that's hard to reproduce locally.",
        "createdAt" : "2019-03-12T03:22:07Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b36493300ba63480207b078d2d8c0a87106d414",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +89,93 @@        processName: 'dart$exe',\n      ).toSet();\n      beforeRunningDartInstances.forEach(print);\n\n      TaskResult result = await _performTask().timeout(taskTimeout);"
  },
  {
    "id" : "3189842b-7855-43c2-bc0e-b99c5cb35490",
    "prId" : 29196,
    "prUrl" : "https://github.com/flutter/flutter/pull/29196#pullrequestreview-213180437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30b26335-e122-4e74-a878-b02a87be9d55",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Above prints seem redundant with this",
        "createdAt" : "2019-03-12T02:06:46Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "2b2e7404-7bd6-4d64-bf56-61d907e4f598",
        "parentId" : "30b26335-e122-4e74-a878-b02a87be9d55",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "This one is printing out exactly why we thought we had a matching process.  Maybe I'm being paranoid, but this should only add ~5-10 lines extra to the logs.",
        "createdAt" : "2019-03-12T03:23:30Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b36493300ba63480207b078d2d8c0a87106d414",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +98,102 @@      ).toList();\n      for (final RunningProcessInfo info in afterRunningDartInstances) {\n        if (!beforeRunningDartInstances.contains(info)) {\n          print('$info was leaked by this test.');\n          // TODO(dnfield): remove this special casing after https://github.com/flutter/flutter/issues/29141 is resolved."
  },
  {
    "id" : "8e148564-75ef-4a8d-ba6d-2126d01f1ec4",
    "prId" : 29196,
    "prUrl" : "https://github.com/flutter/flutter/pull/29196#pullrequestreview-217915093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f3e27a6-6805-4d8b-a8c4-7a136172bed5",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "What does passing `null` here do?",
        "createdAt" : "2019-03-22T18:32:14Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "b37a7776-ebff-4773-80f7-e56a931f429b",
        "parentId" : "8f3e27a6-6805-4d8b-a8c4-7a136172bed5",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "Doesn't set any `data` in the task result - leaves it empty.  Other callers already use `TaskResult.success(null)` if they aren't doing a benchmark and have no other data to report.",
        "createdAt" : "2019-03-22T18:34:08Z",
        "updatedAt" : "2019-03-22T19:19:33Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b36493300ba63480207b078d2d8c0a87106d414",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +265,269 @@\nclass TaskResultCheckProcesses extends TaskResult {\n  TaskResultCheckProcesses() : super.success(null);\n}"
  },
  {
    "id" : "87e0475e-0e13-496f-85bc-b8a23ef2d370",
    "prId" : 45200,
    "prUrl" : "https://github.com/flutter/flutter/pull/45200#pullrequestreview-321292993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce919818-c599-48fe-9b3a-e49779da0fcd",
        "parentId" : null,
        "authorId" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "body" : "```suggestion\r\n  /// Disables the [keepAlivePort] allowing the VM to exit.\r\n```",
        "createdAt" : "2019-11-22T00:23:32Z",
        "updatedAt" : "2019-11-22T15:48:58Z",
        "lastEditedBy" : "7180c765-88b3-4253-83ca-aab09e5add2c",
        "tags" : [
        ]
      },
      {
        "id" : "0fbf2cd2-ef99-4590-8a4c-782b38726d4b",
        "parentId" : "ce919818-c599-48fe-9b3a-e49779da0fcd",
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "That would be great, but it's a private member: `_keepAlivePort`, and there isn't any description to link to.",
        "createdAt" : "2019-11-22T01:37:54Z",
        "updatedAt" : "2019-11-22T15:48:58Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0e8968af1b861ae238870ce38802adf11836448",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +144,148 @@  }\n\n  /// Disables the keepalive port, allowing the VM to exit.\n  void _closeKeepAlivePort() {\n    _startTaskTimeout?.cancel();"
  },
  {
    "id" : "9686328b-3317-4a79-b8d4-bdbd73c302aa",
    "prId" : 69447,
    "prUrl" : "https://github.com/flutter/flutter/pull/69447#pullrequestreview-521092887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af05831d-9847-42e8-8527-e7f289c5d711",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "allow this to fail without throwing",
        "createdAt" : "2020-10-31T00:12:47Z",
        "updatedAt" : "2020-11-03T16:07:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39ecbb8162e790de673ffed36370431b7b05ef0c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +99,103 @@        '--enable-linux-desktop',\n        '--enable-web'\n      ], canFail: true);\n      if (configResult != 0) {\n        print('Failed to enable configuration, tasks may not run.');"
  },
  {
    "id" : "eed6c496-7511-4d9d-b472-1e724e6e8815",
    "prId" : 69447,
    "prUrl" : "https://github.com/flutter/flutter/pull/69447#pullrequestreview-521092941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b08e36e7-8561-478c-bd5e-77aa5ad8cfaa",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Add a timeout in case the device cannot be discovered",
        "createdAt" : "2020-10-31T00:13:08Z",
        "updatedAt" : "2020-11-03T16:07:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39ecbb8162e790de673ffed36370431b7b05ef0c",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +126,130 @@  Future<void> checkForRebootRequired() async {\n    try {\n      final Device device = await devices.workingDevice.timeout(const Duration(seconds: 15));\n      if (noRebootForbidList.contains(device.deviceId)) {\n        return;"
  },
  {
    "id" : "792f51dd-b1e8-4a31-a7f0-3436d2120157",
    "prId" : 69447,
    "prUrl" : "https://github.com/flutter/flutter/pull/69447#pullrequestreview-521092977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e41f52c4-df83-4ef4-9008-aa18245f20dc",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "If the file doesn't exist, treat this as the zeroth run.",
        "createdAt" : "2020-10-31T00:13:22Z",
        "updatedAt" : "2020-11-03T16:07:21Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39ecbb8162e790de673ffed36370431b7b05ef0c",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +134,138 @@      if (rebootFile.existsSync()) {\n        runCount = int.tryParse(rebootFile.readAsStringSync().trim());\n      } else {\n        runCount = 0;\n      }"
  }
]