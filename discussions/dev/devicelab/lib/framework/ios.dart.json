[
  {
    "id" : "a5a49b1b-66a5-4272-886c-36a7e0fecd09",
    "prId" : 49102,
    "prUrl" : "https://github.com/flutter/flutter/pull/49102#pullrequestreview-346176272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd4ab3c1-a98e-4451-af4c-6ceb9d0005a9",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "this is fun",
        "createdAt" : "2020-01-21T19:33:52Z",
        "updatedAt" : "2020-01-21T20:53:20Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "867cbad7-b485-4953-af57-d734315f3790",
        "parentId" : "fd4ab3c1-a98e-4451-af4c-6ceb9d0005a9",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Thanks I had \"fun\" writing it.",
        "createdAt" : "2020-01-21T20:40:30Z",
        "updatedAt" : "2020-01-21T20:53:20Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f19f583c503ab1d87eac4aed18423a1eee664db",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +88,92 @@        .skip(index - 1)\n        .take(3)\n        .firstWhere(\n          (String line) => line.contains(' size 0x0000000000000001'),\n          orElse: () => null,"
  },
  {
    "id" : "4e94b2b1-b7ec-46b2-8926-dcc9a3c3cd25",
    "prId" : 61007,
    "prUrl" : "https://github.com/flutter/flutter/pull/61007#pullrequestreview-444190359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daa505de-fafa-4836-afd4-722f23dfbed1",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This was essentially copied from https://github.com/flutter/flutter/blob/023532d9919463404e0ae2a8aa47d07247ad7e65/dev/devicelab/bin/tasks/ios_app_with_extensions_test.dart#L79  Next PR will convert that test to use this new function.",
        "createdAt" : "2020-07-07T19:34:00Z",
        "updatedAt" : "2020-07-09T22:07:19Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "af942cc85348ff24598b6bbc9101663f24c5f999",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +105,109 @@/// Creates and boots a new simulator, passes the new simulator's identifier to\n/// `testFunction`, then shuts down and deletes simulator.\nFuture<void> testWithNewiOSSimulator(\n  String deviceName,\n  SimulatorFunction testFunction, {"
  },
  {
    "id" : "0cb368ee-f91a-49b5-83f2-31a8160f470b",
    "prId" : 64988,
    "prUrl" : "https://github.com/flutter/flutter/pull/64988#pullrequestreview-479236504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2405ae40-f09d-48e7-b545-807939344c1a",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Don't really care what it says since that seems like a moving target, just that it exists.",
        "createdAt" : "2020-09-01T00:59:15Z",
        "updatedAt" : "2020-09-02T02:06:51Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "af636eb67f7520ab0290d0701a815883d79a4414",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +137,141 @@    ],\n    canFail: true,\n  ) == 0;\n\n/// Creates and boots a new simulator, passes the new simulator's identifier to"
  },
  {
    "id" : "fb4b628e-4eaa-4a88-be4e-d0dcb05aac83",
    "prId" : 64988,
    "prUrl" : "https://github.com/flutter/flutter/pull/64988#pullrequestreview-479468804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bb42b57-eb52-4456-8ea1-96c5723bd827",
        "parentId" : null,
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "oh lol, TIL. So there's an actual built-in tool to turn plists to things like json so it can be more easily consumed by things like dart?",
        "createdAt" : "2020-09-01T06:02:01Z",
        "updatedAt" : "2020-09-02T02:06:51Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      },
      {
        "id" : "807ed45a-9f9b-43dc-a70d-64740c28a0c7",
        "parentId" : "0bb42b57-eb52-4456-8ea1-96c5723bd827",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Yup, it's being used for other plist parsing, see https://github.com/flutter/flutter/blob/80619f100ffefec82528be1b92a76ad22807e459/packages/flutter_tools/lib/src/ios/plist_parser.dart#L53  Except the json part doesn't totally work... https://github.com/flutter/flutter/issues/62160",
        "createdAt" : "2020-09-01T07:26:20Z",
        "updatedAt" : "2020-09-02T02:06:51Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "159dac8c-845b-4cfb-abb3-9175917b516a",
        "parentId" : "0bb42b57-eb52-4456-8ea1-96c5723bd827",
        "authorId" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "body" : "oh lol, sad",
        "createdAt" : "2020-09-01T07:28:23Z",
        "updatedAt" : "2020-09-02T02:06:51Z",
        "lastEditedBy" : "291e083f-dfb6-49b2-b8f5-2f0ce7f9b936",
        "tags" : [
        ]
      }
    ],
    "commit" : "af636eb67f7520ab0290d0701a815883d79a4414",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +124,128 @@Future<bool> localNetworkUsageFound(String appBundlePath) async =>\n  await exec(\n    'plutil',\n    <String>[\n      '-extract',"
  },
  {
    "id" : "6d229c96-1d44-4428-b7d6-3fcceb80ad50",
    "prId" : 71495,
    "prUrl" : "https://github.com/flutter/flutter/pull/71495#pullrequestreview-543149647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83a92299-488f-4da2-a4c0-38839eb4fc9a",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Now release add-to-app fat `Flutter.framework` contains debug x86 so it can be built on the simulator.  `otool -l` doesn't show the bitcode section for a fat framework if any slices don't contain bitcode.  Specify `arm64` only since that's the part that actually gets shipped and requires bitcode.",
        "createdAt" : "2020-12-01T20:09:09Z",
        "updatedAt" : "2020-12-04T19:43:14Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      },
      {
        "id" : "e8618f13-316e-43ee-a930-e6f3bc241a1b",
        "parentId" : "83a92299-488f-4da2-a4c0-38839eb4fc9a",
        "authorId" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "body" : "What about armv7?",
        "createdAt" : "2020-12-02T18:37:21Z",
        "updatedAt" : "2020-12-04T19:43:14Z",
        "lastEditedBy" : "db47316c-0a85-441a-8891-3b84e8bfe474",
        "tags" : [
        ]
      },
      {
        "id" : "b0b4bf77-c049-4b14-933a-c09d986b9da8",
        "parentId" : "83a92299-488f-4da2-a4c0-38839eb4fc9a",
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "This has mostly been useful as a sanity check to make sure a debug version wasn't incorrectly embedded, not that the builder is producing the right artifacts, so that was a shortcut.  I can check both if you prefer!",
        "createdAt" : "2020-12-02T19:03:36Z",
        "updatedAt" : "2020-12-04T19:43:14Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c92c6b021571ebd140d04d6e0e70213d3bd2cd1e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@    '-l',\n    '-arch',\n    'arm64',\n    pathToBinary,\n  ]);"
  },
  {
    "id" : "b5b0bda3-848c-40d6-b95c-ff088f4193ff",
    "prId" : 77329,
    "prUrl" : "https://github.com/flutter/flutter/pull/77329#pullrequestreview-604849386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15b8dab5-7199-4e2c-be0a-c62bedeff8ab",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Bug in the bitcode detection.",
        "createdAt" : "2021-03-05T06:52:37Z",
        "updatedAt" : "2021-03-05T06:52:37Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "dae396b0fa9baeb5cd49472073783882707067c8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +43,47 @@      final String emptyBitcodeMarker = lines\n        .skip(index - 1)\n        .take(4)\n        .firstWhere(\n          (String line) => line.contains(' size 0x0000000000000001'),"
  },
  {
    "id" : "e1df8bff-e925-4de6-8ec1-963f642bd054",
    "prId" : 84596,
    "prUrl" : "https://github.com/flutter/flutter/pull/84596#pullrequestreview-683398501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d20954c8-30a7-4c3a-92ef-587377b4e13f",
        "parentId" : null,
        "authorId" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "body" : "Copied from `native_ui_tests_ios32`.",
        "createdAt" : "2021-06-14T22:14:44Z",
        "updatedAt" : "2021-06-14T22:15:11Z",
        "lastEditedBy" : "7aa08a6b-0a3c-421c-b2e6-22899e9af9e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c13e17f0de9faefea88b418e4c13ca6862a2d338",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +152,156 @@}\n\nFuture<void> runNativeIosXcodeTests(Device device, String projectDirectory) async {\n  final Map<String, String> environment = Platform.environment;\n  // If not running on CI, inject the Flutter team code signing properties."
  },
  {
    "id" : "4ce03cf9-fe9e-4c98-8c12-8a314ef5d2bf",
    "prId" : 85993,
    "prUrl" : "https://github.com/flutter/flutter/pull/85993#pullrequestreview-701291741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d2742a7-661f-46f6-8688-661f233ab816",
        "parentId" : null,
        "authorId" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "body" : "Nice, this is more slick üëç ",
        "createdAt" : "2021-07-07T17:58:10Z",
        "updatedAt" : "2021-07-07T18:00:08Z",
        "lastEditedBy" : "0474385d-5aae-4093-b7fc-7f38665f8960",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6773fb30dec56b8d604d14efb38231989ef6035",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +44,48 @@        .skip(index - 1)\n        .take(4)\n        .any((String line) => line.contains(' size 0x0000000000000001'));\n    }\n  });"
  }
]