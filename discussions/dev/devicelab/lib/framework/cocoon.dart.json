[
  {
    "id" : "04b42392-ac4a-4829-a76f-195c51b88701",
    "prId" : 68541,
    "prUrl" : "https://github.com/flutter/flutter/pull/68541#pullrequestreview-512888182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56caf65a-086d-40a7-a57f-2db1048eb76b",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "The way I would test this is by optionally injecting a tear-off Process.runSync, for example:\r\n\r\n```\r\ntypedef ProcessRunSync = ProcessResult Function(String, List<String>, ...more stuff)\r\n\r\nclass Cocoon {\r\n  Cocoon({..., @visibleForTesting this.processRunSync = Process.runSync }) ;\r\n\r\n   final ProcessRunSync processRunSync;\r\n\r\n}\r\n```\r\n\r\nThen you can provide your own callback for testing that returns an example output you observed.\r\n",
        "createdAt" : "2020-10-20T00:29:58Z",
        "updatedAt" : "2020-10-23T13:32:56Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "473d2006-1d5e-439e-b586-b67b55dd9db4",
        "parentId" : "56caf65a-086d-40a7-a57f-2db1048eb76b",
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "Thanks Jonah! Added tests around the git cli throwing issues.",
        "createdAt" : "2020-10-20T15:53:46Z",
        "updatedAt" : "2020-10-23T13:32:56Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5ddb3f82305ffbb3fc3aa72ed305b3348df059",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +66,70 @@\n  /// Parse the local repo for the current running branch.\n  String _readCommitBranch() {\n    final ProcessResult result = processRunSync('git', <String>['rev-parse', '--abbrev-ref', 'HEAD']);\n    if (result.exitCode != 0) {"
  },
  {
    "id" : "dffdbf11-d819-4ae6-83ea-edb9fc441b81",
    "prId" : 71886,
    "prUrl" : "https://github.com/flutter/flutter/pull/71886#pullrequestreview-547533096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4f3bcd0-d1db-4a90-8791-251a5ae3649d",
        "parentId" : null,
        "authorId" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "body" : "switch to positional arguments?",
        "createdAt" : "2020-12-08T16:51:44Z",
        "updatedAt" : "2020-12-08T16:52:02Z",
        "lastEditedBy" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "tags" : [
        ]
      },
      {
        "id" : "95c25678-b8cc-4255-bca5-820c38b3b6e1",
        "parentId" : "c4f3bcd0-d1db-4a90-8791-251a5ae3649d",
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "Stylistically, I prefer named args when there are more than 1 arg. However, I don't see any guidance from effective dart on this. Thoughts?",
        "createdAt" : "2020-12-08T18:46:36Z",
        "updatedAt" : "2020-12-08T18:46:36Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      },
      {
        "id" : "6d0c9a5f-9c3c-474d-a8cd-3c43be8b27a0",
        "parentId" : "c4f3bcd0-d1db-4a90-8791-251a5ae3649d",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "not sure about official guidance, i'll just add in the flutter tool, we prefer named args when there are 3 or more",
        "createdAt" : "2020-12-08T18:53:53Z",
        "updatedAt" : "2020-12-08T18:53:53Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f8c9cef34ce71eda48a0cfbcbb4d7f4a9a20a34",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +63,67 @@\n  /// Send [TaskResult] to Cocoon.\n  Future<void> sendTaskResult({@required String builderName, @required TaskResult result, @required String gitBranch}) async {\n    assert(builderName != null);\n    assert(gitBranch != null);"
  },
  {
    "id" : "16856fe6-6453-4063-be02-540ff2584510",
    "prId" : 71886,
    "prUrl" : "https://github.com/flutter/flutter/pull/71886#pullrequestreview-547683927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "parentId" : null,
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "1) does this run with asserts enabled?\r\n2) in what order do we land this (and the related PRs)?\r\n3) does this flag need to be passed in from both the recipe and the cocoon agent?",
        "createdAt" : "2020-12-08T18:57:11Z",
        "updatedAt" : "2020-12-08T18:58:44Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "29269dc0-37fe-4a25-a883-3d5d51fdf3ea",
        "parentId" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "1. The tests will, which checks the calls to this . However, runtime issues can still happen regarding flags. I was under the assumption NNBD was being used by the test runner, is it not?\r\n2. This lands first, then the recipes CL\r\n3. No. It's only used on LUCI runs. Cocoon agent handles this logic in the agent",
        "createdAt" : "2020-12-08T19:05:03Z",
        "updatedAt" : "2020-12-08T19:05:04Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      },
      {
        "id" : "55c9eb9f-8a8a-4064-98ca-de57b840a934",
        "parentId" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "2. what will the value of `gitBranch` be if it is not passed as a command-line option? My concern is just that we fail with a helpful error if somehow this method gets invoked with an invalid `gitBranch` value.",
        "createdAt" : "2020-12-08T19:12:29Z",
        "updatedAt" : "2020-12-08T19:12:29Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "68eea939-8719-40c5-ad15-7b35082733f6",
        "parentId" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "authorId" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "body" : "shall we have `gitBranch` with a default value like HEAD?",
        "createdAt" : "2020-12-08T19:15:26Z",
        "updatedAt" : "2020-12-08T19:15:26Z",
        "lastEditedBy" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "tags" : [
        ]
      },
      {
        "id" : "4192847b-7b56-442d-877d-a20af4f7a2a5",
        "parentId" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "authorId" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "body" : "Oh, the `HEAD` causes the error.. nvm..",
        "createdAt" : "2020-12-08T19:18:50Z",
        "updatedAt" : "2020-12-08T19:18:50Z",
        "lastEditedBy" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "tags" : [
        ]
      },
      {
        "id" : "dafbdbed-3d7a-41a5-8c7a-a3c53846c49c",
        "parentId" : "157fbd58-72d9-4e46-9c09-bfd5ff042e17",
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "I moved the error checking into cocoon with https://github.com/flutter/cocoon/pull/1022\r\n\r\nThis will give a more descriptive error than we can do in the test runner.",
        "createdAt" : "2020-12-08T22:24:28Z",
        "updatedAt" : "2020-12-08T22:24:29Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f8c9cef34ce71eda48a0cfbcbb4d7f4a9a20a34",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +65,69 @@  Future<void> sendTaskResult({@required String builderName, @required TaskResult result, @required String gitBranch}) async {\n    assert(builderName != null);\n    assert(gitBranch != null);\n    assert(result != null);\n"
  },
  {
    "id" : "562add8f-3ca6-46bd-8836-ac5792120230",
    "prId" : 72765,
    "prUrl" : "https://github.com/flutter/flutter/pull/72765#pullrequestreview-557326074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a751c8a4-379d-468c-ba6e-b50427eaae7c",
        "parentId" : null,
        "authorId" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "body" : "shall we try removing and creating again? Otherwise, we will lose metrics from this task run.",
        "createdAt" : "2020-12-22T17:30:34Z",
        "updatedAt" : "2020-12-22T19:46:41Z",
        "lastEditedBy" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "tags" : [
        ]
      },
      {
        "id" : "3cfed765-aa85-445a-9b3d-d9a5a6add76f",
        "parentId" : "a751c8a4-379d-468c-ba6e-b50427eaae7c",
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "Done. It'll delete and recreate the file.",
        "createdAt" : "2020-12-22T19:44:46Z",
        "updatedAt" : "2020-12-22T19:46:41Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "80003ce7d75ef4f7eb41f92713e3693a6972f4d4",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +120,124 @@    );\n    final File resultFile = fs.file(resultsPath);\n    if (resultFile.existsSync()) {\n      resultFile.deleteSync();\n    }"
  },
  {
    "id" : "b4d13537-42eb-4124-81b0-f1412cf9bb57",
    "prId" : 86513,
    "prUrl" : "https://github.com/flutter/flutter/pull/86513#pullrequestreview-708609347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32af69c6-9ce8-422f-a5bc-291218c2d6da",
        "parentId" : null,
        "authorId" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "body" : "In what case do we not have resultsPath?",
        "createdAt" : "2021-07-16T17:26:13Z",
        "updatedAt" : "2021-07-16T17:26:13Z",
        "lastEditedBy" : "378cd750-9b28-4c31-a51c-131a54c415f7",
        "tags" : [
        ]
      },
      {
        "id" : "d9d2cebb-9488-4742-a2cc-627b61965bc4",
        "parentId" : "32af69c6-9ce8-422f-a5bc-291218c2d6da",
        "authorId" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "body" : "Based on current infra configs, seems only devicelab tasks needing a physical device set `upload_metrics: true`. We have other devicelab hostonly tests that do not generate metrics.",
        "createdAt" : "2021-07-16T17:30:12Z",
        "updatedAt" : "2021-07-16T17:32:55Z",
        "lastEditedBy" : "0b6d6ccb-5aac-4130-94fa-54cdeb33f4b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d369af0333ce6463e848652a76ea62297f321c11",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +79,83 @@  /// 3. Upload results from (1) to Cocoon\n  ///\n  /// The `resultsPath` is not available for all tests. When it doesn't show up, we\n  /// need to append `CommitBranch`, `CommitSha`, and `BuilderName`.\n  Future<void> sendResultsPath({"
  }
]