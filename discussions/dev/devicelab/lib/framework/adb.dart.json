[
  {
    "id" : "01aa70b2-1c92-4b19-9d06-072f1c2c5a51",
    "prId" : 19630,
    "prUrl" : "https://github.com/flutter/flutter/pull/19630#pullrequestreview-142179280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3e1fc97-c292-4dd4-96d9-3936dca416bc",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Seems pretty similar to the eval method in utils.dart, what do you think about extracting the common functionality? (e.g having a stream version of eval and use it in the Future<String> version)",
        "createdAt" : "2018-07-30T23:22:23Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "ca2829c3-e4ef-4406-b641-97b3184de517",
        "parentId" : "a3e1fc97-c292-4dd4-96d9-3936dca416bc",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "Yeah, I tried, but couldn't really get it to work cleanly. The `Process` API just isn't very conducive to terse code unfortunately.",
        "createdAt" : "2018-07-31T23:12:36Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f171df23fba1ec5707fa108e2ca0ce36a367c9",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +297,301 @@      onListen: () async {\n        await adb(<String>['logcat', '--clear']);\n        final Process process = await startProcess(adbPath, <String>['-s', deviceId, 'logcat']);\n        process.stdout\n          .transform(utf8.decoder)"
  },
  {
    "id" : "7334590e-ac85-4b42-aeb2-5061a5acd539",
    "prId" : 19630,
    "prUrl" : "https://github.com/flutter/flutter/pull/19630#pullrequestreview-142587523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d3ba8f7-1ecc-4c2e-85f8-b10e9d2937b2",
        "parentId" : null,
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "We seem to test these kind of things in `adb_test.dart`, while I agree there isn't much to test I think we should be consistent? (test this as well, or not test things like togglePower)",
        "createdAt" : "2018-07-30T23:26:09Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      },
      {
        "id" : "5c524349-aeb0-41cf-a6df-876027faace7",
        "parentId" : "1d3ba8f7-1ecc-4c2e-85f8-b10e9d2937b2",
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "excellent catch. added test for `tap`.",
        "createdAt" : "2018-08-01T22:26:46Z",
        "updatedAt" : "2018-08-01T23:12:40Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f171df23fba1ec5707fa108e2ca0ce36a367c9",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +249,253 @@  @override\n  Future<Null> tap(int x, int y) async {\n    await shellExec('input', <String>['tap', '$x', '$y']);\n  }\n"
  },
  {
    "id" : "4fd3ecf7-bcab-4811-ab3e-21982fe7db66",
    "prId" : 34669,
    "prUrl" : "https://github.com/flutter/flutter/pull/34669#pullrequestreview-259188829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fad1199-5315-458c-b5c1-8fc04655e4c5",
        "parentId" : null,
        "authorId" : "f62f2ece-520d-4ee4-a914-65d1dd21c879",
        "body" : "DYLD_LIBRARY_PATH occurs 16 times in this PR, using the literal directly would be hard for future refactoring, e.g. changing it to another string. Can it be a constant somewhere and referenced when needed?",
        "createdAt" : "2019-06-28T21:42:23Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "f62f2ece-520d-4ee4-a914-65d1dd21c879",
        "tags" : [
        ]
      },
      {
        "id" : "1eab3111-118b-4933-8015-9ddadd9b949b",
        "parentId" : "7fad1199-5315-458c-b5c1-8fc04655e4c5",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I would prefer to keep the string literal; this string appears throughout multiple files, the most general variable name I could think would be `kMacLinkLibraryPath`, and this seems unlikely to change. And if we were to change it to some other type of path, I think we'd have to change the variable name anyway.",
        "createdAt" : "2019-07-08T17:13:49Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "eb9159ba-ff63-40e1-82d8-5291f24d8974",
        "parentId" : "7fad1199-5315-458c-b5c1-8fc04655e4c5",
        "authorId" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "body" : "`Cache.dyLdLibPath` could return `MapEntry<String,String>('DYLD_LIBRARY_PATH', ...)`.",
        "createdAt" : "2019-07-08T21:11:52Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "5acfd23a-9807-467c-8f5c-9b4c4052927b",
        "tags" : [
        ]
      },
      {
        "id" : "d0ce7c2c-cce9-4b36-9ea9-2fc88abae7c1",
        "parentId" : "7fad1199-5315-458c-b5c1-8fc04655e4c5",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "yeah. if we added other env variables later we would have to merge the maps, but that's probably the best solution. i initially wrote it that way (returning a map), changed it to return a string for reasons, but that code is gone now, so i'll change it back.",
        "createdAt" : "2019-07-08T21:57:29Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "401846d0-dd4e-4da8-869b-a23f8dab7120",
        "parentId" : "7fad1199-5315-458c-b5c1-8fc04655e4c5",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Cool, I didn't know about `MapEntry`!",
        "createdAt" : "2019-07-08T22:29:48Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "362debb948a6f835d5ad0795c6a1aa1c3b579845",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +414,418 @@      'ios-deploy',\n    ].map((String packageName) => path.join(_artifactDirPath, packageName)).join(':');\n    return <String, String>{'DYLD_LIBRARY_PATH': libPath};\n  }\n"
  },
  {
    "id" : "90105814-37b6-4c34-918a-1b69aee9893e",
    "prId" : 34669,
    "prUrl" : "https://github.com/flutter/flutter/pull/34669#pullrequestreview-259118445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "801e1fc0-bcf5-45a7-9c00-932bff81e38d",
        "parentId" : null,
        "authorId" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "body" : "Use `artifacts.getArtifactPath` for this one as well.",
        "createdAt" : "2019-06-28T23:08:52Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "tags" : [
        ]
      },
      {
        "id" : "84560fc3-e9fc-4fc8-a774-d661d9bb27d8",
        "parentId" : "801e1fc0-bcf5-45a7-9c00-932bff81e38d",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "I don't think I can, as this is the devicelab project, and there's no way to access the flutter_tools code (short of publishing it on pub). Is that right @jonahwilliams?",
        "createdAt" : "2019-07-08T18:49:20Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      },
      {
        "id" : "789f59d5-8eb7-4663-8d75-6ef7f91ba7c5",
        "parentId" : "801e1fc0-bcf5-45a7-9c00-932bff81e38d",
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "This package doesn't currently depend on the flutter tool. We could add a dependency here, but that would still require a `src` import. I'm okay with using the hardcoded path since this is for our own internal testing framework",
        "createdAt" : "2019-07-08T19:02:42Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "e58947ac-4990-4e00-900c-615185c295fe",
        "parentId" : "801e1fc0-bcf5-45a7-9c00-932bff81e38d",
        "authorId" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "body" : "Oh I didn't realize this is in the test code. In that case I'm fine with that.",
        "createdAt" : "2019-07-08T19:45:30Z",
        "updatedAt" : "2019-07-12T15:00:49Z",
        "lastEditedBy" : "6cebaf11-1310-4ef0-9c8d-81e6d82c9b9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "362debb948a6f835d5ad0795c6a1aa1c3b579845",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +419,423 @@  @override\n  Future<List<String>> discoverDevices() async {\n    final String ideviceIdPath = path.join(_artifactDirPath, 'libimobiledevice', 'idevice_id');\n    final List<String> iosDeviceIDs = LineSplitter.split(await eval(ideviceIdPath, <String>['-l'], environment: _ideviceIdEnvironment))\n      .map<String>((String line) => line.trim())"
  },
  {
    "id" : "8003cdac-563f-49c3-814d-35640163a2d7",
    "prId" : 59276,
    "prUrl" : "https://github.com/flutter/flutter/pull/59276#pullrequestreview-430656898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5ea8a5-b4d2-40c5-97cb-8ef2daacc85e",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "Here and above, it looks like there is some shadowing over `deviceId`, this point would only be reached if it was null right? Or is the intention to print the original `deviceId` passed as an argument?",
        "createdAt" : "2020-06-14T01:48:03Z",
        "updatedAt" : "2020-06-26T05:08:56Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "4caa21c0-f797-4353-bef0-a9280c287b62",
        "parentId" : "1f5ea8a5-b4d2-40c5-97cb-8ef2daacc85e",
        "authorId" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "body" : "Thanks for the catch! It is a bad design to log the unmatched null deviceId. Fixed. ",
        "createdAt" : "2020-06-15T13:44:21Z",
        "updatedAt" : "2020-06-26T05:08:56Z",
        "lastEditedBy" : "f76bcc8a-9965-41ac-ba63-53a03a848567",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2e4544b174da10c96e28b2cf760e95d216716e3",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +628,632 @@    }\n    throw DeviceException(\n      'Device with ID $deviceId is not found for operating system: '\n      '$deviceOperatingSystem'\n      );"
  },
  {
    "id" : "f3ac07c7-a3bc-4b96-a2d6-65010b5687e3",
    "prId" : 59907,
    "prUrl" : "https://github.com/flutter/flutter/pull/59907#pullrequestreview-436187006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cef537a-ae00-4dc6-a19a-620f1afdce56",
        "parentId" : null,
        "authorId" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "body" : "I would also pass --no-version-check just to be safe\r\nhttps://github.com/flutter/flutter/blob/75fd73d81888966746821e65d37e1fc90dc56bfb/packages/flutter_tools/lib/src/runner/flutter_command_runner.dart#L82",
        "createdAt" : "2020-06-23T01:31:22Z",
        "updatedAt" : "2020-06-23T01:31:23Z",
        "lastEditedBy" : "e73873df-c6ef-4dd5-ad17-dc7a574dcf0b",
        "tags" : [
        ]
      },
      {
        "id" : "634447c9-2a00-430a-b6a8-4330de6fd6eb",
        "parentId" : "7cef537a-ae00-4dc6-a19a-620f1afdce56",
        "authorId" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "body" : "Sorry, landed this while the tree was green. Fortunately, in the command runner we bypass the version check if `--machine` is provided https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/runner/flutter_command_runner.dart#L82",
        "createdAt" : "2020-06-23T21:56:14Z",
        "updatedAt" : "2020-06-23T21:56:15Z",
        "lastEditedBy" : "7ae842f7-1029-4528-8bf6-8472584744ed",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca373bdd830d11a315a87b5993906ffb1b0cbfa8",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +556,560 @@    final List<dynamic> results = json.decode(await eval(\n      path.join(flutterDirectory.path, 'bin', 'flutter'),\n      <String>['devices', '--machine', '--suppress-analytics'],\n    )) as List<dynamic>;\n"
  }
]