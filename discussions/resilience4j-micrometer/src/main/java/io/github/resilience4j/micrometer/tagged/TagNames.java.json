[
  {
    "id" : "ef7dece1-85f7-450e-be0b-09ec3cdce94e",
    "prId" : 355,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/355#pullrequestreview-216028760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e5913a0-4ec4-4ebc-8161-9c9bdea6e950",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Just out of interest. Why did you call it `kind`? ",
        "createdAt" : "2019-03-11T12:47:21Z",
        "updatedAt" : "2019-03-24T16:45:34Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "4d46b872-b396-4154-9a01-b7abe83e0e48",
        "parentId" : "6e5913a0-4ec4-4ebc-8161-9c9bdea6e950",
        "authorId" : "dc9c5b9d-ab3f-4a76-becb-8427c3b8bf64",
        "body" : "The hardest part :fire: \r\n\r\nFor example, for `resilience4j_circuitbreaker_calls` i read it like:\r\n> The kind of circuit breaker calls measured by this meter\r\n\r\nThe alternatives that were also considered:\r\n1. `characteristic`, if we name the metric `resilience4j_circuitbreaker_ring_buffer` then it would make sense, since it would be characteristic of the ring buffer, and I like this name, except the fact that it's too long/errorprone and the ring_buffer part relies on circuit breaker implementation details\r\n2. `metric`/`measure`/`meter` wasn't sure about these ones because the actual meter name + tags is a  **metric**, and having \"metric\" word inside it looks weird\r\n3. `type`/`category` basically the same as kind\r\n\r\nWould you suggest naming it differently ?\r\n",
        "createdAt" : "2019-03-11T19:14:39Z",
        "updatedAt" : "2019-03-24T16:45:34Z",
        "lastEditedBy" : "dc9c5b9d-ab3f-4a76-becb-8427c3b8bf64",
        "tags" : [
        ]
      },
      {
        "id" : "3a557b6b-95b0-4b95-8f2b-24afdd3e1739",
        "parentId" : "6e5913a0-4ec4-4ebc-8161-9c9bdea6e950",
        "authorId" : "ff2f424c-720f-4f1e-9515-21aff805d187",
        "body" : "It would probably make sense to mirror the naming of the [Prometheus integration](http://resilience4j.github.io/resilience4j/#_prometheus_metrics_integration):\r\n<img width=\"877\" alt=\"Screen Shot 2019-03-15 at 7 34 17 PM\" src=\"https://user-images.githubusercontent.com/131809/54467098-5aa5fd80-4759-11e9-9132-12dd6bba1e7e.png\">\r\n",
        "createdAt" : "2019-03-15T23:34:40Z",
        "updatedAt" : "2019-03-24T16:45:34Z",
        "lastEditedBy" : "ff2f424c-720f-4f1e-9515-21aff805d187",
        "tags" : [
        ]
      },
      {
        "id" : "b9aaa231-a60e-4dea-a8a4-2d2cf008b041",
        "parentId" : "6e5913a0-4ec4-4ebc-8161-9c9bdea6e950",
        "authorId" : "dc9c5b9d-ab3f-4a76-becb-8427c3b8bf64",
        "body" : "Can be an option, yes. I did it this way to make everything consistent, I mean that would be weird to have this one for bulkheads\r\n```\r\nresilience4j_bulkhead_concurrent_calls{name=\"Backend1\", call_result=\"max_allowed\"}\r\n```\r\nBut maybe it should not be that consistent. ",
        "createdAt" : "2019-03-18T19:49:01Z",
        "updatedAt" : "2019-03-24T16:45:34Z",
        "lastEditedBy" : "dc9c5b9d-ab3f-4a76-becb-8427c3b8bf64",
        "tags" : [
        ]
      },
      {
        "id" : "530c3709-0457-4b9f-9d0d-ab5b636ddf94",
        "parentId" : "6e5913a0-4ec4-4ebc-8161-9c9bdea6e950",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Let's keep the discussion in the issue https://github.com/resilience4j/resilience4j/issues/354\r\nI already made some suggestion to rename it.\r\nI don't want to keep the naming of the Prometheus Integration. We should improve it.",
        "createdAt" : "2019-03-19T09:06:31Z",
        "updatedAt" : "2019-03-24T16:45:34Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca5a9136db3cebb83ffdc2d2bcf264c4f20fc458",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@public final class TagNames {\n    public static final String NAME = \"name\";\n    public static final String KIND = \"kind\";\n}"
  }
]