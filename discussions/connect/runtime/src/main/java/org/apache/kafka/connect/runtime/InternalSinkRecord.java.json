[
  {
    "id" : "d5c26740-349a-46a4-b7a9-d56b6b2249a1",
    "prId" : 8720,
    "prUrl" : "https://github.com/apache/kafka/pull/8720#pullrequestreview-419501284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f6266d-8def-4e23-af8f-1bbbb4a9cad3",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "We need to override the `newRecord(...)` that has all the parameters:\r\n```suggestion\r\n    public InternalSinkRecord(ConsumerRecord<byte[], byte[]> originalRecord, SinkRecord record) {\r\n        this(originalRecord, record.topic(), record.kafkaPartition(), record.keySchema(), record.key(),\r\n                record.valueSchema(), record.value(), record.kafkaOffset(), record.timestamp(),\r\n                record.timestampType(), record.headers());\r\n    }\r\n\r\n    public InternalSinkRecord(ConsumerRecord<byte[], byte[]> originalRecord,\r\n        String topic, int partition, Schema keySchema, Object key, Schema valueSchema, Object value, long kafkaOffset,\r\n        Long timestamp, TimestampType timestampType, Iterable<Header> headers\r\n    ) {\r\n        super(topic, partition, keySchema, key, valueSchema, value, kafkaOffset, timestamp, timestampType, headers);\r\n        this.originalRecord = originalRecord;\r\n    }\r\n\r\n    @Override\r\n    public SinkRecord newRecord(String topic, Integer kafkaPartition, Schema keySchema, Object key, Schema valueSchema, Object value,\r\n            Long timestamp, Iterable<Header> headers) {\r\n        return new InternalSinkRecord(originalRecord, topic, kafkaPartition, keySchema, key,\r\n                valueSchema, value, kafkaOffset(), timestamp, timestampType(), headers());\r\n    }\r\n\r\n```",
        "createdAt" : "2020-05-27T18:50:16Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c4442fffdc3b163458bf42b7af29183062c636f",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@            record.timestampType(), record.headers());\n        this.originalRecord = originalRecord;\n    }\n\n    protected InternalSinkRecord(ConsumerRecord<byte[], byte[]> originalRecord, String topic,"
  },
  {
    "id" : "cda00364-a3b3-4642-ba2f-7e8d5ffd1de0",
    "prId" : 8720,
    "prUrl" : "https://github.com/apache/kafka/pull/8720#pullrequestreview-419748041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48c439a6-92e0-44d3-a1db-8bb5293a3b79",
        "parentId" : null,
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "these overrides don't seem to add much. ",
        "createdAt" : "2020-05-28T00:17:44Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      },
      {
        "id" : "be34a0f8-db37-4d97-af8f-70c18cb69a1e",
        "parentId" : "48c439a6-92e0-44d3-a1db-8bb5293a3b79",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "IIUC, spotbugs complained if these were not here. ",
        "createdAt" : "2020-05-28T02:17:44Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "f658b47e-b08c-41ff-8ca0-019e462a7e1b",
        "parentId" : "48c439a6-92e0-44d3-a1db-8bb5293a3b79",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "never mind then. I'll leave this to AI. ",
        "createdAt" : "2020-05-28T03:11:24Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c4442fffdc3b163458bf42b7af29183062c636f",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@    public String toString() {\n        return super.toString();\n    }\n\n    /**"
  },
  {
    "id" : "bfdc6f3c-11c4-416c-bad7-a50cd6a3d1d0",
    "prId" : 8720,
    "prUrl" : "https://github.com/apache/kafka/pull/8720#pullrequestreview-419693624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3622120d-3989-4e4b-82fd-a1c39c913e85",
        "parentId" : null,
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "A class javadoc would be helpful, in order to understand why this is introduced. ",
        "createdAt" : "2020-05-28T00:53:45Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c4442fffdc3b163458bf42b7af29183062c636f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@ * exposed to connectors.\n */\npublic class InternalSinkRecord extends SinkRecord {\n\n    private final ConsumerRecord<byte[], byte[]> originalRecord;"
  }
]