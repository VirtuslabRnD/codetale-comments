[
  {
    "id" : "b8ed3a78-1f06-44f1-90d0-0eb432d23196",
    "prId" : 8069,
    "prUrl" : "https://github.com/apache/kafka/pull/8069#pullrequestreview-406971936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b40a7ebb-6716-4ca4-9b26-bc4d6444e3fe",
        "parentId" : null,
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "If only time was mocked.",
        "createdAt" : "2020-05-06T05:44:42Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      },
      {
        "id" : "a335c61f-6929-4dd4-a956-38f8f4e2a691",
        "parentId" : "b40a7ebb-6716-4ca4-9b26-bc4d6444e3fe",
        "authorId" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "body" : "I mean, we have stuff to do that (the `Time` interface and the `MockTime` and `SystemTime` implementations of it) but it doesn't seem like it'd be easy to leverage here, since the request timeout is performed by a call to `FutureCallback::get`, which relies on `ShutdownLatch::await` under the hood.\r\nAFAIK we don't have a great way to mock shutdown latch timeouts, but if we do, it might not be so bad to do that instead of this hack here.",
        "createdAt" : "2020-05-06T16:16:36Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "tags" : [
        ]
      },
      {
        "id" : "c2add0ad-e22f-4185-999f-5cffcdb1d1c8",
        "parentId" : "b40a7ebb-6716-4ca4-9b26-bc4d6444e3fe",
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "Yeah, I don't think that it's worth changing everything just to mock time, especially if requires us to change the functionality.\r\nSGTM.",
        "createdAt" : "2020-05-06T20:53:18Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfb1bc04832b342e614e891d6da5af1f8ebe30a5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +83,87 @@    // but currently a worker simply leaving the group can take this long as well.\n    public static final long REQUEST_TIMEOUT_MS = 90 * 1000;\n    // Mutable for integration testing; otherwise, some tests would take at least REQUEST_TIMEOUT_MS\n    // to run\n    private static long requestTimeoutMs = REQUEST_TIMEOUT_MS;"
  },
  {
    "id" : "2da74622-da54-434e-8e7a-c4aeefae3695",
    "prId" : 8069,
    "prUrl" : "https://github.com/apache/kafka/pull/8069#pullrequestreview-406776913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c471bab-1618-4146-849d-12a09753dfde",
        "parentId" : null,
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "Can this be knocked down to protected / package-private?",
        "createdAt" : "2020-05-06T05:45:06Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      },
      {
        "id" : "80d7e386-83b6-44c2-bbd3-2e449de39fb1",
        "parentId" : "3c471bab-1618-4146-849d-12a09753dfde",
        "authorId" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "body" : "Don't think so :(\r\nRight now it's really only useful to call this from an integration test, and those all live in a different package. We could move to a different package but it seems a little funky to put one of our integration tests in a different place from all the others, or to move all of our integration tests into the seemingly-arbitrary `org.apache.kafka.connect.runtime.rest.resources` package.",
        "createdAt" : "2020-05-06T16:19:48Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfb1bc04832b342e614e891d6da5af1f8ebe30a5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +102,106 @@\n    // For testing purposes only\n    public static void setRequestTimeout(long requestTimeoutMs) {\n        ConnectorsResource.requestTimeoutMs = requestTimeoutMs;\n    }"
  }
]