[
  {
    "id" : "06979cd4-e809-448e-9068-bad09d71b70b",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b991036-d52c-4e8d-af95-02ccce2ec01a",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "nit:  Can be replaced with `computeIfAbsent`",
        "createdAt" : "2019-04-03T20:27:21Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "f3948a46-0db4-4718-a2d1-1616f6645234",
        "parentId" : "7b991036-d52c-4e8d-af95-02ccce2ec01a",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "This file contains the old code in `WorkerCoordinator` _as-is_. I would prefer not to introduce changes at all, no matter how small the changes. In a PR that big, it's simply a matter of discipline not to try to change multiple execution paths at once. \r\n\r\nThis and the optimizations below are small. Additionally, this code is not expected to run if the new rebalancing policy is chosen. I'm happy to return to this code, that is know encapsulated in a separate and well defined class for a similar clean once the the code has been released. ",
        "createdAt" : "2019-04-15T20:44:49Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@            log.trace(\"Assigning connector {} to {}\", connectorId, connectorAssignedTo);\n            Collection<String> memberConnectors = connectorAssignments.get(connectorAssignedTo);\n            if (memberConnectors == null) {\n                memberConnectors = new ArrayList<>();\n                connectorAssignments.put(connectorAssignedTo, memberConnectors);"
  },
  {
    "id" : "b50fb579-3881-4685-9d88-09b0c00659fe",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4badded-a065-4236-a3d3-4ad9e4e77c42",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "nit:  Can be replaced with `computeIfAbsent`",
        "createdAt" : "2019-04-03T20:28:35Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "46f49330-e230-4e62-93e2-64be9e70cdfa",
        "parentId" : "e4badded-a065-4236-a3d3-4ad9e4e77c42",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Same as above. ",
        "createdAt" : "2019-04-15T20:45:07Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +115,119 @@                log.trace(\"Assigning task {} to {}\", taskId, taskAssignedTo);\n                Collection<ConnectorTaskId> memberTasks = taskAssignments.get(taskAssignedTo);\n                if (memberTasks == null) {\n                    memberTasks = new ArrayList<>();\n                    taskAssignments.put(taskAssignedTo, memberTasks);"
  },
  {
    "id" : "83c3bc7f-8707-4c97-8e07-1c5ab2467d82",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20e75a76-3642-4ff6-b388-f62ce0b15a63",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "nit: Can be replaced with `getOrDefault`",
        "createdAt" : "2019-04-03T20:29:29Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "e81e2443-6766-4858-b74b-b3e8cac74930",
        "parentId" : "20e75a76-3642-4ff6-b388-f62ce0b15a63",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "same as above",
        "createdAt" : "2019-04-15T20:45:16Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +140,144 @@        for (String member : members) {\n            Collection<String> connectors = connectorAssignments.get(member);\n            if (connectors == null) {\n                connectors = Collections.emptyList();\n            }"
  },
  {
    "id" : "0e4394fb-f68d-4a05-964a-c14ca3b6e03b",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e50524ba-4c68-4f0e-b9fd-4ff5f3d47f7a",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "nit: Can be replaced with `getOrDefault`",
        "createdAt" : "2019-04-03T20:29:35Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "cd13e3cf-6391-4c7c-bf13-d4ed4cf76c11",
        "parentId" : "e50524ba-4c68-4f0e-b9fd-4ff5f3d47f7a",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "same as above",
        "createdAt" : "2019-04-15T20:45:21Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@            }\n            Collection<ConnectorTaskId> tasks = taskAssignments.get(member);\n            if (tasks == null) {\n                tasks = Collections.emptyList();\n            }"
  },
  {
    "id" : "ca6e764e-9edb-4e60-a510-257f9bc8b517",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d6d7e7d-ebd5-4410-96c0-cd754187d32e",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "Do we need an `assert` that the `memberConfigs` is never empty?  Otherwise `return maxOffset` will throw NPE.",
        "createdAt" : "2019-04-03T20:33:02Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "95fca813-e0bb-42cf-a197-77a5f89a08c0",
        "parentId" : "8d6d7e7d-ebd5-4410-96c0-cd754187d32e",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "same as above",
        "createdAt" : "2019-04-15T20:45:41Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +171,175 @@        log.debug(\"Max config offset root: {}, local snapshot config offsets root: {}\",\n                  maxOffset, coordinator.configSnapshot().offset());\n        return maxOffset;\n    }\n"
  },
  {
    "id" : "ce9b26e7-699e-45b5-97ff-5747b69d15d0",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "405d05e4-7b15-4e62-a640-8614c4446b53",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "nit:  this can be simplified to `maxOffset = Math.max(maxOffset, memberRootOffset)` if we initialize `maxOffset` with `long maxOffset = Long.MIN_VALUE`.",
        "createdAt" : "2019-04-03T20:34:20Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "1a7589a0-8b10-4fca-be86-16ec88e5a372",
        "parentId" : "405d05e4-7b15-4e62-a640-8614c4446b53",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "same as above",
        "createdAt" : "2019-04-15T20:45:30Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +163,167 @@        for (Map.Entry<String, ExtendedWorkerState> stateEntry : memberConfigs.entrySet()) {\n            long memberRootOffset = stateEntry.getValue().offset();\n            if (maxOffset == null)\n                maxOffset = memberRootOffset;\n            else"
  }
]