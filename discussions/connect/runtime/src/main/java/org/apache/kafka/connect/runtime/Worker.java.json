[
  {
    "id" : "836bd358-8326-4213-b458-4af805babea6",
    "prId" : 5743,
    "prUrl" : "https://github.com/apache/kafka/pull/5743#pullrequestreview-205868695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3484fc5-4824-446d-89d0-c0351cefd767",
        "parentId" : null,
        "authorId" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "body" : "nit: when we put such large blocks within a try-finally block, do you think it would be useful to move the block to a separate private method, so they are more easy to read?",
        "createdAt" : "2019-02-20T01:51:23Z",
        "updatedAt" : "2019-05-16T10:44:25Z",
        "lastEditedBy" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "tags" : [
        ]
      },
      {
        "id" : "b70141b8-1cbd-47cc-ae31-8075b4534376",
        "parentId" : "a3484fc5-4824-446d-89d0-c0351cefd767",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "I guess in this case I don't believe that moving to a separate private method is that useful/beneficial.",
        "createdAt" : "2019-02-20T16:39:47Z",
        "updatedAt" : "2019-05-16T10:44:25Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a9a4664d5c6b71857d42bfd49ab9630c4e512e",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +294,298 @@        List<Map<String, String>> result = new ArrayList<>();\n        try (LoggingContext loggingContext = LoggingContext.forConnector(connName)) {\n            log.trace(\"Reconfiguring connector tasks for {}\", connName);\n\n            WorkerConnector workerConnector = connectors.get(connName);"
  },
  {
    "id" : "4425614c-e59e-4f26-a5c2-a4b7084c42f7",
    "prId" : 5743,
    "prUrl" : "https://github.com/apache/kafka/pull/5743#pullrequestreview-237503803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6019fd8c-a6b5-4f93-b1fa-efc297815c43",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "The bulk of the changes in this class are indentation due to wrapping in a new try-catch.",
        "createdAt" : "2019-05-14T21:09:53Z",
        "updatedAt" : "2019-05-16T10:44:25Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a9a4664d5c6b71857d42bfd49ab9630c4e512e",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +260,264 @@            log.info(\"Finished creating connector {}\", connName);\n            workerMetricsGroup.recordConnectorStartupSuccess();\n        }\n        return true;\n    }"
  },
  {
    "id" : "dfa08c3a-ef0a-4c08-8bfe-c6e66a1dee1d",
    "prId" : 6097,
    "prUrl" : "https://github.com/apache/kafka/pull/6097#pullrequestreview-234205630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e05af53f-3307-4ae5-b4b1-6135947eda86",
        "parentId" : null,
        "authorId" : "fa51427f-0ebb-4ee2-9811-0d6262fc02f1",
        "body" : "Can we move these strings to a class property, perhaps as a public property on the Configuration class? Now that these metrics will be exposed with this pattern, systems reading this log may want to rely on this string format. Explicitly declaring this as a public constant may help prevent accidental breaking changes.",
        "createdAt" : "2019-05-06T21:13:50Z",
        "updatedAt" : "2019-05-06T21:14:54Z",
        "lastEditedBy" : "fa51427f-0ebb-4ee2-9811-0d6262fc02f1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3e55ee5a772a49ca31fbc5ed7a88d80806e6a06",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +489,493 @@            OffsetStorageWriter offsetWriter = new OffsetStorageWriter(offsetBackingStore, id.connector(),\n                    internalKeyConverter, internalValueConverter);\n            Map<String, Object> producerProps = producerConfigs(\"connector-producer-\" + id, config);\n            KafkaProducer<byte[], byte[]> producer = new KafkaProducer<>(producerProps);\n"
  },
  {
    "id" : "3dc69e8c-179a-4910-a532-d9c3298ccf8e",
    "prId" : 6624,
    "prUrl" : "https://github.com/apache/kafka/pull/6624#pullrequestreview-237459178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d8109c5-d763-4291-b9a6-c9c069bf4a9a",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Can this be refactored into a separate helper method, considering this is the same (with minor variations) in all three client-related methods?",
        "createdAt" : "2019-05-14T20:49:20Z",
        "updatedAt" : "2019-05-17T04:30:11Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59f2916a69e71722532c6c60203df35231f56224",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +591,595 @@                                           ConnectorType.SINK, ConnectorClientConfigRequest.ClientType.CONSUMER,\n                                           connectorClientConfigOverridePolicy);\n        consumerProps.putAll(consumerOverrides);\n\n        return consumerProps;"
  },
  {
    "id" : "60a327b5-69d2-43b6-a7e1-a62862a97b72",
    "prId" : 6624,
    "prUrl" : "https://github.com/apache/kafka/pull/6624#pullrequestreview-238590922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17f9b338-61be-47f0-8111-8ac7500a3d6a",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Add comment:\r\n```\r\n// Connector-specified overrides\r\n```\r\nhere an in the other 2 methods, too.",
        "createdAt" : "2019-05-16T19:44:22Z",
        "updatedAt" : "2019-05-17T04:30:11Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59f2916a69e71722532c6c60203df35231f56224",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +605,609 @@        // User-specified overrides\n        adminProps.putAll(config.originalsWithPrefix(\"admin.\"));\n\n        // Connector-specified overrides\n        Map<String, Object> adminOverrides ="
  },
  {
    "id" : "28eb8f11-19d0-4ba0-babd-dd8eaca09f9d",
    "prId" : 6624,
    "prUrl" : "https://github.com/apache/kafka/pull/6624#pullrequestreview-238590922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99cdf58f-8519-46d8-8708-681b6e0010c9",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Maybe add a comment above this line that says something like:\r\n```\r\n// These should be caught when the herder validates the connector configuration, but just in case\r\n```\r\n",
        "createdAt" : "2019-05-16T19:46:48Z",
        "updatedAt" : "2019-05-17T04:30:11Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59f2916a69e71722532c6c60203df35231f56224",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +635,639 @@            filter(configValue -> configValue.errorMessages().size() > 0).collect(Collectors.toList());\n        // These should be caught when the herder validates the connector configuration, but just in case\n        if (errorConfigs.size() > 0) {\n            throw new ConnectException(\"Client Config Overrides not allowed \" + errorConfigs);\n        }"
  },
  {
    "id" : "3dfda136-bbf4-4408-a162-917116a890b4",
    "prId" : 6843,
    "prUrl" : "https://github.com/apache/kafka/pull/6843#pullrequestreview-296539428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e8687ee-d4f3-484e-a192-fdfcce481c5d",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "So IIUC, the only reason we can't make this final is because we need a herder to pass to the `ConnectorStatusMetricsGroup` instance. One way to get around that is to avoid passing in the herder and instead pass in a function that does what the `ConnectorStatusMetricsGroup` needs the herder to do: get the task status for a task ID. \r\n\r\nFor example, we could define a protected method on `Worker`, such as `taskStatus(ConnectorTaskId)` that returns `ConnectorStateInfo.TaskState`. Then, we could change `ConnectorStatusMetricsGroup` to take a `Function<ConnectorTaskId, TaskState>`, and the other constructor parameters are simple Maps. That means:\r\n1) the class becomes pretty straightforward; and\r\n2) the class is much easier to test, because we don't need a herder",
        "createdAt" : "2019-10-02T21:32:22Z",
        "updatedAt" : "2019-10-03T00:06:19Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f953ff50731aa836b3d4233d0b9f8e72224fc1f1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +95,99 @@    private final ConnectMetrics metrics;\n    private final WorkerMetricsGroup workerMetricsGroup;\n    private ConnectorStatusMetricsGroup connectorStatusMetricsGroup;\n    private final WorkerConfig config;\n    private final Converter internalKeyConverter;"
  },
  {
    "id" : "68ea6349-2796-4a20-b8f6-c8dc3bf591a7",
    "prId" : 8069,
    "prUrl" : "https://github.com/apache/kafka/pull/8069#pullrequestreview-356306105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6847d5b4-9396-45f3-b0db-7f35139fa8c9",
        "parentId" : null,
        "authorId" : "4873aa72-3842-44ba-91a8-a59ea9830460",
        "body" : "It looks like you are reusing the executor that currently is used to run the `WorkerTask`. Since operations are async now, would it be possible to have `startTask` called on a different thread while connector is still being initialized or is transitioning to started state here?",
        "createdAt" : "2020-02-10T21:53:26Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "4873aa72-3842-44ba-91a8-a59ea9830460",
        "tags" : [
        ]
      },
      {
        "id" : "20a59d9e-0fb3-4a6c-a92a-614792aa83d2",
        "parentId" : "6847d5b4-9396-45f3-b0db-7f35139fa8c9",
        "authorId" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "body" : "As far as the API provided by the `Worker` class goes, yes, it is possible and there are no guards in place to prevent that from happening. However, at the moment both herders are well-behaved in that they do not instruct the `Worker` to start tasks until after the connector has finished starting as well. This is pretty simple to verify, and unlikely to change, since the herders wait for connectors to start before requesting task configurations from them, which in turn are required in order to actually go about starting tasks.",
        "createdAt" : "2020-02-10T22:17:45Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfb1bc04832b342e614e891d6da5af1f8ebe30a5",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +306,310 @@            }\n\n            executor.submit(workerConnector);\n\n            log.info(\"Finished creating connector {}\", connName);"
  },
  {
    "id" : "1161255b-f36f-49c6-9a03-f4def58679d2",
    "prId" : 8069,
    "prUrl" : "https://github.com/apache/kafka/pull/8069#pullrequestreview-406300258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1003a248-591b-48de-b618-8678eaac5f99",
        "parentId" : null,
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : ":+1:",
        "createdAt" : "2020-05-06T04:42:20Z",
        "updatedAt" : "2020-06-11T04:43:53Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfb1bc04832b342e614e891d6da5af1f8ebe30a5",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +268,272 @@                // Getting this value from the unparsed map will allow us to instantiate the\n                // right config (source or sink)\n                final String connClass = connProps.get(ConnectorConfig.CONNECTOR_CLASS_CONFIG);\n                ClassLoader connectorLoader = plugins.delegatingLoader().connectorLoader(connClass);\n                savedLoader = Plugins.compareAndSwapLoaders(connectorLoader);"
  },
  {
    "id" : "378a7eea-6cb3-467e-87dd-337a61f7852a",
    "prId" : 8204,
    "prUrl" : "https://github.com/apache/kafka/pull/8204#pullrequestreview-402143803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f50c66f-2c60-483b-8ff3-561eedc3ed63",
        "parentId" : null,
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Looking at the initialization of `workerConfigTransformer` I see it should be made final. \r\n\r\nAnd then I notice that this is the case for `connectorClientConfigOverridePolicy` and all the class members of `ConnectorStatusMetricsGroup`. @tombentley do you mind tightening these types as well?",
        "createdAt" : "2020-04-28T19:26:07Z",
        "updatedAt" : "2020-04-30T08:39:56Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc4ff2aa6a62c1e35c225f7bd1a7e54bda6e51c9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +222,226 @@        connectorStatusMetricsGroup.close();\n\n        workerConfigTransformer.close();\n    }\n"
  },
  {
    "id" : "41c55213-717f-4f47-b4ae-e706443d55e5",
    "prId" : 8720,
    "prUrl" : "https://github.com/apache/kafka/pull/8720#pullrequestreview-417753108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d2aa523-afad-4c13-8772-86b1ade5f214",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Nit: let's avoid adding new lines in code otherwise unaffected in the PR.",
        "createdAt" : "2020-05-25T14:58:20Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c4442fffdc3b163458bf42b7af29183062c636f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +708,712 @@            Map<String, Object> adminProps = adminConfigs(id, \"connector-dlq-adminclient-\", config, connConfig, connectorClass, connectorClientConfigOverridePolicy);\n            DeadLetterQueueReporter reporter = DeadLetterQueueReporter.createAndSetup(adminProps, id, connConfig, producerProps, errorHandlingMetrics);\n\n            reporters.add(reporter);\n        }"
  }
]