[
  {
    "id" : "84d12c27-d9e0-4c99-bf05-53cd78d2e24c",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-229704718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d2b32d9-e039-4dc3-a38c-87645253aaf6",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Doesn't each process only have a single DistributedWorker instance? If so, then would `CONNECT_CLIENT_ID_SEQUENCE.getAndIncrement()` ever return something other than 1?",
        "createdAt" : "2019-03-25T21:02:40Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "1948cd74-8cb1-4774-aeda-30cfff452baf",
        "parentId" : "0d2b32d9-e039-4dc3-a38c-87645253aaf6",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "This is older code which I chose not to change here. \r\n\r\nOne place where you can see the counter making a difference is in integration tests with multiple workers at the moment. ",
        "createdAt" : "2019-04-16T00:13:49Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      },
      {
        "id" : "0a5905e4-a4ce-4842-a160-bf595715b8b0",
        "parentId" : "0d2b32d9-e039-4dc3-a38c-87645253aaf6",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Given that I've added several integration tests that bring up several workers, I think it makes sense to leave this here. ",
        "createdAt" : "2019-04-25T21:10:18Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +192,196 @@\n        String clientIdConfig = config.getString(CommonClientConfigs.CLIENT_ID_CONFIG);\n        String clientId = clientIdConfig.length() <= 0 ? \"connect-\" + CONNECT_CLIENT_ID_SEQUENCE.getAndIncrement() : clientIdConfig;\n        LogContext logContext = new LogContext(\"[Worker clientId=\" + clientId + \", groupId=\" + this.workerGroupId + \"] \");\n        log = logContext.logger(DistributedHerder.class);"
  },
  {
    "id" : "8ff165cd-5541-4238-8d8c-c6d77380a69b",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-222511189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6d0a70e-53e8-47f6-b015-d07c96202124",
        "parentId" : null,
        "authorId" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "body" : "Should we check that `update` is `null`?  It's confusing if `running` is allowed to be `null` but `update` is assumed not to be.",
        "createdAt" : "2019-04-03T20:22:40Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f5ac54e5-ad95-49b9-b49a-3fd091e917ae",
        "tags" : [
        ]
      },
      {
        "id" : "644a169f-f036-4ee7-b9cb-42566255429f",
        "parentId" : "f6d0a70e-53e8-47f6-b015-d07c96202124",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "This is not meant to be a general method. I removed the `null` check because assignment collections should not be `null`. If we see fit later on we could factor out this logic to a more general diff method in `ConnectAssignment` itself. ",
        "createdAt" : "2019-04-15T22:43:44Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +909,913 @@\n    // arguments should assignment collections (connectors or tasks) and should not be null\n    private static <T> Collection<T> assignmentDifference(Collection<T> update, Collection<T> running) {\n        if (running.isEmpty()) {\n            return update;"
  },
  {
    "id" : "623b10b5-d238-44fd-8594-c1a8da985621",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-231253602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4487a6a-d624-41b6-9c3e-1d78f44ff963",
        "parentId" : null,
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "hmm, so this is a potentially interesting change. client.id can be used for some things like quotas. since this is for workers, i'm not sure we're actually changing behavior in any interesting way here, but we should consider what the possible fallout in behavior could be by changing the default client.id behavior here.",
        "createdAt" : "2019-04-24T04:06:36Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "daf39b2f-144c-4153-9170-4730ba0579cc",
        "parentId" : "e4487a6a-d624-41b6-9c3e-1d78f44ff963",
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "i think nm on this, pretty sure it was moved from other code. just hard to see without loading the full hidden diffs in GitHub review",
        "createdAt" : "2019-04-26T04:38:52Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "de332eeb-2ab2-4156-8173-f251176a5d33",
        "parentId" : "e4487a6a-d624-41b6-9c3e-1d78f44ff963",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Indeed, this code is not an addition. It's moved from `WorkerGroupMember` _as-is_\r\nTo your point, here, every time I reload I search for \"load diff\" and I load the hidden files. Thankfully only 5 or 6 so far :)",
        "createdAt" : "2019-04-26T20:14:45Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +192,196 @@\n        String clientIdConfig = config.getString(CommonClientConfigs.CLIENT_ID_CONFIG);\n        String clientId = clientIdConfig.length() <= 0 ? \"connect-\" + CONNECT_CLIENT_ID_SEQUENCE.getAndIncrement() : clientIdConfig;\n        LogContext logContext = new LogContext(\"[Worker clientId=\" + clientId + \", groupId=\" + this.workerGroupId + \"] \");\n        log = logContext.logger(DistributedHerder.class);"
  },
  {
    "id" : "4cbbd064-d144-4ac3-93a7-cef37538f07d",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-238575681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eb37c56-6176-4a43-8fee-8697b65bd0fb",
        "parentId" : null,
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "It seems like most of the other logic around the protocol versions is cleanly factored into the protocol classes. Could we refactor this logic as well, e.g. to get this from `assignment`?",
        "createdAt" : "2019-04-24T19:16:38Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "1085f7e5-6d1d-4c75-b486-d2f992e57a97",
        "parentId" : "6eb37c56-6176-4a43-8fee-8697b65bd0fb",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "+1",
        "createdAt" : "2019-05-02T05:30:53Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "dc6a4dd2-6ac3-4783-8af9-a4083068863d",
        "parentId" : "6eb37c56-6176-4a43-8fee-8697b65bd0fb",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "This is also candidate for subsequent refactoring. Will create a jira ticket. ",
        "createdAt" : "2019-05-16T18:50:12Z",
        "updatedAt" : "2019-05-17T01:31:31Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +901,905 @@        }\n        startAndStop(callables);\n        runningAssignment = member.currentProtocolVersion() == CONNECT_PROTOCOL_V0\n                            ? ExtendedAssignment.empty()\n                            : assignment;"
  },
  {
    "id" : "8e2bda71-71aa-4071-a438-cd37bc0c3456",
    "prId" : 6363,
    "prUrl" : "https://github.com/apache/kafka/pull/6363#pullrequestreview-238575395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "478bc925-5680-4853-b92d-d0576f926c32",
        "parentId" : null,
        "authorId" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "body" : "why are we clearing these here? i would think the key thing in this class would just be to force the rejoin when tasks are revoked and it doesn't look like we use this anywhere else in this class that this would cause a problem. is there some sharing with code elsewhere that relies on this? (and if so, could we just hand this class a copy instead?)",
        "createdAt" : "2019-04-25T01:29:36Z",
        "updatedAt" : "2019-05-17T01:31:30Z",
        "lastEditedBy" : "f4cc0a00-0225-4972-8b58-0b97edf58337",
        "tags" : [
        ]
      },
      {
        "id" : "bf6b3ea4-3d8a-4d55-a05a-167514c5ef47",
        "parentId" : "478bc925-5680-4853-b92d-d0576f926c32",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "At this point I will clear this if needed in a subsequent cleanup/refactoring after more testing is applied. ",
        "createdAt" : "2019-05-16T18:49:35Z",
        "updatedAt" : "2019-05-17T01:31:31Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb1853d8040f29948c1b9e54f95c0c2400d5b66e",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +846,850 @@\n        if (!assignment.revokedConnectors().isEmpty() || !assignment.revokedTasks().isEmpty()) {\n            assignment.revokedConnectors().clear();\n            assignment.revokedTasks().clear();\n            member.requestRejoin();"
  }
]