[
  {
    "id" : "d577d365-ad36-4b09-b6fb-1f0c8e97dd78",
    "prId" : 8720,
    "prUrl" : "https://github.com/apache/kafka/pull/8720#pullrequestreview-419548029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e72da5d-8c4b-4786-a85c-55e76575ca65",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Once again, please add trace log messages before an after this line.",
        "createdAt" : "2020-05-27T19:58:44Z",
        "updatedAt" : "2020-05-28T04:04:20Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c4442fffdc3b163458bf42b7af29183062c636f",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +367,371 @@        if (workerErrantRecordReporter != null) {\n            log.trace(\"Awaiting all reported errors to be completed\");\n            workerErrantRecordReporter.awaitAllFutures();\n            log.trace(\"Completed all reported errors\");\n        }"
  },
  {
    "id" : "c859130a-9bd8-4637-a130-a46639799c58",
    "prId" : 8829,
    "prUrl" : "https://github.com/apache/kafka/pull/8829#pullrequestreview-428511529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c45a44d1-a762-4069-a8b5-9182c2a63552",
        "parentId" : null,
        "authorId" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "body" : "let's add a small comment saying why we need to do this: specifically, that if the errors raised from the operator were swallowed by the task implementation, then here we need to kill the task, and if they were not swallowed, we would not get here.",
        "createdAt" : "2020-06-11T00:22:32Z",
        "updatedAt" : "2020-06-11T00:44:25Z",
        "lastEditedBy" : "1462ba0d-5f6b-4517-98de-68943d892c2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3324cce90f8379c69c8538b594edd29e83f7fe1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +559,563 @@            // if errors raised from the operator were swallowed by the task implementation, an\n            // exception needs to be thrown to kill the task indicating the tolerance was exceeded\n            if (retryWithToleranceOperator.failed() && !retryWithToleranceOperator.withinToleranceLimits()) {\n                throw new ConnectException(\"Tolerance exceeded in error handler\",\n                    retryWithToleranceOperator.error());"
  }
]