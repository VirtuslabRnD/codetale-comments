[
  {
    "id" : "90164d9c-97fd-4dc8-a158-906a31b361d0",
    "prId" : 6624,
    "prUrl" : "https://github.com/apache/kafka/pull/6624#pullrequestreview-238590922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e6505aa-5138-4188-a05d-86e5852905c7",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "How about an abstract base class that has:\r\n```\r\n    public List<ConfigValue> validate(ConnectorClientConfigRequest connectorClientConfigRequest) {\r\n        Map<String, Object> inputConfig = connectorClientConfigRequest.clientProps();\r\n        return inputConfig.entrySet().stream().map(configEntry -> configValue(configEntry)).collect(Collectors.toList());\r\n    }\r\n    protected ConfigValue configValue(Map.Entry<String, Object> configEntry) {\r\n        ConfigValue configValue =\r\n            new ConfigValue(configEntry.getKey(), configEntry.getValue(), new ArrayList<Object>(), new ArrayList<String>());\r\n        validate(configValue);\r\n        return configValue;\r\n    }\r\n    protected void validate(ConfigValue configValue) {\r\n        if (!isAllowed(configValue)) {\r\n            configValue.addErrorMessage(\"The '\" + policyName() + \"' policy does not allow '\" + configValue.name() + \"' to be overridden in the connector configuration.\");\r\n        }\r\n    }\r\n\r\n    protected abstract String policyName();\r\n\r\n    protected abstract boolean isAllowed(ConfigValue configValue);\r\n```\r\n\r\nThen subclasses can override any of these methods, but the All policy only needs to override:\r\n```\r\n    @Override\r\n    protected boolean isAllowed(ConfigValue configValue) {\r\n        return ALLOWED_CONFIG.contains(configValue.name());\r\n    }\r\n    @Override\r\n    protected String policyName() {\r\n         return \"Principal\";\r\n    }\r\n```\r\nor, for the None policy:\r\n```\r\n    @Override\r\n    protected boolean isAllowed(ConfigValue configValue) {\r\n        return false;\r\n    }\r\n    @Override\r\n    protected String policyName() {\r\n         return \"None\";\r\n    }\r\n```\r\nor, for the All policy:\r\n```\r\n    @Override\r\n    protected boolean isAllowed(ConfigValue configValue) {\r\n        return true;\r\n    }\r\n    @Override\r\n    protected String policyName() {\r\n         return \"All\";\r\n    }\r\n```",
        "createdAt" : "2019-05-16T19:35:13Z",
        "updatedAt" : "2019-05-17T04:30:11Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59f2916a69e71722532c6c60203df35231f56224",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@    protected String policyName() {\n        return \"None\";\n    }\n\n    @Override"
  }
]