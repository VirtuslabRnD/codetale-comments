[
  {
    "id" : "75869447-af73-41eb-a59a-f956eba060f3",
    "prId" : 6362,
    "prUrl" : "https://github.com/apache/kafka/pull/6362#pullrequestreview-279364439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22492c38-d1bc-451a-99f8-74c321173128",
        "parentId" : null,
        "authorId" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "body" : "These tests just seem to validate that your new method is called, but not much else. Perhaps provide an implementation that actually does something with the headers, and then test that.",
        "createdAt" : "2019-08-22T23:38:53Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "tags" : [
        ]
      },
      {
        "id" : "c3e48e1e-44e6-4c4d-a924-7ee131baa642",
        "parentId" : "22492c38-d1bc-451a-99f8-74c321173128",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "I agree. It'd probably be good to use a converter implementation that fails if the non-header form of the methods are called, but does something if the header form of the methods are called.",
        "createdAt" : "2019-08-25T22:14:48Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "bda59dd1-6b82-4c9b-9867-dd1460c3da0d",
        "parentId" : "22492c38-d1bc-451a-99f8-74c321173128",
        "authorId" : "e13c4d2f-dcc5-4ca4-9ec8-4bbea21537ea",
        "body" : "I've added `TestConverterWithHeaders` and sink/source tests showing its usage.",
        "createdAt" : "2019-08-26T01:01:55Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "e13c4d2f-dcc5-4ca4-9ec8-4bbea21537ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b91ff4e732275778c44e2649f7c7da5849b6937",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1297,1301 @@        workerTask.iteration(); // iter 2 -- deliver 1 record\n\n        PowerMock.verifyAll();\n    }\n"
  },
  {
    "id" : "a529f6c8-5d5b-49ec-a494-875b0e212171",
    "prId" : 8618,
    "prUrl" : "https://github.com/apache/kafka/pull/8618#pullrequestreview-407094910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac186036-2784-4a76-b1b0-627a19adc046",
        "parentId" : null,
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Can you also write a test where an exception is thrown only by `sinkTask.close`? Actually, we could keep the name for this new test here _as is_, and the new test could be named in a way that tells us that the exceptions on close are suppressed in the presence of exceptions in the main try block. ",
        "createdAt" : "2020-05-06T15:50:29Z",
        "updatedAt" : "2020-05-07T21:15:37Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      },
      {
        "id" : "b3bc25fb-59aa-4ac2-b8a8-316e3a643957",
        "parentId" : "ac186036-2784-4a76-b1b0-627a19adc046",
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "Ive written the test as described, and verified that the exception from close is caught by WorkerTask::doRun.\r\n\r\nHowever, it never gets wrapped in a ConnectException like exceptions from the other connector methods, but i'm not sure that it's in-scope to change this in this PR.",
        "createdAt" : "2020-05-06T18:20:47Z",
        "updatedAt" : "2020-05-07T21:15:37Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      },
      {
        "id" : "292bdc87-3d53-4b66-8fc7-39a5e97463c0",
        "parentId" : "ac186036-2784-4a76-b1b0-627a19adc046",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Let me see if I understand what you are describing as `wrapped`. \r\nMy use case is as follows: \r\n`SinkTask#close` attempts to release resources and if it fails it throws a `ConnectException` as we'd expect from connector developers to do (currently it throws a `RuntimeException` which might be less representative). \r\n\r\nWith your fix this exception can appear as suppressed when an exception happens in `SinkTask#put` and that's what your test is guarding against. \r\n\r\nMy point is to add the missing test case for when the exception on `close` is the only exception that is thrown. There is a variety of ways to do that, but I agree with you, this test is not there now. However, I don't think this necessarily makes it out of scope. ",
        "createdAt" : "2020-05-06T18:32:13Z",
        "updatedAt" : "2020-05-07T21:15:37Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      },
      {
        "id" : "a6eb3f8d-fb37-4f92-8a9a-beef8a3d0956",
        "parentId" : "ac186036-2784-4a76-b1b0-627a19adc046",
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "I added that test, so please look at the diff.\r\n\r\nBy wrapping, i'm completely disregarding the behavior from the connector, I'm only discussing the additional layers of exceptions added by the framework before printing.\r\n\r\nAt the moment, the RuntimeException from put is wrapped by a ConnectException, but the RuntimeException from close is never wrapped in a ConnectException. I'm questioning whether this is the ideal behavior, and whether we should add that wrapping layer, or consider it out-of-scope for this PR.",
        "createdAt" : "2020-05-06T18:39:15Z",
        "updatedAt" : "2020-05-07T21:15:37Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      },
      {
        "id" : "60c88bb8-b6b0-4ef2-9328-887d648225d4",
        "parentId" : "ac186036-2784-4a76-b1b0-627a19adc046",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "That's the testing I had in mind. That's great. \r\nNo need to change the exception type right now. ",
        "createdAt" : "2020-05-07T01:35:08Z",
        "updatedAt" : "2020-05-07T21:15:37Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "44de87f505e42fadf7d5ed548d2f43a21cb8e4c5",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +860,864 @@\n    @Test\n    public void testSinkTasksHandleCloseErrors() throws Exception {\n        createTask(initialState);\n        expectInitializeTask();"
  },
  {
    "id" : "88ab5557-2662-4061-b01a-242f2ddc8cb0",
    "prId" : 8910,
    "prUrl" : "https://github.com/apache/kafka/pull/8910#pullrequestreview-497904957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fd8a4a2-ed84-4bf2-ad6c-533574262729",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Verified locally that this test fails when the additions to the `onPartitionsRevoked(...)` method above are removed locally. Nice work, @C0urante.",
        "createdAt" : "2020-09-28T22:41:08Z",
        "updatedAt" : "2020-09-28T22:41:26Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e5b217f1274dd896730403a8bd8fc36383ee5ae",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +363,367 @@        workerTask.close();\n\n        PowerMock.verifyAll();\n    }\n"
  }
]