[
  {
    "id" : "75869447-af73-41eb-a59a-f956eba060f3",
    "prId" : 6362,
    "prUrl" : "https://github.com/apache/kafka/pull/6362#pullrequestreview-279364439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22492c38-d1bc-451a-99f8-74c321173128",
        "parentId" : null,
        "authorId" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "body" : "These tests just seem to validate that your new method is called, but not much else. Perhaps provide an implementation that actually does something with the headers, and then test that.",
        "createdAt" : "2019-08-22T23:38:53Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "tags" : [
        ]
      },
      {
        "id" : "c3e48e1e-44e6-4c4d-a924-7ee131baa642",
        "parentId" : "22492c38-d1bc-451a-99f8-74c321173128",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "I agree. It'd probably be good to use a converter implementation that fails if the non-header form of the methods are called, but does something if the header form of the methods are called.",
        "createdAt" : "2019-08-25T22:14:48Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "bda59dd1-6b82-4c9b-9867-dd1460c3da0d",
        "parentId" : "22492c38-d1bc-451a-99f8-74c321173128",
        "authorId" : "e13c4d2f-dcc5-4ca4-9ec8-4bbea21537ea",
        "body" : "I've added `TestConverterWithHeaders` and sink/source tests showing its usage.",
        "createdAt" : "2019-08-26T01:01:55Z",
        "updatedAt" : "2019-09-20T21:40:53Z",
        "lastEditedBy" : "e13c4d2f-dcc5-4ca4-9ec8-4bbea21537ea",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b91ff4e732275778c44e2649f7c7da5849b6937",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1297,1301 @@        workerTask.iteration(); // iter 2 -- deliver 1 record\n\n        PowerMock.verifyAll();\n    }\n"
  }
]