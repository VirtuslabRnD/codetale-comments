[
  {
    "id" : "76c43726-1777-4006-8a60-24196b485031",
    "prId" : 7771,
    "prUrl" : "https://github.com/apache/kafka/pull/7771#pullrequestreview-327049764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc742392-b2f5-4598-b62c-f188ce47d212",
        "parentId" : null,
        "authorId" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "body" : "Shouldn't the workers discover that the coordinator is unavailable while it is down?\r\nI'm imagining this test going like this:\r\n\r\n1. steady-state workers are running\r\n2. brokers stop\r\n3. workers discover the coordinator is unavailable \r\n4. workers stop their tasks\r\n5. brokers start\r\n6. workers discover the next coordinator \r\n7. workers start their tasks\r\n8. workers are running unaffected",
        "createdAt" : "2019-12-04T17:26:30Z",
        "updatedAt" : "2019-12-04T18:07:06Z",
        "lastEditedBy" : "12b658fc-2aaf-48e9-ad8b-15fd33dc8321",
        "tags" : [
        ]
      },
      {
        "id" : "0e9835b6-cea8-4f81-9783-b56db77978c7",
        "parentId" : "fc742392-b2f5-4598-b62c-f188ce47d212",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "That was a bit misplaced, because I actually need 3 explicit delays (due to current lack of appropriate handles from the kafka and connect embedded clusters). \r\n1. Bring kafka down, allow workers to discover it's down (heartbeat * 2 + 4 sec)\r\n2. Allow for Kafka to come back up\r\n3. Allow for worker cluster to stabilize after the very last rebalance (delay = 5sec) \r\n\r\nAdded another commit. ",
        "createdAt" : "2019-12-04T18:12:06Z",
        "updatedAt" : "2019-12-04T18:12:06Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      }
    ],
    "commit" : "a031894a59ce13839b6e5d54bf22152fc5640f88",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +232,236 @@\n        // Allow for the kafka brokers to come back online\n        Thread.sleep(TimeUnit.SECONDS.toMillis(10));\n\n        waitForCondition(() -> assertWorkersUp(NUM_WORKERS).orElse(false),"
  }
]