[
  {
    "id" : "3bdf147b-86fd-420f-b030-5f99c1dc8f04",
    "prId" : 7532,
    "prUrl" : "https://github.com/apache/kafka/pull/7532#pullrequestreview-302792458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11d7dac8-b848-4691-8839-3a33051fcb30",
        "parentId" : null,
        "authorId" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "body" : "With this block of change, do we still need `secondGetInvokedAndPassed` above on line 313? It seems useless now.",
        "createdAt" : "2019-10-16T18:37:47Z",
        "updatedAt" : "2019-11-19T22:20:32Z",
        "lastEditedBy" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c156e3c79d698a18e193261a812d1cb44f25ff",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +309,313 @@\n        // Getting data should read to end of our published data and return it\n        Map<ByteBuffer, ByteBuffer> offsets = store.get(Arrays.asList(null, TP1_KEY)).get(10000, TimeUnit.MILLISECONDS);\n        assertEquals(TP0_VALUE, offsets.get(null));\n        assertNull(offsets.get(TP1_KEY));"
  },
  {
    "id" : "ba6d1837-d02a-4b48-a77c-39be2488e878",
    "prId" : 7532,
    "prUrl" : "https://github.com/apache/kafka/pull/7532#pullrequestreview-302792458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57f3cb1c-375a-4f46-b1d0-f8e8cc3641ae",
        "parentId" : null,
        "authorId" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "body" : "Do we still need `getInvokedAndPassed`?",
        "createdAt" : "2019-10-16T18:39:03Z",
        "updatedAt" : "2019-11-19T22:20:32Z",
        "lastEditedBy" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c156e3c79d698a18e193261a812d1cb44f25ff",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +218,222 @@\n        // Getting from empty store should return nulls\n        Map<ByteBuffer, ByteBuffer> offsets = store.get(Arrays.asList(TP0_KEY, TP1_KEY)).get(10000, TimeUnit.MILLISECONDS);\n        // Since we didn't read them yet, these will be null\n        assertNull(offsets.get(TP0_KEY));"
  },
  {
    "id" : "20a63f0f-4ac0-466d-8168-afa58f208dfc",
    "prId" : 7532,
    "prUrl" : "https://github.com/apache/kafka/pull/7532#pullrequestreview-302792458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0daf796e-fcc4-4a0e-9294-072a0099bff6",
        "parentId" : null,
        "authorId" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "body" : "Do we need `secondGetInvokedAndPassed`?",
        "createdAt" : "2019-10-16T18:39:34Z",
        "updatedAt" : "2019-11-19T22:20:32Z",
        "lastEditedBy" : "0beb421d-a679-4c18-8dbf-d1d633c278d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c156e3c79d698a18e193261a812d1cb44f25ff",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +244,248 @@\n        // Getting data should read to end of our published data and return it\n        offsets = store.get(Arrays.asList(TP0_KEY, TP1_KEY)).get(10000, TimeUnit.MILLISECONDS);\n        assertEquals(TP0_VALUE, offsets.get(TP0_KEY));\n        assertEquals(TP1_VALUE, offsets.get(TP1_KEY));"
  },
  {
    "id" : "e9eb7f56-0149-4f56-b20c-e3606d35ced0",
    "prId" : 7532,
    "prUrl" : "https://github.com/apache/kafka/pull/7532#pullrequestreview-319397258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a0ba4c6-46fe-4133-bb41-8d770e5e72d1",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "The bad thing about removing the callback parameter is that these tests no longer have a good way of known whether the reader completed successfully. Do we really not need this anymore?",
        "createdAt" : "2019-11-19T19:50:53Z",
        "updatedAt" : "2019-11-19T22:20:32Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      },
      {
        "id" : "fc4dd294-ef5f-488e-a04d-760256231fbd",
        "parentId" : "0a0ba4c6-46fe-4133-bb41-8d770e5e72d1",
        "authorId" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "body" : "I could be wrong, but isn't it enough to just verify that the call to `ConvertingFutureCallback::get` returned without throwing an exception? Any additional testing logic contained in the callback (such as in https://github.com/apache/kafka/pull/7532/files#diff-d363e0391be734af7583fd6c3a30d77eL256-L260) is retained by examining the offsets returned from that call (such as in https://github.com/apache/kafka/pull/7532/files#diff-d363e0391be734af7583fd6c3a30d77eR247-R248).\r\n\r\nRetaining this kind of API (even if it's completely internal) just for testing purposes doesn't seem like a great idea; I'd prefer to remove it if it's unneeded and perform the testing logic separately. I believe I've accomplished this but if it appears I've missed anything it's not out of the question to leave it as-is for now.",
        "createdAt" : "2019-11-19T22:13:30Z",
        "updatedAt" : "2019-11-19T22:20:32Z",
        "lastEditedBy" : "f1480a85-4082-46f9-89c6-fe7231733b83",
        "tags" : [
        ]
      },
      {
        "id" : "9395f306-f51e-4a4c-8122-c8f5d946ed33",
        "parentId" : "0a0ba4c6-46fe-4133-bb41-8d770e5e72d1",
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "You raise good points about how the existing checks can be done on the result of the method invocation, and since we've mocked the CloseableOffsetStorageReader implementation we do know what we returned. I agree that in general this seemed like a complication that was only used in testing, and that we have not lost any visibility within the tests. Thanks for the quick response.",
        "createdAt" : "2019-11-19T22:25:44Z",
        "updatedAt" : "2019-11-19T22:25:44Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c156e3c79d698a18e193261a812d1cb44f25ff",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +311,315 @@        Map<ByteBuffer, ByteBuffer> offsets = store.get(Arrays.asList(null, TP1_KEY)).get(10000, TimeUnit.MILLISECONDS);\n        assertEquals(TP0_VALUE, offsets.get(null));\n        assertNull(offsets.get(TP1_KEY));\n\n        store.stop();"
  }
]