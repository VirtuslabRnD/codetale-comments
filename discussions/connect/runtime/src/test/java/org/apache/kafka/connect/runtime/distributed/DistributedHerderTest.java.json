[
  {
    "id" : "0de141f4-d9d4-4614-b945-6193babfd0ca",
    "prId" : 6982,
    "prUrl" : "https://github.com/apache/kafka/pull/6982#pullrequestreview-253010899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e33161b3-12f7-4e77-8de4-2cef16d39b0d",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Obviously a pre-existing problem, but we should probably try to avoid brittle expectations like this.",
        "createdAt" : "2019-06-21T20:02:13Z",
        "updatedAt" : "2019-06-21T20:02:13Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9bc0f6d8-e603-4115-a5db-7b1dc04d099d",
        "parentId" : "e33161b3-12f7-4e77-8de4-2cef16d39b0d",
        "authorId" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "body" : "Yeah, my other option would be to accept `any` String as reason, but I felt that the reason is connected with the actual call, so I think the assertion can be a bit specific here. I hope the reason won't change often. If and when it changes we'll have to change this test case too.",
        "createdAt" : "2019-06-21T20:06:11Z",
        "updatedAt" : "2019-06-21T20:06:12Z",
        "lastEditedBy" : "e77724e7-3db9-47d6-b4d8-a865b1d06edc",
        "tags" : [
        ]
      },
      {
        "id" : "2f596572-8b32-4fd2-a371-7468ead8b202",
        "parentId" : "e33161b3-12f7-4e77-8de4-2cef16d39b0d",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "If the reason is important, maybe we should put an enum type behind it or something. Anyway, not a major issue.",
        "createdAt" : "2019-06-21T20:08:58Z",
        "updatedAt" : "2019-06-21T20:08:58Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "87675a5b559a29ea86c096a8e6dd73c814246810",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1443,1447 @@        configBackingStore.refresh(EasyMock.anyLong(), EasyMock.anyObject(TimeUnit.class));\n        EasyMock.expectLastCall().andThrow(new TimeoutException());\n        member.maybeLeaveGroup(EasyMock.eq(\"taking too long to read the log\"));\n        EasyMock.expectLastCall();\n        PowerMock.expectPrivate(herder, \"backoff\", DistributedConfig.WORKER_UNSYNC_BACKOFF_MS_DEFAULT);"
  }
]