[
  {
    "id" : "137205ec-8f49-4f0c-ac8a-296f5ab3c184",
    "prId" : 8699,
    "prUrl" : "https://github.com/apache/kafka/pull/8699#pullrequestreview-419456972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6997412-eafc-4c25-bdef-344be6bb5f8c",
        "parentId" : null,
        "authorId" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "body" : "Maybe a few more tests that test the ConfigDef and AbstractConfig validation:\r\n```\r\n    @Test\r\n    public void testPatternRequiredInConfig() {\r\n        Map<String, String> props = new HashMap<>();\r\n        ConfigException e = assertThrows(ConfigException.class, () -> config(props));\r\n        assertTrue(e.getMessage().contains(\"Missing required configuration \\\"pattern\\\"\"));\r\n    }\r\n\r\n    @Test\r\n    public void testPatternMayNotBeEmptyInConfig() {\r\n        Map<String, String> props = new HashMap<>();\r\n        props.put(\"pattern\", \"\");\r\n        ConfigException e = assertThrows(ConfigException.class, () -> config(props));\r\n        System.out.println(e.getMessage());\r\n        assertTrue(e.getMessage().contains(\"String must be non-empty\"));\r\n    }\r\n\r\n    @Test\r\n    public void testPatternIsValidRegexInConfig() {\r\n        Map<String, String> props = new HashMap<>();\r\n        props.put(\"pattern\", \"[\");\r\n        ConfigException e = assertThrows(ConfigException.class, () -> config(props));\r\n        System.out.println(e.getMessage());\r\n        assertTrue(e.getMessage().contains(\"Invalid regex\"));\r\n    }\r\n\r\n    protected SimpleConfig config(Map<String, String> props) {\r\n        return new SimpleConfig(new TopicNameMatches().config(), props);\r\n    }\r\n```",
        "createdAt" : "2020-05-27T17:47:12Z",
        "updatedAt" : "2020-05-28T08:23:52Z",
        "lastEditedBy" : "145db0de-7396-4643-9a2c-9977e1c6219b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbc89818ce2a9ac9dae9ca02288f9d71b1a851da",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@\npublic class TopicNameMatchesTest {\n\n    @Test\n    public void testPatternRequiredInConfig() {"
  }
]