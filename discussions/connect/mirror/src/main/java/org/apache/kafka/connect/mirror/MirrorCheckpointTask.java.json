[
  {
    "id" : "0344c239-50b5-49e7-a51a-a9ecdc788ec0",
    "prId" : 7577,
    "prUrl" : "https://github.com/apache/kafka/pull/7577#pullrequestreview-321792283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "918bbd5f-bd4b-411c-9760-8067c696d3cc",
        "parentId" : null,
        "authorId" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "body" : "Looks like you forgot to shutdown the scheduler in close()",
        "createdAt" : "2019-11-22T17:49:51Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "tags" : [
        ]
      },
      {
        "id" : "423b2873-c852-4ed7-9f28-3bd55413b712",
        "parentId" : "918bbd5f-bd4b-411c-9760-8067c696d3cc",
        "authorId" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "body" : "done",
        "createdAt" : "2019-11-22T20:29:10Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaa63e38ccee92ba422264ec65806a16d59ac681",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +97,101 @@        idleConsumerGroupsOffset = new HashMap<>();\n        checkpointsPerConsumerGroup = new HashMap<>();\n        scheduler = new Scheduler(MirrorCheckpointTask.class, config.adminTimeout());\n        scheduler.scheduleRepeating(this::refreshIdleConsumerGroupOffset, config.syncGroupOffsetsInterval(),\n                                    \"refreshing idle consumers group offsets at target cluster\");"
  },
  {
    "id" : "24165661-95ef-42ec-a236-e4c874090715",
    "prId" : 7577,
    "prUrl" : "https://github.com/apache/kafka/pull/7577#pullrequestreview-425015048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49b71fd1-7207-4a46-b456-19ff4844d7e1",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "It looks like we describe all groups just to get groups in the `EMPTY` state. Can we use the new `listGroups()`  method introduced in [KIP-518](https://cwiki.apache.org/confluence/display/KAFKA/KIP-518%3A+Allow+listing+consumer+groups+per+state) to only get groups in that specific state?",
        "createdAt" : "2020-06-04T10:49:06Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "720e4e59-b8d6-4a21-9292-7c7423d6d023",
        "parentId" : "49b71fd1-7207-4a46-b456-19ff4844d7e1",
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "On second  though, using `describeConsumerGroups()` may be more predictable in terms on work to do, as you describe only the groups assgined to this task",
        "createdAt" : "2020-06-04T11:55:36Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "de96a349-1d1c-48ab-8e92-f350c13e189f",
        "parentId" : "49b71fd1-7207-4a46-b456-19ff4844d7e1",
        "authorId" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "body" : "great to know that KIP, then I will keep using `describeConsumerGroups()` here",
        "createdAt" : "2020-06-05T05:58:25Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaa63e38ccee92ba422264ec65806a16d59ac681",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +223,227 @@    private void refreshIdleConsumerGroupOffset() {\n        Map<String, KafkaFuture<ConsumerGroupDescription>> consumerGroupsDesc = targetAdminClient\n            .describeConsumerGroups(consumerGroups).describedGroups();\n\n        for (String group : consumerGroups) {"
  },
  {
    "id" : "a00616f7-3481-4468-9c40-c7c18ccad389",
    "prId" : 7577,
    "prUrl" : "https://github.com/apache/kafka/pull/7577#pullrequestreview-437573337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed64fb01-7730-44e1-a530-73e4aae672f8",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "We should also close `targetAdminClient`",
        "createdAt" : "2020-06-25T09:53:14Z",
        "updatedAt" : "2020-06-25T14:49:57Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "45f3b954-c88d-4bed-94c0-add9d737fabd",
        "parentId" : "ed64fb01-7730-44e1-a530-73e4aae672f8",
        "authorId" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "body" : "done ",
        "createdAt" : "2020-06-25T14:50:35Z",
        "updatedAt" : "2020-06-25T14:50:36Z",
        "lastEditedBy" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaa63e38ccee92ba422264ec65806a16d59ac681",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +117,121 @@        Utils.closeQuietly(targetAdminClient, \"target admin client\");\n        Utils.closeQuietly(metrics, \"metrics\");\n        Utils.closeQuietly(scheduler, \"scheduler\");\n        log.info(\"Stopping {} took {} ms.\", Thread.currentThread().getName(), System.currentTimeMillis() - start);\n    }"
  }
]