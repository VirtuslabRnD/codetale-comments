[
  {
    "id" : "b1bb4b77-aa4f-47db-9fb5-176a4d58a188",
    "prId" : 9224,
    "prUrl" : "https://github.com/apache/kafka/pull/9224#pullrequestreview-515164773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42960edb-2ae0-45f1-afeb-d9c8db97837b",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "Why is this field `protected` while `primaryBrokerProps` is `private`?",
        "createdAt" : "2020-10-22T13:20:51Z",
        "updatedAt" : "2020-12-10T15:19:51Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      },
      {
        "id" : "3b142571-7849-4a00-a9c5-0b0e95938613",
        "parentId" : "42960edb-2ae0-45f1-afeb-d9c8db97837b",
        "authorId" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "body" : "because `backupBrokerProps` is referred in `MirrorConnectorsIntegrationSSLTest` ",
        "createdAt" : "2020-10-22T22:30:46Z",
        "updatedAt" : "2020-12-10T15:19:51Z",
        "lastEditedBy" : "351d7027-f17c-4a61-ba87-e59e44faa6e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f57a8c9a494e10811068be1d4f26bbb6816292ee",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@    \n    protected Properties primaryBrokerProps = new Properties();\n    protected Properties backupBrokerProps = new Properties();\n    protected Map<String, String> primaryWorkerProps = new HashMap<>();\n    protected Map<String, String> backupWorkerProps = new HashMap<>(); "
  },
  {
    "id" : "92230382-840b-4d0b-8b2c-05d73d26b923",
    "prId" : 9224,
    "prUrl" : "https://github.com/apache/kafka/pull/9224#pullrequestreview-543832387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97a97f47-76b4-404c-9bea-39733144e852",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "This constant is unused. Should we use it instead of hardcoding `3` below when we create connect workers?",
        "createdAt" : "2020-12-03T10:52:57Z",
        "updatedAt" : "2020-12-10T15:19:51Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "f57a8c9a494e10811068be1d4f26bbb6816292ee",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@    private static final int RECORD_CONSUME_DURATION_MS = 20_000;\n    private static final int OFFSET_SYNC_DURATION_MS = 30_000;\n    private static final int NUM_WORKERS = 3;\n    private static final Duration CONSUMER_POLL_TIMEOUT_MS = Duration.ofMillis(500);\n    protected static final String PRIMARY_CLUSTER_ALIAS = \"primary\";"
  },
  {
    "id" : "b607076f-7b2a-4005-8a4d-3ce3ac67b100",
    "prId" : 9224,
    "prUrl" : "https://github.com/apache/kafka/pull/9224#pullrequestreview-547707896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "469b9ac0-57dc-41c3-8b2b-f6e847ab1641",
        "parentId" : null,
        "authorId" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "body" : "We can use `Config.get()` to directly access the configuration we want, see https://kafka.apache.org/26/javadoc/org/apache/kafka/clients/admin/Config.html#get-java.lang.String-",
        "createdAt" : "2020-12-08T23:19:44Z",
        "updatedAt" : "2020-12-10T15:19:51Z",
        "lastEditedBy" : "d31db46e-de6d-4fea-8dc5-6f7b17b636be",
        "tags" : [
        ]
      }
    ],
    "commit" : "f57a8c9a494e10811068be1d4f26bbb6816292ee",
    "line" : 482,
    "diffHunk" : "@@ -1,1 +480,484 @@\n        DescribeConfigsResult configsResult = client.describeConfigs(cr);\n        Config allConfigs = (Config) configsResult.all().get().values().toArray()[0];\n        return allConfigs.get(configName).value();\n    }"
  },
  {
    "id" : "8a4c1ba1-9e34-4b0d-b6ca-c83f0c2f6a66",
    "prId" : 10221,
    "prUrl" : "https://github.com/apache/kafka/pull/10221#pullrequestreview-692481502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d945e8e-8119-4bb8-a454-ec1b5a2bc442",
        "parentId" : null,
        "authorId" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "body" : "Perhaps it's overkill, but maybe we should also assert that offset syncs topic doesn't exist in the source cluster here at the end of the test?",
        "createdAt" : "2021-06-25T06:23:31Z",
        "updatedAt" : "2021-06-25T06:24:03Z",
        "lastEditedBy" : "491bcd91-bc8d-4f54-b5fd-d6c7be5e8693",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f3b45e9540800e4f0a4fdeb28539eeb783225e4",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +497,501 @@        }, 30_000,\n            \"Unable to find checkpoints for \" + PRIMARY_CLUSTER_ALIAS + \"test-topic-1\"\n        );\n\n        // Ensure no offset-syncs topics have been created on the primary cluster"
  },
  {
    "id" : "1daf2065-86d5-4caa-9f5b-ac57bf3ebdae",
    "prId" : 10652,
    "prUrl" : "https://github.com/apache/kafka/pull/10652#pullrequestreview-654802946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0b468c3-ab53-4443-8805-8bd21d6808cc",
        "parentId" : null,
        "authorId" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "body" : "whoops, bug here!",
        "createdAt" : "2021-05-07T19:25:50Z",
        "updatedAt" : "2021-05-07T19:25:50Z",
        "lastEditedBy" : "d874be1c-ef19-48b0-9fa7-2f43a8f96d37",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9edd324c79ece1d405e1eaccef34ef16fa557d0",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +186,190 @@        waitForTopicCreated(primary, \"mm2-configs.backup.internal\");\n\n        backup.start();\n        backup.assertions().assertAtLeastNumWorkersAreUp(NUM_WORKERS,\n                \"Workers of \" + BACKUP_CLUSTER_ALIAS + \"-connect-cluster did not start in time.\");"
  }
]