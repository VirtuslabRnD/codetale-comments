[
  {
    "id" : "2d490a4c-7835-4dd8-80f9-3443243b1273",
    "prId" : 12666,
    "prUrl" : "https://github.com/numpy/numpy/pull/12666#pullrequestreview-189573253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2810a7b8-ab47-4e60-a058-4d428202be29",
        "parentId" : null,
        "authorId" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "body" : "I liked @ahaldane's way of doing this with a uniform distribution:\r\n```\r\nbase_array = np.random.rand(array_size)\r\nbase_array[base_array < percent_nans / 100.] = np.nan\r\nself.arr = base_array\r\n```",
        "createdAt" : "2019-01-05T00:43:39Z",
        "updatedAt" : "2019-01-05T21:43:41Z",
        "lastEditedBy" : "1794b506-aeff-4fdc-9354-7fd193f97b33",
        "tags" : [
        ]
      }
    ],
    "commit" : "08a231900d7fed41f19b6d1416266e446a178a5d",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +69,73 @@    def setup(self, array_size, percent_nans):\n        np.random.seed(123)\n        # produce a randomly shuffled array with the\n        # approximate desired percentage np.nan content\n        base_array = np.random.uniform(size=array_size)"
  }
]