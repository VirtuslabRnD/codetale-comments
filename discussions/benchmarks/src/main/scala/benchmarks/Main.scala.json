[
  {
    "id" : "fc2ff76b-aa50-43a7-b2b8-3132884011ff",
    "prId" : 364,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/364#pullrequestreview-11161960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd6f0359-f317-409a-a88d-04c857f73eff",
        "parentId" : null,
        "authorId" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "body" : "???\n",
        "createdAt" : "2016-11-15T14:19:40Z",
        "updatedAt" : "2016-11-15T14:24:33Z",
        "lastEditedBy" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "tags" : [
        ]
      },
      {
        "id" : "4b2e5de3-1eb6-46bb-92e0-9299b28abf76",
        "parentId" : "fd6f0359-f317-409a-a88d-04c857f73eff",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "I did notice that one before. ",
        "createdAt" : "2016-12-02T13:35:29Z",
        "updatedAt" : "2016-12-02T13:35:29Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "d3ab5c77-23d3-4ff5-89b3-986982d24d9b",
        "parentId" : "fd6f0359-f317-409a-a88d-04c857f73eff",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "\\* did not",
        "createdAt" : "2016-12-02T13:40:44Z",
        "updatedAt" : "2016-12-02T13:40:50Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "78489fbac8f829c74faa3744c0e1240b75b36be0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@\n        // Sleep between test to avoid error (???)\n        Thread.sleep(50)\n\n        result.success"
  },
  {
    "id" : "4d451923-1162-4bd0-832d-fe79f3db0584",
    "prId" : 364,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/364#pullrequestreview-8606157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7b54ce3-4ae4-4e9d-9b90-d4d5df0f874e",
        "parentId" : null,
        "authorId" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "body" : "timeEstimate can be negative here as you aren't using monotonic clock.\n",
        "createdAt" : "2016-11-15T14:22:28Z",
        "updatedAt" : "2016-11-15T14:24:33Z",
        "lastEditedBy" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "tags" : [
        ]
      }
    ],
    "commit" : "78489fbac8f829c74faa3744c0e1240b75b36be0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@      benchmarks forall { bench =>\n        // Run once to estimate how long this benchmark takes\n        val timeEstimate = bench.estimateTime()\n        val iterations   = (nsPerBenchmark / timeEstimate).toInt\n"
  },
  {
    "id" : "32d053ff-45df-41e7-9d21-7456580fa524",
    "prId" : 364,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/364#pullrequestreview-11161491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0098d42-6e8f-44bc-9e21-238918b09ea9",
        "parentId" : null,
        "authorId" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "body" : "I'd propose to simply run this main class with `perf`.\nEg, like this `perf -r 1000 -d stat ./Main`.\n",
        "createdAt" : "2016-11-15T14:24:07Z",
        "updatedAt" : "2016-11-15T14:24:33Z",
        "lastEditedBy" : "7f86f120-7838-4bea-9217-738bb0d42f82",
        "tags" : [
        ]
      },
      {
        "id" : "75fc9ec0-581c-416a-8a71-61d112ea3359",
        "parentId" : "b0098d42-6e8f-44bc-9e21-238918b09ea9",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "We really want it to work on Mac and eventually on Windows. Loss of precision compared to perf is unfortunate but we can't do anything about it. ",
        "createdAt" : "2016-12-02T13:37:38Z",
        "updatedAt" : "2016-12-02T13:37:38Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "78489fbac8f829c74faa3744c0e1240b75b36be0",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@  val nsPerBenchmark = 3e9.toLong\n\n  def main(args: Array[String]): Unit = {\n\n    val benchmarks = Discover.discovered"
  }
]