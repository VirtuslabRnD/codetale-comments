[
  {
    "id" : "5642d19d-ae4f-4492-8c64-f6835e7b7750",
    "prId" : 177,
    "prUrl" : "https://github.com/scalameta/metals/pull/177#pullrequestreview-88684680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23a894a3-a523-4f18-90ff-4a27505810ac",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Aha, this makes more sense!",
        "createdAt" : "2018-01-14T14:38:38Z",
        "updatedAt" : "2018-01-14T14:38:43Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e518e335838919b39f0ef7103b96629298e6c706",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@      require(h.get(ContentLen).isEmpty)\n\n      val json = msg.asJson.mapObject(_.add(\"jsonrpc\", \"2.0\".asJson))\n      val str = json.noSpaces\n      val contentBytes = str.getBytes(StandardCharsets.UTF_8)"
  },
  {
    "id" : "19c24347-2bbd-4336-af6e-588e9e63c827",
    "prId" : 172,
    "prUrl" : "https://github.com/scalameta/metals/pull/172#pullrequestreview-87948903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3ae796c-b740-496c-b5e0-2bf56a154f20",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Note that this changes the logger name: `LazyLogging` instantiates a logger using `getClass.getName` as the name, so now this logger won't be called `org.langmeta.jsonrpc.MessageWriter`, but something else depending on the caller.\r\n\r\nIf we move to file/position kind of logging instead this is won't be an issue, but for now this will lead to inconsistent names in the logs.\r\n\r\nA possible alternative is to explicitly do\r\n\r\n```scala\r\nval logger = Logger(classOf[MessageWriter])\r\n```\r\n\r\non the call site. It's not ideal, but at least it's consistent.",
        "createdAt" : "2018-01-10T18:40:11Z",
        "updatedAt" : "2018-01-10T18:41:40Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "64fe1d00-6ee4-499f-b856-7fb4eb4a4031",
        "parentId" : "e3ae796c-b740-496c-b5e0-2bf56a154f20",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I think that\r\n```scala\r\nval logger = Logger(classOf[MessageWriter])\r\n```\r\nwill use LoggerFactory which breaks the integration in bloop. I agree this change makes debugging quite bad, but I personally use `pprint` during development. I would love to switch to a file:line output format where this won't matter, but that would mean moving to another api like airframe-log (which is not sl4j backed). What do you propose we do?",
        "createdAt" : "2018-01-10T19:03:32Z",
        "updatedAt" : "2018-01-10T19:03:32Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "9b392fc1-45e1-4742-9d24-70c9694caeed",
        "parentId" : "e3ae796c-b740-496c-b5e0-2bf56a154f20",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "How does `LoggerFactory` break the integration in bloop? `LazyLogging` uses `LoggerFactory` too:\r\n\r\nhttps://github.com/typesafehub/scala-logging/blob/953ebc3dba7d2bb01317e6311d08481370ce9824/src/main/scala/com/typesafe/scalalogging/Logging.scala#L28",
        "createdAt" : "2018-01-10T19:05:34Z",
        "updatedAt" : "2018-01-10T19:05:54Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "ea8ee02a-aabe-4c8c-b069-1ba27a24a89b",
        "parentId" : "e3ae796c-b740-496c-b5e0-2bf56a154f20",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "bloop needs a way to use the jsonrpc API without triggering LoggerFactory, LazyLogging is behind a lazy val so if it's never used then LoggerFactory never gets triggered.",
        "createdAt" : "2018-01-10T19:16:19Z",
        "updatedAt" : "2018-01-10T19:16:19Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd4724d11b332145fac1ee90a6b0dffec98f69fd",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +21,25 @@ * @note The header part is defined to be ASCII encoded, while the content part is UTF8.\n */\nclass MessageWriter(out: OutputStream, logger: Logger) {\n  private val ContentLen = \"Content-Length\"\n"
  }
]