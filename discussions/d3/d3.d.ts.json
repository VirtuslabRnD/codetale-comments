[
  {
    "id" : "59a385fc-e1b9-4689-80f9-fdc0f54cc318",
    "prId" : 770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2476a6c-2f73-4189-bbfb-1f9eb05ca155",
        "parentId" : null,
        "authorId" : "d38daf04-f8a0-4207-865c-b7d0be19f73c",
        "body" : "Made the change and fixed the test (see comment in `d3-test.js`).\n",
        "createdAt" : "2013-07-14T20:42:07Z",
        "updatedAt" : "2013-07-14T20:42:07Z",
        "lastEditedBy" : "d38daf04-f8a0-4207-865c-b7d0be19f73c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7525e6f5d4ffe8126a7ebf1cb662fbb2b6041b17",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +756,760 @@\n    export interface Nest {\n        key(keyFunction: (data: any, index: number) => string): Nest;\n        sortKeys(comparator: (d1: any, d2: any) => number): Nest;\n        sortValues(comparator: (d1: any, d2: any) => number): Nest;"
  },
  {
    "id" : "40769ec2-c511-451f-bb12-b29e5dd17e0d",
    "prId" : 2192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d706f6fc-2ec2-489a-a83d-7dbfbb583aaa",
        "parentId" : null,
        "authorId" : "f3c8ccd2-e54b-42a1-ae37-6a54099a0b17",
        "body" : "gamma value is an optional parameter.\n",
        "createdAt" : "2014-05-13T20:46:06Z",
        "updatedAt" : "2014-05-13T20:46:06Z",
        "lastEditedBy" : "f3c8ccd2-e54b-42a1-ae37-6a54099a0b17",
        "tags" : [
        ]
      }
    ],
    "commit" : "4af3ac7faecea98bd2595daeac30a9698099abaa",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1465,1469 @@            */\n            darker(k?: number): Color;\n            /**\n            * convert the color to a string.\n            */"
  },
  {
    "id" : "34c9ada3-472e-48d3-9c2a-7f5266e80996",
    "prId" : 2543,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc00ffc-bb0d-4a4e-ab9a-8ed76a3bc6a2",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : ":+1: same as `keys`\n",
        "createdAt" : "2014-07-22T01:17:48Z",
        "updatedAt" : "2014-08-05T00:06:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e3fadf93917e5851362c667a327fe716ce1321",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +244,248 @@        * @param map Array of objects to get the values from\n        */\n        values(map: any): any[];\n        /**\n        * List the key-value entries of an associative array."
  },
  {
    "id" : "3dbdcd34-ed31-47ee-8131-7665a38c022f",
    "prId" : 2543,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9ca6e5b-58ec-4b59-a72c-2e5ddd4583ca",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "would prefer function overloading for this instead of inline definition since it allows others to extend. But not really a use case for getter/setter so all good :+1: \n",
        "createdAt" : "2014-07-22T01:20:07Z",
        "updatedAt" : "2014-08-05T00:06:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e3fadf93917e5851362c667a327fe716ce1321",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1733,1737 @@                (): number;\n                (value: number): Axis;\n            }\n            tickFormat(formatter: (value: any) => string): Axis;\n            nice(count?: number): Axis;"
  },
  {
    "id" : "39ffda8e-1934-4a61-92e3-80121003710a",
    "prId" : 2711,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a18eca33-c1b5-44cf-b3d8-a1f1437eab57",
        "parentId" : null,
        "authorId" : "8afec843-0b71-4ba8-83b5-f3f930174766",
        "body" : "the d3 api claims that set only operates on arrays of strings and only accepts string arguments to `add`. however, this interface matches its actual present behavior\n",
        "createdAt" : "2014-08-23T04:21:18Z",
        "updatedAt" : "2014-08-23T04:21:18Z",
        "lastEditedBy" : "8afec843-0b71-4ba8-83b5-f3f930174766",
        "tags" : [
        ]
      }
    ],
    "commit" : "039152e617b8b254dbc151f76a584e871caad90c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +860,864 @@        remove(value: T): boolean;\n        values(): string[];\n        forEach(func: (value: string) => void ): void;\n        empty(): boolean;\n        size(): number;"
  },
  {
    "id" : "3e5f4e86-883e-45f9-a685-ef15874943c7",
    "prId" : 4005,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c087d4ff-d0e7-4f7c-bc19-105447e01f06",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "I think altKey, ctrlKey and metaKey are not optional. why is this optional?\n",
        "createdAt" : "2015-04-02T15:56:46Z",
        "updatedAt" : "2015-04-02T15:56:46Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      },
      {
        "id" : "ed250e56-ac80-4e53-8724-9c5469edc1b8",
        "parentId" : "c087d4ff-d0e7-4f7c-bc19-105447e01f06",
        "authorId" : "226df15a-9b11-4712-ad09-56fef1247d1e",
        "body" : "I think they are for a couple of reasons:\n1. https://github.com/mbostock/d3/wiki/Selections#d3_event says that \"The d3.event object is a [link DOM event](https://developer.mozilla.org/en-US/docs/Web/API/Event) and implements the standard event fields\". To my understanding that means that the current event can be any of the listed events, but not necessary any particular one of them.\n2. They are also optional even when a keyboard event happens. For example, when a keypress of a happens, d3.event.altKey is undefined.\n\nIdeally, I think the event should be a type union of all the possible events (since that's essentially what it is).\n",
        "createdAt" : "2015-04-02T17:20:56Z",
        "updatedAt" : "2015-04-02T17:20:56Z",
        "lastEditedBy" : "226df15a-9b11-4712-ad09-56fef1247d1e",
        "tags" : [
        ]
      },
      {
        "id" : "282cb2bf-a39c-4df9-9a8b-b69f6d384f0f",
        "parentId" : "c087d4ff-d0e7-4f7c-bc19-105447e01f06",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "umm.. okey.\n",
        "createdAt" : "2015-04-07T14:08:05Z",
        "updatedAt" : "2015-04-07T14:08:05Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a29d46fc780188fa5af890c17e87ce5d85ec04",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +60,64 @@        altKey?: boolean;\n        ctrlKey?: boolean;\n        metaKey?: boolean;\n        type: string;\n    }"
  },
  {
    "id" : "ee93a73b-a1c0-4855-87e4-39987c6ab5ca",
    "prId" : 4623,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1df2935e-e603-451e-9409-52b7b612ec1a",
        "parentId" : null,
        "authorId" : "4fc2d1b8-aff1-41d6-984a-b6006d3b108f",
        "body" : "any reason why is this private?\n",
        "createdAt" : "2016-08-04T19:02:40Z",
        "updatedAt" : "2016-08-04T19:02:40Z",
        "lastEditedBy" : "4fc2d1b8-aff1-41d6-984a-b6006d3b108f",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf09bf76ceed90346e23e70815e9b2a99bc21137",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +921,925 @@     * Interface for any and all d3 events.\n     */\n    interface Event extends KeyboardEvent, MouseEvent {\n    }\n"
  }
]