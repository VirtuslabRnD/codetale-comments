[
  {
    "id" : "59a385fc-e1b9-4689-80f9-fdc0f54cc318",
    "prId" : 770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2476a6c-2f73-4189-bbfb-1f9eb05ca155",
        "parentId" : null,
        "authorId" : "d38daf04-f8a0-4207-865c-b7d0be19f73c",
        "body" : "Made the change and fixed the test (see comment in `d3-test.js`).\n",
        "createdAt" : "2013-07-14T20:42:07Z",
        "updatedAt" : "2013-07-14T20:42:07Z",
        "lastEditedBy" : "d38daf04-f8a0-4207-865c-b7d0be19f73c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7525e6f5d4ffe8126a7ebf1cb662fbb2b6041b17",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +756,760 @@\n    export interface Nest {\n        key(keyFunction: (data: any, index: number) => string): Nest;\n        sortKeys(comparator: (d1: any, d2: any) => number): Nest;\n        sortValues(comparator: (d1: any, d2: any) => number): Nest;"
  },
  {
    "id" : "40769ec2-c511-451f-bb12-b29e5dd17e0d",
    "prId" : 2192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d706f6fc-2ec2-489a-a83d-7dbfbb583aaa",
        "parentId" : null,
        "authorId" : "f3c8ccd2-e54b-42a1-ae37-6a54099a0b17",
        "body" : "gamma value is an optional parameter.\n",
        "createdAt" : "2014-05-13T20:46:06Z",
        "updatedAt" : "2014-05-13T20:46:06Z",
        "lastEditedBy" : "f3c8ccd2-e54b-42a1-ae37-6a54099a0b17",
        "tags" : [
        ]
      }
    ],
    "commit" : "4af3ac7faecea98bd2595daeac30a9698099abaa",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1465,1469 @@            */\n            darker(k?: number): Color;\n            /**\n            * convert the color to a string.\n            */"
  },
  {
    "id" : "34c9ada3-472e-48d3-9c2a-7f5266e80996",
    "prId" : 2543,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc00ffc-bb0d-4a4e-ab9a-8ed76a3bc6a2",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : ":+1: same as `keys`\n",
        "createdAt" : "2014-07-22T01:17:48Z",
        "updatedAt" : "2014-08-05T00:06:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e3fadf93917e5851362c667a327fe716ce1321",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +244,248 @@        * @param map Array of objects to get the values from\n        */\n        values(map: any): any[];\n        /**\n        * List the key-value entries of an associative array."
  },
  {
    "id" : "3dbdcd34-ed31-47ee-8131-7665a38c022f",
    "prId" : 2543,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9ca6e5b-58ec-4b59-a72c-2e5ddd4583ca",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "would prefer function overloading for this instead of inline definition since it allows others to extend. But not really a use case for getter/setter so all good :+1: \n",
        "createdAt" : "2014-07-22T01:20:07Z",
        "updatedAt" : "2014-08-05T00:06:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e3fadf93917e5851362c667a327fe716ce1321",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1733,1737 @@                (): number;\n                (value: number): Axis;\n            }\n            tickFormat(formatter: (value: any) => string): Axis;\n            nice(count?: number): Axis;"
  }
]