[
  {
    "id" : "e5e0e2cf-0d61-4c82-8b11-bc700383ad68",
    "prId" : 7915,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3a67d6b-5bc6-4137-b1a3-4521c34bd88d",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "The `cp` bit seems to be necessary because we run under a non-root user in the container, and they therefore don't get any write access on the mounted volume (where they would otherwise write the .daml directory).",
        "createdAt" : "2020-11-06T14:50:39Z",
        "updatedAt" : "2020-11-06T14:50:39Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "0ef3fa39-985a-4765-96ed-2add9521e079",
        "parentId" : "c3a67d6b-5bc6-4137-b1a3-4521c34bd88d",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Can we clone in the container to avoid that?",
        "createdAt" : "2020-11-06T14:52:45Z",
        "updatedAt" : "2020-11-06T14:53:07Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c93b33f9-ea52-4296-8d38-d2f89f419865",
        "parentId" : "c3a67d6b-5bc6-4137-b1a3-4521c34bd88d",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "That was my first though, but `git` is not installed in the container. Given that we only recommend this for CI use-cases \"where image caching makes sense\", starting with an `apt install` seems weird. Also the default user is not root so doesn't actually have apt rights. This copy thing seemed like a lesser evil.\r\n\r\nAnd if you're wondering why I'm changing this at all, the existing command in the current description relies on executing a single file directly without a project, which worked fine for scenarios but hits a \"Script: not found\" error now that we need a project file to specify script as an explicit dependency. Does `daml test` have flags to add dependencies? Would we recommend that over copying? I imagine it wouldn't scale very well with additional dependencies over time, but perhaps daml project dependencies don't change that much?",
        "createdAt" : "2020-11-06T15:23:37Z",
        "updatedAt" : "2020-11-06T15:23:37Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "4cd3cb01-7f58-40de-b35a-b871b41626f2",
        "parentId" : "c3a67d6b-5bc6-4137-b1a3-4521c34bd88d",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m fine with copying, just wanted to understand if there was an easy way to avoid it but messing around with dependencies, `apt` or something else seems worse so let’s stick to that.",
        "createdAt" : "2020-11-06T15:25:47Z",
        "updatedAt" : "2020-11-06T15:25:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "396261b0d664289307481d1cfa40f7db9d549bfa",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +44,48 @@* Run DAML scenarios:\n  ```\n  DOCKER_CONTENT_TRUST=1 docker run --rm -it -v $PWD:/data digitalasset/daml-sdk:$SDK_VERSION bash -c \"cd \\$(mktemp -d) && cp -r /data/* ./ && DAML_SDK_VERSION=$SDK_VERSION daml test\"\n  ```\n"
  }
]