[
  {
    "id" : "5c703028-969e-499a-a9e9-1c3db18012cf",
    "prId" : 18437,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18437#pullrequestreview-78619837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cbec6a1-b86d-41a7-88f3-b28517e20a50",
        "parentId" : null,
        "authorId" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "body" : "I added a `*` in the end because without it this regexp will just wait for stdin (unless linux version works differently. I tried it on mac).",
        "createdAt" : "2017-11-22T23:30:43Z",
        "updatedAt" : "2017-11-23T20:37:00Z",
        "lastEditedBy" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "tags" : [
        ]
      },
      {
        "id" : "84e274d3-9dbe-4e97-aee2-866171e6e006",
        "parentId" : "6cbec6a1-b86d-41a7-88f3-b28517e20a50",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "+1. On Linux, it will grep all directories without the `*`, but for consistency adding `*` or `.` is good.  ",
        "createdAt" : "2017-11-23T02:49:55Z",
        "updatedAt" : "2017-11-23T20:37:00Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa936b8e74dcc71ac20d28fcc2fd94bf6c11fd78",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +91,95 @@    # Check the following functions:\n    # any(), all(), sum(), max(), min(), list(), dict(), set(), frozenset(), tuple(), str.join()\n    grep -R --include=\"*.py*\" -E \"[^_](any|all|sum|max|min|list|dict|set|frozenset|tuple|join)\\(\\[.* for .* in .*\\]\\)\" *\n\n    if [ $? = \"0\" ]; then"
  },
  {
    "id" : "3bb479c2-9987-45a4-be8f-a30c4aff387f",
    "prId" : 19292,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19292#pullrequestreview-90213341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ed1b3c7-27b9-4401-a69b-99e65b1473fd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this rule includes too many things, you want to *only* accept ``from pandas.core import common as com``. anything else involving ``pandas.core.common`` should error",
        "createdAt" : "2018-01-19T11:10:59Z",
        "updatedAt" : "2018-01-19T19:17:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4330e26e-931e-43a5-930f-a57060c159e3",
        "parentId" : "1ed1b3c7-27b9-4401-a69b-99e65b1473fd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is tough to do with grep since there are things like `sys.modules['pandas.core.common']`, `warnings.warn(\"pandas.core.common.{t} is deprecated`, `# the pandas.core.common introspectors`.  Even if I string together a workable grep command, maintaining it will be a PITA.  I think the 1-line 98% solution is the way to go on this one.",
        "createdAt" : "2018-01-19T19:06:55Z",
        "updatedAt" : "2018-01-19T19:17:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7872f332794b082ae70e6b937697b0e7e3abb86d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +95,99 @@    # of `import pandas.core.common as com`\n    echo \"Check for non-standard imports\"\n    grep -R --include=\"*.py*\" -E \"from pandas.core.common import \" pandas\n    if [ $? = \"0\" ]; then\n        RET=1"
  }
]