[
  {
    "id" : "11640640-484b-44ce-8a21-9f1ff3eb322b",
    "prId" : 8215,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b1a75fc-0549-4477-b9a7-b28af7c77afa",
        "parentId" : null,
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "@garyverhaegen-da i think the git diff bombed.  i did the more crude dry run git add because that seemed to work more reliably on a big diff\r\n\r\n```/tmp/tmp.O5s1Eh6hgk: line 18: branch: unbound variable\r\n\r\n##[error]Bash exited with code '1'.\r\n```",
        "createdAt" : "2020-12-09T15:04:59Z",
        "updatedAt" : "2020-12-09T23:07:26Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1884464ad7b052b424a22949e76a9aa039c04d25",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +269,273 @@\n          tr -d '\\015' <*_Black_Duck_Notices_Report.txt | grep -v digital-asset_daml >NOTICES\n          if git diff --exit-code -- NOTICES; then\n              echo \"NOTICES file already up-to-date.\"\n          else"
  },
  {
    "id" : "7e97d0a2-d283-4cb6-bf3b-48848e34b74f",
    "prId" : 8161,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd409e7c-f4e6-4748-aa6f-0a896529df06",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we only fail here but not on the Haskell dependencies in the first step?",
        "createdAt" : "2020-12-04T08:10:01Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "8c446d20-73ba-4634-abc8-dbe3e83b0b02",
        "parentId" : "dd409e7c-f4e6-4748-aa6f-0a896529df06",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "This is after part 2 which will return these failures for the entirety of things (inclusive of part 1 haskell failures, if there are any).  it's more like a 2 stage commit style scan",
        "createdAt" : "2020-12-04T21:13:57Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "ec85e8cf-5661-43e0-96ea-c48bcc72944a",
        "parentId" : "dd409e7c-f4e6-4748-aa6f-0a896529df06",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "What exactly makes the second run picks up the results from the first one, i.e., how is information passed between them? I couldn’t find any docs for how this works.",
        "createdAt" : "2020-12-07T08:02:54Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7980d8a33e1229ddb699e3353156e463060404",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +252,256 @@          --detect.detector.search.exclusion.paths=language-support/ts/codegen/tests/ts,language-support/ts,language-support/scala/examples/iou-no-codegen,language-support/scala/examples/quickstart-scala,docs/source/app-dev/bindings-java/code-snippets,docs/source/app-dev/bindings-java/quickstart/template-root,language-support/scala/examples/quickstart-scala,language-support/scala/examples/iou-no-codegen \\\n          --detect.cleanup=false \\\n          --detect.policy.check.fail.on.severities=MAJOR,CRITICAL,BLOCKER \\\n          --detect.notices.report=true \\\n          --detect.cleanup.bdio.files=true \\"
  },
  {
    "id" : "d0253e11-b441-4226-8dbd-d2b750f375fe",
    "prId" : 8161,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "907ee0ed-9a72-4882-bc9c-d1fcdc14cf99",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we need a notices report here? From the docs it sounds like this just creates a file and we never read that file or store it?",
        "createdAt" : "2020-12-04T08:12:52Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e15ef6a8-af73-4817-bfe3-c3316f80b2eb",
        "parentId" : "907ee0ed-9a72-4882-bc9c-d1fcdc14cf99",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "setting this to true ensures that the haskell dependency processing completes before pressing on to scan of everything else in the part 2 scan",
        "createdAt" : "2020-12-04T21:06:57Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7980d8a33e1229ddb699e3353156e463060404",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +231,235 @@          --detect.bazel.target=//... \\\n          --detect.bazel.dependency.type=haskell_cabal_library \\\n          --detect.notices.report=true \\\n          --detect.report.timeout=1500\n        displayName: 'Blackduck Haskell Scan'"
  },
  {
    "id" : "44a5e4be-b1b9-4d21-814a-05fbdde715bd",
    "prId" : 8161,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Should we checkout master here? Otherwise, given the very time-dependent nature of this test, this will make rerunning old commits pretty much impossible.",
        "createdAt" : "2020-12-04T10:11:15Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "dae40f28-ccae-4c92-9e02-220c65e0abff",
        "parentId" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m confused, daily compat only runs on master?",
        "createdAt" : "2020-12-04T10:12:22Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ff613e80-3471-41a0-9bf9-6b925fe18bc1",
        "parentId" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I mean `git fetch && git checkout origin/master`, because scanning for outdated deps in older commits makes no sense.",
        "createdAt" : "2020-12-04T11:05:58Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "bb131b23-5c29-43c6-87f4-ee4b760da65c",
        "parentId" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ah I see, seems sensible to me.",
        "createdAt" : "2020-12-04T11:37:50Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "79616352-0981-440d-9330-e74f674510a1",
        "parentId" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "@garyverhaegen-da not sure we want to force this though -- shouldn't we leave it to run on the branch in play, also to be able to run on branches prior to master if we need to make changes or tweaks to the script?",
        "createdAt" : "2020-12-04T21:12:35Z",
        "updatedAt" : "2020-12-07T18:59:18Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "a4ac5f21-549c-4a26-a878-e18ebba1f452",
        "parentId" : "150658e4-7b92-4355-9a4c-aaf3ea1ea19a",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "This is not running on any branch at all, this is a daily run on master.",
        "createdAt" : "2020-12-09T10:43:47Z",
        "updatedAt" : "2020-12-09T10:43:48Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7980d8a33e1229ddb699e3353156e463060404",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +224,228 @@      - bash: |\n          set -euo pipefail\n          eval \"$(./dev-env/bin/dade-assist)\"\n          bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) \\\n          ci-build digital-asset_daml master \\"
  },
  {
    "id" : "cdc220f1-dde9-4cec-adc5-1ab546fe0e13",
    "prId" : 7543,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39809aba-8556-4a73-b7f6-5d3a111f4f75",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":grin: (sorry couldn’t help smiling when I saw this)",
        "createdAt" : "2020-10-01T13:47:19Z",
        "updatedAt" : "2020-10-01T16:58:50Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "70cb469079e3f14d39f16178cc8d583f4009b1c4",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +208,212 @@              cd \"$VERSION\"\n              PIDS=\"\"\n              for ass in $(seq 1 $(echo \"$RELEASES\" | jq \".[$i-1].assets | length\")); do\n                  {\n                      wget --quiet \"$(echo \"$RELEASES\" | jq -r \".[$i-1].assets[$ass-1].browser_download_url\")\" &"
  },
  {
    "id" : "f0d13db1-7140-4e34-a0bd-0b1fb2772059",
    "prId" : 7406,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c227c77e-4bff-4a90-9f0d-6ce6ad48190e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "@garyverhaegen-da what exactly does the buildid buy us? iirc Azure GCs old builds pretty quickly so whatever information in there seems to be lost fairly quickly.",
        "createdAt" : "2020-09-16T15:53:26Z",
        "updatedAt" : "2020-09-16T15:54:14Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "6be5001f-5c08-4a1f-a177-8b938cb7d40c",
        "parentId" : "c227c77e-4bff-4a90-9f0d-6ce6ad48190e",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "It serves the same purpose as the `0` we have in version numbers for that segment: uniqueness. It seems very plausible we'll run the daily tests on the same commit multiple times (say, over the weekend).",
        "createdAt" : "2020-09-16T16:03:43Z",
        "updatedAt" : "2020-09-16T16:03:43Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "a2f43935-3555-45fd-9e69-979201ed8f37",
        "parentId" : "c227c77e-4bff-4a90-9f0d-6ce6ad48190e",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Thanks for the explanation!",
        "createdAt" : "2020-09-16T16:11:38Z",
        "updatedAt" : "2020-09-16T16:11:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "bea66475-ec80-4cf2-9966-37709a200528",
        "parentId" : "c227c77e-4bff-4a90-9f0d-6ce6ad48190e",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "However I would just keep the last perf test results archive in this case.",
        "createdAt" : "2020-09-16T16:13:01Z",
        "updatedAt" : "2020-09-16T16:13:01Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "0392bf27-f3e5-41f1-af49-ca05a7094558",
        "parentId" : "c227c77e-4bff-4a90-9f0d-6ce6ad48190e",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "We're talking ~100kb per run, I think we can afford a few extra ones. More data seems better in general, and multiple runs of the same code gives us some way to assess reproducibility.",
        "createdAt" : "2020-09-16T20:12:10Z",
        "updatedAt" : "2020-09-16T20:12:10Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f19ed1c07c886a4d7b7a6b5c4a25bdbf8055037",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +156,160 @@          JWT=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJmb29iYXIiLCJhY3RBcyI6WyJBbGljZSJdfX0.VdDI96mw5hrfM5ZNxLyetSVwcD7XtLT4dIdHIOa9lcU\"\n\n          START=$(git log -n1 --format=%cd --date=format:%Y%m%d).$(git rev-list --count HEAD).$(Build.BuildId).$(git log -n1 --format=%h --abbrev=8)\n          REPORT_ID=\"http_json_perf_results_${START}\"\n          OUT=\"$(Build.StagingDirectory)/${REPORT_ID}\""
  },
  {
    "id" : "8b57e858-32d7-4ab0-96e4-e636931ebecc",
    "prId" : 6130,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "859e8c2f-6e6b-4eae-a475-2e6875d0b511",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "```suggestion\r\n```\r\nYou're not using that library.",
        "createdAt" : "2020-12-03T17:27:23Z",
        "updatedAt" : "2020-12-03T17:27:23Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "0204735049a6c660664e8dbc779b878df5a58e16",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +221,225 @@      - template: ../bash-lib.yml\n        parameters:\n          var_name: bash_lib\n      - bash: ./build.sh \"_$(uname)\"\n        displayName: 'Build'"
  },
  {
    "id" : "cebabc32-0283-4831-bdc3-a66912c386e4",
    "prId" : 6018,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e286e4b6-ab84-4c1c-8eda-abdc99a2b82f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’ve bumped the timeout since we’ve already seen timeouts and this makes things even slower. Thinking about ways to make this faster, maybe it would make sense to skip the first few steps and directly jump to the first messaging feature with all deps. That probably cuts time in half at least. That would mean that we will have to keep both tests but that might still be a better option. We could also do things like building the DAR and generating the typescript code in `genrules` to get better parallelism and caching.\r\n\r\nNot going to attempt to do this in this PR.",
        "createdAt" : "2020-05-22T11:08:14Z",
        "updatedAt" : "2020-05-22T11:16:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a20cec2c94a272e9c17ae26f77408dd64d40189a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@  - job: compatibility\n    dependsOn: compatibility_ts_libs\n    timeoutInMinutes: 360\n    strategy:\n      matrix:"
  },
  {
    "id" : "2a648187-a37a-4650-93a6-8f877925f202",
    "prId" : 5920,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2cdbea1-cc23-4248-bd1a-ffe9391fb0ea",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "The `matrix` `strategy` only allows for substituting values. Since here we need to change the key (`name` vs. `vmImage`), we need to duplicate the entire job.",
        "createdAt" : "2020-05-10T23:28:33Z",
        "updatedAt" : "2020-05-10T23:28:33Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "23ae23e9-113e-4063-b690-31c34f288b50",
        "parentId" : "d2cdbea1-cc23-4248-bd1a-ffe9391fb0ea",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You might be able to use an `if` on the variable you set in the matrix but given that this is hopefully temporary, I’m perfectly happy just duplicating it.",
        "createdAt" : "2020-05-11T06:23:42Z",
        "updatedAt" : "2020-05-11T06:23:43Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9f142b0fa8fffe8236724935cb01fd3b61563cf",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +51,55 @@    timeoutInMinutes: 240\n    pool:\n      vmImage: macos-10.14\n    steps:\n      - checkout: self"
  },
  {
    "id" : "68ffd97c-3a97-485e-88ae-3fa097717df0",
    "prId" : 5843,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7bc1b71-9d2c-43c5-be9f-47a4753f7b19",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "One option would be to always use the benchmark code from HEAD but against different versions of damlc and the interpreter. Changing damlc is straightforward but since the interpreter is used as a library this is going to be a bit more tricky.",
        "createdAt" : "2020-05-06T06:30:46Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2684de34-cd34-41bb-baf5-fdf24295076f",
        "parentId" : "c7bc1b71-9d2c-43c5-be9f-47a4753f7b19",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "An alternative I played with was to checkout the `daml-lf/scenario-runner/src/perf` folder as of master on the baseline, which would test the current benchmark on the baseline damlc/speedy combination. But that doesn't work for arbitrary past commits (i.e. the perf folder depends on the rest of the repo so might not compile if interfaces have changed), so I eventually decided that, at least for the next time the benchmark is changed, we'd have to look at it manually and decide whether that's a viable way forward.",
        "createdAt" : "2020-05-06T10:35:45Z",
        "updatedAt" : "2020-05-06T11:05:40Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "e81d3082bdb9619d997db4439b42a683b7d6838c",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +104,108 @@              ci/cron/compare-perf.sh $BASELINE > $OUT\n          else\n              # the tests have changed, we need to figure out what to do with\n              # the baseline.\n              echo \"Baseline no longer valid, needs manual correction.\" > $OUT"
  },
  {
    "id" : "9106c672-230c-44d1-9479-55793a039df2",
    "prId" : 5675,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e74c8e37-f942-4269-9f5a-03a69a2de366",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Depending on what we end up doing here, it may make more sense to have Windows as a separate job than try to merge it with the others.",
        "createdAt" : "2020-04-22T17:00:15Z",
        "updatedAt" : "2020-04-22T17:00:16Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "62550a98dded712f7fa4058383c27b104da784b9",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@          pool: 'macOS-pool'\n        #windows:\n          #pool: 'windows-pool'\n    pool:\n      name: $(pool)"
  },
  {
    "id" : "17d07a4a-fed8-4d23-b1f1-0274621b59e1",
    "prId" : 10355,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10355#pullrequestreview-711560803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df0dcb7b-e570-4811-b00a-a800d10c8b99",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "inlining this seems to make it slightly harder to run this locally and test the script. Do we gain anything in return?",
        "createdAt" : "2021-07-21T11:25:12Z",
        "updatedAt" : "2021-07-21T11:25:13Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "f6eac918-5d11-4721-b1e2-267434174873",
        "parentId" : "df0dcb7b-e570-4811-b00a-a800d10c8b99",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "When running locally, why not just run the Bazel command?\r\n```\r\nbazel run daml-lf/scenario-interpreter:scenario-perf -- -rf json -rff $tmp\r\n```\r\nThe underlying goal here is to make it easy to add other targets, like `//ledger-service/http-json:contractdao-bench`.",
        "createdAt" : "2021-07-21T11:29:03Z",
        "updatedAt" : "2021-07-21T11:29:03Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "fa73d12f-cdbb-47e7-8e45-5226c04f9930",
        "parentId" : "df0dcb7b-e570-4811-b00a-a800d10c8b99",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "but how do I test that I didn’t mess up the jq command? Not opposed to this change but I don’t really get why inlining this makes it easier to add new targets",
        "createdAt" : "2021-07-21T11:30:19Z",
        "updatedAt" : "2021-07-21T11:30:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "62a9e773-acc3-4f08-b981-46223d641838",
        "parentId" : "df0dcb7b-e570-4811-b00a-a800d10c8b99",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I was planning to use the templating feature of Azure YAML, like we do in the compatibility job above. It does not _require_ inlining, I suppose, but the value of the external script seemed null to me and inlining makes this a little bit easier. I'm not worried about testing a jq expression that should not change until the format of the perf report changes and for which we'll have daily feedback on Slack.",
        "createdAt" : "2021-07-21T11:41:46Z",
        "updatedAt" : "2021-07-21T11:41:46Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "d9c6b3c5-71db-479c-a83a-2146ffe1ee7d",
        "parentId" : "df0dcb7b-e570-4811-b00a-a800d10c8b99",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "alright I’m convinced :)",
        "createdAt" : "2021-07-21T11:47:42Z",
        "updatedAt" : "2021-07-21T11:47:42Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "f11ae1c52131927c16331a8e2de4451ca2d9d2b8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +91,95 @@          source $(bash_lib)\n\n          OUT=\"$(Build.StagingDirectory)/perf-results-speedy.json\"\n\n          START=$(git log -n1 --format=%cd --date=format:%Y%m%d).$(git rev-list --count HEAD).$(Build.BuildId).$(git log -n1 --format=%h --abbrev=8)"
  }
]