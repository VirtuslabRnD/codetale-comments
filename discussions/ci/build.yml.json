[
  {
    "id" : "3231a342-1f9f-4dfb-8070-4e74fb47348d",
    "prId" : 9954,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24e5b22b-7df7-40e9-843a-b723baae9a18",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "@garyverhaegen-da iirc this is fine and skipping this doesn’t break jobs like collect_build_data that depend on it. Can you confirm this?",
        "createdAt" : "2021-06-10T11:48:41Z",
        "updatedAt" : "2021-06-10T11:48:41Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ddd4425b-876d-46a1-88f9-9f8fe0969e16",
        "parentId" : "24e5b22b-7df7-40e9-843a-b723baae9a18",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Not sure if I can refer to the variable directly below. This seemed to match what we do in other places.",
        "createdAt" : "2021-06-10T11:51:26Z",
        "updatedAt" : "2021-06-10T11:51:26Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c9efbae9-4fb0-4bf5-b9d0-f412d066d373",
        "parentId" : "24e5b22b-7df7-40e9-843a-b723baae9a18",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "As far as I understand, yes, you should be able to access dependencies in `condition`, and that's implicitly what things like `succeeded` do. I usually prefer to write the `condition` block after the `dependsOn` one for that reason, but I don't think Azure cares about ordering here.",
        "createdAt" : "2021-06-10T11:57:35Z",
        "updatedAt" : "2021-06-10T11:57:35Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "35d55ce9dc498ef710723b0166f56f74288d2b37",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +110,114 @@  # is the release version which should not affect things differently depending on the\n  # Scala version.\n  condition: and(succeeded(),\n                 eq(dependencies.check_for_release.outputs['out.is_release'], 'false'))\n  dependsOn:"
  },
  {
    "id" : "c42c20bb-52eb-48c4-b615-ab8efbace127",
    "prId" : 9831,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "How does this work? I would have thought this just gets inlined and via have\r\n```\r\nvariables:\r\n  - name: release_sha\r\n    value: …\r\n  - variables:\r\n    - name: pipeline_timestamp\r\n      value: …\r\n```\r\nAre nested variable blocks a thing?",
        "createdAt" : "2021-06-10T15:52:47Z",
        "updatedAt" : "2021-06-10T15:54:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "3d911fdc-2b2c-4431-918b-843b485d7ddd",
        "parentId" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "If taken that syntax from the docs [here](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#variable-reuse). As I understand it `template` has slightly different meanings in different contexts in that it's not just a string substitution.",
        "createdAt" : "2021-06-10T16:44:03Z",
        "updatedAt" : "2021-06-10T16:44:03Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "e6753d54-421c-42dd-b121-67471f7bc9a7",
        "parentId" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "lovely thanks for the explanation",
        "createdAt" : "2021-06-10T16:48:52Z",
        "updatedAt" : "2021-06-10T16:48:52Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "aca7d894-5993-4183-b8f3-ddbc6d0be3b2",
        "parentId" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "> As I understand it `template` has slightly different meanings in different contexts in that it's not just a string substitution.\r\n\r\nAFAICT it's always a string substitution; the surprising part about it is _when_ that substitution happens compared to other substitutions (`$()`, `$[[]]`, etc.).",
        "createdAt" : "2021-06-11T08:21:16Z",
        "updatedAt" : "2021-06-11T08:21:16Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "ea555b69-b16c-4e12-9a68-56e323245c7c",
        "parentId" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "@garyverhaegen-da I meant that the contents of `job-variables.yml` are not just pasted in as in\r\n```\r\nvariables:\r\n  - name: release_sha\r\n    value: …\r\n  - variables:\r\n    - name: pipeline_timestamp\r\n      value: …\r\n```\r\n\r\nBut, instead, it expects a `variables` map-item in the template file and inserts these variables as in \r\n```\r\nvariables:\r\n  - name: release_sha\r\n    value: …\r\n  - name: pipeline_timestamp\r\n    value: …\r\n```",
        "createdAt" : "2021-06-11T09:03:57Z",
        "updatedAt" : "2021-06-11T09:03:57Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "59989954-885b-496a-937f-a7d45b55b9e9",
        "parentId" : "999b8b3f-395b-4299-960e-e954dc77da09",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Oh, right. Yes, there are different types of templates. Details [here](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#insert-a-template); generally speaking, if your template contains multiple jobs, you start it with `jobs:` and you can use it in `jobs:`; if it has multiple steps, you start it with `steps:` and you can use it in `steps:`, etc.",
        "createdAt" : "2021-06-11T09:22:41Z",
        "updatedAt" : "2021-06-11T09:22:41Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "73357cde3800396f6f8d0ea87d58cbe4ffc57397",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +220,224 @@      value: $[ and(eq(variables.is_release, 'true'),\n                       eq(variables['Build.SourceBranchName'], 'main')) ]\n    - template: job-variables.yml\n  timeoutInMinutes: 360\n  pool:"
  },
  {
    "id" : "312193fd-aeb7-4810-a93b-d75a4202f689",
    "prId" : 9743,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "880180fa-c43f-4c72-bf04-80fd398e1bcc",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "do we have delete permissions on PRs?",
        "createdAt" : "2021-05-19T10:48:42Z",
        "updatedAt" : "2021-05-19T10:48:50Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "65e3f51a-988e-4dbc-9eae-4a04312972e7",
        "parentId" : "880180fa-c43f-4c72-bf04-80fd398e1bcc",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Good question, let me check... Yes, we do. Bazel needs it in general to manage the cache.",
        "createdAt" : "2021-05-19T10:51:35Z",
        "updatedAt" : "2021-05-19T10:51:35Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "02708dcc726800a7fbbe13721f49102e07aa3df8",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +26,30 @@        trap \"$cleanup\" EXIT\n        echo \"$GCRED\" > $key\n        gcloud auth activate-service-account --key-file=$key\n        export BOTO_CONFIG=/dev/null\n          # 90 minutes should provide enough overlap for an hourly"
  },
  {
    "id" : "e3f72cf1-030d-47c1-96eb-e912af2bcda3",
    "prId" : 9419,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We could also use double quotes for the outer one and then single quotes for the `select` and escape the `$?`. Not sure that’s clearer, wdyt?",
        "createdAt" : "2021-04-15T09:13:00Z",
        "updatedAt" : "2021-04-15T09:13:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e6c9540f-b9d7-4cb9-9fbf-5f3f8110af0a",
        "parentId" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "```suggestion\r\n            docker exec oracle bash -c <<BASH\r\n                sqlplus -L system/$ORACLE_PWD@//localhost:1521/ORCLPDB1 <<< \"select * from dba_users;\" >/dev/null\r\n            BASH\r\n```\r\n\r\nI think this should also work, though it's arguably a slightly different semantics:\r\n\r\n```\r\ndocker exec oracle bash -c \"sqlplus -L system/$ORACLE_PWD@//localhost:1521/ORCLPDB1\" <<< \"select * from dba_users;\" >/dev/null\r\n```",
        "createdAt" : "2021-04-15T09:49:02Z",
        "updatedAt" : "2021-04-15T09:49:03Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "8a4a4e5d-870d-4622-9474-9702f5a5795f",
        "parentId" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I think the `exit` stuff was required but I forgot why :thinking: ",
        "createdAt" : "2021-04-15T09:53:16Z",
        "updatedAt" : "2021-04-15T09:53:16Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "675f96ca-4bc8-4ef0-81f5-ef7abef726f9",
        "parentId" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Bash returns the exit code of the last command by default AFAIK so I don't think it does anything here. Maybe the command used to be more complex?",
        "createdAt" : "2021-04-15T10:22:34Z",
        "updatedAt" : "2021-04-15T10:22:34Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "07b006bd-eae8-407d-8c70-f30d92d00948",
        "parentId" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I thought it was some mix of `docker exec` and `bash -c` that required it but I’ve probably just messed it up at the time.",
        "createdAt" : "2021-04-15T10:23:56Z",
        "updatedAt" : "2021-04-15T10:23:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d5dc7137-79f4-475e-8017-49a10e2ca595",
        "parentId" : "20dd1f31-d35d-4ce7-9b43-37dedfceb0bd",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I don't have any specific opinion, but this works and seems fairly readable.",
        "createdAt" : "2021-04-15T10:49:25Z",
        "updatedAt" : "2021-04-15T10:49:25Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e64f2f7ee6440512a1de4506b0dd6a6f84ffdb3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +231,235 @@        trap cleanup EXIT\n        testConnection() {\n            docker exec oracle bash -c 'sqlplus -L system/'\"$ORACLE_PWD\"'@//localhost:1521/ORCLPDB1 <<< \"select * from dba_users;\"; exit $?' >/dev/null\n        }\n        until testConnection"
  },
  {
    "id" : "178b4353-063b-47f3-a0a9-b69b4b929f42",
    "prId" : 9252,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "745b1b42-6951-4c50-b150-08659baf1490",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "can we also switch to the non-xe version or do you want to do this separately?",
        "createdAt" : "2021-03-26T11:43:04Z",
        "updatedAt" : "2021-03-26T13:25:42Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0710cf03-1fd6-4ce9-875d-82f473439c74",
        "parentId" : "745b1b42-6951-4c50-b150-08659baf1490",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Happy to switch; I guess I've not followed this closely enough to know we needed to switch.",
        "createdAt" : "2021-03-26T11:44:03Z",
        "updatedAt" : "2021-03-26T13:25:42Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "5db97e0f-1929-42c1-bb5d-bbed933d061a",
        "parentId" : "745b1b42-6951-4c50-b150-08659baf1490",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I _think_ oracle is reasonablly backwards compatible bu tthe other version is what will be run in production so seems better to test against that.",
        "createdAt" : "2021-03-26T11:46:42Z",
        "updatedAt" : "2021-03-26T13:25:42Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "20e70f79-cbb0-4ead-98a9-6d84350d8810",
        "parentId" : "745b1b42-6951-4c50-b150-08659baf1490",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I did not manage to make it work, so I've reverted this PR to just doing the Docker Hub thing and I'll open a new one with \"how far I got\" in the switch to Oracle Entreprise.",
        "createdAt" : "2021-03-26T13:28:11Z",
        "updatedAt" : "2021-03-26T13:28:12Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "89b285a229d302500543a2db25af250f26e2f71e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +216,220 @@        export ORACLE_PWD=hunter2\n        docker login --username \"$DOCKER_LOGIN\" --password \"$DOCKER_PASSWORD\"\n        IMAGE=digitalasset/oracle-xe-18.4.0-preloaded:20210312-16-7009a64\n        docker pull $IMAGE\n        # Cleanup stray containers that might still be running from"
  },
  {
    "id" : "f6c6e17d-bb1e-4555-a132-597fce45f408",
    "prId" : 9227,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae5bcc6-ef56-4714-80b8-ee0c85866140",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "No need for quotes here because `is_release` is either `true` or `false` and that's valid JSON.",
        "createdAt" : "2021-03-24T10:41:17Z",
        "updatedAt" : "2021-03-24T10:41:18Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42699cd182e17966a6aed2fc96481f0019ef204",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +508,512 @@         \"pr_url\": \"https://github.com/digital-asset/daml/pull/$PR_NUM\",\n         \"pr_source_branch\": \"$PR_BRANCH\",\n         \"is_release\": $(is_release)}\n        END\n        # Test above JSON is well formed"
  },
  {
    "id" : "772b6534-d5db-41ba-ab01-e140f7453608",
    "prId" : 9227,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4abbde36-4a39-4c4a-8d93-85cfef07ae3d",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Boolean logic is hard. Please double-check this means what I wanted: do not fail on skipped compat jobs for a release.",
        "createdAt" : "2021-03-24T10:41:59Z",
        "updatedAt" : "2021-03-24T10:41:59Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42699cd182e17966a6aed2fc96481f0019ef204",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +531,535 @@            || \"$(macOS.status)\" != \"Succeeded\"\n            || \"$(Windows.status)\" != \"Succeeded\"\n            || (\"$(is_release)\" == \"false\" && \"$(compatibility_linux.status)\" != \"Succeeded\")\n            || (\"$(is_release)\" == \"false\" && \"$(compatibility_macos.status)\" != \"Succeeded\")\n            || (\"$(is_release)\" == \"false\" && \"$(compatibility_windows.status)\" != \"Succeeded\")"
  },
  {
    "id" : "92101761-3be1-4702-b37b-5fd00073c52c",
    "prId" : 8930,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cfb586a-8a3b-4418-b8b8-bd1bf2784d35",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m sure you’ve checked it but I probably wouldn’t have so let me ask the silly question anyway: Is this set on `main`?",
        "createdAt" : "2021-02-24T10:10:50Z",
        "updatedAt" : "2021-02-24T11:58:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9c0b536b-c8f6-492a-85ed-14d9914a9926",
        "parentId" : "7cfb586a-8a3b-4418-b8b8-bd1bf2784d35",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Yes, it's a [predefined variable](https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml) and is always set to either `\"False\"` or `\"True\"`.",
        "createdAt" : "2021-02-24T10:13:33Z",
        "updatedAt" : "2021-02-24T11:58:56Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "16c36bfabc36a56c514d407651a49ff932051919",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +250,254 @@        ARTIFACTORY_PASSWORD: $(ARTIFACTORY_PASSWORD)\n      displayName: 'Build'\n      condition: eq(variables['System.PullRequest.IsFork'], 'False')\n    - template: tell-slack-failed.yml\n      parameters:"
  },
  {
    "id" : "5fbdf700-0c48-4345-985c-26d9302fd90f",
    "prId" : 8885,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e32d7e61-dddb-4e83-bdc9-89f1a27a1089",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I pushed another fix here since the step which now triggers after fixing the check didn’t build against 2.13.",
        "createdAt" : "2021-02-17T15:56:26Z",
        "updatedAt" : "2021-02-17T15:59:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "51a54b67-d56f-4f7e-859f-5665b1848548",
        "parentId" : "e32d7e61-dddb-4e83-bdc9-89f1a27a1089",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Can you add a comment explaining this in the file?",
        "createdAt" : "2021-02-17T16:26:17Z",
        "updatedAt" : "2021-02-17T16:26:20Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "a9543773-9e56-4ea2-b4a9-dc7c748f2de6",
        "parentId" : "e32d7e61-dddb-4e83-bdc9-89f1a27a1089",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "explaining what? that referencing a non-existent variable doesn’t work? that seems a bit pointless.",
        "createdAt" : "2021-02-17T16:32:52Z",
        "updatedAt" : "2021-02-17T16:32:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9a57f73a-d0f3-413a-8ccf-6124996a2dbb",
        "parentId" : "e32d7e61-dddb-4e83-bdc9-89f1a27a1089",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Nah, just explaining that this is a duplicate of another constant elsewhere and that they need to be kept in sync. (And in the other place.)",
        "createdAt" : "2021-02-17T18:42:56Z",
        "updatedAt" : "2021-02-17T18:42:56Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9d4a9f925efc017be43a5659a24dea2d058e0c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +110,114 @@        ./bazel-bin/release/release --release-dir \"$(mktemp -d)\"\n      env:\n        DAML_SCALA_VERSION: \"2.13.3\"\n      name: maven_check\n      condition: and(succeeded(), ne(variables['is_release'], 'true'))"
  },
  {
    "id" : "94b65a6d-132b-4491-998b-14d774e07bd8",
    "prId" : 8885,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5102b86-2f9e-43d3-a3c1-3f9bc4ff6277",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Ew.",
        "createdAt" : "2021-02-17T16:26:06Z",
        "updatedAt" : "2021-02-17T16:26:20Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9d4a9f925efc017be43a5659a24dea2d058e0c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +83,87 @@    # pretend it’s not a release build and thereby just run it against main\n    # so that’s what we do here.\n    is_release: $[ and(eq(dependencies.check_for_release.outputs['out.is_release'], 'true'), eq(dependencies.check_for_release.outputs['out.scala_2_13'], 'true')) ]\n    scala_2_13: $[ dependencies.check_for_release.outputs['out.scala_2_13'] ]\n  timeoutInMinutes: 360"
  },
  {
    "id" : "39abd7f6-0836-4d5e-b638-26eaa0aec54b",
    "prId" : 8875,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3411a14-a36d-4fc7-b5a1-4f52e79a546a",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "![happy](https://media2.giphy.com/media/42zi0ri7sN1Uy8aQqL/giphy.gif?cid=ecf05e47m557m0ixtd0kj50tyo0m7336sd7ccpwblg1eodkd&rid=giphy.gif)",
        "createdAt" : "2021-02-17T10:44:46Z",
        "updatedAt" : "2021-02-17T11:06:40Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "35a87c27727023eb7ed59284fe73aa3ec8dd20e8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +177,181 @@        eval \"$(./dev-env/bin/dade-assist)\"\n        bazel build --config scala_2_13 //...\n        bazel test --config scala_2_13 //...\n      displayName: 'Build'\n    - template: tell-slack-failed.yml"
  },
  {
    "id" : "a94b7df6-3002-4188-ad0e-b49d45132ce4",
    "prId" : 8858,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f64692-21ca-42c7-9a86-4eb11f895a7b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "this is bad, this is going to fail for older releases. I’m not quite sure how to fix that unfortunately without starting to parse semvers in bash.",
        "createdAt" : "2021-02-16T16:44:43Z",
        "updatedAt" : "2021-02-17T12:16:09Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea71dda2e5e7e59becd037149b96736f2f4bf9b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +71,75 @@    - template: report-end.yml\n\n- job: Linux_scala_2_13\n  dependsOn:\n    - da_ghc_lib"
  },
  {
    "id" : "b436d307-bf43-4b04-a560-a4834cc6c299",
    "prId" : 8831,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8e47a66-3848-457a-b36f-67c154754de0",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Was it deliberate to add `//daml-script/` twice?",
        "createdAt" : "2021-02-12T12:21:52Z",
        "updatedAt" : "2021-02-12T12:23:47Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "27b5e0df-ca9d-4a1a-a863-362f756f7cb0",
        "parentId" : "e8e47a66-3848-457a-b36f-67c154754de0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "The upper one is the `bazel build` step, the lower one is the `bazel test` step. Arguably those should be factored out but given that I’d like to get this to just `//...`, I couldn’t be bothered to do that so far.",
        "createdAt" : "2021-02-12T12:23:27Z",
        "updatedAt" : "2021-02-12T12:23:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5ff2967a-f776-4925-ba4e-802daded30dc",
        "parentId" : "e8e47a66-3848-457a-b36f-67c154754de0",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Oh right, missed that as the change in command was in the collapsed lines.",
        "createdAt" : "2021-02-12T12:24:21Z",
        "updatedAt" : "2021-02-12T12:24:21Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "28bf6905d67ec6839089dd89b276b7b92cb995a9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +184,188 @@          //ledger-service/... \\\n          //triggers/... \\\n          //daml-script/... \\\n          -//ledger-service/http-json:tests \\\n          -//ledger-service/http-json:integration-tests \\"
  },
  {
    "id" : "31a43c64-7337-4a10-9102-da0fd1c6a4f1",
    "prId" : 8423,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01c94938-3dfd-42d6-ba65-f1e7b607e78e",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Maybe time for some multiline bash with `\\`? Not sure on the yaml rules here.",
        "createdAt" : "2021-01-07T17:22:26Z",
        "updatedAt" : "2021-01-07T19:35:41Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "d411c00c-9062-4e27-98df-cb6a44fcff84",
        "parentId" : "01c94938-3dfd-42d6-ba65-f1e7b607e78e",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I was kind of hoping to go to //daml-lf/... as the next step to just reduce line length but if it does get longer instead, I’ll definitely add some newlines :slightly_smiling_face: ",
        "createdAt" : "2021-01-07T17:55:32Z",
        "updatedAt" : "2021-01-07T19:35:41Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "37d2dee56059b81910af60c4d1dcdcee02918904",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +167,171 @@        bazel build --config scala_2_13 -- //libs-scala/... //daml-lf/data/... //daml-lf/language/... //daml-lf/transaction/... //daml-lf/validation/... //daml-lf/parser/... //daml-lf/interpreter/...\n        # gatling-utils tests fail with a ClassNotFoundException for scala.collection.SeqLike\n        bazel test --config scala_2_13 -- //libs-scala/... //daml-lf/data/... //daml-lf/language/... //daml-lf/transaction/... //daml-lf/validation/... //daml-lf/parser/... //daml-lf/interpreter/... -//libs-scala/gatling-utils/...\n      displayName: 'Build'\n    - template: tell-slack-failed.yml"
  }
]