[
  {
    "id" : "8880ec4a-3acf-474d-a1ba-fad0cc2a463b",
    "prId" : 1119,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40fd42ed-3558-4e60-9f17-1f6adb68430a",
        "parentId" : null,
        "authorId" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "body" : "@criccomini I think that for compatibility this might be better as `google-api-python-client<1.5` but I'm not sure. As far as I can tell 1.5 is the first version that depends on `oauth2client 2.0`.\n",
        "createdAt" : "2016-03-05T00:01:48Z",
        "updatedAt" : "2016-03-05T17:13:16Z",
        "lastEditedBy" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "tags" : [
        ]
      }
    ],
    "commit" : "3629c90445defd01bb75c5968ce430c61facf292",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +59,63 @@gcp_api = [\n    'httplib2',\n    'google-api-python-client',\n    'oauth2client>=1.5.2, <2.0.0',\n]"
  },
  {
    "id" : "7cfb6f7a-b1d7-4ca8-a10e-29bfdf5fecc6",
    "prId" : 1285,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9658c2b5-0060-473e-b4b3-7ab1f6c7263a",
        "parentId" : null,
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "This missed a \",\" @jlowin \n",
        "createdAt" : "2016-04-05T11:05:46Z",
        "updatedAt" : "2016-04-05T11:05:46Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      },
      {
        "id" : "1a271123-9712-4ade-b2ae-cad9346949d4",
        "parentId" : "9658c2b5-0060-473e-b4b3-7ab1f6c7263a",
        "authorId" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "body" : "`setup.py` is my kryptonite... Fixed in 6581858703211bad60793f4b278871edb842fd46\n",
        "createdAt" : "2016-04-05T12:22:31Z",
        "updatedAt" : "2016-04-05T12:22:32Z",
        "lastEditedBy" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d959f695c7b0f4dd1477ede2bccf1cbfb0b9f55",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +123,127 @@        'flask-login==0.2.11',\n        'future>=0.15.0, <0.16',\n        'funcsigs>=0.4, <1'\n        'gunicorn>=19.3.0, <19.4.0',  # 19.4.? seemed to have issues\n        'jinja2>=2.7.3, <3.0',"
  },
  {
    "id" : "73e57dcc-aca0-4bf6-8d7a-2a5dde390e1e",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "2 seems standard. I need to install flake8 on my box now that we don't have landscape.io running. But, I'm pretty sure 2 is adequate. Your earlier comment was when there were 3. \n\nPlease remove comment.\n",
        "createdAt" : "2016-05-19T03:03:54Z",
        "updatedAt" : "2016-05-19T06:24:44Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "29666de0-84d8-4130-a03f-219c035f2576",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "PEP8 says 2 lines before classes and function definition but not before an if. It's really not shocking though when `landscape.io` starts policing again it will note this as a \"code smell\". You can get `flake8` to install commit hooks so that you see those on commit. `flake8 --install-hook`\n",
        "createdAt" : "2016-05-19T15:24:35Z",
        "updatedAt" : "2016-05-19T15:24:35Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "0290fa32-3042-4d21-b697-201037271fbe",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done.\n",
        "createdAt" : "2016-05-19T17:37:07Z",
        "updatedAt" : "2016-05-19T17:37:07Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "b7f8f2fc-70d2-4f1b-b043-27643d54a987",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "These are all addressed in a new PR : https://github.com/apache/incubator-airflow/pull/1523/files\n",
        "createdAt" : "2016-05-19T18:53:48Z",
        "updatedAt" : "2016-05-19T18:53:48Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +234,238 @@    )\n\n\nif __name__ == \"__main__\":\n    do_setup()"
  },
  {
    "id" : "9802519b-5e97-4531-926d-b472381d0035",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c56d531d-b17d-4aea-ab50-73cd227e8bbf",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "+doc string\n",
        "createdAt" : "2016-05-19T15:17:37Z",
        "updatedAt" : "2016-05-19T15:17:37Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "808f5a43-e2b6-477b-b777-cd937e03db9d",
        "parentId" : "c56d531d-b17d-4aea-ab50-73cd227e8bbf",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "done.\n",
        "createdAt" : "2016-05-19T18:06:38Z",
        "updatedAt" : "2016-05-19T18:06:38Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +39,43 @@\n\ndef git_version(version):\n    try:\n        import git"
  },
  {
    "id" : "80236115-eb3c-4fcf-8801-106d1a2946cc",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3568309c-d6fb-44bd-96e4-ccaf5917854b",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "the python community is moving away from the modulo format operator in favor of `\"{}\".format()` function. \n",
        "createdAt" : "2016-05-19T15:20:15Z",
        "updatedAt" : "2016-05-19T15:20:15Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "a103e8ce-cecc-4220-a8ed-ce6e02b2d10e",
        "parentId" : "3568309c-d6fb-44bd-96e4-ccaf5917854b",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "done... replaced with  \n text = \"{}\".format(git_version(version))\n",
        "createdAt" : "2016-05-19T18:19:44Z",
        "updatedAt" : "2016-05-19T18:19:44Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +68,72 @@def write_version(filename=os.path.join('airflow', 'git_version')):\n    cnt = \"\"\"%(git_revision)s\"\"\"\n    text = cnt % {'git_revision':\n                  git_version(version)}\n    try:"
  },
  {
    "id" : "c8b42cfe-9f00-4622-bf1c-b7939e1fb646",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfc98f63-c779-4b53-8870-48a650ca141f",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "I wouldn't silence this error unless we're expecting the write to fail, let it raise!\n",
        "createdAt" : "2016-05-19T15:20:42Z",
        "updatedAt" : "2016-05-19T15:20:50Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "efeaeb5c-7635-44e2-b111-cbf9c05e155b",
        "parentId" : "cfc98f63-c779-4b53-8870-48a650ca141f",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done.. I've removed the try-except..\n\n```\ndef write_version(filename=os.path.join(*[settings.AIRFLOW_HOME,\n                                          'airflow',\n                                          'git_version'])):\n    text = \"{}\".format(git_version(version))\n    with open(filename, 'w') as a:\n        a.write(text)\n\n```\n",
        "createdAt" : "2016-05-19T18:20:58Z",
        "updatedAt" : "2016-05-19T18:20:58Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +71,75 @@                  git_version(version)}\n    try:\n        with open(filename, 'w') as a:\n            a.write(text)\n    except Exception as e:"
  },
  {
    "id" : "769eaa06-bec5-47e5-ac59-b1cd99b43e4e",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ca59755-0f99-4553-9ebc-ffefe69af52e",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Wouldn't be an `ImportError` in that case, put more lines in the try, and catch many exceptions in that same `try` block with many except sections\n",
        "createdAt" : "2016-05-19T15:28:52Z",
        "updatedAt" : "2016-05-19T15:29:55Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "c55b2514-d3ac-4d6e-9b6f-b8940390c4eb",
        "parentId" : "5ca59755-0f99-4553-9ebc-ffefe69af52e",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done. using Exception.\n",
        "createdAt" : "2016-05-19T18:11:46Z",
        "updatedAt" : "2016-05-19T18:11:46Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +47,51 @@    try:\n        repo = git.Repo('.git')\n    except ImportError:\n        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''"
  },
  {
    "id" : "0870560f-9872-4d97-96ea-73ad38e7d6d6",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "references to `repo` are potentially out of scope here. It should be in the same try block or within an else for that try block. \n",
        "createdAt" : "2016-05-19T15:31:31Z",
        "updatedAt" : "2016-05-19T15:31:31Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "9d385583-9e47-40a8-8e27-f0ebc8bee7e1",
        "parentId" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Doesn't else make sense if there is a reasonable default as mentioned on http://stackoverflow.com/a/14590478/1110993\n",
        "createdAt" : "2016-05-19T18:28:10Z",
        "updatedAt" : "2016-05-19T18:28:10Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "4603887f-e83e-4d8c-85c5-18989b089cea",
        "parentId" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "```\ndef git_version(version):\n    \"\"\"\n    Return a version to identify the state of the underlying git repo. The version will\n    indicate whether the head of the current git-backed working directory is tied to a\n    release tag or not : it will indicate the former with a 'release:{version}' prefix\n    and the latter with a 'dev0' prefix. Following the prefix will be a sha of the current\n    branch head. Finally, a \"dirty\" suffix is appended to indicate that uncommitted changes\n    are present.\n    \"\"\"\n    repo = None\n    try:\n        import git\n        repo = git.Repo('.git')\n    except ImportError:\n        logger.warn('gitpython not found: Cannot compute the git version.')\n        return ''\n    except Exception as e:\n        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''\n    if repo:\n        sha = repo.head.commit.hexsha\n        if repo.is_dirty():\n            return '.dev0+{sha}.dirty'.format(sha=sha)\n        # commit is clean\n        # is it release of `version` ?\n        try:\n            tag = repo.git.describe(\n                match='[0-9]*', exact_match=True,\n                tags=True, dirty=True)\n            assert tag == version, (tag, version)\n            return '.release:{version}+{sha}'.format(version=version,\n                                                     sha=sha)\n        except git.GitCommandError:\n            return '.dev0+{sha}'.format(sha=sha)\n    else:\n        return 'no_git_version'\n```\n",
        "createdAt" : "2016-05-19T18:41:04Z",
        "updatedAt" : "2016-05-19T18:41:17Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +50,54 @@        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''\n    sha = repo.head.commit.hexsha\n    if repo.is_dirty():\n        return '.dev0+{sha}.dirty'.format(sha=sha)"
  },
  {
    "id" : "141c1e29-fcb3-475a-8e17-5ffeb643dd74",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c2331b3-4a55-4c91-abba-94b39ea46722",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "logger.exception(e) is usually better as it provides the stack trace.\n",
        "createdAt" : "2016-05-19T15:33:11Z",
        "updatedAt" : "2016-05-19T15:33:11Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +74,78 @@            a.write(text)\n    except Exception as e:\n        logger.error(e)\n\n"
  },
  {
    "id" : "dcaa80e6-5303-413c-8367-53d047517269",
    "prId" : 1523,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36825960-3df1-4f30-8ef8-4273b7f87762",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "`dirty` is a great idea...\n",
        "createdAt" : "2016-05-19T18:57:05Z",
        "updatedAt" : "2016-05-19T19:25:53Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "aedb667d50e512655a590ec2af03504947dd9acb",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +45,49 @@    release tag or not : it will indicate the former with a 'release:{version}' prefix\n    and the latter with a 'dev0' prefix. Following the prefix will be a sha of the current\n    branch head. Finally, a \"dirty\" suffix is appended to indicate that uncommitted changes\n    are present.\n    \"\"\""
  },
  {
    "id" : "c8316613-504b-446e-aad5-86921ddb2b15",
    "prId" : 2853,
    "prUrl" : "https://github.com/apache/airflow/pull/2853#pullrequestreview-86246910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea9bf1b8-aee2-4a57-aa8e-7ec5cb854dfb",
        "parentId" : null,
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "Probably you want to update the crypto dependency (see higher up) and reference it from here. I know it could affect non-k8s installs but I don’t think it is smart to maintain two dependencies. ",
        "createdAt" : "2018-01-02T21:18:55Z",
        "updatedAt" : "2018-01-11T23:31:46Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb5906e68fdf351e97acbf04f334b2a86081e81",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +164,168 @@redis = ['redis>=2.10.5']\nkubernetes = ['kubernetes>=3.0.0',\n              'cryptography>=2.0.0']\n\nall_dbs = postgres + mysql + hive + mssql + hdfs + vertica + cloudant"
  },
  {
    "id" : "8514c12f-8982-49ec-a93a-8f1eb7106958",
    "prId" : 3703,
    "prUrl" : "https://github.com/apache/airflow/pull/3703#pullrequestreview-145482879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6b800ab-01ac-405c-91cb-bd807dc3f8e2",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "?? This is needed for docs? I would have though mock is just used in tests/, and i’m Surprised it’s needed here?",
        "createdAt" : "2018-08-06T07:47:48Z",
        "updatedAt" : "2018-08-06T19:58:29Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "15817c56-4395-4d41-bb5a-f9381aa13de5",
        "parentId" : "b6b800ab-01ac-405c-91cb-bd807dc3f8e2",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Good point. @tedmiston Any idea?",
        "createdAt" : "2018-08-08T07:18:36Z",
        "updatedAt" : "2018-08-08T07:18:36Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      },
      {
        "id" : "a50db6ed-ffac-4798-a8d2-9b424f1f9ad7",
        "parentId" : "b6b800ab-01ac-405c-91cb-bd807dc3f8e2",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "I did some digging and looks like we use it here:\r\nhttps://github.com/apache/incubator-airflow/blob/acca61c602e341da06ebee2eca3a26f4e7400238/docs/conf.py#L16\r\n\r\nThis is used for mocking import of various modules:\r\nhttps://github.com/apache/incubator-airflow/blob/master/docs/conf.py#L18-L31\r\n\r\n\r\nReference: http://blog.rtwilson.com/how-to-make-your-sphinx-documentation-compile-with-readthedocs-when-youre-using-numpy-and-scipy/",
        "createdAt" : "2018-08-08T08:46:53Z",
        "updatedAt" : "2018-08-08T08:46:53Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "761bcffb-46a8-4d9a-a520-9aeeb6b95103",
        "parentId" : "b6b800ab-01ac-405c-91cb-bd807dc3f8e2",
        "authorId" : "a950d631-9ef1-4abd-ad03-5fd9d9ffa7c0",
        "body" : "@Fokko What Kaxil found is consistent with what I saw as well.  There's a bit more info on it in (1) in my comment here https://github.com/apache/incubator-airflow/pull/3703#issuecomment-410836135. ",
        "createdAt" : "2018-08-08T21:01:10Z",
        "updatedAt" : "2018-08-08T21:01:10Z",
        "lastEditedBy" : "a950d631-9ef1-4abd-ad03-5fd9d9ffa7c0",
        "tags" : [
        ]
      },
      {
        "id" : "4ddb4fdb-a62f-4a0d-a364-a419d0dcbd14",
        "parentId" : "b6b800ab-01ac-405c-91cb-bd807dc3f8e2",
        "authorId" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "body" : "Just learned something, thanks @tedmiston !",
        "createdAt" : "2018-08-12T18:22:02Z",
        "updatedAt" : "2018-08-12T18:22:02Z",
        "lastEditedBy" : "03e41e23-f438-4a06-9652-8f20638d2c3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7007e9576e0d15713198fa6a1ef469a5a9fb42e1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +170,174 @@datadog = ['datadog>=0.14.0']\ndoc = [\n    'mock',\n    'sphinx>=1.2.3',\n    'sphinx-argparse>=0.1.13',"
  },
  {
    "id" : "1d53b4d2-28b9-46ab-a16d-70540e45fe2f",
    "prId" : 3937,
    "prUrl" : "https://github.com/apache/airflow/pull/3937#pullrequestreview-161253064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b40d543-9815-4ebf-ad43-ee73948f44c5",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Could you add `[AIRFLOW-3147]` in to your commit message too please?",
        "createdAt" : "2018-10-03T16:32:28Z",
        "updatedAt" : "2018-10-03T19:32:18Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bdea186ee84ed794f4245cd0573322a60c7d041",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +299,303 @@            'dill>=0.2.2, <0.3',\n            'flask>=0.12.4, <0.13',\n            'flask-appbuilder>=1.12, <2.0.0',\n            'flask-admin==1.4.1',\n            'flask-caching>=1.3.3, <1.4.0',"
  },
  {
    "id" : "8c1e1375-d482-43bc-a660-dae428550fa5",
    "prId" : 4112,
    "prUrl" : "https://github.com/apache/airflow/pull/4112#pullrequestreview-169912254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "192b0f81-8b74-4fdc-800e-6dbcc5ba19c9",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "There's a 1.3.6 out",
        "createdAt" : "2018-10-29T14:06:40Z",
        "updatedAt" : "2019-01-04T20:47:21Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "3e887c16-e43e-464f-bc2f-318a9e50f20f",
        "parentId" : "192b0f81-8b74-4fdc-800e-6dbcc5ba19c9",
        "authorId" : "8d0a646f-2ad8-4a8d-a64f-37150c22ec86",
        "body" : "Done.",
        "createdAt" : "2018-10-30T17:46:07Z",
        "updatedAt" : "2019-01-04T20:47:21Z",
        "lastEditedBy" : "8d0a646f-2ad8-4a8d-a64f-37150c22ec86",
        "tags" : [
        ]
      }
    ],
    "commit" : "d87158f28cb95c4c3cce3a378bd7e50ba7af3bcd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +252,256 @@    'mock',\n    'mongomock',\n    'moto==1.3.5',\n    'nose',\n    'nose-ignore-docstring==0.2',"
  },
  {
    "id" : "bc2cf239-fe8c-4048-8238-4b3c97d3fa13",
    "prId" : 4354,
    "prUrl" : "https://github.com/apache/airflow/pull/4354#pullrequestreview-187960467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cb6bfce-9edf-4545-9e66-bc59d8bf6f45",
        "parentId" : null,
        "authorId" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "body" : "Can we use a version range instead of pinning to an exact version?",
        "createdAt" : "2018-12-26T16:30:33Z",
        "updatedAt" : "2019-01-04T13:49:41Z",
        "lastEditedBy" : "9a5e8348-c065-464c-a412-d4070cbed6ea",
        "tags" : [
        ]
      },
      {
        "id" : "d8a42bf7-1e32-43e1-9cf6-21e8b8c3c062",
        "parentId" : "8cb6bfce-9edf-4545-9e66-bc59d8bf6f45",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "The problem is that those libraries are pretty unstable and relying on automated upgrade for future versions is pretty bad idea - last time when @DariuszAniszewski  upgraded 0.30.0 (I think) -> 0.31.0 it actually broke the operator and some fixes had to be made (and we cannot really rely on future versions to not break anything). Other dependencies also made breaking changes quite recently when they automatically upgraded (infamous flask-appbuilder for example). There is a whole discussion on keeping fixed vs. upper-open version number on the devlist (I am involved but had no time to take a closer look at this yet). I think for now - until general approach is implemented, I think it's safer to keep it fixed. ",
        "createdAt" : "2018-12-26T21:01:25Z",
        "updatedAt" : "2019-01-04T13:49:41Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b87854b98b5b5cdc34bf150fd45f2fd2108d35ae",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +191,195 @@    'google-auth-httplib2>=0.0.1',\n    'google-cloud-container>=0.1.1',\n    'google-cloud-bigtable==0.31.0',\n    'google-cloud-spanner>=1.6.0',\n    'grpcio-gcp>=0.2.2',"
  },
  {
    "id" : "e2998e8c-97a3-46cf-aeec-e35c4d69a8ac",
    "prId" : 4468,
    "prUrl" : "https://github.com/apache/airflow/pull/4468#pullrequestreview-190982863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7f11179-86fb-40f2-9ddf-0d0ff47cd7d3",
        "parentId" : null,
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "n00b qq: what does ~= mean?",
        "createdAt" : "2019-01-09T23:06:19Z",
        "updatedAt" : "2019-01-09T23:06:19Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "46dc12c0-5495-495e-a84b-06a3d0dcc430",
        "parentId" : "f7f11179-86fb-40f2-9ddf-0d0ff47cd7d3",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "got it(https://www.python.org/dev/peps/pep-0440/): ```~=: Compatible release clause```",
        "createdAt" : "2019-01-09T23:07:22Z",
        "updatedAt" : "2019-01-09T23:07:22Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      },
      {
        "id" : "2d3e48e3-58bd-4219-a742-e3399f4413b3",
        "parentId" : "f7f11179-86fb-40f2-9ddf-0d0ff47cd7d3",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "It means it will select the latest version of the package, greater or equal to 0.6.10, but still in the 0.6.* version, so it won't download 0.7.0 for example. It ensures you will get security fixes but keep backward-compatibility, if the package maintainer respects the semantic versioning (which states that breaking changes should occur only in major versions).\r\n\r\nOr, as said by PEP 440:\r\n\r\n> For a given release identifier V.N , the compatible release clause is approximately equivalent to the pair of comparison clauses:\r\n> \r\n> \\>= V.N, == V.*",
        "createdAt" : "2019-01-09T23:08:37Z",
        "updatedAt" : "2019-01-09T23:09:03Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b2a0104d2358375af60f5c3d55677a027c4b31",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +305,309 @@            'croniter>=0.3.17, <0.4',\n            'dill>=0.2.2, <0.3',\n            'enum34~=1.1.6',\n            'flask>=0.12.4, <0.13',\n            'flask-appbuilder==1.12.1',"
  },
  {
    "id" : "88c8f437-5c40-40d4-a1d5-7f22c142fd0d",
    "prId" : 4755,
    "prUrl" : "https://github.com/apache/airflow/pull/4755#pullrequestreview-207395169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d4ba62b-5dad-47d7-a04d-eedbb898aced",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "`google-cloud-translate>=1.3.3` before `google-cloud-vision>=0.35.2` for alphabetical?",
        "createdAt" : "2019-02-25T11:12:38Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "0457a49f-bf66-489d-a920-eae57974ffef",
        "parentId" : "6d4ba62b-5dad-47d7-a04d-eedbb898aced",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Good catch",
        "createdAt" : "2019-02-25T13:26:35Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "f19bd5c9-6e91-4b05-bc41-4ba7fe21e35a",
        "parentId" : "6d4ba62b-5dad-47d7-a04d-eedbb898aced",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Fixed.",
        "createdAt" : "2019-02-25T13:40:52Z",
        "updatedAt" : "2019-03-13T20:08:23Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "439b3314589ee85f79f1a17e3a5eaf535f75e669",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +181,185 @@    'google-cloud-bigtable==0.31.0',\n    'google-cloud-spanner>=1.7.1',\n    'google-cloud-translate>=1.3.3',\n    'google-cloud-vision>=0.35.2',\n    'grpcio-gcp>=0.2.2',"
  }
]