[
  {
    "id" : "8880ec4a-3acf-474d-a1ba-fad0cc2a463b",
    "prId" : 1119,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40fd42ed-3558-4e60-9f17-1f6adb68430a",
        "parentId" : null,
        "authorId" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "body" : "@criccomini I think that for compatibility this might be better as `google-api-python-client<1.5` but I'm not sure. As far as I can tell 1.5 is the first version that depends on `oauth2client 2.0`.\n",
        "createdAt" : "2016-03-05T00:01:48Z",
        "updatedAt" : "2016-03-05T17:13:16Z",
        "lastEditedBy" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "tags" : [
        ]
      }
    ],
    "commit" : "3629c90445defd01bb75c5968ce430c61facf292",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +59,63 @@gcp_api = [\n    'httplib2',\n    'google-api-python-client',\n    'oauth2client>=1.5.2, <2.0.0',\n]"
  },
  {
    "id" : "7cfb6f7a-b1d7-4ca8-a10e-29bfdf5fecc6",
    "prId" : 1285,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9658c2b5-0060-473e-b4b3-7ab1f6c7263a",
        "parentId" : null,
        "authorId" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "body" : "This missed a \",\" @jlowin \n",
        "createdAt" : "2016-04-05T11:05:46Z",
        "updatedAt" : "2016-04-05T11:05:46Z",
        "lastEditedBy" : "537cec6b-32b7-4f8b-9f76-6932246f79b5",
        "tags" : [
        ]
      },
      {
        "id" : "1a271123-9712-4ade-b2ae-cad9346949d4",
        "parentId" : "9658c2b5-0060-473e-b4b3-7ab1f6c7263a",
        "authorId" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "body" : "`setup.py` is my kryptonite... Fixed in 6581858703211bad60793f4b278871edb842fd46\n",
        "createdAt" : "2016-04-05T12:22:31Z",
        "updatedAt" : "2016-04-05T12:22:32Z",
        "lastEditedBy" : "0a40f9fd-4a0a-426e-b6f5-f97a4905eb99",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d959f695c7b0f4dd1477ede2bccf1cbfb0b9f55",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +123,127 @@        'flask-login==0.2.11',\n        'future>=0.15.0, <0.16',\n        'funcsigs>=0.4, <1'\n        'gunicorn>=19.3.0, <19.4.0',  # 19.4.? seemed to have issues\n        'jinja2>=2.7.3, <3.0',"
  },
  {
    "id" : "73e57dcc-aca0-4bf6-8d7a-2a5dde390e1e",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "parentId" : null,
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "2 seems standard. I need to install flake8 on my box now that we don't have landscape.io running. But, I'm pretty sure 2 is adequate. Your earlier comment was when there were 3. \n\nPlease remove comment.\n",
        "createdAt" : "2016-05-19T03:03:54Z",
        "updatedAt" : "2016-05-19T06:24:44Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "29666de0-84d8-4130-a03f-219c035f2576",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "PEP8 says 2 lines before classes and function definition but not before an if. It's really not shocking though when `landscape.io` starts policing again it will note this as a \"code smell\". You can get `flake8` to install commit hooks so that you see those on commit. `flake8 --install-hook`\n",
        "createdAt" : "2016-05-19T15:24:35Z",
        "updatedAt" : "2016-05-19T15:24:35Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "0290fa32-3042-4d21-b697-201037271fbe",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done.\n",
        "createdAt" : "2016-05-19T17:37:07Z",
        "updatedAt" : "2016-05-19T17:37:07Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "b7f8f2fc-70d2-4f1b-b043-27643d54a987",
        "parentId" : "8356cbbc-3448-469d-b8cd-c43e2ef51674",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "These are all addressed in a new PR : https://github.com/apache/incubator-airflow/pull/1523/files\n",
        "createdAt" : "2016-05-19T18:53:48Z",
        "updatedAt" : "2016-05-19T18:53:48Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +234,238 @@    )\n\n\nif __name__ == \"__main__\":\n    do_setup()"
  },
  {
    "id" : "9802519b-5e97-4531-926d-b472381d0035",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c56d531d-b17d-4aea-ab50-73cd227e8bbf",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "+doc string\n",
        "createdAt" : "2016-05-19T15:17:37Z",
        "updatedAt" : "2016-05-19T15:17:37Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "808f5a43-e2b6-477b-b777-cd937e03db9d",
        "parentId" : "c56d531d-b17d-4aea-ab50-73cd227e8bbf",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "done.\n",
        "createdAt" : "2016-05-19T18:06:38Z",
        "updatedAt" : "2016-05-19T18:06:38Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +39,43 @@\n\ndef git_version(version):\n    try:\n        import git"
  },
  {
    "id" : "80236115-eb3c-4fcf-8801-106d1a2946cc",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3568309c-d6fb-44bd-96e4-ccaf5917854b",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "the python community is moving away from the modulo format operator in favor of `\"{}\".format()` function. \n",
        "createdAt" : "2016-05-19T15:20:15Z",
        "updatedAt" : "2016-05-19T15:20:15Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "a103e8ce-cecc-4220-a8ed-ce6e02b2d10e",
        "parentId" : "3568309c-d6fb-44bd-96e4-ccaf5917854b",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "done... replaced with  \n text = \"{}\".format(git_version(version))\n",
        "createdAt" : "2016-05-19T18:19:44Z",
        "updatedAt" : "2016-05-19T18:19:44Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +68,72 @@def write_version(filename=os.path.join('airflow', 'git_version')):\n    cnt = \"\"\"%(git_revision)s\"\"\"\n    text = cnt % {'git_revision':\n                  git_version(version)}\n    try:"
  },
  {
    "id" : "c8b42cfe-9f00-4622-bf1c-b7939e1fb646",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfc98f63-c779-4b53-8870-48a650ca141f",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "I wouldn't silence this error unless we're expecting the write to fail, let it raise!\n",
        "createdAt" : "2016-05-19T15:20:42Z",
        "updatedAt" : "2016-05-19T15:20:50Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "efeaeb5c-7635-44e2-b111-cbf9c05e155b",
        "parentId" : "cfc98f63-c779-4b53-8870-48a650ca141f",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done.. I've removed the try-except..\n\n```\ndef write_version(filename=os.path.join(*[settings.AIRFLOW_HOME,\n                                          'airflow',\n                                          'git_version'])):\n    text = \"{}\".format(git_version(version))\n    with open(filename, 'w') as a:\n        a.write(text)\n\n```\n",
        "createdAt" : "2016-05-19T18:20:58Z",
        "updatedAt" : "2016-05-19T18:20:58Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +71,75 @@                  git_version(version)}\n    try:\n        with open(filename, 'w') as a:\n            a.write(text)\n    except Exception as e:"
  },
  {
    "id" : "769eaa06-bec5-47e5-ac59-b1cd99b43e4e",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ca59755-0f99-4553-9ebc-ffefe69af52e",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "Wouldn't be an `ImportError` in that case, put more lines in the try, and catch many exceptions in that same `try` block with many except sections\n",
        "createdAt" : "2016-05-19T15:28:52Z",
        "updatedAt" : "2016-05-19T15:29:55Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "c55b2514-d3ac-4d6e-9b6f-b8940390c4eb",
        "parentId" : "5ca59755-0f99-4553-9ebc-ffefe69af52e",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Done. using Exception.\n",
        "createdAt" : "2016-05-19T18:11:46Z",
        "updatedAt" : "2016-05-19T18:11:46Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +47,51 @@    try:\n        repo = git.Repo('.git')\n    except ImportError:\n        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''"
  },
  {
    "id" : "0870560f-9872-4d97-96ea-73ad38e7d6d6",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "references to `repo` are potentially out of scope here. It should be in the same try block or within an else for that try block. \n",
        "createdAt" : "2016-05-19T15:31:31Z",
        "updatedAt" : "2016-05-19T15:31:31Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      },
      {
        "id" : "9d385583-9e47-40a8-8e27-f0ebc8bee7e1",
        "parentId" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "Doesn't else make sense if there is a reasonable default as mentioned on http://stackoverflow.com/a/14590478/1110993\n",
        "createdAt" : "2016-05-19T18:28:10Z",
        "updatedAt" : "2016-05-19T18:28:10Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      },
      {
        "id" : "4603887f-e83e-4d8c-85c5-18989b089cea",
        "parentId" : "370266db-a95e-4e6a-916f-43eba25ef702",
        "authorId" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "body" : "```\ndef git_version(version):\n    \"\"\"\n    Return a version to identify the state of the underlying git repo. The version will\n    indicate whether the head of the current git-backed working directory is tied to a\n    release tag or not : it will indicate the former with a 'release:{version}' prefix\n    and the latter with a 'dev0' prefix. Following the prefix will be a sha of the current\n    branch head. Finally, a \"dirty\" suffix is appended to indicate that uncommitted changes\n    are present.\n    \"\"\"\n    repo = None\n    try:\n        import git\n        repo = git.Repo('.git')\n    except ImportError:\n        logger.warn('gitpython not found: Cannot compute the git version.')\n        return ''\n    except Exception as e:\n        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''\n    if repo:\n        sha = repo.head.commit.hexsha\n        if repo.is_dirty():\n            return '.dev0+{sha}.dirty'.format(sha=sha)\n        # commit is clean\n        # is it release of `version` ?\n        try:\n            tag = repo.git.describe(\n                match='[0-9]*', exact_match=True,\n                tags=True, dirty=True)\n            assert tag == version, (tag, version)\n            return '.release:{version}+{sha}'.format(version=version,\n                                                     sha=sha)\n        except git.GitCommandError:\n            return '.dev0+{sha}'.format(sha=sha)\n    else:\n        return 'no_git_version'\n```\n",
        "createdAt" : "2016-05-19T18:41:04Z",
        "updatedAt" : "2016-05-19T18:41:17Z",
        "lastEditedBy" : "92e402fb-479e-4b08-88f2-3b82c356ecc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +50,54 @@        logger.warn('Git repo not found: Cannot compute the git version.')\n        return ''\n    sha = repo.head.commit.hexsha\n    if repo.is_dirty():\n        return '.dev0+{sha}.dirty'.format(sha=sha)"
  },
  {
    "id" : "141c1e29-fcb3-475a-8e17-5ffeb643dd74",
    "prId" : 1504,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c2331b3-4a55-4c91-abba-94b39ea46722",
        "parentId" : null,
        "authorId" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "body" : "logger.exception(e) is usually better as it provides the stack trace.\n",
        "createdAt" : "2016-05-19T15:33:11Z",
        "updatedAt" : "2016-05-19T15:33:11Z",
        "lastEditedBy" : "0624866b-ba3a-41a3-abab-e487a9cfb78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d32c174f34132bf79abbef6a397a07f20bf5ecd",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +74,78 @@            a.write(text)\n    except Exception as e:\n        logger.error(e)\n\n"
  },
  {
    "id" : "dcaa80e6-5303-413c-8367-53d047517269",
    "prId" : 1523,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36825960-3df1-4f30-8ef8-4273b7f87762",
        "parentId" : null,
        "authorId" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "body" : "`dirty` is a great idea...\n",
        "createdAt" : "2016-05-19T18:57:05Z",
        "updatedAt" : "2016-05-19T19:25:53Z",
        "lastEditedBy" : "366b1763-372e-4924-9c92-2ea8968443bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "aedb667d50e512655a590ec2af03504947dd9acb",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +45,49 @@    release tag or not : it will indicate the former with a 'release:{version}' prefix\n    and the latter with a 'dev0' prefix. Following the prefix will be a sha of the current\n    branch head. Finally, a \"dirty\" suffix is appended to indicate that uncommitted changes\n    are present.\n    \"\"\""
  }
]