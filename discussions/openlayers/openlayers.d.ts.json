[
  {
    "id" : "953e8208-22a0-4694-9ddb-ab41075130ec",
    "prId" : 11745,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/11745#pullrequestreview-3119529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa41da31-c80c-4be0-a397-d742bb192a5e",
        "parentId" : null,
        "authorId" : "9bdf998c-8acd-4f1d-8bd6-2f3168cec322",
        "body" : "There is a documentation conflict here. The [documentation ](http://openlayers.org/en/latest/apidoc/ol.layer.Vector.html) text explicitly says this argument is required and that you can \"use null to avoid the sort, but get an undefined draw order\". However the field definition says it can have be `undefined`. \nI quickly checked the code and it seems to properly handle the `undefined` case. So the modification should be OK.\n",
        "createdAt" : "2016-10-06T05:18:48Z",
        "updatedAt" : "2016-10-06T13:55:19Z",
        "lastEditedBy" : "9bdf998c-8acd-4f1d-8bd6-2f3168cec322",
        "tags" : [
        ]
      },
      {
        "id" : "5e6c94c4-7cb0-4cfc-8c4a-1cd3304d9760",
        "parentId" : "fa41da31-c80c-4be0-a397-d742bb192a5e",
        "authorId" : "26deeafe-2b4d-46a0-b6cd-646459366d47",
        "body" : "I have been using OpenLayers for 2 years and wasn't even aware of the renderOrder option until yesterday.  Let's go ahead with this change.  The openlayers code obviously handles an undefined renderOrder and I think it would be preferable that the type declarations not flag the absence of this option as an error.  \n",
        "createdAt" : "2016-10-06T14:06:37Z",
        "updatedAt" : "2016-10-06T14:06:37Z",
        "lastEditedBy" : "26deeafe-2b4d-46a0-b6cd-646459366d47",
        "tags" : [
        ]
      }
    ],
    "commit" : "2395cebf8aa5ee2f2704187d89769c094bc3012e",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +12620,12624 @@         */\n        interface VectorOptions {\n            renderOrder?: (feature1: ol.Feature, feature2: ol.Feature) => number;\n            map?: ol.Map;\n            extent?: ol.Extent;"
  }
]