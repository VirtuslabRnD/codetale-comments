[
  {
    "id" : "df3dd48a-d08f-4a6d-8f97-145b10325c3c",
    "prId" : 1617,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1617#pullrequestreview-130796135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ca00ada-be5c-464a-8b7b-d7f86775dc7a",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Can we test that the name of the symbol is kept even when it's not `self`? For example, `class A { hello => }`?",
        "createdAt" : "2018-06-21T08:27:02Z",
        "updatedAt" : "2018-06-21T12:39:42Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "2b72c447-25e7-445a-85ce-9561b1aabbe7",
        "parentId" : "5ca00ada-be5c-464a-8b7b-d7f86775dc7a",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Done. The name is not kept in signatures though (because ScalaSignatures don't have the capacity to save it), only in occurrences.",
        "createdAt" : "2018-06-21T12:41:13Z",
        "updatedAt" : "2018-06-21T12:41:13Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6edf6e7990d81b8ddedf5933d23b491230ca5f0",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@}\n\nclass C3 extends B { self: B with Int =>\n}\n"
  }
]