[
  {
    "id" : "827e70ab-c810-42f5-bdbf-406b09140a88",
    "prId" : 1259,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1259#pullrequestreview-94104563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71946fb8-9090-4a12-b7a8-a5079d1a2b34",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "What is the hashcode impl for TextDocument? ",
        "createdAt" : "2018-02-05T17:40:26Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "3d128bfa-e389-4302-be27-2aa4c346bb84",
        "parentId" : "71946fb8-9090-4a12-b7a8-a5079d1a2b34",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "ScalaPB messages are case classes, so we're kind of fine (as in protected against duplicate uris). It would be ideal if there was `WeakIdentityHashMap`, but it's not there, and I think that implementing one is not worth it.",
        "createdAt" : "2018-02-05T19:03:35Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfafd4238974683ed888ce24c52bd0fa4de7aa33",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +124,128 @@  }\n\n  private val symCache = new WeakHashMap[TextDocument, immutable.Map[String, SymbolInformation]]\n  private def pprint(sym: String, role: Role, doc: TextDocument): Unit = {\n    var infos = symCache.get(doc)"
  },
  {
    "id" : "84462823-7c52-4759-8f96-b399db75424e",
    "prId" : 1238,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1238#pullrequestreview-93322127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b026cf9-5ccb-45b1-a10a-1a0ae752f129",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Pro tip, accept a `PrintStream` and this gets much easier to test ;)",
        "createdAt" : "2018-02-01T12:10:38Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "9c945dff-26c1-4f4e-aed9-975a8e7a30ef",
        "parentId" : "9b026cf9-5ccb-45b1-a10a-1a0ae752f129",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "👍 ",
        "createdAt" : "2018-02-01T15:15:16Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "8c0d8f79-21ff-459a-87ac-ccccec744724",
        "parentId" : "9b026cf9-5ccb-45b1-a10a-1a0ae752f129",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "On a second thought, the required changes seem to be quite extensive. I suggest we keep things as is.",
        "createdAt" : "2018-02-01T15:30:36Z",
        "updatedAt" : "2018-02-01T16:00:22Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0295ec5950b1f4dad650d2b602c7cbe9e15b136f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@  }\n\n  def process(args: Array[String]): Int = {\n    var failed = false\n    args.foreach { arg =>"
  }
]