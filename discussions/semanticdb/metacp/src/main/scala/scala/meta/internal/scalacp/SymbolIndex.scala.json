[
  {
    "id" : "26416bee-b0a3-4600-849b-8c6a7a1e836f",
    "prId" : 1674,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1674#pullrequestreview-134598925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21cb6ee6-c95c-4bed-8775-49144e774119",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Note for the future, for optimization we may want to share the symbol index per global classpath instead of classpath element. This will require having a better hash function than `scalap/Symbol#hashCode`",
        "createdAt" : "2018-07-05T10:58:02Z",
        "updatedAt" : "2018-07-05T12:19:58Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3c012530b36d03419f3e882d24d6eeb3b34eb75",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@\nfinal class SymbolIndex private (classpathIndex: ClasspathIndex) {\n  private lazy val lookupCache = mutable.Map.empty[Symbol, SymbolLookup]\n  def lookup(sym: ExternalSymbol): SymbolLookup = {\n    lookupCache.getOrElseUpdate(sym, {"
  }
]