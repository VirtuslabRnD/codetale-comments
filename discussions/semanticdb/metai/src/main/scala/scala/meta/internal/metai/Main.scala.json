[
  {
    "id" : "3421d099-3f19-4359-942b-697f97e5fbdb",
    "prId" : 1726,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1726#pullrequestreview-143313609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc0bf8c-8d18-4b43-8403-03ef051920cb",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "iirc, this did not work when I first implemented this because we did not call `Files.createDirectories` before creating semanticdb files. Keep that in mind for other tools that produce SemanticDB files.",
        "createdAt" : "2018-07-31T17:19:32Z",
        "updatedAt" : "2018-07-31T17:35:05Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "11a886de-f19e-4c9e-b29c-4cf19e7991d2",
        "parentId" : "1bc0bf8c-8d18-4b43-8403-03ef051920cb",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yeah, I had to fix this in metacp.",
        "createdAt" : "2018-08-03T19:51:44Z",
        "updatedAt" : "2018-08-03T19:51:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "222bcbfd13d6416abb5f7ce96289c4b734cb550c",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +54,58 @@\n  private def processEntry(file: ClasspathFile): Boolean = {\n    val hasSemanticdb = file.path.resolve(\"META-INF\").resolve(\"semanticdb\").isDirectory\n    val ls = FileIO.listAllFilesRecursively(file.path)\n    var index = i.Index()"
  },
  {
    "id" : "47dc6991-c6ab-452a-af08-f74f2c894cc7",
    "prId" : 1726,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1726#pullrequestreview-142056430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f4798c-f884-4943-9b61-364c0918b954",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "If you can assume the directory zip entry `META-INF/semanticdb` exists then you can simplify this logic with\r\n\r\n```scala\r\nval root = file.path.resolve(\"META-INF\").resolve(\"semanticdb\")\r\nval ls = FileIO.listAllFilesrecursively(root)\r\nls.files.foreach { ... }\r\n```",
        "createdAt" : "2018-07-31T17:22:38Z",
        "updatedAt" : "2018-07-31T17:35:05Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "222bcbfd13d6416abb5f7ce96289c4b734cb550c",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +55,59 @@  private def processEntry(file: ClasspathFile): Boolean = {\n    val hasSemanticdb = file.path.resolve(\"META-INF\").resolve(\"semanticdb\").isDirectory\n    val ls = FileIO.listAllFilesRecursively(file.path)\n    var index = i.Index()\n    ls.files.foreach { relpath =>"
  },
  {
    "id" : "ce4ac5fc-cdc7-4d93-a91f-8bf6bb62beab",
    "prId" : 1690,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1690#pullrequestreview-136932764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df1064ef-aa87-4244-b490-b04d5442080a",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Let's open a ticket for this?",
        "createdAt" : "2018-07-12T23:06:25Z",
        "updatedAt" : "2018-07-13T15:06:48Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "6ca89e42-7b24-46c5-8333-fae95866036d",
        "parentId" : "df1064ef-aa87-4244-b490-b04d5442080a",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I left a comment in https://github.com/scalameta/scalameta/issues/1659#issuecomment-404789629",
        "createdAt" : "2018-07-13T10:09:44Z",
        "updatedAt" : "2018-07-13T15:06:48Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "03def7a684ca67a7dd7df13ae7d342831d4096d3",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@      doc <- docs.documents\n      toplevel <- doc.symbols\n      if !toplevel.symbol.isPackage\n      if toplevel.symbol.owner.isPackage\n    } {"
  }
]