[
  {
    "id" : "a2d6085b-12bf-48cc-9e8b-925f4d1f5ffa",
    "prId" : 1570,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1570#pullrequestreview-124063342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc7286c-da56-4d73-8902-f4e4006a6a62",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "There is a lot left to be desired here:\r\n\r\n* what is the callback `Path`? Is it relative or absolute? Is is a path inside a zip file or a file system path? The relative path to the `*.semanticdb` files is irrelevant since it's fair game to concatenate semanticdb files.\r\n* how to do I access semanticidx? Without it I will need to roll my own traverser in scalafix symtab.\r\n* I prefer to work with `TextDocument` instead of `TextDocuments`, this would also alleviate the need for `Path` since it seems to be only used to get the relative path of the SemanticDB file\r\n\r\nI think we can do better by taking inspiration from the `visit(AbsolutePath => FileVisitor)` interface here\r\n https://github.com/scalameta/scalameta/blob/34bd4375c36af65ac481f64b7c7205309b8b2568/scalameta/io/shared/src/main/scala/scala/meta/internal/io/package.scala#L12-L29\r\n\r\nSince this is internal API I'm happy to iterate on this in followup PRs. Here is a strawman of how `Locator` could look like\r\n\r\n```scala\r\nobject Locator {\r\n  def docs(paths: Seq[Path])(fn: TextDocument => Unit) Unit\r\n  def index(paths: Seq[Path])(fn: Index => Unit) Unit\r\n  def indexWithDocs(paths: Seq[Path])(fn: Index => TextDocument => Unit) Unit\r\n}\r\n```\r\n",
        "createdAt" : "2018-05-29T10:57:55Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "ad4de974-395a-492a-9d00-40847b8d2774",
        "parentId" : "3bc7286c-da56-4d73-8902-f4e4006a6a62",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This is the only blocking comment, the rest of the commits LGTM 👍 ",
        "createdAt" : "2018-05-29T12:59:42Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "75c3ac5d-da23-4bc8-98a2-ab00ca0b5978",
        "parentId" : "3bc7286c-da56-4d73-8902-f4e4006a6a62",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Please feel free to iterate on the API yourself once we merge. I don't have a strong opinion here, as long as there's an overload or something that takes a list of paths and a `TextDocument => Unit` - that we need internally at Twitter.",
        "createdAt" : "2018-05-29T16:06:38Z",
        "updatedAt" : "2018-05-29T16:06:38Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "79de6a1047866355c6ac1b46427e91840afcfc22",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@\nobject Locator {\n  def apply(paths: List[Path])(fn: (Path, TextDocuments) => Unit): Unit = {\n    paths.foreach(path => apply(path)(fn))\n  }"
  }
]