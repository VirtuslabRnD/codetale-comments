[
  {
    "id" : "3856bb3d-4d50-4f5c-9cde-1766af3da306",
    "prId" : 1738,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1738#pullrequestreview-144063535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "722f40b5-3270-4fc0-bbf5-a385552fb586",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "üëè the words \"simple\", \"obviously\", \"clearly\" must disappear from all documentation",
        "createdAt" : "2018-08-07T15:51:42Z",
        "updatedAt" : "2018-08-07T16:03:36Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc08bebdb55343bea8b986c70d25db6741cecedf",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +1135,1139 @@### Notation\n\nWe use a concise notation to describe SemanticDB entities.\nIn this notation, `M(v1, v2, ...)` corresponds a Protocol Buffers message\n`M` with fields set to values `v1`, `v2`, etc. Literals correspond to"
  },
  {
    "id" : "18efbcec-856d-43cc-9fad-7be7261579c9",
    "prId" : 1712,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1712#pullrequestreview-140946094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5419220a-dcee-410d-8f37-a43a0843d67f",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Can you also update the `reserved` bit above?",
        "createdAt" : "2018-07-25T17:44:56Z",
        "updatedAt" : "2018-07-26T23:31:50Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "dbba7ca1-cb4a-4433-b9b8-fd092419e962",
        "parentId" : "5419220a-dcee-410d-8f37-a43a0843d67f",
        "authorId" : "568faf75-3ec5-4518-8906-8fc1bb15b893",
        "body" : "It was already reserved, so I didn't change that.",
        "createdAt" : "2018-07-26T22:51:19Z",
        "updatedAt" : "2018-07-26T23:31:50Z",
        "lastEditedBy" : "568faf75-3ec5-4518-8906-8fc1bb15b893",
        "tags" : [
        ]
      },
      {
        "id" : "cf1a40d2-2015-48c8-ab2d-79942f6d0025",
        "parentId" : "5419220a-dcee-410d-8f37-a43a0843d67f",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Wow indeed.",
        "createdAt" : "2018-07-26T23:45:20Z",
        "updatedAt" : "2018-07-26T23:45:20Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddc7c81e2f8aacd0ebf9c53dfe3d6295b75d883d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +112,116 @@  repeated SymbolOccurrence occurrences = 6;\n  repeated Diagnostic diagnostics = 7;\n  repeated Synthetic synthetics = 12;\n}\n```"
  },
  {
    "id" : "4a4828a2-9bb6-4e61-8b24-fb884a7952e7",
    "prId" : 1712,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1712#pullrequestreview-140426179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c86e0462-42c5-40fd-b8f3-2c7884753d84",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "`We may improve on this in the future.`",
        "createdAt" : "2018-07-25T17:56:15Z",
        "updatedAt" : "2018-07-26T23:31:50Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddc7c81e2f8aacd0ebf9c53dfe3d6295b75d883d",
    "line" : 441,
    "diffHunk" : "@@ -1,1 +3547,3551 @@#### Synthetic\nAt this moment, there is no tool that supports Synthetic for\nthe Java language.\nWe intend to improve on this in the future.\n"
  },
  {
    "id" : "087e5133-f8f8-4fd8-84d0-1cfc91d17724",
    "prId" : 1712,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1712#pullrequestreview-141952315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dea87de-d853-4731-8a15-456fd31060f3",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Wow, I didn't know you could embed markdown code listings inside HTML markup inside markdown files üòç I don't want to write `&gt;` ever again üòÇ ",
        "createdAt" : "2018-07-31T13:25:48Z",
        "updatedAt" : "2018-07-31T13:29:08Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddc7c81e2f8aacd0ebf9c53dfe3d6295b75d883d",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +2482,2486 @@  <td>\n      \n```scala\nSynthetic(\n  <List>,"
  },
  {
    "id" : "02de922a-d63b-47d4-a7f9-9e91a4aa1121",
    "prId" : 1641,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1641#pullrequestreview-133520705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "beee572c-8d2a-450b-afe2-e9a54037e177",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Can you also mention the same thing for Java fields?",
        "createdAt" : "2018-07-02T02:55:09Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "d4cc9711-3de7-4016-a4f6-54d853f626a8",
        "parentId" : "beee572c-8d2a-450b-afe2-e9a54037e177",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Good idea, done.",
        "createdAt" : "2018-07-02T08:14:06Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a27c360098279cf8cb20062b3532047568c613",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1930,1934 @@* Method symbols support [all Scala accessibilities](#scala-accessibility).\n* The disambiguators for `m3()` and `m3(+1)` do not take into account overloaded\n  object `m3.`.\n\n**Macro definitions** [\\[51\\]][51] are represented with `MACRO` symbols"
  },
  {
    "id" : "c0cd1c10-00f6-4f32-b733-8a39fd27a792",
    "prId" : 1635,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1635#pullrequestreview-132611070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6237874-2ab5-44cc-9e45-ae8ead4dde32",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The spec is missing the definition of `Constant`",
        "createdAt" : "2018-06-26T09:03:04Z",
        "updatedAt" : "2018-06-27T21:12:48Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "2d8727be-1a3a-4d56-847c-438d44cd5e7d",
        "parentId" : "d6237874-2ab5-44cc-9e45-ae8ead4dde32",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Done. I meant to discuss whether the triviality of constants merits not including them in the spec, but it was simpler to just go ahead and add them.",
        "createdAt" : "2018-06-27T21:13:18Z",
        "updatedAt" : "2018-06-27T21:13:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0095a1a0d25f5e88e88bd4dc027689b421701b73",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +454,458 @@```protobuf\nmessage ConstantType {\n  Constant constant = 1;\n}\n```"
  },
  {
    "id" : "88f5f96b-d451-4cc2-b83d-4c524cda9f7b",
    "prId" : 1580,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1580#pullrequestreview-126442176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb7fbd4b-18aa-4361-b1bf-839f21b95d08",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Would it make sense to use `softlinks` instead? I already caught myself running `grep SoftlinkChildren` in the codebase as I don't associate \"sym\" as an opposite of \"hard\"",
        "createdAt" : "2018-06-06T11:53:44Z",
        "updatedAt" : "2018-06-06T16:26:32Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "df22f95b-e368-458a-9e5a-9f60fd51947a",
        "parentId" : "bb7fbd4b-18aa-4361-b1bf-839f21b95d08",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Aren't softlinks and symlinks the same thing?",
        "createdAt" : "2018-06-06T15:19:12Z",
        "updatedAt" : "2018-06-06T16:26:32Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "c3353f56-db48-475c-a201-0ccf441cd303",
        "parentId" : "bb7fbd4b-18aa-4361-b1bf-839f21b95d08",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Talking with colleagues and reading `man ln` seems to indicate that symlinks are indeed opposites, fair enough üëç ",
        "createdAt" : "2018-06-06T15:56:11Z",
        "updatedAt" : "2018-06-06T16:26:32Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c581e165334c532a8783b351597731da4ed18e8",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +254,258 @@```protobuf\nmessage Scope {\n  repeated string symlinks = 1;\n  repeated SymbolInformation hardlinks = 2;\n}"
  },
  {
    "id" : "10bd4cad-8aed-4a90-85a7-ba08c484e75d",
    "prId" : 1506,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1506#pullrequestreview-114283474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4935c291-4f1c-4682-9758-790beb7231f2",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Not sure why this was changed.",
        "createdAt" : "2018-04-22T23:06:33Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "9fb7921e-2341-4559-ada3-e33743e85f38",
        "parentId" : "4935c291-4f1c-4682-9758-790beb7231f2",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It was off sync with semanticdb3.proto. I looked into it since members, signature and and overrides have been removed.",
        "createdAt" : "2018-04-23T12:06:18Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbfa5fdaef97e3097cd8450a470bbdc750df482",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +470,474 @@```protobuf\nmessage SymbolInformation {\n  reserved 1, 2, 4, 5, 7, 8, 9, 15, 16;\n  string symbol = 1;\n  Language language = 16;"
  },
  {
    "id" : "48e0ede4-012d-40af-92f0-61f92cceaf77",
    "prId" : 1506,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1506#pullrequestreview-114283474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf7c885c-d6f2-48fb-b418-300e676fc865",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Not sure why this was changed.",
        "createdAt" : "2018-04-22T23:06:37Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "14c1a90a-8e33-4fda-aab1-a71bc1e8d446",
        "parentId" : "cf7c885c-d6f2-48fb-b418-300e676fc865",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Ditto.",
        "createdAt" : "2018-04-23T12:06:26Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbfa5fdaef97e3097cd8450a470bbdc750df482",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1196,1200 @@```protobuf\nmessage SymbolInformation {\n  reserved 1, 2, 4, 5, 7, 8, 9, 15, 16;\n  string symbol = 1;\n  Language language = 16;"
  },
  {
    "id" : "4c0efd24-a37b-45d6-82dc-d2492054237b",
    "prId" : 1459,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1459#pullrequestreview-107348291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "362c33ca-fd64-43d3-896a-68c10bcb76eb",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Should this bullet appear in the top-level above \"JLS mandates\"?",
        "createdAt" : "2018-03-27T13:43:24Z",
        "updatedAt" : "2018-03-27T15:40:55Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "057a558e-a911-4045-b76f-8c3e8c173500",
        "parentId" : "362c33ca-fd64-43d3-896a-68c10bcb76eb",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Enum fields are also synthetic, so I thought it would be good to group both them and the synthetic methods.",
        "createdAt" : "2018-03-27T15:38:45Z",
        "updatedAt" : "2018-03-27T15:40:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "55a414b221b031fc9aefa63ec1b0bdeb42bbc033",
    "line" : 543,
    "diffHunk" : "@@ -1,1 +2727,2731 @@* JLS mandates the following synthetic members for enum declarations\n  [\\[86\\]][86]:\n  * Enum fields have kind `FIELD`, properties `FINAL`, `STATIC` and `ENUM`,\n    are named after the corresponding enum constants, have the type of the\n    enum declaration and `PUBLIC` accessibility."
  },
  {
    "id" : "1c6adaf9-67b3-4b21-b71b-1b77c5a45461",
    "prId" : 1459,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1459#pullrequestreview-107349125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0827243d-1e4a-4a72-9631-5c96389094f3",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Field declarations in interfaces can only be public and `STATIC` `FINAL`\r\nhttps://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.3\r\n\r\nMethod declarations in interfaces can only be public\r\nhttps://docs.oracle.com/javase/specs/jls/se8/html/jls-9.html#jls-9.4\r\n\r\nNot sure if this should be mentioned in interfaces or in methods/fields.",
        "createdAt" : "2018-03-27T13:53:04Z",
        "updatedAt" : "2018-03-27T15:40:55Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "eac94054-6357-4bfd-b490-07467d429c3a",
        "parentId" : "0827243d-1e4a-4a72-9631-5c96389094f3",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Done.",
        "createdAt" : "2018-03-27T15:40:49Z",
        "updatedAt" : "2018-03-27T15:40:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "55a414b221b031fc9aefa63ec1b0bdeb42bbc033",
    "line" : 591,
    "diffHunk" : "@@ -1,1 +2775,2779 @@  * `ABSTRACT`: implicitly set for all interface symbols.\n* Interface declarations support\n  [all Java accessibilities](#java-accessibility).\n* Interface members without explicit access modifiers have accessibility\n  `PUBLIC` by default instead of `PRIVATE_WITHIN`."
  },
  {
    "id" : "960d04e0-3768-4f56-9990-e5e6e7e07f94",
    "prId" : 1416,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1416#pullrequestreview-102582915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65e9432f-866f-4299-9c02-3a4a9e8d116e",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "üëç ",
        "createdAt" : "2018-03-09T12:00:14Z",
        "updatedAt" : "2018-03-09T15:12:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff10c15502b6b6400abe286a263819084a11d18",
    "line" : 736,
    "diffHunk" : "@@ -1,1 +2142,2146 @@on this in the future, but this is highly unlikely.\n\n### Java\n\nJava `class` file format [\\[68\\]][68] can be mapped onto SemanticDB."
  },
  {
    "id" : "efddd901-e400-46a9-8fab-d7804ba1b07b",
    "prId" : 1416,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1416#pullrequestreview-102675419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e69b35ca-692f-4acd-a163-18274715e998",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Repeating question from elsewhere, is there a property to distinguish the getter from the setter?",
        "createdAt" : "2018-03-09T12:10:00Z",
        "updatedAt" : "2018-03-09T15:12:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "d392a328-69af-48b9-9ea3-ceedb09f3b11",
        "parentId" : "e69b35ca-692f-4acd-a163-18274715e998",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Updated the spec.",
        "createdAt" : "2018-03-09T15:03:44Z",
        "updatedAt" : "2018-03-09T15:12:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff10c15502b6b6400abe286a263819084a11d18",
    "line" : 478,
    "diffHunk" : "@@ -1,1 +1330,1334 @@* Field symbol of kind `FIELD` is created for non-`ABSTRACT` member variables\n  to model the field generated by the Scala compiler.\n* Getter and setter symbols of kind `METHOD` are created for all\n  non-`PRIVATE_THIS` member variables to model the corresponding\n  getter and setter methods generated by the Scala compiler."
  },
  {
    "id" : "ce2621c3-00bb-4a3c-8cf9-c1d80adba831",
    "prId" : 1326,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1326#pullrequestreview-97378220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b64e3f1a-1d34-4365-bd19-4ba5af31aafa",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It might be good to explicitly mention if case class parameters are any different or not. Does a blank case class field contain VALPARAM?",
        "createdAt" : "2018-02-17T12:52:29Z",
        "updatedAt" : "2018-02-17T13:07:45Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "77023fec-98cc-49ec-88c5-049d9f982968",
        "parentId" : "b64e3f1a-1d34-4365-bd19-4ba5af31aafa",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "They are different. This will documented as part of a larger effort to comprehensively cover synthetics: https://github.com/scalameta/scalameta/issues/1329.",
        "createdAt" : "2018-02-17T16:16:45Z",
        "updatedAt" : "2018-02-17T16:16:45Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "098e876247bdeb8c5b579978b237091752344f2d",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +1651,1655 @@  * `IMPLICIT`: set for `implicit` parameters, as well as desugared context\n    bounds and view bounds (see above).\n  * `VALPARAM`: set for `val` parameters of primary constructors.\n  * `VARPARAM`: set for `var` parameters of primary constructors.\n* Unlike some other metaprogramming systems for Scala, we do not"
  },
  {
    "id" : "ef698bf6-f69e-4150-bb03-ceadc4c3006e",
    "prId" : 1259,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1259#pullrequestreview-94122273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0b13e00-f580-445b-895f-62f3e0ecc660",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I don't understand the last sentence",
        "createdAt" : "2018-02-05T15:21:34Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "1149fa79-0c06-4ee4-9526-12a07b10cd91",
        "parentId" : "f0b13e00-f580-445b-895f-62f3e0ecc660",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Fixed.",
        "createdAt" : "2018-02-05T18:36:14Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "fa2ab711-dfea-48c2-a42e-20a7718c1da9",
        "parentId" : "f0b13e00-f580-445b-895f-62f3e0ecc660",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "üëç ",
        "createdAt" : "2018-02-05T19:57:34Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfafd4238974683ed888ce24c52bd0fa4de7aa33",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +284,288 @@In this notation, `M(v1, v2, ...)` corresponds a message `M` with fields set to values\n`v1`, `v2`, etc. Literals correspond to scalar values, and `List(x1, x2, ...)`\ncorresponds to repeated values. Moreover, `<X>` corresponds to a message that\nrepresents `X`.\n"
  },
  {
    "id" : "50cf9d0a-3284-4e8a-b645-73619d41dd3e",
    "prId" : 1259,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1259#pullrequestreview-94090353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce6edd11-ea9d-405a-9704-ccf9b99bb58e",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I think you should be able to reference link 27 with\r\n```md\r\n[32] foobar\r\n\r\n[32]: http://example.com\r\n\r\n```\r\n\r\nThat gets rendered as\r\n\r\n[32] foobar\r\n\r\n[32]: http://example.com\r\n",
        "createdAt" : "2018-02-05T15:23:12Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "0b5278ef-b173-4d3f-b8e4-59d41605906d",
        "parentId" : "ce6edd11-ea9d-405a-9704-ccf9b99bb58e",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I just wanted to have wrapping brackets like papers do :)",
        "createdAt" : "2018-02-05T18:20:37Z",
        "updatedAt" : "2018-02-05T21:04:24Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfafd4238974683ed888ce24c52bd0fa4de7aa33",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +279,283 @@In this section, we describe various alternatives of `Type`, providing example\nSemanticDB data that corresponds to different Scala types,\ninspired by the scala.reflect documentation [\\[27\\]][27].\n\nIn these examples, we will be using a simple notation to describe SemanticDB data."
  },
  {
    "id" : "8fac2672-657a-4f10-8899-e0d7044edff2",
    "prId" : 1253,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1253#pullrequestreview-93891097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6530d6b3-144c-4574-81c6-42ab4e6c9f9a",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Instead of deprecating `range`, I removed it. This is an exceptional case, but that field never worked properly, and it was introduced just a couple days ago, so I think that it's alright to outright remove it.",
        "createdAt" : "2018-02-03T21:35:31Z",
        "updatedAt" : "2018-02-03T21:35:31Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "421b97a6-9d23-4471-b9fb-0d81ee6eb447",
        "parentId" : "6530d6b3-144c-4574-81c6-42ab4e6c9f9a",
        "authorId" : "05699173-a301-4e02-a831-0dc655609bf3",
        "body" : "üëç ",
        "createdAt" : "2018-02-05T06:07:22Z",
        "updatedAt" : "2018-02-05T06:07:22Z",
        "lastEditedBy" : "05699173-a301-4e02-a831-0dc655609bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c787ab1acc1b048e2f532befcc18c966e6423558",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +228,232 @@  int32 properties = 4;\n  string name = 5;\n  Location location = 10;\n  TextDocument signature = 7;\n  repeated string members = 8;"
  },
  {
    "id" : "ac2d374b-a4f6-49c9-8d69-1f982db94e2e",
    "prId" : 1253,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1253#pullrequestreview-93856676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b85a2c6d-ec93-4760-8337-281a28821211",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "Above you suffix with the file.",
        "createdAt" : "2018-02-04T11:05:46Z",
        "updatedAt" : "2018-02-04T11:05:46Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      },
      {
        "id" : "c8336268-b4e1-4137-93b9-788aa72e082b",
        "parentId" : "b85a2c6d-ec93-4760-8337-281a28821211",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "The specification describes the contents of protobuf payloads (the so-called \"low-level semantic API\"). High-level APIs, e.g. the one implemented in `langmeta`, are free to apply custom transformations to these payloads.",
        "createdAt" : "2018-02-04T20:23:31Z",
        "updatedAt" : "2018-02-04T20:23:53Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c787ab1acc1b048e2f532befcc18c966e6423558",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +199,203 @@to be unique across multiple documents. For example, at the time of writing\n`semanticdb-scalac` produces local symbols named `local0`, `local1`, etc,\nwith the counter resetting to zero for every new document.\n\nIn the future, we may extend SemanticDB to make local symbols more unique,"
  }
]