[
  {
    "id" : "64152536-153a-4a6e-9b1e-111f466d4dbc",
    "prId" : 1641,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1641#pullrequestreview-133040554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa30635-bfff-4130-9c3e-136c8e876409",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Lol Scalac at its best :)",
        "createdAt" : "2018-06-28T22:13:19Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a27c360098279cf8cb20062b3532047568c613",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +24,28 @@      if (gsym.hasPackageFlag) l.SCALA\n      else if (gsym.hasFlag(gf.JAVA)) l.JAVA\n      else if (gsym.isParameter && gsym.owner.hasFlag(gf.JAVA)) l.JAVA\n      else l.SCALA\n    }"
  },
  {
    "id" : "0b8fc87b-8da1-49f5-91cb-b2674996bcbc",
    "prId" : 1641,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1641#pullrequestreview-133520705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40b2b403-05b4-4b47-9951-fcd62e2facf2",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Nice catch.",
        "createdAt" : "2018-06-28T22:13:24Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "66e4944c-0c29-419a-9132-3fef4571e842",
        "parentId" : "40b2b403-05b4-4b47-9951-fcd62e2facf2",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "FTR I'm starting to question our decision to remove STATIC from inner interfaces. Inner interfaces are STATIC because they are accessed the same way as static inner classes, for example `java.util.Map.Entry` is accessed as `.Entry` and not `#Entry`. ",
        "createdAt" : "2018-07-02T07:51:14Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a27c360098279cf8cb20062b3532047568c613",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +75,79 @@        if (gsym.hasFlag(gf.FINAL) || gsym.hasFlag(gf.JAVA_ENUM)) flip(p.FINAL)\n        if (gsym.hasFlag(gf.JAVA_ENUM)) flip(p.ENUM)\n        if (gsym.hasFlag(gf.STATIC) && !gsym.hasFlag(gf.INTERFACE)) flip(p.STATIC)\n      } else {\n        if (isAbstractClass || isAbstractMethod || isAbstractType) flip(p.ABSTRACT)"
  },
  {
    "id" : "1571d2a4-46ec-42ae-bc44-aa48e2ba68ee",
    "prId" : 1641,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1641#pullrequestreview-133142533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f09ea33-4939-4d7f-8111-644af25edcdb",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Should these changes be mirrored in metacp/SymbolInformationOps.scala?",
        "createdAt" : "2018-06-28T22:15:11Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "c2380693-fed0-4a13-8e42-3f42fa1e2814",
        "parentId" : "8f09ea33-4939-4d7f-8111-644af25edcdb",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I don't think so. The changes in this PR are specific to metac.",
        "createdAt" : "2018-06-29T08:52:09Z",
        "updatedAt" : "2018-07-02T09:26:35Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4a27c360098279cf8cb20062b3532047568c613",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +21,25 @@    }\n\n    private def language: s.Language = {\n      if (gsym.hasPackageFlag) l.SCALA\n      else if (gsym.hasFlag(gf.JAVA)) l.JAVA"
  },
  {
    "id" : "a98cfd99-8d9b-48b6-8bac-b7853bddd9ed",
    "prId" : 1570,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1570#pullrequestreview-123941459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "431f2648-c781-4e18-99e1-530a3b9955ef",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "ðŸ‘¿ I probably spent 30 minutes looking for `.moduleClass` and couldn't find it ðŸ˜  \r\n\r\nThank you @xeno-by for fixing this ",
        "createdAt" : "2018-05-29T11:10:09Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "dde5c253-6ee4-48b9-8929-ee49fd245704",
        "parentId" : "431f2648-c781-4e18-99e1-530a3b9955ef",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I suspect `-P:semanticdb:symbols:all` grew quite a bit heavier with this change",
        "createdAt" : "2018-05-29T11:15:02Z",
        "updatedAt" : "2018-05-29T16:05:31Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "79de6a1047866355c6ac1b46427e91840afcfc22",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +137,141 @@            preprocess(gsym.info)\n          } else if (gsym.isModule) {\n            gsym.moduleClass.info\n          } else {\n            gsym.info"
  },
  {
    "id" : "f43bce8b-1a17-45e6-a71d-dcefa74b736b",
    "prId" : 1506,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1506#pullrequestreview-114283474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5bceeee-891d-4a5f-8f83-dc69451bd5d7",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Why do we still need this?",
        "createdAt" : "2018-04-22T23:04:02Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "2d671e90-382e-4c7d-96bf-6bdf187ab01b",
        "parentId" : "f5bceeee-891d-4a5f-8f83-dc69451bd5d7",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "We need it for `symbols:all`, which is still relevant.",
        "createdAt" : "2018-04-23T12:05:30Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbfa5fdaef97e3097cd8450a470bbdc750df482",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@\n  // NOTE: Holds a symbol information along with todo lists of symbols to persist.\n  case class SymbolInformationResult(denot: s.SymbolInformation, todoTpe: List[g.Symbol])\n}"
  }
]