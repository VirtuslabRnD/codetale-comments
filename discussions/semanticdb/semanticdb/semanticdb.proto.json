[
  {
    "id" : "a85a9806-7241-4df4-b31d-a81694e8d134",
    "prId" : 2021,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2021#pullrequestreview-412483223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ac56ffd-8957-40e2-9173-54674d9b3be4",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Is this a backwards compatible change?",
        "createdAt" : "2020-05-15T08:58:41Z",
        "updatedAt" : "2020-05-20T07:32:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "b5d1ba52-b125-4104-a674-c0a5eaf8205b",
        "parentId" : "5ac56ffd-8957-40e2-9173-54674d9b3be4",
        "authorId" : "b9acc194-a8f9-4dbb-a41b-1560a4df17f5",
        "body" : "Yes.\nThis option suppresses `unknownFieldsSet` parameter to be added to sources.\n\nIf not added, lots of files needs modification and also needs copying older sources for Scala 2.11.\nI think such modification is harmful in terms of maintainability.",
        "createdAt" : "2020-05-15T09:18:56Z",
        "updatedAt" : "2020-05-20T07:32:44Z",
        "lastEditedBy" : "b9acc194-a8f9-4dbb-a41b-1560a4df17f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "af3260a74c644efec19ee1a2c884a37cad1ff1ce",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +6,10 @@\noption (scalapb.options) = {\n  preserve_unknown_fields: false\n};\n"
  },
  {
    "id" : "835d4099-4479-469f-9311-6c370d4dc2ea",
    "prId" : 1747,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1747#pullrequestreview-148804299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed250232-e260-464e-be27-747b3fb27cbc",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It would make upgrades easier if we add a deprecated extension method `SymbolInformation.name` that forwards to `displayName`",
        "createdAt" : "2018-08-20T09:04:32Z",
        "updatedAt" : "2018-08-20T09:36:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "b476ce74-cd80-42cb-8970-f1fca12608bc",
        "parentId" : "ed250232-e260-464e-be27-747b3fb27cbc",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "On the other hand, compilation errors may force the upgrader to consider whether they want `SymbolInformation.name` or `sym.desc.name`. This was super valuable to me when I was upgrading Scalameta and Rsc.\r\n\r\nI don't mind either way though. Let me know your preference, and I'll submit a follow-up pull request if you'd prefer to have an extension method.",
        "createdAt" : "2018-08-21T01:07:50Z",
        "updatedAt" : "2018-08-21T01:07:54Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "7815506b-a501-451e-bc04-c6d8d1bf0cb0",
        "parentId" : "ed250232-e260-464e-be27-747b3fb27cbc",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I agree in this case it's fine to remove without deprecation, it's pretty nice that these APIs are internal üòâ ",
        "createdAt" : "2018-08-23T08:23:57Z",
        "updatedAt" : "2018-08-23T08:23:57Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "caf3e4e47976d7f2b3383f6d1c9402dde8a7285f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +271,275 @@  Kind kind = 3;\n  int32 properties = 4;\n  string display_name = 5;\n  Signature signature = 17;\n  repeated Annotation annotations = 13;"
  },
  {
    "id" : "ea9f6527-bcf0-4bf0-a3af-a3609eee99ce",
    "prId" : 1709,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1709#pullrequestreview-141947561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faa7199b-535c-487f-be31-d7b47b29df2d",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I agree that the current API is suboptimal when it comes to reconstructing a fully desugared tree. Let's open a ticket for that.",
        "createdAt" : "2018-07-20T14:33:04Z",
        "updatedAt" : "2018-07-20T19:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "8c74c58f-61ba-49db-bec3-165de836ee11",
        "parentId" : "faa7199b-535c-487f-be31-d7b47b29df2d",
        "authorId" : "568faf75-3ec5-4518-8906-8fc1bb15b893",
        "body" : "Not sure how to phrase the ticket",
        "createdAt" : "2018-07-20T18:51:52Z",
        "updatedAt" : "2018-07-20T19:33:36Z",
        "lastEditedBy" : "568faf75-3ec5-4518-8906-8fc1bb15b893",
        "tags" : [
        ]
      },
      {
        "id" : "fc5a05b5-58bc-47c3-a4f0-1a3f6605b348",
        "parentId" : "faa7199b-535c-487f-be31-d7b47b29df2d",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "This may be an indication that the problem is too abstract for now. In that case, the ticket would probably be not worth it.",
        "createdAt" : "2018-07-20T19:17:58Z",
        "updatedAt" : "2018-07-20T19:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "845b89e0-b129-4da9-b1c3-6350143cbaf2",
        "parentId" : "faa7199b-535c-487f-be31-d7b47b29df2d",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I took a stab at formulating the problem in https://github.com/scalameta/scalameta/issues/1727 Is that clear enough?",
        "createdAt" : "2018-07-31T13:15:19Z",
        "updatedAt" : "2018-07-31T13:21:20Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "83490885e2b7a475f3c13b29f0d0b094fbeb135a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +322,326 @@  Range range = 1;\n  Tree tree = 2;\n}\n\nmessage Tree {"
  },
  {
    "id" : "4c861470-a85b-410d-b51d-51acebdf4863",
    "prId" : 1616,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1616#pullrequestreview-130649323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92b4bc37-50d2-4a9f-9b5d-88abe3a01837",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "With the new oneof encoding, I can write ADTs in protobuf all day. Thank you so much, @olafurpg and @thesamet!",
        "createdAt" : "2018-06-21T02:36:43Z",
        "updatedAt" : "2018-06-21T05:47:31Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1096f995543652d3f0a898123732076e7695edfe",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@    NullConstant nullConstant = 11;\n  }\n}\n\nmessage UnitConstant {"
  },
  {
    "id" : "bf2dfe5b-2f1f-4e8d-9acc-db587492d10b",
    "prId" : 1616,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1616#pullrequestreview-130649323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c298609f-b8cb-4d43-925c-61827f3e5f7c",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "No more `info` in `ClassInfoType` üëç ",
        "createdAt" : "2018-06-21T02:37:06Z",
        "updatedAt" : "2018-06-21T05:47:31Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1096f995543652d3f0a898123732076e7695edfe",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +204,208 @@}\n\nmessage ClassSignature {\n  Scope type_parameters = 1;\n  repeated Type parents = 2;"
  }
]