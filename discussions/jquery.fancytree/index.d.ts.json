[
  {
    "id" : "a774da20-352e-4bcc-91ac-bcd8d3bd9d4e",
    "prId" : 14781,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14781#pullrequestreview-25974323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d637075-d1a6-4fc3-84f9-c2da0d051d86",
        "parentId" : null,
        "authorId" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "body" : "Why is ```any``` necessary here? Could you add some usage examples in the test file to demonstrate?",
        "createdAt" : "2017-03-08T23:44:48Z",
        "updatedAt" : "2017-03-08T23:45:06Z",
        "lastEditedBy" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "tags" : [
        ]
      },
      {
        "id" : "3fb7fe92-3889-4183-9cbd-a96465508aca",
        "parentId" : "4d637075-d1a6-4fc3-84f9-c2da0d051d86",
        "authorId" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "body" : "It's better to ask \"why Object is necessary here\" :). Actually `data` is anything associated with a node. \r\nSo if I put some object into it in one place:\r\n```\r\ntree.rootNode.data = { model: someDomainObject }\r\n```\r\nthen I'd expect it available in another:\r\n```\r\nlet model = tree.rootNode.data.model;\r\n```\r\nbut it won't compile:\r\nTS2339: Property 'model' does not exist on type 'Object'.\r\n",
        "createdAt" : "2017-03-09T08:50:58Z",
        "updatedAt" : "2017-03-09T08:50:58Z",
        "lastEditedBy" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd6344b8a4d4031e08e49152a360d76fe5c045e3",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +203,207 @@        title: string;\n        /** Contains all extra data that was passed on node creation */\n        data: any;\n        /** Array of child nodes. For lazy nodes, null or undefined means 'not yet loaded'. Use an empty array to define a node that has no children. */\n        children: FancytreeNode[];"
  },
  {
    "id" : "fe837e71-9447-4374-86c3-7132ced27655",
    "prId" : 14781,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14781#pullrequestreview-25972852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1daa7875-e6a6-4bd6-a48a-908839f5bd4b",
        "parentId" : null,
        "authorId" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "body" : "Could you add the actual ```JQueryUI.Widget``` type?",
        "createdAt" : "2017-03-08T23:45:03Z",
        "updatedAt" : "2017-03-08T23:45:07Z",
        "lastEditedBy" : "d853babe-4254-41de-b4dc-f225efa4a6ff",
        "tags" : [
        ]
      },
      {
        "id" : "394420a7-cab9-43d7-9f7d-c88c9c5cfc81",
        "parentId" : "1daa7875-e6a6-4bd6-a48a-908839f5bd4b",
        "authorId" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "body" : "JQueryUI.Widget is implemented in such a way that some fields like `element` and methods like `destroy` are not accessible.",
        "createdAt" : "2017-03-09T08:42:46Z",
        "updatedAt" : "2017-03-09T08:42:46Z",
        "lastEditedBy" : "7d0be140-1d2c-49e8-9706-1bc99845622e",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd6344b8a4d4031e08e49152a360d76fe5c045e3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@    interface Fancytree {\n        $div: JQuery;\n        widget: any; //JQueryUI.Widget;\n        rootNode: FancytreeNode;\n        $container: JQuery;"
  }
]