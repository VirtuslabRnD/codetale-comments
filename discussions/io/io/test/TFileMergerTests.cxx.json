[
  {
    "id" : "9d5dfd1f-1a48-471e-af0c-40f9056e8c39",
    "prId" : 1073,
    "prUrl" : "https://github.com/root-project/root/pull/1073#pullrequestreview-66202414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebaebc1e-7ef7-46f5-ae25-586ac281d594",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Setting branch address to a stack address requires to either call ```t->ResetBranchAddresses();``` or delete the TTree (otherwise it is technically in an invalid state).",
        "createdAt" : "2017-09-28T23:13:40Z",
        "updatedAt" : "2017-10-04T21:02:17Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "5ce758e4-225a-4592-8e68-9a8dbb2c454c",
        "parentId" : "ebaebc1e-7ef7-46f5-ae25-586ac281d594",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Does that mean that `file.Get(name)` allocates an object and it is the user's responsibility to deallocate it? If yes, I assume I can transform it into a unique_ptr and would that work well with having a `t->ResetBranchAddresses();`?",
        "createdAt" : "2017-09-29T14:48:17Z",
        "updatedAt" : "2017-10-04T21:02:17Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "503da5aa-1372-4c24-a411-cafe93c17b44",
        "parentId" : "ebaebc1e-7ef7-46f5-ae25-586ac281d594",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "> Does that mean that file.Get(name) allocates an object and it is the user's responsibility to deallocate it?\r\n\r\nIn the case of a TTree, the point is an implicit shared pointer.  You can delete it (and the TFile will be informed) and you can let the TFile delete it (but your are not directly inform when it does unless you are registered in the list of cleanups).\r\n\r\n> If yes, I assume I can transform it into a unique_ptr \r\n\r\nYes, you can as long as you make sure that the lifetime of the unique_ptr is less or equal to the litetime of the TFile.\r\n\r\n\r\n\r\n",
        "createdAt" : "2017-09-29T14:59:55Z",
        "updatedAt" : "2017-10-04T21:02:17Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "d1b2039d-e601-45a2-808d-9ee773dc6723",
        "parentId" : "ebaebc1e-7ef7-46f5-ae25-586ac281d594",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Should be done.",
        "createdAt" : "2017-09-29T16:22:08Z",
        "updatedAt" : "2017-10-04T21:02:17Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8a02a791930468b123b658d389b427d69140d10",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@\n   double d;\n   t->SetBranchAddress(name, &d);\n   t->GetEntry(0);\n   EXPECT_EQ(expectedValue, d);"
  }
]