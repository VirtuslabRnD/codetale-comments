[
  {
    "id" : "302171e7-d1c5-475e-a2ca-6c3266a6558e",
    "prId" : 1661,
    "prUrl" : "https://github.com/root-project/root/pull/1661#pullrequestreview-99201137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad198142-d1bc-44bc-855b-7586a384e0d4",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This is used in a few places in the CollectionProxy implementation.  Is it really not needed for the Text versions?",
        "createdAt" : "2018-02-23T22:04:04Z",
        "updatedAt" : "2018-02-23T22:04:05Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "0f15ec50-ff22-4c8d-a7b0-cd838f031b21",
        "parentId" : "ad198142-d1bc-44bc-855b-7586a384e0d4",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "> Is it really not needed for the Text versions?\r\n\r\nIn text version full stack of streamer infos is preserved.\r\nOne should check if **fInfo** in TBufferFile always contains that is expected.\r\nFor instance, if one store objects with other objects as data members like:\r\n\r\n    class Test {\r\n        int fInt;\r\n        TNamed fNamed;\r\n        Float16_t fFloat;\r\n    };\r\n\r\nQuestion - does **fInfo** really points on Test class after storing **fNamed** member? ",
        "createdAt" : "2018-02-23T23:05:55Z",
        "updatedAt" : "2018-02-23T23:05:55Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "14081469-def3-4d98-baba-2aba42ad1931",
        "parentId" : "ad198142-d1bc-44bc-855b-7586a384e0d4",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Maintaining this is the job of IncrementLevel and DecrementLevel ...",
        "createdAt" : "2018-02-24T00:35:26Z",
        "updatedAt" : "2018-02-24T00:35:26Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "f57ed7e3-7138-4ddd-8264-a1584013394d",
        "parentId" : "ad198142-d1bc-44bc-855b-7586a384e0d4",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "> Maintaining this is the job of IncrementLevel and DecrementLevel ...\r\n\r\nNow I see in TBufferFile.cxx source code. \r\nActually, TBufferJSON/XML/SQL maintain own stack of streamer infos, but with additional information. Therefore I will keep logic as is",
        "createdAt" : "2018-02-26T07:14:23Z",
        "updatedAt" : "2018-02-26T07:14:23Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6440c8e165de7ac846dc5ae9aa554d89a354ffbc",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +49,53 @@   typedef std::vector<TStreamerInfo*> InfoList_t;\n\n   TStreamerInfo  *fInfo{nullptr};  ///< Pointer to TStreamerInfo object writing/reading the buffer\n   InfoList_t      fInfoStack;     ///< Stack of pointers to the TStreamerInfos\n"
  }
]