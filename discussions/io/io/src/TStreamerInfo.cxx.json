[
  {
    "id" : "ddb22c6d-b91c-4856-afd2-f400c16d89b4",
    "prId" : 6445,
    "prUrl" : "https://github.com/root-project/root/pull/6445#pullrequestreview-497027376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "965479ab-c30e-4625-9486-6ecbcef6c11d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can you `R__ASSERT` on `i` (or even better, `TClass::GetClass(\"pair<const int,int>\")`), such that if the bootstrap ever changes we get some reasonable / helpful diagnostics, better than a `nullptr` `this` in a virtual function?",
        "createdAt" : "2020-09-26T20:05:04Z",
        "updatedAt" : "2020-09-30T21:19:23Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "0005d17fa38c8acd5947072e5fe14cbe48aef703",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +5627,5631 @@   // and emulated TClass.\n\n   TStreamerInfo *i = (TStreamerInfo*)TClass::GetClass(\"pair<const int,int>\")->GetStreamerInfo()->Clone();\n   std::string pname = \"pair<\" + firstname + \",\" + secondname;\n   pname += (pname[pname.length()-1]=='>') ? \" >\" : \">\";"
  },
  {
    "id" : "06e89357-e2b2-496c-9a39-414ef79425fc",
    "prId" : 6445,
    "prUrl" : "https://github.com/root-project/root/pull/6445#pullrequestreview-497895201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd3de71b-3ed3-4fa8-bafb-298d7e1beb36",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "```suggestion\r\n   if (pname.back() == '>')\r\n      pname += ' ';\r\n   pname += '>';\r\n```",
        "createdAt" : "2020-09-26T20:08:03Z",
        "updatedAt" : "2020-09-30T21:19:23Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "08d78870-f5db-4fc2-a03e-8b445ed5f5ae",
        "parentId" : "dd3de71b-3ed3-4fa8-bafb-298d7e1beb36",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Sorry - I realize now that this is just moved from `R__GenerateTClassForPair` - take my comments as irrelevant suggestions: I agree we can keep this code as is.",
        "createdAt" : "2020-09-26T20:10:05Z",
        "updatedAt" : "2020-09-30T21:19:23Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "5a61e9e8-88a4-4fa7-a9ac-7118c357cc05",
        "parentId" : "dd3de71b-3ed3-4fa8-bafb-298d7e1beb36",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Technically the existing version is (slightly) faster and, in my humble opinion (aka \"for me\") is at least as readable.",
        "createdAt" : "2020-09-28T21:05:14Z",
        "updatedAt" : "2020-09-30T21:19:23Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0005d17fa38c8acd5947072e5fe14cbe48aef703",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +5629,5633 @@   TStreamerInfo *i = (TStreamerInfo*)TClass::GetClass(\"pair<const int,int>\")->GetStreamerInfo()->Clone();\n   std::string pname = \"pair<\" + firstname + \",\" + secondname;\n   pname += (pname[pname.length()-1]=='>') ? \" >\" : \">\";\n   i->SetName(pname.c_str());\n   i->SetClass(nullptr);"
  },
  {
    "id" : "64b6872c-d409-42f9-bd2d-1a4ecfd94634",
    "prId" : 6729,
    "prUrl" : "https://github.com/root-project/root/pull/6729#pullrequestreview-520547409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad29cc90-2781-49f6-9d4e-5d8773b1c1e8",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "```suggestion\r\n         if (auto enumdesc = TEnum::GetEnum(dmType, TEnum::kNone)) {\r\n```",
        "createdAt" : "2020-10-30T14:05:05Z",
        "updatedAt" : "2020-10-30T16:45:33Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a22485e62e603d01b8726f6107635ae5cdb51bef",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +5591,5595 @@      if (!clm) {\n         auto enumdesc = TEnum::GetEnum(dmType, TEnum::kNone);\n         if (enumdesc) {\n            auto dtype = enumdesc->GetUnderlyingType();\n            auto el = new TStreamerBasicType(dmName, dmTitle, offset, dtype, dmFull.c_str());"
  },
  {
    "id" : "effe7ca6-bc78-49d0-b2ff-a48623a595ed",
    "prId" : 6873,
    "prUrl" : "https://github.com/root-project/root/pull/6873#pullrequestreview-538844997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57bd7f96-a8df-4daa-b37d-18f7aea97e7d",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Can you assert that `!hint_pair_offset == !hint_pair_size`? Else things will go belly up - and that's certainly a possibility given that an existing interface was amended.",
        "createdAt" : "2020-11-25T13:40:59Z",
        "updatedAt" : "2020-11-25T21:06:05Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "e30b696f-fbf1-436e-9926-9ccfa4872df9",
        "parentId" : "57bd7f96-a8df-4daa-b37d-18f7aea97e7d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Sure",
        "createdAt" : "2020-11-25T21:04:40Z",
        "updatedAt" : "2020-11-25T21:06:05Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cc1a35d319a2fc3f6986b0f6e946d1513995c3a",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +5723,5727 @@   if (hint_pair_size) {\n      i->GetClass()->SetClassSize(hint_pair_size);\n      i->GetClass()->fIsSyntheticPair = kTRUE;\n   }\n"
  },
  {
    "id" : "e2946559-283b-4f6e-b086-409678aaf28a",
    "prId" : 6873,
    "prUrl" : "https://github.com/root-project/root/pull/6873#pullrequestreview-539209538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fca10d7c-98ef-4777-bd4c-a997c09024a0",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I really meant to please add an assert on `(!hint_pair_offset == !hint_pair_size)`: it's checking that either both or non are `==0`. Your current `if` doesn't check that.",
        "createdAt" : "2020-11-26T10:58:35Z",
        "updatedAt" : "2020-11-26T10:58:36Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cc1a35d319a2fc3f6986b0f6e946d1513995c3a",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +5679,5683 @@   // and emulated TClass.\n\n   if (hint_pair_offset && hint_pair_offset == hint_pair_size) {\n      Error(\"GenerateInfoForPair\",\n            \"Called with inconsistent offset and size. For \\\"std::pair<%s,%s>\\\" requested offset is %ld but size is the same (%ld)\","
  }
]