[
  {
    "id" : "64e6d53b-ead2-4cce-acb9-6c7fb80f4302",
    "prId" : 5330,
    "prUrl" : "https://github.com/root-project/root/pull/5330#pullrequestreview-390570096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dea15646-c631-41a7-8c09-0da4464ac4b2",
        "parentId" : null,
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "This test restrict to the same class or one that has the class as a left most base class.  Is that the intent?\r\nIf not, you could still adjust the pointer to support non-left most base classes.",
        "createdAt" : "2020-04-08T19:55:04Z",
        "updatedAt" : "2020-04-09T14:27:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "dca34f96-e6a5-4db7-b0c0-5a70bd333467",
        "parentId" : "dea15646-c631-41a7-8c09-0da4464ac4b2",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "Yes, this is intended. I have a use case with `std::unique_ptr<BaseClass>` and want to read objects of derived classes. I am not sure that here complex muliple inheritance need to be supported",
        "createdAt" : "2020-04-08T20:36:13Z",
        "updatedAt" : "2020-04-09T14:27:15Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      },
      {
        "id" : "74acb602-7099-44d3-82e5-81266bd06d2c",
        "parentId" : "dea15646-c631-41a7-8c09-0da4464ac4b2",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "Supporting the more complex case is (seemingly) straightforward (almost `obj = (...)((char*)obj)+jsonClass->GetBaseClassOffset(objClass)`)\r\n\r\nAlternatively the message must be much clearer (i.e. \"why\" is there a mismatch)",
        "createdAt" : "2020-04-08T21:25:13Z",
        "updatedAt" : "2020-04-09T14:27:15Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      },
      {
        "id" : "19600f73-fb06-49bf-8d61-3c0bb78b6526",
        "parentId" : "dea15646-c631-41a7-8c09-0da4464ac4b2",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "This change has some other side effects. I prefer to support here only direct left most inheritance.\r\nI tried to update comment. ",
        "createdAt" : "2020-04-09T07:58:59Z",
        "updatedAt" : "2020-04-09T14:27:15Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bb393ce76e8aef811bf996933e7a667f9a9b7c3",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1890,1894 @@\n      if (objClass && (jsonClass != objClass)) {\n         if (obj || (jsonClass->GetBaseClassOffset(objClass) != 0)) {\n            if (jsonClass->GetBaseClassOffset(objClass) < 0) \n               Error(\"JsonReadObject\", \"Not possible to read %s and casting to %s pointer as the two classes are unrelated\","
  }
]