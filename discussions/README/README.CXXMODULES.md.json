[
  {
    "id" : "0c9423dd-f85b-4c63-b4db-6a822ac6fb08",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c25cb81c-fd59-41d1-8824-5d17c675f3cd",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Even if the function decl is in the ROOT PCH we cannot load the library.\r\n\r\nIt is still incorrect to state \"improved correctness\"; nothing in your `gMinuit` example is broken. Instead, preloading modules extends the autoloading feature. Which is fantastic - but again you don't need to exaggerate on the past to show how nice PCMs are!",
        "createdAt" : "2018-11-23T18:38:23Z",
        "updatedAt" : "2018-11-24T10:12:16Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "98ca22d8-26ed-452c-a688-6cb52613d7c3",
        "parentId" : "c25cb81c-fd59-41d1-8824-5d17c675f3cd",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "It is hard to draw the line. For me `gMinuit` should behave the same as `gROOT`, `gInterpreter` and alike. Currently it does not and thus, to me, this is incorrect.",
        "createdAt" : "2018-11-24T09:57:21Z",
        "updatedAt" : "2018-11-24T10:12:16Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "67d65246-f2b8-4385-b307-ef72ff174443",
        "parentId" : "c25cb81c-fd59-41d1-8824-5d17c675f3cd",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "It does behave as any other symbol: if the symbol is loaded, it's there, else it's not. That does not explain a correctness issue.",
        "createdAt" : "2018-11-25T15:16:24Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 319,
    "diffHunk" : "@@ -1,1 +317,321 @@  * Improved correctness in number of cases -- in a few cases ROOT is more\n  correct. In particular, when resolving global variables and function\n  declarations which are not part of the ROOT PCH.\n  * Enhanced symbol resolution mechanisms, bloom filters -- standard ROOT relies\n  on information in ROOTMAP files to react when the llvm JIT issues an"
  },
  {
    "id" : "286a12ef-03de-42e9-a391-4657c3aecc22",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02203175-90f6-432f-832b-256dd70a50ac",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I don't understand this - which likely means other readers won't understand it either. I would have assumed that the solution is to build a PCH for the common header? O, and you assume that this is a header in /usr/include which then needs a vfs entry? Right - but it could also be say a Geant4 header, which would motivate modularization of Geant4, without vfs. I'd not mention vfs here but the need to create a module, such that both modules can depend on it. At least to me that's less confusing.",
        "createdAt" : "2018-11-25T15:21:22Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 345,
    "diffHunk" : "@@ -1,1 +343,347 @@  CMSSW to use C++ Modules [[6]] we have implemented a helper tool [[7]]. The\n  tool detects (based on the include paths of the compiler) dependencies and\n  tries to generate the relevant vfs file.\n\n## State of the union"
  },
  {
    "id" : "a2ef5f06-7b1e-4ec1-a523-61085e30b991",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "571b2b5f-8676-43b9-8ccd-6298974ae128",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Do you think most people will understand what this means?",
        "createdAt" : "2018-11-25T15:22:06Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 363,
    "diffHunk" : "@@ -1,1 +361,365 @@```cpp\n// ROOT prompt\nroot [] import ROOT.*;\nroot [] import Foo.*;\nroot [] S *s;           // #1: does not require a definition."
  },
  {
    "id" : "9b569d21-38ec-48f0-a0c5-1e5ba19df45f",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddbcc380-2166-46c0-9397-9b029b993ff7",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I don't understand \"and we are rebuilt\"",
        "createdAt" : "2018-11-25T16:08:24Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 381,
    "diffHunk" : "@@ -1,1 +379,383 @@  * Relocatability issues -- we have fixed a few of the relocatability issues we\n  found. We are aware of an obscure relocatability issue when ROOT is copied in\n  another folder and we are rebuild. ROOT picks up both modulemap files in\n  seemingly distinct locations.\n  * Building pcms with rootcling -- in rare cases there might be issues when"
  },
  {
    "id" : "461c0233-be1a-47a5-9ddd-e72174e2c6d4",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4776c778-8b31-4175-b5b1-511f9d96232e",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "We cannot ask people to open bug reports with clang directly. If rootcling fails they should talk to us; we can then decide that there is a clang module issue. Maybe rephrase: \"We have found issues with clang's modules implementation in the past. There might be more; please report issues you find with rootcling generating modules fo you.\"",
        "createdAt" : "2018-11-25T16:14:44Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 385,
    "diffHunk" : "@@ -1,1 +383,387 @@  * Building pcms with rootcling -- in rare cases there might be issues when\n  building pcm files with rootcling. The easiest will be to open a bug report\n  to clang, however, reproducing a failure outside of rootcling is very difficult\n  at the moment.\n  * Generation of RooFit dictionary hangs -- on some platforms (depending on the"
  },
  {
    "id" : "2ed53fcb-efde-4925-99e3-6a0d1997b10e",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8c92aa5-876b-4dbe-9da0-3b021df64ee4",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Would it be enough to state \"The `ROOT::Experimental` graphics classes currently cannot be built with modules; please turn them off by configuring with `-Droot7=Off`. We are working on a fix.\"",
        "createdAt" : "2018-11-25T16:16:52Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 391,
    "diffHunk" : "@@ -1,1 +389,393 @@  infinite loop. We have fixed a number of such situations. Please contact us if\n  you see such behavior or disable roofit (`-Droofit=Off`).\n  * ROOT7 -- Due to number of layering violations, `-Droot7=On` does not work.\n  Please remember to explicitly switch it off when building with `-Dcxx14=On`\n  or `-Dcxx17=On`."
  },
  {
    "id" : "07a1b4a1-7fe6-4004-882e-c718206f4a9a",
    "prId" : 2984,
    "prUrl" : "https://github.com/root-project/root/pull/2984#pullrequestreview-178085478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c59c7dd1-70e2-4c4a-9ae5-3134e47fba7a",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "Nonetheless we have invested (else that contradiction doesn't make sense)",
        "createdAt" : "2018-11-25T16:21:52Z",
        "updatedAt" : "2018-11-25T16:22:20Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "381726c64ab583526dc3b447b3724cfc24079f9b",
    "line" : 417,
    "diffHunk" : "@@ -1,1 +415,419 @@\nThe main focus for this technology preview was not in performance due to\ntime considerations. We have invested some resources in optimizations and\nwe would like to show you (probably outdated) preliminary performance\nresults:"
  }
]