[
  {
    "id" : "2b67c0d5-73bf-48e5-810e-0697476152aa",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-587133697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "068505ee-29ce-4e16-9737-ed83053e4d09",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Do we also need to update the metric for processing time?",
        "createdAt" : "2021-02-10T17:32:46Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +227,231 @@        long endProcessingTime = time.nanoseconds();\n        long deltaNs = endProcessingTime - startProcessingTimeNs;\n        log.debug(\"Processed {} in {} us\", name,\n            MICROSECONDS.convert(deltaNs, NANOSECONDS));\n        controllerMetrics.updateEventQueueProcessingTime(NANOSECONDS.toMillis(deltaNs));"
  },
  {
    "id" : "c96e104d-e255-4a7d-ae22-f32906ac1433",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-592541803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce80298a-2d6c-4d23-bf0e-19fda2fc7543",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we move those private methods after all the internal classes?",
        "createdAt" : "2021-02-10T17:36:55Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "1ca8add8-283b-4fe0-920e-51e49946d399",
        "parentId" : "ce80298a-2d6c-4d23-bf0e-19fda2fc7543",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I normally do group private methods after internal classes, but in this case, it seemed better to keep them together.  Otherwise you'd have to jump around a lot when reading the code.  What do you think?",
        "createdAt" : "2021-02-17T18:57:08Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "2ec73feb-b518-4c4a-8692-aac599df45e8",
        "parentId" : "ce80298a-2d6c-4d23-bf0e-19fda2fc7543",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Sounds good too.",
        "createdAt" : "2021-02-17T19:19:29Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@        \"The active controller appears to be node \";\n\n    private NotControllerException newNotControllerException() {\n        int latestController = logManager.leader().nodeId();\n        if (latestController < 0) {"
  },
  {
    "id" : "b4d3268f-bb19-4098-9435-27279c431f74",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-592525518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e98f066-034d-476d-92b5-0398ac8ec82f",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "We already replay the message when it's first appended to the log and here we replay the same message again after commit. This could temporarily revert the state. For example, the latest (uncommitted) config could be overwritten by a previously committed config. ",
        "createdAt" : "2021-02-10T23:37:53Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "4d7420fb-8e36-41ef-9d26-e40af79b3a26",
        "parentId" : "6e98f066-034d-476d-92b5-0398ac8ec82f",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "This code is only executed by the followers.  It is true that the leader already applied these log messages but these nodes are not the leader.",
        "createdAt" : "2021-02-16T20:45:16Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "df45a080-483d-4cf4-8f7f-7ae204a63b70",
        "parentId" : "6e98f066-034d-476d-92b5-0398ac8ec82f",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Sounds good. Could we add a comment to make that clear?",
        "createdAt" : "2021-02-17T01:23:48Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "215b1edf-e6c0-4555-8cf5-c970b080002c",
        "parentId" : "6e98f066-034d-476d-92b5-0398ac8ec82f",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "added",
        "createdAt" : "2021-02-17T18:58:41Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 515,
    "diffHunk" : "@@ -1,1 +513,517 @@                    }\n                    for (ApiMessage message : messages) {\n                        replay(message);\n                    }\n                } else {"
  },
  {
    "id" : "9633160f-89b4-4f50-8216-b1b64aa3c933",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-594682655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d43d87e-cd3a-437d-a3a1-23a9462def67",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "I thought the raft leader epoch is an int since we store only int as leader epoch in the log?",
        "createdAt" : "2021-02-11T01:42:24Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "8b4eff65-72a2-4796-91d1-7d9586f67b99",
        "parentId" : "8d43d87e-cd3a-437d-a3a1-23a9462def67",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It is an int and will be in 2.8, but I think that's a mistake (as discussed in the mailing list) and we should plan to make this 64 bit in the near future to avoid overflow issues.\r\n\r\nSo the controller code treats it as a long... cc @hachikuji ",
        "createdAt" : "2021-02-16T21:03:31Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "9d85d72a-88ca-49fc-953e-bd119b3cfc82",
        "parentId" : "8d43d87e-cd3a-437d-a3a1-23a9462def67",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "I thought the issue was that if changing leaderEpoch to Long requires a log format change for user data, it has significant performance impact such as down conversion.",
        "createdAt" : "2021-02-17T01:35:14Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "7aa8b4c8-4d8c-43c0-934e-f1da59721305",
        "parentId" : "8d43d87e-cd3a-437d-a3a1-23a9462def67",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "It seems that using long for leaderEpoch in the log requires a bigger discussion. Could we use int for now?",
        "createdAt" : "2021-02-17T22:58:11Z",
        "updatedAt" : "2021-02-20T01:17:02Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "11bd8706-274d-4ce8-88d3-6b27eda8a3ab",
        "parentId" : "8d43d87e-cd3a-437d-a3a1-23a9462def67",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "I do think we should harmonize this, but I think it would be better to do that when we get rid of MetaLogShim. We've had a plan to get rid of the shim layer for a while but we just didn't have time to do it this week. So let's plan to do it then, if that makes sense\r\n\r\n",
        "createdAt" : "2021-02-20T01:17:04Z",
        "updatedAt" : "2021-02-20T01:17:04Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 744,
    "diffHunk" : "@@ -1,1 +742,746 @@     * thread, but it can be read from other threads.\n     */\n    private volatile long curClaimEpoch;\n\n    /**"
  },
  {
    "id" : "a238176d-ab95-4c84-8711-b60343e25276",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-591637041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc727674-0d58-4d3a-abb0-797ac26a891c",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Some of the replay (e.g. UNREGISTER_BROKER_RECORD) could throw exceptions. We probably need to turn the exception into an error response. Are we handling that already?",
        "createdAt" : "2021-02-11T02:13:48Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "45c6e42f-c75a-49d9-a392-5b2c2d1f0f1f",
        "parentId" : "dc727674-0d58-4d3a-abb0-797ac26a891c",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "If an exception is thrown here we will end up in `handleEventException`.  Since the exception won't be a subclass of `ApiException` we will resign as controller and return an `UnknownServerException`.",
        "createdAt" : "2021-02-16T21:25:13Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 450,
    "diffHunk" : "@@ -1,1 +448,452 @@                    result.records(), result.response());\n                for (ApiMessageAndVersion message : result.records()) {\n                    replay(message.message());\n                }\n                snapshotRegistry.createSnapshot(offset);"
  },
  {
    "id" : "9d06fefb-91a1-4ac1-99ca-106d40d60654",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-592599149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78a7dc8e-df1d-4ff6-a954-a6166a55dbc8",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "What triggers this on a hard controller failure?",
        "createdAt" : "2021-02-12T21:58:46Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "d475d98a-03a3-424e-9592-daa2d70bc767",
        "parentId" : "78a7dc8e-df1d-4ff6-a954-a6166a55dbc8",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "this comes out of the Raft layer and is invoked when the Raft election has succeeded and produced a new leader node.",
        "createdAt" : "2021-02-17T20:27:54Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 534,
    "diffHunk" : "@@ -1,1 +532,536 @@\n        @Override\n        public void handleNewLeader(MetaLogLeader newLeader) {\n            if (newLeader.nodeId() == nodeId) {\n                final long newEpoch = newLeader.epoch();"
  },
  {
    "id" : "98db5e58-25f6-4f2b-827a-c5ea9192b6b4",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-594682560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f8c7b9c-7077-4065-909d-4bab8eef12fc",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should we trigger the logic for leader election/isr removal since there could be unhandled fencedBroker records when the new controller takes over?",
        "createdAt" : "2021-02-12T22:01:47Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "7adb3241-9f50-4876-bcc0-15d2547ca605",
        "parentId" : "8f8c7b9c-7077-4065-909d-4bab8eef12fc",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "the standby controller must replay all the committed records before becoming active.  so, there is no unfinished work to be done at this point.",
        "createdAt" : "2021-02-17T20:29:46Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "c3f4a6d2-7d2e-4620-a2bb-1328da79ff4d",
        "parentId" : "8f8c7b9c-7077-4065-909d-4bab8eef12fc",
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Are all records generated in a single ControllerWriteEvent appended to the metadata log atomically?",
        "createdAt" : "2021-02-18T01:36:55Z",
        "updatedAt" : "2021-02-20T01:16:40Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "611dd175-229d-476e-9a91-86972ca58662",
        "parentId" : "8f8c7b9c-7077-4065-909d-4bab8eef12fc",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "RIght now the answer is yes. Eventually we plan on supporting multiple batches.",
        "createdAt" : "2021-02-20T01:16:31Z",
        "updatedAt" : "2021-02-20T01:16:31Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 548,
    "diffHunk" : "@@ -1,1 +546,550 @@                    controllerMetrics.setActive(true);\n                    writeOffset = lastCommittedOffset;\n                    clusterControl.activate();\n                });\n            }"
  },
  {
    "id" : "74f5f444-28f0-4e8f-b10d-b80df67404ed",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-592662622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7fb877-bc36-467c-9d70-f7c19612b972",
        "parentId" : null,
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "`MockControllerMetrics` is a test class?",
        "createdAt" : "2021-02-17T21:36:39Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      },
      {
        "id" : "480fd4d4-788b-4ae4-bc24-3e9b5ab2ddc2",
        "parentId" : "0d7fb877-bc36-467c-9d70-f7c19612b972",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Maybe it would be better to check for null and exit out if it is unset -- otherwise we see this, which is not ideal:\r\n\r\n```\r\nFatal error during controller startup. Prepare to shutdown (kafka.server.ControllerServer)\r\njava.lang.ClassNotFoundException: org.apache.kafka.controller.MockControllerMetrics\r\n```",
        "createdAt" : "2021-02-17T21:54:59Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +186,190 @@            if (controllerMetrics == null) {\n                controllerMetrics = (ControllerMetrics) Class.forName(\n                    \"org.apache.kafka.controller.MockControllerMetrics\").getConstructor().newInstance();\n            }\n            KafkaEventQueue queue = null;"
  },
  {
    "id" : "c8ed3211-7213-4732-a191-bca5fd48ab9b",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-593465309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acda4c3b-2b91-4ca0-aa76-05ff26d7a34e",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we add some comments for this class?",
        "createdAt" : "2021-02-18T19:44:45Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@ * results of the operation have been made durable to the metadata log.\n */\npublic final class QuorumController implements Controller {\n    /**\n     * A builder class which creates the QuorumController."
  },
  {
    "id" : "7b1997d9-def0-4c45-a737-259f14a62e09",
    "prId" : 10184,
    "prUrl" : "https://github.com/apache/kafka/pull/10184#pullrequestreview-602314738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "704311be-640e-4482-a9fe-e3894ba750c2",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "We also need to delete the configuration associated with the topic.",
        "createdAt" : "2021-02-27T02:05:27Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "29f31185-e052-48b7-ae20-a1e4b95c24f7",
        "parentId" : "704311be-640e-4482-a9fe-e3894ba750c2",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Is the deletion of topic configurations implicit based on the DeleteTopic record? I know we discussed this, but I'm unsure what the final outcome was. I don't see any logic for this in the broker listener, but the implementation looks incomplete anyway.",
        "createdAt" : "2021-03-01T22:23:05Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "7f795b3d-e3be-4850-be7b-1bf7d88199b9",
        "parentId" : "704311be-640e-4482-a9fe-e3894ba750c2",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Yes, it should be implicit based on the DeleteTopic record. I will fix the controller to do the right thing here.  We'll also need to have the broker do that too.",
        "createdAt" : "2021-03-02T22:04:00Z",
        "updatedAt" : "2021-03-04T17:23:46Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec8bdb9327d2f72b67f7acc8e158d737491711",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +843,847 @@        if (ids.isEmpty()) return CompletableFuture.completedFuture(Collections.emptyMap());\n        return appendWriteEvent(\"deleteTopics\",\n            () -> replicationControl.deleteTopics(ids));\n    }\n"
  },
  {
    "id" : "10abf549-27e5-4a6a-a633-9a67cb145acb",
    "prId" : 10366,
    "prUrl" : "https://github.com/apache/kafka/pull/10366#pullrequestreview-627209363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e13ee775-5f05-4c88-bcc2-70168b296b3f",
        "parentId" : null,
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Do we need to check to see if this epoch is known or valid? ",
        "createdAt" : "2021-04-02T18:17:43Z",
        "updatedAt" : "2021-04-05T18:40:17Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "51845b12-70ae-4a85-a72c-3cc977bb8123",
        "parentId" : "e13ee775-5f05-4c88-bcc2-70168b296b3f",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's not technically necessary since we have other checks, but I will add a check.  In general this situation should not occur.",
        "createdAt" : "2021-04-02T18:55:44Z",
        "updatedAt" : "2021-04-05T18:40:17Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "11aa2463fbb560294c2982cfc00b674f0aa7c654",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +343,347 @@        }\n\n        void createSnapshotGenerator(long epoch) {\n            if (generator != null) {\n                throw new RuntimeException(\"Snapshot generator already exists.\");"
  },
  {
    "id" : "8f97325d-3eea-476b-8360-ff7bea0dfe5a",
    "prId" : 10496,
    "prUrl" : "https://github.com/apache/kafka/pull/10496#pullrequestreview-629604517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b5ec165-393d-4f10-8740-c9122583b817",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Is this a potential issue? `\"org.apache.kafka.controller.MockControllerMetrics\"` is not in produce code also.",
        "createdAt" : "2021-04-07T05:05:05Z",
        "updatedAt" : "2021-04-07T05:28:13Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "5a66f0e3-1a81-4f68-9128-559fd49c59d6",
        "parentId" : "4b5ec165-393d-4f10-8740-c9122583b817",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I asked the same question and it's apparently intended. I think we should not use this pattern, but we can do that in a separate PR. This PR is required to fix some tests.",
        "createdAt" : "2021-04-07T05:25:14Z",
        "updatedAt" : "2021-04-07T05:28:13Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "a2878854-c178-4050-9402-e5148454f60d",
        "parentId" : "4b5ec165-393d-4f10-8740-c9122583b817",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "It's not an issue because of the way it's used in the code.  But we will probably clean this up a little bit in a follow-on PR.",
        "createdAt" : "2021-04-07T05:27:07Z",
        "updatedAt" : "2021-04-07T05:28:13Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "18266e99f9589fe1d9ffcf6635a252251583ac92",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +206,210 @@            if (controllerMetrics == null) {\n                controllerMetrics = (ControllerMetrics) Class.forName(\n                    \"org.apache.kafka.controller.MockControllerMetrics\").getConstructor().newInstance();\n            }\n            if (snapshotWriterBuilder == null) {"
  },
  {
    "id" : "be5339b8-d504-4355-8f31-a93e94ef4f9f",
    "prId" : 10505,
    "prUrl" : "https://github.com/apache/kafka/pull/10505#pullrequestreview-636033440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e83d70bb-3c8c-4bad-b0c3-732f87090d3d",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "As this method is not supported, maybe we can move this implementation to interface? The benefit is that we don't need to add similar code to both `MockController` and `QuorumController`",
        "createdAt" : "2021-04-14T07:38:40Z",
        "updatedAt" : "2021-04-15T17:38:11Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "bcd8c574-60ae-41ef-be71-64c8030ce3f7",
        "parentId" : "e83d70bb-3c8c-4bad-b0c3-732f87090d3d",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Hmm... well, it's going to be supported soon, so I'd rather keep it this way for now.",
        "createdAt" : "2021-04-14T20:04:48Z",
        "updatedAt" : "2021-04-15T17:38:11Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6584bdc90c51da779cede24fec57848dcfb48b8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1032,1036 @@            alterPartitionReassignments(AlterPartitionReassignmentsRequestData request) {\n        CompletableFuture<AlterPartitionReassignmentsResponseData> future = new CompletableFuture<>();\n        future.completeExceptionally(new UnsupportedOperationException());\n        return future;\n    }"
  }
]