[
  {
    "id" : "f2100457-d0dd-498b-aed1-ae94b2f3a45d",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-591715825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff5c9f3e-68f8-49d1-9b6c-defd44e1b6eb",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "When a broker is unfenced, some of the partitions without leader could have a new leader now. So, it seems that we need to trigger a leader election here.",
        "createdAt" : "2021-02-12T18:00:36Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "97cc186b-2944-441b-bd42-494568e6463b",
        "parentId" : "ff5c9f3e-68f8-49d1-9b6c-defd44e1b6eb",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Good point. The appropriate place to handle this will be in the broker heartbeat handling code, since that is where the active controller unfences brokers.",
        "createdAt" : "2021-02-16T23:36:58Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +293,297 @@                \"registration with that epoch found\", record.toString()));\n        } else {\n            brokerRegistrations.put(brokerId, registration.cloneWithFencing(false));\n            log.info(\"Unfenced broker: {}\", record);\n        }"
  },
  {
    "id" : "aee52a5e-7db5-498c-8863-1f62290069e8",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-592597411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "484d039e-502f-4bdd-843b-e677e1ab2129",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Sometimes, we update the in-memory state after the record is appended to the log. Here, it seems that we do the reverse. Should we make that consistent?",
        "createdAt" : "2021-02-12T21:20:15Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "72735c9e-3d4d-4605-b06f-40830ee87286",
        "parentId" : "484d039e-502f-4bdd-843b-e677e1ab2129",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "The heartbeat manager is special because it stores soft state which is not in the metadata log (when each broker last heartbeated, for example).",
        "createdAt" : "2021-02-17T20:25:33Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +207,211 @@\n        if (existing == null) {\n            heartbeatManager.touch(brokerId, true, -1);\n        } else {\n            heartbeatManager.touch(brokerId, existing.fenced(), -1);"
  },
  {
    "id" : "a1b0009a-cec9-4077-8318-41f96f99a7d6",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-593803505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ac931ae-6c71-433c-8f23-e94c81d74c3c",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we add some comments to this class?",
        "createdAt" : "2021-02-19T02:10:09Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@ * brokers being fenced or unfenced, and broker feature versions.\n */\npublic class ClusterControlManager {\n    class ReadyBrokersFuture {\n        private final CompletableFuture<Void> future;"
  }
]