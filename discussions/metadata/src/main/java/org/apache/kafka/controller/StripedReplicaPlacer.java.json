[
  {
    "id" : "1570d282-1f3a-4672-8d47-ccc04abd24e1",
    "prId" : 10494,
    "prUrl" : "https://github.com/apache/kafka/pull/10494#pullrequestreview-661503748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d458fce-aa1b-42d7-b974-d79e2395c1c8",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should we reset the offset here too?",
        "createdAt" : "2021-05-13T17:00:36Z",
        "updatedAt" : "2021-05-13T17:53:51Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "dd5daeca-0e45-424c-bd6c-14c40ac06ee7",
        "parentId" : "1d458fce-aa1b-42d7-b974-d79e2395c1c8",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Hmm, I don't think resetting the position is necessary... when `RackList#place` shuffles, it also sets the epoch to 0, so the offset will be reset anyway.",
        "createdAt" : "2021-05-17T23:21:10Z",
        "updatedAt" : "2021-05-17T23:22:23Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9a2e7c4186e22fb9c672e18f4da749e3e60ffaa",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +165,169 @@         */\n        void shuffle(Random random) {\n            Collections.shuffle(brokers, random);\n        }\n"
  },
  {
    "id" : "eae3220c-c899-4a5a-9e21-c5ddd7adac56",
    "prId" : 10494,
    "prUrl" : "https://github.com/apache/kafka/pull/10494#pullrequestreview-658502833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "011dc0f3-ec1c-4558-9824-d79adeacf254",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Could we add a bit comment explaining epoch, index and offset?",
        "createdAt" : "2021-05-13T17:03:00Z",
        "updatedAt" : "2021-05-13T17:53:51Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9a2e7c4186e22fb9c672e18f4da749e3e60ffaa",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@         * addition is done modulo the list size.\n         */\n        private int offset = 0;\n\n        /**"
  },
  {
    "id" : "4f231785-5232-4a3c-a20c-f62cc778b775",
    "prId" : 10494,
    "prUrl" : "https://github.com/apache/kafka/pull/10494#pullrequestreview-660208748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "562b92fb-3a7b-4900-b2e1-f0ac19d1c75c",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should this be `(epoch % numUnfencedBrokers) == 0`?",
        "createdAt" : "2021-05-13T17:51:21Z",
        "updatedAt" : "2021-05-13T17:53:51Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "b319ce69-2847-40c3-a7c0-7b3a244d0553",
        "parentId" : "562b92fb-3a7b-4900-b2e1-f0ac19d1c75c",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "The epoch gets reset to 0 once it reaches numUnfencedBrokers.  This avoids doing the modulus check, which is expensive as I understand it",
        "createdAt" : "2021-05-14T20:52:59Z",
        "updatedAt" : "2021-05-14T20:52:59Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9a2e7c4186e22fb9c672e18f4da749e3e60ffaa",
    "line" : 350,
    "diffHunk" : "@@ -1,1 +348,352 @@            // the cluster, shuffle the rack list and broker lists to try to avoid\n            // repeating the same assignments again.\n            if (epoch == numUnfencedBrokers) {\n                shuffle();\n                epoch = 0;"
  }
]