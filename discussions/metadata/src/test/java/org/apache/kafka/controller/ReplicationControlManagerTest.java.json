[
  {
    "id" : "509ff79a-2318-45da-b373-7ef601468f85",
    "prId" : 10343,
    "prUrl" : "https://github.com/apache/kafka/pull/10343#pullrequestreview-630680019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f0fb218-a931-433b-afb8-d1a20f258d62",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "It's easier to follow these tests when they are broken down into smaller cases. That also gives us an opportunity to provide an opportunity to give a good name to the case we're verifying. For example, `testCreatePartitionsWithInvalidReplicaAssignment` or `testCreatePartitionsWithSmallerPartitionCount`. ",
        "createdAt" : "2021-04-07T21:38:19Z",
        "updatedAt" : "2021-04-13T17:58:03Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "98c88f62-69c5-4181-9b47-e1444ac29c43",
        "parentId" : "9f0fb218-a931-433b-afb8-d1a20f258d62",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Part of the goal here is to verify that the batch operation works, though.  If all the cases were split into separate functions we would not get that validation.",
        "createdAt" : "2021-04-07T22:02:35Z",
        "updatedAt" : "2021-04-13T17:58:03Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "c55b26a421a7e5b1b79d77f69d6802d8a961bbf7",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +577,581 @@        ctx.replay(createPartitionsResult.records());\n        List<CreatePartitionsTopic> topics2 = new ArrayList<>();\n        topics2.add(new CreatePartitionsTopic().\n            setName(\"foo\").setCount(6).setAssignments(Arrays.asList(\n                new CreatePartitionsAssignment().setBrokerIds(Arrays.asList(1, 0)))));"
  },
  {
    "id" : "b15045b4-3288-4927-8e60-4e7200807fd4",
    "prId" : 11191,
    "prUrl" : "https://github.com/apache/kafka/pull/11191#pullrequestreview-726872200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e7a9374-b859-4fb0-a6fb-66046250276e",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Can we extend this test to assert something about the other partitions? Maybe also useful to assert the current leader?",
        "createdAt" : "2021-08-10T20:59:00Z",
        "updatedAt" : "2021-08-10T21:11:54Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "9babb51a-e513-49a0-a1c9-bbfc06ef56a9",
        "parentId" : "0e7a9374-b859-4fb0-a6fb-66046250276e",
        "authorId" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "body" : "Makes sense. Will add the leader assertion and see what other things we can assert here.",
        "createdAt" : "2021-08-10T21:45:37Z",
        "updatedAt" : "2021-08-10T21:53:35Z",
        "lastEditedBy" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "tags" : [
        ]
      }
    ],
    "commit" : "77be415601cbae0c977fe55006aa134b93bb5ee7",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +1071,1075 @@\n        assertArrayEquals(new int[]{1, 2, 3}, partition0.replicas);\n        assertArrayEquals(new int[]{1}, partition0.isr);\n        assertEquals(1, partition0.leader);\n"
  },
  {
    "id" : "0bd91779-433b-43f5-8436-05db6d956097",
    "prId" : 11191,
    "prUrl" : "https://github.com/apache/kafka/pull/11191#pullrequestreview-727051405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c5cffbb-8c67-47a2-b832-59c8e1919555",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "nit: we can assert the `fencedBrokerIds` is empty before sleep to timeout session. ",
        "createdAt" : "2021-08-11T03:24:44Z",
        "updatedAt" : "2021-08-11T03:51:03Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      },
      {
        "id" : "edf53563-87e6-4946-bc29-51d739d7b299",
        "parentId" : "9c5cffbb-8c67-47a2-b832-59c8e1919555",
        "authorId" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "body" : "Good call.. Although I would not do it in the common utility function. \r\nWill do it in the test method where this should hold.",
        "createdAt" : "2021-08-11T05:20:24Z",
        "updatedAt" : "2021-08-11T05:20:25Z",
        "lastEditedBy" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "tags" : [
        ]
      }
    ],
    "commit" : "77be415601cbae0c977fe55006aa134b93bb5ee7",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +215,219 @@\n        void fenceBrokers(Set<Integer> brokerIds) throws Exception {\n            time.sleep(BROKER_SESSION_TIMEOUT_MS);\n\n            Set<Integer> unfencedBrokerIds = clusterControl.brokerRegistrations().keySet().stream()"
  },
  {
    "id" : "d579ffcb-f2a7-43ab-8dd8-b1702587a416",
    "prId" : 11191,
    "prUrl" : "https://github.com/apache/kafka/pull/11191#pullrequestreview-727770661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "956d10ff-05a4-4c41-b9d3-c0027f468f28",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "You can `assertEquals` against the empty `Set` (`Collections.emptySet()`). When it fails it will print the content of fenced broker ids.",
        "createdAt" : "2021-08-12T15:53:44Z",
        "updatedAt" : "2021-08-12T15:55:21Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "77be415601cbae0c977fe55006aa134b93bb5ee7",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +1063,1067 @@            new int[]{1, 2, 3}, new int[]{2, 3, 4}, new int[]{0, 2, 1}}).topicId();\n\n        assertTrue(ctx.clusterControl.fencedBrokerIds().isEmpty());\n        ctx.fenceBrokers(Utils.mkSet(2, 3));\n"
  }
]