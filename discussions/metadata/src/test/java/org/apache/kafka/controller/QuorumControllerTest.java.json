[
  {
    "id" : "3d00e4e2-af7a-4471-8d56-3b62eb8150ee",
    "prId" : 10070,
    "prUrl" : "https://github.com/apache/kafka/pull/10070#pullrequestreview-593782921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1122a5b-350d-4be7-b2a0-7e57717c6398",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, why is a replication factor of 1 invalid?",
        "createdAt" : "2021-02-18T20:23:39Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "dbf42a6e-69e9-4c4b-b9ee-4c44f6bfc565",
        "parentId" : "b1122a5b-350d-4be7-b2a0-7e57717c6398",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "There are no unfenced brokers (as you mentioned earlier, we should change this so that it places on the fenced broker).  I will add a TODO",
        "createdAt" : "2021-02-19T01:15:22Z",
        "updatedAt" : "2021-02-20T00:12:14Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bcdd2ec50b7fbacffcb3c5810a37ae8161a64c3",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@                // TODO: place on a fenced broker if we have no choice\n                assertEquals(Errors.INVALID_REPLICATION_FACTOR.code(), active.createTopics(\n                    createTopicsRequestData).get().topics().find(\"foo\").errorCode());\n                assertEquals(new BrokerHeartbeatReply(true, false, false, false),\n                    active.processBrokerHeartbeat(new BrokerHeartbeatRequestData()."
  },
  {
    "id" : "64b85b8f-d790-4cd6-af51-3a97c65bee00",
    "prId" : 10812,
    "prUrl" : "https://github.com/apache/kafka/pull/10812#pullrequestreview-693257882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b27537a7-41a0-471c-b05c-a21c5e367428",
        "parentId" : null,
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "Can you add a short JavaDoc for this?\r\n\r\nOne question here is whether this function considers it an error if the iterator contains more records than are in \"expected\" I think the answer is no, but can you document this?",
        "createdAt" : "2021-06-24T22:43:06Z",
        "updatedAt" : "2021-06-24T22:43:06Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "7dbad2fa-6fdf-4d12-ab9a-35c2d04a7e20",
        "parentId" : "b27537a7-41a0-471c-b05c-a21c5e367428",
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Added a comment to the method.",
        "createdAt" : "2021-06-26T00:21:45Z",
        "updatedAt" : "2021-06-26T00:21:45Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e45339c0e1cef2ff8d23282e29898f418034546",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +500,504 @@     * snapshot will be generated and which committed offset will be included in the snapshot.\n     */\n    private void checkSnapshotSubcontent(\n        List<ApiMessageAndVersion> expected,\n        Iterator<Batch<ApiMessageAndVersion>> iterator"
  },
  {
    "id" : "7a6a0159-f06c-4d42-8120-0f4e9a10845a",
    "prId" : 11116,
    "prUrl" : "https://github.com/apache/kafka/pull/11116#pullrequestreview-719502893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0430ea8-c6a8-4af6-9ecc-ecdbee03a371",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "Only this should have changed. The rest are indentation changes from the previous commit.",
        "createdAt" : "2021-07-30T22:40:31Z",
        "updatedAt" : "2021-07-30T22:40:31Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8a663dfbb387f8c1b5508f3972fc92d18170f86",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +697,701 @@                oldClaimEpoch < controller.curClaimEpoch(),\n                String.format(\"oldClaimEpoch = %s, newClaimEpoch = %s\", oldClaimEpoch, controller.curClaimEpoch())\n            );\n\n            // Since the alterIsr partially failed we expect to see"
  },
  {
    "id" : "268a5be2-ca32-4318-baf6-3daeeadc8104",
    "prId" : 11191,
    "prUrl" : "https://github.com/apache/kafka/pull/11191#pullrequestreview-726872200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd4be6aa-8019-4cac-9839-063a084e7f11",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "This test times out for me when run locally. I'm a little concerned that the dependence on real time here will make it flaky. I'm satisfied with the other tests we have in this patch. Would it be reasonable to push this test case to a follow-up so that we can iterate on it a little bit without blocking the patch?",
        "createdAt" : "2021-08-10T21:11:50Z",
        "updatedAt" : "2021-08-10T21:11:54Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "ad2c1cb1-e02c-4af8-aa93-721b8e3f1e36",
        "parentId" : "fd4be6aa-8019-4cac-9839-063a084e7f11",
        "authorId" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "body" : "The timeout was because I accidentally deleted a line before pushing the commit. Will fix that. \r\nWill discuss pulling the test out offline with you.",
        "createdAt" : "2021-08-10T21:45:04Z",
        "updatedAt" : "2021-08-10T21:53:35Z",
        "lastEditedBy" : "a4dbaf80-7a7c-4314-af6e-b4cf858a6ce2",
        "tags" : [
        ]
      }
    ],
    "commit" : "77be415601cbae0c977fe55006aa134b93bb5ee7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +176,180 @@\n    @Test\n    public void testFenceMultipleBrokers() throws Throwable {\n        List<Integer> allBrokers = Arrays.asList(1, 2, 3, 4, 5);\n        List<Integer> brokersToKeepUnfenced = Arrays.asList(1);"
  },
  {
    "id" : "fb1f89ef-9619-4994-b649-a42deec99da5",
    "prId" : 11191,
    "prUrl" : "https://github.com/apache/kafka/pull/11191#pullrequestreview-727770661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ffd5508-4785-4996-9e43-fcdb0df33ab6",
        "parentId" : null,
        "authorId" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "body" : "If you use `assertEquals` it will compare the content of the arrays and print their value if they don't match.",
        "createdAt" : "2021-08-12T15:49:11Z",
        "updatedAt" : "2021-08-12T15:55:20Z",
        "lastEditedBy" : "4a7c311c-0954-4671-a0d2-266cb67437ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "77be415601cbae0c977fe55006aa134b93bb5ee7",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +251,255 @@            assertTrue(Arrays.equals(isrFoo, expectedIsr),\n                \"The ISR for topic foo was \" + Arrays.toString(isrFoo) +\n                    \". It is expected to be \" + Arrays.toString(expectedIsr));\n\n            int fooLeader = active.replicationControl().getPartition(topicIdFoo, 0).leader;"
  }
]