[
  {
    "id" : "8a40a970-2982-413c-9919-cc18533474c7",
    "prId" : 11546,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11546#pullrequestreview-605358452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fea27a9-7f9a-4e25-917b-021b55935600",
        "parentId" : null,
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "normally this would require a `MajorVersion` bump, but as we have not yet had a stable `ExperimentalVersion` this is fine",
        "createdAt" : "2021-03-05T15:49:38Z",
        "updatedAt" : "2021-03-05T15:49:38Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "54495b60c1a2109e087cd35a0a3917b196c24255",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +474,478 @@  final val TRANSPARENT = 42\n  final val INFIX = 43\n  final val INVISIBLE = 44\n  final val EMPTYCLAUSE = 45\n  final val SPLITCLAUSE = 46"
  },
  {
    "id" : "4ca9a5fc-5b0c-4f54-973d-1ac69c9ce518",
    "prId" : 10940,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10940#pullrequestreview-562555711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c46c4293-7009-4589-a82a-dc40729e117b",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Here `same kind` is not really descriptive. One could think that this can be used to separate `(a: A)(b: B)` and `[A][B]` but not `(a: A)[B](c: C)` which appears internally in extensions.",
        "createdAt" : "2021-01-05T16:32:49Z",
        "updatedAt" : "2021-01-06T13:04:56Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "a0da1679-48cf-40ac-8b13-4fe3846a6928",
        "parentId" : "c46c4293-7009-4589-a82a-dc40729e117b",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "But that's exactly what it does. It separates `(a: A)(b: B)` and `[A][B]` but not `(a: A)[B](c: C)`.\r\n",
        "createdAt" : "2021-01-05T22:55:56Z",
        "updatedAt" : "2021-01-06T13:04:56Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "077571d3-7071-4648-a540-f35d1e4ab640",
        "parentId" : "c46c4293-7009-4589-a82a-dc40729e117b",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Ok. Then the awkward part would be that to encode `[A][B]` we would need a `TermParam`, though this would always be indirectly through a `Param`. For consistency, I would have expected `[A][B]` to be representable as a `TypeParam*`.\r\n",
        "createdAt" : "2021-01-06T08:41:04Z",
        "updatedAt" : "2021-01-06T13:04:56Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "d8732291-3e34-4d86-94e3-1fac6e01b8c0",
        "parentId" : "c46c4293-7009-4589-a82a-dc40729e117b",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, TypeParam* really means a single list of type parameters. Constructors and classes will keep that restriction; it's not planned that they will allow curried type parameter lists for now.",
        "createdAt" : "2021-01-06T10:47:38Z",
        "updatedAt" : "2021-01-06T13:04:56Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4b210e9bbe2dbbc5dc5f26d0857ec45fecadfbc",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +72,76 @@  TermParam     = PARAM          Length NameRef type_Term rhs_Term? Modifier*      -- modifiers name : type (= rhs_Term)?. `rhsTerm` is present in the case of an aliased class parameter\n                  EMPTYCLAUSE                                                      -- an empty parameter clause ()\n                  SPLITCLAUSE                                                      -- splits two non-empty parameter clauses of the same kind\n  Param         = TypeParam\n                  TermParam"
  },
  {
    "id" : "87d6f244-b027-4d30-a13d-478f5c302885",
    "prId" : 10940,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10940#pullrequestreview-562718753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c960f4d2-a654-4121-8433-42e78806ae8a",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Should we future proof this definition by allowing `class Foo[T](a: A)[U](a: B)` internally in TASTY?\r\n```\r\n  Template      = TEMPLATE       Length Param* parent_Term* Self?\r\n```\r\n",
        "createdAt" : "2021-01-06T13:11:32Z",
        "updatedAt" : "2021-01-06T13:11:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "e3f2d36b-7444-4e05-a706-b78fffd72722",
        "parentId" : "c960f4d2-a654-4121-8433-42e78806ae8a",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I think that's not on the agenda right now. I see all sorts of complications arising from this. \r\n\r\nSo I think all of this can wait until we go to the next major redesign for Tasty in 3.T\r\n",
        "createdAt" : "2021-01-06T13:47:33Z",
        "updatedAt" : "2021-01-06T13:47:33Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4b210e9bbe2dbbc5dc5f26d0857ec45fecadfbc",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +75,79 @@  Param         = TypeParam\n                  TermParam\n  Template      = TEMPLATE       Length TypeParam* TermParam* parent_Term* Self?\n                                        Stat*                                      -- [typeparams] paramss extends parents { self => stats }, where Stat* always starts with the primary constructor.\n  Self          = SELFDEF               selfName_NameRef selfType_Term             -- selfName : selfType"
  },
  {
    "id" : "3bae780f-28e8-49d4-91bd-7bf00f4ef343",
    "prId" : 10362,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10362#pullrequestreview-532583455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e3e2c65-9d04-4d6e-8484-c8f8183e666b",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I think TastyPrinter will need a case too.",
        "createdAt" : "2020-11-17T16:41:41Z",
        "updatedAt" : "2020-11-18T09:34:13Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "cd06f4cf-adc2-49db-8160-411a8ca661ca",
        "parentId" : "1e3e2c65-9d04-4d6e-8484-c8f8183e666b",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I don't see why?\r\n",
        "createdAt" : "2020-11-17T16:52:15Z",
        "updatedAt" : "2020-11-18T09:34:13Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "8e695c16-8ce9-4e0f-a909-e08556c33850",
        "parentId" : "1e3e2c65-9d04-4d6e-8484-c8f8183e666b",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Ah maybe not, I see we don't need cases for all type nodes in the printer.",
        "createdAt" : "2020-11-17T16:57:44Z",
        "updatedAt" : "2020-11-18T09:34:13Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "90cdf18fb6fb98606a4234f6b15d226b58dc9e10",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +679,683 @@    case LAMBDAtpt => \"LAMBDAtpt\"\n    case MATCHtype => \"MATCHtype\"\n    case MATCHCASEtype => \"MATCHCASEtype\"\n    case MATCHtpt => \"MATCHtpt\"\n    case PARAMtype => \"PARAMtype\""
  },
  {
    "id" : "fb967e11-c925-4e7f-b49a-b7d9275cd54a",
    "prId" : 10182,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10182#pullrequestreview-537705017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73a4f6cb-61ad-4a8f-bc33-bfcb01b8acb4",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Minor tasty version bump needed.",
        "createdAt" : "2020-11-20T16:37:23Z",
        "updatedAt" : "2020-12-03T15:33:07Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "bb189dc7-5c1b-4104-99ee-825e694fa657",
        "parentId" : "73a4f6cb-61ad-4a8f-bc33-bfcb01b8acb4",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "done",
        "createdAt" : "2020-11-24T16:41:39Z",
        "updatedAt" : "2020-12-03T15:33:07Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c6eeb2ccb328650161487df6132d8061a12bad7",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +477,481 @@  final val TYPEREFin = 175\n  final val SELECTin = 176\n  final val EXPORT = 177\n\n  final val METHODtype = 180"
  },
  {
    "id" : "c3cdab63-b4c2-487b-a1dc-1db65cc03ca1",
    "prId" : 9063,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9063#pullrequestreview-420484595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eed105fb-22ce-4197-a8bc-2e869d7547ba",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "SELECTin needs to be handled in TastyPrinter",
        "createdAt" : "2020-05-28T20:55:04Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "19e658ca38f03961d5f8e8f4dff1832681548354",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +458,462 @@  final val TERMREFin = 174\n  final val TYPEREFin = 175\n  final val SELECTin = 176\n\n  final val METHODtype = 180"
  },
  {
    "id" : "b4f03f06-faae-417e-96da-beb92b767ecc",
    "prId" : 9063,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9063#pullrequestreview-424191371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6babf30c-85ee-443b-b0ed-0c5638f76388",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The tasty version number needs to be updated.",
        "createdAt" : "2020-06-03T15:56:18Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "8b44087a-07e9-4974-b2dc-ccc3c19498b2",
        "parentId" : "6babf30c-85ee-443b-b0ed-0c5638f76388",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I bumped the minor version since it is backwards compatible.",
        "createdAt" : "2020-06-04T07:56:20Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "19e658ca38f03961d5f8e8f4dff1832681548354",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +458,462 @@  final val TERMREFin = 174\n  final val TYPEREFin = 175\n  final val SELECTin = 176\n\n  final val METHODtype = 180"
  },
  {
    "id" : "c4289320-d685-4e13-9a7c-7876958f6fd1",
    "prId" : 9063,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9063#pullrequestreview-424620126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93cb1944-5f19-4efe-ae9b-c7ff3c2a1ec2",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Should the documentation for TYPEREFin be updated in a similar way?",
        "createdAt" : "2020-06-04T14:29:31Z",
        "updatedAt" : "2020-06-04T15:06:31Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "9a04ac96-e1cc-4903-b0b4-ec7d4c2e739d",
        "parentId" : "93cb1944-5f19-4efe-ae9b-c7ff3c2a1ec2",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No since TypeRefs never take a signature\r\n",
        "createdAt" : "2020-06-04T16:22:17Z",
        "updatedAt" : "2020-06-04T16:22:18Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "19e658ca38f03961d5f8e8f4dff1832681548354",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +124,128 @@                  TERMREFpkg            fullyQualified_NameRef                     -- A reference to a package member with given fully qualified name\n                  TERMREF               possiblySigned_NameRef qual_Type           -- A reference `qual.name` to a non-local member\n                  TERMREFin      Length possiblySigned_NameRef qual_Type owner_Type -- A reference `qual.name` referring to a non-local symbol declared in owner that has the given signature (see note below)\n                  THIS                  clsRef_Type                                -- cls.this\n                  RECthis               recType_ASTRef                             -- The `this` in a recursive refined type `recType`."
  },
  {
    "id" : "1168466d-ba09-485e-b4b7-d890e8a7b5c4",
    "prId" : 8270,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8270#pullrequestreview-355753227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29739cab-8b20-4aaf-a8ee-d90505955546",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Note: At some point we will need to rename `GIVENMETHODtype` to `CONTEXTMETHODtype`",
        "createdAt" : "2020-02-10T08:26:25Z",
        "updatedAt" : "2020-02-10T17:58:58Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "d008b78b2f084ffd8ae4b5a1b3e6b6b2afdd3080",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +164,168 @@                  METHODtype     Length result_Type NamesTypes                     -- A method type `(NamesTypes)result`, needed for refinements\n                  ERASEDMETHODtype      Length result_Type NamesTypes              -- A method type `erased (NamesTypes)result`, needed for refinements\n                  GIVENMETHODtype       Length result_Type NamesTypes              -- A method type `(using NamesTypes)result`, needed for refinements\n                  ERASEDGIVENMETHODtype Length result_Type NamesTypes              -- A method type `(using erased NamesTypes)result`, needed for refinements\n                  IMPLICITMETHODtype    Length result_Type NamesTypes              -- A method type `(implicit NamesTypes)result`, needed for refinements"
  },
  {
    "id" : "7595b356-09aa-4ae0-9a21-b7adf1bb5e40",
    "prId" : 7703,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7703#pullrequestreview-329717382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6c28358-e290-4ca8-acdc-89ba6ad0027d",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Add a comment to say that this is here for debugging",
        "createdAt" : "2019-12-09T10:57:12Z",
        "updatedAt" : "2019-12-10T10:10:24Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "903650fc-0ab5-41df-908c-550597bd743f",
        "parentId" : "e6c28358-e290-4ca8-acdc-89ba6ad0027d",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "done, also documented that it is linked to the`NameTags` object",
        "createdAt" : "2019-12-10T10:07:04Z",
        "updatedAt" : "2019-12-10T10:10:24Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f2111ab7a7b292b3aec7910bbb4f86190d9a8d6",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +292,296 @@   * For debugging purposes when unpickling names in a TASTy file.\n   */\n  def nameTagToString(tag: Int) = {\n    import NameTags._\n    tag match {"
  }
]