[
  {
    "id" : "b0174517-b6c2-4c79-88ad-952f8a3cb42b",
    "prId" : 2148,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2148#pullrequestreview-621277693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49e74cc4-0480-4a7c-b2c8-d88b80296ffd",
        "parentId" : null,
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "Again, I am probably in the minority.  I dislike `assumeFalse` \r\n__intensely__ because it throws scary looking garbage into the \r\nlog file. The garbage looks like an error, but is a bit of 'known error'\r\nlore which must be re-parsed and re-learned after one has been\r\naway for a month or so.\r\n\r\nTo me, a simple `if` which executes only if not FreeBSD conveys the\r\nintent and does not generate `known error` garbage.  There is nothing\r\nto warn about, the test is executing successfully on both FreeBSD and,\r\nsay, Ubuntu.  It is just on the former, the code sees that it has nothing to\r\ndo. There is no exceptional (with a small e) code flow to notify \r\nsomeone reading the log files about.\r\n\r\nI spend a __lot__ of time reading SN logs, and so am somewhat sensitive\r\nabout wasting time skipping over \"known errors' that I used to know.\r\n\r\nAgain, I may be in the minority, so you should probably see what a \r\nScala Center person advises before making any change.",
        "createdAt" : "2021-02-04T22:14:14Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "3c6e72c6-9958-4e3d-b985-75d26890445c",
        "parentId" : "49e74cc4-0480-4a7c-b2c8-d88b80296ffd",
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "And yes, I would leave a one line comment \"FreeBSD does not have the 'timezone' variable\".  Some poor soul down the line trying to read and\r\ncomprehend this stuff will sing your praises (which is why, I assume,\r\nyou put such a nice comment in the assumeFalse).\r\n",
        "createdAt" : "2021-02-04T22:16:48Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "40c95cc6-8c15-43eb-aaf4-57956083c6d8",
        "parentId" : "49e74cc4-0480-4a7c-b2c8-d88b80296ffd",
        "authorId" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "body" : "I'm not sure to agree on this one. I've added the `assume` on purpose exactly to not hide that FreeBSD lacks the timezone variable. The warning will show up only on FreeBSD and makes clear that you cannot rely on the timezone variable in your code if it's run on FreeBSD.",
        "createdAt" : "2021-02-05T08:05:19Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "tags" : [
        ]
      },
      {
        "id" : "d86a82cd-450d-49e9-91cf-6036a6cf2892",
        "parentId" : "49e74cc4-0480-4a7c-b2c8-d88b80296ffd",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Yes, I believe this is how we use `assume`, precisely to highlight the assumptions for test coverage.",
        "createdAt" : "2021-03-25T15:45:05Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e7b39ad678905d5e19d85ef0c7346599d58f53",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +47,51 @@\n  @Test def localtimeShouldTransformTheEpochToLocaltime(): Unit = {\n    assumeFalse(\n      \"Skipping localtime test since FreeBSD hasn't the 'timezone' variable\",\n      Platform.isFreeBSD)"
  },
  {
    "id" : "22cf35a7-9641-43f6-9982-db4f830859fa",
    "prId" : 2148,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/2148#pullrequestreview-621362679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59a0e53b-b497-40dc-a30a-097404dc01a5",
        "parentId" : null,
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "In the last two weeks or so there has been an update to TimeTest.scala\r\nto allow it to additionally run on macOS.  TimeTest, and this section in\r\nparticular, is a recurring pain.\r\n\r\nDo you know if strptime() on FreeBSD  either:\r\n1) rejects %Z (implied posix behavior).\r\n2) parses %Z and does nothing (gnu linux behavior)\r\n3) parses %Z and sets C fields (macOS behavior)\r\n\r\nIf #1, then my scars tell me putting the \"if (Platform.isFreeBSD)\" at\r\n the beginning of the SN mainline TimeTest.scala test and skipping\r\n the entire thing is the way to go.  \r\n\r\nIf either  #2 or #3, the current SN mainline test should work, as is,\r\nand not require any special FreeBSD handling. (Unless I am missing\r\nsomething, I have been known to do that.)\r\n\r\nIf there is some other behavior, please let me know (or, I suggest, just\r\n bypass as in case #1 above).\r\n\r\nDoes this help?\r\n",
        "createdAt" : "2021-03-25T13:03:11Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "ffdfe81b-62c1-40a7-b023-a2a328710393",
        "parentId" : "59a0e53b-b497-40dc-a30a-097404dc01a5",
        "authorId" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "body" : "As I added in the comment, FreeBSD parses %Z and use it to create the equivalent time in the local timezone. This means that if the string contains GMT and my local timezone is CET (or CEST, given that Mar 31 is in DST), the hour check fails because 16 != 14.",
        "createdAt" : "2021-03-25T16:09:57Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "tags" : [
        ]
      },
      {
        "id" : "c1bf0f39-55d1-4ddf-b3fd-a8e4ea44ea5f",
        "parentId" : "59a0e53b-b497-40dc-a30a-097404dc01a5",
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "@alexdupre \r\n\r\n1) Sorry about getting your name wrong, as the actor famously said\r\n    to the reporter: Print anything you want about me but spell my name right!\r\n\r\n2) Given your info about %Z parsing, I will go back to the comment you mention.\r\n    I have spent __way__ too much of my life on this test over the past two years\r\n    or more. \r\n\r\n    The problematic test is not really about strptime() but about showing that\r\n    SN is using structure copy-out/copy-in with its \"short\" POSIX 'struct tm'\r\n     declaration.   \r\n\r\n     I think that test is passing on macOS CI because the local time on that\r\n     system is UTC.  That, plus what you are seeing means that at least\r\n     the hours & minutes part of the current test are __wrong__ in the wild.\r\n     I will have to PR that. I will probably wait until after this PR is merged.\r\n     Thank you for detecting that flaw.\r\n     \r\nReviewers:  I believe fixing the pre-exiting TimeTest.scala flaw is on me and should\r\n                   not hold up this PR.\r\n                   this PR.  ",
        "createdAt" : "2021-03-25T16:37:08Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "a48d8ca9-768e-4be9-824d-a03454377216",
        "parentId" : "59a0e53b-b497-40dc-a30a-097404dc01a5",
        "authorId" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "body" : "Yes, surely if the system is in UTC the issue cannot be seen. I don't know what are the linux and macos behaviors, the linux man page is not clear enough to me, while on FreeBSD it clearly says that `The resulting values will be relative to local time`, and I can confirm it. But as you said, the test is not really about strptime.",
        "createdAt" : "2021-03-25T16:58:17Z",
        "updatedAt" : "2021-04-20T11:04:17Z",
        "lastEditedBy" : "4112551a-46bb-426b-a18f-35c61a0de7fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e7b39ad678905d5e19d85ef0c7346599d58f53",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +289,293 @@      val cp =\n        if (Platform.isFreeBSD)\n          strptime(c\"Fri Mar 31 14:47:44 2017\", c\"%a %b %d %T %Y\", tmPtr)\n        else\n          strptime(c\"Fri Mar 31 14:47:44 GMT 2017\", c\"%a %b %d %T %Z %Y\", tmPtr)"
  }
]