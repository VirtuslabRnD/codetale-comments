[
  {
    "id" : "90e1d3a7-3702-457f-aab1-6fec07496def",
    "prId" : 5786,
    "prUrl" : "https://github.com/apache/airflow/pull/5786#pullrequestreview-276551678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9df37b-dbe1-4b5e-bb9f-386e54d97004",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "```suggestion\r\n        exclude: ^\\.github/.*$\"|^airflow/_vendor/.*$\r\n        args:\r\n          - --remove\r\n```\r\nWe could also remove them for Airflow 2.0. What do you think?",
        "createdAt" : "2019-08-16T20:48:25Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "ddc78ac9-d450-449b-8acc-c8e23dc854e8",
        "parentId" : "ca9df37b-dbe1-4b5e-bb9f-386e54d97004",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Aaaah. I did not realise we do not need them in python 3. Yes. --remove in this case would be nice. But then we touch ALL python files generating potentially lots and lots of conflicts and this will impose fixing all pylint errors for those files. I made sure to fix all the pylint errors in files touched by LICENCE/encoding pragma :).\r\n\r\nI'd say let's do it as one single big commit after we finish pylint changes ? ",
        "createdAt" : "2019-08-17T13:19:30Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "bd6d607a-869b-43e5-86bc-f8db2c6a2b3b",
        "parentId" : "ca9df37b-dbe1-4b5e-bb9f-386e54d97004",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Is it worth removing this stage so that we don't introduce changes in half the files that we then back out in all the files later?",
        "createdAt" : "2019-08-19T08:29:54Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "bf420663-04dd-4f91-9f18-8eb6d63a6335",
        "parentId" : "ca9df37b-dbe1-4b5e-bb9f-386e54d97004",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Right. Makes perfect sense @ashb :)",
        "createdAt" : "2019-08-19T11:39:07Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "91408213-5c0a-4008-9345-896ac2577c13",
        "parentId" : "ca9df37b-dbe1-4b5e-bb9f-386e54d97004",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I removed all the pragma changes and split this change in two - one adding consistent licences and one introducing related pylint changes in affected files (this way it will be easier to cherry-pick only the licence changes in 1.10.5).",
        "createdAt" : "2019-08-19T13:20:00Z",
        "updatedAt" : "2019-09-17T09:54:55Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee668769685024817078e2894ff9971f2ccb011",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +94,98 @@      - id: insert-license\n        name: Add licence for all shell files\n        exclude: ^\\.github/.*$\"|^airflow/_vendor/.*$\n        types: [shell]\n        files: ^breeze$|^breeze-complete$|\\.sh$"
  },
  {
    "id" : "bb718283-6a97-405a-9f2d-a31de43ff976",
    "prId" : 6425,
    "prUrl" : "https://github.com/apache/airflow/pull/6425#pullrequestreview-306913471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "417f6ab1-6493-4272-8ddf-ff8e56252b71",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "```suggestion\r\n         name: Add licence for all files\r\n```",
        "createdAt" : "2019-10-24T22:45:32Z",
        "updatedAt" : "2019-10-24T22:46:19Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "2bb2ee45-deef-4d93-b387-490a2ae5b0ff",
        "parentId" : "417f6ab1-6493-4272-8ddf-ff8e56252b71",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "It's still for all shell files @feluelle :) (see the regexp = . .sh + breeze + breeze-complete). Pre-commit has two options for matching file selection - type and regexp in file name. I removed the type and left the regexp with .sh",
        "createdAt" : "2019-10-24T23:16:04Z",
        "updatedAt" : "2019-10-24T23:16:04Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e35f7cba09003e25844d97a7b478e59cae87c58",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +93,97 @@          - --fuzzy-match-generates-todo\n      - id: insert-license\n        name: Add licence for all shell files\n        exclude: ^\\.github/.*$\"|^airflow/_vendor/.*$\n        files: ^breeze$|^breeze-complete$|\\.sh$"
  },
  {
    "id" : "abd9a524-22bd-47a1-a4e5-b3bc64bb0a31",
    "prId" : 7430,
    "prUrl" : "https://github.com/apache/airflow/pull/7430#pullrequestreview-359397915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6be71a0d-13fb-41ac-8c23-ff3fee3a80a4",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "?",
        "createdAt" : "2020-02-16T10:53:49Z",
        "updatedAt" : "2020-02-16T17:30:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "8dadf7fd-6dd2-4d40-83df-83ffdc1e09dc",
        "parentId" : "6be71a0d-13fb-41ac-8c23-ff3fee3a80a4",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I found out that on linux when running pre-commit --all-files will fail without MOUNT_ALL_SOURCES (this is how it runs on Travis.",
        "createdAt" : "2020-02-16T11:01:21Z",
        "updatedAt" : "2020-02-16T17:30:46Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "986cac81-553e-4837-ab01-8fd2be1da10e",
        "parentId" : "6be71a0d-13fb-41ac-8c23-ff3fee3a80a4",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Oh right. Was just wondering where this file/folder came from as I didn't see it in our repo anywhere.",
        "createdAt" : "2020-02-16T11:48:44Z",
        "updatedAt" : "2020-02-16T17:30:46Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "806cc4e1e9a9a0a38eb8d1c0499b9fce4787b9a0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +286,290 @@        entry: \"./scripts/ci/pre_commit_mypy.sh\"\n        files: \\.py$\n        exclude: ^airflow/_vendor/.*$|^dev\n        pass_filenames: false\n      - id: pylint"
  },
  {
    "id" : "d86d64b7-eb74-4596-9777-60e45444bd5e",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/airflow/pull/8218#pullrequestreview-390320828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9291766e-e3d4-48d5-87dd-262457629655",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```suggestion\r\n        files: ^airflow/www/.*\\.(css|scss|sass)$\r\n        additional_dependencies: [\"stylelint@13.3.0\"]\r\n```\r\nThis should also work. Please look at the example:  https://github.com/pre-commit/mirrors-eslint/blob/master/.pre-commit-hooks.yaml\r\n\r\nYou can also use: https://github.com/awebdeveloper/pre-commit-stylelint\r\n\r\nI don't know which solution is better, but downloading a large image with the system for one simple application can be expensive. I suspect that there is no one common base image for all pre-commit hooks.  ",
        "createdAt" : "2020-04-08T20:37:06Z",
        "updatedAt" : "2020-04-09T18:34:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "02593e21-348b-49f7-b144-c312ee02fb8d",
        "parentId" : "9291766e-e3d4-48d5-87dd-262457629655",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Should we also add `stylelint-config-standard\": \"^20.0.0`? ",
        "createdAt" : "2020-04-08T20:47:53Z",
        "updatedAt" : "2020-04-09T18:34:51Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "9695585b-1583-41e9-ba4f-de37ca0b179b",
        "parentId" : "9291766e-e3d4-48d5-87dd-262457629655",
        "authorId" : "f59eb591-c12e-407d-b1ee-57f70f09b390",
        "body" : "ah, yes, that needs to be added too. Thanks!",
        "createdAt" : "2020-04-08T20:49:10Z",
        "updatedAt" : "2020-04-09T18:34:51Z",
        "lastEditedBy" : "f59eb591-c12e-407d-b1ee-57f70f09b390",
        "tags" : [
        ]
      }
    ],
    "commit" : "bce67974feef1707b291fa7351a6f2f2f2aeaa28",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +353,357 @@        entry: \"stylelint\"\n        language: node\n        files: ^airflow/www/.*\\.(css|scss|sass)$\n        # Keep dependency versions in sync w/ airflow/www/package.json\n        additional_dependencies: ['stylelint@13.3.1', 'stylelint-config-standard@20.0.0']"
  },
  {
    "id" : "4febfaec-8964-4a91-bee3-2b3e791eb309",
    "prId" : 9180,
    "prUrl" : "https://github.com/apache/airflow/pull/9180#pullrequestreview-426494624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb63d28a-e005-4006-a7aa-caa7b17a068c",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Should we check only html files?",
        "createdAt" : "2020-06-08T17:56:17Z",
        "updatedAt" : "2020-06-08T18:14:15Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "74b11283-23eb-4b28-b944-cc470117f3de",
        "parentId" : "eb63d28a-e005-4006-a7aa-caa7b17a068c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Good idea.",
        "createdAt" : "2020-06-08T18:12:25Z",
        "updatedAt" : "2020-06-08T18:14:15Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "42d17e40-055b-45c8-9b9f-f14ad1e77111",
        "parentId" : "eb63d28a-e005-4006-a7aa-caa7b17a068c",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "https://github.com/apache/airflow/pull/9180/commits/d22084c186b6d50fc60ec907a2bf7d91f4351d16",
        "createdAt" : "2020-06-08T18:14:30Z",
        "updatedAt" : "2020-06-08T18:14:30Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "d22084c186b6d50fc60ec907a2bf7d91f4351d16",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +253,257 @@        entry: \"\\\\|\\\\s*safe\"\n        files: \\.html$\n        pass_filenames: true\n      - id: language-matters\n        language: pygrep"
  },
  {
    "id" : "6675af92-8858-4da8-8f93-fc1ffc48bb05",
    "prId" : 9195,
    "prUrl" : "https://github.com/apache/airflow/pull/9195#pullrequestreview-427268909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1df6fc70-e183-4e74-94a9-259a11295e1b",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "> pre-commit/pre-commit-hooks now requires python3.6.1+\r\n\r\nThat is the only noticeable difference for us.\r\n\r\nRef: https://github.com/pre-commit/pre-commit-hooks/releases",
        "createdAt" : "2020-06-09T15:15:30Z",
        "updatedAt" : "2020-06-11T08:00:57Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "8718ecd5e15b8e3ceb3ef365de59e4434aeb29c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +142,146 @@      - id: check-hooks-apply\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.1.0\n    hooks:\n      - id: check-merge-conflict"
  },
  {
    "id" : "e23f24c7-f4a7-4f55-9a82-105c30de69e1",
    "prId" : 9195,
    "prUrl" : "https://github.com/apache/airflow/pull/9195#pullrequestreview-427268909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fe5d6e0-d392-4d65-9c79-b6b0b31775a5",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Fix version - I set it to the latest version.",
        "createdAt" : "2020-06-09T15:16:33Z",
        "updatedAt" : "2020-06-11T08:00:57Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "8718ecd5e15b8e3ceb3ef365de59e4434aeb29c3",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +161,165 @@      - id: python-no-log-warn\n  - repo: https://github.com/adrienverge/yamllint\n    rev: v1.23.0\n    hooks:\n      - id: yamllint"
  },
  {
    "id" : "d21278e8-fa76-47fc-b624-4e537740493b",
    "prId" : 9195,
    "prUrl" : "https://github.com/apache/airflow/pull/9195#pullrequestreview-427268909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58a35add-86a0-4cf6-9fea-73fe64546c51",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "Fix version - I set it to the latest version.",
        "createdAt" : "2020-06-09T15:16:39Z",
        "updatedAt" : "2020-06-11T08:00:57Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "8718ecd5e15b8e3ceb3ef365de59e4434aeb29c3",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +169,173 @@        exclude: ^.*init_git_sync\\.template\\.yaml$|^.*airflow\\.template\\.yaml$\n  - repo: https://github.com/timothycrosley/isort\n    rev: 4.3.21-2\n    hooks:\n      - id: isort"
  },
  {
    "id" : "b97003c6-af06-49bf-864c-5d3d3d136adf",
    "prId" : 9459,
    "prUrl" : "https://github.com/apache/airflow/pull/9459#pullrequestreview-434482522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07a46239-58e1-4f45-a616-ca6da66f6a11",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "This is the default for pydocstyle. Even if I remove this line, it won't make any difference",
        "createdAt" : "2020-06-21T08:49:23Z",
        "updatedAt" : "2020-06-21T08:49:23Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2040e2cfa4a1527511c6766017a94630c8007c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +182,186 @@        name: Run pydocstyle\n        args:\n          - --convention=pep257\n          - --add-ignore=D100,D102,D103,D104,D105,D106,D107,D200,D202,D204,D205,D207,D208,D210,D400,D401,D402,D403,D412\n        exclude: ^tests/.*\\.py$|^scripts/.*\\.py$|^dev|^backport_packages|^kubernetes_tests"
  },
  {
    "id" : "53ac8d36-48b4-4357-b76e-f7b6c1964647",
    "prId" : 9550,
    "prUrl" : "https://github.com/apache/airflow/pull/9550#pullrequestreview-522947281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd22415b-9294-45b6-8238-4a159dae7043",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Any reason for this exclude? ",
        "createdAt" : "2020-11-03T23:22:08Z",
        "updatedAt" : "2020-11-03T23:22:08Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "2e2f486d-5b33-40dd-aa99-240576cb1ffb",
        "parentId" : "bd22415b-9294-45b6-8238-4a159dae7043",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Yes, black had issues with it i.e. it couldn't reproduce the same file pre and post black so it would be good to ignore them for now\r\n\r\n```\r\n❯ pre-commit run black -a\r\nblack....................................................................Failed\r\n- hook id: black\r\n- exit code: 123\r\n\r\nerror: cannot format /Users/kaxilnaik/Documents/Github/astronomer/airflow/airflow/configuration.py: INTERNAL ERROR: Black produced different code on the second pass of the formatter.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /var/folders/jk/z68c_8nd1w5ggdc51r5zhnxm0000gn/T/blk_madaodvm.log\r\nOh no! 💥 💔 💥\r\n2548 files left unchanged, 1 file failed to reformat.\r\n```",
        "createdAt" : "2020-11-03T23:23:20Z",
        "updatedAt" : "2020-11-03T23:23:57Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "e2daf6da-1449-47d2-8d50-8f0067a909b9",
        "parentId" : "bd22415b-9294-45b6-8238-4a159dae7043",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Interesting 👀 ",
        "createdAt" : "2020-11-03T23:28:22Z",
        "updatedAt" : "2020-11-03T23:28:23Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bdaf18f7f4c222603107ee73c198a1c87169bab",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +160,164 @@    hooks:\n      - id: black\n        exclude: .*kubernetes_pod\\.py|.*google/common/hooks/base_google\\.py$|^airflow/configuration.py$\n        args: [--config=./pyproject.toml]\n  - repo: https://github.com/pre-commit/pre-commit-hooks"
  },
  {
    "id" : "77f1fd72-4e95-4b97-9143-7932b7afbe4a",
    "prId" : 11693,
    "prUrl" : "https://github.com/apache/airflow/pull/11693#pullrequestreview-517068536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It is needed? We can solve pylint problems with a trick similar to mypy.",
        "createdAt" : "2020-10-25T23:31:02Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "95b24a39-f563-425c-961d-70598195fff4",
        "parentId" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "I think this one is needed as if it's not excluded it will try to parse those files",
        "createdAt" : "2020-10-26T18:00:34Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "345e8422-6b17-46a7-a078-d9683721442b",
        "parentId" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "In my opinion, this is expected behavior. Instead, we should use the correct imports.\r\n````diff\r\n-from .helm_template_generator import render_chart\r\n+from tests.helm_template_generator import render_chart\r\n````",
        "createdAt" : "2020-10-26T18:05:22Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "676bfa5d-d2b4-4943-bb4c-702e50cd4b70",
        "parentId" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "authorId" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "body" : "<img width=\"786\" alt=\"Screen Shot 2020-10-26 at 11 10 42 AM\" src=\"https://user-images.githubusercontent.com/2644098/97211278-0a3bb200-177c-11eb-9ea9-dad29c2d8fac.png\">\r\nThat works on the docker-based tests, but is shows an error on PyCharm which might make development difficult. Any idea how to fix that? I think pycharm usually assumes root.",
        "createdAt" : "2020-10-26T18:12:19Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "b8b84983-5876-4ccf-886c-2449d94ca22f",
        "tags" : [
        ]
      },
      {
        "id" : "5057c040-349a-441a-af85-8f35e5402228",
        "parentId" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "1. Click **File** => **Project structure**\r\n1. On the left menu, select \"**Project settings** => **Modules**\r\n1. Click **+** >> **Add new module** to a new project module\r\n1. Select **Python**\r\n1. **Next**\r\n1. Type **Chart** in \"Module name\"\" field\r\n1. **Finish**\r\n1. Click **Add Content Root** and add `/chart` directory again\r\n",
        "createdAt" : "2020-10-26T18:32:21Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "42410a6e-5924-41c7-99a4-950b2c960629",
        "parentId" : "729e6ef1-5b49-4500-8657-a0618095a935",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "<img width=\"1038\" alt=\"Screenshot 2020-10-26 at 19 33 49\" src=\"https://user-images.githubusercontent.com/12058428/97213653-324e0400-17c2-11eb-83f9-544333fbfcb3.png\">\r\n",
        "createdAt" : "2020-10-26T18:34:29Z",
        "updatedAt" : "2020-10-27T23:11:49Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "698a9957c9b51180a35aff3ac5c927f9da1bee7c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +292,296 @@        pass_filenames: true\n        files: \\.py$\n        exclude: ^tests/|^chart/tests/\n      - id: language-matters\n        language: pygrep"
  },
  {
    "id" : "a7f70210-1c20-4422-add5-ab688196e55d",
    "prId" : 12082,
    "prUrl" : "https://github.com/apache/airflow/pull/12082#pullrequestreview-526145431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "What's this needed for?",
        "createdAt" : "2020-11-06T08:56:02Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "77dfd9b0-9be4-4d13-92c7-93a6b914432e",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I was just about to write about it. The previous way of retrieving version gave already hard time in previous scenarios when setup.py was used while airflow was already installed and in pre-commits. It sometimes did not found version.py. Therefore I've added a change to synchronize version in setup.py and version.py at the pre-commit level. This way there is no importlib call during setup.py execution - version is hard-coded, so there is no risk any problems will happen.",
        "createdAt" : "2020-11-06T09:00:36Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "130be510-33aa-41f1-8286-8677995bbb55",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "This way @ashb -> we do not have any dynamic importing while building/preparing the packages. IMHO it's much more robust and healthy if the version is hard-coded. It is especially a problem in case we want to import stuff like \"EXTRAS\" etc in setup.py and run those check in various \"environments\" - for example in pre-commits and in case of scripts that are running outside of \"airflow\" folder, or when we have airflow installed as pypi package rather than fro sources. ",
        "createdAt" : "2020-11-06T12:27:43Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "ae09b1f5-e108-40b8-b8df-7a80916a9699",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Not thrilled about this change.\r\n\r\nWhen, and why, are we importing the top-level setup.py when Airflow is already installed?",
        "createdAt" : "2020-11-09T09:00:49Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "946036ab-db74-4c9b-8d0a-d9e224310e4c",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(This doesn't block us merging this for now)",
        "createdAt" : "2020-11-09T10:25:08Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "794181dd-bf66-4700-923b-74b7fda2265a",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "There are at lest few cases:\r\n\r\n* We are importing it in some python pre-commits to verify setup.py consistency, ordering, completeness \r\n\r\n* We are importing it when  automatically generating provider package setup.py's or when we generate README files for those (we are retrieving information about dependencies for each package so that we can produce a documentation showing those dependencies and add the dependencies in the generated setup.py for providers using a single source of truth.",
        "createdAt" : "2020-11-09T10:59:35Z",
        "updatedAt" : "2020-11-09T10:59:50Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "e13a49b4-fe60-4270-8c94-ee92b4d52556",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Happy if you have other proposals for those.\r\n\r\nThe provider setup.py and README generation is difficult to be done otherwise unless we built in some dump of dependencies from setup.py in some structured way, but we would need to do it as pre-commit whenever setup.py changes.\r\n\r\nWe already do that for another case - to generate cross-provider dependencies https://github.com/apache/airflow/blob/master/airflow/providers/dependencies.json - this file is a structured dump of which provider depends on which. It is done from the sources rather than from setup.py automatically using pre-commit.\r\n\r\nBut I think it would not be a good way to keep that information in two places (setup.py and another .json or similar).\r\n\r\nHappy to discuss what other approaches we might take there if you can propose something.",
        "createdAt" : "2020-11-09T11:05:24Z",
        "updatedAt" : "2020-11-09T11:05:25Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "5a06b9d7-0696-4da4-a87e-2897f16c7ce8",
        "parentId" : "37d456b1-5e7c-4dc7-8375-0b79af30e832",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "For inspiration - this is how we generate those depenencies.json . I think they are useful to keep to see the dependencies: \r\n```\r\n      - id: build-providers-dependencies\r\n        name: Build cross-dependencies for providers packages\r\n        entry: \"./scripts/ci/pre_commit/pre_commit_build_providers_dependencies.sh\"\r\n        language: system\r\n        files: ^airflow/providers/.*\\.py$|^tests/providers/.*\\.py$\r\n        pass_filenames: false\r\n```\r\nThis has been working for months now without anyone doing anything to keep those in-sync and I saw quite a few cross-provider dependencies changed between the few provider package releases we had.  Thanks to that we do not have to do anything to keep provider's cross-dependencies in sync.\r\n\r\nAnd we have a nice history of changes to those cross-provider deps \r\n\r\n\r\n![Screenshot from 2020-11-09 12-11-13](https://user-images.githubusercontent.com/595491/98534412-bacda980-2284-11eb-8921-6e1e26a73bb1.png)\r\n\r\n",
        "createdAt" : "2020-11-09T11:07:29Z",
        "updatedAt" : "2020-11-09T11:11:54Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a587d871f61f999029e16c652762ae8d536438",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +442,446 @@        name: Version sync\n        files: ^airflow/version.py$|setup.py\n        entry: ./scripts/ci/pre_commit/pre_commit_sync_version.sh\n        language: system\n      - id: providers-init-file"
  },
  {
    "id" : "1483e031-ad67-4d8e-94d5-2f6f3730b3da",
    "prId" : 12082,
    "prUrl" : "https://github.com/apache/airflow/pull/12082#pullrequestreview-525105453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f24be8-305e-4c4c-8628-6e8993ce1952",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Types: Python is not perfect. For some reason the types selection is sometimes wrong. We've learned that using file extensions is much more stable and predictable.",
        "createdAt" : "2020-11-06T12:25:15Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a587d871f61f999029e16c652762ae8d536438",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +200,204 @@      - id: isort\n        name: Run isort to sort imports\n        files: \\.py$\n        # To keep consistent with the global isort skip config defined in setup.cfg\n        exclude: ^build/.*$|^.tox/.*$|^venv/.*$"
  },
  {
    "id" : "04215e58-ba0a-4c5e-aacc-45a134c689c1",
    "prId" : 12082,
    "prUrl" : "https://github.com/apache/airflow/pull/12082#pullrequestreview-526130625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d57941f-7867-4d97-a0fc-6c388eecd91b",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "@ashb I had to add this one as there was a bug in doc script that gave ma a really hard time. The __init__.py file generated for doc building time was not removed (because it used rmtree and rmrtree did not remove the file. \r\n\r\nI fixed it and added pre-commit to make sure if this will not occur in the future.",
        "createdAt" : "2020-11-06T12:35:00Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "397fa597-fb2a-406e-ae69-0833ef70a260",
        "parentId" : "3d57941f-7867-4d97-a0fc-6c388eecd91b",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Is this needed anymore with Kamil's doc change?",
        "createdAt" : "2020-11-09T09:00:52Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "24208edf-b9c8-4cef-a03b-0f214e5e5cda",
        "parentId" : "3d57941f-7867-4d97-a0fc-6c388eecd91b",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think yes. There were a few cases in various configurations where dynamic loading of versions from setup.py did not work. I thin the number of times It did not work for me (in pre-commits mainly but also when installing packages and sources or when people will be installing virtualenv this might cause various problems. I believe hard-coding the version and making sure it is synchronized at the commit time removes the potential failure paths and clears the path so that it  \"just works\".",
        "createdAt" : "2020-11-09T10:47:54Z",
        "updatedAt" : "2020-11-09T10:55:03Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "40a587d871f61f999029e16c652762ae8d536438",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +443,447 @@        files: ^airflow/version.py$|setup.py\n        entry: ./scripts/ci/pre_commit/pre_commit_sync_version.sh\n        language: system\n      - id: providers-init-file\n        name: Provider init file"
  }
]