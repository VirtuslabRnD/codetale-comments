[
  {
    "id" : "fb4067a2-cef4-4122-bd9f-7056c5458ca0",
    "prId" : 4665,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c43c87d8-9762-4efc-a321-0ebb38358071",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "This has poor readability. Please put these comments adjacent to the interface properties:\n\n``` ts\ninterface IAnimationOptions {\n    // The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n    to?: Object;\n    // The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n    from?: Object;\n    ...\n```\n",
        "createdAt" : "2015-06-22T20:50:15Z",
        "updatedAt" : "2015-07-07T17:49:33Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      }
    ],
    "commit" : "48daae658413eb91583765fef12d7b9f87b5f441",
    "line" : null,
    "diffHunk" : "@@ -1,1 +146,150 @@     * Angular Animation Options\n     * see https://docs.angularjs.org/api/ngAnimate/#applying-directive-specific-styles-to-an-animation\n     */\n    interface IAnimationOptions {\n        /**"
  },
  {
    "id" : "ffee6a32-ed14-437c-b358-16a006e6a6eb",
    "prId" : 4665,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5f4339f-8be4-4bfb-b821-ddfb4ca22dab",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "why the empty interface? there must be a better way, perhaps a type alias\n",
        "createdAt" : "2015-06-22T20:51:22Z",
        "updatedAt" : "2015-07-07T17:49:33Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "05ca8046-6ba9-49e7-ad29-e45988c4f693",
        "parentId" : "a5f4339f-8be4-4bfb-b821-ddfb4ca22dab",
        "authorId" : "8eb2a39b-241c-428d-ad34-119d0cc044f0",
        "body" : "The style checker (run during the travis tests) doesn't seem to play nicely with type aliases. \n",
        "createdAt" : "2015-07-01T17:54:53Z",
        "updatedAt" : "2015-07-07T17:49:33Z",
        "lastEditedBy" : "8eb2a39b-241c-428d-ad34-119d0cc044f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "48daae658413eb91583765fef12d7b9f87b5f441",
    "line" : null,
    "diffHunk" : "@@ -1,1 +220,224 @@         */\n        staggerIndex?: number;\n    }\n\n    interface IAnimateCssRunner {"
  },
  {
    "id" : "22bbe353-b45a-483b-916b-75a68a61e466",
    "prId" : 8150,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "any way we can narrow the return types here?\n",
        "createdAt" : "2016-02-20T19:47:19Z",
        "updatedAt" : "2016-02-20T20:54:21Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "5eb955ca-18ea-4a6c-bcf0-702e25ed7068",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "From the source code (https://github.com/angular/angular.js/blob/master/src/ngAnimate/animateJs.js#L170-L182) I can deduce these functions can return one of a few possible results. However, this is not documented so I'm not sure what I should do :) The documentation regarding these is very vague: https://docs.angularjs.org/api/ng/provider/$animateProvider\n",
        "createdAt" : "2016-02-20T20:29:28Z",
        "updatedAt" : "2016-02-20T20:54:21Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "1fc0ae9b-77bc-47a1-a828-6b4d88768d1b",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "According to your quotation it is either a function or undefined, so `Function?` should be adequate.\n",
        "createdAt" : "2016-02-26T16:57:52Z",
        "updatedAt" : "2016-02-26T16:57:52Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "9d135c42-8ec9-4bf3-948f-bd03951e943d",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "From the source code I linked to you can deduce that these functions might actually return a bit more than `Function?`:\n- void\n- an instance of $$AnimateRunner\n- a function\n- an object with `start` method which might return:\n  - void\n  - an instance of $$AnimateRunner\n  - function\n",
        "createdAt" : "2016-02-26T17:05:07Z",
        "updatedAt" : "2016-02-26T17:05:07Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "d03c2827-8711-4cc5-a22a-56bc241293df",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "Do you want me to annotate that @miffels?\n",
        "createdAt" : "2016-02-26T17:28:26Z",
        "updatedAt" : "2016-02-26T17:28:26Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "b2f8f675-c12a-4d3b-865a-7259302f415b",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "I must admit that I made a mistake - in that there is always a function returned. Please pay attention to the actual return statements in https://github.com/angular/angular.js/blob/master/src/ngAnimate/animateJs.js#L170-L182 .\n",
        "createdAt" : "2016-02-26T18:36:26Z",
        "updatedAt" : "2016-02-26T18:36:26Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "08d41850-909f-4310-9dac-78dee63ea341",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "As far as I understand this code, `var value = fn.apply(fn, args)` is the result of executing functions we're talking about (setClass, addClass, removeClass etc). But maybe I'm wrong?\n",
        "createdAt" : "2016-02-26T18:43:56Z",
        "updatedAt" : "2016-02-26T18:43:56Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "717f23ab-d223-4f00-9ed7-5b1b28690951",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "Hah, alright, I was looking at the return statements, not at the function _creating_ the returned value. Let me take a proper look once I had a good night of sleep, but if I was looking in the wrong place, I am afraid that you are right.\n",
        "createdAt" : "2016-02-26T19:54:13Z",
        "updatedAt" : "2016-02-26T19:54:13Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "dd5e31a3-849f-494f-906c-4b49634ce9e8",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "well, the `return value;` statement is inside an `isFunction` conditional... so I think you were right originally in that [`executeAnimationFn`](https://github.com/angular/angular.js/blob/master/src/ngAnimate/animateJs.js#L144-L185) always returns a function. I assume that `noop` is defined somewhere else as a function that does nothing.\n\nalso I'm not sure it ever returns a `$$AnimateRunner`... that is handled on L177 and it just sets `value.done` instead of returning\n",
        "createdAt" : "2016-02-26T20:04:31Z",
        "updatedAt" : "2016-02-26T20:04:31Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "07d1c75d-3e26-4276-ab9e-43cc6a5c5843",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "Yes, `executeAnimationFn` returns a function. But it has nothing (well, almost…) to do with `IAnimateCallbackObject` interface :)\n`executeAnimationFn` takes `fn` as the first argument and `fn` here is one of the functions in `IAnimateCallbackObject` interface. `fn` could be `setClass`, `addClass`, `removeClass` and so on. In other words the return type of functions inside the `IAnimateCallbackObject` interface (currently annotated as `any`) is the same type as variable `value` has [on line 170](https://github.com/angular/angular.js/blob/master/src/ngAnimate/animateJs.js#L170).\n\nTherefore reading the code below line 170 we can deduce the type of variable `value` (this type could replace `any` in the `IAnimateCallbackObject` interface):\n- void\n- an instance of $$AnimateRunner\n- a function\n- an object with `start` method which might return:\n  - void\n  - an instance of $$AnimateRunner\n  - function\n\nThe problem is: **This is not documented anywhere** and thus it's prone to breaking changes, moreover I doubt this information is anyhow useful – nobody complained so far.\nThe safest and future-proof solution is to keep these functions return types annotated as `any`. This can be easily updated if documentation gets updated at docs.angularjs.org.\n",
        "createdAt" : "2016-02-26T20:42:06Z",
        "updatedAt" : "2016-02-26T20:42:06Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "339f70e5-c31e-4189-8e1e-173859502a14",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "@adidahiya So both of us fell for it :)\n\nI had a couple of good nights of sleep now and I have come to the conclusion that I will trust @mmiszy on this one. Not only is it awfully difficult to wrap one's head around the barely comprehensible mess that is the `ngAnimate` code. I think Michal put it quite nicely in the last paragraph. The actual documentation is lackluster so I am not sure what we can improve at this point what the original authors missed in the first place.\n\nCheers,\nMichael\n",
        "createdAt" : "2016-02-29T12:39:34Z",
        "updatedAt" : "2016-02-29T12:39:53Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "289caad0-c883-46b0-8655-073b3a6eedaa",
        "parentId" : "eaba12fa-b85d-4741-b2c0-964c0512592b",
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : ":+1: \n",
        "createdAt" : "2016-02-29T16:56:21Z",
        "updatedAt" : "2016-02-29T16:56:21Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      }
    ],
    "commit" : "65347efe70de2c2b9cb29050b5a709d89ef77cef",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +27,31 @@        leave?: (element: IAugmentedJQuery, doneFunction: Function, options: IAnimationOptions) => any;\n        move?: (element: IAugmentedJQuery, doneFunction: Function, options: IAnimationOptions) => any;\n        animate?: (element: IAugmentedJQuery, fromStyles: string, toStyles: string, doneFunction: Function, options: IAnimationOptions) => any;\n    }\n"
  }
]