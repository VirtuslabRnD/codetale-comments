[
  {
    "id" : "d97f3f1a-8fd9-44a2-b9fe-207bee611c40",
    "prId" : 2241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "663b0bad-3500-4f9a-b25d-0bd8fd1323fc",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "I think `$root: IRootScopeService` is correct. how about you?\n",
        "createdAt" : "2014-05-26T02:32:36Z",
        "updatedAt" : "2014-05-26T02:32:36Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3386842a6190dabe8a5be14ce16bf81e4614a0a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +242,246 @@        $parent: IScope;\n\n        $root: IScope;\n\n        $id: string;"
  },
  {
    "id" : "f66fdbf8-2f8b-4771-8aa6-453882cb2b4e",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb24ad3f-6ce7-41b4-b169-0acf8d32e890",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Nice :)\n",
        "createdAt" : "2014-06-02T13:30:59Z",
        "updatedAt" : "2014-06-02T13:33:52Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b740a4d8f0e37e96806bfadf1248117b1a66a92",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +717,721 @@\n        /**\n         * {number|Promise}\n         * Timeout in milliseconds, or promise that should abort the request when resolved.\n         */"
  },
  {
    "id" : "df8dc858-4e6a-464a-8866-a14b36a27246",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "119351a9-a64a-494b-8c51-88c727fc0f6e",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Good call!\n",
        "createdAt" : "2014-06-02T13:35:19Z",
        "updatedAt" : "2014-06-02T13:35:19Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b740a4d8f0e37e96806bfadf1248117b1a66a92",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +665,669 @@     * see http://docs.angularjs.org/api/ng/service/$http#usage \n     */\n    interface IRequestShortcutConfig {\n        /**\n         * {Object.<string|Object>}"
  },
  {
    "id" : "d458ea6c-db56-4918-bdc5-81470bf716d5",
    "prId" : 2369,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ad94120-7410-4b5c-bab8-8c110777119f",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "causes #2618\n",
        "createdAt" : "2014-08-07T09:02:10Z",
        "updatedAt" : "2014-08-07T09:02:10Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "72b9fbed7f7b96de942005c96e23f3535e7d0084",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +129,133 @@        controller(name: string, inlineAnnotatedConstructor: any[]): IModule;\n        controller(object : Object): IModule;\n        directive(name: string, directiveFactory: IDirectiveFactory): IModule;\n        directive(name: string, inlineAnnotatedFunction: any[]): IModule;\n        directive(object: Object): IModule;"
  },
  {
    "id" : "c6df45ca-2641-457d-9804-58c725374aa5",
    "prId" : 2587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "774dfd75-2fc8-4b09-a9de-2024b5bfb0bf",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "@johnnyreilly `$rootScope` doesn't have this built in. This example : http://stackoverflow.com/a/13407227/390330 is just adding to it just like you can add stuff to any dynamic JavaScript object. \n\nThis extension to the interface should belong in _your_ or any other project that extends $rootScope based on how _they_ extend it. E.g. I put a bunch of stuff on `$rootScope` like _enums_ to make it easier to use in the HTML. \n\nNote (since you asked for docs): $rootScope is _exactly_ same as any scope. In fact any $scope is created using the `$new` member of the rootScope which simply sets up a prototype chain and therefore $scope has all the properties (on the prototype chain) of $rootScope. Really (and literally) `$scope` extends `$rootScope` but doesn't matter in the defs since by default they are equivalent. \n",
        "createdAt" : "2014-07-31T11:39:00Z",
        "updatedAt" : "2014-07-31T11:39:00Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "adec6babb59ef08a52e7ec69e995d63169137c33",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +964,968 @@    interface IRootScopeService extends IScope {\n        title: string;\n\t}\n\n    ///////////////////////////////////////////////////////////////////////////"
  },
  {
    "id" : "03bebab3-5072-4da2-bb4f-71233e2dbeb3",
    "prId" : 2606,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8294db51-c05f-431c-bd2d-c9b0427bfc5d",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "verified. Thanks! \n\n![image](https://cloud.githubusercontent.com/assets/874898/3787398/ec26af6e-1a15-11e4-8994-ae563bdf585e.png)\n",
        "createdAt" : "2014-08-02T07:23:42Z",
        "updatedAt" : "2014-08-02T07:23:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c874738f2eee50077d77659a114ad05e449f5f77",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +311,315 @@        (): void;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    // Scope"
  },
  {
    "id" : "fdab5881-f99f-43a2-b1d2-6ae5eea61207",
    "prId" : 2607,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Awesome. Thanks. One more fix. Don't mark these arguments as optional (http://definitelytyped.org/guides/best-practices.html callback signatures)\n",
        "createdAt" : "2014-08-06T05:29:15Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "2b629a6b-5fa3-48f6-969d-28a1ff299dfa",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "body" : "alright\n@basarat It seems it's not possible to create an overloaded function declaration, trying to use \n\n``` typescript\n    interface IDirectiveLinkFn {\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery\n        ): void;\n        (\n            scope: IScope\n        ): void;\n        (): void;\n    }\n```\n\nbut the compiler won't let me use just `scope` for example\n",
        "createdAt" : "2014-08-06T13:00:38Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "tags" : [
        ]
      },
      {
        "id" : "da36344e-f5f5-477c-97e9-e56b01558664",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "It should be just : \n\n``` ts\n   interface IDirectiveLinkFn {\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n  }\n```\n\nDemo that it accommodates all: \n\n``` ts\ninterface IDirectiveLinkFn {\n        (\n            scope: any,\n            instanceElement: any,\n            instanceAttributes: any,\n            controller: any,\n            transclude: any\n        ): void;\n  }\n\n  var foo : IDirectiveLinkFn;\n\n  foo = ()=>{};\n  foo = (scope)=>{};\n  // And so on \n```\n",
        "createdAt" : "2014-08-08T14:21:10Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "2994ae2a-0e76-47db-a829-1579aed65bdf",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "body" : "you are right, I'm overthinking this. The next commit should have fixed it.\n",
        "createdAt" : "2014-08-08T15:23:25Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2de3867de193326103f9a394701efec4b452618",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1042,1046 @@            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n    }\n"
  },
  {
    "id" : "523b19f2-7bc6-4afe-ab88-519c72b32986",
    "prId" : 2607,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24bd23c0-0d68-48b0-a913-138806932f3b",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "same for these arguments. Don't mark these as optional\n",
        "createdAt" : "2014-08-06T05:29:42Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2de3867de193326103f9a394701efec4b452618",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1055,1059 @@            templateAttributes: IAttributes,\n            transclude: ITranscludeFunction\n        ): IDirectivePrePost;\n    }\n"
  },
  {
    "id" : "dbcbbf93-7e2c-40f3-a144-80fee0a35661",
    "prId" : 3745,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "umm...\n\n```\nvar cache; ng. ICacheObject;\ncache.put(\"test\", true); // return undefined\ncache.put(\"test\", 1); // return true\n```\n\nI think `put(key: string, value?: any): any;` is better.\n",
        "createdAt" : "2015-03-02T14:56:05Z",
        "updatedAt" : "2015-03-02T14:56:05Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      },
      {
        "id" : "b366e8de-5b01-493b-998b-5b1deb694d7c",
        "parentId" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "authorId" : "61e79286-15fb-4476-8cf4-64b97737fc84",
        "body" : "How did you go about getting those results?  When I run those examples I get the values back as expected:\nhttp://plnkr.co/edit/VI1d3uyyRIPTI0rooNVO?p=preview\n",
        "createdAt" : "2015-03-02T15:16:26Z",
        "updatedAt" : "2015-03-02T15:16:26Z",
        "lastEditedBy" : "61e79286-15fb-4476-8cf4-64b97737fc84",
        "tags" : [
        ]
      },
      {
        "id" : "e78a3e43-1297-4772-8e0f-83164d7b9817",
        "parentId" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "oh, sorry. I was read a document. Returns is `the value stored.`. but my comprehension is invalid.\n",
        "createdAt" : "2015-03-02T16:20:06Z",
        "updatedAt" : "2015-03-02T16:20:06Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "561b5a075e0237db3631c0588890e72506c9d36d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1025,1029 @@            //capacity: number;\n        };\n        put<T>(key: string, value?: T): T;\n        get(key: string): any;\n        remove(key: string): void;"
  },
  {
    "id" : "70b7a17e-f943-4429-8a43-2978e1356183",
    "prId" : 4665,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e38ab21a-aec1-4835-9946-ec5295b4fff5",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "~~Improper grammar. It doesn't make sense to say a function parameter \"can return\" a certain type; rather it _is_ that type.~~\n\n~~This should be \"The successCallback **can be** an IPromise in the case where $q.reject() needs to be returned.\"~~\n\n~~Also, please include a trailing period `.`~~\n\n**EDIT**: I read this diff wrong, sorry\n",
        "createdAt" : "2015-06-22T20:54:50Z",
        "updatedAt" : "2015-07-07T17:49:33Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      }
    ],
    "commit" : "48daae658413eb91583765fef12d7b9f87b5f441",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +1037,1041 @@        /**\n         * Regardless of when the promise was or will be resolved or rejected, then calls one of the success or error callbacks asynchronously as soon as the result is available. The callbacks are called with a single argument: the result or rejection reason. Additionally, the notify callback may be called zero or more times to provide a progress indication, before the promise is resolved or rejected.\n         * The successCallBack may return IPromise<void> for when a $q.reject() needs to be returned\n         * This method returns a new promise which is resolved or rejected via the return value of the successCallback, errorCallback. It also notifies via the return value of the notifyCallback method. The promise can not be resolved or rejected from the notifyCallback method.\n         */"
  },
  {
    "id" : "5a95b1c9-3e57-4630-8ad8-77c99abc4ddf",
    "prId" : 5200,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "193f2be8-5ffc-439c-8af1-f9713bb5abd0",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Don't see the point of making it generic, Just annotate fn's parameter with a type annotation and you get the _same_ level of safety\n",
        "createdAt" : "2015-08-04T22:22:14Z",
        "updatedAt" : "2015-08-06T05:16:23Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "c32fe6eb-c4b9-4fe2-8103-db099b363990",
        "parentId" : "193f2be8-5ffc-439c-8af1-f9713bb5abd0",
        "authorId" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "body" : "The point is to avoid implicit \"any\" by omission, especially together with \"noImplicitAny\". If you have to rely on the developer explicitly adding a type annotation, that defeats the purpose. Please also see the referenced issue in the commit message and the example.\n",
        "createdAt" : "2015-08-05T07:46:10Z",
        "updatedAt" : "2015-08-06T05:16:23Z",
        "lastEditedBy" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "tags" : [
        ]
      }
    ],
    "commit" : "66135fcdb6c3e2d0dc03acbf06b72829140b7063",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +454,458 @@         * interpolated value changes.\n         */\n        $observe<T>(name: string, fn: (value?: T) => any): Function;\n\n        /**"
  },
  {
    "id" : "c252edfe-d7b1-4303-9df9-fe2ce2d6fdb7",
    "prId" : 5948,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf910b5e-77e2-4d81-b10a-6753af7cd5d9",
        "parentId" : null,
        "authorId" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "body" : "this also works with a string as the amount and a string as the fractionSize\n",
        "createdAt" : "2015-09-28T17:39:15Z",
        "updatedAt" : "2015-09-28T17:39:37Z",
        "lastEditedBy" : "5bf195d0-88f2-4eea-82af-ea18ace9da2d",
        "tags" : [
        ]
      },
      {
        "id" : "5f3dd8db-999a-4e90-9edb-48f14f4d260b",
        "parentId" : "bf910b5e-77e2-4d81-b10a-6753af7cd5d9",
        "authorId" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "body" : "Are you sure about this? The documentation says they should be numbers. Judging from the source code (https://github.com/angular/angular.js/blob/v1.4.6/src/ng/filter/filters.js#L137), it might be possible, though it doesn't seem right calling `Math.abs` on a string :(\n",
        "createdAt" : "2015-09-28T21:47:33Z",
        "updatedAt" : "2015-09-28T21:47:33Z",
        "lastEditedBy" : "cf23cf5c-4d88-43bf-b34c-24f4b1f9b17b",
        "tags" : [
        ]
      }
    ],
    "commit" : "221575e9823247b8c498210c986ab75b260ff78c",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +819,823 @@         * @return Formatted number\n         */\n        (amount: number, symbol?: string, fractionSize?: number): string;\n    }\n    "
  },
  {
    "id" : "c16db6b7-97ff-44fa-8402-7a6e3a72d062",
    "prId" : 8150,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "why have these types been widened?\n",
        "createdAt" : "2016-02-20T19:49:31Z",
        "updatedAt" : "2016-02-20T20:54:21Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "5ec8ebd3-a34a-4054-bc57-01fe4367a4c2",
        "parentId" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "It's a result of discussion in issue #5855. The problem is `IHttpRequestConfigHeaders` interface is used in two different places:\n\n> Actually, there are two headers, one in $http[Provider].defaults and one in IRequestConfig - an object that can be passed to $http on each call.\n> They have different types: the one in IRequestConfig is an object hash of header name to header content, whereas the one in defaults is a hash from request method to the hash above.\n\nI suggest `any` as a temporary solution until this issue is resolved.\n\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/issues/5855\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/commit/a42706711d711cf12ec26b8bb5f08520fc948253#commitcomment-13395727\n",
        "createdAt" : "2016-02-20T20:49:23Z",
        "updatedAt" : "2016-02-20T20:54:21Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      },
      {
        "id" : "c37daa92-5bac-4231-9628-90998a36f23d",
        "parentId" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "Not sure if I like this - the way they put it we would rather have two distinct types for the two different usages, and see which one is appropriate here. I will need to take a closer look at the other issue and the source, though, before I can give a final feedback.\n",
        "createdAt" : "2016-02-26T17:02:37Z",
        "updatedAt" : "2016-02-26T17:02:37Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "54b704cf-60e2-4f08-9ddc-db791c78f9a1",
        "parentId" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "+1 if they are distinct objects, they should have distinct types\n",
        "createdAt" : "2016-02-26T19:53:37Z",
        "updatedAt" : "2016-02-26T19:53:37Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "bf7691d3-dbfd-4d6d-a999-78faf981a861",
        "parentId" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "authorId" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "body" : "Before I jump to premature conclusions again, do you have any additional information on this @mmiszy ?\n",
        "createdAt" : "2016-02-29T12:41:12Z",
        "updatedAt" : "2016-02-29T12:41:12Z",
        "lastEditedBy" : "3493b770-3629-4926-9be3-f6ba8665f5fc",
        "tags" : [
        ]
      },
      {
        "id" : "8f663be3-8a9d-4e41-9e3f-058e04f9e3d7",
        "parentId" : "62955c36-16dd-4988-89ee-7b1d77412f45",
        "authorId" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "body" : "> two distinct types for the two different usages\n\nI agree. This should be changed, I'll try to fix it soon.\n",
        "createdAt" : "2016-02-29T12:43:32Z",
        "updatedAt" : "2016-02-29T12:43:32Z",
        "lastEditedBy" : "3082a8e8-b39a-4b3b-8f6f-d2fa571bcff6",
        "tags" : [
        ]
      }
    ],
    "commit" : "65347efe70de2c2b9cb29050b5a709d89ef77cef",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +1411,1415 @@        post?: any;\n        put?: any;\n        patch?: any;\n    }\n"
  },
  {
    "id" : "f5fed2d9-2d3d-4f6d-a35f-2a61fc52c80a",
    "prId" : 8150,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "853fb0e4-eb2d-481a-82d4-63008bed88e0",
        "parentId" : null,
        "authorId" : "bcc7bc48-ba2e-4239-b1a3-76a06e81cd71",
        "body" : "I stumbled upon this, as I am currently diving into directives. From my understanding, the `@deprecated` annotation is wrong. The behaviour for controllers implemented as non-ES6 classes might change, but this attribute itself is not deprecated. (https://docs.angularjs.org/api/ng/service/$compile#-bindtocontroller-)\n\nTruth do be told, this text is a good hint, worth to know. But I wouldn't either know how to annotate it..\n",
        "createdAt" : "2016-02-29T16:01:12Z",
        "updatedAt" : "2016-02-29T16:01:12Z",
        "lastEditedBy" : "bcc7bc48-ba2e-4239-b1a3-76a06e81cd71",
        "tags" : [
        ]
      }
    ],
    "commit" : "65347efe70de2c2b9cb29050b5a709d89ef77cef",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +1764,1768 @@         * relies upon bindings inside a $onInit method on the controller, instead.\n         */\n        bindToController?: boolean | Object;\n        link?: IDirectiveLinkFn | IDirectivePrePost;\n        multiElement?: boolean;"
  }
]