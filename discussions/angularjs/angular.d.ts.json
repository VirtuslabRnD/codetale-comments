[
  {
    "id" : "d97f3f1a-8fd9-44a2-b9fe-207bee611c40",
    "prId" : 2241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "663b0bad-3500-4f9a-b25d-0bd8fd1323fc",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "I think `$root: IRootScopeService` is correct. how about you?\n",
        "createdAt" : "2014-05-26T02:32:36Z",
        "updatedAt" : "2014-05-26T02:32:36Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3386842a6190dabe8a5be14ce16bf81e4614a0a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +242,246 @@        $parent: IScope;\n\n        $root: IScope;\n\n        $id: string;"
  },
  {
    "id" : "f66fdbf8-2f8b-4771-8aa6-453882cb2b4e",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb24ad3f-6ce7-41b4-b169-0acf8d32e890",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Nice :)\n",
        "createdAt" : "2014-06-02T13:30:59Z",
        "updatedAt" : "2014-06-02T13:33:52Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b740a4d8f0e37e96806bfadf1248117b1a66a92",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +717,721 @@\n        /**\n         * {number|Promise}\n         * Timeout in milliseconds, or promise that should abort the request when resolved.\n         */"
  },
  {
    "id" : "df8dc858-4e6a-464a-8866-a14b36a27246",
    "prId" : 2273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "119351a9-a64a-494b-8c51-88c727fc0f6e",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Good call!\n",
        "createdAt" : "2014-06-02T13:35:19Z",
        "updatedAt" : "2014-06-02T13:35:19Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b740a4d8f0e37e96806bfadf1248117b1a66a92",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +665,669 @@     * see http://docs.angularjs.org/api/ng/service/$http#usage \n     */\n    interface IRequestShortcutConfig {\n        /**\n         * {Object.<string|Object>}"
  },
  {
    "id" : "d458ea6c-db56-4918-bdc5-81470bf716d5",
    "prId" : 2369,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ad94120-7410-4b5c-bab8-8c110777119f",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "causes #2618\n",
        "createdAt" : "2014-08-07T09:02:10Z",
        "updatedAt" : "2014-08-07T09:02:10Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "72b9fbed7f7b96de942005c96e23f3535e7d0084",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +129,133 @@        controller(name: string, inlineAnnotatedConstructor: any[]): IModule;\n        controller(object : Object): IModule;\n        directive(name: string, directiveFactory: IDirectiveFactory): IModule;\n        directive(name: string, inlineAnnotatedFunction: any[]): IModule;\n        directive(object: Object): IModule;"
  },
  {
    "id" : "c6df45ca-2641-457d-9804-58c725374aa5",
    "prId" : 2587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "774dfd75-2fc8-4b09-a9de-2024b5bfb0bf",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "@johnnyreilly `$rootScope` doesn't have this built in. This example : http://stackoverflow.com/a/13407227/390330 is just adding to it just like you can add stuff to any dynamic JavaScript object. \n\nThis extension to the interface should belong in _your_ or any other project that extends $rootScope based on how _they_ extend it. E.g. I put a bunch of stuff on `$rootScope` like _enums_ to make it easier to use in the HTML. \n\nNote (since you asked for docs): $rootScope is _exactly_ same as any scope. In fact any $scope is created using the `$new` member of the rootScope which simply sets up a prototype chain and therefore $scope has all the properties (on the prototype chain) of $rootScope. Really (and literally) `$scope` extends `$rootScope` but doesn't matter in the defs since by default they are equivalent. \n",
        "createdAt" : "2014-07-31T11:39:00Z",
        "updatedAt" : "2014-07-31T11:39:00Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "adec6babb59ef08a52e7ec69e995d63169137c33",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +964,968 @@    interface IRootScopeService extends IScope {\n        title: string;\n\t}\n\n    ///////////////////////////////////////////////////////////////////////////"
  },
  {
    "id" : "03bebab3-5072-4da2-bb4f-71233e2dbeb3",
    "prId" : 2606,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8294db51-c05f-431c-bd2d-c9b0427bfc5d",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "verified. Thanks! \n\n![image](https://cloud.githubusercontent.com/assets/874898/3787398/ec26af6e-1a15-11e4-8994-ae563bdf585e.png)\n",
        "createdAt" : "2014-08-02T07:23:42Z",
        "updatedAt" : "2014-08-02T07:23:42Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c874738f2eee50077d77659a114ad05e449f5f77",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +311,315 @@        (): void;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    // Scope"
  },
  {
    "id" : "fdab5881-f99f-43a2-b1d2-6ae5eea61207",
    "prId" : 2607,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "Awesome. Thanks. One more fix. Don't mark these arguments as optional (http://definitelytyped.org/guides/best-practices.html callback signatures)\n",
        "createdAt" : "2014-08-06T05:29:15Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "2b629a6b-5fa3-48f6-969d-28a1ff299dfa",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "body" : "alright\n@basarat It seems it's not possible to create an overloaded function declaration, trying to use \n\n``` typescript\n    interface IDirectiveLinkFn {\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes\n        ): void;\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery\n        ): void;\n        (\n            scope: IScope\n        ): void;\n        (): void;\n    }\n```\n\nbut the compiler won't let me use just `scope` for example\n",
        "createdAt" : "2014-08-06T13:00:38Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "tags" : [
        ]
      },
      {
        "id" : "da36344e-f5f5-477c-97e9-e56b01558664",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "It should be just : \n\n``` ts\n   interface IDirectiveLinkFn {\n        (\n            scope: IScope,\n            instanceElement: IAugmentedJQuery,\n            instanceAttributes: IAttributes,\n            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n  }\n```\n\nDemo that it accommodates all: \n\n``` ts\ninterface IDirectiveLinkFn {\n        (\n            scope: any,\n            instanceElement: any,\n            instanceAttributes: any,\n            controller: any,\n            transclude: any\n        ): void;\n  }\n\n  var foo : IDirectiveLinkFn;\n\n  foo = ()=>{};\n  foo = (scope)=>{};\n  // And so on \n```\n",
        "createdAt" : "2014-08-08T14:21:10Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "2994ae2a-0e76-47db-a829-1579aed65bdf",
        "parentId" : "09ceb9e8-7208-4b76-84e9-ebbba7492724",
        "authorId" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "body" : "you are right, I'm overthinking this. The next commit should have fixed it.\n",
        "createdAt" : "2014-08-08T15:23:25Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "c7f6ad86-260a-4d02-958a-90848e5ed577",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2de3867de193326103f9a394701efec4b452618",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1042,1046 @@            controller: any,\n            transclude: ITranscludeFunction\n        ): void;\n    }\n"
  },
  {
    "id" : "523b19f2-7bc6-4afe-ab88-519c72b32986",
    "prId" : 2607,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24bd23c0-0d68-48b0-a913-138806932f3b",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "same for these arguments. Don't mark these as optional\n",
        "createdAt" : "2014-08-06T05:29:42Z",
        "updatedAt" : "2014-08-09T21:17:11Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2de3867de193326103f9a394701efec4b452618",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1055,1059 @@            templateAttributes: IAttributes,\n            transclude: ITranscludeFunction\n        ): IDirectivePrePost;\n    }\n"
  },
  {
    "id" : "dbcbbf93-7e2c-40f3-a144-80fee0a35661",
    "prId" : 3745,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "parentId" : null,
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "umm...\n\n```\nvar cache; ng. ICacheObject;\ncache.put(\"test\", true); // return undefined\ncache.put(\"test\", 1); // return true\n```\n\nI think `put(key: string, value?: any): any;` is better.\n",
        "createdAt" : "2015-03-02T14:56:05Z",
        "updatedAt" : "2015-03-02T14:56:05Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      },
      {
        "id" : "b366e8de-5b01-493b-998b-5b1deb694d7c",
        "parentId" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "authorId" : "61e79286-15fb-4476-8cf4-64b97737fc84",
        "body" : "How did you go about getting those results?  When I run those examples I get the values back as expected:\nhttp://plnkr.co/edit/VI1d3uyyRIPTI0rooNVO?p=preview\n",
        "createdAt" : "2015-03-02T15:16:26Z",
        "updatedAt" : "2015-03-02T15:16:26Z",
        "lastEditedBy" : "61e79286-15fb-4476-8cf4-64b97737fc84",
        "tags" : [
        ]
      },
      {
        "id" : "e78a3e43-1297-4772-8e0f-83164d7b9817",
        "parentId" : "cd8713a9-6676-4ee6-b25f-469e32e6b4e2",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "oh, sorry. I was read a document. Returns is `the value stored.`. but my comprehension is invalid.\n",
        "createdAt" : "2015-03-02T16:20:06Z",
        "updatedAt" : "2015-03-02T16:20:06Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "561b5a075e0237db3631c0588890e72506c9d36d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1025,1029 @@            //capacity: number;\n        };\n        put<T>(key: string, value?: T): T;\n        get(key: string): any;\n        remove(key: string): void;"
  }
]