[
  {
    "id" : "6cd94460-17f6-49f5-b7d6-503e03eb9cb3",
    "prId" : 4419,
    "prUrl" : "https://github.com/zio/zio/pull/4419#pullrequestreview-535954738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00a72da5-a3f1-4f9c-b3f1-6abd8cc83ad5",
        "parentId" : null,
        "authorId" : "56df1b23-bbcc-41fe-bb95-36e07b5ff1e8",
        "body" : "`0.6.0` version of `hedgehog-core` is nowhere to be found... It seems like it's been yanked from Maven Central\r\n",
        "createdAt" : "2020-11-21T09:52:18Z",
        "updatedAt" : "2020-11-21T09:52:18Z",
        "lastEditedBy" : "56df1b23-bbcc-41fe-bb95-36e07b5ff1e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3d1d16c3fc4b0d3fcc39482415c498b48e14d20",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +434,438 @@        \"org.typelevel\"             %% \"cats-effect\"    % \"2.2.0\",\n        \"org.scalacheck\"            %% \"scalacheck\"     % \"1.15.1\",\n        \"qa.hedgehog\"               %% \"hedgehog-core\"  % \"0.5.1\",\n        \"com.github.japgolly.nyaya\" %% \"nyaya-gen\"      % \"0.9.2\"\n      ),"
  },
  {
    "id" : "081d606a-0cce-48f2-b29d-c2783371bc19",
    "prId" : 3122,
    "prUrl" : "https://github.com/zio/zio/pull/3122#pullrequestreview-374351382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d6d403-ddbe-413c-b246-c25df33d943b",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Do we need this? I would like to avoid making ZIO Test depend on ZIO Macros and instead have it be an optional feature that users can include if they want? Also it doesn't seem to be a dependency on other platforms right now which seems to indicate it is not necessary.",
        "createdAt" : "2020-03-13T14:24:28Z",
        "updatedAt" : "2020-03-13T15:12:09Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "5d6f17bd-75b9-4c45-9bb0-c3d0e4021d17",
        "parentId" : "37d6d403-ddbe-413c-b246-c25df33d943b",
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "It's not ZIO Test - it's examples. I agree with you on macros being optional for ZIO users.",
        "createdAt" : "2020-03-13T14:35:16Z",
        "updatedAt" : "2020-03-13T15:12:09Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      },
      {
        "id" : "2ee40029-8146-4d4c-baa3-f9d22f25e259",
        "parentId" : "37d6d403-ddbe-413c-b246-c25df33d943b",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Ah sorry I misread.",
        "createdAt" : "2020-03-13T14:37:30Z",
        "updatedAt" : "2020-03-13T15:12:09Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ee4ad0351e4e7bbe4ba075e53ba2c195d617278",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +301,305 @@  .settings(macroExpansionSettings)\n  .settings(testFrameworks += new TestFramework(\"zio.test.sbt.ZTestFramework\"))\n  .dependsOn(macros, testRunner)\n\nlazy val examplesJS = examples.js.settings(testJsSettings)"
  },
  {
    "id" : "c754e237-e72c-428e-8ecb-e463e2bdc36d",
    "prId" : 2533,
    "prUrl" : "https://github.com/zio/zio/pull/2533#pullrequestreview-337378225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fdee474-bf10-4372-8806-9721387387bb",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Can we support Scala.js as well?",
        "createdAt" : "2019-12-30T02:56:10Z",
        "updatedAt" : "2020-01-15T23:12:51Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "58ec9882-dac2-48a4-b131-5d9e2b042c97",
        "parentId" : "6fdee474-bf10-4372-8806-9721387387bb",
        "authorId" : "1ca841ad-cf41-4d4d-ab0f-56c3559e6a2f",
        "body" : "I'm not how this would work and how to test it...\r\nJUnit is a java thing. \r\nIn SBT we had a Scala.js variant of the `TestFramework` interface...",
        "createdAt" : "2019-12-31T09:18:56Z",
        "updatedAt" : "2020-01-15T23:12:51Z",
        "lastEditedBy" : "1ca841ad-cf41-4d4d-ab0f-56c3559e6a2f",
        "tags" : [
        ]
      },
      {
        "id" : "022133ee-31b0-41c5-aa86-e484b9bfa54f",
        "parentId" : "6fdee474-bf10-4372-8806-9721387387bb",
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I'm not an expert on this but it looks like ScalaJS supports JUnit. See [here](https://github.com/scala-js/scala-js/blob/master/junit-plugin/src/main/scala/org/scalajs/junit/plugin/ScalaJSJUnitPlugin.scala). So maybe we could create a testJunitRunnerJS project as well and test that we are able to run a ZIO Test spec using that the same way we could run another JUnit test on Scala.js.",
        "createdAt" : "2019-12-31T13:44:38Z",
        "updatedAt" : "2020-01-15T23:12:51Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "874e5a0c58acdec2bee7099e99c0c6660d56b8b9",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +245,249 @@  .dependsOn(test)\n\nlazy val testJunitRunnerJVM = testJunitRunner.jvm.settings(dottySettings)\n\nlazy val testRunnerJVM = testRunner.jvm.settings(dottySettings)"
  },
  {
    "id" : "63265945-0c83-4d04-b78c-4b7608c937ab",
    "prId" : 1428,
    "prUrl" : "https://github.com/zio/zio/pull/1428#pullrequestreview-321936818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66274677-6013-47d4-a986-f48cd0f5992f",
        "parentId" : null,
        "authorId" : "56df1b23-bbcc-41fe-bb95-36e07b5ff1e8",
        "body" : "maybe\r\n```scala\r\nCompile / doc / sources := ...\r\n```\r\n(and similarly in other places)\r\nbut this is a trivial detail...",
        "createdAt" : "2019-11-24T01:24:41Z",
        "updatedAt" : "2019-11-24T01:24:53Z",
        "lastEditedBy" : "56df1b23-bbcc-41fe-bb95-36e07b5ff1e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52db85294ec369b152d79985edafc9eb5f52edad",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +100,104 @@  .settings(skip in Test := true)\n  .settings(skip in doc := true)\n  .settings(sources in (Compile, doc) := Seq.empty)\n  .settings(\n    libraryDependencies ++= Seq("
  },
  {
    "id" : "d82b3ab1-444b-467b-883e-42dd16ecd798",
    "prId" : 833,
    "prUrl" : "https://github.com/zio/zio/pull/833#pullrequestreview-234754168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f3bde72-4cf7-49bc-bd69-22973d4e8e29",
        "parentId" : null,
        "authorId" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "body" : "What was the reason to have `benchmarks` commented out?",
        "createdAt" : "2019-05-07T12:56:22Z",
        "updatedAt" : "2019-05-08T20:41:01Z",
        "lastEditedBy" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "tags" : [
        ]
      },
      {
        "id" : "a0681caf-b21c-4783-9cdb-d24660ee767f",
        "parentId" : "8f3bde72-4cf7-49bc-bd69-22973d4e8e29",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "No idea. It was commented out for a long time now. As far as I can see it's commented out together with Monix during \"death of TF\" PR :).",
        "createdAt" : "2019-05-07T13:07:39Z",
        "updatedAt" : "2019-05-08T20:41:01Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "ab01f8d4-7a84-4508-af57-f31125cfaf64",
        "parentId" : "8f3bde72-4cf7-49bc-bd69-22973d4e8e29",
        "authorId" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "body" : "I remember it :D , I wondered why it was already commented before ",
        "createdAt" : "2019-05-07T20:49:31Z",
        "updatedAt" : "2019-05-08T20:41:01Z",
        "lastEditedBy" : "4ace600a-1453-4cce-81f8-efdc7c98ad7a",
        "tags" : [
        ]
      }
    ],
    "commit" : "709453fe0172b1c4950f5005d79f2cacf487070b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +50,54 @@    interopReactiveStreamsJVM,\n    interopTwitterJVM,\n    benchmarks,\n    testkitJVM,\n    docs"
  },
  {
    "id" : "b688d2e2-778c-46f8-afec-2de728b1d455",
    "prId" : 715,
    "prUrl" : "https://github.com/zio/zio/pull/715#pullrequestreview-228641541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ada8a73b-9d4a-4a38-b4ad-7295a91d3434",
        "parentId" : null,
        "authorId" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "body" : "No clue why that is but I couldn't even start sbt without this import",
        "createdAt" : "2019-04-02T10:05:03Z",
        "updatedAt" : "2019-04-02T10:51:08Z",
        "lastEditedBy" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "tags" : [
        ]
      },
      {
        "id" : "6714590c-5834-4810-8d20-1fb0c311757d",
        "parentId" : "ada8a73b-9d4a-4a38-b4ad-7295a91d3434",
        "authorId" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "body" : "For me, global coursier causes this",
        "createdAt" : "2019-04-02T23:08:17Z",
        "updatedAt" : "2019-04-02T23:08:17Z",
        "lastEditedBy" : "fe8c0309-9574-4c2c-a95a-2f54e9bd5411",
        "tags" : [
        ]
      },
      {
        "id" : "3e6988e8-7d3b-404d-aaf4-453668fb4084",
        "parentId" : "ada8a73b-9d4a-4a38-b4ad-7295a91d3434",
        "authorId" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "body" : "I don't have global coursier. But I have global sbt-updates and sbt-license-report. I will try later today if it's any of them. Unfortunate that this could happen. ",
        "createdAt" : "2019-04-03T04:08:25Z",
        "updatedAt" : "2019-04-03T04:08:25Z",
        "lastEditedBy" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "tags" : [
        ]
      },
      {
        "id" : "3898ef0c-4f23-475e-a1b1-e56442af0926",
        "parentId" : "ada8a73b-9d4a-4a38-b4ad-7295a91d3434",
        "authorId" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "body" : "I finally found some spare time to try it out - it's sbt-updates. We could revert this commit, but on the other hand it doesn't hurt either.",
        "createdAt" : "2019-04-19T09:29:42Z",
        "updatedAt" : "2019-04-19T09:29:42Z",
        "lastEditedBy" : "61888220-cb99-4f2d-91c3-d7576394bf23",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ea23a79ab921c58110d8faa3513bd2fa6f3282",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3,7 @@import Scalaz._\nimport xerial.sbt.Sonatype._\nimport explicitdeps.ExplicitDepsPlugin.autoImport.moduleFilterRemoveValue\n\nname := \"scalaz-zio\""
  },
  {
    "id" : "84706cbe-4955-4201-960d-9dd635eeb83f",
    "prId" : 151,
    "prUrl" : "https://github.com/zio/zio/pull/151#pullrequestreview-142628192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5ddf0d7-d081-4a35-b16f-7c8f040ab8e9",
        "parentId" : null,
        "authorId" : "54ce3eb7-2972-4dfe-af78-881ac5ff3a90",
        "body" : "We don't want these: `setReleaseVersion`, `tagRelease`, `pushChanges`",
        "createdAt" : "2018-08-01T04:12:46Z",
        "updatedAt" : "2018-08-06T03:00:41Z",
        "lastEditedBy" : "54ce3eb7-2972-4dfe-af78-881ac5ff3a90",
        "tags" : [
        ]
      },
      {
        "id" : "5293926f-8329-449f-aee3-956b6a1040f8",
        "parentId" : "d5ddf0d7-d081-4a35-b16f-7c8f040ab8e9",
        "authorId" : "64a753f3-88c5-4514-b075-c27461834e83",
        "body" : "- sbt-release builds desired artifact based on new version set on `version.sbt`, which is set by `setReleaseVersion`. So, we want `setReleaseVersion`. but I should look into reverting the `version.sbt` to original version once build is successful.\r\n\r\n- `tagRelease` is used to create a tag for each build, but depends what responsibility we want with `sbt` and what we want manual. I had a comment to do the same [using bash script](https://github.com/scalaz/scalaz-zio/issues/145#issuecomment-408970343) as I can create tag from scripting as well. \r\n\r\nI would be fine with `sbt-release` creating tags, unless contributors have permissions to push their dev tags (with `git push`) which will cause problems.\r\n\r\n- I agree we do not need `pushChanges` so that we don't want to keep pushing dev tags. which means we need to either introduce some sort of flag which will let push the tags from CI/CD, or write bash script and simply `git push --tags` **(FIXED)**",
        "createdAt" : "2018-08-02T02:41:58Z",
        "updatedAt" : "2018-08-06T03:00:41Z",
        "lastEditedBy" : "64a753f3-88c5-4514-b075-c27461834e83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e885d69c424aac5dedf38759143fe75dbfa7853f",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +167,171 @@  runClean,\n  runTest,\n  setReleaseVersion,\n  tagRelease,\n  publishArtifacts"
  }
]