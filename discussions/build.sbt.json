[
  {
    "id" : "da42c89f-8dd3-43a6-bbc1-c5ce7d26b417",
    "prId" : 843,
    "prUrl" : "https://github.com/sbt/zinc/pull/843#pullrequestreview-450746731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8922ff36-2c63-47ad-b732-fa28e7e5bea3",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "What's going on here?  I never use `testQuick`.",
        "createdAt" : "2020-07-17T14:25:27Z",
        "updatedAt" : "2020-07-17T19:32:44Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "22c2dccd-ba90-4087-b46e-bfa3d761f4f5",
        "parentId" : "8922ff36-2c63-47ad-b732-fa28e7e5bea3",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "When I run `~testQuick` at the root level, I noticed that it's running 8 tests at a time, each vying for memory and CPU, and sometimes it would get stuck like it's deadlocked. It could also be plain memory leak somewhere. Project matrix makes it easy to have parallel subprojects. I think global 4 is a sweet spot for 2G of RAM I'm giving to this build.",
        "createdAt" : "2020-07-17T15:20:22Z",
        "updatedAt" : "2020-07-17T19:32:44Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e754892fcd070537371515ec36368b109172359",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +77,81 @@ThisBuild / mimaPreviousArtifacts := Set.empty\n// limit the number of concurrent test so testQuick works\nGlobal / concurrentRestrictions += Tags.limit(Tags.Test, 4)\n\ndef baseSettings: Seq[Setting[_]] = Seq("
  },
  {
    "id" : "374d4a97-2838-43c7-972a-d2efedc4f0fe",
    "prId" : 799,
    "prUrl" : "https://github.com/sbt/zinc/pull/799#pullrequestreview-435025977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "397dcedf-232e-41b4-bd3f-02408fdbd67f",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "Why is this a matrix if it's Java only?",
        "createdAt" : "2020-06-22T06:57:39Z",
        "updatedAt" : "2020-06-22T07:01:15Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "674391eb-74f8-40a1-8bb0-4f0606a534f6",
        "parentId" : "397dcedf-232e-41b4-bd3f-02408fdbd67f",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "So other matrices can depend on it without using `.configure(...)`.",
        "createdAt" : "2020-06-22T15:16:21Z",
        "updatedAt" : "2020-06-22T15:16:21Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fbc8ec9d6e43bb519b294c68b978b2e753a518a",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +320,324 @@  .configure(addBaseSettingsAndTestDeps)\n\nlazy val zincPersistCoreAssembly = (projectMatrix in internalPath / \"zinc-persist-core-assembly\")\n  .jvmPlatform(autoScalaLibrary = false)\n  .settings("
  },
  {
    "id" : "705dd0ee-278b-4ffa-a404-37bb8cf18da0",
    "prId" : 799,
    "prUrl" : "https://github.com/sbt/zinc/pull/799#pullrequestreview-435059526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72980c71-ba1e-405a-b71f-3f18e660fce6",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "```suggestion\r\n```\r\n\r\nDuplicate from below, it seems.",
        "createdAt" : "2020-06-22T06:59:17Z",
        "updatedAt" : "2020-06-22T07:01:15Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "fce2656b-7b91-4fd7-86d4-a371705fa2cc",
        "parentId" : "72980c71-ba1e-405a-b71f-3f18e660fce6",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "`.jvmPlatform(autoScalaLibrary = false)` means it's a Java-only matrix row.\r\n",
        "createdAt" : "2020-06-22T15:16:47Z",
        "updatedAt" : "2020-06-22T15:16:47Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "3f545427-e6c7-44d9-b53a-1b4514b6156a",
        "parentId" : "72980c71-ba1e-405a-b71f-3f18e660fce6",
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "Ah, `=` not `:=`.",
        "createdAt" : "2020-06-22T15:53:40Z",
        "updatedAt" : "2020-06-22T15:53:40Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fbc8ec9d6e43bb519b294c68b978b2e753a518a",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +321,325 @@\nlazy val zincPersistCoreAssembly = (projectMatrix in internalPath / \"zinc-persist-core-assembly\")\n  .jvmPlatform(autoScalaLibrary = false)\n  .settings(\n    name := \"zinc-persist-core-assembly\","
  },
  {
    "id" : "c916a857-113f-46cd-84da-9dea3888a523",
    "prId" : 492,
    "prUrl" : "https://github.com/sbt/zinc/pull/492#pullrequestreview-101405384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bae18f5d-afd8-4451-a70b-6c693077a224",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "the \"api\" in \"xsbt.api\" makes me concerned: is this public API?",
        "createdAt" : "2018-03-05T11:10:40Z",
        "updatedAt" : "2018-03-05T11:10:41Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "90709255-8fbe-47ef-87b6-ab96ac650282",
        "parentId" : "bae18f5d-afd8-4451-a70b-6c693077a224",
        "authorId" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "body" : "I think the \"api\" here refers the the functionality of this code (visiting the API).\r\n\r\nIt would be possible to leave deprecated methods in place with the old signatures if needed.",
        "createdAt" : "2018-03-06T02:57:55Z",
        "updatedAt" : "2018-03-06T02:57:55Z",
        "lastEditedBy" : "c7d4bff9-85e5-49d0-85e4-79743bd27861",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a9441843a8d00bf62bebb10245a2ce526f03c60",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +473,477 @@         exclude[IncompatibleMethTypeProblem](\"xsbt.api.Visit.visitValueParameters\"),\n         exclude[IncompatibleMethTypeProblem](\"xsbt.api.Visit.visitParameters\"),\n         exclude[IncompatibleMethTypeProblem](\"xsbt.api.Visit.visitTypes\"),\n      )\n    }"
  },
  {
    "id" : "b2d9a3fb-b702-4e36-a960-f1207e2138ac",
    "prId" : 492,
    "prUrl" : "https://github.com/sbt/zinc/pull/492#pullrequestreview-117806533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ee53556-4be3-4a4a-983d-ad4a9138916c",
        "parentId" : null,
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "Due to https://github.com/sbt/zinc/issues/537, does this mean that incremental compilation of Zinc itself no longer works?",
        "createdAt" : "2018-05-05T07:03:59Z",
        "updatedAt" : "2018-05-05T07:04:00Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a9441843a8d00bf62bebb10245a2ce526f03c60",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +43,47 @@    val old = scalacOptions.value\n    scalaBinaryVersion.value match {\n      case \"2.12\" => old ++ List(\"-opt-inline-from:<sources>\", \"-opt:l:inline\", \"-Yopt-inline-heuristics:at-inline-annotated\")\n      case _ =>\n        old filterNot Set("
  },
  {
    "id" : "13680901-d9c5-4a6f-ad3b-bfb6528d7eae",
    "prId" : 482,
    "prUrl" : "https://github.com/sbt/zinc/pull/482#pullrequestreview-88210175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98258d6a-9ea6-44f5-985d-ecae323204b7",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Does this mean you're offering subscriptions for this product? This is novel, it's not even the case for scalac (at least there's no references to the LRP in the sources). Please, can you clarify?",
        "createdAt" : "2018-01-11T15:51:25Z",
        "updatedAt" : "2018-01-11T15:55:00Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "04558d42-cddb-4b67-bdc0-ae764877cc13",
        "parentId" : "98258d6a-9ea6-44f5-985d-ecae323204b7",
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "Yeah scala, sbt, zinc are products of RP, and Lightbend provides commercial support for them.",
        "createdAt" : "2018-01-11T15:59:49Z",
        "updatedAt" : "2018-01-11T15:59:49Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      }
    ],
    "commit" : "4afdd3e4323b9c50b9a13440c3f0f97457208727",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +624,628 @@\ninThisBuild(Seq(\n  whitesourceProduct                   := \"Lightbend Reactive Platform\",\n  whitesourceAggregateProjectName      := \"sbt-zinc-master\",\n  whitesourceAggregateProjectToken     := \"4b57f35176864c6397b872277d51bc27b89503de0f1742b8bc4dfa2e33b95c5c\","
  },
  {
    "id" : "4af18c83-89c0-442a-a64f-61a596fe04ef",
    "prId" : 453,
    "prUrl" : "https://github.com/sbt/zinc/pull/453#pullrequestreview-77171992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3625107-7907-4440-947e-f3a3fde892d5",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "For consistency either the match should be `y == 13` or the directory should end in \"_2.13+\".",
        "createdAt" : "2017-11-16T10:29:14Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "d5b73979-a60a-45b2-a7a8-6b0d0e739aa4",
        "parentId" : "d3625107-7907-4440-947e-f3a3fde892d5",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "sure.",
        "createdAt" : "2017-11-16T16:11:09Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d6dfd790f6de664dff8a734be3d57902098da18",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +355,359 @@      case (2, y) if y == 10            => new File(scalaSource.value.getPath + \"_2.10\")\n      case (2, y) if y == 11 || y == 12 => new File(scalaSource.value.getPath + \"_2.11-12\")\n      case (2, y) if y >= 13            => new File(scalaSource.value.getPath + \"_2.13\")\n    }.toList),\n    // Use a bootstrap compiler bridge to compile the compiler bridge."
  },
  {
    "id" : "523bae9f-6122-49e8-9a25-2d48aa27dfac",
    "prId" : 453,
    "prUrl" : "https://github.com/sbt/zinc/pull/453#pullrequestreview-77182406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11ab4448-5126-4d73-9d73-eb0f4d4547a7",
        "parentId" : null,
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "@dwijnand Added comments.",
        "createdAt" : "2017-11-16T16:38:59Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d6dfd790f6de664dff8a734be3d57902098da18",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +332,336 @@}\n\n/**\n * Compiler-side interface to compiler that is compiled against the compiler being used either in advance or on the fly.\n * Includes API and Analyzer phases that extract source API and relationships."
  },
  {
    "id" : "32ef58a9-fb11-4426-8e34-88c4dd6d58f5",
    "prId" : 453,
    "prUrl" : "https://github.com/sbt/zinc/pull/453#pullrequestreview-78070090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4653920e-f58c-4ba1-8218-e5338cf313a7",
        "parentId" : null,
        "authorId" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "body" : "Nitpick: Could we keep that in order? 😄 ",
        "createdAt" : "2017-11-21T10:55:31Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d6dfd790f6de664dff8a734be3d57902098da18",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +6,10 @@def internalPath = file(\"internal\")\n\nlazy val compilerBridgeScalaVersions = List(scala212, scala213, scala211, scala210)\nlazy val compilerBridgeTestScalaVersions = List(scala212, scala211, scala210)\n"
  },
  {
    "id" : "00a7f864-3c11-4a2f-b14d-73980186e430",
    "prId" : 453,
    "prUrl" : "https://github.com/sbt/zinc/pull/453#pullrequestreview-78169655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98d0b8d0-23d1-479e-aefb-065cafc12eaa",
        "parentId" : null,
        "authorId" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "body" : "Why's 2.13 not tested?",
        "createdAt" : "2017-11-21T10:55:33Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "tags" : [
        ]
      },
      {
        "id" : "8904e18d-fcd9-4b3c-bf7a-70c4d0a2ff3c",
        "parentId" : "98d0b8d0-23d1-479e-aefb-065cafc12eaa",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "Some dependencies are not available for Scala 2.13.0-M2.",
        "createdAt" : "2017-11-21T16:16:49Z",
        "updatedAt" : "2017-11-23T09:03:03Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d6dfd790f6de664dff8a734be3d57902098da18",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +7,11 @@\nlazy val compilerBridgeScalaVersions = List(scala212, scala213, scala211, scala210)\nlazy val compilerBridgeTestScalaVersions = List(scala212, scala211, scala210)\n\ndef mimaSettings: Seq[Setting[_]] = Seq("
  },
  {
    "id" : "7b7697a5-96f1-4594-a0b4-bc575b0c04d1",
    "prId" : 377,
    "prUrl" : "https://github.com/sbt/zinc/pull/377#pullrequestreview-52290910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9bc95f7-8051-4337-9b9b-b71e08278429",
        "parentId" : null,
        "authorId" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "body" : "You probably need to redefine `publishSigned` to fix #375.",
        "createdAt" : "2017-07-25T16:12:07Z",
        "updatedAt" : "2017-07-25T16:17:27Z",
        "lastEditedBy" : "b1c80b04-b64d-48bd-95ec-f1ce9c0f0774",
        "tags" : [
        ]
      },
      {
        "id" : "c0cac0ce-d580-496d-92d6-35b4d8db5804",
        "parentId" : "b9bc95f7-8051-4337-9b9b-b71e08278429",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "publishSigned respects `skip in publish` so that's going to be the fix I think.",
        "createdAt" : "2017-07-25T17:45:01Z",
        "updatedAt" : "2017-07-25T17:45:10Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "d9bcba5d-a1e2-4804-a4db-2177ba427fdd",
        "parentId" : "b9bc95f7-8051-4337-9b9b-b71e08278429",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Can we actually remove the `publish*` and `publishArtifact` redefinitions if `skip in publish` is already being respected?",
        "createdAt" : "2017-07-26T08:35:38Z",
        "updatedAt" : "2017-07-26T08:35:38Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f1354f19078672910360f0eb96953c6f24b8e8f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +93,97 @@  publish := {},\n  publishLocal := {},\n  publishArtifact in Compile := false,\n  publishArtifact in Test := false,\n  publishArtifact := false,"
  },
  {
    "id" : "ad6fe700-89a5-4ae8-b41a-3d2dcdf6099f",
    "prId" : 377,
    "prUrl" : "https://github.com/sbt/zinc/pull/377#pullrequestreview-52142553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60f156ef-f4ba-4ef4-b1ed-84632861f6c3",
        "parentId" : null,
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "👍 ",
        "createdAt" : "2017-07-25T17:45:25Z",
        "updatedAt" : "2017-07-25T17:45:25Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f1354f19078672910360f0eb96953c6f24b8e8f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +96,100 @@  publishArtifact in Test := false,\n  publishArtifact := false,\n  skip in publish := true,\n)\n"
  },
  {
    "id" : "079a3668-e10b-43b1-afe5-12c4893d2875",
    "prId" : 323,
    "prUrl" : "https://github.com/sbt/zinc/pull/323#pullrequestreview-47738854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad0407c-34c4-4fed-8d18-e3a1cfc3a702",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "It would be good to make this comment more descriptive and explain why this is the case so that future readers understand that the bridge has to be as much compatible as possible.",
        "createdAt" : "2017-07-03T13:59:26Z",
        "updatedAt" : "2017-07-03T19:02:17Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "610a95ac-4463-407b-a67c-f656dfbabd36",
        "parentId" : "dad0407c-34c4-4fed-8d18-e3a1cfc3a702",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "tbh I am not sure how much this had effect, but I did expand the comment.",
        "createdAt" : "2017-07-03T19:08:53Z",
        "updatedAt" : "2017-07-03T19:08:53Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "ad03352f-c4e0-41e2-b342-e7fb53f81851",
        "parentId" : "dad0407c-34c4-4fed-8d18-e3a1cfc3a702",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "I thought you did this so that the regression doesn't happen again. Forcing the latest Java version will always guarantee that our bridge compiles for all the Java versions supported, I presumed that was what you had in mind.",
        "createdAt" : "2017-07-03T21:04:10Z",
        "updatedAt" : "2017-07-03T21:04:10Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cca946290b45afe9e91a7b25b5c0ece2b4fc182",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +260,264 @@    // javaOnlySettings,\n    name := \"Compiler Interface\",\n    // Use the smallest Scala version in the compilerBridgeScalaVersions\n    // Technically the scalaVersion shouldn't have any effect since scala library is not included,\n    // but given that Scala 2.10 compiler cannot parse Java 8 source, it's probably good to keep this."
  },
  {
    "id" : "dca76b62-cb61-4810-8780-dcfc0a78e68e",
    "prId" : 323,
    "prUrl" : "https://github.com/sbt/zinc/pull/323#pullrequestreview-47738905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c326fd6-d204-4cb9-9ab1-e6c1697d2103",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "If we already have `skip in publish`, why are `publish` and `publishLocal` definitions still required?",
        "createdAt" : "2017-07-03T14:00:03Z",
        "updatedAt" : "2017-07-03T19:02:17Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      },
      {
        "id" : "b6ebfba4-b308-4e66-a946-d49fe7813341",
        "parentId" : "2c326fd6-d204-4cb9-9ab1-e6c1697d2103",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "skip in publish AFAIK is only respected by sbt-pgp.\r\n",
        "createdAt" : "2017-07-03T18:54:32Z",
        "updatedAt" : "2017-07-03T19:02:17Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      },
      {
        "id" : "0c554132-c676-4559-a63a-576a0d450b84",
        "parentId" : "2c326fd6-d204-4cb9-9ab1-e6c1697d2103",
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "Okay, I thought that you had already merged the `skip in publish` functionality in sbt 1.0.x.",
        "createdAt" : "2017-07-03T21:04:35Z",
        "updatedAt" : "2017-07-04T08:00:46Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cca946290b45afe9e91a7b25b5c0ece2b4fc182",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +361,365 @@    publish := {},\n    publishLocal := {},\n    skip in publish := true,\n    sourceManaged in (Compile, generateContrabands) := baseDirectory.value / \"src\" / \"main\" / \"contraband-scala\"\n  )"
  },
  {
    "id" : "37ee015c-972c-4411-8eb5-53ef57f7bb05",
    "prId" : 323,
    "prUrl" : "https://github.com/sbt/zinc/pull/323#pullrequestreview-47671380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e92c12a-c3a2-488e-b315-1f45632f3f38",
        "parentId" : null,
        "authorId" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "body" : "The good thing about this is that we won't have OOM errors with `++` anymore in sbt 1.0.",
        "createdAt" : "2017-07-03T14:00:46Z",
        "updatedAt" : "2017-07-03T19:02:17Z",
        "lastEditedBy" : "ee674eea-a8c8-4bb7-aef2-04e7f846d57d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cca946290b45afe9e91a7b25b5c0ece2b4fc182",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +385,389 @@    s\"${compilerInterface.id}/publishLocal\" ::\n      compilerBridgeScalaVersions.flatMap { (bridgeVersion: String) =>\n      s\"++ $bridgeVersion!\" ::\n        s\"${zincApiInfo.id}/publishLocal\" ::\n        s\"${compilerBridge.id}/publishLocal\" :: Nil"
  },
  {
    "id" : "81c73cd6-adc3-4239-993c-8bf60a63421c",
    "prId" : 14,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8572948f-1860-4ca9-ad08-1e73bdc90cce",
        "parentId" : null,
        "authorId" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "body" : "Shouldn't it say `Incremental compiler of sbt`?\n",
        "createdAt" : "2015-09-14T07:04:30Z",
        "updatedAt" : "2015-09-14T07:25:37Z",
        "lastEditedBy" : "fce79507-a821-4ed3-ae85-b5acf756c201",
        "tags" : [
        ]
      },
      {
        "id" : "415d623e-d16f-40c5-895c-d0d6f75317e7",
        "parentId" : "8572948f-1860-4ca9-ad08-1e73bdc90cce",
        "authorId" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "body" : "No I want this project to stand on its own.\n",
        "createdAt" : "2015-09-14T07:06:11Z",
        "updatedAt" : "2015-09-14T07:25:37Z",
        "lastEditedBy" : "25a8667a-469c-4af9-ae50-c45d69e5c60d",
        "tags" : [
        ]
      }
    ],
    "commit" : "47f927757c79706cf56bd82cbdb38d33782714f5",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +69,73 @@      bintrayPackage := \"incrementalcompiler\",\n      scmInfo := Some(ScmInfo(url(\"https://github.com/sbt/incrementalcompiler\"), \"git@github.com:sbt/incrementalcompiler.git\")),\n      description := \"Incremental compiler of Scala\"\n    )),\n    minimalSettings,"
  }
]