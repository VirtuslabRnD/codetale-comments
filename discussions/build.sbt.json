[
  {
    "id" : "3aa7aff1-3575-463f-bd3f-2a92881566cf",
    "prId" : 1841,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1841#pullrequestreview-445480410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2c9a090-efbf-48e7-986f-01504bc45a94",
        "parentId" : null,
        "authorId" : "ae189121-dea4-445f-87d0-303740ceff41",
        "body" : "Same here with\r\n```scala\r\nnormalizedName := \"junit-plugin\"\r\n```",
        "createdAt" : "2020-07-09T10:22:59Z",
        "updatedAt" : "2020-07-09T14:39:31Z",
        "lastEditedBy" : "ae189121-dea4-445f-87d0-303740ceff41",
        "tags" : [
        ]
      }
    ],
    "commit" : "0117b1948662731e1e52ca4f94767109b4054a8c",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +668,672 @@    .in(file(\"junit-plugin\"))\n    .settings(mavenPublishSettings)\n    .settings(\n      crossScalaVersions := libCrossScalaVersions,\n      crossVersion := CrossVersion.full,"
  },
  {
    "id" : "142d960a-d85a-4a4c-94f1-3283b6b59f1b",
    "prId" : 1799,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1799#pullrequestreview-411464369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87d9a095-08f5-488a-b4db-6374da2d233d",
        "parentId" : null,
        "authorId" : "e74bd39c-42ed-40fa-a3d6-87c47062406a",
        "body" : "~~this change related?~~\r\n>I also moved several .in(file(\"foo\")) lines so that the file is consistent;\r\n\r\n",
        "createdAt" : "2020-05-14T04:56:14Z",
        "updatedAt" : "2020-05-14T18:27:40Z",
        "lastEditedBy" : "e74bd39c-42ed-40fa-a3d6-87c47062406a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f923030219f0c4bd33748e69f462ec1084d124b3",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +696,700 @@lazy val testRunner =\n  project\n    .in(file(\"test-runner\"))\n    .settings(toolSettings)\n    .settings(mavenPublishSettings)"
  },
  {
    "id" : "0f2735c1-0aa2-41b8-b07e-8e3874966b66",
    "prId" : 1799,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1799#pullrequestreview-411568812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fa2d061-59be-4b81-a3bf-7739bcf963ec",
        "parentId" : null,
        "authorId" : "e74bd39c-42ed-40fa-a3d6-87c47062406a",
        "body" : "fetchScalaSource is not needed as it's in the compile ",
        "createdAt" : "2020-05-14T08:18:32Z",
        "updatedAt" : "2020-05-14T18:27:40Z",
        "lastEditedBy" : "e74bd39c-42ed-40fa-a3d6-87c47062406a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f923030219f0c4bd33748e69f462ec1084d124b3",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +582,586 @@      },\n      publishLocal := publishLocal\n        .dependsOn(auxlib / publishLocal)\n        .value\n    )"
  },
  {
    "id" : "cd39d171-eb7a-499d-975e-e5dd1e70a301",
    "prId" : 1799,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1799#pullrequestreview-412215794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00502603-f9cc-481f-b169-ada9e812f85e",
        "parentId" : null,
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "What happens to the `publishLocal` dependency in this case?",
        "createdAt" : "2020-05-14T18:13:07Z",
        "updatedAt" : "2020-05-14T18:27:40Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "6201c284-762a-4942-8ae1-6834dd7639c7",
        "parentId" : "00502603-f9cc-481f-b169-ada9e812f85e",
        "authorId" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "body" : "Please keep me honest, correct, & proper. By my understanding, `nativelib / publishLocal`\r\nwill have gone through its earlier phases at some point. In particular, `nativelib / update`,\r\nso that the spooky hidden nscplugin dependency I/we are chasing gets satisfied. \r\n\r\nAgreed entirely that this is not a good solution. The question before the house, IMHO,\r\nis the benefit of the way faster fetch, especially over a slow wire,  make it an\r\nacceptable fix whilst we figure out something better.  I propose \"Yes\".\r\n",
        "createdAt" : "2020-05-14T19:50:36Z",
        "updatedAt" : "2020-05-14T19:50:36Z",
        "lastEditedBy" : "8268d89a-1c52-467c-9a13-921d930413d7",
        "tags" : [
        ]
      },
      {
        "id" : "4200fe59-1d2c-4b40-8573-bbc13ab844c6",
        "parentId" : "00502603-f9cc-481f-b169-ada9e812f85e",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Using `publishLocal` like that says that another `publishLocal` must occur as a dependency when updating `nativelib` via `nativelib/publishLocal`. To `publishLocal` you must compile etc. and other project `dependsOn` must occur too. The top of the chain is `scalalib/publishLocal` from the rebuild alias.\r\n\r\nOverall, I am just uncomfortable with changes other than the pulling of the library source as a basic replacement. I would have to test drive and look at outputs etc. Remember that if you break the chain then when working on the `javalib` for example, the process is to `javalib/publishLocal` after changes so you could be breaking some dependency.",
        "createdAt" : "2020-05-14T22:00:11Z",
        "updatedAt" : "2020-05-14T22:01:14Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "f923030219f0c4bd33748e69f462ec1084d124b3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +360,364 @@    .settings(\n      libraryDependencies += \"org.scala-lang\" % \"scala-reflect\" % scalaVersion.value,\n      update := update\n        .dependsOn(nscplugin / publishLocal)\n        .value"
  },
  {
    "id" : "1ac76d9e-54fe-4e65-972a-8177142acb84",
    "prId" : 1712,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1712#pullrequestreview-309800733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5660bc3-fbab-4a72-90f4-d8ad26c9d62c",
        "parentId" : null,
        "authorId" : "a79847b3-f184-4eed-a75a-998c93d1ae98",
        "body" : "You might want to set this to an older version of sbt unless you are using sbt 1.3.x features. Otherwise you might publish a version of the plugin that works on sbt 1.3.x but not earlier versions. See https://github.com/sbt/sbt/issues/5154.",
        "createdAt" : "2019-10-30T22:03:58Z",
        "updatedAt" : "2020-01-31T17:43:10Z",
        "lastEditedBy" : "a79847b3-f184-4eed-a75a-998c93d1ae98",
        "tags" : [
        ]
      },
      {
        "id" : "33e21dab-e30a-451a-a644-73db067c58f1",
        "parentId" : "b5660bc3-fbab-4a72-90f4-d8ad26c9d62c",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "Thanks for the review. What version of sbt `1.x` do you recommend?",
        "createdAt" : "2019-10-30T23:14:55Z",
        "updatedAt" : "2020-01-31T17:43:10Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      },
      {
        "id" : "5eac0c56-820b-4b88-9f28-9fa7211e58fd",
        "parentId" : "b5660bc3-fbab-4a72-90f4-d8ad26c9d62c",
        "authorId" : "3a6af4b4-72ec-4000-89cc-42ceee851c44",
        "body" : "`1.2.8` according to https://github.com/sbt/sbt/issues/5154#issuecomment-538666595",
        "createdAt" : "2019-10-31T11:09:40Z",
        "updatedAt" : "2020-01-31T17:43:10Z",
        "lastEditedBy" : "3a6af4b4-72ec-4000-89cc-42ceee851c44",
        "tags" : [
        ]
      }
    ],
    "commit" : "40082bed724604807bc88ddf064ee16e47cb4ec1",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +211,215 @@    Seq(\n      sbtVersion := sbt10Version,\n      crossSbtVersions := List(sbt10Version),\n      scalaVersion := sbt10ScalaVersion,\n      scalacOptions ++= Seq("
  },
  {
    "id" : "455ff869-c930-4506-b10a-b956145c277d",
    "prId" : 1417,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1417#pullrequestreview-204299048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f2fefb7-5e4d-4c06-9e56-635dd0c6f5b1",
        "parentId" : null,
        "authorId" : "7cfb9c81-09fa-4bfa-bbb5-df5df4c4201d",
        "body" : "`METALS_ENABLED=false` :trollface: \r\n\r\nWe only set it to `true` so no worries :p ",
        "createdAt" : "2019-02-15T15:14:05Z",
        "updatedAt" : "2019-02-15T15:14:05Z",
        "lastEditedBy" : "7cfb9c81-09fa-4bfa-bbb5-df5df4c4201d",
        "tags" : [
        ]
      },
      {
        "id" : "2fc95450-95f7-4a74-80cc-b1da8c9d3df5",
        "parentId" : "2f2fefb7-5e4d-4c06-9e56-635dd0c6f5b1",
        "authorId" : "7993fb77-2703-437b-8884-a8af6767e218",
        "body" : "@olafurpg I should have asked for your review since you gave me the code. :-)",
        "createdAt" : "2019-02-15T15:36:44Z",
        "updatedAt" : "2019-02-15T15:36:44Z",
        "lastEditedBy" : "7993fb77-2703-437b-8884-a8af6767e218",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37082efec78aaf90cc7b1b437220e08e6394dca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@\nlazy val startupTransition: State => State = { s: State =>\n  if (System.getProperty(\"METALS_ENABLED\") != null) \"^^1.2.6\" :: s\n  else s\n}"
  },
  {
    "id" : "d7620a01-a37b-44e0-afb6-11a6fd9d11d3",
    "prId" : 1210,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1210#pullrequestreview-107669229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bac499bd-cf52-4d05-af7c-18af1c3a22b5",
        "parentId" : null,
        "authorId" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "body" : "Also, this project should be added to `test-all` and `scala-native/scripts/release`",
        "createdAt" : "2018-03-28T12:39:39Z",
        "updatedAt" : "2018-03-28T13:09:22Z",
        "lastEditedBy" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "tags" : [
        ]
      },
      {
        "id" : "05be6081-ef9c-4023-bd7d-3062257a7b7a",
        "parentId" : "bac499bd-cf52-4d05-af7c-18af1c3a22b5",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "Good catch on including in `test-all`. We don't have to release it yet, as it's not part of the public API at the moment.",
        "createdAt" : "2018-03-28T13:06:23Z",
        "updatedAt" : "2018-03-28T13:09:22Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "f13f9bed-6a1a-42e5-b767-3bdbf53e99a4",
        "parentId" : "bac499bd-cf52-4d05-af7c-18af1c3a22b5",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "a6e6257",
        "createdAt" : "2018-03-28T13:09:53Z",
        "updatedAt" : "2018-03-28T13:09:53Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6e6257153c37d42ea67782b205e3ee1ad41cbaf",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +233,237 @@    .dependsOn(util)\n\nlazy val nirparser =\n  project\n    .in(file(\"nirparser\"))"
  },
  {
    "id" : "a8ca3f08-a2ab-4ff0-bfd1-613b097b4198",
    "prId" : 1194,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1194#pullrequestreview-103113578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf2736e9-020c-452b-9fd1-7b315ef16701",
        "parentId" : null,
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "This seems to belong to `publishSettings`. Lets put it there instead, then you don't have to add extra `.settings(nameSettings)` everywhere. ",
        "createdAt" : "2018-03-12T14:24:01Z",
        "updatedAt" : "2018-03-23T21:16:57Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "2cd21262-a586-41f3-bfe4-b76bdb9811dc",
        "parentId" : "bf2736e9-020c-452b-9fd1-7b315ef16701",
        "authorId" : "afab623c-b67e-4f1d-a711-18b106422853",
        "body" : "applied to both `publishSettings` and `noPublishSettings` since there is no shared settings root in this `build.sbt`, which could cover all project modules\r\n",
        "createdAt" : "2018-03-12T15:37:38Z",
        "updatedAt" : "2018-03-23T21:16:57Z",
        "lastEditedBy" : "afab623c-b67e-4f1d-a711-18b106422853",
        "tags" : [
        ]
      },
      {
        "id" : "8cbbe549-fa05-4ea2-b910-758f1710b811",
        "parentId" : "bf2736e9-020c-452b-9fd1-7b315ef16701",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "👍",
        "createdAt" : "2018-03-12T16:16:20Z",
        "updatedAt" : "2018-03-23T21:16:57Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "77566307877dd02c5cb30bdbcc32e7c62493511a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +23,27 @@\n// Provide consistent project name pattern.\nlazy val nameSettings = Seq(\n  normalizedName := projectName(thisProject.value), // Maven <artifactId>\n  name := s\"Scala Native ${projectName(thisProject.value)}\" // Maven <name>"
  },
  {
    "id" : "f69ffcbf-cfff-45ed-8463-2d93d6725245",
    "prId" : 1039,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1039#pullrequestreview-75098916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "parentId" : null,
        "authorId" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "body" : "Only 2.1.0 is available for both 2.12.3 and 2.10.6\r\n\r\nhttps://repo1.maven.org/maven2/org/scalamacros/paradise_2.12.3/\r\nhttps://repo1.maven.org/maven2/org/scalamacros/paradise_2.10.6/",
        "createdAt" : "2017-09-29T15:09:26Z",
        "updatedAt" : "2017-11-10T13:53:52Z",
        "lastEditedBy" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "tags" : [
        ]
      },
      {
        "id" : "59ee73fe-0401-4c7e-a3c4-6424b599d6c7",
        "parentId" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "@xeno-by Is there a reason why macro paradise `2.1.1` is not published for `2.10.6` ?",
        "createdAt" : "2017-10-03T12:26:13Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      },
      {
        "id" : "21aead4e-fd30-4063-b4d9-977c642a049b",
        "parentId" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "authorId" : "71410b2f-a1b1-4714-85fd-c82a7104d475",
        "body" : "Oversight. I'll remedy this shortly.",
        "createdAt" : "2017-10-03T17:29:17Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "71410b2f-a1b1-4714-85fd-c82a7104d475",
        "tags" : [
        ]
      },
      {
        "id" : "25851d63-a7b3-44d3-be67-b77c354bd066",
        "parentId" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "authorId" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "body" : "@densh any reason not to bump this? all tests are passing.",
        "createdAt" : "2017-10-04T06:38:23Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "tags" : [
        ]
      },
      {
        "id" : "71b0fc05-7a5f-4243-9316-b0d5f55fe942",
        "parentId" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "authorId" : "71410b2f-a1b1-4714-85fd-c82a7104d475",
        "body" : "Wow this is the definition of things falling through the cracks. I've published `2.1.1` for `2.10.7`. Would it be fine for you guys to migrate?",
        "createdAt" : "2017-11-07T17:51:14Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "71410b2f-a1b1-4714-85fd-c82a7104d475",
        "tags" : [
        ]
      },
      {
        "id" : "bfcddc7f-d1e0-4745-aaa3-ffeadf4bfd60",
        "parentId" : "b480b6ff-6b16-4603-95e8-e30582cff5e7",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "`2.10.7` should work.",
        "createdAt" : "2017-11-08T13:40:49Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3b02c0bdb8bea38694183e5b4efaf8bb8ade123",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +230,234 @@        \"org.scalacheck\" %% \"scalacheck\" % \"1.13.4\" % \"test\",\n        compilerPlugin(\n          \"org.scalamacros\" % \"paradise\" % \"2.1.0\" cross CrossVersion.full),\n        \"org.scalatest\" %% \"scalatest\" % \"3.0.0\" % \"test\"\n      ),"
  },
  {
    "id" : "144ce593-d4e0-47fb-9d7f-29a6e32e50ba",
    "prId" : 1039,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1039#pullrequestreview-73100679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ecb80b6-cd2c-4aa7-816a-efce9c4c38c0",
        "parentId" : null,
        "authorId" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "body" : "Rather than hardcoding that, it would be better to have a hidden `SettingKey` that holds the sbt version used by sbt. This can be determined using:\r\n\r\n```scala\r\nval sbtScalaVersion = appConfiguration.value.provider.scalaProvider.version\r\n```\r\n\r\nThis is a stable API that works for sbt 0.13 and 1.0, it most likely won't change anytime soon.",
        "createdAt" : "2017-10-24T11:26:41Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "tags" : [
        ]
      },
      {
        "id" : "6d1961d2-681f-4d18-a696-b64d646a646e",
        "parentId" : "0ecb80b6-cd2c-4aa7-816a-efce9c4c38c0",
        "authorId" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "body" : "I just tried this and it does not work properly.\r\n\r\nIf I start sbt and do `^^ 1.0.2` then `sbtScalaNative/compile` it wants to fetch sbt-crossproject _2.10.\r\n\r\n",
        "createdAt" : "2017-10-31T09:27:45Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "19142ef5-3d34-49b4-a25f-6b361a41847d",
        "tags" : [
        ]
      },
      {
        "id" : "abf1df17-d69e-43c2-b1c3-06062d45a36f",
        "parentId" : "0ecb80b6-cd2c-4aa7-816a-efce9c4c38c0",
        "authorId" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "body" : "Argh sure, I was assuming you'd be starting with either sbt 1 or sbt 0.13. I can't think of anything better than leaving this as it is then.",
        "createdAt" : "2017-10-31T09:42:40Z",
        "updatedAt" : "2017-11-10T13:53:53Z",
        "lastEditedBy" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3b02c0bdb8bea38694183e5b4efaf8bb8ade123",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +167,171 @@        (sbtBinaryVersion in pluginCrossBuild).value match {\n          case \"0.13\" => \"2.10.6\"\n          case _      => \"2.12.3\"\n        }\n      },"
  },
  {
    "id" : "d0f484a2-cece-4424-9cf0-f9342b870c15",
    "prId" : 1020,
    "prUrl" : "https://github.com/scala-native/scala-native/pull/1020#pullrequestreview-63900934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af9bee6c-f208-46e0-9a13-ca71e18d2fb5",
        "parentId" : null,
        "authorId" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "body" : "I think that `auxlib` doesn't need to depend on `nativelib`, but it doesn't hurt to keep the dependency.",
        "createdAt" : "2017-09-20T08:16:25Z",
        "updatedAt" : "2017-09-20T08:22:20Z",
        "lastEditedBy" : "8ea77260-a6ff-49da-9900-245920bdc998",
        "tags" : [
        ]
      },
      {
        "id" : "87dbff04-e084-4095-8138-45b8a545b1bb",
        "parentId" : "af9bee6c-f208-46e0-9a13-ca71e18d2fb5",
        "authorId" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "body" : "It does have to depend on it, otherwise there is no `native.Ptr` when you compile `auxlib` with a scala native plugin, and it crashes due to not being able to resolve the symbol for it. ",
        "createdAt" : "2017-09-20T08:29:05Z",
        "updatedAt" : "2017-09-20T08:29:12Z",
        "lastEditedBy" : "0f96d83b-618e-4d06-9aeb-e1d46fa92077",
        "tags" : [
        ]
      }
    ],
    "commit" : "afe1b444996fddd346b327f7f1ad4a93934fe5d5",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +347,351 @@    .settings(libSettings)\n    .settings(mavenPublishSettings)\n    .dependsOn(nativelib)\n\nlazy val scalalib ="
  }
]