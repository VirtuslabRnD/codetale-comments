[
  {
    "id" : "50a0e8bf-de04-417e-b0d2-e97da1088806",
    "prId" : 1918,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1918#pullrequestreview-325126082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdee0478-3918-402e-9358-82b835a46b89",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "we can remove unidoc if it's causing problems, the plugin is not really used",
        "createdAt" : "2019-12-02T10:00:24Z",
        "updatedAt" : "2019-12-07T18:25:40Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4cf7397d62b716220cfccae5f00dd304110f23e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +32,36 @@nonPublishableSettings\ncrossScalaVersions := Nil\nenablePlugins(ScalaUnidocPlugin)\naddCommandAlias(\"benchAll\", benchAll.command)\naddCommandAlias(\"benchLSP\", benchLSP.command)"
  },
  {
    "id" : "617b3cdd-4a1a-45ff-b876-ce22f2e60328",
    "prId" : 1901,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1901#pullrequestreview-288324974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e7f73a0-d342-4105-8fe0-445ef5d28d0e",
        "parentId" : null,
        "authorId" : "ee435ce0-4e9b-4dad-b7cc-9ac4ab481429",
        "body" : "This is not strictly related, but since 2.1.1 is now published for 2.12.10, we don't need to fall back to 2.12.9 anymore",
        "createdAt" : "2019-09-14T15:22:45Z",
        "updatedAt" : "2019-09-14T15:22:46Z",
        "lastEditedBy" : "ee435ce0-4e9b-4dad-b7cc-9ac4ab481429",
        "tags" : [
        ]
      }
    ],
    "commit" : "794c06d04865bb06635db4d60a237069ea98090c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +515,519 @@  libraryDependencies ++= {\n    if (isScala213.value) Nil\n    else List(compilerPlugin(\"org.scalamacros\" % s\"paradise\" % \"2.1.1\" cross CrossVersion.full))\n  },\n  scalacOptions ++= {"
  },
  {
    "id" : "198f5413-8f00-4059-b27a-764372558f36",
    "prId" : 1743,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1743#pullrequestreview-144518737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4161e952-231a-4cbb-bbae-3363f6a9d0bc",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "üòç ",
        "createdAt" : "2018-08-08T17:11:01Z",
        "updatedAt" : "2018-08-08T19:30:42Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b9e64ef770e5af1853a6334977620aa0ac707c4",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +880,884 @@  // disable fatal warnings in doc to avoid \"dropping dependency on node with no phase object: mixin\",\n  // see https://github.com/scala-js/scala-js/issues/635\n  scalacOptions.in(Compile, doc) -= \"-Xfatal-warnings\",\n  nativeGC := \"immix\",\n  nativeMode := \"release\","
  },
  {
    "id" : "9b5fd24f-1938-41fd-b980-2ea8dcd63547",
    "prId" : 1690,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1690#pullrequestreview-136848542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9827bc7-f3ab-4245-b22e-84bb3581f443",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "This looks pretty tedious, but unfortunately I don't know of a better way.",
        "createdAt" : "2018-07-12T18:18:37Z",
        "updatedAt" : "2018-07-13T15:06:47Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "f6c0f044-55f5-4679-9617-e571f285aef5",
        "parentId" : "d9827bc7-f3ab-4245-b22e-84bb3581f443",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It's worse if you do it for jvm+js+native https://github.com/typelevel/paiges/blob/0d041ceacb3af1a396a315db256fbcb6cad1cffb/build.sbt#L119-L142",
        "createdAt" : "2018-07-12T22:12:19Z",
        "updatedAt" : "2018-07-13T15:06:47Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "03def7a684ca67a7dd7df13ae7d342831d4096d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +229,233 @@  // FIXME: https://github.com/scalameta/scalameta/issues/1688\n  .disablePlugins(BackgroundRunPlugin)\n  .aggregate(semanticdbJVM, cliJVM, ioJVM)\n  .dependsOn(semanticdbJVM, cliJVM, ioJVM)\n"
  },
  {
    "id" : "b762341c-1af9-4137-aa1f-73946d296c03",
    "prId" : 1682,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1682#pullrequestreview-135222386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e797f68-ead1-40ea-a0df-a748103b4afc",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "üëç",
        "createdAt" : "2018-07-08T05:39:48Z",
        "updatedAt" : "2018-07-11T15:20:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcaede3273ea29c957237b949345066727ce2945",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +188,192 @@  .settings(\n    publishableSettings,\n    description := \"Scala 2.x and Java classpath to SemanticDB converter\",\n    libraryDependencies ++= List(\n      \"org.scala-lang\" % \"scalap\" % scalaVersion.value"
  },
  {
    "id" : "821df4e1-4538-4e81-ac93-b7462ad5c9fd",
    "prId" : 1606,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1606#pullrequestreview-129370554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "803b6115-0cfe-4bfa-b670-64eaa250c12a",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Wasn't this obviated by one of the recent fixes to Intellij?",
        "createdAt" : "2018-06-16T18:31:10Z",
        "updatedAt" : "2018-06-16T19:34:51Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "869132e2-1984-42c5-94b1-fe29fb1a70c3",
        "parentId" : "803b6115-0cfe-4bfa-b670-64eaa250c12a",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It was, but this settings speeds up IntelliJ import regardless since it avoids exporting/indexing native projects. Should probably do the same for JS sources.",
        "createdAt" : "2018-06-16T19:02:46Z",
        "updatedAt" : "2018-06-16T19:35:18Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4c3e380cc2f67e0f333fe575330554340a09a56",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +792,796 @@\nlazy val nativeSettings = Seq(\n  SettingKey[Boolean](\"ide-skip-project\") := true,\n  scalaVersion := LatestScala211,\n  crossScalaVersions := List(LatestScala211),"
  },
  {
    "id" : "9fe93693-b97a-4f18-919f-0d1c45630ecb",
    "prId" : 1580,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1580#pullrequestreview-126294213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a1b56f-a61f-4285-bac7-70ea8bd83e0a",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I love this change ‚ù§Ô∏è Been meaning to come up with a solution for this problem for a long time. Thank you @laughedelic for the SO answer!",
        "createdAt" : "2018-06-06T13:32:55Z",
        "updatedAt" : "2018-06-06T16:26:32Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c581e165334c532a8783b351597731da4ed18e8",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +474,478 @@    libraryDependencies += \"com.lihaoyi\" %%% \"fansi\" % \"0.2.5\" % \"test\",\n    libraryDependencies += \"org.scalatest\" %%% \"scalatest\" % \"3.2.0-SNAP10\" % \"test\",\n    testOptions.in(Test) += Tests.Argument(\"-l\", \"org.scalatest.tags.Slow\"),\n    inConfig(Slow)(Defaults.testTasks),\n    testOptions.in(Slow) -= Tests.Argument(\"-l\", \"org.scalatest.tags.Slow\"),"
  },
  {
    "id" : "dac07554-fe30-4532-ad6c-7c4daff9fafc",
    "prId" : 1558,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1558#pullrequestreview-123611610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eec540c-6c5a-47f9-88f1-02dc3efe92a1",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Looks like the same change will have to be made to the Scalafix build.",
        "createdAt" : "2018-05-27T21:48:12Z",
        "updatedAt" : "2018-05-27T21:48:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "d510500d-432e-48c0-9bd8-f5a92696d826",
        "parentId" : "4eec540c-6c5a-47f9-88f1-02dc3efe92a1",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This is only necessary when publishing to maven from local machine. Scalafix is only released via ci. ",
        "createdAt" : "2018-05-28T02:52:37Z",
        "updatedAt" : "2018-05-28T02:52:37Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bf90570e6a8ecc55b0f22cde4fededc795ef404",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +642,646 @@    if (isCustomRepository) \"adhoc\" at adhocRepoUri\n    // NOTE: isSnapshot.value does not work with sbt-dynver\n    else if (version.value.endsWith(\"SNAPSHOT\")) Opts.resolver.sonatypeSnapshots\n    else Opts.resolver.sonatypeStaging\n  },"
  },
  {
    "id" : "101fb213-52a8-4643-b167-9508b7977da5",
    "prId" : 1506,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1506#pullrequestreview-114283474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c52e567-3ef9-47eb-a5be-e84362345fc5",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Let's add a ticket that reminds us to remove this line in 4.0.",
        "createdAt" : "2018-04-22T22:10:01Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "525e6950-4e87-4f97-8731-b3d53a42b137",
        "parentId" : "6c52e567-3ef9-47eb-a5be-e84362345fc5",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Done #1508 ",
        "createdAt" : "2018-04-23T09:41:29Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbfa5fdaef97e3097cd8450a470bbdc750df482",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +214,218 @@    publishableSettings,\n    description := \"Langmeta umbrella module that includes all public APIs\",\n    scalacOptions -= \"-Xfatal-warnings\", // suppress deprecation warnings\n    libraryDependencies += \"com.lihaoyi\" %%% \"pprint\" % \"0.5.3\"\n  )"
  },
  {
    "id" : "e0b37484-eb92-47b5-a658-01399df7d05e",
    "prId" : 1506,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1506#pullrequestreview-114283474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "380e1658-8a23-4f5f-ac10-770185b1abbb",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Do we still need `symbols:all`?",
        "createdAt" : "2018-04-22T22:10:29Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "c9a1333b-cccf-4309-a1f1-b2dbf4a185b2",
        "parentId" : "380e1658-8a23-4f5f-ac10-770185b1abbb",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "We use it for the expect tests.",
        "createdAt" : "2018-04-23T09:41:52Z",
        "updatedAt" : "2018-04-24T07:20:44Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbfa5fdaef97e3097cd8450a470bbdc750df482",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +410,414 @@        s\"-P:semanticdb:failures:error\", // fail fast during development.\n        s\"-P:semanticdb:exclude:Exclude.scala\",\n        s\"-P:semanticdb:symbols:all\",\n        s\"-P:semanticdb:types:all\",\n        s\"-Xplugin-require:semanticdb\""
  },
  {
    "id" : "80745767-e4a8-4200-ac91-00ac3945b1eb",
    "prId" : 1478,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1478#pullrequestreview-110301126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dd318c5-b89b-4a13-b23d-1795d0decb58",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Looks like build.sbt has been inadvertently reformatted.",
        "createdAt" : "2018-04-08T21:14:39Z",
        "updatedAt" : "2018-04-08T21:21:27Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "9381835f-c95f-4140-88ff-9741f5066778",
        "parentId" : "8dd318c5-b89b-4a13-b23d-1795d0decb58",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Yes, that may have been caused by vscode reformatting on save üòÖ I've added build.sbt to .scalafmt.conf",
        "createdAt" : "2018-04-08T21:43:17Z",
        "updatedAt" : "2018-04-08T21:43:18Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "1473e20f66891c65981848f8e3ac5e3ee5ab9976",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +855,859 @@    PgpKeys.pgpPassphrase := sys.env.get(\"PGP_PASSPHRASE\").map(_.toCharArray())\n  )\n)"
  },
  {
    "id" : "6db591ea-56d9-47bc-b6aa-7bf74933fff0",
    "prId" : 1316,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1316#pullrequestreview-96956780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe8de858-b4f4-45b7-8d8a-5787581d380c",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "üëç ",
        "createdAt" : "2018-02-15T18:31:50Z",
        "updatedAt" : "2018-02-15T19:38:58Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "e38f5f1d7e7e09abb297f26cdb09e0a5e7d354a1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +69,73 @@  \"testsJVM/test:runMain scala.meta.tests.semanticdb.MetacScalaLibrary\" :: s\n}\ncommands += Command.command(\"save-expect\") { s =>\n  \"semanticdbScalacPlugin/compile\" ::\n  \"semanticdbIntegration/clean\" ::"
  },
  {
    "id" : "e980f6cd-7e02-4b32-80e1-57a4f2db429b",
    "prId" : 1304,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1304#pullrequestreview-96476109",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f6ff790-1310-464c-b064-ceed6aa020ae",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "`% Test`",
        "createdAt" : "2018-02-14T09:51:21Z",
        "updatedAt" : "2018-02-14T13:45:53Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      },
      {
        "id" : "51bcd442-42ab-45f7-a288-236cc5739f9e",
        "parentId" : "4f6ff790-1310-464c-b064-ceed6aa020ae",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This project contains only test sources",
        "createdAt" : "2018-02-14T12:16:17Z",
        "updatedAt" : "2018-02-14T13:45:53Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0733f371e336cbe4d6533dd70b9ab034bd81f30",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +439,443 @@  .jvmSettings(\n    libraryDependencies ++= List(\n      \"io.get-coursier\" %% \"coursier\" % coursier.util.Properties.version,\n      \"io.get-coursier\" %% \"coursier-cache\" % coursier.util.Properties.version\n    )"
  },
  {
    "id" : "b02c9e21-fb59-44b7-9275-59fe5cf8001e",
    "prId" : 1280,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1280#pullrequestreview-95397263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59e66668-e1eb-4a73-991c-c51ba8528bfb",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Can we also delete `target/scala-library` afterwards? Or maybe create this in a temporary directory?",
        "createdAt" : "2018-02-08T18:51:26Z",
        "updatedAt" : "2018-02-10T11:46:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "777c5ee0-3941-4f20-be8f-b5dfc92c9694",
        "parentId" : "59e66668-e1eb-4a73-991c-c51ba8528bfb",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Dowloading+unzipping takes a while to run and if it was deleted on every run then that would slow when running this multiple times locally. We only unzip `src/library` so it's not that bloated. I prefer to keep the directory.",
        "createdAt" : "2018-02-09T11:58:13Z",
        "updatedAt" : "2018-02-10T11:46:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "d306c0fb420f4dd7692ccaac47db886ee1bf15f8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +67,71 @@    )\n  }\n  \"testsJVM/test:runMain scala.meta.tests.semanticdb.MetacScalaLibrary\" :: s\n}\n// NOTE: These tasks are aliased here in order to support running \"tests/test\""
  },
  {
    "id" : "6e5dae34-1586-4fe9-b312-f7792df55607",
    "prId" : 1280,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1280#pullrequestreview-95190448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0083180e-77bb-45f0-8a74-172373114371",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "üëç ",
        "createdAt" : "2018-02-08T18:51:32Z",
        "updatedAt" : "2018-02-10T11:46:19Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d306c0fb420f4dd7692ccaac47db886ee1bf15f8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +58,62 @@  s\n}\ncommands += Command.command(\"ci-metac\") { s =>\n  val out = file(\"target/scala-library\")\n  if (!out.exists()) {"
  },
  {
    "id" : "7019b079-e717-4ca5-ac05-a196071d5c22",
    "prId" : 1268,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1268#pullrequestreview-94900223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc7d58ed-31bc-4d9c-a4af-853269a822a1",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "@sjrd Is there a better way to do this?",
        "createdAt" : "2018-02-07T22:36:07Z",
        "updatedAt" : "2018-02-07T22:36:08Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "8684d770-6fa2-4051-9534-e06959f83b12",
        "parentId" : "dc7d58ed-31bc-4d9c-a4af-853269a822a1",
        "authorId" : "f1588ba7-5588-4fd3-ab89-f107185283e0",
        "body" : "> Here's my second best guess, but it doesn't work due to some reason\r\n\r\nThat's because `CrossVersion.binary` is a `def` which returns a new instance of `CrossVersion` every time, and in sbt 0.13.x, `==` is useless on `CrossVersion`s (it's equivalent to `eq`).\r\n\r\nThere is no elegant way to test the platform of a project in the most general case. The closest you can get is testing for the presence (or absence) of `scalajs-library` or `nativelib` in the `libraryDependencies` of the project.\r\n\r\nAlternatively, in your own build, you could define your own very simple `lazy val platform = settingKey[String]` and configure it to your liking.\r\n\r\nYou could also test whether `thisProject.value.id` (or whatever it's called) ends with `\"JVM\"`, `\"JS\"` or `Native`.\r\n\r\nAnd I'm sure you can invent other creative ways to do it.",
        "createdAt" : "2018-02-07T22:46:29Z",
        "updatedAt" : "2018-02-07T22:46:29Z",
        "lastEditedBy" : "f1588ba7-5588-4fd3-ab89-f107185283e0",
        "tags" : [
        ]
      },
      {
        "id" : "dd380fa6-af7f-4cf8-8f56-7525c022bf72",
        "parentId" : "dc7d58ed-31bc-4d9c-a4af-853269a822a1",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Thanks for the swift response!",
        "createdAt" : "2018-02-07T22:47:31Z",
        "updatedAt" : "2018-02-07T22:47:31Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a640f8e09c1d42cf92011897c57c49b7a69b0e28",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +577,581 @@        val isNative = platformDepsCrossVersion.value == ScalaNativeCrossVersion.binary\n        !isJS && !isNative\n      }\n      if (isJVM) {\n        previousVersion.map { previousVersion =>"
  },
  {
    "id" : "3b6a402b-5f56-4dda-9b72-e255d6112cfc",
    "prId" : 1263,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1263#pullrequestreview-94401035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84350f2e-2f48-4829-8599-7d9471d813b6",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "So, `semanticdb3Native/nativeLink` works great now thanks to S√©bastien's fix to sbt-crossproject and Denys's fix to Scala Native.\r\n\r\nHowever it looks like we need help again. It seems that `semanticdb3Native/publish` misbehaves by publishing artifacts with wrong the target prefix. Here's a reproduction:\r\n\r\n```\r\n$ git clone https://github.com/xeno-by/scalameta.git\r\n$ cd scalameta\r\n$ git checkout repro/crossproject\r\n$ sbt 'semanticdb3Native/publishLocal'\r\n...\r\n[info] \tpublished semanticdb3_2.11 to /Users/eburmako/.ivy2/local/org.scalameta/semanticdb3_2.11/3.0.0/poms/semanticdb3_2.11.pom\r\n[info] \tpublished semanticdb3_2.11 to /Users/eburmako/.ivy2/local/org.scalameta/semanticdb3_2.11/3.0.0/jars/semanticdb3_2.11.jar\r\n[info] \tpublished semanticdb3_2.11 to /Users/eburmako/.ivy2/local/org.scalameta/semanticdb3_2.11/3.0.0/srcs/semanticdb3_2.11-sources.jar\r\n[info] \tpublished semanticdb3_2.11 to /Users/eburmako/.ivy2/local/org.scalameta/semanticdb3_2.11/3.0.0/docs/semanticdb3_2.11-javadoc.jar\r\n[info] \tpublished ivy to /Users/eburmako/.ivy2/local/org.scalameta/semanticdb3_2.11/3.0.0/ivys/ivy.xml\r\n[success] Total time: 11 s, completed Feb 5, 2018 9:46:27 PM\r\n```\r\n\r\n@densh @sjrd Do you guys have an idea what could go wrong here?",
        "createdAt" : "2018-02-06T05:48:09Z",
        "updatedAt" : "2018-02-06T05:53:59Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "3c8edc89-4b4f-42b6-834b-c5fe0372fd73",
        "parentId" : "84350f2e-2f48-4829-8599-7d9471d813b6",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Mystery solved: https://github.com/scalameta/scalameta/pull/1263/commits/21c5568cb0a32bb8c42ef5dc798e273e93dd7a14. @olafurpg Do you remember why we added this to the build?",
        "createdAt" : "2018-02-06T05:55:44Z",
        "updatedAt" : "2018-02-06T05:55:44Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "8690dfa7-b58b-4585-942d-8f4d3104bafb",
        "parentId" : "84350f2e-2f48-4829-8599-7d9471d813b6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I don't remember why we have that setting, might be worth to try and remove it.",
        "createdAt" : "2018-02-06T09:23:05Z",
        "updatedAt" : "2018-02-06T09:23:05Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "abaa6bac-86be-4209-91f4-6ee3a88f3060",
        "parentId" : "84350f2e-2f48-4829-8599-7d9471d813b6",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Sure I'll try",
        "createdAt" : "2018-02-06T16:06:20Z",
        "updatedAt" : "2018-02-06T16:06:20Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "21c5568cb0a32bb8c42ef5dc798e273e93dd7a14",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +96,100 @@lazy val semanticdb3JVM = semanticdb3.jvm\nlazy val semanticdb3JS = semanticdb3.js\nlazy val semanticdb3Native = semanticdb3.native\n\nlazy val semanticdbScalacCore = project"
  },
  {
    "id" : "ed564d4a-3236-4528-8f8a-d5f31d36a711",
    "prId" : 1263,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1263#pullrequestreview-94400404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d09bdd1b-84bd-4ccf-a8c6-7d782018d0b0",
        "parentId" : null,
        "authorId" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "body" : "you should send a PR to scalapb.",
        "createdAt" : "2018-02-06T09:09:38Z",
        "updatedAt" : "2018-02-06T09:09:38Z",
        "lastEditedBy" : "afdf3934-3a83-4268-8ebd-d85e5cabfcd6",
        "tags" : [
        ]
      },
      {
        "id" : "4d2349e4-9423-47ac-82cb-0832d73de141",
        "parentId" : "d09bdd1b-84bd-4ccf-a8c6-7d782018d0b0",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "It's best to way until the next stable native release where there won't be a need to rebuild dependencies unless the IR changes. ",
        "createdAt" : "2018-02-06T09:22:50Z",
        "updatedAt" : "2018-02-06T09:22:50Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "d83386ad-06a6-4348-bcf3-0bf38d500fc2",
        "parentId" : "d09bdd1b-84bd-4ccf-a8c6-7d782018d0b0",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Sounds good",
        "createdAt" : "2018-02-06T16:04:48Z",
        "updatedAt" : "2018-02-06T16:04:48Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "21c5568cb0a32bb8c42ef5dc798e273e93dd7a14",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +655,659 @@  nativeLinkStubs := false,\n  // These builds are published from my private fork of Scala Native\n  // https://github.com/xeno-by/scalapb/commits/topic/scalameta\n  libraryDependencies -= \"com.thesamet.scalapb\" %%% \"scalapb-runtime\" % scalapbVersion,\n  libraryDependencies += \"com.github.xenoby\" %%% \"scalapb-runtime\" % scalapbVersion"
  },
  {
    "id" : "84800910-9672-46d2-9d77-bb87ff3351a6",
    "prId" : 1253,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1253#pullrequestreview-93856484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b494d0f-9bb2-4771-845a-6dec7e5200f6",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "@thesamet Are there best practices for achieving source/binary compatibility of ScalaPB-generated code during compatible Protobuf schema evolution?\r\n\r\nFor example, this pull request removes the `range` field and adds the `location` field to the `SymbolInformation` message. As far as I understand, this change is both backward and forward compatible in the sense that old Protobuf payloads are valid under the new schema and new Protobuf payloads are valid under the old schema.\r\n\r\nHowever, the changes to the `SymbolInformation` Scala class generated by ScalaPB are not compatible (so I had to disable [MiMa](https://github.com/lightbend/migration-manager) for this project), which is regrettable. Can you provide recommendations for dealing with this?",
        "createdAt" : "2018-02-03T02:12:02Z",
        "updatedAt" : "2018-02-03T20:32:25Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "7670914d-41c3-437f-87ea-2a0588193e0b",
        "parentId" : "2b494d0f-9bb2-4771-845a-6dec7e5200f6",
        "authorId" : "9a5ac11a-bb1b-4638-89ac-6489a8891908",
        "body" : "AFAIK there is no way around the binary compatibility issue as long as ScalaPB generates case classes. It has been suggested that we switch to normal classes, but there wasn't much of a demand for that.",
        "createdAt" : "2018-02-03T02:34:48Z",
        "updatedAt" : "2018-02-03T20:32:25Z",
        "lastEditedBy" : "9a5ac11a-bb1b-4638-89ac-6489a8891908",
        "tags" : [
        ]
      },
      {
        "id" : "7ea3e2ff-7b02-4dc2-8900-f5143f5476cc",
        "parentId" : "2b494d0f-9bb2-4771-845a-6dec7e5200f6",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Thank you! I think we'll just bite the bullet for now, since this is an internal API anyway.",
        "createdAt" : "2018-02-04T20:17:12Z",
        "updatedAt" : "2018-02-04T20:17:12Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c787ab1acc1b048e2f532befcc18c966e6423558",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +79,83 @@  .settings(\n    publishableSettings,\n    ignoreMimaSettings,\n    protobufSettings,\n    PB.protoSources.in(Compile) := Seq(file(\"semanticdb/semanticdb3\")),"
  },
  {
    "id" : "34aa4a80-9fd6-4aca-abd2-50ab8476e4e3",
    "prId" : 1225,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1225#pullrequestreview-90183834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb52834e-61a9-400c-b9bf-f6e40621e2ef",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Are these the usual SNAPSHOT releases, which make sbt do updates like crazy, or there's something special about them, since we seem to be publishing them to Sonatype releases?",
        "createdAt" : "2018-01-19T17:14:37Z",
        "updatedAt" : "2018-01-19T17:15:07Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "915dbc4a-2206-4efa-8133-82628bf7c3f2",
        "parentId" : "eb52834e-61a9-400c-b9bf-f6e40621e2ef",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "it's possible to configure sbt to treat -SNAPSHOT versions like normal versions, we never overwrite an old release because every merge has a unique commit that is included in the version number.",
        "createdAt" : "2018-01-19T17:20:23Z",
        "updatedAt" : "2018-01-19T17:20:23Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "65addba315d9f5f826b80d44502952eca429234a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +25,29 @@    else \"\"\n  customVersion.getOrElse(old.replace('+', '-') + suffix)\n}\nname := {\n  println(s\"[info] Welcome to scalameta ${version.value}\")"
  },
  {
    "id" : "d4fb4402-88ef-483e-a9be-794637f795c0",
    "prId" : 1187,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1187#pullrequestreview-82541208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3deb5c5e-80e5-4227-810b-361bdc948403",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "`plz $ciScalaVersion test` should do this for you ;) but I don't mind as long as it works!",
        "createdAt" : "2017-12-11T16:01:44Z",
        "updatedAt" : "2017-12-11T16:02:29Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "a12e7f4e5075d9a8a754a0404d6bf8d8c06eccdf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@commands += Command.command(\"ci-fast\") { s =>\n  if (ciScalaVersion.startsWith(\"2.10\")) {\n    s\"wow $ciScalaVersion\" :: \"langmetaTestsJVM/test\" :: s\n  } else {\n    s\"wow $ciScalaVersion\" ::"
  },
  {
    "id" : "25ed722a-65e0-45f5-b648-b5afd16836c7",
    "prId" : 1159,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1159#pullrequestreview-75569860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6945089d-0250-42e0-9b54-1c8645da7976",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "How about `semanticdbScalacLibrary`?",
        "createdAt" : "2017-11-09T19:07:45Z",
        "updatedAt" : "2017-11-09T19:14:18Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "954878bd-7435-4300-9c9d-ec4753ddeae3",
        "parentId" : "6945089d-0250-42e0-9b54-1c8645da7976",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "semanticdbScalac is better IMO since it matches the directory name and I run `semanticdbScalac/test` from the console all the time (which is already too long IMO), writing `Library` on top is just annoying. ",
        "createdAt" : "2017-11-09T19:12:19Z",
        "updatedAt" : "2017-11-09T19:15:00Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "10c2722b-603e-4bd2-88c7-e4ea930508ce",
        "parentId" : "6945089d-0250-42e0-9b54-1c8645da7976",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Fair enough. lgtm.",
        "createdAt" : "2017-11-09T20:06:51Z",
        "updatedAt" : "2017-11-09T20:06:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9ae1c1f02e207e9c2096aada241761d10b1cb4a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +287,291 @@\n\nlazy val semanticdbScalac = project\n  .in(file(\"scalameta/semanticdb-scalac\"))\n  .settings("
  },
  {
    "id" : "b1e803f5-ecac-4a32-9f98-649e432c7cb6",
    "prId" : 1065,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1065#pullrequestreview-56387145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f627f588-9f21-48f0-a139-0fb2448e1ec7",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I'm very surprised it's so easy!!",
        "createdAt" : "2017-08-15T16:07:42Z",
        "updatedAt" : "2017-08-17T07:40:55Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "289075db486562df06dd1570b145c80c5afc96f2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +87,91 @@lazy val langmetaSettings = List(\n  crossScalaVersions := List(LatestScala210, LatestScala211, LatestScala212)\n)\n\nlazy val langmetaIo = crossProject"
  },
  {
    "id" : "3d7f9624-e8d7-47ed-8ed1-7976144b15d6",
    "prId" : 1028,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1028#pullrequestreview-50032873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b6f53dc-47eb-4254-ac08-72775a10cecf",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This change should not break your setup @xeno-by ",
        "createdAt" : "2017-07-14T12:26:51Z",
        "updatedAt" : "2017-07-14T12:26:51Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "aeb441964c493ad1d3ba494dd0d1a087a7938d8e",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +535,539 @@  publishTo := {\n    if (publishToBintray) publishTo.in(bintray).value\n    else if (isCustomRepository) Some(\"adhoc\" at adhocRepoUri)\n    else publishTo.value // Sonatype.\n  },"
  },
  {
    "id" : "e1a0b3fd-c085-4892-8e99-771e07c8aa15",
    "prId" : 1021,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1021#pullrequestreview-49542905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67cf4c6e-f8ea-43f0-bf69-351b70eff42a",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Just checking that these compile, as long as they compile we should be able to use git bisect to track down regressions in case something goes wrong.",
        "createdAt" : "2017-07-12T16:18:05Z",
        "updatedAt" : "2017-07-12T19:13:34Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3596c8a949b18e63b0fe51b7a12d9b61bd58094",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +72,76 @@  val runContribTests = test.in(contribJVM, Test).value\n  val runTests = test.in(testsJVM, Test).value\n  val propertyTests = compile.in(testkit, Test).value\n  val runDocs = test.in(readme).value\n}"
  },
  {
    "id" : "172f5246-7dd3-4acf-a37b-69fa97a580fe",
    "prId" : 1017,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/1017#pullrequestreview-49247467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe67b2cc-7410-4ebb-bfb6-235fd6930200",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Can you validate this fixes the custom repository setup @xeno-by ?",
        "createdAt" : "2017-07-11T15:57:27Z",
        "updatedAt" : "2017-07-11T15:57:27Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "a2f8e8f2-eb09-4f0f-9b84-473e1a6f86ff",
        "parentId" : "fe67b2cc-7410-4ebb-bfb6-235fd6930200",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Yes, this works for us at Twitter. \r\n\r\nI'm getting a new warning saying `[warn] You must run bintrayRelease once all artifacts are staged`, but I can live with it.",
        "createdAt" : "2017-07-11T16:06:22Z",
        "updatedAt" : "2017-07-11T16:06:22Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6ec1eb0c6e8fa3e1978ae5ec243b2ce32601cc2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +556,560 @@  publishArtifact.in(Test) := false,\n  publishMavenStyle := true,\n  bintrayReleaseOnPublish := !isCustomRepository,\n  pomIncludeRepository := { x =>\n    false"
  },
  {
    "id" : "a125c8a2-c3c3-482a-8164-5fc10ec6d47b",
    "prId" : 866,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/866#pullrequestreview-38197069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74589673-3af1-4e29-904b-acdf3ab49fa6",
        "parentId" : null,
        "authorId" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "body" : "Note: will hack incremental testing this week.",
        "createdAt" : "2017-05-15T22:05:43Z",
        "updatedAt" : "2017-05-15T22:16:29Z",
        "lastEditedBy" : "5a66b6a1-572a-436d-b1dc-6d5f210fae91",
        "tags" : [
        ]
      },
      {
        "id" : "a93237e0-ca83-4a7c-8bdd-136ef1d7f4f4",
        "parentId" : "74589673-3af1-4e29-904b-acdf3ab49fa6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "That would be awesome!",
        "createdAt" : "2017-05-16T06:58:54Z",
        "updatedAt" : "2017-05-16T07:21:19Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fefdc918e8c02e97f4cb408b61350bd31ffb178",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +261,265 @@    publishMavenStyle := false, // necessary for pre-releases to work with addSbtPlugin\n    bintrayRepository := \"maven\", // sbtPlugin overrides this to sbt-plugins\n    testQuick.in(IntegrationTest) := {\n      // runs tests for 2.11 only, avoiding the need to publish for 2.12\n      RunSbtCommand(s\"; plz $ScalaVersion publishLocal \" +"
  },
  {
    "id" : "88e0340b-07e4-4670-a9ac-1d6dda92aa83",
    "prId" : 862,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/862#pullrequestreview-38003708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ed29d64-09e7-48c6-9117-456f948281f3",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "@xeno-by I couldn't find where publishTo is set to sonatype for stable releases, this field should only be false when publishing to Bintray.",
        "createdAt" : "2017-05-14T14:57:40Z",
        "updatedAt" : "2017-05-14T14:57:40Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "1877b46d-4cf4-4cf2-a3ad-2a5d1fb2b12f",
        "parentId" : "8ed29d64-09e7-48c6-9117-456f948281f3",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I never got to reinstating this part of our build. Currently doing this manually (ugh!).",
        "createdAt" : "2017-05-14T16:41:32Z",
        "updatedAt" : "2017-05-14T16:41:32Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c6e40db3064371ebea4919d79e6e7096d0c8129",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +256,260 @@    sbt.ScriptedPlugin.scriptedSettings,\n    sbtPlugin := true,\n    publishMavenStyle := false, // necessary for pre-releases to work with addSbtPlugin\n    bintrayRepository := \"maven\", // sbtPlugin overrides this to sbt-plugins\n    testQuick := {"
  },
  {
    "id" : "46146095-3cdb-47a8-b88a-480b48330435",
    "prId" : 861,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/861#pullrequestreview-38037438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2ad5fff-6537-4740-95e3-dbb4cb8867d6",
        "parentId" : null,
        "authorId" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "body" : "@olafurpg This breaks scalatex. Do you have any idea why? To reproduce:\r\n```\r\nsbt readme/doc\r\n```",
        "createdAt" : "2017-05-14T16:18:13Z",
        "updatedAt" : "2017-05-15T09:37:01Z",
        "lastEditedBy" : "d4fbcd7a-0e8c-4b10-b7c5-2b136fb9ec83",
        "tags" : [
        ]
      },
      {
        "id" : "44849090-550b-428c-8eef-222b0f06bf24",
        "parentId" : "c2ad5fff-6537-4740-95e3-dbb4cb8867d6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I opened https://github.com/lihaoyi/Scalatex/pull/52 and published a pre-release of scalatex to our bintray repo with that fix. We can use the pre-release until the official scalatex is out\r\n\r\n```scala\r\n// project/plugins.sbt\r\nresolvers += Resolver.bintrayIvyRepo(\"scalameta\", \"sbt-plugins\") // only needed for scalatex 0.3.8-pre\r\naddSbtPlugin(\"com.lihaoyi\" % \"scalatex-sbt-plugin\" % \"0.3.8-pre\")\r\n// build.sbt\r\nresolvers += Resolver.bintrayRepo(\"scalameta\", \"maven\") // under sharedSettings\r\n```",
        "createdAt" : "2017-05-15T06:36:29Z",
        "updatedAt" : "2017-05-15T09:37:01Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ef790bc07d30a971e387fa1e17406b2ef442e93",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +137,141 @@    publishableSettings,\n    description := \"Scalameta APIs for tokenization and their baseline implementation\",\n    libraryDependencies += \"com.lihaoyi\" %%% \"fastparse\" % \"0.4.3\",\n    enableMacros\n  )"
  },
  {
    "id" : "f5a5a0c1-928d-46c9-9c5f-6956bb5c2860",
    "prId" : 781,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/781#pullrequestreview-30361228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfed3a33-9627-4c3d-a49b-f8752673419b",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "This line will fail if the main Scala version becomes 2.12, the scripted test depends on a 2.11 Scala version. ",
        "createdAt" : "2017-03-31T22:55:42Z",
        "updatedAt" : "2017-04-01T06:53:36Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7fe9f133ff1f706e326b58493ebb6ee27d6ba0a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +269,273 @@    testQuick := {\n      // runs tests for 2.11 only, avoiding the need to publish for 2.12\n      RunSbtCommand(s\"; plz $ScalaVersion publishLocal \" +\n        \"; such scalahostSbt/scripted sbt-scalahost/semantic-example\")(state.value)\n    },"
  },
  {
    "id" : "bdae080f-617a-4eaf-8c26-c21eede82c0a",
    "prId" : 775,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/775#pullrequestreview-30018077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47793fa6-2b6f-467e-b49a-bd0d0de22337",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Why do we need this project at all?",
        "createdAt" : "2017-03-30T14:40:03Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "fdb21f40-448f-4f3f-b327-9e8c54df1b84",
        "parentId" : "47793fa6-2b6f-467e-b49a-bd0d0de22337",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Scalafix will depend on this project to construct an offline mirror. See https://github.com/scalacenter/scalafix/issues/100 for why scalafix can't depend on scalahost-nsc directly.",
        "createdAt" : "2017-03-30T14:53:26Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "cca9bc49-7a5c-4fc4-a435-af46cc09041c",
        "parentId" : "47793fa6-2b6f-467e-b49a-bd0d0de22337",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Also, paradise will depend on this project. At the moment, `addCompilerPlugin(paradise)` enables scalahost-nsc as well.",
        "createdAt" : "2017-03-30T14:59:43Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "cefb172048f800b780cf8d8330ee10ebd8e3ad9a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +223,227 @@    libraryDependencies += \"org.scala-lang\" % \"scala-compiler\" % scalaVersion.value\n  )\n  .dependsOn(scalametaJVM)\n\nlazy val scalahostNsc = project"
  },
  {
    "id" : "83af3943-6d58-49d5-b293-1e3be9fdc4c5",
    "prId" : 775,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/775#pullrequestreview-30016106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f63855e-189e-4033-b199-4715726b397c",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Nice!",
        "createdAt" : "2017-03-30T14:40:44Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "7cfc279f-99df-4d6c-ae51-f81561d76c41",
        "parentId" : "7f63855e-189e-4033-b199-4715726b397c",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Btw how about a newline after this lazy val?",
        "createdAt" : "2017-03-30T14:40:52Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "7dfc1efd-fe78-4c9c-bbbc-d722826c12c3",
        "parentId" : "7f63855e-189e-4033-b199-4715726b397c",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Done.",
        "createdAt" : "2017-03-30T14:53:55Z",
        "updatedAt" : "2017-03-30T16:38:28Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "cefb172048f800b780cf8d8330ee10ebd8e3ad9a",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +644,648 @@    base / (\"scala-\" + scalaVersion.value)\n  }\n)\n\nlazy val hasLargeIntegrationTests = Seq("
  },
  {
    "id" : "be3b71a6-5b17-4218-af41-40756aff6a18",
    "prId" : 769,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/769#pullrequestreview-29416523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff5627d4-a88d-422b-969d-499d6a25c318",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The publish task would hang on this line waiting for a username/password combo to be typed into the repl.",
        "createdAt" : "2017-03-28T10:52:59Z",
        "updatedAt" : "2017-03-28T10:53:00Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "923667e5052abd7d9ba3a17ccb98b7623bd32fad",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +369,373 @@          val httpAuthentication = s\"$username:$password@\"\n          val authenticatedUrl = s\"https://${httpAuthentication}github.com/scalameta/scalameta.github.com\"\n          os.shell.call(s\"git push $authenticatedUrl master\", cwd = repo.getAbsolutePath)\n      }\n    } catch {"
  },
  {
    "id" : "09293e71-ec57-45a1-8d4a-554fbd130217",
    "prId" : 761,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/761#pullrequestreview-29045063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7063272-f3c2-4b90-adce-b7b498e1e1d1",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Can there be situations when tests work on the JVM and don't on JS?",
        "createdAt" : "2017-03-25T06:58:13Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "037e5809-db69-4567-86b4-28757db24658",
        "parentId" : "a7063272-f3c2-4b90-adce-b7b498e1e1d1",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Absolutely. For example, if you use `java.io.File`.\r\n\r\nHowever, I left JS out because it's slow, see https://github.com/scala-js/scala-js/issues/2827 Sometimes, incremental can take 3-4 minutes to link before running. The cause seems to be that the Scala.js linker struggles with inlining the thousand `test` method calls to Scalatest. I suggest we leave this for the CI server to catch.",
        "createdAt" : "2017-03-25T16:07:20Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "785a5006f1e8aaf901c65a8eb4f8255cad118785",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +44,48 @@aggregate.in(test) := false\ntest := {\n  // `test` by default only runs on the JVM\n  val runScalametaTests = test.in(scalametaJVM, Test).value\n  val runScalahostTests = test.in(scalahost, Test).value"
  },
  {
    "id" : "6e4fdbf9-364d-4416-8544-f675e020be7b",
    "prId" : 761,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/761#pullrequestreview-29210613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3606e89-c212-4266-ac50-0d2ebc2b777f",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Same about `in`. These are supposedly idiomatic uses of the SBT DSL copied from the official documentation.",
        "createdAt" : "2017-03-25T07:07:17Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "80b9481c-1737-462d-95a1-c5e47593f546",
        "parentId" : "e3606e89-c212-4266-ac50-0d2ebc2b777f",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The official sbt docs also do\r\n```scala\r\nval foo = (project in file(\"bar\").\r\n  settings(...)\r\n```\r\n\r\nI'm strongly against infix application with multiple arguments since they can be hard to parse in my head. Regular Term.Apply is easier to read and it scales more nicely for additional arguments/chained calls. For example, the old `) dependsOn (common)` infix usage made it annoying to append another `.addPlugins (ScalaJSPluginb)` line at the end. For uniformity, I refactored all `in` calls to non-infix. Are you OK with keeping this?",
        "createdAt" : "2017-03-25T16:19:35Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      },
      {
        "id" : "ea3a4b8c-59ac-47f2-8f29-5eddd1d4d1a7",
        "parentId" : "e3606e89-c212-4266-ac50-0d2ebc2b777f",
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I don't have a strong opinion. My only serious concern now is familiarity for newcomers.",
        "createdAt" : "2017-03-27T15:06:17Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "785a5006f1e8aaf901c65a8eb4f8255cad118785",
    "line" : 795,
    "diffHunk" : "@@ -1,1 +436,440 @@  scalacOptions.in(Compile, doc) ++= Seq(\"-skip-packages\", \"\"),\n  scalacOptions.in(Compile, doc) ++= Seq(\"-implicits\", \"-implicits-hide:.\"),\n  scalacOptions.in(Compile, doc) ++= Seq(\"-groups\"),\n  scalacOptions ++= Seq(\"-Xfatal-warnings\"),\n  parallelExecution.in(Test) := false, // hello, reflection sync!!"
  },
  {
    "id" : "079f4fe9-7a36-440d-9f22-60949ffd9149",
    "prId" : 761,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/761#pullrequestreview-29045063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d89c11d8-09d7-4899-b0fe-3ee7218845b6",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "Same question as for `sonatypeCredentials`",
        "createdAt" : "2017-03-25T07:14:00Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "4b9caf7c-7ab2-4494-82b1-f1ea33f568c8",
        "parentId" : "d89c11d8-09d7-4899-b0fe-3ee7218845b6",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "The reason I refactored the build so much is because the crossProject changes made some settings evaluate twice or three times on build reload. While moving things around, I got weird compiler errors when around `Def.taskDyn` which I believe are attributed to being inside the `:=` macro. Even if this is only called once I think it's clearer to move it outside of the long `publishableSettings` sequence. \r\n\r\nI can move it back if you want. I honestly think there's way to much logic in this build.sbt which should be refactored into an sbt plugin, but that's for another PR.",
        "createdAt" : "2017-03-25T16:25:05Z",
        "updatedAt" : "2017-03-28T16:33:36Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "785a5006f1e8aaf901c65a8eb4f8255cad118785",
    "line" : 1000,
    "diffHunk" : "@@ -1,1 +654,658 @@}\n\nlazy val compilePublish: Def.Initialize[Task[Unit]] = Def.taskDyn {\n  if (shouldPublishToBintray) {\n    Def.task {"
  },
  {
    "id" : "f92357eb-581a-400b-b760-9447751360c2",
    "prId" : 752,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/752#pullrequestreview-27331042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d54a964e-4da1-47c4-8f20-f8edc2c940aa",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "I suggest we deduplicate this with https://github.com/scalameta/scalameta/blob/d38a0f9cd5e58373967d31e2a9ebe1ee67662690/build.sbt#L50-L51.",
        "createdAt" : "2017-03-16T11:22:56Z",
        "updatedAt" : "2017-03-16T11:22:56Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "60d55221-beb5-4a6c-a6cb-a4a671806e70",
        "parentId" : "d54a964e-4da1-47c4-8f20-f8edc2c940aa",
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "I reused noPublish in scalametaRoot: https://github.com/scalameta/scalameta/pull/753/files#diff-fdc3abdfd754eeb24090dbd90aeec2ceR24\r\n\r\n",
        "createdAt" : "2017-03-16T13:08:25Z",
        "updatedAt" : "2017-03-16T13:08:25Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "b031ae47f2c4afd122e2a2e0da1b591df0bc631b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +537,541 @@  publish := {},\n  publishLocal := {}\n)\n\ndef exposePaths(projectName: String, config: Configuration) = {"
  },
  {
    "id" : "075aa304-7acc-48f8-96ff-371d6bb385d5",
    "prId" : 680,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/680#pullrequestreview-21702785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "086a4ba0-3e2b-40bb-a811-e060851e9f1c",
        "parentId" : null,
        "authorId" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "body" : "Nice!",
        "createdAt" : "2017-02-14T09:05:02Z",
        "updatedAt" : "2017-02-14T09:27:00Z",
        "lastEditedBy" : "bd90d0d4-3cfe-485f-b03d-29764e6b2eae",
        "tags" : [
        ]
      }
    ],
    "commit" : "c73a8ace2ee18ab80d1f5341c5ab19672d924b71",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +189,193 @@  libraryDependencies += \"org.scala-lang\" % \"scala-compiler\" % scalaVersion.value,\n  pomPostProcess := { node =>\n    new RuleTransformer(new RewriteRule {\n      private def isScalametaDependency(node: XmlNode): Boolean = {\n        def isArtifactId(node: XmlNode, fn: String => Boolean) = node.label == \"artifactId\" && fn(node.text)"
  },
  {
    "id" : "e1d71baf-2329-4c1b-a91c-7b5a98f30f8d",
    "prId" : 590,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/590#pullrequestreview-18521754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "103cd86c-3b1b-4d55-b2f4-5a54fd336183",
        "parentId" : null,
        "authorId" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "body" : "@dwijnand What's the right way of doing this?",
        "createdAt" : "2017-01-25T22:37:35Z",
        "updatedAt" : "2017-01-25T22:37:35Z",
        "lastEditedBy" : "56d6821a-439f-4d87-aba8-a6368926dbc5",
        "tags" : [
        ]
      },
      {
        "id" : "d4303223-3a60-45e2-9cb8-ea8926aa7e6f",
        "parentId" : "103cd86c-3b1b-4d55-b2f4-5a54fd336183",
        "authorId" : "63aec760-6afb-40e1-832d-acf54c195894",
        "body" : "Try using [sLog](http://www.scala-sbt.org/release/sxr/sbt/Keys.scala.html#sbt.Keys.sLog), but you'll have to be in the RHS of `publish in Compile`. Not sure if outside or inside Def.taskDyn though..",
        "createdAt" : "2017-01-25T22:41:20Z",
        "updatedAt" : "2017-01-25T22:41:21Z",
        "lastEditedBy" : "63aec760-6afb-40e1-832d-acf54c195894",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f60f1c3cbe960e1df18bf22902f4e7215dced01",
    "line" : 309,
    "diffHunk" : "@@ -1,1 +307,311 @@      else \"publishing disabled\"\n    }\n    println(s\"[info] Welcome to scala.meta $LibraryVersion ($publishingStatus)\")\n    publish in Compile := (Def.taskDyn {\n      if (shouldPublishToBintray) Def.task { publish.value }"
  },
  {
    "id" : "2e97535d-1045-4af1-a0ba-0c7325169ea8",
    "prId" : 2441,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2441#pullrequestreview-723148434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb9b3e7b-1084-4881-9e8e-d3944dc738a9",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Is `packageDoc / publishArtifact := false` not needed?",
        "createdAt" : "2021-08-05T09:33:45Z",
        "updatedAt" : "2021-08-05T09:33:45Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "caecd1b1-1cdb-415f-8843-a315c0f002b6",
        "parentId" : "cb9b3e7b-1084-4881-9e8e-d3944dc738a9",
        "authorId" : "ac5ed7d7-17a6-48d0-a426-0b37bf9febdb",
        "body" : "Yep. Even before migration there was a warning from sbt-linter that it isn't used\r\n",
        "createdAt" : "2021-08-05T09:40:46Z",
        "updatedAt" : "2021-08-05T09:40:46Z",
        "lastEditedBy" : "ac5ed7d7-17a6-48d0-a426-0b37bf9febdb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f2d566c0d4ada41a8b924cf2879a457d70bb047",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +709,713 @@  publish / skip := true,\n  mimaPreviousArtifacts := Set.empty,\n  Compile / packageDoc / publishArtifact := false,\n  Compile / doc / sources := Seq.empty,\n  publishArtifact := false,"
  },
  {
    "id" : "5563b442-aa13-43ca-8471-c6e62720ec01",
    "prId" : 2441,
    "prUrl" : "https://github.com/scalameta/scalameta/pull/2441#pullrequestreview-723148434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15743b15-92c3-406c-8f93-fd17c911bed5",
        "parentId" : null,
        "authorId" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "body" : "Is `packageDoc / publishArtifact := false` not needed?",
        "createdAt" : "2021-08-05T09:33:45Z",
        "updatedAt" : "2021-08-05T09:33:45Z",
        "lastEditedBy" : "e26c6789-3ff6-4411-9f32-f6ffcf911775",
        "tags" : [
        ]
      },
      {
        "id" : "6eb602ae-3167-4bc1-a789-38c33dd5b800",
        "parentId" : "15743b15-92c3-406c-8f93-fd17c911bed5",
        "authorId" : "ac5ed7d7-17a6-48d0-a426-0b37bf9febdb",
        "body" : "Yep. Even before migration there was a warning from sbt-linter that it isn't used\r\n",
        "createdAt" : "2021-08-05T09:40:46Z",
        "updatedAt" : "2021-08-05T09:40:46Z",
        "lastEditedBy" : "ac5ed7d7-17a6-48d0-a426-0b37bf9febdb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f2d566c0d4ada41a8b924cf2879a457d70bb047",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +709,713 @@  publish / skip := true,\n  mimaPreviousArtifacts := Set.empty,\n  Compile / packageDoc / publishArtifact := false,\n  Compile / doc / sources := Seq.empty,\n  publishArtifact := false,"
  }
]