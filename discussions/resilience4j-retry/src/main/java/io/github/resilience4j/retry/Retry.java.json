[
  {
    "id" : "98e3f62a-89ae-470a-95fe-3bdbb51be2e9",
    "prId" : 1293,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/1293#pullrequestreview-564289962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "413a77b7-8d92-4da3-8599-bec6eb80836e",
        "parentId" : null,
        "authorId" : "9170868d-d2e9-486d-98f1-996f9ebe40c4",
        "body" : "This is the only change introduced by this PR (Regardless of if the new `failAfterMaxAttempts` is set). Let me know if you see any issues with this",
        "createdAt" : "2021-01-08T14:15:47Z",
        "updatedAt" : "2021-01-08T14:15:47Z",
        "lastEditedBy" : "9170868d-d2e9-486d-98f1-996f9ebe40c4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0896dbdec093727144b795f50f66f50e29259f36",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +684,688 @@                } catch (Exception e) {\n                    promise.completeExceptionally(e);\n                }\n            } else {\n                scheduler.schedule(this, delay, TimeUnit.MILLISECONDS);"
  },
  {
    "id" : "b3896cbd-393a-4e7b-94a2-d0bbd636c1a7",
    "prId" : 698,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/698#pullrequestreview-308999705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "deb0e092-27eb-41fa-831b-ae487f82bea6",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Could you please enhance this JavaDoc and describe what happens on onComplete to the user.",
        "createdAt" : "2019-10-30T07:19:37Z",
        "updatedAt" : "2019-10-30T17:21:02Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec804cba41048fcdc25830183d996b6ab0c1be42",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +517,521 @@\n\t\t/**\n\t\t * Records a successful call or retryable call with the needed generated retry events.\n         * When there is a successful retry before reaching the max retries limit , it will generate {@link RetryOnSuccessEvent}\n\t\t * When the retry reach the max retries limit , it will generate {@link RetryOnErrorEvent} with last exception or {@link MaxRetriesExceeded} if no other exception thrown"
  },
  {
    "id" : "7df3dad7-e017-425c-bd0b-0409e2dd879b",
    "prId" : 698,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/698#pullrequestreview-308999705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fb361a1-3810-4edc-a87a-1f4b6b4cb1d6",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Could you please enhance this JavaDoc and describe what happens on onComplete to the user.",
        "createdAt" : "2019-10-30T07:19:42Z",
        "updatedAt" : "2019-10-30T17:21:02Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec804cba41048fcdc25830183d996b6ab0c1be42",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +556,560 @@\n\t\t/**\n\t\t * Records a successful call or retryable call with the needed generated retry events.\n         * When there is a successful retry before reaching the max retries limit , it will generate {@link RetryOnSuccessEvent}\n\t\t * When the retry reach the max retries limit , it will generate {@link RetryOnErrorEvent} with last exception or {@link MaxRetriesExceeded} if no other exception thrown"
  },
  {
    "id" : "2f600d5e-c9b6-48f5-83e2-46f8c3bf4c5a",
    "prId" : 654,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/654#pullrequestreview-295545909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12384cf7-d7de-416d-9007-a402d1634ff9",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Could we return an immutable Map from Vavr instead?\r\n\r\nComparable to `Seq<CircuitBreaker> getAllCircuitBreakers();`",
        "createdAt" : "2019-10-01T11:25:13Z",
        "updatedAt" : "2019-10-15T07:35:16Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "afd05834-02b9-4133-94b9-6fe357309854",
        "parentId" : "12384cf7-d7de-416d-9007-a402d1634ff9",
        "authorId" : "722b0cd0-3c68-4719-96bf-7e0aa17a3596",
        "body" : "You mean `io.vavr.collection.Map`? Sounds good to me. Am I right to assume you want to use that everywhere? For example also in the `static Retry of(String name, RetryConfig retryConfig, Map<String, String> tags)` methods and such?",
        "createdAt" : "2019-10-01T11:42:16Z",
        "updatedAt" : "2019-10-15T07:35:16Z",
        "lastEditedBy" : "722b0cd0-3c68-4719-96bf-7e0aa17a3596",
        "tags" : [
        ]
      },
      {
        "id" : "050ade5c-b336-4b65-94cc-9eb54aa2f851",
        "parentId" : "12384cf7-d7de-416d-9007-a402d1634ff9",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Yes",
        "createdAt" : "2019-10-01T11:53:35Z",
        "updatedAt" : "2019-10-15T07:35:16Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "fad35c8346cde642222477b3b2de5b97eac3ab43",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +382,386 @@\t * @return the tags assigned to this Retry in an unmodifiable map\n\t */\n\tMap<String, String> getTags();\n\n\t/**"
  },
  {
    "id" : "e463e662-b3a7-43fe-bda3-3cbb17e84479",
    "prId" : 138,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/138#pullrequestreview-39220268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7625ca2f-dbfe-43e1-829c-655acb5ce74a",
        "parentId" : null,
        "authorId" : "b0621d5a-81af-4c40-bdde-2cabb1be4b4e",
        "body" : "üëç ",
        "createdAt" : "2017-05-19T15:06:53Z",
        "updatedAt" : "2017-05-19T15:06:53Z",
        "lastEditedBy" : "b0621d5a-81af-4c40-bdde-2cabb1be4b4e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9078786f2a4bbc1adefc2814bc95ca21be7cf8a3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +31,35 @@\n/**\n * A Retry instance is thread-safe can be used to decorate multiple requests.\n * A Retry.\n */"
  }
]