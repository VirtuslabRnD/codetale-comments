[
  {
    "id" : "540c608d-9582-4540-8c57-48aca41e6c87",
    "prId" : 1200,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/1200#pullrequestreview-513456679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d554170-84f7-43b4-9338-a298c0eab563",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "I think we should deprecate `getIntervalFunction`, since it shouldn't be used anymore in our  `RetryImpl`. Makes it more obvious where it is still used. \r\nComparable to `getWaitDurationInOpenState` in `CircuitBreakerConfig`",
        "createdAt" : "2020-10-20T12:21:57Z",
        "updatedAt" : "2020-10-23T07:59:18Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "21ad9c4c-dd09-4273-a944-243f057af949",
        "parentId" : "3d554170-84f7-43b4-9338-a298c0eab563",
        "authorId" : "2b4d5341-7866-4cf8-a59d-4676125c609b",
        "body" : "This was one of my questions from PR description ðŸ˜ƒ ",
        "createdAt" : "2020-10-20T12:36:45Z",
        "updatedAt" : "2020-10-23T07:59:18Z",
        "lastEditedBy" : "2b4d5341-7866-4cf8-a59d-4676125c609b",
        "tags" : [
        ]
      },
      {
        "id" : "be71eb78-20f3-4bbf-aea6-ee4d0719648e",
        "parentId" : "3d554170-84f7-43b4-9338-a298c0eab563",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "I misread the PR description. I thought you want to deprecate `IntervalFunction` itself. \r\nToo many topics in parallel, sorry.",
        "createdAt" : "2020-10-20T12:38:22Z",
        "updatedAt" : "2020-10-23T07:59:18Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "d40e4601-de73-4790-b601-3c1354d39a84",
        "parentId" : "3d554170-84f7-43b4-9338-a298c0eab563",
        "authorId" : "2b4d5341-7866-4cf8-a59d-4676125c609b",
        "body" : "no worries",
        "createdAt" : "2020-10-21T08:59:35Z",
        "updatedAt" : "2020-10-23T07:59:18Z",
        "lastEditedBy" : "2b4d5341-7866-4cf8-a59d-4676125c609b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6752338ee9142a9ba90fee6100a0b07f3d8fcb5",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +100,104 @@    @Deprecated\n    public Function<Integer, Long> getIntervalFunction() {\n        return intervalFunction;\n    }\n"
  },
  {
    "id" : "0cffa83c-4b78-4a29-a0f8-464d1a0c3e67",
    "prId" : 539,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/539#pullrequestreview-260521107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9a05827-e214-4169-8216-f7b5c1fa156b",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "It should throw an exception if the value is < 0",
        "createdAt" : "2019-07-11T07:07:48Z",
        "updatedAt" : "2019-07-11T07:47:38Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "3b89699b-730a-4935-ad3f-d5e93289422e",
        "parentId" : "e9a05827-e214-4169-8216-f7b5c1fa156b",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "is it possible that someone will try set value of interval with less than 0 (- value) :)?",
        "createdAt" : "2019-07-11T07:42:38Z",
        "updatedAt" : "2019-07-11T07:47:38Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      },
      {
        "id" : "d6c9b221-f412-468e-b041-126c0db65237",
        "parentId" : "e9a05827-e214-4169-8216-f7b5c1fa156b",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "updated anyhow :)",
        "createdAt" : "2019-07-11T07:47:52Z",
        "updatedAt" : "2019-07-11T07:47:52Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "407645a3c474558dda780499178505f4ee08461b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +145,149 @@\t\tpublic Builder<T> waitDuration(Duration waitDuration) {\n\t\t\tif (waitDuration.toMillis() >= 0) {\n\t\t\t\tthis.intervalFunction = (x) -> waitDuration.toMillis();\n\t\t\t} else {\n\t\t\t\tthrow new IllegalArgumentException(\"waitDurationInOpenState must be a positive value\");"
  },
  {
    "id" : "6f3e7bbe-83d1-4563-b7c9-3e7d7b5af2ea",
    "prId" : 445,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/445#pullrequestreview-233041078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d09afcf1-8a4d-43e4-8776-a0fb13983f46",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Let's rename the variable to `baseConfig`",
        "createdAt" : "2019-05-02T14:29:36Z",
        "updatedAt" : "2019-05-02T15:36:12Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f03f2fca749d3be9bbb3e31f37bc299996347a0",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +115,119 @@\t\t}\n\n\t\tpublic Builder(RetryConfig retryConfig) {\n\t\t\tthis.exceptionPredicate = retryConfig.exceptionPredicate;\n\t\t\tthis.maxAttempts = retryConfig.maxAttempts;"
  }
]