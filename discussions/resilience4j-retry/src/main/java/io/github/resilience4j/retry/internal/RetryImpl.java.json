[
  {
    "id" : "937e1cae-b70a-4d6d-9f8a-bdf8635b12d2",
    "prId" : 698,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/698#pullrequestreview-304359794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136a61d8-66c9-4c62-9496-a73b120c8623",
        "parentId" : null,
        "authorId" : "e35e1e25-0917-4c14-86ac-8c88fc7ec9d5",
        "body" : "Looks a bit weird that there is a branch inside onSuccess method which emits error event. It would be more consistent to rename onSuccess to onOperationFinished or onRetriesStopped etc.",
        "createdAt" : "2019-10-18T03:23:22Z",
        "updatedAt" : "2019-10-30T17:21:01Z",
        "lastEditedBy" : "e35e1e25-0917-4c14-86ac-8c88fc7ec9d5",
        "tags" : [
        ]
      },
      {
        "id" : "b86a3668-88f2-4704-8213-7fca7fdef504",
        "parentId" : "136a61d8-66c9-4c62-9496-a73b120c8623",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Yes, we are also discussing it internally.\r\nUnfortunately we don't want to introduce a non-backward compatible change. The method `onSuccess` is part of the public API.",
        "createdAt" : "2019-10-18T05:32:55Z",
        "updatedAt" : "2019-10-30T17:21:01Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "301e116a-d894-44e1-ad75-980f2a843b74",
        "parentId" : "136a61d8-66c9-4c62-9496-a73b120c8623",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "The onResult handling was added at a later point in time. That's why it doesn't really fit into the public API.",
        "createdAt" : "2019-10-18T05:34:20Z",
        "updatedAt" : "2019-10-30T17:21:01Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "7206fa19-3c8e-4bcd-8a09-e5bc737ee6e7",
        "parentId" : "136a61d8-66c9-4c62-9496-a73b120c8623",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "So what is the final conclusion here :) ? i can add maybe new API onFinished that do the same and deprecate onSuccess and make it call onFinished internally ",
        "createdAt" : "2019-10-18T14:08:17Z",
        "updatedAt" : "2019-10-30T17:21:01Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      },
      {
        "id" : "066c8253-09a0-4d2f-8e4b-a35703a2cf5f",
        "parentId" : "136a61d8-66c9-4c62-9496-a73b120c8623",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "We could also just create a new `onResult` and move the logic, which is currently in the decorators, into that method.\r\nThe code is actually duplicated everywhere:\r\n\r\n```\r\nT result = supplier.get();\r\nfinal boolean validationOfResult = context.onResult(result);\r\nif (!validationOfResult) {\r\n    context.onSuccess();\r\n    return result;\r\n}\r\n```\r\n\r\n`onSuccess` could be depreacted then and only used internally.",
        "createdAt" : "2019-10-21T07:04:20Z",
        "updatedAt" : "2019-10-30T17:21:01Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec804cba41048fcdc25830183d996b6ab0c1be42",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +155,159 @@\t\t\t} else {\n\t\t\t\tif (currentNumOfAttempts >= maxAttempts) {\n\t\t\t\t\tfailedAfterRetryCounter.increment();\n\t\t\t\t\tThrowable throwable = Option.of(lastException.get()).getOrElse(lastRuntimeException.get());\n\t\t\t\t\tpublishRetryEvent(() -> new RetryOnErrorEvent(name, currentNumOfAttempts, throwable != null ? throwable : new MaxRetriesExceeded(\"max retries is reached out for the result predicate check\")));"
  }
]