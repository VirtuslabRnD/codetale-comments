[
  {
    "id" : "496b249c-9d89-43a4-bcb9-7b47bea1190d",
    "prId" : 1783,
    "prUrl" : "https://github.com/scalameta/metals/pull/1783#pullrequestreview-420227149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b61b644d-c34e-4da6-8419-611f3bec92a9",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "We also take methods into account now, which in case of java files will mean that the breakpoints will work properly even with an inner class.",
        "createdAt" : "2020-05-28T15:26:18Z",
        "updatedAt" : "2020-06-02T20:02:03Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "354a7590e2040752863a8b6566562324bc6d9483",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +33,37 @@  }\n\n  private def findClass(symbol: String): String = {\n    val desc = symbol.desc\n    if (desc.isTerm || desc.isType) {"
  },
  {
    "id" : "0af20fe3-781f-4ceb-bc46-81ab69d4592f",
    "prId" : 1163,
    "prUrl" : "https://github.com/scalameta/metals/pull/1163#pullrequestreview-333125039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f993d56-31f9-4c4c-969b-f0ab68d66fca",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Does it work inside annonymous classes?",
        "createdAt" : "2019-12-16T11:32:33Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "ebc32470-0995-4e29-8642-17580af7cb49",
        "parentId" : "3f993d56-31f9-4c4c-969b-f0ab68d66fca",
        "authorId" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "body" : "Added a test case for that",
        "createdAt" : "2019-12-17T09:15:03Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : "a1d420d1-83d4-48b5-b245-772065f6633b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@      }\n    }\n    val fqcn = loop(definition.symbol.ownerChain, new StringBuilder)\n    TypeSignature(fqcn)\n  }"
  }
]