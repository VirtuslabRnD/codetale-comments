[
  {
    "id" : "2483b67b-8add-4ec3-a70a-fa11f19d9efd",
    "prId" : 1522,
    "prUrl" : "https://github.com/scalameta/metals/pull/1522#pullrequestreview-379032770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "797c21fb-8988-4614-aec6-7d2aaa8c0020",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "Also, this breaks from the [Decoration Protocol 0.1.0](https://scalameta.org/metals/docs/editors/decoration-protocol.html) with having the hover message being `MarkupContent` rather than `MarkedString`. I can update the docs, however, how do we version the decoration protocol? Do we need to keep history of the v0.1.0, or am I ok to just update it and make it v0.2.0? After we figure this out, I'll also need to update the vs code and coc-metals clients to match this.\r\n\r\nThis is also causing the lsp integration and unit tests to fail because we are just looking at the raw string. However, I don't really see this any different than the other hovers, so I think it actually make sense to surround it with ````scala` tics. Thoughts?",
        "createdAt" : "2020-03-21T18:09:36Z",
        "updatedAt" : "2020-03-22T12:53:13Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      },
      {
        "id" : "bf206fc2-5e25-44c6-995c-5d92a6d9351f",
        "parentId" : "797c21fb-8988-4614-aec6-7d2aaa8c0020",
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "I sort of just assumed that it was ok to update the protocol. I've gone ahead and updated the decoration protocol docs and updated the changelog just in case someone was using the protocol.\r\n\r\nI also updated the worksheet suite to include the new hover text having ```scala tics. I've tested this manually to ensure there is no regression in the way things appear in both VS Code an coc-metals. As far as I can tell, it behaves exactly the same.",
        "createdAt" : "2020-03-22T12:56:17Z",
        "updatedAt" : "2020-03-22T12:56:17Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      },
      {
        "id" : "572584f0-34e4-44ff-a768-9bdb8fb2a044",
        "parentId" : "797c21fb-8988-4614-aec6-7d2aaa8c0020",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I think it's fine to do 0.2.0, but probably best if @olafurpg confirms. The only issue I see is that will make the snapshot versions stop working. Maybe we should have the client send the version it is using? And send one or the other (MarkupContent or MarkupString)?\r\n\r\nMight be more effort to change it than it's worth, we might need to remove MarkedString at some point, but s it deprecated itself?",
        "createdAt" : "2020-03-22T17:43:11Z",
        "updatedAt" : "2020-03-22T17:51:36Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "905507d2-5ab8-4c98-9819-d4200017b086",
        "parentId" : "797c21fb-8988-4614-aec6-7d2aaa8c0020",
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "Talked about his offline, but even with the current version of the extensions, this still works fine. The old shape that was returned was below:\r\n\r\n```json\r\n  \"hoverMessage\": {\r\n        \"language\": \"scala\",\r\n        \"value\": \"x: Int \\u003d 3\"\r\n      }\r\n```\r\nNow, the new format is below:\r\n```json\r\n```json\r\n\"hoverMessage\": {\r\n        \"kind\": \"markdown\",\r\n        \"value\": \"```scala\\nx: Int \\u003d 3\\n```\"\r\n      }\r\n```\r\nThe current extension is able to handled these both.",
        "createdAt" : "2020-03-22T18:16:13Z",
        "updatedAt" : "2020-03-22T18:16:25Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1f157044a3d540463d614d0851071783f10aed1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +43,47 @@        new DecorationOptions(\n          s.position().toLsp,\n          new MarkupContent(\n            MarkupKind.MARKDOWN,\n            HoverMarkup(s.details)"
  }
]