[
  {
    "id" : "9d639076-e07a-4ffe-aaaa-b82fced0cbc8",
    "prId" : 1978,
    "prUrl" : "https://github.com/scalameta/metals/pull/1978#pullrequestreview-463225855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c817127e-8a1f-4b54-a718-bff6acc5854c",
        "parentId" : null,
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "I think it should check the existence for `.scala` files too, not only `.sbt`.\r\n\r\nHowever, it's probably it's hard to find a project that has sbt-scala sources somewhere deeper than in `.project/` directory",
        "createdAt" : "2020-08-07T10:52:07Z",
        "updatedAt" : "2020-08-07T10:52:07Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      },
      {
        "id" : "898a78ce-b71f-45cb-a782-6226baf365fb",
        "parentId" : "c817127e-8a1f-4b54-a718-bff6acc5854c",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "We are not really registering those files within the correct build target, I will fix up together later.",
        "createdAt" : "2020-08-07T11:04:58Z",
        "updatedAt" : "2020-08-07T11:04:58Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3195e72fd6abcbe2ea77ab110577e0477ca73",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +95,99 @@        val files = meta.list.toList\n        val hasSbtSrc = files.exists(f => f.isSbt && f.filename != \"metals.sbt\")\n        if (hasSbtSrc) {\n          val forSbtSupport = meta.resolve(\"project/project\")\n          sbtMetaDirs(meta.resolve(\"project\"), acc + forSbtSupport)"
  },
  {
    "id" : "cf2c1688-d163-445e-b194-f38390164f76",
    "prId" : 1865,
    "prUrl" : "https://github.com/scalameta/metals/pull/1865#pullrequestreview-452474522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "879be0fe-4d53-4710-99e8-52b0b72e411f",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "We should also check if these directories exist.",
        "createdAt" : "2020-07-06T17:50:17Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "f99ab042-96ca-46f0-bea5-5275b2d2dbfb",
        "parentId" : "879be0fe-4d53-4710-99e8-52b0b72e411f",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "If they aren't then they will be created in function below.\r\nhttps://github.com/scalameta/metals/blob/71ebf3d7b546d98483b4426d176d01a84bd70d69/metals/src/main/scala/scala/meta/internal/builds/SbtBuildTool.scala#L117-L125",
        "createdAt" : "2020-07-21T11:12:26Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      },
      {
        "id" : "4404db83-7a81-44da-991a-6ba8928cf83a",
        "parentId" : "879be0fe-4d53-4710-99e8-52b0b72e411f",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Cool. One additional thing that I did notice is that when we create `metals.sbt` file then the next `bloopInstall` will create a next level and then the next during consequtive install, which we should not do. We should only create those files if `metals.sbt` is not the only thing in the project directory.",
        "createdAt" : "2020-07-21T13:47:55Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +113,117 @@    }\n\n    val mainMeta = workspace.resolve(\"project\")\n    val dirs = sbtMetaDirs(mainMeta, true, List(mainMeta))\n"
  },
  {
    "id" : "bd7a94fa-8e7a-46f2-bd29-5a086703cf77",
    "prId" : 852,
    "prUrl" : "https://github.com/scalameta/metals/pull/852#pullrequestreview-273642456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a1ba702-e8a3-416b-8fcf-7acda22c91b5",
        "parentId" : null,
        "authorId" : "fd1e81aa-f1f7-46f0-84c3-a8d7faae9085",
        "body" : "Should we not also create this file in `project/project/metals.sbt` if any Scala files are defined under `project`?",
        "createdAt" : "2019-08-05T16:10:20Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "fd1e81aa-f1f7-46f0-84c3-a8d7faae9085",
        "tags" : [
        ]
      },
      {
        "id" : "9f24f78f-1e42-416a-85c2-3648e2de5dd7",
        "parentId" : "7a1ba702-e8a3-416b-8fcf-7acda22c91b5",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "The sbt targets are not yet supported, so this will only be needed once we actually add sbt support",
        "createdAt" : "2019-08-09T09:03:12Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "56f3859a-7838-4f9d-84ef-a90067a2e537",
        "parentId" : "7a1ba702-e8a3-416b-8fcf-7acda22c91b5",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Additionally we can add to metals.sbt `bloopExportJarClassifiers := Some(Set(\\\"source\\\"))` if we add plugin to project/project. Should be easy to do when working on sbt support",
        "createdAt" : "2019-08-12T11:49:43Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +99,103 @@    val projectDir = workspace.resolve(\"project\")\n    projectDir.toFile.mkdir()\n    val metalsPluginfile = projectDir.resolve(\"metals.sbt\")\n    val pluginFileShouldChange = !metalsPluginfile.isFile ||\n      !metalsPluginfile.readAllBytes.sameElements(bytes)"
  },
  {
    "id" : "f6a7f6ca-d983-4b70-a850-c60ba36d2d4a",
    "prId" : 852,
    "prUrl" : "https://github.com/scalameta/metals/pull/852#pullrequestreview-281135578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40c06789-8b01-4c81-b721-1d374c6a2e63",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "\r\n```suggestion\r\n    val isPreReleaseVersion = bloopSbtVersion.contains(\"+\") || bloopSbtVersion.contains(\"-\")\r\n```\r\nStrictly speaking, a snapshot version should end with `-SNAPSHOT`. Including `-` also guards us if bloop changes it's usage of `+` versions. Some filesystems require weird encodings for filenames with `+`.",
        "createdAt" : "2019-08-25T17:56:28Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "d987ffbf-9618-4b15-b4b9-a9278e2a0149",
        "parentId" : "40c06789-8b01-4c81-b721-1d374c6a2e63",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I don't think bloop ever releases with `version-SNAPSHOT`, but I can add it here, just don't think it will change much.",
        "createdAt" : "2019-08-28T12:58:23Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "bd9947a1-beef-402c-86b4-eec66fffa142",
        "parentId" : "40c06789-8b01-4c81-b721-1d374c6a2e63",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Fair point.",
        "createdAt" : "2019-08-28T22:25:36Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +133,137 @@   */\n  private def sbtPlugin(bloopSbtVersion: String): String = {\n    val isSnapshotVersion = bloopSbtVersion.contains(\"+\")\n    val resolvers = if (isSnapshotVersion) {\n      \"\"\"resolvers += Resolver.bintrayRepo(\"scalacenter\", \"releases\")\"\"\""
  },
  {
    "id" : "e7397d1f-1fd2-44b0-9ebb-51edf24d17ef",
    "prId" : 852,
    "prUrl" : "https://github.com/scalameta/metals/pull/852#pullrequestreview-281135656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5c29582-6d8a-46dc-b4ec-8252c7c021ed",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "What do you think about adding the following entries as well?\r\n```\r\n.metals/\r\n.bloop/\r\n```\r\nThese entries should ideally be in the workspace .gitignore instead of the global .gitignore because VS Code only uses the workspace gitignore in \"Open file\".",
        "createdAt" : "2019-08-25T21:02:59Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "8dfbc370-e292-4cab-bf20-746219557cc1",
        "parentId" : "c5c29582-6d8a-46dc-b4ec-8252c7c021ed",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "I was thinking about it, but decided not to do in this PR, but I can for sure do it here.",
        "createdAt" : "2019-08-28T13:00:22Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "ea7ec5e2-e359-4bb0-9ada-5ae7d698a9ad",
        "parentId" : "c5c29582-6d8a-46dc-b4ec-8252c7c021ed",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "It can be done as a separate PR.",
        "createdAt" : "2019-08-28T22:25:51Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +84,88 @@  private def gitignoreMetals(workspace: AbsolutePath) = {\n    val gitignore = workspace.resolve(\".gitignore\")\n    val gitIgnoreContents = \"project/metals.sbt\"\n    if (gitignore.exists && !gitignore.readText.contains(gitIgnoreContents)) {\n      gitignore.appendText(s\"\\n$gitIgnoreContents\\n\")"
  }
]