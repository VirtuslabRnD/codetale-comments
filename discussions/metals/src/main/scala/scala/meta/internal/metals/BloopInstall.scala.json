[
  {
    "id" : "1230e4f9-8a0d-4b83-8e18-f2d6a245b416",
    "prId" : 727,
    "prUrl" : "https://github.com/scalameta/metals/pull/727#pullrequestreview-241031281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f9256c5-1a15-41ff-9357-51f8ef3f9e7a",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Should we flush the buffer on exit?",
        "createdAt" : "2019-05-22T15:06:54Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "3a738be5-8811-4b75-ad01-6c02be8a84de",
        "parentId" : "2f9256c5-1a15-41ff-9357-51f8ef3f9e7a",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Which buffer? We just use the logger and pretty sure it has autoflush set.",
        "createdAt" : "2019-05-22T15:20:37Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "9058fc1d-b4a7-477c-b21a-0409e3b889db",
        "parentId" : "2f9256c5-1a15-41ff-9357-51f8ef3f9e7a",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "What happens in the following scenario?\r\n\r\n- stdout prints `\"Hello\"`, with no newline\r\n- process exits\r\n\r\nI expect `\"Hello\"` to get printed out on exit.",
        "createdAt" : "2019-05-23T06:25:32Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "207b4cb1-a321-4581-b0bd-5eced4fb8224",
        "parentId" : "2f9256c5-1a15-41ff-9357-51f8ef3f9e7a",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "But that is not going to happen, we only run build tools using this class.  \r\n\r\nI can account for scenario, but it seems really hypothetical.",
        "createdAt" : "2019-05-23T07:26:19Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "98a9dfcf-58bc-4d24-8ecd-601e286c7eb4",
        "parentId" : "2f9256c5-1a15-41ff-9357-51f8ef3f9e7a",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Ok, added additional logging on exit.",
        "createdAt" : "2019-05-23T07:33:00Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9c0395fa83c2e41f0331e8f4bddea0b2709085",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +217,221 @@    val stderr = new LineListener(line => scribe.error(line))\n\n    override def onStart(nuProcess: NuProcess): Unit = {\n      nuProcess.closeStdin(false)\n    }"
  },
  {
    "id" : "618e067e-5d17-4c95-914d-d2378df06327",
    "prId" : 351,
    "prUrl" : "https://github.com/scalameta/metals/pull/351#pullrequestreview-179712191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89f6f58a-cefb-4625-9c4c-ae8ea2e28170",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Can it ever be just \"SNAPSHOT\" like in the past?",
        "createdAt" : "2018-11-29T09:56:47Z",
        "updatedAt" : "2018-11-29T09:56:48Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "66568872-3d9c-4adb-9be1-492d8a5f7b1e",
        "parentId" : "89f6f58a-cefb-4625-9c4c-ae8ea2e28170",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "nope, it was nice while it lasted but caused troubles when the vscode plugin picked up ancient local builds from people who tried metals ages ago",
        "createdAt" : "2018-11-29T10:04:38Z",
        "updatedAt" : "2018-11-29T10:04:38Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "836fd11722c43ba821d53f192ab7f3bac35643f9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +208,212 @@  private def globalMetalsSbt: String = {\n    val resolvers =\n      if (BuildInfo.metalsVersion.endsWith(\"-SNAPSHOT\")) {\n        \"\"\"|resolvers ++= {\n           |  if (System.getenv(\"METALS_ENABLED\") == \"true\") {"
  },
  {
    "id" : "573247d4-2c17-4ee9-bed1-214dc038afda",
    "prId" : 337,
    "prUrl" : "https://github.com/scalameta/metals/pull/337#pullrequestreview-178015116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "371f5cb5-ce21-4e56-8413-21db550fe64f",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Isn't this the same as the fix for 4395 above?",
        "createdAt" : "2018-11-21T21:43:31Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "f93088c6-481c-41c8-885a-27532c5ac70b",
        "parentId" : "371f5cb5-ce21-4e56-8413-21db550fe64f",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Yes, that workaround wasn't necessary after all since we don't use -addPluginSbtFile",
        "createdAt" : "2018-11-23T19:36:47Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +189,193 @@      if (sbt.version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n      else pluginsDirectory(\"1.0\")\n    Files.createDirectories(plugins.toNIO)\n    val bytes = globalMetalsSbt.getBytes(StandardCharsets.UTF_8)\n    val destination = plugins.resolve(\"metals.sbt\")"
  },
  {
    "id" : "021e1f1e-d7c4-4ee4-af91-fcd0a97cb5e5",
    "prId" : 337,
    "prUrl" : "https://github.com/scalameta/metals/pull/337#pullrequestreview-178015116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebddc94b-ed66-4940-9a28-314dee0179a2",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "![](https://i.imgflip.com/2n5b2l.jpg)",
        "createdAt" : "2018-11-21T22:01:44Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "c66f195f-7610-4be8-8c24-62b8442bf24d",
        "parentId" : "ebddc94b-ed66-4940-9a28-314dee0179a2",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "This was just a bad method overall, the logic wasn't even good. I've refactored it into smaller components and hopefully cleaned up handling of sbt checksums. It's still not ideal but livable.",
        "createdAt" : "2018-11-23T19:36:20Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +124,128 @@        Future.successful(result)\n      case None =>\n        for {\n          userResponse <- requestImport(buildTools, languageClient, digest)\n          installResult <- {"
  },
  {
    "id" : "4f656818-6798-497c-ba34-7d470cd6ec27",
    "prId" : 337,
    "prUrl" : "https://github.com/scalameta/metals/pull/337#pullrequestreview-178015116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d18a0049-671e-439c-a56f-4062f9fb4707",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "The check seems redundant. Is there anything wrong in writing the file unconditionally?",
        "createdAt" : "2018-11-21T22:04:55Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "d88ed310-8700-4214-8397-213c94c3d829",
        "parentId" : "d18a0049-671e-439c-a56f-4062f9fb4707",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I added a detailed commit. I haven't validated 100% but the idea is to avoid triggering sbt re-compilation of global plugins, that can slow down the import by 5-10 seconds",
        "createdAt" : "2018-11-23T19:39:07Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +200,204 @@    } else {\n      Files.write(destination.toNIO, bytes)\n    }\n  }\n"
  }
]