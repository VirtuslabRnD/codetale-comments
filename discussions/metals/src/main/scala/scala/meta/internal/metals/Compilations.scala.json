[
  {
    "id" : "f9c523f5-9959-40b9-808e-3d118fcf74ad",
    "prId" : 2450,
    "prUrl" : "https://github.com/scalameta/metals/pull/2450#pullrequestreview-580386813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c914261d-216e-4bc7-9ed6-35a2d11f0eca",
        "parentId" : null,
        "authorId" : "24cf7a8d-94ae-4285-8349-87948a6d589f",
        "body" : "I am not really sure about this - should it not compile all inverse dependencies and not just leaves? Should it even care about inverse dependencies?",
        "createdAt" : "2021-01-30T12:36:31Z",
        "updatedAt" : "2021-01-30T12:40:16Z",
        "lastEditedBy" : "24cf7a8d-94ae-4285-8349-87948a6d589f",
        "tags" : [
        ]
      },
      {
        "id" : "b5b352e7-1957-49de-a360-8fa109528163",
        "parentId" : "c914261d-216e-4bc7-9ed6-35a2d11f0eca",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Leaves will trigger also the compilation of their dependencies, so we should be good.",
        "createdAt" : "2021-02-01T14:08:43Z",
        "updatedAt" : "2021-02-01T14:29:42Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa7fe079b0e12a163f61899e25eccce6647aec55",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +97,101 @@\n  def cascadeCompile(targets: Seq[BuildTargetIdentifier]): Future[Unit] = {\n    val inverseDependencyLeaves =\n      targets.flatMap(buildTargets.inverseDependencyLeaves).distinct\n    cascadeBatch(inverseDependencyLeaves).map(_ => ())"
  },
  {
    "id" : "0e5c9508-9429-4b7f-8e10-aeeb086e4027",
    "prId" : 1538,
    "prUrl" : "https://github.com/scalameta/metals/pull/1538#pullrequestreview-386757818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80062614-fc67-40a5-bfaf-6dae28b757ff",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Why the change? I think it's better to keep the result rather than just return unit.",
        "createdAt" : "2020-03-31T16:57:04Z",
        "updatedAt" : "2020-05-21T11:17:43Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "fc902cd8-b1d8-4cc0-9c4b-624d1e7bbb74",
        "parentId" : "80062614-fc67-40a5-bfaf-6dae28b757ff",
        "authorId" : "afb3cd5f-1370-41cc-8c46-17eff77455d0",
        "body" : "See my comment above.",
        "createdAt" : "2020-04-02T20:08:20Z",
        "updatedAt" : "2020-05-21T11:17:44Z",
        "lastEditedBy" : "afb3cd5f-1370-41cc-8c46-17eff77455d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "0681fa0b1417b7ac622101d279667c6900a2506e",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +75,79 @@  }\n\n  def compileFiles(paths: Seq[AbsolutePath]): Future[Unit] = {\n    val targets = expand(paths)\n    for {"
  }
]