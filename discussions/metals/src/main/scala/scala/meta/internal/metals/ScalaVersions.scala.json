[
  {
    "id" : "49090454-557e-4e1c-8321-c37f018f22bd",
    "prId" : 2600,
    "prUrl" : "https://github.com/scalameta/metals/pull/2600#pullrequestreview-618603072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aeac6f2-da9f-44c5-81b2-a6290d82e164",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Could you add examples here an how it will be matched? \r\n\r\nAlso are we just able to just:\r\n1. Get the version suffix\r\n2. Check if binary version exists\r\n3. If it doesn't exist the it's full scala version and let's use scalaBinaryVersionFromJarName",
        "createdAt" : "2021-03-16T17:41:22Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "e34e0993-c6e5-4bf7-997a-ddf50f5786fd",
        "parentId" : "9aeac6f2-da9f-44c5-81b2-a6290d82e164",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "Added doc.\r\n\r\n> Get the version suffix\r\n\r\nHypothetically there might be some artifacts which version matches on scala version.\r\nSmth like `library-name_3.0.0-RC1-2.12` .\r\nAnd it's anyway unclear where is the version suffix starts in case if artifact name has `-` symbols",
        "createdAt" : "2021-03-23T13:42:52Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "028b3ff710580df42fff3574f99c743c9649e48c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +122,126 @@        val minor = m.group(3)\n        val ending = Option(m.group(4)).map(s => s\"$s\").getOrElse(\"\")\n        val version = s\"$major.$minor$ending\"\n        if (isSupportedScalaBinaryVersion(version))\n          Some(version -> hasUnderscorePrefix)"
  },
  {
    "id" : "27f21112-94e6-4360-9915-288938a5ae32",
    "prId" : 2600,
    "prUrl" : "https://github.com/scalameta/metals/pull/2600#pullrequestreview-624640157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56889e15-7ea0-4450-8a9c-cb6d68013ed5",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Could you add a link to the BSP PR to provide a context on how we plan to make it not depend on regex,",
        "createdAt" : "2021-03-29T15:09:15Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "c425be53-e166-4e4a-aef1-776b46c179d2",
        "parentId" : "56889e15-7ea0-4450-8a9c-cb6d68013ed5",
        "authorId" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "body" : "Unfortunately, we will anyway have to keep this thing. The new BSP method will be optional.\r\nThere will be an additional less creepy version of this method for it.",
        "createdAt" : "2021-03-30T19:42:45Z",
        "updatedAt" : "2021-04-01T21:54:41Z",
        "lastEditedBy" : "2df071f3-6c0f-4323-b87d-c872a042f228",
        "tags" : [
        ]
      }
    ],
    "commit" : "028b3ff710580df42fff3574f99c743c9649e48c",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +103,107 @@\n  /**\n   * Extract scala binary version from dependency jar name.\n   * The version that starts from `_` prefix takes more precedence.\n   * Example:"
  },
  {
    "id" : "dc43a946-b2ca-4abd-8530-732d14c1e6ff",
    "prId" : 2264,
    "prUrl" : "https://github.com/scalameta/metals/pull/2264#pullrequestreview-539513185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbc9108d-05c0-4654-ae9a-2a855ad91a39",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "This was the main issue. `3.0.0-M1` was equal to `3.0.0-M2`, because we were comparing only major/minor/patch. \r\nI fixed it twofold: \r\n- it will not say it's a future version if it's equal \r\n- it  support also milestones/release candidates now\r\n",
        "createdAt" : "2020-11-26T18:56:32Z",
        "updatedAt" : "2020-11-27T14:42:44Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebff9647fa554cc267882722df8ff7f1a60d894e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +61,65 @@      .map(latest =>\n        latest != scalaVersion && SemVer\n          .isLaterVersion(latest, scalaVersion)\n      )\n      .getOrElse {"
  },
  {
    "id" : "ed541d9b-d9a8-4d36-b575-ca0b04a8c34c",
    "prId" : 2190,
    "prUrl" : "https://github.com/scalameta/metals/pull/2190#pullrequestreview-523658682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6de1771f-5c46-46c4-830d-23ab30bda42c",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "I wasn't expecting the binary version here to be `3.0.0-M1`. At the same time, I was also wasn't expected `org.scala-lang:scala3-library_3.0.0-M1:3.0.0-M1` but rather just `org.scala-lang:scala3-library:3.0.0-M1`. ðŸ¤” ",
        "createdAt" : "2020-11-04T19:04:46Z",
        "updatedAt" : "2020-11-06T10:08:14Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      },
      {
        "id" : "44d9b0ca-2351-40d8-b364-0ba11a510124",
        "parentId" : "6de1771f-5c46-46c4-830d-23ab30bda42c",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Yeah, I was surprised by it too, but it seems that's how it's done currently :thinking: ",
        "createdAt" : "2020-11-04T19:10:50Z",
        "updatedAt" : "2020-11-06T10:08:14Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b135a6d205cffd61ee131ead0d6326569af38c30",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +78,82 @@  def scalaBinaryVersionFromFullVersion(scalaVersion: String): String = {\n    if (scalaVersion == \"3.0.0-M1\")\n      scalaVersion\n    else\n      scalaVersion.split('.').take(2).mkString(\".\")"
  },
  {
    "id" : "d201113d-e4ae-4b98-a38a-679a130aab47",
    "prId" : 818,
    "prUrl" : "https://github.com/scalameta/metals/pull/818#pullrequestreview-258847218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dbfcaaf-56aa-4b77-8c51-1db12e5d04e5",
        "parentId" : null,
        "authorId" : "5d3fc62d-6609-423f-a804-99320b4d08c3",
        "body" : "I guess it's fine to leave 2.12.8 as the recommended version for now?",
        "createdAt" : "2019-07-08T11:41:27Z",
        "updatedAt" : "2019-07-08T11:41:27Z",
        "lastEditedBy" : "5d3fc62d-6609-423f-a804-99320b4d08c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ef9cb7e64a9e60e4a63baea23dd3c8afce7cf9d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +23,27 @@    Set(BuildInfo.scala213, BuildInfo.scala212, BuildInfo.scala211)\n\n  def recommendedVersion(scalaVersion: String): String = BuildInfo.scala212\n\n}"
  }
]