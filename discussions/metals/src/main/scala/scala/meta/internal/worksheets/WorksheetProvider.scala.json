[
  {
    "id" : "2a2b3f44-199f-43c9-a59b-ccc217077ced",
    "prId" : 2290,
    "prUrl" : "https://github.com/scalameta/metals/pull/2290#pullrequestreview-551724648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca8a8a00-3a34-4fbe-ba07-613c7ca95ca7",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Should we remove a key if a file was closed?",
        "createdAt" : "2020-12-14T17:26:13Z",
        "updatedAt" : "2020-12-14T18:00:09Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "2efd69ca-d9f6-4ba1-8228-d7dad622b23e",
        "parentId" : "ca8a8a00-3a34-4fbe-ba07-613c7ca95ca7",
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "I _don't think_ it really matters. Mainly because if you close a worksheet, you won't be able to send in a request to get the evaluations for that URI until it's open again, and that opening would re-evaluate and update this anyways. So I don't think there is much there we need to worry about.",
        "createdAt" : "2020-12-14T17:54:53Z",
        "updatedAt" : "2020-12-14T18:00:09Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "59cebc6f2471e834b277535472b36f87fc219b2f",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +326,330 @@    val newDigest = calculateDigest(classpath)\n\n    exportableEvaluations.update(\n      input,\n      evaluatedWorksheet"
  },
  {
    "id" : "97a5c917-a7e9-4daf-a741-1a6d1d3d72ea",
    "prId" : 2190,
    "prUrl" : "https://github.com/scalameta/metals/pull/2190#pullrequestreview-525099509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7765a67-c1d5-4c8a-b756-648941ff0523",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "So I was curious what would happen if I was still no 0.27, and this is shown in the logs\r\n```\r\n2020.11.06 13:03:03 WARN  worksheet: unsupported Scala version '0.27.0-RC1', using Scala version '2.12.12' without classpath instead.\r\nworksheet: to fix this problem use Scala version '3.0.0-M1'.\r\n```\r\nWe don't have to do this now, but what do you think about actually floating this up to the user? I think it might be confusing for someone since I'm not sure I'd expect it to revert to 2.12.12 without the classpath. It may cause confusion.",
        "createdAt" : "2020-11-06T12:05:00Z",
        "updatedAt" : "2020-11-06T12:07:54Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      },
      {
        "id" : "d4d65315-bf04-45ed-baaa-cba2503b3541",
        "parentId" : "e7765a67-c1d5-4c8a-b756-648941ff0523",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Yeah, it might be good to do, I will try to follow up with that and merge this so that people can start testing out 3.0.0-M1",
        "createdAt" : "2020-11-06T12:15:45Z",
        "updatedAt" : "2020-11-06T12:15:45Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b135a6d205cffd61ee131ead0d6326569af38c30",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +316,320 @@      // Worksheet support for Scala 3 is only working currently for 3.0.0-M1\n      ScalaVersions.isScala3Version(scalaVersion) && SemVer.isCompatibleVersion(\n        \"3.0.0\",\n        scalaVersion\n      )"
  },
  {
    "id" : "981f03f5-49b0-4d0c-8ca1-590892e69995",
    "prId" : 1986,
    "prUrl" : "https://github.com/scalameta/metals/pull/1986#pullrequestreview-465097456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d64f8fe-f390-4730-bcf5-613da0920563",
        "parentId" : null,
        "authorId" : "84490516-a7af-4f7f-9947-360c279c4400",
        "body" : "Can we include a note either here or in the commit to why it has to be 0.26.0 or newer.",
        "createdAt" : "2020-08-11T14:04:02Z",
        "updatedAt" : "2020-08-11T14:17:42Z",
        "lastEditedBy" : "84490516-a7af-4f7f-9947-360c279c4400",
        "tags" : [
        ]
      }
    ],
    "commit" : "660a10c9f889aaf4d513c017763508d145468845",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +297,301 @@      // Worksheet support for Scala 3 started with 0.26.0-RC1\n      ScalaVersions.isScala3Version(scalaVersion) && SemVer.isCompatibleVersion(\n        \"0.26.0\",\n        scalaVersion\n      )"
  },
  {
    "id" : "528dedf9-e309-4288-90bf-5700df0d533b",
    "prId" : 1856,
    "prUrl" : "https://github.com/scalameta/metals/pull/1856#pullrequestreview-438039396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "417934e6-4c66-4319-b06f-12ca40eb41a7",
        "parentId" : null,
        "authorId" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "body" : "that was this incompatibility with newest mdoc? :laughing: ",
        "createdAt" : "2020-06-25T22:17:00Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "tags" : [
        ]
      },
      {
        "id" : "5186112a-a99a-4b7a-bba3-8a4adae7fd4c",
        "parentId" : "417934e6-4c66-4319-b06f-12ca40eb41a7",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "That's the change for worksheet to be able to include dependencies.",
        "createdAt" : "2020-06-26T06:19:41Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +253,257 @@    val mdoc = getMdoc(path)\n    val input = path.toInputFromBuffers(buffers)\n    val relativePath = path.toRelative(workspace)\n    val worksheet = mdoc.evaluateWorksheet(relativePath.toString(), input.value)\n    val classpath = worksheet.classpath().asScala.toList"
  },
  {
    "id" : "1559561b-70aa-4444-8716-83bad675c786",
    "prId" : 1523,
    "prUrl" : "https://github.com/scalameta/metals/pull/1523#pullrequestreview-387426452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b09df42d-e46b-4667-aea5-df96c1916e55",
        "parentId" : null,
        "authorId" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "body" : "Question(not strongly related to this PR): Why scala 212 not 213?",
        "createdAt" : "2020-03-31T14:58:12Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "tags" : [
        ]
      },
      {
        "id" : "77472590-5922-42dc-8d8d-43a744745960",
        "parentId" : "b09df42d-e46b-4667-aea5-df96c1916e55",
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "It's the one used in Metals and we're most likely more sure about it. But there is no particular reason aside from that. ",
        "createdAt" : "2020-04-03T16:57:08Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1142490703f832961ac0df1debd14b4f3b12ce7d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +261,265 @@          if (!isSupported) {\n            scribe.warn(\n              s\"worksheet: unsupported Scala version '${scalaVersion}', using Scala version '${BuildInfo.scala212}' without classpath instead.\\n\" +\n                s\"worksheet: to fix this problem use Scala version '${BuildInfo.scala212}'.\"\n            )"
  },
  {
    "id" : "72c96fc7-3fab-4684-9fc8-69d1e1bc0550",
    "prId" : 1498,
    "prUrl" : "https://github.com/scalameta/metals/pull/1498#pullrequestreview-374268748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7825965f-41ba-4776-9006-3f5c70f23b34",
        "parentId" : null,
        "authorId" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "body" : "catching all exceptions is handled in mdoc and they are converted to NonFatal errors which are already handled, this case is not related to mentioned issue, right?",
        "createdAt" : "2020-03-13T09:47:42Z",
        "updatedAt" : "2020-03-13T09:47:42Z",
        "lastEditedBy" : "a9556b50-da77-420c-9fe7-08817ae53bff",
        "tags" : [
        ]
      },
      {
        "id" : "2302642f-3943-4afa-91ba-c4811b4639d0",
        "parentId" : "7825965f-41ba-4776-9006-3f5c70f23b34",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "It's correct that they should be caught by mdoc now but I added this case nevertheless to be sure. If there's something fatally broken about the JVM I suspect it will show up in the logs regardless.",
        "createdAt" : "2020-03-13T12:43:12Z",
        "updatedAt" : "2020-03-13T12:43:12Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7b2e97c71c369fcf2ba52cb52e01680d3951447",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +123,127 @@        None\n      case e: Throwable =>\n        // NOTE(olafur): we catch all exceptions because of https://github.com/scalameta/metals/issues/1456\n        scribe.error(s\"worksheet: $path\", e)\n        None"
  },
  {
    "id" : "a3575274-5fb4-4028-a76c-321d717587e7",
    "prId" : 1070,
    "prUrl" : "https://github.com/scalameta/metals/pull/1070#pullrequestreview-318218273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2217cf94-d0a5-4c58-86a9-d9abc03187f4",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "`s` seems to get a bit lost in the code. Maybe at least `stmt` ? You can test rename on this :sweat_smile: ",
        "createdAt" : "2019-11-18T10:22:02Z",
        "updatedAt" : "2019-11-20T13:47:26Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e9ddf5e5c6478ce25ea66ea4938fa0c64f27aba",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +214,218 @@          .iterator()\n          .asScala\n          .map { s =>\n            new DecorationOptions(\n              toLsp(s.position()),"
  },
  {
    "id" : "9c10ff03-893e-46fa-bc6a-ef019b7247c5",
    "prId" : 1041,
    "prUrl" : "https://github.com/scalameta/metals/pull/1041#pullrequestreview-314519884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1316d16c-6990-43f9-8a98-81c3f4b8978d",
        "parentId" : null,
        "authorId" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "body" : "Maybe this would be a bit more clear:\r\n```\r\nval color = binder.tpe.render(TPrintColors.BlackWhite)\r\nout.append(s\"\\n${binder.name}: $color: \")\r\n``` \r\n?",
        "createdAt" : "2019-11-07T11:19:49Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : "f252b48f-54a9-478d-8bbb-85f01e5c28e7",
        "tags" : [
        ]
      },
      {
        "id" : "d617011f-0b1a-4039-84fb-606e04eaec83",
        "parentId" : "1316d16c-6990-43f9-8a98-81c3f4b8978d",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Not really IMO. When using string builders it's usually best to append individual strings",
        "createdAt" : "2019-11-09T00:12:36Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +225,229 @@    if (!isEmptyValue) {\n      statement.binders.iterator.foreach { binder =>\n        out\n          .append(\"\\n\")\n          .append(binder.name)"
  }
]