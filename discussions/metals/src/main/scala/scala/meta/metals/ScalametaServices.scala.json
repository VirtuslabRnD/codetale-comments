[
  {
    "id" : "ce65c372-c4e5-4876-ab82-1167830a9a7b",
    "prId" : 204,
    "prUrl" : "https://github.com/scalameta/metals/pull/204#pullrequestreview-107390314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d79f5a2-24d4-42e5-b523-9936c6399229",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Have you tried to dynamically unregister capabilities? I think it makes sense to keep this guard regardless because I'm not sure if we can rely on it in case a client like vim/sublime to respect dynamic capabilities. Just curious to see if it works.",
        "createdAt" : "2018-03-21T18:07:10Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "d006944b-38c7-4c24-968d-3740fa37a784",
        "parentId" : "7d79f5a2-24d4-42e5-b523-9936c6399229",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Sorry, didn't get what you're saying here. Do you really mean dynamically unregister capabilities or you mean just enable/disable this setting in the config?",
        "createdAt" : "2018-03-25T00:01:32Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "3be30808-64fd-4784-ba58-8ea7b2c1b130",
        "parentId" : "7d79f5a2-24d4-42e5-b523-9936c6399229",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I was thinking of using `client/unregisterCapability` https://microsoft.github.io/language-server-protocol/specification#client_unregisterCapability\r\n\r\nI think it's best to do it like here in the PR because dynamic capabilities may not be supported by all clients, but I was just wondering if you had tried to used `unregisterCapabilities`",
        "createdAt" : "2018-03-26T13:49:10Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "6ebb0d51-b6a4-4e28-a8aa-15291f13525d",
        "parentId" : "7d79f5a2-24d4-42e5-b523-9936c6399229",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Ah, now I understand: when some feature gets enabled/disabled in the config, we should register/unregister the corresponding capability. \r\n\r\nI agree that it's correct, but we don't register capabilities dynamically yet and you're right that it's not widely supported (Atom doesn't support it, for instance), so I'd suggest we address it later, probably after #163.",
        "createdAt" : "2018-03-26T22:01:04Z",
        "updatedAt" : "2018-03-26T22:01:04Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "cc708300-eef3-49c8-b2e5-d66840c25088",
        "parentId" : "7d79f5a2-24d4-42e5-b523-9936c6399229",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I agree this should be explored later, esp. if it's not even supported by atom 👍 ",
        "createdAt" : "2018-03-27T17:27:55Z",
        "updatedAt" : "2018-03-27T17:28:32Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "15398a10a92978b2096e501f8c36977849adc782",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +312,316 @@    }\n    .request(td.documentHighlight) { params =>\n      if (latestConfig().highlight.enabled) {\n        DocumentHighlightProvider.highlight(\n          symbolIndex,"
  }
]