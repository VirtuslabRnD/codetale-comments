[
  {
    "id" : "ae97640e-265b-402d-878f-f074f591cb3b",
    "prId" : 154,
    "prUrl" : "https://github.com/scalameta/metals/pull/154#pullrequestreview-85430810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "114ca309-578f-4c98-8064-56e7bf19bb10",
        "parentId" : null,
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Would it be possible (in the future) to adapt Scalafix rewrites to code actions so that it won't be necessary to define a `WorkspaceCommand` for each type of rewrite? ",
        "createdAt" : "2017-12-26T01:46:26Z",
        "updatedAt" : "2017-12-29T12:34:28Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "5b75f962-3c57-4a08-94ab-c25dab666868",
        "parentId" : "114ca309-578f-4c98-8064-56e7bf19bb10",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Scalafix absolutely, scalafix can run custom rules from configuration in .scalafix.conf, we can probably embed that config as command arguments to get away with only a single `Scalafix` WorkspaceCommand. ",
        "createdAt" : "2017-12-29T12:26:00Z",
        "updatedAt" : "2017-12-29T12:34:28Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdc9c838e9c14f4d811f77cd7768c91f492170e0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +11,15 @@  case object ClearIndexCache extends WorkspaceCommand\n  case object ResetPresentationCompiler extends WorkspaceCommand\n  case object ScalafixUnusedImports extends WorkspaceCommand\n\n  val values = findValues"
  },
  {
    "id" : "c54c8a3c-4c2e-4b74-9c7b-4980fbc1d97e",
    "prId" : 131,
    "prUrl" : "https://github.com/scalameta/metals/pull/131#pullrequestreview-83780153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "072c3ab3-e845-4d0b-bc58-196a58856080",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I went for a `lowerCamelCase` convention here and thanks to `Uncapitalised` this is automatically handled by `withNameOption` and `entryName`",
        "createdAt" : "2017-12-15T11:17:41Z",
        "updatedAt" : "2017-12-15T11:25:20Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "867e5b2b0a081dfb481be2a14c9b7bffa47a2d98",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@import enumeratum.EnumEntry.Uncapitalised\n\nsealed trait WorkspaceCommand extends EnumEntry with Uncapitalised\n\ncase object WorkspaceCommand extends Enum[WorkspaceCommand] {"
  }
]