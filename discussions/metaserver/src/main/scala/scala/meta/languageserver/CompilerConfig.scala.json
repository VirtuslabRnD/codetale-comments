[
  {
    "id" : "90ef3089-08b1-4c6c-b72f-734710cb91a1",
    "prId" : 23,
    "prUrl" : "https://github.com/scalameta/metals/pull/23#pullrequestreview-75936606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3a61adc-3470-4f92-8628-f6df6a15ef07",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "Why are we using IO and NIO?",
        "createdAt" : "2017-11-11T16:42:11Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "2c829d5c-9bd3-4674-98e5-2e0ce1a78376",
        "parentId" : "a3a61adc-3470-4f92-8628-f6df6a15ef07",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "java.io is only for `File.pathSeparator`, otherwise we use nio for I/O work",
        "createdAt" : "2017-11-11T16:46:34Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "23a3ea6f-4306-4ba8-a0e3-26233277b87a",
        "parentId" : "a3a61adc-3470-4f92-8628-f6df6a15ef07",
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "NIO Filesystem has a platform independent separator if you want to stick with the NIO api.",
        "createdAt" : "2017-11-11T16:59:42Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "452b5e63-9998-4d4d-b6a5-d1f6cec4d7c5",
        "parentId" : "a3a61adc-3470-4f92-8628-f6df6a15ef07",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I think I prefer java.io.File.pathSeparator over FileSystems.getDefault.getSeparator",
        "createdAt" : "2017-11-11T17:03:46Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@\nimport java.io.File\nimport java.nio.file.Files\nimport java.nio.file.Paths\nimport java.util.Properties"
  },
  {
    "id" : "4601d0c4-e113-43df-910f-553bc7031f78",
    "prId" : 23,
    "prUrl" : "https://github.com/scalameta/metals/pull/23#pullrequestreview-76549139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b6a212c-5e91-4ec5-aaeb-6ba7ed382a90",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "since we have pprint as a dependency, you can probably just do `pprint.stringify(this)`",
        "createdAt" : "2017-11-14T09:36:04Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "51e608fa-2cbd-4065-a0c4-b06ae8bcc138",
        "parentId" : "0b6a212c-5e91-4ec5-aaeb-6ba7ed382a90",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I can't find `pprint.stringify`, it seems to have been removed in 0.5. I don't think pprint includes the names of the fields. This string appears in the logs whenever a new presentation compiler is loaded so I customized it to make it compact and readable (full classpath can be huge).",
        "createdAt" : "2017-11-14T18:43:57Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@) {\n  override def toString: String =\n    s\"CompilerConfig(\" +\n      s\"sources={+${sources.length}}, \" +\n      s\"scalacOptions=${scalacOptions.mkString(\" \")}, \" +"
  }
]