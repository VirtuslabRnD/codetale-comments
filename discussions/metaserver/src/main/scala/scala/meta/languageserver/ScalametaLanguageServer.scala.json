[
  {
    "id" : "732496df-3d9b-4719-a630-3d2d91978f6b",
    "prId" : 158,
    "prUrl" : "https://github.com/scalameta/metals/pull/158#pullrequestreview-85425532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30a89a59-680f-44f6-a5bb-f94f42360ffb",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "Why do we have connection here as well as lspIn and lspOut passed in?  I thought connection was just a wrapper around lspIn and lspOut.",
        "createdAt" : "2017-12-23T16:13:46Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "7bed036d-52c3-4bb9-a706-3b9702ae2312",
        "parentId" : "30a89a59-680f-44f6-a5bb-f94f42360ffb",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "connection has higher level methods such as `showMessage`.\r\n\r\n`lspIn` and `lspOut` are just used to initialize it (via the `LanguageServer` constructor)",
        "createdAt" : "2017-12-23T16:15:27Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +97,101 @@    )\n  val (configurationSubscriber, configurationPublisher) =\n    ScalametaLanguageServer.configurationStream(connection)\n  val buffers: Buffers = Buffers()\n  val symbolIndex: SymbolIndex ="
  },
  {
    "id" : "9bf4eee7-4487-4e6c-929a-755e49fcc3dc",
    "prId" : 157,
    "prUrl" : "https://github.com/scalameta/metals/pull/157#pullrequestreview-85425014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a368927-e24f-4331-8945-8c3b93a5efbc",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "\\o/",
        "createdAt" : "2017-12-23T15:36:40Z",
        "updatedAt" : "2017-12-23T20:00:10Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      }
    ],
    "commit" : "02644898b8f2599b71ec40803a680168214c8fd9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +293,297 @@      request: TextDocumentHoverRequest\n  ): Task[Hover] = Task {\n    HoverProvider.hover(\n      symbolIndex,\n      Uri(request.params.textDocument),"
  },
  {
    "id" : "56374692-25a5-4bb8-902b-92a7381856d2",
    "prId" : 131,
    "prUrl" : "https://github.com/scalameta/metals/pull/131#pullrequestreview-83784788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39fed489-bb16-4db4-b087-e5786ab4ba91",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "if somebody knows a better way of recursively deleting a directory with Java NIO, please let me know!",
        "createdAt" : "2017-12-15T11:14:50Z",
        "updatedAt" : "2017-12-15T11:25:20Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "b2af004d-a843-4731-b846-86740f75c111",
        "parentId" : "39fed489-bb16-4db4-b087-e5786ab4ba91",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "This is the best way to do it IMO :) It should be verbose!",
        "createdAt" : "2017-12-15T11:41:03Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "3c5ec89a-8b19-41e1-95c5-6f317b9ba717",
        "parentId" : "39fed489-bb16-4db4-b087-e5786ab4ba91",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "On a more serious note, this might merit inclusion in `org.langmeta.io.FileIO` where we have similar utils ",
        "createdAt" : "2017-12-15T11:41:41Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "867e5b2b0a081dfb481be2a14c9b7bffa47a2d98",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +348,352 @@  }\n\n  def clearCacheDirectory(): Unit =\n    Files.walkFileTree(\n      cacheDirectory.toNIO,"
  },
  {
    "id" : "cc1340c1-e6ae-4853-a282-e5b036d4dfa1",
    "prId" : 78,
    "prUrl" : "https://github.com/scalameta/metals/pull/78#pullrequestreview-80612938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3e042a-418c-4d1f-84b4-d3fe82ec7a01",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "ðŸŽ‰ ",
        "createdAt" : "2017-12-01T20:32:30Z",
        "updatedAt" : "2017-12-02T23:22:47Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "71da2fa975b8fb36cd888c23d0a8b0214a68e679",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +117,121 @@      ),\n      definitionProvider = true,\n      referencesProvider = true,\n      documentSymbolProvider = true,\n      documentFormattingProvider = true,"
  },
  {
    "id" : "570c367d-176c-477e-ba47-a69a21b6f603",
    "prId" : 34,
    "prUrl" : "https://github.com/scalameta/metals/pull/34#pullrequestreview-76929300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8742f624-3bba-48dc-8ee4-37438f22719e",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "What about `package a`?",
        "createdAt" : "2017-11-15T10:45:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "549c852d-67f2-41c2-94e5-932170039c1c",
        "parentId" : "8742f624-3bba-48dc-8ee4-37438f22719e",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "It falls into the `Member` case, so it will be just its `name` `a`. \r\nThis whole `qualifiedName` method is here **only** for the packages with `Select`, because their default `name` is just the last part and I think it's useful to see the full name in the outline.",
        "createdAt" : "2017-11-15T12:42:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "d4a59bb2-35d3-4442-adfe-25943ef07eac",
        "parentId" : "8742f624-3bba-48dc-8ee4-37438f22719e",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I see, nice!",
        "createdAt" : "2017-11-15T21:04:34Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +225,229 @@      case Term.Select(qual, name) =>\n        qualifiedName(qual).map { prefix => s\"${prefix}.${name}\" }\n      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>"
  },
  {
    "id" : "5db9683b-e65c-40f4-a6a4-01cbfe9a6e74",
    "prId" : 34,
    "prUrl" : "https://github.com/scalameta/metals/pull/34#pullrequestreview-76936879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5720afcc-7eb5-473e-9082-97a440fdf7e5",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Glad you found this! Took me a while to learn about it :)",
        "createdAt" : "2017-11-15T10:45:49Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "01eddca3-b1ea-4906-a1ed-24d20dd3d7d8",
        "parentId" : "5720afcc-7eb5-473e-9082-97a440fdf7e5",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "What do you mean? ðŸ˜… ",
        "createdAt" : "2017-11-15T12:43:54Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "87d2f5fd-6e45-4531-9a9a-d80807aefa69",
        "parentId" : "5720afcc-7eb5-473e-9082-97a440fdf7e5",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I wasn't aware of `Member` until quite recently, always found it frustrating to handle all val/val/def/class/trait/object cases",
        "createdAt" : "2017-11-15T21:04:24Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "bc4437b7-57e9-43ab-881d-be265cecac0b",
        "parentId" : "5720afcc-7eb5-473e-9082-97a440fdf7e5",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Ah, yes, it's very helpful. I just searched for whatever with `name`, when I wanted to match it with symbols from the indexer ðŸ˜„ ",
        "createdAt" : "2017-11-15T21:31:22Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +227,231 @@      case Pkg(sel: Term.Select, _) =>\n        qualifiedName(sel)\n      case m: Member =>\n        Some(m.name.value)\n      case _ => None"
  },
  {
    "id" : "790fcc92-2592-47e3-b7e8-76b01c17616b",
    "prId" : 34,
    "prUrl" : "https://github.com/scalameta/metals/pull/34#pullrequestreview-76938898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdc40ac9-59b3-477c-a84b-a35615d692bb",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "FYI `scala.meta.contrib._` adds a `.filter` on `Tree`",
        "createdAt" : "2017-11-15T21:08:20Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "bb8dd31d-9072-4938-9040-6128cbfb5319",
        "parentId" : "fdc40ac9-59b3-477c-a84b-a35615d692bb",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Thanks, I was looking for it but found after I wrote this and then forgot to change it.",
        "createdAt" : "2017-11-15T21:38:00Z",
        "updatedAt" : "2017-11-19T16:29:37Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22b970a071cd204e5269d09dea51d6223971e22",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +236,240 @@    for {\n      tree <- contents.parse[Source].toOption.toList\n      node <- tree.collect {\n        case n if n.is[Member.Type] || n.is[Member.Term] => n\n      }"
  },
  {
    "id" : "6ca4f464-cfcb-4577-9346-7326a7085c8f",
    "prId" : 23,
    "prUrl" : "https://github.com/scalameta/metals/pull/23#pullrequestreview-76592583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a0616a5-d5f0-408b-9395-0dc592a6223f",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "should we also preload all existing `compilerconfig`files at launch, similarly to what we do with `semanticdb` files?",
        "createdAt" : "2017-11-14T09:21:37Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "1fd82b0b-cf1b-4e21-9eef-260939a7e16f",
        "parentId" : "9a0616a5-d5f0-408b-9395-0dc592a6223f",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "We do actually, since we call this method from loadAllSemanticdbs... method, I've renamed the method to be more descriptive.",
        "createdAt" : "2017-11-14T19:36:57Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "204d7b12-1ccb-4070-a8b9-176ff15a3aad",
        "parentId" : "9a0616a5-d5f0-408b-9395-0dc592a6223f",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "NB, we should really run that method asynchronously from the initialize method since it slows down server startup.",
        "createdAt" : "2017-11-14T19:37:27Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "c59a927e-8fb6-4bd4-9f17-45a0faa22cb6",
        "parentId" : "9a0616a5-d5f0-408b-9395-0dc592a6223f",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Yeah, in general I think initialize should return immediately and run the rest of the work asynchronously. We can even dynamically register for capabilities when the single services finish initializing.",
        "createdAt" : "2017-11-14T21:00:10Z",
        "updatedAt" : "2017-11-14T21:00:10Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +138,142 @@    name match {\n      case \"semanticdb\" => semanticdbSubscriber.onNext(path)\n      case \"compilerconfig\" => compilerConfigSubscriber.onNext(path)\n      case _ => fallback(path)\n    }"
  },
  {
    "id" : "9a7c386e-be07-4c8f-8af7-bc3aad322a3f",
    "prId" : 23,
    "prUrl" : "https://github.com/scalameta/metals/pull/23#pullrequestreview-76549139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c616d0c4-be67-429d-88fa-a2b44da19550",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "why is the overflow strategy gone?",
        "createdAt" : "2017-11-14T09:48:02Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "4d79dc44-3ca4-462f-a75c-a62c360a99b4",
        "parentId" : "c616d0c4-be67-429d-88fa-a2b44da19550",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I added it without knowing what it does. I think we should use the default unless we know what we're doing.",
        "createdAt" : "2017-11-14T19:34:18Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +48,52 @@    ScalametaLanguageServer.semanticdbStream\n  val (compilerConfigSubscriber, compilerConfigPublisher) =\n    Observable.multicast[AbsolutePath](MulticastStrategy.Publish)\n  def onError(e: Throwable): Unit = {\n    logger.error(e.getMessage, e)"
  },
  {
    "id" : "d41b914c-8a9b-4a40-8bd5-70e80ac03678",
    "prId" : 21,
    "prUrl" : "https://github.com/scalameta/metals/pull/21#pullrequestreview-75793041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "parentId" : null,
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Is it 100% sure that `tpeName` is never empty? ðŸ˜„ ",
        "createdAt" : "2017-11-10T15:03:40Z",
        "updatedAt" : "2017-11-10T15:03:40Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "a2e39f84-1435-47ad-9848-c7e0c8af5710",
        "parentId" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I tried hovering on everything and it never showed empty boxes ðŸ’ƒ \r\n\r\nOf course I may be wrong ^^",
        "createdAt" : "2017-11-10T15:05:06Z",
        "updatedAt" : "2017-11-10T15:05:06Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "be007195-7b83-4d48-968c-3415e37f961b",
        "parentId" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "I would still add a check here, if it's not an a priori known fact that `tpeName` cannot be empty.\r\n\r\nAnother question here: why did you remove the range parameter?",
        "createdAt" : "2017-11-10T15:07:31Z",
        "updatedAt" : "2017-11-10T15:07:31Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "a49b733a-b632-4ce8-92ff-a961d64f1537",
        "parentId" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I didn't find an easy way to retrieve that from the PC. I admit I didn't look hard for it, because vscode seems to handle it pretty well even without it.",
        "createdAt" : "2017-11-10T15:09:01Z",
        "updatedAt" : "2017-11-10T15:09:16Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "9ded5ec2-6100-4e75-a1cb-acd230ceac82",
        "parentId" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "As per the check, it'd be weird that `tree.tpe.widen` would return an empty string. I suppose if it ever comes up we can handle it pretty easily :)",
        "createdAt" : "2017-11-10T15:10:46Z",
        "updatedAt" : "2017-11-10T15:10:46Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "596c3dbb-797c-4b5e-ac8d-0096a1f73632",
        "parentId" : "286dc5af-087c-47f6-a946-0d032b443a2f",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Works great! ðŸ’¯ So cool!\r\nAnd yes, I thought that without range symbols won't be highlighted correctly, but both VS Code and Atom handle it very well.",
        "createdAt" : "2017-11-10T15:36:46Z",
        "updatedAt" : "2017-11-10T15:36:46Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "122ec665a5096b2c5408dc9d9320eac87adb0549",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +252,256 @@    compiler.typeAt(path, position.line, position.character) match {\n      case None => Hover(Nil, None)\n      case Some(tpeName) =>\n        Hover(\n          contents = List("
  }
]