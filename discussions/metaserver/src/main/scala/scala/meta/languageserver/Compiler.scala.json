[
  {
    "id" : "82b5892a-036e-43b5-b8c6-56aeaf1a4af3",
    "prId" : 45,
    "prUrl" : "https://github.com/scalameta/metals/pull/45#pullrequestreview-78580978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6189604f-e4f5-44a5-bc9f-63aac2a21bfe",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "I'm guessing this is safe for now but I worry this pattern will become dangerous in the future if the first task is mutating compiler globals and the second independent task is also working inside compiler.  I fear concurrency and mutation together in general though.",
        "createdAt" : "2017-11-22T21:16:46Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "8c21e2b2-12b3-4d9b-96d4-ea6c8837114c",
        "parentId" : "6189604f-e4f5-44a5-bc9f-63aac2a21bfe",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "The indexDependencyClasspath should be moved out of Compiler.scala since it doesn't do anything related to the compiler. Opened https://github.com/scalameta/language-server/issues/48",
        "createdAt" : "2017-11-22T21:20:05Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b899d0ababc60348d3fbfc05eefbfd0ba43538",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +44,48 @@        Observable.fromTask(\n          Task(loadNewCompilerGlobals(config))\n            .zip(Task(indexDependencyClasspath(config.sourceJars)))\n        )\n      }"
  },
  {
    "id" : "1ada6b2b-3c76-45b2-902e-70074ae33169",
    "prId" : 45,
    "prUrl" : "https://github.com/scalameta/metals/pull/45#pullrequestreview-78581724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bf20e0c-a54c-40d0-aeaa-e5afd9b3ab15",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "Is there any value in taking smaller locks during each individual indexDatabase call to give others time to jump in the gaps if it takes a long time to load indexes?",
        "createdAt" : "2017-11-22T21:19:07Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "7f14806b-ddfb-4050-957d-bc23eb702de8",
        "parentId" : "9bf20e0c-a54c-40d0-aeaa-e5afd9b3ab15",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "There is, I've opened https://github.com/scalameta/language-server/issues/49 to track improvements on this.",
        "createdAt" : "2017-11-22T21:22:50Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b899d0ababc60348d3fbfc05eefbfd0ba43538",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +127,131 @@    val sourceJarsToIndex = buf.result()\n    // Acquire a lock on the leveldb cache only during indexing.\n    LevelDBMap.withDB(cacheDirectory.resolve(\"leveldb\").toFile) { db =>\n      sourceJarsToIndex.foreach { path =>\n        logger.info(s\"Indexing classpath entry $path...\")"
  }
]