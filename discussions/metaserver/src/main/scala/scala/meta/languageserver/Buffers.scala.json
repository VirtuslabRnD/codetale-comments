[
  {
    "id" : "8f944baf-5c86-41be-ba65-0aa0cc36345b",
    "prId" : 93,
    "prUrl" : "https://github.com/scalameta/metals/pull/93#pullrequestreview-81028604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "324a2ae0-bdd0-446c-86ca-ce07fde6b3fe",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I was gonna propose that we convert this into some `Observable[Source]` for the active open buffer but I don't think that will work since we don't receive a notification when the active/focused buffer changes. We only receive notifications didChange and documentSymbols. \r\n\r\nI think keeping this in `Buffers` is actually not as bad as it seems at first sight. Can we maybe hook into the `didClose` event to remove stale sources?",
        "createdAt" : "2017-12-04T06:58:00Z",
        "updatedAt" : "2017-12-04T23:49:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "72e6e771-2464-4192-968f-51d5e7265881",
        "parentId" : "324a2ae0-bdd0-446c-86ca-ce07fde6b3fe",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "> I think keeping this in Buffers is actually not as bad as it seems at first sight.\r\n\r\nIs the parsed `Source` per buffer useful anywhere else?\r\n\r\n> Can we maybe hook into the didClose event to remove stale sources?\r\n\r\nGood idea, I will add it.",
        "createdAt" : "2017-12-04T20:10:35Z",
        "updatedAt" : "2017-12-04T23:49:22Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "933a9fc7-7e31-4f0d-b90a-7cc8de9ca0b9",
        "parentId" : "324a2ae0-bdd0-446c-86ca-ce07fde6b3fe",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "> Is the parsed Source per buffer useful anywhere else?\r\n\r\nYes, in scalafix. We should share the pipeline between the two, putting it in Buffers is a good start.",
        "createdAt" : "2017-12-04T21:52:38Z",
        "updatedAt" : "2017-12-04T23:49:22Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "2cf1955a-2f9a-4355-8ff2-8278299ac428",
        "parentId" : "324a2ae0-bdd0-446c-86ca-ce07fde6b3fe",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Added hook for `didClose` event in d890af94d4d84e3e2267a08f8b92ce761fa4a7a7. Should it also remove from the `contents` map?",
        "createdAt" : "2017-12-04T23:43:25Z",
        "updatedAt" : "2017-12-04T23:49:22Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b17cbf33208eb27890af0e9b1a6a7b9016afbcb",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +46,50 @@    Option(contents.get(path)).getOrElse(readFromDisk(path))\n\n  private val sources: JMap[AbsolutePath, Source] = new ConcurrentHashMap()\n  // Tries to parse and record it or fallback to an old source if it existed\n  def source(path: AbsolutePath): Option[Source] ="
  }
]