[
  {
    "id" : "e1c04dc2-2945-4b80-a987-ab18058c7660",
    "prId" : 195,
    "prUrl" : "https://github.com/scalameta/metals/pull/195#pullrequestreview-95756657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4524fcc8-c1b6-45a3-9f0a-1928af21c93f",
        "parentId" : null,
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "I'm not sure I'm doing it right. Probably it should be just `.request`? Why does `documentFormattingProvider.format` return response errors explicitly?",
        "createdAt" : "2018-02-10T16:37:19Z",
        "updatedAt" : "2018-02-11T19:15:09Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "9f2f1fd0-499b-4cda-8f88-2ca3cdc6de26",
        "parentId" : "4524fcc8-c1b6-45a3-9f0a-1928af21c93f",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I have a branch somewhere locally where I refactored the lsp4s API for requests to return `T` instead of `Either[Response.Error, T]`. Errors can instead be thrown as exception. I think this refactoring cleaned up a lot of code.\r\n\r\nThe reason it's `requestAsync` is simply because we don't have a combinator for synchronous explicit error handling.",
        "createdAt" : "2018-02-11T15:54:03Z",
        "updatedAt" : "2018-02-11T19:15:09Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "bb475e9e-5b1f-4088-b8a3-fa6a62c346c2",
        "parentId" : "4524fcc8-c1b6-45a3-9f0a-1928af21c93f",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "OK, I see",
        "createdAt" : "2018-02-11T19:17:28Z",
        "updatedAt" : "2018-02-11T19:17:28Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "eb2b11e5-6884-4ef7-8a38-c76f2afe22d2",
        "parentId" : "4524fcc8-c1b6-45a3-9f0a-1928af21c93f",
        "authorId" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "body" : "Btw, did you mean this branch: https://github.com/olafurpg/language-server/tree/refactoring? You mentioned it in #174.",
        "createdAt" : "2018-02-11T19:26:17Z",
        "updatedAt" : "2018-02-11T19:26:26Z",
        "lastEditedBy" : "3e802404-0641-48bd-8f56-4d5ab70d4eb9",
        "tags" : [
        ]
      },
      {
        "id" : "c63c1416-cd24-475b-b491-738e7535aa67",
        "parentId" : "4524fcc8-c1b6-45a3-9f0a-1928af21c93f",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "correct, I never polished it into a PR because there is too much happening in that PR. The relevant commit is https://github.com/olafurpg/language-server/commit/3a8c1a7a797a8fdea80cd913aa8f068de3624621",
        "createdAt" : "2018-02-12T11:22:25Z",
        "updatedAt" : "2018-02-12T11:22:26Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "37ef516caf63a83cb2af533a23f0de32c02ba087",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +263,267 @@      ()\n    }\n    .requestAsync(td.willSaveWaitUntil) { params =>\n      params.reason match {\n        case TextDocumentSaveReason.Manual if latestConfig().scalafmt.onSave =>"
  }
]