[
  {
    "id" : "a41108f6-66a2-456e-95ef-c7e1bd3f723b",
    "prId" : 45,
    "prUrl" : "https://github.com/scalameta/metals/pull/45#pullrequestreview-78585349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdca893f-6c0d-48af-b1ef-179f477b857d",
        "parentId" : null,
        "authorId" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "body" : "Given that withDB looks safe and convenient, and createDBThatIPromiseToClose looks less attractive, when would I use the unsafe version?  Is there enough overhead to withDB that I don't want to use it in some scenarios?",
        "createdAt" : "2017-11-22T21:33:28Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "d46783d7-7caa-4c3b-a17a-33eb363c3983",
        "tags" : [
        ]
      },
      {
        "id" : "228af8ed-af0b-4d2f-abda-8bfa81b7f5a0",
        "parentId" : "cdca893f-6c0d-48af-b1ef-179f477b857d",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I'm not sure yet. To be honest I'm kind of leaning towards sqlite with a single table\r\n\r\n```\r\ncreate table index(\r\nkey bytes primary key,\r\nvalue bytes,\r\nbinaryVersion string\r\n)\r\n```\r\nwhere we can upgrade binary version when we change the indexing algorithms and want clean up old indices.\r\n\r\nIt wouldn't be a big change from what we have now using plain jdbc, and we could avoid the locking issues.",
        "createdAt" : "2017-11-22T21:41:46Z",
        "updatedAt" : "2017-11-22T21:53:24Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b899d0ababc60348d3fbfc05eefbfd0ba43538",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@  }\n\n  def withDB[T](directory: File)(f: LevelDBMap => T): T = {\n    // TODO(olafur) gracefully fallback when the db is in use by another thread.\n    // can happen with multiple language servers running at the same time."
  }
]