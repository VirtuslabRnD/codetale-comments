[
  {
    "id" : "5959090c-b53d-45b1-ab65-b5f97d7bc5f5",
    "prId" : 13214,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13214#pullrequestreview-13690624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d78a40f3-bb42-4b4a-80b5-8b124a1ababc",
        "parentId" : null,
        "authorId" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "body" : "You might want to define structure for plain and immutable such as here https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13434/files#diff-92643af80dfab655413729df4df6fd6bR114\r\nIt's useful to have it typed.",
        "createdAt" : "2016-12-20T01:01:40Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "tags" : [
        ]
      },
      {
        "id" : "33214784-57a3-43e7-b21e-c01e9e72335e",
        "parentId" : "d78a40f3-bb42-4b4a-80b5-8b124a1ababc",
        "authorId" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "body" : "Thoughts on how this can be done without merging the plain and immutable structures?\r\n\r\nOr how to get this to work?\r\n```ts\r\nimport { reduxForm } from 'redux-form/immutable'\r\n```",
        "createdAt" : "2016-12-20T03:11:07Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "tags" : [
        ]
      },
      {
        "id" : "8d08d5be-1ddc-4f76-9db4-a28accedb287",
        "parentId" : "d78a40f3-bb42-4b4a-80b5-8b124a1ababc",
        "authorId" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "body" : "Ah just another file, immutable.d.ts. of course. ",
        "createdAt" : "2016-12-20T04:13:19Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "2843da4f6ec1a9a5902c6ff396e6a2e3230918f7",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +226,230 @@     * The structure object being used internally for values. You may wish to use 'deepEqual' from the structure.\n     */\n    structure: Object;\n}\n"
  },
  {
    "id" : "2328339b-9f17-47c4-bf22-e54703eb32dc",
    "prId" : 13214,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13214#pullrequestreview-14508791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d914e827-fc76-4366-b3f9-171e380b0696",
        "parentId" : null,
        "authorId" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "body" : "You should define a `Partial` type using new typescript 2.1 `keyof`. Otherwise the type check will expect to pass all required properties event if you don't want to specify them initially. \r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/pull/13434/files#diff-92643af80dfab655413729df4df6fd6bR14",
        "createdAt" : "2016-12-20T01:10:49Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "tags" : [
        ]
      },
      {
        "id" : "5b683d33-04ac-4ae0-96e3-7917bd8f73bf",
        "parentId" : "d914e827-fc76-4366-b3f9-171e380b0696",
        "authorId" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "body" : "Yes very excited about the new things in 2.1. I was dragging my feet on it though as IntelliJ isn't updated to support it (hoping for any day now).\r\n\r\nI have been defining all of my FormData implementations with optional properties for now.",
        "createdAt" : "2016-12-20T01:19:16Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "tags" : [
        ]
      },
      {
        "id" : "2337d93c-5a4d-4b78-bc6f-e52fb07fa7fc",
        "parentId" : "d914e827-fc76-4366-b3f9-171e380b0696",
        "authorId" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "body" : "I'm using intellij and webstorm, and both support ts 2.1 quite well. Try to update typescript globally. ",
        "createdAt" : "2016-12-20T01:26:13Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "ce6722c6-cf8d-4e9e-b4f2-07d1e2bcb965",
        "tags" : [
        ]
      },
      {
        "id" : "20e80a23-9ea8-4ad6-a17f-448ff314fbee",
        "parentId" : "d914e827-fc76-4366-b3f9-171e380b0696",
        "authorId" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "body" : "I'm on IntelliJ 2016.3.2 EAP and using TS 2.1.4. But last I checked `keyof` isn't recognized. Is it for you?",
        "createdAt" : "2016-12-20T01:29:34Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "e237e490-dd66-4177-b766-f510e0ba5cd3",
        "tags" : [
        ]
      },
      {
        "id" : "57e0e2df-38be-4c3b-b118-450aceed61be",
        "parentId" : "d914e827-fc76-4366-b3f9-171e380b0696",
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "If you use 2.1 features you will need to add [`// TypeScript Version: 2.1`](https://github.com/DefinitelyTyped/DefinitelyTyped#i-want-to-use-features-from-typescript-21) as the last line of the header.",
        "createdAt" : "2016-12-27T22:50:59Z",
        "updatedAt" : "2016-12-27T22:58:45Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2843da4f6ec1a9a5902c6ff396e6a2e3230918f7",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@     * { field1: 'value1', field2: 'value2' }.\n     */\n    initialValues?: FormData;\n\n    /**"
  }
]