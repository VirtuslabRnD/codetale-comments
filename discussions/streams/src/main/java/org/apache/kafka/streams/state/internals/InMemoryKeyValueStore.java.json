[
  {
    "id" : "b7a2c768-f502-4c65-b086-41e78ed31d31",
    "prId" : 7177,
    "prUrl" : "https://github.com/apache/kafka/pull/7177#pullrequestreview-272846082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7af6e7a-8292-48f1-90fb-ca0d3123a232",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The reason why `ConcurrentSkipListMap` did not implement it in this way is because it is designed to be async, and we need it that way to support IQ / stream thread concurrency.\r\n\r\nBut since only stream thread would put / delete into the map (assuming we forbid iterator.remove from the other PR so it is not allowed from IQ), then it is okay to have this field as non-volatile.",
        "createdAt" : "2019-08-08T21:12:33Z",
        "updatedAt" : "2019-08-09T20:29:01Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "9ba72bc5-6683-48fa-a258-4041934d7253",
        "parentId" : "a7af6e7a-8292-48f1-90fb-ca0d3123a232",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Yep, that was the reasoning ðŸ˜„ ",
        "createdAt" : "2019-08-08T21:24:20Z",
        "updatedAt" : "2019-08-09T20:29:01Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "71ceb47c4414e656a1d6897f61f6303c2837b889",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +36,40 @@    private final ConcurrentNavigableMap<Bytes, byte[]> map = new ConcurrentSkipListMap<>();\n    private volatile boolean open = false;\n    private long size = 0L; // SkipListMap#size is O(N) so we just do our best to track it\n\n    private static final Logger LOG = LoggerFactory.getLogger(InMemoryKeyValueStore.class);"
  }
]