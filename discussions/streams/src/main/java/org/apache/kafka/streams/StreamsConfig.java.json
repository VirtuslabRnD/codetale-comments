[
  {
    "id" : "07826718-70fd-46fd-a4b4-79cbf7339da2",
    "prId" : 3307,
    "prUrl" : "https://github.com/apache/kafka/pull/3307#pullrequestreview-100563118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65876f4f-cc67-4355-8e8e-db7dfd4d3724",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Can we keep the configs order alphabetically?",
        "createdAt" : "2018-03-01T04:39:17Z",
        "updatedAt" : "2018-03-08T22:16:54Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "8edcf0de-4e0a-4f6d-9269-9f99d89cfe3d",
        "parentId" : "65876f4f-cc67-4355-8e8e-db7dfd4d3724",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "See above.",
        "createdAt" : "2018-03-01T19:31:22Z",
        "updatedAt" : "2018-03-08T22:16:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1711c42e30e3fe20677282a33767cd005b63034",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +239,243 @@            + DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS + \"' or '\" + DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS + \"' as well\";\n\n    /** {@code default value.serde} */\n    public static final String DEFAULT_VALUE_SERDE_CLASS_CONFIG = \"default.value.serde\";\n    private static final String DEFAULT_VALUE_SERDE_CLASS_DOC = \"Default serializer / deserializer class for value that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. \""
  },
  {
    "id" : "b3eff712-4bc9-4c07-ab23-a26eeba8b715",
    "prId" : 4489,
    "prUrl" : "https://github.com/apache/kafka/pull/4489#pullrequestreview-92734196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf6b515f-e9d3-4db6-b369-bc4584886acc",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: `, and` (missing comma)",
        "createdAt" : "2018-01-30T21:49:28Z",
        "updatedAt" : "2018-01-30T22:14:17Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "20a554d3ee792e5b124a32207d968716664dd8ee",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +60,64 @@ * Can also be used to configure the Kafka Streams internal {@link KafkaConsumer}, {@link KafkaProducer} and {@link AdminClient}.\n * To avoid consumer/producer/admin property conflicts, you should prefix those properties using\n * {@link #consumerPrefix(String)}, {@link #producerPrefix(String)} and {@link #adminClientPrefix(String)}, respectively.\n * <p>\n * Example:"
  },
  {
    "id" : "149b3afa-3f3c-4cef-a698-539a633f77b7",
    "prId" : 4636,
    "prUrl" : "https://github.com/apache/kafka/pull/4636#pullrequestreview-123525275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1e601e3-68aa-4c0f-9d57-4fb384cf7d06",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "a question more for my information, why do we need this `SuppressWarnings` here?",
        "createdAt" : "2018-05-25T19:10:33Z",
        "updatedAt" : "2018-05-31T03:24:33Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "c49b9493-228a-4103-af64-246551fce11c",
        "parentId" : "c1e601e3-68aa-4c0f-9d57-4fb384cf7d06",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not strictly. However, Intellij shows a warning that those could be private because it's never used. It's just to get rid of those warnings. Can also revert if you insist.",
        "createdAt" : "2018-05-25T22:11:00Z",
        "updatedAt" : "2018-05-31T03:24:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a87bd5254155a9d60ba479371305ddaae99282d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +146,150 @@    // TODO: currently we cannot get the full topic configurations and hence cannot allow topic configs without the prefix,\n    //       this can be lifted once kafka.log.LogConfig is completely deprecated by org.apache.kafka.common.config.TopicConfig\n    @SuppressWarnings(\"WeakerAccess\")\n    public static final String TOPIC_PREFIX = \"topic.\";\n"
  },
  {
    "id" : "f988e982-d3e2-468c-8095-c77a48c82152",
    "prId" : 4746,
    "prUrl" : "https://github.com/apache/kafka/pull/4746#pullrequestreview-106270560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e680fd04-c4d4-4302-bec4-c8be45e616a8",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Thanks for this!",
        "createdAt" : "2018-03-22T19:36:59Z",
        "updatedAt" : "2018-03-27T01:03:28Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe469ed34fb4f0d1094a542e2b2dd7d27cedd2e2",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +281,285 @@    // that streams prefer different default values\n    private static final Map<String, Object> PRODUCER_DEFAULT_OVERRIDES;\n    static {\n        Map<String, Object> tempProducerDefaultOverrides = new HashMap<>();\n        tempProducerDefaultOverrides.put(ProducerConfig.LINGER_MS_CONFIG, \"100\");"
  },
  {
    "id" : "8060cdbb-3762-4e3a-845a-2985f798c437",
    "prId" : 5071,
    "prUrl" : "https://github.com/apache/kafka/pull/5071#pullrequestreview-126602017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d93ae1c-33be-4573-865c-fbcca7b50ccc",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I know we've been around and around about this, and at this point, I can't remember if this was already discussed and discarded, but...\r\n\r\nI think it may make sense to just add \"none\" or\" 2.0\" as the possible values. \r\n\r\nWe still aren't sure if upgrading optimizations will always be safe, so explicitly stating the optimization value you want will protect you against accidental upgrades when 2.1+ come out.\r\n\r\nAlso, the explicit optimization level will protect against accidental *downgrades*, which could also be unsafe. For example, if I deploy v2.1 with \"all\", it'll set me up with 2.1-level optimizations. If I decide I don't like it and go down to 2.0, still with \"all\", Streams won't know any different, so it'll construct my topology according to 2.0 rules, potentially leading to data loss.\r\n\r\nOn the other hand, if I had deployed it with \"2.1\" and then downgraded to 2.0, Streams could refuse to start, since it doesn't understand that config value.\r\n\r\nI think it would be really nice, in the future, to investigate ways to restructure the topology dynamically without losing data, but until we get there, it's better to err on the side of explicitness and safety.",
        "createdAt" : "2018-06-06T22:38:38Z",
        "updatedAt" : "2018-06-06T22:38:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "4bfe47d4-3a87-4d59-982a-ceee9a614d6d",
        "parentId" : "9d93ae1c-33be-4573-865c-fbcca7b50ccc",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I agree that adding for \"2.0\" would make sense for upgrading / downgrading; in fact, I'm working on some optimizations for allowing users to decide whether to turn on / off source KTables based on the config, which would require a \"2.0\" value.\r\n\r\nOn the other hand, I think \"all\" still have its value, when 1) I am in development mode and do not care about compatibility, or 2) I have used other mechanisms to makes sure the persistent storages like Kafka topics would not change (this is future work).\r\n\r\nSo I'm +1 to merge this PR as is, and work on adding another value of \"2.0\" in a separate PR.",
        "createdAt" : "2018-06-06T23:59:24Z",
        "updatedAt" : "2018-06-06T23:59:25Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "5134202f-886c-4f25-b3b6-0f146eaabcdc",
        "parentId" : "9d93ae1c-33be-4573-865c-fbcca7b50ccc",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I think \"all\" is fine, as \"all\" always means \"latest version\" -- if we release 2.1, we would introduce \"2.0\" and \"all\" as become a surrogate for \"2.1\" -- I think it's clean this way, ie, we only have a version string for older releases.",
        "createdAt" : "2018-06-07T00:06:19Z",
        "updatedAt" : "2018-06-07T00:06:20Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7a1bad94-047a-4ace-9cd8-c21b4603b5e4",
        "parentId" : "9d93ae1c-33be-4573-865c-fbcca7b50ccc",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "I'm +1 with \"all\" for the latest release and a version string for older releases.",
        "createdAt" : "2018-06-07T00:39:37Z",
        "updatedAt" : "2018-06-07T00:39:37Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5680286f2eac8904ba0ed2fb7a407882d096fe0f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +204,208 @@     * Config value for parameter (@link #TOPOLOGY_OPTIMIZATION \"topology.optimization\" for enabling topology optimization\n     */\n    public static final String OPTIMIZE = \"all\";\n\n    /**"
  },
  {
    "id" : "4982f04b-4d79-4f2b-9b61-b6135d807300",
    "prId" : 5425,
    "prUrl" : "https://github.com/apache/kafka/pull/5425#pullrequestreview-141170857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c68bbce8-2b8d-441b-8e70-7075b7e0e87b",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "cc @guozhangwang",
        "createdAt" : "2018-07-27T14:12:44Z",
        "updatedAt" : "2018-08-01T00:34:42Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c549480b-fb44-4b27-8c71-cc57f9bd6760",
        "parentId" : "c68bbce8-2b8d-441b-8e70-7075b7e0e87b",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Already checked with Guozhang offline.",
        "createdAt" : "2018-07-27T15:49:01Z",
        "updatedAt" : "2018-08-01T00:34:42Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "aba0c3e9-9b27-43ef-be6b-6a558ecf2796",
        "parentId" : "c68bbce8-2b8d-441b-8e70-7075b7e0e87b",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "lgtm.",
        "createdAt" : "2018-07-27T17:02:10Z",
        "updatedAt" : "2018-08-01T00:34:42Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "eae84c1396d2828a0a2a4aa9fb571d5f7d39a652",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +103,107 @@ * increase {@link ConsumerConfig#MAX_POLL_INTERVAL_MS_CONFIG} using the following guidance:\n * <pre>\n *     max.poll.interval.ms > max.block.ms\n * </pre>\n *"
  },
  {
    "id" : "1780c581-3d83-4f2a-813f-285c07c0625a",
    "prId" : 5929,
    "prUrl" : "https://github.com/apache/kafka/pull/5929#pullrequestreview-178187806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46f8b1b5-0ebb-4007-bff1-851c9aec0fb4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Can we update `StreamsConfigTest#consumerConfigMustUseAdminClientConfigForRetries` for this change, too? (And maybe update test name: `consumerConfigShouldContainAdminClientConfigsForRetriesAndRetryBackOffMsWithAdminPrefix`)",
        "createdAt" : "2018-11-23T19:29:17Z",
        "updatedAt" : "2018-11-26T09:09:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "e7a633d1-773c-43a8-8a22-e1662c29f630",
        "parentId" : "46f8b1b5-0ebb-4007-bff1-851c9aec0fb4",
        "authorId" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "body" : "done",
        "createdAt" : "2018-11-26T09:12:35Z",
        "updatedAt" : "2018-11-26T09:12:35Z",
        "lastEditedBy" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "tags" : [
        ]
      }
    ],
    "commit" : "23dfca52cea0cc94ea5852454a732fa97bf16799",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +981,985 @@        final AdminClientConfig adminClientDefaultConfig = new AdminClientConfig(getClientPropsWithPrefix(ADMIN_CLIENT_PREFIX, AdminClientConfig.configNames()));\n        consumerProps.put(adminClientPrefix(AdminClientConfig.RETRIES_CONFIG), adminClientDefaultConfig.getInt(AdminClientConfig.RETRIES_CONFIG));\n        consumerProps.put(adminClientPrefix(AdminClientConfig.RETRY_BACKOFF_MS_CONFIG), adminClientDefaultConfig.getLong(AdminClientConfig.RETRY_BACKOFF_MS_CONFIG));\n\n        // verify that producer batch config is no larger than segment size, then add topic configs required for creating topics"
  },
  {
    "id" : "20081c40-f199-4a9c-98fa-77afdac2b699",
    "prId" : 6107,
    "prUrl" : "https://github.com/apache/kafka/pull/6107#pullrequestreview-194255235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67054d57-567c-4773-ac38-71d5c6f7fcfd",
        "parentId" : null,
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "don't we usually split params over multiple lines?",
        "createdAt" : "2019-01-18T17:59:13Z",
        "updatedAt" : "2019-01-23T23:34:09Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      },
      {
        "id" : "f1b47ca6-1864-489c-8ed3-494552a9ee27",
        "parentId" : "67054d57-567c-4773-ac38-71d5c6f7fcfd",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It's a subjective question. I personally prefer to have one parameter per line. :)",
        "createdAt" : "2019-01-18T18:15:34Z",
        "updatedAt" : "2019-01-23T23:34:09Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b69175b6-4dc1-4096-8b74-7b66a93b4892",
        "parentId" : "67054d57-567c-4773-ac38-71d5c6f7fcfd",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yeah I personally prefer only doing that for 3+ parameters and they cannot fit in 150 chars which is what a normal laptop screen would fit.",
        "createdAt" : "2019-01-18T19:45:33Z",
        "updatedAt" : "2019-01-23T23:34:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "65e8c144ba2d48adfd7b35fdfc7224106c295254",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +955,959 @@    @SuppressWarnings(\"WeakerAccess\")\n    @Deprecated\n    public Map<String, Object> getConsumerConfigs(final String groupId, final String clientId) {\n        return getMainConsumerConfigs(groupId, clientId);\n    }"
  },
  {
    "id" : "ac3b7745-7535-49c9-b0a9-57ee8fd4552b",
    "prId" : 6107,
    "prUrl" : "https://github.com/apache/kafka/pull/6107#pullrequestreview-194214851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59db5c04-32ba-4011-993f-5207b27f1499",
        "parentId" : null,
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "ditto",
        "createdAt" : "2019-01-18T17:59:20Z",
        "updatedAt" : "2019-01-23T23:34:09Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      }
    ],
    "commit" : "65e8c144ba2d48adfd7b35fdfc7224106c295254",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +974,978 @@     */\n    @SuppressWarnings(\"WeakerAccess\")\n    public Map<String, Object> getMainConsumerConfigs(final String groupId, final String clientId) {\n        final Map<String, Object> consumerProps = getCommonConsumerConfigs();\n"
  }
]