[
  {
    "id" : "e237d7f7-497f-4cc0-8345-af8404f75ba0",
    "prId" : 7782,
    "prUrl" : "https://github.com/apache/kafka/pull/7782#pullrequestreview-332141648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "439b0d07-3cc6-438a-b6e8-a5dcdee96b82",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@bbejeck -- I was double checking existing code and many (all) operator actually allow `named` to be `null` -- do you remember why? I am wondering if this is a issue with existing code or an issue with the new code?",
        "createdAt" : "2019-12-13T17:39:25Z",
        "updatedAt" : "2019-12-13T19:55:13Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b73b6167-bc80-4de8-a9b0-57bfa53f26b6",
        "parentId" : "439b0d07-3cc6-438a-b6e8-a5dcdee96b82",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "Since there are options to just not pass it in anyone who would put null should just not include it",
        "createdAt" : "2019-12-13T18:08:19Z",
        "updatedAt" : "2019-12-13T19:55:13Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      },
      {
        "id" : "427a21fa-418a-4ae7-8d15-ee5517b049d4",
        "parentId" : "439b0d07-3cc6-438a-b6e8-a5dcdee96b82",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : ">@bbejeck -- I was double checking existing code and many (all) operator actually allow named to be null -- do you remember why? I am wondering if this is a issue with existing code or an issue with the new code?\r\n\r\nWhich operators are you referring to? I just took a quick look at `KStreamImpl` and they don't allow null `Named`.  Several of the overloads don't take a `Named` and create a `NamedInternal#empty`",
        "createdAt" : "2019-12-13T20:39:45Z",
        "updatedAt" : "2019-12-13T20:39:45Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "6f9237f6-0b52-47e2-97c5-80adfcd7c286",
        "parentId" : "439b0d07-3cc6-438a-b6e8-a5dcdee96b82",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "There are a couple of examples, but your comment indicates, that they should allow it. Just wanted to confirm. Will go over the code and add the corresponding checks in a follow up PR to fix it.",
        "createdAt" : "2019-12-13T22:05:56Z",
        "updatedAt" : "2019-12-13T22:05:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d30036845b194de6f949002fe66b796c1bdfee76",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@        Objects.requireNonNull(sessionMerger, \"sessionMerger can't be null\");\n        Objects.requireNonNull(materialized, \"materialized can't be null\");\n        Objects.requireNonNull(named, \"named can't be null\");\n        final MaterializedInternal<K, V, SessionStore<Bytes, byte[]>> materializedInternal = new MaterializedInternal<>(\n                materialized,"
  }
]