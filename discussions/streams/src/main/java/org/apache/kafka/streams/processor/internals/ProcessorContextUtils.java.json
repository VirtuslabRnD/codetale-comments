[
  {
    "id" : "77f9a925-ccf9-4e81-9e27-7e65c5d50bfb",
    "prId" : 8927,
    "prUrl" : "https://github.com/apache/kafka/pull/8927#pullrequestreview-439288077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I really like this class.",
        "createdAt" : "2020-06-26T09:56:50Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "b5ec07c3-3d09-4936-a5a4-7f564985d2df",
        "parentId" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks!",
        "createdAt" : "2020-06-26T15:45:21Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "2128a7fe-9c3b-4756-8bcf-96915601c930",
        "parentId" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm trying to phrase this is a less discouraging way, since I agree this is a nice & clever fix: \r\n\r\nis this meant to be the actual, final solution to this problem, or just a temporary workaround to unblock us without the need for a KIP? This just \"happens\" to work out nicely because we know the mocks are actually returning a StreamsMetricsImpl as well. What happens if we need to add/access more complicated processor context functionality in the inner state stores? I say \"inner\" because the caching layers for example also perform a cast to InternalProcessorContext.\r\n\r\nI completely agree with proceeding with this, so don't take that question as a challenge to this PR. Just wondering where this leaves us going forward. Should we accept (and therefore enforce) that state stores can't have caching enabled in unit tests?",
        "createdAt" : "2020-06-26T21:30:00Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "8992b014-ac8c-4e8f-bade-690c76636760",
        "parentId" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Uh, no, that was an oversight :) I might as well fix it in this PR, so I'll not merge just now. Thanks for pointing it out.\r\n\r\nI think where it leaves us, in a nutshell, is that state stores should never cast the context, not as long as their `init()` method is a public interface. This class is a way to collect all the casting-related sins and put them all in one place where we can keep an eye on them.\r\n\r\nCasting doesn't always indicate a design failure, but in this case, it 100% does. I'd hope that everything in this class gets designed away and we can delete the class. I'd flip the table and do it right now, but I don't want to block the unit-testability of the PAPI behind a bunch of KIPs. I'll make tickets to fix the stuff that needs to be fixed.\r\n\r\nIn contrast, note that all the Processor implementations that power our DSL are very much _not_ for public use, so for them, casting to InternalProcessorContext is fair game. Although, I _have_ found and/or fixed a fair number of bugs following from casting in the processors as well. So, although, it's not a contract violation, it still may not be a good idea.",
        "createdAt" : "2020-06-27T02:26:36Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "3c970aa0-8773-4a0f-9fdd-14cb126d32fd",
        "parentId" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, after looking into the internals, I can see that caching is like logging, it only makes sense in the context of being in a \"real\" KafkaStreams environment, so we don't need to support it for unit tests. I've added more explicit exceptions when this condition is violated, as well as more documentation to the demo tests.",
        "createdAt" : "2020-06-29T15:46:21Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "a478f1db-3065-4c25-80ff-145975936e93",
        "parentId" : "f7f3dd4f-fe7d-4ed8-ba84-8f2e98e6c0ec",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I totally agree. I missed to add that I really like this as a temporary fix. IMO, the root cause is that we pass in internal information in a public API which we should not do at all. I have already an idea how to fix it. Let's discuss that somewhere else. ",
        "createdAt" : "2020-06-29T15:59:39Z",
        "updatedAt" : "2020-06-29T16:03:55Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa6408062e51677a2cbb5db4b885b8b940df503d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@ * the ticket that would ultimately obviate it.\n */\npublic final class ProcessorContextUtils {\n\n    private ProcessorContextUtils() {}"
  },
  {
    "id" : "94702d41-c8ac-4acd-9f29-ac0ddc6e261d",
    "prId" : 9388,
    "prUrl" : "https://github.com/apache/kafka/pull/9388#pullrequestreview-503498921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89a044ab-64f7-46b9-9d70-9b28e9c115d3",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Added a bunch of duplicated extractors here to help keep the implementation classes clean.",
        "createdAt" : "2020-10-07T03:27:45Z",
        "updatedAt" : "2020-10-07T03:47:44Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab093bc0610dfee1ccfa7199de59e1b2c417a3d0",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +54,58 @@    public static StreamsMetricsImpl getMetricsImpl(final StateStoreContext context) {\n        return (StreamsMetricsImpl) context.metrics();\n    }\n\n    public static String changelogFor(final ProcessorContext context, final String storeName) {"
  },
  {
    "id" : "13e68540-65c7-4be4-aa91-0b95910abe2d",
    "prId" : 9388,
    "prUrl" : "https://github.com/apache/kafka/pull/9388#pullrequestreview-504159206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4027ced-e7af-4d72-864d-a102ae6b9862",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I replaced a lot of casts with this checked-cast method, which also lets us get rid of a lot of similar cast-checking blocks, which were inconsistently applied.",
        "createdAt" : "2020-10-07T03:28:28Z",
        "updatedAt" : "2020-10-07T03:47:44Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "bfff918a-6f1f-4176-8a44-3283d75f1b09",
        "parentId" : "e4027ced-e7af-4d72-864d-a102ae6b9862",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thanks!",
        "createdAt" : "2020-10-07T18:30:53Z",
        "updatedAt" : "2020-10-07T22:44:44Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab093bc0610dfee1ccfa7199de59e1b2c417a3d0",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +76,80 @@            );\n        }\n    }\n\n    public static InternalProcessorContext asInternalProcessorContext(final StateStoreContext context) {"
  }
]