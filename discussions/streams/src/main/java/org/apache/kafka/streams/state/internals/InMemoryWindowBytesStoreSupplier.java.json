[
  {
    "id" : "6d6828f4-67aa-4989-bf5e-83660fa2b1df",
    "prId" : 6239,
    "prUrl" : "https://github.com/apache/kafka/pull/6239#pullrequestreview-204023885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b74d0f2-f6c4-41e6-87cd-ddd2e720447b",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Hmm.. if users decides to have a caching layer on top of this in-memory window store (which would be a weird usage, but we cannot forbid it) then the `SegmentedCacheFunction` would use 1ms as segments, causing millions of segments. Would that be okay?",
        "createdAt" : "2019-02-14T06:49:49Z",
        "updatedAt" : "2019-02-21T03:08:16Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "03aae19a-1ab3-4d8b-9be6-9c80b6ed38e0",
        "parentId" : "1b74d0f2-f6c4-41e6-87cd-ddd2e720447b",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm not sure I follow, SegmentedCacheFunction only seems to use this for comparison, why would that be a problem?",
        "createdAt" : "2019-02-14T21:57:10Z",
        "updatedAt" : "2019-02-21T03:08:16Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "0d54cf0b-8dab-4e05-b88d-e099605ef69e",
        "parentId" : "1b74d0f2-f6c4-41e6-87cd-ddd2e720447b",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think you're right, it is only logical, not physically impacting the data layout. With a `long` segmentId we should be fine with the range of segment ids with 1ms interval only.",
        "createdAt" : "2019-02-14T23:31:10Z",
        "updatedAt" : "2019-02-21T03:08:16Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8284985337551c636fdd761939ef675ee5c84ce2",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@    @Override\n    public long segmentIntervalMs() {\n        return 1;\n    }\n"
  }
]