[
  {
    "id" : "bbe573ad-951b-440a-b9b0-61c8e07a91b8",
    "prId" : 5527,
    "prUrl" : "https://github.com/apache/kafka/pull/5527#pullrequestreview-281082113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "090479fd-0cbf-46e1-ad41-26391eeba503",
        "parentId" : null,
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "As this is public documentation it would be nice to have documentation on it. It looks like it would be the same as the previous sans named.",
        "createdAt" : "2019-08-28T20:33:05Z",
        "updatedAt" : "2019-10-02T17:56:32Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e1b6a1a41c8e05ff009ad988b705baeb42800ad",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2157,2161 @@     * @return\n     */\n    <VR, KO, VO> KTable<K, VR> join(final KTable<KO, VO> other,\n                                    final Function<V, KO> foreignKeyExtractor,\n                                    final ValueJoiner<V, VO, VR> joiner,"
  },
  {
    "id" : "57f1587d-9369-43f6-962d-e7930357b904",
    "prId" : 5527,
    "prUrl" : "https://github.com/apache/kafka/pull/5527#pullrequestreview-281082113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad359d51-732e-479c-8b6e-aba57e48b89c",
        "parentId" : null,
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "Same comment as above.",
        "createdAt" : "2019-08-28T20:33:18Z",
        "updatedAt" : "2019-10-02T17:56:32Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e1b6a1a41c8e05ff009ad988b705baeb42800ad",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +2201,2205 @@     * @return a {@code KTable} that contains only those records that satisfy the given predicate\n     */\n    <VR, KO, VO> KTable<K, VR> leftJoin(final KTable<KO, VO> other,\n                                        final Function<V, KO> foreignKeyExtractor,\n                                        final ValueJoiner<V, VO, VR> joiner,"
  },
  {
    "id" : "129a68d0-ee3e-440e-9675-5e895000dc37",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160021429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "742e09e0-4211-427e-9ceb-807dd1b2dd70",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This one should be `@Deprecated`, right?",
        "createdAt" : "2018-09-28T15:39:41Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d818b364-9d56-4b06-accf-aeb8a981ff50",
        "parentId" : "742e09e0-4211-427e-9ceb-807dd1b2dd70",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:55:35Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +616,620 @@    @Deprecated\n    <KR, VR> KGroupedTable<KR, VR> groupBy(final KeyValueMapper<? super K, ? super V, KeyValue<KR, VR>> selector,\n                                           final Serialized<KR, VR> serialized);\n\n    /**"
  },
  {
    "id" : "f74ee139-8d07-4c2b-ae94-c42022686ecf",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160021879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2dd7627-84c5-4237-9053-fa62f20ae68e",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "similar comment re: `<p>`",
        "createdAt" : "2018-09-28T15:40:24Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "3f3475dc-2c0d-4e85-82ba-22906602a529",
        "parentId" : "c2dd7627-84c5-4237-9053-fa62f20ae68e",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:57:04Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +634,638 @@     *\n     * <p>\n     * You can retrieve all generated internal topic names via {@link Topology#describe()}.\n     *\n     * <p>"
  },
  {
    "id" : "d0365623-d2c9-4084-a05d-e25476812b7d",
    "prId" : 5731,
    "prUrl" : "https://github.com/apache/kafka/pull/5731#pullrequestreview-160974048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90daffef-e9ad-4e75-8e3c-1d120c7a7d64",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Without this change, final-results configs that also set a name become awkward, as you have to redundantly specify the type parameters at the call site (like `Suppressed.<Windowed<...>>untilWindowCloses(...).withName(...)`)\r\n\r\nThis change, in conjunction with the change to untilWindowCloses in Suppressed to drop the generic parameter makes this a non-issue (as you can tell in the tests).",
        "createdAt" : "2018-10-03T00:40:39Z",
        "updatedAt" : "2018-10-03T22:34:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "91adfc58c50173bad5d2351e97b25db2febbb9d5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +398,402 @@     * @return A new KTable with the desired suppression characteristics.\n     */\n    KTable<K, V> suppress(final Suppressed<? super K> suppressed);\n\n    /**"
  },
  {
    "id" : "d737e210-3633-4480-9492-ae43cb66d9e2",
    "prId" : 6412,
    "prUrl" : "https://github.com/apache/kafka/pull/6412#pullrequestreview-246819170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a9f684a-0e38-45fa-b057-e3cd62bc9182",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "We didn't specify this in the KIP but I think `toStream()` and `toStream(mapper)`  should also have overrides with`Named`",
        "createdAt" : "2019-03-13T19:36:03Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "805ad540-e986-4f7d-bfbc-89b51bce181c",
        "parentId" : "4a9f684a-0e38-45fa-b057-e3cd62bc9182",
        "authorId" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "body" : "I've updated the KIP and the PR to the two methods above",
        "createdAt" : "2019-03-18T22:46:46Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "tags" : [
        ]
      },
      {
        "id" : "bf7f0693-6b20-4f7d-8143-1f778e9e97d2",
        "parentId" : "4a9f684a-0e38-45fa-b057-e3cd62bc9182",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "good catch!",
        "createdAt" : "2019-06-06T21:13:54Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f254c4f7f13b66d47249d686b2d9a149f56206a3",
    "line" : 403,
    "diffHunk" : "@@ -1,1 +643,647 @@     * @return a {@link KStream} that contains the same records as this {@code KTable}\n     */\n    KStream<K, V> toStream();\n\n    /**"
  },
  {
    "id" : "139b1e90-4b16-4821-9d91-b02f26627ad8",
    "prId" : 6412,
    "prUrl" : "https://github.com/apache/kafka/pull/6412#pullrequestreview-250187127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dc5dfd9-7187-4017-8733-846402a15ec0",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: ditto\r\n\r\nI'll go ahead and say we should do so for all examples (when possible of course) in the Javadoc and I won't point out anymore from this point.",
        "createdAt" : "2019-06-06T20:00:54Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "9be77eae-eea2-4bd3-b093-00e81d06eeb5",
        "parentId" : "1dc5dfd9-7187-4017-8733-846402a15ec0",
        "authorId" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "body" : "the javadoc has been updated - there was also an issue on the method name (ie : mapValue to mapValues)",
        "createdAt" : "2019-06-15T10:10:00Z",
        "updatedAt" : "2019-06-15T10:10:01Z",
        "lastEditedBy" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "tags" : [
        ]
      }
    ],
    "commit" : "f254c4f7f13b66d47249d686b2d9a149f56206a3",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +459,463 @@     * KTable<String, String> inputTable = builder.table(\"topic\");\n     * KTable<String, Integer> outputTable = inputTable.mapValue(new ValueMapper<String, Integer> {\n     *     Integer apply(String value) {\n     *         return value.split(\" \").length;\n     *     }"
  },
  {
    "id" : "17200b8e-7aa2-4996-b69e-e6388d2e81fd",
    "prId" : 6412,
    "prUrl" : "https://github.com/apache/kafka/pull/6412#pullrequestreview-250187038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d96a257-358e-4a71-8b5b-0fd74e59ec67",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "why these changes?",
        "createdAt" : "2019-06-06T20:14:19Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "c0af49c2-5423-4711-b97e-1d6a9b1c6b80",
        "parentId" : "0d96a257-358e-4a71-8b5b-0fd74e59ec67",
        "authorId" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "body" : "I think, these changes come from javadoc shift due to new methods added.",
        "createdAt" : "2019-06-15T10:07:38Z",
        "updatedAt" : "2019-06-15T10:07:39Z",
        "lastEditedBy" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "tags" : [
        ]
      }
    ],
    "commit" : "f254c4f7f13b66d47249d686b2d9a149f56206a3",
    "line" : 1104,
    "diffHunk" : "@@ -1,1 +1576,1580 @@     * </tr>\n     * <tr>\n     * <td>&lt;K1:null&gt;</td>\n     * <td></td>\n     * <td></td>"
  },
  {
    "id" : "5c1c8909-a6cb-4d06-9c38-8f088db396f8",
    "prId" : 6412,
    "prUrl" : "https://github.com/apache/kafka/pull/6412#pullrequestreview-250187041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82b027c7-a5f0-4dd0-8e71-ee18a7364cd5",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "same here",
        "createdAt" : "2019-06-06T20:14:57Z",
        "updatedAt" : "2019-06-15T10:02:52Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "234b18bc-faac-4964-9121-3b3e27fda2e1",
        "parentId" : "82b027c7-a5f0-4dd0-8e71-ee18a7364cd5",
        "authorId" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "body" : "I think, these changes come from javadoc shift due to new methods added.",
        "createdAt" : "2019-06-15T10:07:41Z",
        "updatedAt" : "2019-06-15T10:07:41Z",
        "lastEditedBy" : "8090918c-29d3-43df-b67b-9b52e0bfe240",
        "tags" : [
        ]
      }
    ],
    "commit" : "f254c4f7f13b66d47249d686b2d9a149f56206a3",
    "line" : 1182,
    "diffHunk" : "@@ -1,1 +1651,1655 @@     * <td></td>\n     * <td></td>\n     * <td>&lt;K1:ValueJoiner(A,null)&gt;</td>\n     * </tr>\n     * <tr>"
  },
  {
    "id" : "3155ccfc-762e-4e52-8e51-456fc4a13c13",
    "prId" : 7536,
    "prUrl" : "https://github.com/apache/kafka/pull/7536#pullrequestreview-303036201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9ed7430-ad16-4b94-adb6-c5f54a794f3a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@vvcephei we should fix the return statement -- should not be empty",
        "createdAt" : "2019-10-17T06:55:30Z",
        "updatedAt" : "2019-10-17T06:55:31Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e29d335287e637e00997382fc9faa666bca64fe",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +2135,2139 @@     * @param <KO>                the key type of the other {@code KTable}\n     * @param <VO>                the value type of the other {@code KTable}\n     * @return\n     */\n    <VR, KO, VO> KTable<K, VR> join(final KTable<KO, VO> other,"
  },
  {
    "id" : "0ccf92a3-be14-4dff-b290-c28b2edf6fcd",
    "prId" : 7541,
    "prUrl" : "https://github.com/apache/kafka/pull/7541#pullrequestreview-303070787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99132e66-e058-45b8-8e26-9029608f8e38",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: insert empty line",
        "createdAt" : "2019-10-17T08:07:27Z",
        "updatedAt" : "2019-10-17T14:57:40Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0406b3fdcf79f58ec6fa32f161dd90f011e295a",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +2179,2183 @@                                    final Materialized<K, VR, KeyValueStore<Bytes, byte[]>> materialized);\n\n    /**\n     * Join records of this {@code KTable} with another {@code KTable} using non-windowed inner join.\n     * <p>"
  },
  {
    "id" : "8cc7638a-ee88-47a1-a540-90fa34f32444",
    "prId" : 7541,
    "prUrl" : "https://github.com/apache/kafka/pull/7541#pullrequestreview-303324512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5015784f-e2b4-4425-9c49-dca581c58238",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Do  we need to add an overload for `join` and `leftJoin` that takes `Named` but no `Materialized`?",
        "createdAt" : "2019-10-17T08:10:51Z",
        "updatedAt" : "2019-10-17T14:57:40Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a577e35a-be71-4715-9380-69a9fdbe4389",
        "parentId" : "5015784f-e2b4-4425-9c49-dca581c58238",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Done. Good call.",
        "createdAt" : "2019-10-17T14:58:12Z",
        "updatedAt" : "2019-10-17T14:58:12Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0406b3fdcf79f58ec6fa32f161dd90f011e295a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +2196,2200 @@     * @return a {@code KTable} that contains the result of joining this table with {@code other}\n     */\n    <VR, KO, VO> KTable<K, VR> join(final KTable<KO, VO> other,\n                                    final Function<V, KO> foreignKeyExtractor,\n                                    final ValueJoiner<V, VO, VR> joiner,"
  }
]