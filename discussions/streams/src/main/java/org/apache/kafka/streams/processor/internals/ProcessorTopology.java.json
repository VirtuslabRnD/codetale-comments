[
  {
    "id" : "a2dc593e-a98a-46cb-b24b-50823d711a40",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-171355305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b094a3ae-5f0b-4beb-ab78-2c345287b2bd",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We should add a test into `ProcessorTopologyTest` for this new method",
        "createdAt" : "2018-11-04T03:10:39Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "94e6b28c-a9d1-4eb7-b373-5de114d7c801",
        "parentId" : "b094a3ae-5f0b-4beb-ab78-2c345287b2bd",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "test case added.",
        "createdAt" : "2018-11-04T09:36:51Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +153,157 @@    }\n\n    public boolean hasPersistentLocalStore() {\n        for (final StateStore store : stateStores) {\n            if (store.persistent()) {"
  },
  {
    "id" : "c5f4c7b8-f9aa-4df6-9a2f-6567809c368b",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-171355326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eb7e849-0a45-420f-b006-518c29c945f5",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above: we should add a test for this method",
        "createdAt" : "2018-11-04T03:10:50Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "759a2214-6a37-402a-bd50-b0fe44f786d6",
        "parentId" : "4eb7e849-0a45-420f-b006-518c29c945f5",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "test case added.",
        "createdAt" : "2018-11-04T09:37:19Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +162,166 @@    }\n\n    public boolean hasPersistentGlobalStore() {\n        for (final StateStore store : globalStateStores) {\n            if (store.persistent()) {"
  },
  {
    "id" : "70377192-02d3-4054-ba77-ac8b1c8f3e84",
    "prId" : 8803,
    "prUrl" : "https://github.com/apache/kafka/pull/8803#pullrequestreview-425562432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58b0e040-3c77-49ca-b03c-fb11c693bd9c",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Does the new map ensure a topological order?",
        "createdAt" : "2020-06-05T15:30:53Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "28140de9-5fff-4f2e-a4b3-438e5093d5a1",
        "parentId" : "58b0e040-3c77-49ca-b03c-fb11c693bd9c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Well, it's in topological order in that we start from source nodes and proceed through the children",
        "createdAt" : "2020-06-05T18:33:16Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "772cb125-2d20-4f04-af12-0794849f71af",
        "parentId" : "58b0e040-3c77-49ca-b03c-fb11c693bd9c",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Oh I see",
        "createdAt" : "2020-06-05T19:19:52Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "61a200ccbd54035438ae8628a6fadb43d3b174a3",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +211,215 @@\n        // start from sources\n        for (final Map.Entry<SourceNode<?, ?>, List<String>> sourceNodeEntry : sourceToTopics.entrySet()) {\n            final SourceNode<?, ?> source = sourceNodeEntry.getKey();\n            final List<String> topics = sourceNodeEntry.getValue();"
  },
  {
    "id" : "261490d1-af25-4915-88ef-450315d65674",
    "prId" : 8803,
    "prUrl" : "https://github.com/apache/kafka/pull/8803#pullrequestreview-425641691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "872744bd-3bd7-43ac-a45a-a32ee94f89fb",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "I prefer we get a newbie ticket to test out this logic in a unit test case.",
        "createdAt" : "2020-06-05T19:38:51Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "6a28378b-f7b1-4cf1-bec5-200082269c4e",
        "parentId" : "872744bd-3bd7-43ac-a45a-a32ee94f89fb",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "SG",
        "createdAt" : "2020-06-05T21:42:39Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "61a200ccbd54035438ae8628a6fadb43d3b174a3",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +199,203 @@     * @return A string representation of this instance.\n     */\n    public String toString(final String indent) {\n        final Map<SourceNode<?, ?>, List<String>> sourceToTopics = new HashMap<>();\n        for (final Map.Entry<String, SourceNode<?, ?>> sourceNodeEntry : sourceNodesByTopic.entrySet()) {"
  },
  {
    "id" : "98c72fe6-89ab-450a-824c-609a214c63d1",
    "prId" : 8803,
    "prUrl" : "https://github.com/apache/kafka/pull/8803#pullrequestreview-425658542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9403e439-b95d-4f3a-bc9a-cf956facd577",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we have a sanity check, that no `topic` is added twice?",
        "createdAt" : "2020-06-05T22:16:13Z",
        "updatedAt" : "2020-06-05T22:36:42Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "61a200ccbd54035438ae8628a6fadb43d3b174a3",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +159,163 @@                        + sourceNodesByTopic.get(topic).name());\n                }\n                sourceNodesByTopic.put(topic, sourceNodesByName.get(nodeName));\n            }\n        }"
  },
  {
    "id" : "d22c872e-fd08-4755-88d8-9fd3308514b3",
    "prId" : 9648,
    "prUrl" : "https://github.com/apache/kafka/pull/9648#pullrequestreview-536974226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4879b25-1118-42e0-9b26-f77d4bbbb499",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "In addition to removing the fault check, I slightly refactored this loop so that we only loop over the source nodes in this particular subtopology. Previously we would have added entries for all source nodes across the entire topology to our `sourceNodesByTopic` map",
        "createdAt" : "2020-11-24T01:24:06Z",
        "updatedAt" : "2020-11-24T22:12:39Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b95760213142ba1159d79bb1c1b1765d6ecb6b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +152,156 @@    public void updateSourceTopics(final Map<String, List<String>> allSourceTopicsByNodeName) {\n        sourceNodesByTopic.clear();\n        for (final Map.Entry<String, SourceNode<?, ?, ?, ?>> sourceNodeEntry : sourceNodesByName.entrySet()) {\n            final String sourceNodeName = sourceNodeEntry.getKey();\n            final SourceNode<?, ?, ?, ?> sourceNode = sourceNodeEntry.getValue();"
  },
  {
    "id" : "ac4f099c-781b-4b39-b264-da3cb205723a",
    "prId" : 9648,
    "prUrl" : "https://github.com/apache/kafka/pull/9648#pullrequestreview-538011649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de9f4be2-9fde-41fc-9207-78e7a9db7235",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Could you also add a unit test that verifies that the issue is gone?",
        "createdAt" : "2020-11-24T08:17:02Z",
        "updatedAt" : "2020-11-24T22:12:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "3ec2fa5e-053f-41b2-96ba-08c46e2080d3",
        "parentId" : "de9f4be2-9fde-41fc-9207-78e7a9db7235",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I modified the existing test rather than add a new one, and verified that the modified test does fail without the changes. Since the original test wasn't actually testing anything prior to the modifications I thought it made sense to fix the test rather than add a new one and retain a useless test in addition",
        "createdAt" : "2020-11-24T18:40:29Z",
        "updatedAt" : "2020-11-24T22:12:39Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "9ac98a16-538c-47aa-a3ec-e8540b67f33b",
        "parentId" : "de9f4be2-9fde-41fc-9207-78e7a9db7235",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "The scope of an integration test and of a unit test are quite different. The integration test specifically tests the pattern subscription whereas the unit test just tests the update of the source topics. Probably at the moment the update of the source topics is only called when pattern subscription is used, but that assumption seems rather brittle to me because   it may change in future. I think that neither of the tests is useless. If one were useless, I would keep the unit test for test execution performance reasons.",
        "createdAt" : "2020-11-24T20:06:06Z",
        "updatedAt" : "2020-11-24T22:12:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "2440ee58-dcb0-4086-aed8-573046f2b18d",
        "parentId" : "de9f4be2-9fde-41fc-9207-78e7a9db7235",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Added a unit test",
        "createdAt" : "2020-11-24T22:15:41Z",
        "updatedAt" : "2020-11-24T22:15:42Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b95760213142ba1159d79bb1c1b1765d6ecb6b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +150,154 @@    }\n\n    public void updateSourceTopics(final Map<String, List<String>> allSourceTopicsByNodeName) {\n        sourceNodesByTopic.clear();\n        for (final Map.Entry<String, SourceNode<?, ?, ?, ?>> sourceNodeEntry : sourceNodesByName.entrySet()) {"
  }
]