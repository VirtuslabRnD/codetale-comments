[
  {
    "id" : "062b225b-942d-41e3-af79-5176bc8c6f62",
    "prId" : 5567,
    "prUrl" : "https://github.com/apache/kafka/pull/5567#pullrequestreview-156602906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d880bd2d-da22-46d6-80db-4b2b39d3c23f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "KIP has different generic types.",
        "createdAt" : "2018-09-18T23:11:32Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "035b26310e76216b502839a6b9f22bf1fc75fee2",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@    }\n\n    interface BufferConfig<BC extends BufferConfig<BC>> {\n        /**\n         * Create a size-constrained buffer in terms of the maximum number of keys it will store."
  },
  {
    "id" : "e090a197-3221-465d-bf1c-21a5510e12bb",
    "prId" : 5567,
    "prUrl" : "https://github.com/apache/kafka/pull/5567#pullrequestreview-157016515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7531eef2-c76e-420c-9309-74a61ad853a8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "`passes` -> `passed` ?\r\n`expires` -> `expired` ?",
        "createdAt" : "2018-09-19T04:55:56Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "36dfa038-6838-4b66-b373-7015f6ab03b1",
        "parentId" : "7531eef2-c76e-420c-9309-74a61ad853a8",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Not in this case, since the sentence is in future tense. If I changed the verb to `would`, then it would be subjunctive, and we should say \"passed\" and \"expired\".",
        "createdAt" : "2018-09-19T15:39:04Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dc4ad8a5-884d-4d8a-b1dd-666dc157b420",
        "parentId" : "7531eef2-c76e-420c-9309-74a61ad853a8",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Grammar... At least I can play the \"I am not a native speaker\"-card :)",
        "createdAt" : "2018-09-19T20:49:50Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c882aebe-562f-459c-8a3c-2b3d2bc086af",
        "parentId" : "7531eef2-c76e-420c-9309-74a61ad853a8",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Heh, no worries. Hope I didn't come on too strong.",
        "createdAt" : "2018-09-19T20:51:41Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "035b26310e76216b502839a6b9f22bf1fc75fee2",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@     *\n     * To accomplish this, the operator will buffer events from the window until the window close (that is,\n     * until the end-time passes, and additionally until the grace period expires). Since windowed operators\n     * are required to reject late events for a window whose grace period is expired, there is an additional\n     * guarantee that the final results emitted from this suppression will match any queriable state upstream."
  },
  {
    "id" : "140410d7-b11c-4432-a121-ec19dd927958",
    "prId" : 5731,
    "prUrl" : "https://github.com/apache/kafka/pull/5731#pullrequestreview-160974048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bad3c377-5f2b-44b0-a185-32c96a167290",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is the other half of allowing to use this class without redundant generic type parameters.",
        "createdAt" : "2018-10-03T00:42:48Z",
        "updatedAt" : "2018-10-03T22:34:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "91adfc58c50173bad5d2351e97b25db2febbb9d5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +132,136 @@     * @return a \"final results\" mode suppression configuration\n     */\n    static Suppressed<Windowed> untilWindowCloses(final StrictBufferConfig bufferConfig) {\n        return new FinalResultsSuppressionBuilder<>(null, bufferConfig);\n    }"
  },
  {
    "id" : "7a68e732-8d1b-4102-a209-a3629d03ed60",
    "prId" : 6409,
    "prUrl" : "https://github.com/apache/kafka/pull/6409#pullrequestreview-214692816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06004a0c-d973-4a42-97d6-23b997a50d26",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We should annotate `withName()` as `@Override`",
        "createdAt" : "2019-03-14T18:33:01Z",
        "updatedAt" : "2019-03-19T16:09:31Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "940484ae4068bbed0db1921b3f0538865f756e4c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@import java.time.Duration;\n\npublic interface Suppressed<K> extends NamedOperation<Suppressed<K>> {\n\n    /**"
  }
]