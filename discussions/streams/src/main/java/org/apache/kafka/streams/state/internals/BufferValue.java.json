[
  {
    "id" : "127ef770-0a48-45a1-92d8-e3dc12934df7",
    "prId" : 6781,
    "prUrl" : "https://github.com/apache/kafka/pull/6781#pullrequestreview-240262074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db850a6e-ffc5-4dfd-b305-c3c2ba5c3de1",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "new class, since we need to _also_ carry along the prior state.",
        "createdAt" : "2019-05-21T20:14:07Z",
        "updatedAt" : "2019-05-30T14:57:19Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "daf890e855d0949687a6d4e35c7ed15b473c1a71",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@import java.util.Objects;\n\npublic final class BufferValue {\n    private final ContextualRecord record;\n    private final byte[] priorValue;"
  },
  {
    "id" : "65bc76f1-74ec-4390-8da5-a0adaf57b4d8",
    "prId" : 6848,
    "prUrl" : "https://github.com/apache/kafka/pull/6848#pullrequestreview-244099173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf45cad1-43c2-40f6-82fe-c5cafe598e8c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "By no longer wrapping and delegating to the ContextualRecord, we are able to store the \"old\" and \"new\" parts of the Change independently, which is ultimately what lets us deduplicate the old value and the prior value.",
        "createdAt" : "2019-05-31T01:24:48Z",
        "updatedAt" : "2019-06-06T21:40:34Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "166ec22f7b131b5f2501287ce2d7022e67575f0e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +28,32 @@    private final byte[] priorValue;\n    private final byte[] oldValue;\n    private final byte[] newValue;\n    private final ProcessorRecordContext recordContext;\n"
  },
  {
    "id" : "0e96314f-644d-41ad-82e6-ed95f863570c",
    "prId" : 6848,
    "prUrl" : "https://github.com/apache/kafka/pull/6848#pullrequestreview-244099173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d43c3482-340f-4188-a131-a10da2754590",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We also de-duplicate in serial form by making use of the oldValue \"length\" field to store a sentinel indicating that the old value is the same as the prior value, so we don't need to serialize it twice.",
        "createdAt" : "2019-05-31T01:25:08Z",
        "updatedAt" : "2019-06-06T21:40:34Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "166ec22f7b131b5f2501287ce2d7022e67575f0e",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +71,75 @@        if (oldValueLength == NULL_VALUE_SENTINEL) {\n            oldValue = null;\n        } else if (oldValueLength == OLD_PREV_DUPLICATE_VALUE_SENTINEL) {\n            oldValue = priorValue;\n        } else {"
  },
  {
    "id" : "0b001e91-4bfe-41be-8934-d069edf145c3",
    "prId" : 6848,
    "prUrl" : "https://github.com/apache/kafka/pull/6848#pullrequestreview-249937379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edecd83f-3170-4c4a-9d0a-0d833e9a8337",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: put args on separate line",
        "createdAt" : "2019-06-07T19:16:44Z",
        "updatedAt" : "2019-06-07T19:44:18Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "161516f5-8262-45ac-be6d-430696e8f0e1",
        "parentId" : "edecd83f-3170-4c4a-9d0a-0d833e9a8337",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "oops. Sorry. I overlooked this one.",
        "createdAt" : "2019-06-14T14:29:12Z",
        "updatedAt" : "2019-06-14T14:29:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "166ec22f7b131b5f2501287ce2d7022e67575f0e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +31,35 @@    private final ProcessorRecordContext recordContext;\n\n    BufferValue(final byte[] priorValue, final byte[] oldValue, final byte[] newValue, final ProcessorRecordContext recordContext) {\n        this.oldValue = oldValue;\n        this.newValue = newValue;"
  },
  {
    "id" : "584c423d-88ea-4702-a405-67e9251d6aa2",
    "prId" : 8905,
    "prUrl" : "https://github.com/apache/kafka/pull/8905#pullrequestreview-438406189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0c6688c-46af-45b8-adc4-f34ef5e1d0c6",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This was correct before, since we check equality and enforce identity in the constructor, but `Arrays.equals` is extremely cheap when the arrays are identical, so explicitly doing an identity check instead of equality was a micro-optimization.",
        "createdAt" : "2020-06-26T15:51:34Z",
        "updatedAt" : "2020-06-26T23:56:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5cc0b72f12cb3ee2efb207913240539b1ec1d61",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +110,114 @@        if (oldValue == null) {\n            buffer.putInt(NULL_VALUE_SENTINEL);\n        } else if (Arrays.equals(priorValue, oldValue)) {\n            buffer.putInt(OLD_PREV_DUPLICATE_VALUE_SENTINEL);\n        } else {"
  }
]