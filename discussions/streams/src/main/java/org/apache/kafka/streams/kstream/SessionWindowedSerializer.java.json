[
  {
    "id" : "82c3e887-ed46-4f58-b2cf-8c5470fd0cc2",
    "prId" : 3307,
    "prUrl" : "https://github.com/apache/kafka/pull/3307#pullrequestreview-99877242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f49c613-755e-4835-b6de-8102a78f0345",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: final",
        "createdAt" : "2018-02-27T22:16:16Z",
        "updatedAt" : "2018-03-08T22:16:54Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1711c42e30e3fe20677282a33767cd005b63034",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@    public void configure(final Map<String, ?> configs, final boolean isKey) {\n        if (inner == null) {\n            String propertyName = isKey ? StreamsConfig.DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS : StreamsConfig.DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS;\n            String value = (String) configs.get(propertyName);\n            try {"
  },
  {
    "id" : "996bc457-de48-46fe-a2e6-ac5d91e624da",
    "prId" : 3307,
    "prUrl" : "https://github.com/apache/kafka/pull/3307#pullrequestreview-99877315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "700220f1-37f4-4ae6-a308-aaf23e05c264",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: final",
        "createdAt" : "2018-02-27T22:16:30Z",
        "updatedAt" : "2018-03-08T22:16:54Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1711c42e30e3fe20677282a33767cd005b63034",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@        if (inner == null) {\n            String propertyName = isKey ? StreamsConfig.DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS : StreamsConfig.DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS;\n            String value = (String) configs.get(propertyName);\n            try {\n                inner = Serde.class.cast(Utils.newInstance(value, Serde.class)).serializer();"
  }
]