[
  {
    "id" : "64a55873-3849-4f2e-b53f-7696b29f200d",
    "prId" : 5239,
    "prUrl" : "https://github.com/apache/kafka/pull/5239#pullrequestreview-129414613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3820b04-70c7-4e43-a388-a0da352288e8",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "If key is null, would `serialize` really throw the `ClassCastException`? I think in this case it would throw NPE right?",
        "createdAt" : "2018-06-18T00:18:46Z",
        "updatedAt" : "2018-06-19T03:50:38Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "fd80eb06-ecda-4276-b120-22dca57ec621",
        "parentId" : "a3820b04-70c7-4e43-a388-a0da352288e8",
        "authorId" : "8b017a90-3a1f-4b03-8294-bf9ccdd16769",
        "body" : "I actually ran some tests and it didn't through either `ClassCastException` or `NullPointerException`. It was because the \"null case\" is handled from within `StringSerializer` for example. \r\n\r\nI had this line of code because of https://github.com/apache/kafka/blob/trunk/streams/src/main/java/org/apache/kafka/streams/processor/internals/SinkNode.java#L93\r\nand to keep it consistent, but yes indeed it doesn't make sense\r\n\r\nI've removed it and I've added some tests nonetheless",
        "createdAt" : "2018-06-18T02:25:01Z",
        "updatedAt" : "2018-06-19T03:50:38Z",
        "lastEditedBy" : "8b017a90-3a1f-4b03-8294-bf9ccdd16769",
        "tags" : [
        ]
      }
    ],
    "commit" : "182d366f142687677542788af3a0d1f9ab1ceca6",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +170,174 @@            return keySerde.serializer().serialize(topic, key);\n        } catch (final ClassCastException e) {\n            final String keyClass = key == null ? \"unknown because key is null\" : key.getClass().getName();\n            throw new StreamsException(\n                    String.format(\"A serializer (key: %s) is not compatible to the actual key type \" +"
  }
]