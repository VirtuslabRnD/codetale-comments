[
  {
    "id" : "fb3ec3fc-5186-45ee-9215-ce06f96713c8",
    "prId" : 5055,
    "prUrl" : "https://github.com/apache/kafka/pull/5055#pullrequestreview-121974334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec52342c-b6a0-4641-82e9-2b75ce40ba99",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Let's avoid TODOs in the code. We can point to the relevant part of the code in the JIRA.",
        "createdAt" : "2018-05-21T23:00:25Z",
        "updatedAt" : "2018-05-21T23:00:25Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d92748c47b3ea4894b7ac7994c6205ddb026d16c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +175,179 @@        log.debug(\"Trying to check if topics {} have been created with expected number of partitions.\", topics);\n\n        // TODO: KAFKA-6928. should not need retries in the outer caller as it will be retried internally in admin client\n        int remainingRetries = retries;\n        boolean retry;"
  },
  {
    "id" : "8fb2d448-7ca1-4556-849c-97f5c1c79a9b",
    "prId" : 5389,
    "prUrl" : "https://github.com/apache/kafka/pull/5389#pullrequestreview-138501388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53597410-99b2-487d-9d49-a61dac5422d2",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This is just a Java8 rewrite",
        "createdAt" : "2018-07-18T18:24:42Z",
        "updatedAt" : "2018-07-19T18:48:02Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "806e6a84-3b75-469c-8c49-a306e06a14a2",
        "parentId" : "53597410-99b2-487d-9d49-a61dac5422d2",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Nice!",
        "createdAt" : "2018-07-19T02:04:54Z",
        "updatedAt" : "2018-07-19T18:48:02Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "923f6fb5678e8dcb67ab83c648e055f2aaf41f20",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +152,156 @@\n                if (retry) {\n                    newTopics.removeIf(newTopic -> createTopicNames.contains(newTopic.name()));\n\n                    continue;"
  },
  {
    "id" : "3211a411-b188-46bb-b104-f3ec5bc93e50",
    "prId" : 5929,
    "prUrl" : "https://github.com/apache/kafka/pull/5929#pullrequestreview-178189019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7894cc3-de26-4d56-8a0e-3d8c25e93cc7",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Do we need to add the error message for this case? Might be miss leading?",
        "createdAt" : "2018-11-20T22:53:36Z",
        "updatedAt" : "2018-11-26T09:09:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "243d35c2-56df-4237-83cb-1e00cbba13ec",
        "parentId" : "f7894cc3-de26-4d56-8a0e-3d8c25e93cc7",
        "authorId" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "body" : "There was already a similar message before, when the Topic existed so I left it there, shall I remove it?",
        "createdAt" : "2018-11-23T14:25:38Z",
        "updatedAt" : "2018-11-26T09:09:26Z",
        "lastEditedBy" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "tags" : [
        ]
      },
      {
        "id" : "b288c30f-d886-427f-94e9-4fce93eb618d",
        "parentId" : "f7894cc3-de26-4d56-8a0e-3d8c25e93cc7",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ah. I got confused because of the variable name. Can we update it to `createdTopicNames` ?",
        "createdAt" : "2018-11-23T19:34:28Z",
        "updatedAt" : "2018-11-26T09:09:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c9eefefe-bc18-46ef-99ce-46f7e7dd9258",
        "parentId" : "f7894cc3-de26-4d56-8a0e-3d8c25e93cc7",
        "authorId" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "body" : "createdTopicNames makes more sense, I renamed it.",
        "createdAt" : "2018-11-26T09:15:55Z",
        "updatedAt" : "2018-11-26T09:15:55Z",
        "lastEditedBy" : "9facab0e-acaf-4e0e-a0bc-3bd6dc2b3138",
        "tags" : [
        ]
      }
    ],
    "commit" : "23dfca52cea0cc94ea5852454a732fa97bf16799",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +153,157 @@                                log.info(\"Topic {} exists already and has the right number of partitions: {}\",\n                                        topicName,\n                                        couldNotCreateTopic.toString());\n                            } else {\n                                retry = true;"
  },
  {
    "id" : "28d627fe-d238-4bc1-b43e-246efb690f79",
    "prId" : 6085,
    "prUrl" : "https://github.com/apache/kafka/pull/6085#pullrequestreview-189196042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bebf1d0c-1b3c-434f-a616-34288eb7728a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "What is the impact that we don't handle `TimeoutException` any longer? With internal admin client retries, could we still get a timeout exception?",
        "createdAt" : "2019-01-03T21:16:08Z",
        "updatedAt" : "2019-01-04T18:48:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "d5a8e216-172d-437c-9d70-5a82cad223c3",
        "parentId" : "bebf1d0c-1b3c-434f-a616-34288eb7728a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "`StreamsConfig.RETRIES_CONFIG` will be passed to AdminClient as `AdminClientConfig.RETRIES_CONFIG`; default value is 5.\r\n\r\nBefore this change, timeout exception will be retried up to 5 times in the outer loop, and with the inner admin client's loop of 5, it means that we would retry at most 5 * 5 = 25 times with backoff for timeouts.\r\n\r\nAfter this change we only rely on inner admin client's loop; so technically speaking we are less resilient to timeouts, BUT I think the previous logic itself is just \"more resilient by mistake\" (i.e. a user bumping the num.retries from 5 to 6 would actually get 36 - 25 = 11 more retries...) and the current logic is better for users to understand: if you do observe that TimeoutException is being thrown, it means that the num.retries or retry.backoff is not sufficient and you should consider bump it up.",
        "createdAt" : "2019-01-03T21:47:04Z",
        "updatedAt" : "2019-01-04T18:48:10Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "42bb5da4237243e10076eb112b66c22b671e3ec5",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +143,147 @@                                \"Will retry to create this topic in {} ms (to let broker finish async delete operation first).\\n\" +\n                                \"Error message was: {}\", topicName, retryBackOffMs, cause.toString());\n                        } else {\n                            log.error(\"Unexpected error during topic creation for {}.\\n\" +\n                                \"Error message was: {}\", topicName, cause.toString());"
  },
  {
    "id" : "b65a2b86-d046-4e54-9543-07ae33e952c1",
    "prId" : 6085,
    "prUrl" : "https://github.com/apache/kafka/pull/6085#pullrequestreview-189196208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "007a2618-9a02-468c-9f94-511a3c63346b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: do you want to add a comment as above? ",
        "createdAt" : "2019-01-03T21:18:41Z",
        "updatedAt" : "2019-01-04T18:48:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "76f76493-c535-4d3e-9bea-b89ec4c28aaa",
        "parentId" : "007a2618-9a02-468c-9f94-511a3c63346b",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack.",
        "createdAt" : "2019-01-03T21:47:36Z",
        "updatedAt" : "2019-01-04T18:48:10Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "42bb5da4237243e10076eb112b66c22b671e3ec5",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +198,202 @@            } catch (final InterruptedException fatalException) {\n                // this should not happen; if it ever happens it indicate a bug\n                Thread.currentThread().interrupt();\n                log.error(INTERRUPTED_ERROR_MESSAGE, fatalException);\n                throw new IllegalStateException(INTERRUPTED_ERROR_MESSAGE, fatalException);"
  },
  {
    "id" : "63a8bbd8-1133-4e1b-9fc7-4f83177d2f0c",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b724dbec-9a0b-4f04-ae0c-4644efd193e4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This extra condition should be effectively equivalent, since if we have an existing partition count, then it shouldn't have ever been `-1` and therefore we should be fine to only run the equality check if number of partitions is also specified.",
        "createdAt" : "2019-09-05T18:35:42Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +227,231 @@            final String topicName = entry.getKey();\n            final Optional<Integer> numberOfPartitions = entry.getValue().numberOfPartitions();\n            if (existedTopicPartition.containsKey(topicName) && numberOfPartitions.isPresent()) {\n                if (!existedTopicPartition.get(topicName).equals(numberOfPartitions.get())) {\n                    final String errorMsg = String.format(\"Existing internal topic %s has invalid partitions: \" +"
  },
  {
    "id" : "17f961b1-f583-43d1-b8bc-865d21647afd",
    "prId" : 8039,
    "prUrl" : "https://github.com/apache/kafka/pull/8039#pullrequestreview-354209949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b72bb72-a0d8-4da2-97bc-fcf3a5ab930e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is the actual fix: we should not loop over the global topic-map but only the remaining `topics-to-validate`. cc @ableegoldman ",
        "createdAt" : "2020-02-05T01:41:28Z",
        "updatedAt" : "2020-02-10T16:54:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6e177f09-f660-4574-a3cd-6d49a86aa5f5",
        "parentId" : "2b72bb72-a0d8-4da2-97bc-fcf3a5ab930e",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Yikes, nice find! I'm pretty sure this is behind that C3 issue. I'm sure there's a good reason for them to race against Streams in the internal topic creation...",
        "createdAt" : "2020-02-06T05:45:56Z",
        "updatedAt" : "2020-02-10T16:54:54Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e3176effe9bedad1d91cdf2a71907c125babf2b",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +227,231 @@        final Set<String> topicsToCreate = new HashSet<>();\n        for (final String topicName : topicsToValidate) {\n            final Optional<Integer> numberOfPartitions = topicsMap.get(topicName).numberOfPartitions();\n            if (existedTopicPartition.containsKey(topicName) && numberOfPartitions.isPresent()) {\n                if (!existedTopicPartition.get(topicName).equals(numberOfPartitions.get())) {"
  },
  {
    "id" : "613235c9-ca1c-46d5-8879-b1e73387d5d8",
    "prId" : 8039,
    "prUrl" : "https://github.com/apache/kafka/pull/8039#pullrequestreview-353968290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8979b290-5425-42f3-b63e-8f69bcfadb29",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Do we still need to pass in the topicsMap, as we are no longer looping it?",
        "createdAt" : "2020-02-05T18:53:54Z",
        "updatedAt" : "2020-02-10T16:54:54Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "95f3f31e-6658-4cf7-b8b5-ddf35af3d5bd",
        "parentId" : "8979b290-5425-42f3-b63e-8f69bcfadb29",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yes we need the InternalTopicConfig object from it :)",
        "createdAt" : "2020-02-05T19:07:28Z",
        "updatedAt" : "2020-02-10T16:54:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "526c001e-ecfc-4131-96a8-fb0ecd18facb",
        "parentId" : "8979b290-5425-42f3-b63e-8f69bcfadb29",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "More specifically we need the `numberOfPartitions` to compare.",
        "createdAt" : "2020-02-05T19:08:37Z",
        "updatedAt" : "2020-02-10T16:54:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e3176effe9bedad1d91cdf2a71907c125babf2b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +218,222 @@     */\n    private Set<String> validateTopics(final Set<String> topicsToValidate, final Map<String, InternalTopicConfig> topicsMap) {\n        if (!topicsMap.keySet().containsAll(topicsToValidate)) {\n            throw new IllegalStateException(\"The topics map \" + topicsMap.keySet() + \" does not contain all the topics \" +\n                topicsToValidate + \" trying to validate.\");"
  },
  {
    "id" : "8e1bf42f-7940-4afd-9333-a501743e6584",
    "prId" : 8662,
    "prUrl" : "https://github.com/apache/kafka/pull/8662#pullrequestreview-412056334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eedd693-2082-4aec-92e5-9cde7a377cd3",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It's not what you signed up for, but I'm wondering if we should at least submit a Jira to give some of these AdminClient methods a \"full consistency\" mode. In other words, since the command returns a future anyway, it would be nice to be able to tell it not to return until it can guarantee the topic will appear to be fully created on all brokers.\r\n\r\nI'm mildly concerned that we're just kicking the can down the road a little ways with this PR. I.e., we let the assignment happen, but then some other metadata (or data) operation for that topic will just fail shortly thereafter.\r\n\r\nMore generally, we jump through a lot of hoops in our own tests to try and make sure that the topics are really, actually created (or deleted) before proceeding with the test, and I'm sure that our users also suffer from the same problem in their testing and production code.",
        "createdAt" : "2020-05-13T20:38:09Z",
        "updatedAt" : "2020-05-14T17:05:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d3d2c354-e8c6-48a7-8a03-163e605029e7",
        "parentId" : "6eedd693-2082-4aec-92e5-9cde7a377cd3",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think this race condition was particularly severe since we do the listOffsets request pretty much immediately after creating the topics, whereas whatever we're doing with that topic next will not be until the rebalance was completed.\r\n\r\nAFAIK we've never had any users report subsequent operations failing after the first rebalance due to not-yet-fully-created topics, but it could have just slipped past us",
        "createdAt" : "2020-05-14T17:35:15Z",
        "updatedAt" : "2020-05-14T17:35:15Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "79f2bd46-6a51-4c9c-b37d-149364ab03b5",
        "parentId" : "6eedd693-2082-4aec-92e5-9cde7a377cd3",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I do agree it would be useful though. Feel free to create a ticket :P ",
        "createdAt" : "2020-05-14T17:35:34Z",
        "updatedAt" : "2020-05-14T17:35:35Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "82c70f9d-3e14-4bb6-87e2-15b9ae895ff6",
        "parentId" : "6eedd693-2082-4aec-92e5-9cde7a377cd3",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks! Will do. I just wanted to bounce the idea off you first, in case it was stupid.",
        "createdAt" : "2020-05-14T18:00:41Z",
        "updatedAt" : "2020-05-14T18:00:41Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "df24f6e351160de97ae664daf4f433abf54334d1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +174,178 @@            throw new StreamsException(timeoutAndRetryError);\n        }\n        log.debug(\"Completed validating internal topics and created {}\", newlyCreatedTopics);\n\n        return newlyCreatedTopics;"
  }
]