[
  {
    "id" : "8e3d579e-4957-4a2b-9ab9-0811be738cbf",
    "prId" : 9191,
    "prUrl" : "https://github.com/apache/kafka/pull/9191#pullrequestreview-469482775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "292b5bcd-7e91-4c3c-a9b1-5cd5231cda1b",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "What's this for (or going to be for)?",
        "createdAt" : "2020-08-17T18:37:14Z",
        "updatedAt" : "2020-09-03T10:12:24Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "979c4add-3890-437d-b381-1857c2a1398d",
        "parentId" : "292b5bcd-7e91-4c3c-a9b1-5cd5231cda1b",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "That is a good question. I have to admit that I blindly copied it from another exception class. The field has to do with exceptions implementing the `Serializable` interface. This field tells the JVM whether the serialized object can be deserialized into an object of the class that it is available in the JVM. See https://stackoverflow.com/questions/7187302/what-is-serialversionuid-in-java-normally-in-exception-class    ",
        "createdAt" : "2020-08-18T13:58:25Z",
        "updatedAt" : "2020-09-03T10:12:24Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a6cd9a4784b641c1e9877b1b4146a3cff74ccc0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@public class MissingSourceTopicException extends StreamsException {\n\n    private final static long serialVersionUID = 1L;\n\n    public MissingSourceTopicException(final String message) {"
  },
  {
    "id" : "ba21c6b4-1411-4e4f-836a-d8c56cf7ae80",
    "prId" : 9191,
    "prUrl" : "https://github.com/apache/kafka/pull/9191#pullrequestreview-469681089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "969c429f-5434-4394-9a34-a9b193279b55",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm not sure this should extend StreamsException, my understanding is that it's generally reserved for Streams internal errors and not user code/setup issues",
        "createdAt" : "2020-08-17T18:57:04Z",
        "updatedAt" : "2020-09-03T10:12:24Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "64377104-db0e-45f4-bf72-95603b7c32c6",
        "parentId" : "969c429f-5434-4394-9a34-a9b193279b55",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "That is a good point. I thought all exceptions thrown from inside Streams (except for the `IllegalStateException`) should be `StreamsException`s. The `RecordDeserializer` throws a `StreamsException` when the deserialization exception handler -- which is user code -- throws any exception. Maybe @guozhangwang can help here. ",
        "createdAt" : "2020-08-18T14:13:18Z",
        "updatedAt" : "2020-09-03T10:12:24Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "5e46c17b-7427-4743-baa2-4a34044fe515",
        "parentId" : "969c429f-5434-4394-9a34-a9b193279b55",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I agree with @cadonna here, that all exceptions from inside Streams should be inheriting from `StreamsException`, and that may include 1) environmental issues like timeout --- note that after @mjsax KIP we would not throw TimeoutException (which is a KafkaException not StreamsException) but a new exception inherited from StreamsException, and IOException which are also wrapped as StateStoreException inherited from StreamsException, and 2) user bug in `process` etc which get caught by streams code.",
        "createdAt" : "2020-08-18T17:37:12Z",
        "updatedAt" : "2020-09-03T10:12:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a6cd9a4784b641c1e9877b1b4146a3cff74ccc0",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@package org.apache.kafka.streams.errors;\n\npublic class MissingSourceTopicException extends StreamsException {\n\n    private final static long serialVersionUID = 1L;"
  }
]