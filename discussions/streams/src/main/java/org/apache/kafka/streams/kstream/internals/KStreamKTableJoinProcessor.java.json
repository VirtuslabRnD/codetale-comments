[
  {
    "id" : "9d2ba406-51f5-41cd-a3bc-3adf73f61017",
    "prId" : 8414,
    "prUrl" : "https://github.com/apache/kafka/pull/8414#pullrequestreview-386923245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fddf8742-2179-4d18-a8e9-d9d60a67bf20",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Even in this first PR, we expose some bugs. In this case, ValueGetters and ValueTransformers shouldn't be able to forward anything, but nothing previously prevented them from doing it. Now, the new bounds force _us_ to wire in a context that has Void bounds.",
        "createdAt" : "2020-04-03T04:04:27Z",
        "updatedAt" : "2020-04-06T22:03:32Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "0eb647f05c2b3fa29fbd9ecb88b6fc72e274f9af",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +55,59 @@        metrics = (StreamsMetricsImpl) context.metrics();\n        droppedRecordsSensor = droppedRecordsSensorOrSkippedRecordsSensor(Thread.currentThread().getName(), context.taskId().toString(), metrics);\n        valueGetter.init(new ForwardingDisabledProcessorContext(context));\n    }\n"
  },
  {
    "id" : "e7623796-d4e8-4d1c-900f-760a94a4d563",
    "prId" : 8508,
    "prUrl" : "https://github.com/apache/kafka/pull/8508#pullrequestreview-395836274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6425762-2f57-4147-8471-83596bea4bbd",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This is an actual change -- in all other processor, we use the \"top level class\" for the logger and not the `Processor` class -- changing this for alignment.",
        "createdAt" : "2020-04-18T00:31:40Z",
        "updatedAt" : "2020-04-20T21:47:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e72cdd476c8f733788238ed303056c7369f3441",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +31,35 @@\nclass KStreamKTableJoinProcessor<K1, K2, V1, V2, R> extends AbstractProcessor<K1, V1> {\n    private static final Logger LOG = LoggerFactory.getLogger(KStreamKTableJoin.class);\n\n    private final KTableValueGetter<K2, V2> valueGetter;"
  },
  {
    "id" : "25b1aa51-4dc8-47dd-8d5b-41e45d1d808b",
    "prId" : 9186,
    "prUrl" : "https://github.com/apache/kafka/pull/9186#pullrequestreview-472788522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4160af8-6f98-4939-849f-da942350176b",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "We need to remove this too, right? We shouldn't forward anything regardless of whether it's a left join, if the mapped key is null then there's nothing to map it to",
        "createdAt" : "2020-08-21T20:29:31Z",
        "updatedAt" : "2020-09-08T23:03:50Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "d23f46c11c41b03834d67e5cdc6b558923365d61",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +76,80 @@        } else {\n            final V2 value2 = getValueOrNull(valueGetter.get(mappedKey));\n            if (leftJoin || value2 != null) {\n                context().forward(key, joiner.apply(value, value2));\n            }"
  }
]