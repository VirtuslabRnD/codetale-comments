[
  {
    "id" : "c72d9955-6b24-4fde-b279-ab7e88fa733c",
    "prId" : 4410,
    "prUrl" : "https://github.com/apache/kafka/pull/4410#pullrequestreview-92721818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94926cf4-29c5-4e2c-bc7f-6f1f44b89abe",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If we call this twice and build two list, we cannot guarantee load balanced assignment across threads. Assume you have two thread and 3 active and 3 standby tasks. We would end up with:\r\n```\r\nt1: a0, a2, s0, s2\r\nt2: a1, s1\r\n```\r\nHowever, after assigning all active tasks, we should not start to assign standby tasks on the first thread but on the \"next\" thread:\r\n```\r\nt1: a0, a2, s1\r\nt2: a1, s0, s2\r\n```\r\nWe can achieve this, by building a single list of active and standby tasks IMHO.\r\n\r\nOr do you think that this kind of load balancing is secondary? \\cc @guozhangwang @dguy ",
        "createdAt" : "2018-01-30T01:13:09Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "5ea5ed36-a389-4dda-baec-b6d2305d2e3c",
        "parentId" : "94926cf4-29c5-4e2c-bc7f-6f1f44b89abe",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "I think this could work taking a look",
        "createdAt" : "2018-01-30T21:09:31Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ca46d643897cc70a5fd92fa4d92b485e85f59bf",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +508,512 @@\n            final List<List<TaskId>> interleavedActive = interleaveTasksByGroupId(state.activeTasks(), consumers.size());\n            final List<List<TaskId>> interleavedStandby = interleaveTasksByGroupId(state.standbyTasks(), consumers.size());\n\n            int consumerTaskIndex = 0;"
  }
]