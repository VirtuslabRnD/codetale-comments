[
  {
    "id" : "24e495e4-82df-436d-a138-f103498a3f3a",
    "prId" : 5163,
    "prUrl" : "https://github.com/apache/kafka/pull/5163#pullrequestreview-126997196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abc3ba4e-6a5a-4d50-bda3-5dfe650ed139",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit renaming.",
        "createdAt" : "2018-06-08T00:08:43Z",
        "updatedAt" : "2018-06-11T17:05:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca40f17ef652a219d23b27ed11e2e8d9dbb748ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +168,172 @@    }\n\n    protected Map<TopicPartition, Long> activeTaskCheckpointableOffsets() {\n        return Collections.emptyMap();\n    }"
  },
  {
    "id" : "0981d9e0-ee89-484d-a7ae-c3bff0192ecc",
    "prId" : 5657,
    "prUrl" : "https://github.com/apache/kafka/pull/5657#pullrequestreview-155696594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afbf0463-6795-45d6-b66a-ddc88a069c33",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Need to remove this for testing -- otherwise we cannot mock `StreamTask`",
        "createdAt" : "2018-09-15T00:38:51Z",
        "updatedAt" : "2018-09-18T01:50:45Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "317e534d50cb26c93dda69261d51295817f9c6a9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    @Override\n    public Set<TopicPartition> partitions() {\n        return partitions;\n    }"
  },
  {
    "id" : "42fca8de-3dc1-465a-9af6-f69a2efd9dde",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-285033256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b6cb825-1540-4ba8-bbe8-a5f6c1b5c659",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@guozhangwang With regard to you comment about exceptions for EOS -- it seem only relevant to catch and swallow a `TimeoutException` here? Or should the caller be responsible to decide if a timeout should be swallowed? Or do you have anything else in mind?",
        "createdAt" : "2019-09-06T18:07:27Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "055c97ed-b841-4204-bbf5-34d77ab32a64",
        "parentId" : "2b6cb825-1540-4ba8-bbe8-a5f6c1b5c659",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think TimeoutException is the one, yes, but more importantly we should see if our timeout values are set reasonably in Streams :)",
        "createdAt" : "2019-09-06T18:36:02Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +253,257 @@    long committedOffsetForPartition(final TopicPartition partition) {\n        try {\n            final OffsetAndMetadata metadata = consumer.committed(partition);\n            return metadata != null ? metadata.offset() : 0L;\n        } catch (final AuthorizationException e) {"
  },
  {
    "id" : "57547c9b-c8ff-48e7-b1fa-a27f50b56f2b",
    "prId" : 7463,
    "prUrl" : "https://github.com/apache/kafka/pull/7463#pullrequestreview-299090329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d41b8bd-5b20-44d4-be6f-79d761798ad3",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why reducing the type generality here?",
        "createdAt" : "2019-10-08T22:32:52Z",
        "updatedAt" : "2019-10-10T01:02:23Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6521ef00-41b3-4445-82da-488779dacbf7",
        "parentId" : "6d41b8bd-5b20-44d4-be6f-79d761798ad3",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "In `StreamTask` constructor we call `consumer.committed(...)` that takes a `Set<TopicPartitions>` -- hence, it's easier to pass in a `Set` from the beginning on. Second, thinking about it, a `Collection` is actually too generic anyway -- we would not want to assign a `List` of partitions that may contain duplicates IMHO.",
        "createdAt" : "2019-10-08T22:44:20Z",
        "updatedAt" : "2019-10-10T01:02:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c47dfc79b0b4a8238e7bdc8707ee9ca32ff324ea",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +58,62 @@     */\n    AbstractTask(final TaskId id,\n                 final Set<TopicPartition> partitions,\n                 final ProcessorTopology topology,\n                 final Consumer<byte[], byte[]> consumer,"
  },
  {
    "id" : "fd82982d-13f0-416f-8433-9f3276021122",
    "prId" : 7597,
    "prUrl" : "https://github.com/apache/kafka/pull/7597#pullrequestreview-308111263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "960b8adc-c35c-41c1-ba80-5bba2d6af95d",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "@mjsax @guozhangwang Just added this to the PR, what do you think about including the thread id in the prefix (not just the task)? I can split this into a separate PR if you want to just get this one merged, there may be some other places/classes where this would be useful as well.",
        "createdAt" : "2019-10-25T22:05:56Z",
        "updatedAt" : "2019-10-29T02:27:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5ee94caf-c602-4d47-a4e3-ec494ba3f669",
        "parentId" : "960b8adc-c35c-41c1-ba80-5bba2d6af95d",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "SGTM to add it in this PR.",
        "createdAt" : "2019-10-28T20:00:00Z",
        "updatedAt" : "2019-10-29T02:27:27Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae29187211fcfe6a0f4e358c88d387694e26dc38",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +74,78 @@\n        final String threadIdPrefix = String.format(\"stream-thread [%s] \", Thread.currentThread().getName());\n        this.logPrefix = threadIdPrefix + String.format(\"%s [%s] \", isStandby ? \"standby-task\" : \"task\", id);\n        this.logContext = new LogContext(logPrefix);\n        this.log = logContext.logger(getClass());"
  },
  {
    "id" : "7ef5ceaf-6cf3-4109-863f-9b7b62af22bf",
    "prId" : 7748,
    "prUrl" : "https://github.com/apache/kafka/pull/7748#pullrequestreview-332367814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we catch it at this level? Seems we should move it into `ProcessorStateManger#flush()` ?\r\n\r\nAlso note, that `ProcessorStateManger#flush()` only throws the first exception what might not be what we want to detect this case correctly.",
        "createdAt" : "2019-11-27T01:24:25Z",
        "updatedAt" : "2019-12-03T04:02:12Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "520ccebf-6f65-4187-8d84-ea79a2ae4c89",
        "parentId" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I wasn't sure... This way is a bit roundabout. On the other hand, right now, `TaskMigratedException` is only thrown by the tasks themselves or the threads that run them. It didn't seem within the responsibility of the `ProcessorStateManager` to reason about what specific exceptions imply about the state of the task.",
        "createdAt" : "2019-11-28T05:57:20Z",
        "updatedAt" : "2019-12-03T04:02:12Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "b5079045-df3d-4374-9744-85bce2f8193e",
        "parentId" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Fair enough. It's not ideal that we get a `ProcessorStateException` and have to call `getCause()`, but well, it is what it is.",
        "createdAt" : "2019-11-28T07:19:57Z",
        "updatedAt" : "2019-12-03T04:02:12Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7ada22ca-a0e8-4dda-aef8-e98a22c2e4df",
        "parentId" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Reading the code here: we throw `TaskMigratedException` in both `StreamTask` as well as `StreamThread`. For the first case, the exception is thrown all the way to the caller of `TaskManager` and rethrown (hence in the level of `StreamThread`); the latter case is only a few exceptional situations where the tasks are closed due to underlying exceptions.\r\n\r\nI feel throwing the exception in the level of `StreamTask` is fine, but we did too many capture / rethrow in different layers on top of it, which could be cleaned up in a separate tech-debt PR.",
        "createdAt" : "2019-12-03T21:45:43Z",
        "updatedAt" : "2019-12-03T23:29:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "8eb9d713-2017-4974-b85a-154a749ec6bc",
        "parentId" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I very much agree. It's quite difficult to trace which exceptions would exist in different parts of the stack, and it would be nice to clean it up in the future.",
        "createdAt" : "2019-12-04T00:27:28Z",
        "updatedAt" : "2019-12-04T00:27:28Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "67f73a38-85f6-43b6-9b7f-b55106193b68",
        "parentId" : "1c4d8c9e-21b1-4fad-85f1-9e9b2e9d6a38",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@vvcephei while working on the cleanup PR I realized that when we call `store.flush` internally we should not blindly wrap all thrown exceptions from stores, but only those not `StreamsException` -- i.e. if the error is not from the store itself (like an IOException) but from the streams library, then just throw it out directly.\r\n\r\nWill do this small refactoring in my PR.",
        "createdAt" : "2019-12-16T06:59:19Z",
        "updatedAt" : "2019-12-16T06:59:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "96a2d969df7fe000bbda04c9aab3b0d50eaa655c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +176,180 @@        try {\n            stateMgr.flush();\n        } catch (final ProcessorStateException e) {\n            if (e.getCause() instanceof RecoverableClientException) {\n                throw new TaskMigratedException(this, e);"
  },
  {
    "id" : "b5794e6b-6a20-4306-9050-2f48ff18b65f",
    "prId" : 9368,
    "prUrl" : "https://github.com/apache/kafka/pull/9368#pullrequestreview-501512269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8004642a-1876-4e91-a060-77e30b8cf21e",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As we call this reset logic \"blindly\" we put this guard to avoid spamming the logs.",
        "createdAt" : "2020-10-03T01:58:27Z",
        "updatedAt" : "2020-10-16T21:53:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ff9abd682674971e8e04d8e867caa4e19d1d319",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +199,203 @@    @Override\n    public void clearTaskTimeout() {\n        if (deadlineMs != NO_DEADLINE) {\n            log.debug(\"Clearing task timeout.\");\n            deadlineMs = NO_DEADLINE;"
  },
  {
    "id" : "6bd584a9-64fe-43e5-90b7-2b04b70cef4c",
    "prId" : 9801,
    "prUrl" : "https://github.com/apache/kafka/pull/9801#pullrequestreview-560216966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a37c5ff-b2c4-4140-a497-69a4831bbb83",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Renaming to get better name.",
        "createdAt" : "2020-12-30T22:18:18Z",
        "updatedAt" : "2020-12-30T23:35:41Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "22cf629f662ee585387bbb6c8367e991ef8edc44",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +150,154 @@\n    @Override\n    public void updateInputPartitions(final Set<TopicPartition> topicPartitions, final Map<String, List<String>> allTopologyNodesToSourceTopics) {\n        this.inputPartitions = topicPartitions;\n        topology.updateSourceTopics(allTopologyNodesToSourceTopics);"
  }
]