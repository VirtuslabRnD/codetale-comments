[
  {
    "id" : "24e495e4-82df-436d-a138-f103498a3f3a",
    "prId" : 5163,
    "prUrl" : "https://github.com/apache/kafka/pull/5163#pullrequestreview-126997196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abc3ba4e-6a5a-4d50-bda3-5dfe650ed139",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit renaming.",
        "createdAt" : "2018-06-08T00:08:43Z",
        "updatedAt" : "2018-06-11T17:05:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca40f17ef652a219d23b27ed11e2e8d9dbb748ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +168,172 @@    }\n\n    protected Map<TopicPartition, Long> activeTaskCheckpointableOffsets() {\n        return Collections.emptyMap();\n    }"
  },
  {
    "id" : "0981d9e0-ee89-484d-a7ae-c3bff0192ecc",
    "prId" : 5657,
    "prUrl" : "https://github.com/apache/kafka/pull/5657#pullrequestreview-155696594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afbf0463-6795-45d6-b66a-ddc88a069c33",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Need to remove this for testing -- otherwise we cannot mock `StreamTask`",
        "createdAt" : "2018-09-15T00:38:51Z",
        "updatedAt" : "2018-09-18T01:50:45Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "317e534d50cb26c93dda69261d51295817f9c6a9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    @Override\n    public Set<TopicPartition> partitions() {\n        return partitions;\n    }"
  },
  {
    "id" : "42fca8de-3dc1-465a-9af6-f69a2efd9dde",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-285033256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b6cb825-1540-4ba8-bbe8-a5f6c1b5c659",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@guozhangwang With regard to you comment about exceptions for EOS -- it seem only relevant to catch and swallow a `TimeoutException` here? Or should the caller be responsible to decide if a timeout should be swallowed? Or do you have anything else in mind?",
        "createdAt" : "2019-09-06T18:07:27Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "055c97ed-b841-4204-bbf5-34d77ab32a64",
        "parentId" : "2b6cb825-1540-4ba8-bbe8-a5f6c1b5c659",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think TimeoutException is the one, yes, but more importantly we should see if our timeout values are set reasonably in Streams :)",
        "createdAt" : "2019-09-06T18:36:02Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +253,257 @@    long committedOffsetForPartition(final TopicPartition partition) {\n        try {\n            final OffsetAndMetadata metadata = consumer.committed(partition);\n            return metadata != null ? metadata.offset() : 0L;\n        } catch (final AuthorizationException e) {"
  }
]