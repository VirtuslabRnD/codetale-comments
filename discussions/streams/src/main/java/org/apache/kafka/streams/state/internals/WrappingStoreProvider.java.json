[
  {
    "id" : "af083ca9-4efb-4099-be06-a7481378c466",
    "prId" : 7984,
    "prUrl" : "https://github.com/apache/kafka/pull/7984#pullrequestreview-354052949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfd8b19e-edf1-4da0-889e-e431b4da8406",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need this setter? Why can't we pass in `StoreQueryParams` in the constructor in the tests?",
        "createdAt" : "2020-01-29T23:34:38Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "54f95fe2-7259-4c42-ac73-ea0671497af1",
        "parentId" : "dfd8b19e-edf1-4da0-889e-e431b4da8406",
        "authorId" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "body" : "There were four different tests in this class, with different storeName or queryable store type for each test. So, I would have to create 4 different instances of wrappingStoreProvider in the #before (one for each test) if I don't add a setter. I thought this to easier. I can surely do that as well. LMK.",
        "createdAt" : "2020-01-30T04:08:42Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "tags" : [
        ]
      },
      {
        "id" : "5015a25d-dd3a-40e5-9ec0-91ac48b21965",
        "parentId" : "dfd8b19e-edf1-4da0-889e-e431b4da8406",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes, it would be cleaner to create a new instance for each test -- if you test `WrappingStoreProvider` for a different use case, it makes total sense to create a new object. We should only pock holes into the API if it is absolutely necessary to keep clean API abstractions.",
        "createdAt" : "2020-02-05T21:28:52Z",
        "updatedAt" : "2020-02-05T21:28:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87c5b9c6789e6f77819eecee0400c64d4220356f",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +41,45 @@    public void setStoreQueryParams(final StoreQueryParams storeQueryParams) {\n        this.storeQueryParams = storeQueryParams;\n    }\n\n    @Override"
  },
  {
    "id" : "de4b9b55-f77e-427f-8cf5-81907347762f",
    "prId" : 9020,
    "prUrl" : "https://github.com/apache/kafka/pull/9020#pullrequestreview-501508722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Is this really a different condition than the one on L65? It seems like the failure is still probably that the store \"migrated\" instead of \"doesn't exist\", right?",
        "createdAt" : "2020-07-16T16:05:54Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c6ea649d-0cad-47fe-9896-87f79f119fea",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "body" : "L65 catches on rebalancing, while L60 is parameter validation for incorrect partition case.",
        "createdAt" : "2020-07-16T17:07:34Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "tags" : [
        ]
      },
      {
        "id" : "a8049f92-97e5-40bf-9ffe-57b5b21f6cb4",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could you elaborate a bit more about this? If `allStores.isEmpty()` is empty, it is always possible that the specified store-partition or just store-\"null\" does not exist in this client. Why they are different failure cases?",
        "createdAt" : "2020-09-25T04:57:13Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "cf10406d-4849-4f1f-be27-08a9b2c3a27d",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Hey @dima5rr , I think Guozhang's question was hidden because the conversation was already \"resolved\". Do you mind answering this concern?",
        "createdAt" : "2020-09-29T15:08:16Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "3718230e-dcf6-47fa-90f4-1ab22242211d",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "body" : "Hey @guozhangwang, you're right, this check is ambiguous, it's more likely parameter sanity validation when user explicitly specify a single partition.",
        "createdAt" : "2020-10-01T08:01:20Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "tags" : [
        ]
      },
      {
        "id" : "8ca18ada-4e01-47d5-890e-8ee5b65de9f2",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Got it, in that case how about we just encode the partition in the thrown's message so that upon throwing, people can still check if the partition is `null` or not when debugging?\r\n\r\nOtherwise, this PR all LGTM :)",
        "createdAt" : "2020-10-01T21:59:14Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "382dd70c-a340-4d70-a11e-5bf471ac4825",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "body" : "Hey @guozhangwang, I am just care that in case of partition is null, the error message is referenced in official FAQ.\r\n\r\nhttps://docs.confluent.io/current/streams/faq.html#handling-invalidstatestoreexception-the-state-store-may-have-migrated-to-another-instance",
        "createdAt" : "2020-10-02T05:53:04Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "tags" : [
        ]
      },
      {
        "id" : "ce6ac9a4-580f-4ffd-a2f7-09aad877991f",
        "parentId" : "080940e9-2384-4652-a399-ac7f48b363b8",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "That's a fair point, let's just merge it as is then.",
        "createdAt" : "2020-10-03T01:10:57Z",
        "updatedAt" : "2020-10-08T08:42:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "049ec22974580acd023f5d06e4cb34bfd4ad935e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +59,63 @@            if (storeQueryParameters.partition() != null) {\n                throw new InvalidStateStoreException(\n                        String.format(\"The specified partition %d for store %s does not exist.\",\n                                storeQueryParameters.partition(),\n                                storeName));"
  }
]