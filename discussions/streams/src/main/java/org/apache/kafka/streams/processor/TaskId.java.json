[
  {
    "id" : "d6a7a83f-eec1-428e-b625-dce40fba349b",
    "prId" : 10615,
    "prUrl" : "https://github.com/apache/kafka/pull/10615#pullrequestreview-648799512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b09c6bb-ca5e-490c-b3f2-9a4458979c39",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Although I did strip out the protocol change, I left this in since it doesn't affect anything until we actually bump the protocol version (which I did take out of this PR)",
        "createdAt" : "2021-04-30T01:39:27Z",
        "updatedAt" : "2021-04-30T06:33:17Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "f720d7b28d4c7ff21667ac2893e3ab7009a73abd",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +101,105 @@        out.writeInt(topicGroupId);\n        out.writeInt(partition);\n        if (version >= MIN_NAMED_TOPOLOGY_VERSION) {\n            if (namedTopology != null) {\n                out.writeInt(namedTopology.length());"
  },
  {
    "id" : "d3959f85-fe9f-43ff-8ce5-30d027cd9255",
    "prId" : 10755,
    "prUrl" : "https://github.com/apache/kafka/pull/10755#pullrequestreview-668544758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7db23f48-998e-4ffc-a458-2a8726e4a960",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I noticed this has been (re)moved since 2.8 so I put it back with updates to handle named topologies, plus tests which it did not seem to have",
        "createdAt" : "2021-05-24T22:44:32Z",
        "updatedAt" : "2021-05-24T22:44:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "4f9fc349-bbaf-49f1-ba06-d3f39a27ad49",
        "parentId" : "7db23f48-998e-4ffc-a458-2a8726e4a960",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If it was removed (and release in 2.8), why add it back? Seems we don't need it?",
        "createdAt" : "2021-05-26T01:25:43Z",
        "updatedAt" : "2021-05-26T01:28:31Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b6b1ef6c-4a33-45c7-a244-73838be7e906",
        "parentId" : "7db23f48-998e-4ffc-a458-2a8726e4a960",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Well that would be a breaking change by removing a non-deprecated API, no? And in this case I actually believe we should _not_ deprecate it -- if `toString` is part of the public TaskId API (and it should be) then this `parse` method which does the reverse should be as well. As I discussed with some during the KIP-740 ~debacle~ debate, part of the public contract of TaskId is in its string representation since that is what ends up in logs, metrics, etc. So imo it does make sense to provide a String-to-TaskId API",
        "createdAt" : "2021-05-26T02:24:09Z",
        "updatedAt" : "2021-05-26T02:24:09Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bcb66fdb63a9f7d1fb054121e3da3c1b303d3f1",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +87,91 @@     * @throws TaskIdFormatException if the taskIdStr is not a valid {@link TaskId}\n     */\n    public static TaskId parse(final String taskIdStr) {\n        final int firstIndex = taskIdStr.indexOf('_');\n        final int secondIndex = taskIdStr.indexOf('_', firstIndex + 1);"
  },
  {
    "id" : "49bb031c-dcde-4065-a7d7-6118b9ddd3f3",
    "prId" : 10755,
    "prUrl" : "https://github.com/apache/kafka/pull/10755#pullrequestreview-668543590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80f51464-ac6f-42e7-a409-87034f351cb8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I guess I missed the \"name topology\" change. What is a topology name? How to set it? And do we ensure that we don't allow `_` in its name?",
        "createdAt" : "2021-05-26T01:28:21Z",
        "updatedAt" : "2021-05-26T01:28:31Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ceb30280-4365-426d-a99e-012652a6aa7f",
        "parentId" : "80f51464-ac6f-42e7-a409-87034f351cb8",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Yes, we plan to restrict the `_` character. If we want to loosen that up later we can just parse this from the back, but I think it's reasonable to just disallow `_` completely. \r\n\r\n> What is a topology name?\r\n\r\nGreat question. Not necessarily a short answer but I can try -- basically an independent and isolated piece of a topology that can be added/removed/etc at will, even on a running app. \r\n\r\n> How to set it?\r\n\r\nThe skeleton API was merged in [#10615](https://github.com/apache/kafka/pull/10615/files), it has/is evolving a bit since then but the basic idea holds -- each NamedTopology is built up with a special builder called the NamedTopologyStreamsBuilder. And a dedicated KafkaStreams wrapper is the entry point for starting up an app using NamedTopologies. All currently under the `internals` package while it's under the experimental phase so it should not be possible for a user to end up with anything NamedTopology through public APIs.",
        "createdAt" : "2021-05-26T02:20:38Z",
        "updatedAt" : "2021-05-26T02:20:39Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bcb66fdb63a9f7d1fb054121e3da3c1b303d3f1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +88,92 @@     */\n    public static TaskId parse(final String taskIdStr) {\n        final int firstIndex = taskIdStr.indexOf('_');\n        final int secondIndex = taskIdStr.indexOf('_', firstIndex + 1);\n        if (firstIndex <= 0 || firstIndex + 1 >= taskIdStr.length()) {"
  },
  {
    "id" : "fd77a368-8258-4183-a451-8227c67ad370",
    "prId" : 11192,
    "prUrl" : "https://github.com/apache/kafka/pull/11192#pullrequestreview-725708603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a227c66f-a0f7-4dd5-9731-e51aed55dc23",
        "parentId" : null,
        "authorId" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "body" : "I am just curious why this was not a getter (ie getTopologyName()) instead?",
        "createdAt" : "2021-08-09T18:47:44Z",
        "updatedAt" : "2021-08-09T18:49:54Z",
        "lastEditedBy" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "tags" : [
        ]
      },
      {
        "id" : "cdf57ba7-e721-4762-92e6-2bedfee16632",
        "parentId" : "a227c66f-a0f7-4dd5-9731-e51aed55dc23",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "It's by convention I think. If you look at all of the other \"getters\" none of them are prefixed with get either. I.e. partition() or subtopology()",
        "createdAt" : "2021-08-09T18:56:03Z",
        "updatedAt" : "2021-08-09T18:56:03Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "50b345db30abe12277690db51eb2e626b10a2e83",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +78,82 @@     */\n    public String topologyName() {\n        return topologyName;\n    }\n"
  }
]