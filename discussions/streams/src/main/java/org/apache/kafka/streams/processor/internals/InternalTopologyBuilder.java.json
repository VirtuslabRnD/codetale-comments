[
  {
    "id" : "44362f60-7ac4-4363-8892-a173133e9d52",
    "prId" : 5017,
    "prUrl" : "https://github.com/apache/kafka/pull/5017#pullrequestreview-120827745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a1c30e3-4383-403d-a53a-a0dd3ce8e479",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Can this be simplified with a single `if-then-else` checking `storeToChangelogTopic.containsKey(stateFactory.name())` once?",
        "createdAt" : "2018-05-15T21:37:17Z",
        "updatedAt" : "2018-05-17T17:32:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9f3e889d-974d-416c-b3b6-c0ca725d995d",
        "parentId" : "1a1c30e3-4383-403d-a53a-a0dd3ce8e479",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Note that `storeToChangelogTopic` and `stateChangelogTopics` are different :) The former is pre-built when the DSL is parsed, while the latter is built within the `topicGroups` to get the changelog topic configs for topics related to the topic group, a.k.a the sub-topology alone.",
        "createdAt" : "2018-05-16T21:30:36Z",
        "updatedAt" : "2018-05-17T17:32:18Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ceb316c409c687ad63a72cddc3a04b16aa25b9c",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1022,1026 @@                            final InternalTopicConfig internalTopicConfig = createChangelogTopicConfig(stateFactory, topicName);\n                            stateChangelogTopics.put(topicName, internalTopicConfig);\n                        }\n                    }\n                }"
  },
  {
    "id" : "fb27903d-33d8-4bf1-9817-01fab0469935",
    "prId" : 5218,
    "prUrl" : "https://github.com/apache/kafka/pull/5218#pullrequestreview-130903494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1adde95-1f82-46a2-92fa-f18c03ac3c3c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We had an interface, an abstract class, and a concrete class, which I collapsed into just the concrete class. The hierarchy didn't seem to provide any value in this case, and it made the code harder to analyze.",
        "createdAt" : "2018-06-13T23:10:50Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c84f411f-bfd9-4d5c-9a5d-a7c231d8118f",
        "parentId" : "e1adde95-1f82-46a2-92fa-f18c03ac3c3c",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Sounds good.",
        "createdAt" : "2018-06-18T22:27:56Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "3f47d45f-a23f-4000-87f4-a19f302b7202",
        "parentId" : "e1adde95-1f82-46a2-92fa-f18c03ac3c3c",
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "Getting rid of the abstract class sounds good, though i'd probably keep the interface. Generally i think it is better design to code against interfaces rather than concrete implementations.",
        "createdAt" : "2018-06-21T09:15:45Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      },
      {
        "id" : "8bfaf98d-6ae5-4e2b-b573-176ab1f0425a",
        "parentId" : "e1adde95-1f82-46a2-92fa-f18c03ac3c3c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I agree in principle, but (like everything) I think it needs to be balanced. I've seen projects that have a requirement that every class also has an interface, and it gets unwieldy.\r\n\r\nIn this case, the interface seems unnecessary because this class is only used inside of this file (and in this file's tests).",
        "createdAt" : "2018-06-21T15:12:26Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "499b4ed9-c32f-4dd6-b944-22e8b5d178fb",
        "parentId" : "e1adde95-1f82-46a2-92fa-f18c03ac3c3c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Also apologies for including this refactor in this PR. It was formerly related, but it's not anymore.\r\n\r\nI'd pull it out, but I think all the reviewers have looked at it already.",
        "createdAt" : "2018-06-21T16:50:03Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e58d9726a7d7d1331ac7dac3ff65c4444c5a1bbc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +126,130 @@    private final Map<StoreBuilder, String> storeToSourceChangelogTopic = new HashMap<>();\n\n    public static class StateStoreFactory {\n        private final StoreBuilder builder;\n        private final Set<String> users = new HashSet<>();"
  },
  {
    "id" : "b2cc988e-19ba-4650-be50-3d7829ba2e59",
    "prId" : 5284,
    "prUrl" : "https://github.com/apache/kafka/pull/5284#pullrequestreview-140904784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51805850-7b45-4644-84eb-c50212454685",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "You don't need the `else` here, just `return null` if the `if` evaluates to false.",
        "createdAt" : "2018-07-26T23:53:51Z",
        "updatedAt" : "2018-08-10T02:38:24Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df6208f48b6b72091fea71323d94a16102ffd13",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +1540,1544 @@            if (topicNameExtractor instanceof StaticTopicNameExtractor) {\n                return ((StaticTopicNameExtractor) topicNameExtractor).topicName;\n            } else {\n                return null;\n            }"
  },
  {
    "id" : "d144345c-d42c-410b-bae6-f7ed3a6a08b1",
    "prId" : 5284,
    "prUrl" : "https://github.com/apache/kafka/pull/5284#pullrequestreview-140904784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c601d7cc-9aea-4786-9e9a-6baea5ba70ba",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "same as above",
        "createdAt" : "2018-07-26T23:54:36Z",
        "updatedAt" : "2018-08-10T02:38:24Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df6208f48b6b72091fea71323d94a16102ffd13",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +1549,1553 @@            if (topicNameExtractor instanceof StaticTopicNameExtractor) {\n                return null;\n            } else {\n                return topicNameExtractor;\n            }"
  },
  {
    "id" : "440cf7d8-cd1c-4edd-b44c-e298d5214109",
    "prId" : 5284,
    "prUrl" : "https://github.com/apache/kafka/pull/5284#pullrequestreview-142920567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf00d7ca-6ce1-4a1a-a9c5-893992377665",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We also need to update `equals()` to include `topicPattern`",
        "createdAt" : "2018-08-02T18:35:00Z",
        "updatedAt" : "2018-08-10T02:38:24Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df6208f48b6b72091fea71323d94a16102ffd13",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +1475,1479 @@        public int hashCode() {\n            // omit successor as it might change and alter the hash code\n            return Objects.hash(name, topics, topicPattern);\n        }\n    }"
  },
  {
    "id" : "90cf203a-75d4-4a9b-bbc7-bd5dc0809e8e",
    "prId" : 5284,
    "prUrl" : "https://github.com/apache/kafka/pull/5284#pullrequestreview-227079782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b57d19fe-9bad-44a5-99c9-5ef98d6d13de",
        "parentId" : null,
        "authorId" : "186bd269-f68c-4261-bde0-dcb663d88c23",
        "body" : "NPE: ![image](https://user-images.githubusercontent.com/925755/55269396-d55f3480-5292-11e9-9c29-78c524d63c65.png)\r\n\r\nI'm not using a topic pattern, equality should still work.",
        "createdAt" : "2019-03-30T01:24:58Z",
        "updatedAt" : "2019-03-30T01:26:05Z",
        "lastEditedBy" : "186bd269-f68c-4261-bde0-dcb663d88c23",
        "tags" : [
        ]
      },
      {
        "id" : "b8d8aaef-be66-4464-b28a-ea4e0fc93f68",
        "parentId" : "b57d19fe-9bad-44a5-99c9-5ef98d6d13de",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "cc @mjsax is this an overlooked issue?",
        "createdAt" : "2019-03-31T18:40:49Z",
        "updatedAt" : "2019-03-31T18:40:50Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "0ee28b9e-763d-46d7-ab7c-da1dbd4476df",
        "parentId" : "b57d19fe-9bad-44a5-99c9-5ef98d6d13de",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Seems like. Just double checked the code and `topicPattern` could be `null`. This bug was introduced in `2.1` release.\r\n\r\n@unthingable Thanks for pointing this out. Would you like to do a PR (I create a JIRA for it: https://issues.apache.org/jira/browse/KAFKA-8240)",
        "createdAt" : "2019-04-16T09:23:59Z",
        "updatedAt" : "2019-04-16T09:24:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df6208f48b6b72091fea71323d94a16102ffd13",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +1469,1473 @@            return name.equals(source.name)\n                && topics.equals(source.topics)\n                && topicPattern.equals(source.topicPattern);\n        }\n"
  }
]