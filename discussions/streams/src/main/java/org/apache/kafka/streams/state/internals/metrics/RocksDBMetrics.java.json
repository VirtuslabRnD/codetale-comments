[
  {
    "id" : "61bd4237-209d-4a50-ab65-7a64822f92b7",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-257137630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ce0ef4c-2ea3-4f89-9db9-e1f3379f2ff0",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "One thing I would suggest we do is to create an intermediate struct to store all the parameters, in case later we need to add more fields for sensor creation.",
        "createdAt" : "2019-06-24T15:54:04Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "c5a0b88f-57c8-4037-9943-97f470382876",
        "parentId" : "3ce0ef4c-2ea3-4f89-9db9-e1f3379f2ff0",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Good idea! Done!",
        "createdAt" : "2019-07-04T14:32:09Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@    }\n\n    public static Sensor memtableBytesFlushedSensor(final StreamsMetricsImpl streamsMetrics,\n                                                    final RocksDBMetricContext metricContext) {\n        final Sensor sensor = createSensor(streamsMetrics, metricContext, MEMTABLE_BYTES_FLUSHED);"
  },
  {
    "id" : "c4f594e6-59aa-4ed4-a53d-a0c7169fbdad",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-260908089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "I would suggest we co-locate the description with metrics and refactor out the sensor creation part, this may help reduce code redundancy.",
        "createdAt" : "2019-06-24T15:56:30Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "8fb860da-5a69-49a5-a27f-e1e76b5dd237",
        "parentId" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am afraid, I cannot follow. Could you elaborate?",
        "createdAt" : "2019-07-03T20:44:17Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "3d19d43d-9ded-436b-8532-078a9fc8e2ae",
        "parentId" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Maybe @abbccdda was saying to store the description strings in `static final` fields as well? I'd agree with this, just to be sure that we don't waste memory on duplicate description strings.",
        "createdAt" : "2019-07-09T15:54:42Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "045531d3-eea6-4b38-9ce5-a4788fe5f0f2",
        "parentId" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Does this make any difference since all description strings are literals in static methods?",
        "createdAt" : "2019-07-09T19:25:46Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "399aab71-98ff-458c-b1e9-bb1567972b7d",
        "parentId" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yes, each time the method is invoked (I.e., once per store), a separate copy of the string is placed on the heap. I previously didn't think this would be a big factor, but someone in the community profiled the memory usage of a long-running topology and found that these strings tend to accumulate over time.\r\n\r\nThere's no need to worry about this for short-scoped strings like exception messages, but metrics are long-lived objects, and we benefit from making them static constants.",
        "createdAt" : "2019-07-10T14:45:20Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "148f21ba-1191-4a3a-ada4-f50329e48a61",
        "parentId" : "a582d4a9-28cf-483f-acb2-cb59b379a2df",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Oh, I see makes sense.",
        "createdAt" : "2019-07-11T19:27:29Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@    private static final String MEMTABLE_FLUSH_TIME_MIN = MEMTABLE_FLUSH_TIME + MIN_SUFFIX;\n    private static final String MEMTABLE_FLUSH_TIME_MAX = MEMTABLE_FLUSH_TIME + MAX_SUFFIX;\n    private static final String WRITE_STALL_DURATION = \"write-stall-duration\";\n    private static final String BLOCK_CACHE_DATA_HIT_RATIO = \"block-cache-data-hit\" + RATIO_SUFFIX;\n    private static final String BLOCK_CACHE_INDEX_HIT_RATIO = \"block-cache-index-hit\" + RATIO_SUFFIX;"
  }
]