[
  {
    "id" : "9bfeb075-9ccc-41b7-95a5-acd927f666b6",
    "prId" : 5359,
    "prUrl" : "https://github.com/apache/kafka/pull/5359#pullrequestreview-143689669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I am wondering, if we might want to remove this method? Do use it only at one place and can easily pass the record timestamp there instead? Or is it useful for some special cases? Of course, this would require a KIP and separate PR -- it's might also not be high priority and just creating a JIRA for it might be fine.\r\n\r\nWDYT? \\cc @guozhangwang @bbejeck ",
        "createdAt" : "2018-08-03T20:27:56Z",
        "updatedAt" : "2018-08-03T22:03:14Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "99399f2e-d824-4075-8dac-1c9e14141038",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I think we should remove it. I just didn't bother because I didn't want to worry about the KIP right now.\r\n\r\nRight now, the only usages in our codebase are tests, and they could easily be updated.",
        "createdAt" : "2018-08-03T22:15:20Z",
        "updatedAt" : "2018-08-03T22:15:20Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8d93265f-6b14-467e-98d7-73a04dbcc1f4",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I created https://issues.apache.org/jira/browse/KAFKA-7245",
        "createdAt" : "2018-08-04T02:54:31Z",
        "updatedAt" : "2018-08-04T02:54:32Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c5130e34-659a-4c00-aedb-332e62433647",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Users can create a window store at the PAPI layer and call `put` to it with the current stream time, and it would not necessarily to be the `windowStartTimestamp`, right?",
        "createdAt" : "2018-08-04T04:40:52Z",
        "updatedAt" : "2018-08-04T04:40:52Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "4af419fb-acf8-451d-903a-6f3cd2d2a3aa",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "No sure what you aim for for the comment? Do you suggest to keep the method?",
        "createdAt" : "2018-08-04T20:55:50Z",
        "updatedAt" : "2018-08-04T20:55:50Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ce81482d-568a-43aa-9f9c-2df0b1c4291c",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yeah I was not sure if we should do KAFKA-7245 to remove the API as it would be useful for PAPI users.",
        "createdAt" : "2018-08-05T03:15:09Z",
        "updatedAt" : "2018-08-05T03:15:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "cb624769-6761-4207-9ff3-63c4de48ecce",
        "parentId" : "d06726dc-2919-45cd-8876-9f6a383cc444",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "`put(key,value)` internally calls `put(key,value,context.timestamp())` and this is something PAPI users can do manually -- and I think, it's good to force PAPI users to think about the timestamp to pass in and not just fall back to  `context.timestamp()` without thinking if it's the right thing to do. We can still close the ticket (or discuss) when anybody picks it up -- or do you want to discuss directly and maybe close immediately?",
        "createdAt" : "2018-08-06T17:32:21Z",
        "updatedAt" : "2018-08-06T17:32:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab7bd1adf4d803f561b8e46af2d06f707d21efab",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +33,37 @@     * It's highly recommended to use {@link WindowStore#put(Object, Object, long)} instead, as the record timestamp\n     * is unlikely to be the correct windowStartTimestamp in general.\n     *\n     * @param key The key to associate the value to\n     * @param value The value to update, it can be null;"
  },
  {
    "id" : "b33f3163-8e5d-4799-9d9b-6bbc2600deac",
    "prId" : 6053,
    "prUrl" : "https://github.com/apache/kafka/pull/6053#pullrequestreview-188859713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "638d54da-cf3e-42ce-ae00-4861261d7e94",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Much better. Thanks!",
        "createdAt" : "2019-01-02T23:03:54Z",
        "updatedAt" : "2019-01-03T21:56:29Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "42219c87c9f0e295d5fc80e69a1576bb2a69d078",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +49,53 @@\n    /**\n     * Put a key-value pair into the window with given window start timestamp\n     * @param key The key to associate the value to\n     * @param value The value; can be null"
  },
  {
    "id" : "92960683-1a85-4ec0-963e-6b91bd543044",
    "prId" : 9138,
    "prUrl" : "https://github.com/apache/kafka/pull/9138#pullrequestreview-481336035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d12bf0b7-7351-40fe-9644-15a858911000",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Since we are going to remove deprecated overloads with primitive long in the future, I think we do not need to expose a default function here, but just provide a default impl of the function in 204 below as UnsupportedOperation?",
        "createdAt" : "2020-08-31T23:14:27Z",
        "updatedAt" : "2020-09-02T15:24:52Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "61e87427-c876-43bf-9d1e-9d150a7a6980",
        "parentId" : "d12bf0b7-7351-40fe-9644-15a858911000",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Idk, the current defaults make sense to me. If a user has a custom store and wants to use the new `backwardFetchAll` with both longs and Instants, all they'd have to do is override the long-based `backwardFetchAll` method (they have to implement the long version no matter what, since this is what gets used internally to Streams). If we just throw UnsupportedOperationException directly from the default implementation of the Instant-based `backwardFetchAll`, then they would have to override that as well in their custom store. So we should just let the Instant default to the long method so users only have to implement one method instead of two (plus they would have to do the Instant validation themselves, etc)",
        "createdAt" : "2020-09-02T01:16:06Z",
        "updatedAt" : "2020-09-02T15:24:52Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "4152c4c2-2647-42b3-b604-d6749770f354",
        "parentId" : "d12bf0b7-7351-40fe-9644-15a858911000",
        "authorId" : "f58052af-021e-47d1-bcb5-e22f46383a12",
        "body" : "@guozhangwang do you mean the changes proposed in KIP-667? In that KIP we are removing long-based methods only from `ReadOnlyWindowStore`, but will keep it in `WindowStore`â€”unless you're referring to a different proposal.\r\n\r\nI do agree with @ableegoldman. Users will have to opt-in to reverse operations when using custom stores, and by default only add implementation for long-based to support both params options.",
        "createdAt" : "2020-09-02T15:24:52Z",
        "updatedAt" : "2020-09-02T15:24:52Z",
        "lastEditedBy" : "f58052af-021e-47d1-bcb5-e22f46383a12",
        "tags" : [
        ]
      },
      {
        "id" : "676e983f-12f9-4ac9-a4fa-646135bcc030",
        "parentId" : "d12bf0b7-7351-40fe-9644-15a858911000",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ah yes, I was thinking about ReadOnlyWindowStore exposed in IQ only. All good.",
        "createdAt" : "2020-09-02T22:10:52Z",
        "updatedAt" : "2020-09-02T22:10:53Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "273f612bfe98c58c40e77ec8a2d77e5eabdd2f18",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +197,201 @@    }\n\n    default KeyValueIterator<Windowed<K>, V> backwardFetchAll(final long timeFrom, final long timeTo) {\n        throw new UnsupportedOperationException();\n    }"
  }
]