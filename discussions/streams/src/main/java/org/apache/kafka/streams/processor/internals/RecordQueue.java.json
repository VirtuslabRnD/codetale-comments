[
  {
    "id" : "3c84d49c-418a-4a56-a21c-2dd6cf079888",
    "prId" : 5382,
    "prUrl" : "https://github.com/apache/kafka/pull/5382#pullrequestreview-138481464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4ad8611-a7c2-4d60-911b-bd648074fbb4",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "At this point, if `fifoQueue` is empty wouldn't the `headRecord` have already been consumed for processing? I'm asking as our processing is single threaded but I could be missing something here.",
        "createdAt" : "2018-07-18T21:57:36Z",
        "updatedAt" : "2018-07-18T23:58:09Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "f48b5e16-a4e0-4782-8db9-a2e2926ac6dc",
        "parentId" : "c4ad8611-a7c2-4d60-911b-bd648074fbb4",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Actually it is still possible: consider the case where (digits are ts)\r\n\r\nfifoQueue = {2}\r\nheadRecord = 1\r\n\r\nNow when we called `queue.poll` we return the record with ts 1, and updated the headRecord to 2:\r\n\r\nfifoQueue = {}\r\nheadRecord = 2\r\n\r\nI.e. the `headRecord` always stores the record to-be-returned in the next call. And the partition ts is corresponding to its ts. Does that make sense?",
        "createdAt" : "2018-07-18T23:49:16Z",
        "updatedAt" : "2018-07-18T23:58:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b470e6ef4d2f0971548ddf865a635cb5e6a551f",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +134,138 @@     */\n    public boolean isEmpty() {\n        return fifoQueue.isEmpty() && headRecord == null;\n    }\n"
  },
  {
    "id" : "ded6c605-c83f-4b07-9c93-23cf18b9fd26",
    "prId" : 6694,
    "prUrl" : "https://github.com/apache/kafka/pull/6694#pullrequestreview-269722440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "853beb15-cf9a-410d-a5b7-295c962ac0d3",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need to make `partitionTime` `public` ? In any case, please preserve the JavaDocs if you move the method.",
        "createdAt" : "2019-07-31T17:57:06Z",
        "updatedAt" : "2019-09-16T23:28:41Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "03c0024f-a4c3-4176-9983-91ac8c0a809e",
        "parentId" : "853beb15-cf9a-410d-a5b7-295c962ac0d3",
        "authorId" : "32d43f1c-0232-4c2f-9548-9c3dfd6f181a",
        "body" : "Yeah, accidentally removed it when I was rebasing the PR. Will add it back.",
        "createdAt" : "2019-08-01T16:01:29Z",
        "updatedAt" : "2019-09-16T23:28:41Z",
        "lastEditedBy" : "32d43f1c-0232-4c2f-9548-9c3dfd6f181a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b42a883a14bc3a48a28624e3964be81e4f75d8f5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +75,79 @@    void setPartitionTime(final long partitionTime) {\n        this.partitionTime = partitionTime;\n    }\n\n    /**"
  }
]