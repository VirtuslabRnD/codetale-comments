[
  {
    "id" : "80258045-cf5f-44f5-a98c-46cd03c4d726",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-294638928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92597930-025b-4b41-a5a2-d8cb80b84373",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure why we need this? Couldn't we use `InternalTopicConfig`?",
        "createdAt" : "2019-09-28T01:37:28Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ca254f27-939e-4568-b176-907a2c0afde1",
        "parentId" : "92597930-025b-4b41-a5a2-d8cb80b84373",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "Thought about it, but it felt more natural to introduce separate class rather than using `RepartitionTopicConfig` in current design. `RepartitionTopicConfig` potentially can be package-private (haven't touched this in current PR) and I wanted to avoid leaking it through other packages. It felt like best to leave construction of `RepartitionTopicConfig` in `InternalTopologyBuilder` class since `InternalTopologyBuilder` \"knows the best\" how to construct it. Idea of this class is to provide bare minimum configs of internal topic properties. Hope my way of thinking around this makes sense. wdyt? ",
        "createdAt" : "2019-09-28T14:19:49Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@import java.util.Optional;\n\npublic class InternalTopicProperties {\n    private final Integer numberOfPartitions;\n"
  }
]