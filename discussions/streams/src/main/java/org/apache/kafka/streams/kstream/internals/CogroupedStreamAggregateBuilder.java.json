[
  {
    "id" : "d4b6130f-3d95-4901-ad9b-f323f197ff4f",
    "prId" : 7538,
    "prUrl" : "https://github.com/apache/kafka/pull/7538#pullrequestreview-323320869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3deeba5e-b27b-443b-92cd-32f57ef45bc4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It seems to be clumsy to get a \"random\" `AbstactStream` to call the method. Better make `ensureCopartitionWith()` a static method and pass in the full set of `groupedStreams` -- for the join case, you would pass in both `AbstractStream` that needs to be copartitioned.",
        "createdAt" : "2019-11-26T00:17:13Z",
        "updatedAt" : "2019-12-01T00:43:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "70b0e416-cd74-4aa2-92a7-ecdd1dbb7733",
        "parentId" : "3deeba5e-b27b-443b-92cd-32f57ef45bc4",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "because we still need the build from the abstract stream we would still be choosing one at  \"random\" just inside the method.",
        "createdAt" : "2019-11-26T20:01:35Z",
        "updatedAt" : "2019-12-01T00:43:00Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      },
      {
        "id" : "541fccdf-0390-4a98-a8ab-fef68e473751",
        "parentId" : "3deeba5e-b27b-443b-92cd-32f57ef45bc4",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Fair enough :)",
        "createdAt" : "2019-11-26T22:17:53Z",
        "updatedAt" : "2019-12-01T00:43:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3553929c506967ca45dff88e7139f3a4cdae0b4d",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@        final AbstractStream<K, ?> kGrouped = groupedStreams.iterator().next();\n        groupedStreams.remove(kGrouped);\n        kGrouped.ensureCopartitionWith(groupedStreams);\n\n        final Collection<StreamsGraphNode> processors = new ArrayList<>();"
  },
  {
    "id" : "934a8edb-9792-4480-838b-625965e70503",
    "prId" : 7538,
    "prUrl" : "https://github.com/apache/kafka/pull/7538#pullrequestreview-324915063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1bdfed4-da25-4135-89e5-dd6a2534d7e0",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "No need to pass in a `Named` -- we can just pass in the actual name as `String` directly -- otherwise we call `suffixWithOrElseGet` twice for no reason",
        "createdAt" : "2019-12-01T00:53:33Z",
        "updatedAt" : "2019-12-01T00:53:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3553929c506967ca45dff88e7139f3a4cdae0b4d",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@                kGroupedStream.getValue(),\n                initializer,\n                named.suffixWithOrElseGet(\n                    \"-cogroup-agg-\" + counter++,\n                    builder,"
  },
  {
    "id" : "0a4e0b1b-dff3-4f17-82c3-6b3d9dc60ffb",
    "prId" : 7538,
    "prUrl" : "https://github.com/apache/kafka/pull/7538#pullrequestreview-324915094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adf4a827-11b5-4ba2-b5ea-ca6678f27c5c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Changed this to generate a name `<userName>-cogroup-merge` to align to `<userName>-cogroup-agg-<counter>` instead of just `<userName>` for the merge node.",
        "createdAt" : "2019-12-01T00:54:50Z",
        "updatedAt" : "2019-12-01T00:54:51Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3553929c506967ca45dff88e7139f3a4cdae0b4d",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@        }\n        final String mergeProcessorName = named.suffixWithOrElseGet(\n            \"-cogroup-merge\",\n            builder,\n            CogroupedKStreamImpl.MERGE_NAME);"
  }
]