[
  {
    "id" : "b0c0c891-c754-4e97-8ea7-1a09ee49b772",
    "prId" : 7566,
    "prUrl" : "https://github.com/apache/kafka/pull/7566#pullrequestreview-306436408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2478634f-b646-4ae2-8644-f319bac74c23",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "We still need to create a process rate sensor which would then be referenced by source nodes as their process rate's parent sensor, right?",
        "createdAt" : "2019-10-23T18:59:52Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "7a427113-e842-4683-bdf3-d9cf29276c56",
        "parentId" : "2478634f-b646-4ae2-8644-f319bac74c23",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Yes, I plan to add this in another PR.",
        "createdAt" : "2019-10-24T09:27:42Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "415bca6f0f8d8acd47bfb9bdbc19e08fa50eb673",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@                                              final String taskId,\n                                              final StreamsMetricsImpl streamsMetrics) {\n        if (streamsMetrics.version() == Version.LATEST) {\n            return avgAndMaxSensor(\n                threadId,"
  },
  {
    "id" : "fcccd722-e845-43a3-b03e-01f026552cbd",
    "prId" : 7566,
    "prUrl" : "https://github.com/apache/kafka/pull/7566#pullrequestreview-306838898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "602e8b2d-84cd-46a7-ac4b-1eaf945de095",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The following three static functions can be refactored and merged into StreamsMetricsImpl.",
        "createdAt" : "2019-10-23T18:59:59Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "027becee-b775-4209-b91f-1e6770e6948e",
        "parentId" : "602e8b2d-84cd-46a7-ac4b-1eaf945de095",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am afraid I cannot completely follow. I would prefer to leave them here because they are task specific. Within those methods task-level sensors and tag maps are created. If I refactor those methods and move them to `StreamsMetricsImpl` I have to create task-level sensors and tag maps in each public static method. I wanted to avoid this by adding this methods. ",
        "createdAt" : "2019-10-24T09:57:02Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "abd85669-8ccd-49c0-9488-d7b6001fc586",
        "parentId" : "602e8b2d-84cd-46a7-ac4b-1eaf945de095",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thanks for the explanation, that makes sense.",
        "createdAt" : "2019-10-24T20:19:39Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "415bca6f0f8d8acd47bfb9bdbc19e08fa50eb673",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +186,190 @@    }\n\n    private static Sensor invocationRateAndCountSensor(final String threadId,\n                                                       final String taskId,\n                                                       final String metricName,"
  },
  {
    "id" : "dbed54b7-ac96-4f48-bb1f-ddc24914fcc0",
    "prId" : 7566,
    "prUrl" : "https://github.com/apache/kafka/pull/7566#pullrequestreview-307324230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fde6c508-5163-446c-be23-5d5b5fdb26bd",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "What does the function name mean?",
        "createdAt" : "2019-10-23T19:00:13Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "fdc72b53-e458-423a-ac63-43130c6e4c5c",
        "parentId" : "fde6c508-5163-446c-be23-5d5b5fdb26bd",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "An empty sensor is a sensor without added metrics. I need such an empty sensor for sensors that exist in one built-in metrics version but not in the other. Examples are the parent commit sensor on thread-level that exist in `0100-24` but not in `latest` or the punctuate sensor on task-level which exist in `lasest` but not in `0100-24`. In such a way I do not need to use `Optional` and change the code to record the metrics. ",
        "createdAt" : "2019-10-24T12:16:06Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "170f1bfb-93d9-4c50-b7bb-3e24f8fabb41",
        "parentId" : "fde6c508-5163-446c-be23-5d5b5fdb26bd",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Got it, I'm wondering if it would add any unnecessary overhead to the metrics registry with the empty sensors compared with the `optional` approach? Maybe I'm paranoid here, just double checking to make sure that the access pattern into the registry would not be largely impacted by the larger map with empty sensors.",
        "createdAt" : "2019-10-24T20:20:56Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "71152b90-6045-4e0e-bf81-bb1957865d23",
        "parentId" : "fde6c508-5163-446c-be23-5d5b5fdb26bd",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I realized by working on processor node metrics, that the sensors that I created as empty sensors on task-level like `punctuateSensor` are used as parent sensors on processor node level for version `0100-24`. So they will not stay empty. So I guess in the end there will only be a few empty sensors. If we experience performance issue we can still rewrite the empty sensor with the `Optional` approach. ",
        "createdAt" : "2019-10-25T08:41:26Z",
        "updatedAt" : "2019-10-25T09:01:15Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ef5d1ad9-040b-4bd5-b512-da50c5747a26",
        "parentId" : "fde6c508-5163-446c-be23-5d5b5fdb26bd",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I guess if you want to make it really work the way you were planning, you could extract an interface for Sensor and then declare an EmptySensor that just discards updates from children... not sure if you want to potentially get into a mess, though.",
        "createdAt" : "2019-10-25T16:42:10Z",
        "updatedAt" : "2019-10-25T16:42:10Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "415bca6f0f8d8acd47bfb9bdbc19e08fa50eb673",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +258,262 @@    }\n\n    private static Sensor emptySensor(final String threadId,\n                                      final String taskId,\n                                      final String metricName,"
  }
]