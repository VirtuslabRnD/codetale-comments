[
  {
    "id" : "67c89b5b-ed03-4dd0-9e9f-8a098110b880",
    "prId" : 6149,
    "prUrl" : "https://github.com/apache/kafka/pull/6149#pullrequestreview-196196991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b963ac3c-82d8-4ca4-bc79-aa91832c9439",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Out of scope of this: we should consider have a KIP in the next release to refactor APIs of config setters as:\r\n\r\n```\r\npublic interface RocksDBConfigSetter {\r\n\r\n    /**\r\n     * Set the rocks db options for the provided storeName.\r\n     * \r\n     * @param storeName     the name of the store being configured\r\n     * @param options       the Rocks DB options\r\n     * @param configs       the configuration supplied to {@link org.apache.kafka.streams.StreamsConfig}\r\n     */\r\n    void setConfig(final String storeName, final DBOptions dbOptions, final ColumnFamilyOptions cfOptions, final Map<String, Object> configs);\r\n}\r\n```\r\n\r\nAnd then we can choose to call the other constructor of \r\n\r\n```\r\npublic Options(final DBOptions dbOptions,\r\n      final ColumnFamilyOptions columnFamilyOptions) {..}\r\n```",
        "createdAt" : "2019-01-23T20:04:41Z",
        "updatedAt" : "2019-01-30T17:46:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "551ef759-5b5e-4598-9c9a-7fe0a94f238d",
        "parentId" : "b963ac3c-82d8-4ca4-bc79-aa91832c9439",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Sure. Can you please create a Jira for tracking? Otherwise it might get dropped.",
        "createdAt" : "2019-01-24T18:43:28Z",
        "updatedAt" : "2019-01-30T17:46:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3a84ecd2-07e9-4c3d-8b2e-f81bc85d3538",
        "parentId" : "b963ac3c-82d8-4ca4-bc79-aa91832c9439",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "https://issues.apache.org/jira/browse/KAFKA-7869",
        "createdAt" : "2019-01-24T18:59:50Z",
        "updatedAt" : "2019-01-30T17:46:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e573ccb6b6121f755461444c6ad90cf17d9d1d",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@ * This class do the translation between generic {@link Options} into {@link DBOptions} and {@link ColumnFamilyOptions}.\n */\nclass RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter extends Options {\n    private final DBOptions dbOptions;\n    private final ColumnFamilyOptions columnFamilyOptions;"
  },
  {
    "id" : "3d953a39-29dd-4348-8cd6-a859e3c7a676",
    "prId" : 6149,
    "prUrl" : "https://github.com/apache/kafka/pull/6149#pullrequestreview-196192211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f52f639b-b1d4-4d97-b301-8b9d43796f62",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Looked at https://github.com/facebook/rocksdb/blob/master/options/options.cc#L367 there seems no code for setting memtable config here.\r\n\r\nI'd suggest we just mimic the code here instead of following the FAQ since that page may well obsoleted.",
        "createdAt" : "2019-01-23T20:11:12Z",
        "updatedAt" : "2019-01-30T17:46:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "f7f874fe-32fa-4bf3-a71b-93e587381609",
        "parentId" : "f52f639b-b1d4-4d97-b301-8b9d43796f62",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack. Will update the comment accordingly.",
        "createdAt" : "2019-01-24T18:49:01Z",
        "updatedAt" : "2019-01-30T17:46:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e573ccb6b6121f755461444c6ad90cf17d9d1d",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@        // (2) is done via bulk-loading API\n        // (3) skipping because, not done in actual PrepareForBulkLoad() code in https://github.com/facebook/rocksdb/blob/master/options/options.cc\n        //columnFamilyOptions.setMemTableConfig(new VectorMemTableConfig());\n        // (4-5) below:\n        dbOptions.setMaxBackgroundFlushes(4);"
  },
  {
    "id" : "c0966be5-d9ef-4143-830e-e28bfb8832da",
    "prId" : 6743,
    "prUrl" : "https://github.com/apache/kafka/pull/6743#pullrequestreview-238352492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4669406e-3774-4087-ab79-44d09782f09e",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Nice one!",
        "createdAt" : "2019-05-16T12:16:20Z",
        "updatedAt" : "2019-05-16T12:19:41Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d7a7e3972be20e82ce31e6b522f931d04f9ce57",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +491,495 @@    @Override\n    public Options setWalTtlSeconds(final long walTtlSeconds) {\n        LOG.warn(\"option walTtlSeconds will be ignored: Streams does not expose RocksDB ttl functionality\");\n        dbOptions.setWalTtlSeconds(walTtlSeconds);\n        return this;"
  },
  {
    "id" : "ad302848-53c8-4d70-80ee-56f782099f85",
    "prId" : 7483,
    "prUrl" : "https://github.com/apache/kafka/pull/7483#pullrequestreview-301590601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bda45183-ae93-4296-a928-6b0bc39a8f41",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Need to make this public to allow `KafkaStreams` to use the helper method.",
        "createdAt" : "2019-10-14T23:42:17Z",
        "updatedAt" : "2019-10-14T23:42:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "07769af5eeca7e9cc35580637706882528c77cc7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +57,61 @@ * This class do the translation between generic {@link Options} into {@link DBOptions} and {@link ColumnFamilyOptions}.\n */\npublic class RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter extends Options {\n    private final DBOptions dbOptions;\n    private final ColumnFamilyOptions columnFamilyOptions;"
  },
  {
    "id" : "b13eada3-44eb-4644-b08e-9289843474cd",
    "prId" : 9498,
    "prUrl" : "https://github.com/apache/kafka/pull/9498#pullrequestreview-518234470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cf9deaf-2f66-4646-b1c2-15bac522c729",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Are there any ordering constraints to call the three `close` methods?",
        "createdAt" : "2020-10-27T23:35:15Z",
        "updatedAt" : "2020-10-27T23:57:13Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "859e86b7-dedf-4e3f-902a-2b2e0ff79139",
        "parentId" : "3cf9deaf-2f66-4646-b1c2-15bac522c729",
        "authorId" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "body" : "I don't think it matters in this case as the parent's Options handle isn't actually used. Still, I've maintained the inverse of the initialization order here.",
        "createdAt" : "2020-10-27T23:42:24Z",
        "updatedAt" : "2020-10-27T23:57:13Z",
        "lastEditedBy" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "tags" : [
        ]
      },
      {
        "id" : "7f192267-8f85-4e1d-b79c-8f1c96774365",
        "parentId" : "3cf9deaf-2f66-4646-b1c2-15bac522c729",
        "authorId" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "body" : "updated the comment",
        "createdAt" : "2020-10-27T23:58:25Z",
        "updatedAt" : "2020-10-27T23:58:25Z",
        "lastEditedBy" : "5b2b5fa0-0fb4-4e52-a4f9-9d4318b5ae5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed00b5793a30f93da1cd68eb731c004de459e49e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1398,1402 @@        columnFamilyOptions.close();\n        // close super last since we initialized it first\n        super.close();\n    }\n}"
  },
  {
    "id" : "737fa521-b071-4589-9523-f9f631e73023",
    "prId" : 10568,
    "prUrl" : "https://github.com/apache/kafka/pull/10568#pullrequestreview-651584022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdaf55a8-6371-4b86-893f-6a64a3b0a7ab",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "> Use this if your DB is very small (like under 1GB) and you don't want to spend lots of memory for memtables.\r\n\r\nThis looks interesting 🤔  Could be very useful for some users like ksqlDB, where many applications have small state stores cc @rodesai ",
        "createdAt" : "2021-05-04T19:46:25Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e258ebfbaa270e178fe8a39f107a36e0738008b",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +1383,1387 @@\n    @Override\n    public Options optimizeForSmallDb(final Cache cache) {\n        return super.optimizeForSmallDb(cache);\n    }"
  },
  {
    "id" : "4e637677-dc20-45bb-9e5c-531c9cbf1c1b",
    "prId" : 10568,
    "prUrl" : "https://github.com/apache/kafka/pull/10568#pullrequestreview-655031861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Should we disable/throw/ignore this, since we disable the WAL? Same for the other `wal` options",
        "createdAt" : "2021-05-04T19:47:37Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "4980f8e4-5648-4c0b-b043-84a26a852c29",
        "parentId" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am not sure since users could theoretically activate the WAL in the config setter. We do not overwrite user settings as far as I can see. That is consistent with the rest of Streams where the users can overwrite parameters set by the DSL.",
        "createdAt" : "2021-05-05T11:59:13Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "b6f706f4-5d28-4bfd-b9e2-6cba283a2990",
        "parentId" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I thought we did actively disable it, although I'll see if I can find where/whether this is done",
        "createdAt" : "2021-05-05T23:49:49Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "b0abb596-e21d-4761-ab7d-825f70311142",
        "parentId" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Yep, in RocksDBStore we set `wOptions.setDisableWAL(true)` -- it's not on the DB/CF options, instead it's a configuration on a separate WriteOptions class. So we do indeed enforce that it's disabled\r\n",
        "createdAt" : "2021-05-05T23:52:59Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "f38cf64c-075d-42ae-9d35-c29915026fab",
        "parentId" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Good catch! All those option objects are driving me crazy! 🙂\r\nYes, then we could log a warn and ignore the attribute or we could do nothing since it will not change anything. Throwing an exception seems a bit harsh to me.\r\nWhatever, we decide I would like to have that in a separate PR. ",
        "createdAt" : "2021-05-06T09:08:11Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "9bc5a4bb-3460-43a2-af13-c2a3889e3dbf",
        "parentId" : "0ada0801-5d13-4175-901c-e50e6b853dc2",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "> Whatever, we decide I would like to have that in a separate PR. \r\n\r\nSounds good. If you don't have time to follow up right away, can you just file a quick ticket so we don't forget? \r\n\r\nMaybe you are not as forgetful as I am, but I always worry any things like this, whether small or critically important, can be easily lost in the flood of other things we are all working on at any given time 🙂 ",
        "createdAt" : "2021-05-09T01:00:44Z",
        "updatedAt" : "2021-05-09T01:00:44Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e258ebfbaa270e178fe8a39f107a36e0738008b",
    "line" : 240,
    "diffHunk" : "@@ -1,1 +1476,1480 @@    @Override\n    public Options setWalFilter(final AbstractWalFilter walFilter) {\n        dbOptions.setWalFilter(walFilter);\n        return this;\n    }"
  },
  {
    "id" : "5f3e7ad9-6b74-4dc9-a5fa-7f2ff88cb29e",
    "prId" : 10568,
    "prUrl" : "https://github.com/apache/kafka/pull/10568#pullrequestreview-656025269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Does this still require setting a specific compaction style (I think it was the FIFO style)? If so maybe we should enforce that in some way, or else at least log a warning that they are incompatible. Of course I'm not quite sure what would happen if you tried to set the ttl without the FIFO compaction, maybe RocksDB would throw an exception upon opening, or just silently ignore the ttl, or... who knows. Might be worth a quick test to find out",
        "createdAt" : "2021-05-04T20:08:53Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "abf30862-c621-4cbc-bd20-e9f6998518fc",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Comments in the RocksDB code state:\r\n\r\n```\r\n// In Level: Non-bottom-level files older than TTL will go through the\r\n//           compaction process.\r\n// In FIFO: Files older than TTL will be deleted.\r\n```\r\n\r\nSo FIFO compaction is not a pre-requisite.",
        "createdAt" : "2021-05-05T11:28:26Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "40dd3027-c877-47b0-8d04-58e7f7fdf352",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Testing does not harm, but I would avoid to test too many different combinations because this seems to have the potential to become a maintenance hell. ",
        "createdAt" : "2021-05-05T11:33:32Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "5fd534f9-b35c-46ef-a016-87b930e3d605",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I quickly tested it by setting the compaction style to universal and setting the ttl and could not see any exception. ",
        "createdAt" : "2021-05-05T12:10:35Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "4d14aca7-77b7-42e5-b974-837cdaefa70c",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "To clarify I was definitely not recommending to test arbitrary combinations or anything beyond just this one case where I thought there may be a conflict. Sounds like they just added a feature for ttl to work with non-FIFO compaction, which will actually make many KV users incredibly happy. We may want to leave a note on that one ticket about a ttl KeyValueStore that has had so many +1's from users ",
        "createdAt" : "2021-05-05T22:57:21Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "9275d68e-dee2-4ee9-956a-20006a600907",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "From the comment above the TTL option under Level compaction will not delete entries if they exceed the time but it only compacts them. If I remember correctly, the ask was to delete entries if they exceed the time limit.",
        "createdAt" : "2021-05-06T09:02:43Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "2ddd17e8-42ca-44d4-a7b6-6dcd73495afe",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Oh, I guess I didn't read it very carefully 😅  In that case we may want to warn users that this option will not, in fact, provide \"real\" ttl (unless also using FIFO compaction). I'd imagine users may see this new option pop up and assume, as I did, that it meant deleting files older than ttl, ie the definition of ttl...\r\n\r\nAlso, not totally sure I understand -- does that mean _only_ files older than the ttl will be compacted, or just that if a file remains uncompacted for longer than the ttl it will be \"prematurely\" compacted? I assume the latter...\r\n\r\n",
        "createdAt" : "2021-05-09T00:58:16Z",
        "updatedAt" : "2021-05-09T00:58:16Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5cb807fd-f971-4596-af07-8e36e7746d7c",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "> In that case we may want to warn users that this option will not, in fact, provide \"real\" ttl (unless also using FIFO compaction). I'd imagine users may see this new option pop up and assume, as I did, that it meant deleting files older than ttl, ie the definition of ttl...\r\n\r\nIf you mean to warn users with a log warning, I am not sure if we should log something because we assume that the expectations of the users are probably wrong.\r\n\r\n> Also, not totally sure I understand -- does that mean only files older than the ttl will be compacted, or just that if a file remains uncompacted for longer than the ttl it will be \"prematurely\" compacted? I assume the latter...\r\n\r\nI also do not totally understand, but I also think it is the latter. ",
        "createdAt" : "2021-05-10T08:38:46Z",
        "updatedAt" : "2021-05-10T08:38:47Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "e42abae2-a019-486a-a08b-fc8d7ed74cfd",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Feels it is also the latter too.\r\n\r\nBTW I think the rocksDB's own javadocs are sufficient enough --- if users do want to set these options, they must be advanced enough to know what exactly rocksDB is doing.. as Streams, we just need to keep it in mind ourselves so if someone asked \"why setting TTL does not work in Streams rocksDB\" we would refer them to read this first :)",
        "createdAt" : "2021-05-10T17:22:06Z",
        "updatedAt" : "2021-05-10T17:22:07Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b5af55f0-2697-44f4-91e5-a6b7800cbb98",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I agree with @guozhangwang.",
        "createdAt" : "2021-05-10T17:27:17Z",
        "updatedAt" : "2021-05-10T17:27:18Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "89cc07a5-3a1f-4776-8f57-029a2c6729f2",
        "parentId" : "d51aa689-ff8e-4ab1-b423-035c78d743a5",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Fair enough. FWIW I did not mean to literally log a warning, I guess that word is quite overloaded. I just meant we should be wary of users trying to use it in this way, pretty much exactly what Guozhang said with\r\n\r\n> \"so if someone asked \"why setting TTL does not work in Streams rocksDB\" we would refer them to read this first :)\"",
        "createdAt" : "2021-05-10T19:46:25Z",
        "updatedAt" : "2021-05-10T19:46:26Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e258ebfbaa270e178fe8a39f107a36e0738008b",
    "line" : 317,
    "diffHunk" : "@@ -1,1 +1553,1557 @@    @Override\n    public Options setTtl(final long ttl) {\n        columnFamilyOptions.setTtl(ttl);\n        return this;\n    }"
  },
  {
    "id" : "49db04c6-eb18-4c0a-b462-bed944e25d24",
    "prId" : 10568,
    "prUrl" : "https://github.com/apache/kafka/pull/10568#pullrequestreview-651584022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "399db5af-ddef-4822-80b8-41f58bb4c49a",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "this also seems quite interesting...possibly something we should enable by default? I filed [KAFKA-12748](https://issues.apache.org/jira/browse/KAFKA-12748) to explore some of these new options and run benchmarks to determine which should be configured by default",
        "createdAt" : "2021-05-04T20:10:47Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e258ebfbaa270e178fe8a39f107a36e0738008b",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +1574,1578 @@\n    @Override\n    public Options setAvoidUnnecessaryBlockingIO(final boolean avoidUnnecessaryBlockingIO) {\n        dbOptions.setAvoidUnnecessaryBlockingIO(avoidUnnecessaryBlockingIO);\n        return this;"
  },
  {
    "id" : "12960bf4-c1d5-4b19-b9c4-80f6b045da6b",
    "prId" : 10568,
    "prUrl" : "https://github.com/apache/kafka/pull/10568#pullrequestreview-652837246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77400d02-4262-49e0-a554-a22a89897a85",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Another interesting config, as my impression has been that background compactions are one of the biggest limiting factors in scaling up the state stores and/or partitions. But I'm not yet sure what the difference between this and just limiting the number of compaction threads is..",
        "createdAt" : "2021-05-04T20:29:25Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "28283918-5106-4bec-9cb5-a0b9153570f8",
        "parentId" : "77400d02-4262-49e0-a554-a22a89897a85",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am not sure either, but the following comment suggests that it limits the number of outstanding compactions. So I guess it is about the queue of compactions that are planned and not the number of compactions that are currently performed. But I might be wrong. If I am correct, then the name is a bit misleading. \r\n\r\n```\r\n  // Compaction concurrent thread limiter for the column family.\r\n  // If non-nullptr, use given concurrent thread limiter to control\r\n  // the max outstanding compaction tasks. Limiter can be shared with\r\n  // multiple column families across db instances.\r\n```",
        "createdAt" : "2021-05-05T11:52:14Z",
        "updatedAt" : "2021-05-06T10:43:27Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "6933afbd-3ee6-4ee8-8902-fda640d34281",
        "parentId" : "77400d02-4262-49e0-a554-a22a89897a85",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Huh. I wonder why you would want to limit the number of outstanding compactions -- and what would happen if you hit that limit. Would rocksdb stall writes until it could clear some of the queued compactions? 🤷‍♀️ ",
        "createdAt" : "2021-05-05T22:59:23Z",
        "updatedAt" : "2021-05-06T10:43:28Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e258ebfbaa270e178fe8a39f107a36e0738008b",
    "line" : 426,
    "diffHunk" : "@@ -1,1 +1662,1666 @@\n    @Override\n    public Options setCompactionThreadLimiter(final ConcurrentTaskLimiter compactionThreadLimiter) {\n        columnFamilyOptions.setCompactionThreadLimiter(compactionThreadLimiter);\n        return this;"
  }
]