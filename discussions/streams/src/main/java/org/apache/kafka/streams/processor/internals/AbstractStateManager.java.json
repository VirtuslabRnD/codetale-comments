[
  {
    "id" : "b6b555e2-c548-4efd-acd3-f9d903cf2ff4",
    "prId" : 6555,
    "prUrl" : "https://github.com/apache/kafka/pull/6555#pullrequestreview-228551719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de339b72-2fe2-4185-8a5f-4666c269bf35",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Is this a normal situation? At the moment we will only re-initialize if it was already registered, I'd suggest we treat it as an IllegalStateException",
        "createdAt" : "2019-04-18T16:14:53Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "44b48377-ae3e-4455-96c5-d66a2ac73d66",
        "parentId" : "de339b72-2fe2-4185-8a5f-4666c269bf35",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I saw it happen during tests. I'm not sure if it's a testing artifact or not. Note that we would never have encountered the situation before, since we were only iterating over registered stores before.",
        "createdAt" : "2019-04-18T16:47:15Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "bd3967be-14ca-4050-b653-5ec7c480fb1e",
        "parentId" : "de339b72-2fe2-4185-8a5f-4666c269bf35",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Would be interest to know what you could find out: my gut feeling it is was not testing artifact :)",
        "createdAt" : "2019-04-18T23:56:54Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9567b1ef225409db812fc48a6c64574a5f16f11",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +84,88 @@        for (final String storeName : storesToBeReinitialized) {\n            if (!stateStores.containsKey(storeName)) {\n                // the store has never been registered; carry on...\n                continue;\n            }"
  },
  {
    "id" : "0af7fbd1-06fd-4c3f-b5c9-650314dc608a",
    "prId" : 6555,
    "prUrl" : "https://github.com/apache/kafka/pull/6555#pullrequestreview-228551733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51ffeba8-9482-4afd-a070-5f77bfd6190f",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we move `globalStores` to GlobalStateManagerImpl as well?",
        "createdAt" : "2019-04-18T16:20:08Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b4563bc0-0cbc-4818-b070-efbbc64ad9c6",
        "parentId" : "51ffeba8-9482-4afd-a070-5f77bfd6190f",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "No, because the ProcessorStateManager offers an interface to look up global stores, as well (for some reason, maybe joins?)",
        "createdAt" : "2019-04-18T16:48:24Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "6878f17e-abb1-4a65-bf7b-526c6de47de5",
        "parentId" : "51ffeba8-9482-4afd-a070-5f77bfd6190f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack.",
        "createdAt" : "2019-04-18T23:57:00Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9567b1ef225409db812fc48a6c64574a5f16f11",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +47,51 @@\n    final Map<TopicPartition, Long> checkpointableOffsets = new HashMap<>();\n    final FixedOrderMap<String, Optional<StateStore>> globalStores = new FixedOrderMap<>();\n\n    AbstractStateManager(final File baseDir,"
  },
  {
    "id" : "d037695f-a41d-4721-a018-ed194997684a",
    "prId" : 6555,
    "prUrl" : "https://github.com/apache/kafka/pull/6555#pullrequestreview-228829419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2dad52b-f45a-49b1-b88c-e648f0de9016",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Minor comment after looking over the whole PR, do we need a `FixedOrderMap<String, Optional<StateStore>>` vs just `FixedOrderMap<String, StateStore>`?\r\n\r\nIIRC we can't pass in a `null` state store and from what I can see it's the `GlobalStateManager` and `ProcessorStateManager` that put an `Optional.empty()` in the map vs. clearing the map in the respective `close` methods.\r\n\r\nNot a big deal, IMHO it added a little complexity to the code and I'm not sure what we gain with it. ",
        "createdAt" : "2019-04-18T22:07:31Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "2c69819e-6144-410e-ab04-dd4776934ff2",
        "parentId" : "d2dad52b-f45a-49b1-b88c-e648f0de9016",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'm sorry, but I'm not quite getting the feedback. The GlobalStateManager passes this collection into `AbstractStateManager#reinitializeStateStoresForPartitions`, which may de-register some of the stores, just like what happens with the ProcessorStateManager. Or did you mean something else?",
        "createdAt" : "2019-04-19T21:16:27Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9567b1ef225409db812fc48a6c64574a5f16f11",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +47,51 @@\n    final Map<TopicPartition, Long> checkpointableOffsets = new HashMap<>();\n    final FixedOrderMap<String, Optional<StateStore>> globalStores = new FixedOrderMap<>();\n\n    AbstractStateManager(final File baseDir,"
  }
]