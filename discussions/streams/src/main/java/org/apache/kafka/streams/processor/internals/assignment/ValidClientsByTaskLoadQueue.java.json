[
  {
    "id" : "01c4fa96-163f-4a6c-862a-115104d56a62",
    "prId" : 8497,
    "prUrl" : "https://github.com/apache/kafka/pull/8497#pullrequestreview-397599891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acbfa9ae-7420-4050-8e16-c7e654b3f713",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I just moved this class to its own file from `HATA`, with one main change: we now just pass in the criteria to consider a client a valid candidate for a task.\r\nThe original criteria was that the client has no other version of this task already,  but now we are flexible enough to use other validation criteria (eg that the client is caught-up on this task)",
        "createdAt" : "2020-04-17T18:28:33Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "4436d2ed-acb7-4aed-800a-5c5daeb93c4d",
        "parentId" : "acbfa9ae-7420-4050-8e16-c7e654b3f713",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'd just like to say what an awesome tool for optimization this class is. Kudos to you and @cadonna .",
        "createdAt" : "2020-04-18T20:48:47Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e6573d8f-7504-421f-ac25-4013bf7f0c5e",
        "parentId" : "acbfa9ae-7420-4050-8e16-c7e654b3f713",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I do not remember having contributed to this awesomeness. It is all @ableegoldman 's merit.",
        "createdAt" : "2020-04-20T15:27:22Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "26fcc0d7-5ca0-4a21-b22f-8603e8a6c435",
        "parentId" : "acbfa9ae-7420-4050-8e16-c7e654b3f713",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah, sorry about that @ableegoldman ; I wasn't able (or was too lazy) to follow the `git praise` trail through the class movement. Well, kudos to you, then. :) ",
        "createdAt" : "2020-04-21T19:14:13Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6dc0b002bf6e6f46d9a910d0358cbcf81dd1f7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\n    ValidClientsByTaskLoadQueue(final Map<UUID, ClientState> clientStates,\n                                final BiFunction<UUID, TaskId, Boolean> validClientCriteria) {\n        this.validClientCriteria = validClientCriteria;\n"
  },
  {
    "id" : "19ed0f71-85a5-4041-a9e0-e2b41332c61e",
    "prId" : 8497,
    "prUrl" : "https://github.com/apache/kafka/pull/8497#pullrequestreview-397601895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbb73280-77d5-4bd1-b1d4-36491df3a918",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Q: I do not understand why we need `uniqueClients` here? Would it not suffice to check for `clientsByTaskLoad.contains(client)`?",
        "createdAt" : "2020-04-20T14:03:43Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "be8162a1-7466-4667-9ea5-cd62b1d10871",
        "parentId" : "dbb73280-77d5-4bd1-b1d4-36491df3a918",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think it's just a computer-sciencey matter of principle. `clientsByTaskLoad` is a linear collection, so every `offer` would become `O(n)` if we did a `contains` call on it every time. Right now, it's only `O(n)` when we need to remove the prior record for the same client, and `O(log(n))` otherwise.\r\n\r\nDoes it really matter? I'm not sure.",
        "createdAt" : "2020-04-20T20:32:07Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dce5b801-68f9-4bcb-a131-aca8cc952616",
        "parentId" : "dbb73280-77d5-4bd1-b1d4-36491df3a918",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Got it!\r\n\r\nThat means, we get `O(n)` for all cases where we first `poll()` and then `offer()` the same clients because those clients are contained in `uniqueClients`, i.e.:\r\n- `HighAvailabilityTaskAssignor@155`\r\n- `HighAvailabilityTaskAssignor@131`\r\n- `TaskMovement@94`\r\n- `ValidClientsByTaskLoadQueue@76`\r\n- `ValidClientsByTaskLoadQueue@88`\r\n\r\nThose are the majority of the calls to `offer()` and `offerAll()`. Additionally, the last two occurrences in the list are called in each call to `poll()`. In `poll()`, if the top does not satisfy the criteria it is added to `invalidPolledClients` which then is added with `offerAll()`. For each element of `invalidPolledClients` the whole queue `clientsByTaskLoad` is scanned, since each element is contained in `uniqueClients` but not in `clientsByTaskLoad`. This results in `O(n^2)`.\r\n\r\nAFAIU, we need the uniqueness check because of `TaskMovement@99`.\r\n\r\nIf we update `uniqueClients` also in `poll()`, we would avoid `O(n^2)` for `poll()` and restrict `O(n)` to the case at `TaskMovement@99`.\r\n\r\n> Does it really matter? \r\n\r\nI'm not also sure. Performance test would be the only way to tell.",
        "createdAt" : "2020-04-21T09:58:14Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "2c656ba3-fb72-4c2e-a35f-db278051bf02",
        "parentId" : "dbb73280-77d5-4bd1-b1d4-36491df3a918",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Gah! You're right. We should also _remove_ the client from `uniqueClients` when we `poll`.",
        "createdAt" : "2020-04-21T19:16:27Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "0318d947-f33c-4658-8ce7-2a97af04ec64",
        "parentId" : "dbb73280-77d5-4bd1-b1d4-36491df3a918",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "@cadonna you're right, I forgot to remove from `uniqueClients` in poll. Good catch",
        "createdAt" : "2020-04-21T19:17:07Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6dc0b002bf6e6f46d9a910d0358cbcf81dd1f7",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@\n    void offer(final UUID client) {\n        if (uniqueClients.contains(client)) {\n            clientsByTaskLoad.remove(client);\n        } else {"
  },
  {
    "id" : "c59eec14-69a1-4b83-bff3-75c403e0c787",
    "prId" : 8497,
    "prUrl" : "https://github.com/apache/kafka/pull/8497#pullrequestreview-396439844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56981da1-98ff-4249-8db6-7db55addb06a",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please add unit tests for this class.",
        "createdAt" : "2020-04-20T15:24:21Z",
        "updatedAt" : "2020-04-21T19:20:52Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6dc0b002bf6e6f46d9a910d0358cbcf81dd1f7",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@ * Wraps a priority queue of clients and returns the next valid candidate(s) based on the current task assignment\n */\nclass ValidClientsByTaskLoadQueue {\n\n    private final PriorityQueue<UUID> clientsByTaskLoad;"
  }
]