[
  {
    "id" : "4ada896f-bbf6-49ba-bce4-8dc6b1014e27",
    "prId" : 5276,
    "prUrl" : "https://github.com/apache/kafka/pull/5276#pullrequestreview-135111723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c100246-42f2-4045-b230-f7efd508be29",
        "parentId" : null,
        "authorId" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "body" : "@guozhangwang In case of a newly created segment, we need to call bulk loading explicitly since the segments.AllSegments() only return the segments that are already exists on the machine.  ",
        "createdAt" : "2018-06-29T16:12:58Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "tags" : [
        ]
      },
      {
        "id" : "ca74626d-fe27-464a-b6d2-8523fdfd7ac3",
        "parentId" : "0c100246-42f2-4045-b230-f7efd508be29",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Great catch! How did you discover this? It is covered in the unit tests (ie, the changes to applied?)",
        "createdAt" : "2018-06-29T20:22:19Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "1e3b5a08-e981-4d18-b7d7-5a1aa3b45b84",
        "parentId" : "0c100246-42f2-4045-b230-f7efd508be29",
        "authorId" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "body" : "@mjsax I enhanced the test to include this case. I discovered this case with some internal applications at Pinterest.",
        "createdAt" : "2018-06-29T21:55:53Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "tags" : [
        ]
      },
      {
        "id" : "cdc62aa4-0673-4089-a9ff-fc0115ef263c",
        "parentId" : "0c100246-42f2-4045-b230-f7efd508be29",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "One question: it seems the `bulkLoadSegments` set will only keep increasing in size since we only initialize it once in `bulkLoadSegments = new HashSet<>(segments.allSegments());` and then do this ad-hoc addition here, when segments are dropped they will not be removed from `bulkLoadSegments` as well, right?\r\n\r\nI'm thinking, if we could just call `final Set<Segment> bulkLoadSegments = new HashSet<>(segments.allSegments());` here every time, since 1) if the store does not exist yet, the `getOrCreateSegmentIfLive` will call openDB that makes the open flag for the newly created store, and 2) if the store does exist already, then `toggleForBulkLoading -> segment.toggleDbForBulkLoading` will make sure the store is open here.",
        "createdAt" : "2018-07-01T18:01:33Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6f0a7eb6-f9cd-4a4e-8fe6-1dd66675dc70",
        "parentId" : "0c100246-42f2-4045-b230-f7efd508be29",
        "authorId" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "body" : "@guozhangwang Thanks for the comment. I addressed the comment to create a new set each time we create a new segment. ",
        "createdAt" : "2018-07-06T18:19:07Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "903734cc-34fa-4808-910e-c89089ddb5f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e494e0530e6dd1b2fcd46756363200e2f0181386",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +200,204 @@                // have the local RocksDB instance for the segment. In this case, toggleDBForBulkLoading\n                // will only close the database and open it again with bulk loading enabled.\n                if (!bulkLoadSegments.contains(segment)) {\n                    segment.toggleDbForBulkLoading(true);\n                    // If the store does not exist yet, the getOrCreateSegmentIfLive will call openDB that"
  }
]