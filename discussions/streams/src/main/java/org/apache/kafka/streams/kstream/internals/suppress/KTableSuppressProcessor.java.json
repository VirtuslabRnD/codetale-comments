[
  {
    "id" : "fd6ebf73-56a9-4a98-8d06-4294d166c052",
    "prId" : 5687,
    "prUrl" : "https://github.com/apache/kafka/pull/5687#pullrequestreview-158294736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aae5f136-6b49-41f2-b874-04de80f39302",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Just so we can assert that it happens in the scenario tests (which are in a different package)",
        "createdAt" : "2018-09-24T21:05:07Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "b40354ce9f18459f56b1bc8ca8249a52d4ec9cef",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +79,83 @@    }\n\n    public static class NotImplementedException extends RuntimeException {\n        NotImplementedException() {\n            super();"
  },
  {
    "id" : "37f7a9e9-1cfb-44d0-b47d-19f348d34d1a",
    "prId" : 5687,
    "prUrl" : "https://github.com/apache/kafka/pull/5687#pullrequestreview-158373913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2287932c-27ec-4b90-9713-a26ac92d45c1",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Where are these two serdes used in this PR?",
        "createdAt" : "2018-09-25T00:49:51Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "30af46a8-9373-4103-a2df-9840a7b7280c",
        "parentId" : "2287932c-27ec-4b90-9713-a26ac92d45c1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "They aren't. They will be in part 3, so the tests need to call this constructor. I added this constructor and the dummy fields just so the (ignored) tests can compile.\r\n\r\nIt's a bit awkward, I know.",
        "createdAt" : "2018-09-25T02:06:56Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c2c5d1be-6f6f-4ede-abf4-39d3575b2696",
        "parentId" : "2287932c-27ec-4b90-9713-a26ac92d45c1",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack.",
        "createdAt" : "2018-09-25T04:27:26Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b40354ce9f18459f56b1bc8ca8249a52d4ec9cef",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +38,42 @@                                   final Serde<Change<V>> valueSerde) {\n        this.suppress = requireNonNull(suppress);\n        this.keySerde = keySerde;\n        this.valueSerde = valueSerde;\n    }"
  },
  {
    "id" : "a9b9398a-b977-42fd-bde7-ab9045a19de3",
    "prId" : 5693,
    "prUrl" : "https://github.com/apache/kafka/pull/5693#pullrequestreview-160038669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "331fd4d5-5c50-46c2-846d-c1da79483870",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Should we clear the buffer upon closing? Maybe it does not make a difference on correctness, but would it worthy for performance?",
        "createdAt" : "2018-09-28T20:51:25Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "201d3137-69ce-42ed-bf04-7f122970a991",
        "parentId" : "331fd4d5-5c50-46c2-846d-c1da79483870",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I wasn't sure. I'll go ahead and do it.",
        "createdAt" : "2018-09-28T22:04:40Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "9fb3bba6-7d04-4a2b-b66e-07ea26674487",
        "parentId" : "331fd4d5-5c50-46c2-846d-c1da79483870",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Actually, let's defer this to Part 4, where the buffer becomes a proper store, and has its own `close()` method.",
        "createdAt" : "2018-09-28T22:07:08Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddd78d9ad6826da2d821584232f2750d022ef34a",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +130,134 @@    @Override\n    public void close() {\n    }\n}"
  },
  {
    "id" : "27eeee4b-b223-4b75-8148-3710cc1a2bb2",
    "prId" : 5693,
    "prUrl" : "https://github.com/apache/kafka/pull/5693#pullrequestreview-160550450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2237a54-0ed2-48e0-9f93-17a2ae9d9890",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should this be `<` instead of `<=` ?",
        "createdAt" : "2018-10-02T00:39:28Z",
        "updatedAt" : "2018-10-02T03:20:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "1ad3c3c6-4e88-49cd-977c-b56a14ef91c0",
        "parentId" : "a2237a54-0ed2-48e0-9f93-17a2ae9d9890",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It wouldn't be wrong, but I think `<=` is also right, and it's a tighter bound.\r\n\r\nLet's say we have buffered an event with time 10 at stream time 10 and the suppressDuration is 1. The expiry time is `10-1 = 9`. minTimestamp is 10, and `10 <= 9` is false, so we don't evict.\r\n\r\nThen, we get an event with time 11 at stream time 11. Now, the expiry time is `11-1=10`. minTimestamp is still 10, but now the check is `10 <= 10`, so we evict that first event.\r\n\r\nI think this matches up to the intention of saying \"suppress for 1 ms\".",
        "createdAt" : "2018-10-02T01:49:57Z",
        "updatedAt" : "2018-10-02T03:20:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d247ee6d-ce02-4064-b3fe-7c846f3b856a",
        "parentId" : "a2237a54-0ed2-48e0-9f93-17a2ae9d9890",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack",
        "createdAt" : "2018-10-02T02:34:28Z",
        "updatedAt" : "2018-10-02T03:20:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddd78d9ad6826da2d821584232f2750d022ef34a",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +88,92 @@        final long expiryTime = streamTime - suppressDurationMillis;\n\n        buffer.evictWhile(() -> buffer.minTimestamp() <= expiryTime, this::emit);\n\n        if (overCapacity()) {"
  },
  {
    "id" : "75715c11-442d-4ca5-ab04-24ce8b0bc64a",
    "prId" : 5724,
    "prUrl" : "https://github.com/apache/kafka/pull/5724#pullrequestreview-160578888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd750bd-fa35-4ade-bc2a-e2eb45bee84d",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "These types are almost equivalent, but I realized that it's better to be safe. We need to know that our serde is capable of handling Changes with both sides populated.",
        "createdAt" : "2018-10-02T06:28:57Z",
        "updatedAt" : "2018-10-03T00:05:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "d405ac999adf4136de26b1e533c627ca00ed3238",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +47,51 @@\n    private Serde<K> keySerde;\n    private FullChangeSerde<V> valueSerde;\n\n    public KTableSuppressProcessor(final SuppressedInternal<K> suppress,"
  },
  {
    "id" : "a7d82046-db79-46de-a589-c5af03c6db3b",
    "prId" : 6325,
    "prUrl" : "https://github.com/apache/kafka/pull/6325#pullrequestreview-207589835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41971c5e-6b91-4a32-abc8-20367ec6b02c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This was an unrelated change in trunk/2.2 to improve the code legibility.\r\n\r\nI'm proposing to backport it to keep the Suppress code consistent and improve maintainability.",
        "createdAt" : "2019-02-25T19:34:01Z",
        "updatedAt" : "2019-03-05T00:25:28Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcacd02de53992cd6f1100f3461c4cdd82a2962c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +42,46 @@    private final TimeDefinition<K> bufferTimeDefinition;\n    private final BufferFullStrategy bufferFullStrategy;\n    private final boolean safeToDropTombstones;\n    private final String storeName;\n"
  },
  {
    "id" : "9587c3af-d5e5-4165-8566-8093e8e7db77",
    "prId" : 6602,
    "prUrl" : "https://github.com/apache/kafka/pull/6602#pullrequestreview-228364218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59aba2dc-26c6-45b4-aa23-58bfc4553473",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is to fix a warning about the switch being incomplete.",
        "createdAt" : "2019-04-18T15:47:03Z",
        "updatedAt" : "2019-04-26T13:35:41Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7414ed063c920aa5c2f4bb29c81664fecb851b9b",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +98,102 @@                        buffer.bufferSize(), maxBytes\n                    ));\n                default:\n                    throw new UnsupportedOperationException(\n                        \"The bufferFullStrategy [\" + bufferFullStrategy +"
  }
]