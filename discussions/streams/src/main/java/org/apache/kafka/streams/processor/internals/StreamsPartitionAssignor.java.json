[
  {
    "id" : "fed71ff1-361e-48e3-949c-9dbd63ec4ee2",
    "prId" : 4630,
    "prUrl" : "https://github.com/apache/kafka/pull/4630#pullrequestreview-100636363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0d9e539-9e7b-47a2-8018-218b196084a8",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we add a unit test with two subscriptions, v1 and v2, and then check that the returned assignment map contains v1?",
        "createdAt" : "2018-03-02T00:13:32Z",
        "updatedAt" : "2018-03-02T23:28:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "994187626421459d0895add72fa09e38a021aa17",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +286,290 @@     */\n    @Override\n    public Map<String, Assignment> assign(final Cluster metadata,\n                                          final Map<String, Subscription> subscriptions) {\n        // construct the client metadata from the decoded subscription info"
  },
  {
    "id" : "a4a07b2e-02c5-4191-90a8-c50590d81683",
    "prId" : 4880,
    "prUrl" : "https://github.com/apache/kafka/pull/4880#pullrequestreview-112959764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "do you think it's safe to say `minUserMetadata >= 2` here so we don't have to add a new clause with every version? Or do you think the logic that follows may not apply to later metadata versions?",
        "createdAt" : "2018-04-17T15:55:37Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dbecde0c-d4bf-422d-b1fb-8c648f6a0461",
        "parentId" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Maybe --- for know I think it's fine, but we should consider to do a \"closed range\" if we add version 4. I don't like open-ended. Not sure what others think.",
        "createdAt" : "2018-04-17T16:57:42Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "38272fe1-0806-4a8d-a4cf-43aff62d19a1",
        "parentId" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I agree, closed range seems less risky.",
        "createdAt" : "2018-04-17T19:31:41Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e762d6e1f24dc67a738950aa75264801b98a27f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +527,531 @@        // construct the global partition assignment per host map\n        final Map<HostInfo, Set<TopicPartition>> partitionsByHostState = new HashMap<>();\n        if (minUserMetadataVersion == 2 || minUserMetadataVersion == 3) {\n            for (final Map.Entry<UUID, ClientMetadata> entry : clientsMetadata.entrySet()) {\n                final HostInfo hostInfo = entry.getValue().hostInfo;"
  },
  {
    "id" : "f51c7b04-2ffa-4a64-b218-8882d9033522",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-279262691",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03d03b52-f607-4305-a18e-cc17ae3ed435",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "avoiding unnecessary negation.",
        "createdAt" : "2019-08-24T00:05:01Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 361,
    "diffHunk" : "@@ -1,1 +304,308 @@\n        final boolean versionProbing;\n        if (futureMetadataVersion == UNKNOWN) {\n            versionProbing = false;\n        } else {"
  },
  {
    "id" : "786a077d-5eb5-47bc-a1f9-be07edb306c7",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-283315679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd83f0ca-0811-4030-ab20-b2b40e9b0889",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "avoiding an unboxing warning.",
        "createdAt" : "2019-08-24T00:05:36Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d4ecb562-273f-4c02-b3bd-e50b0990204d",
        "parentId" : "bd83f0ca-0811-4030-ab20-b2b40e9b0889",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The topic may not be in the metadata due to some edge conditions, we cannot throw the exception in this case.",
        "createdAt" : "2019-09-03T20:54:59Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "22f531be-69b4-4d11-9ca7-1d8469ce1375",
        "parentId" : "bd83f0ca-0811-4030-ab20-b2b40e9b0889",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This exception would always have happened anyway (it would have thrown an NPE on unboxing). What alternative handling would you recommend?",
        "createdAt" : "2019-09-03T21:01:22Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "07e47d10-1aa2-4671-9628-f720a63960cb",
        "parentId" : "bd83f0ca-0811-4030-ab20-b2b40e9b0889",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Hmm, in that case we can do this as-is then: I need to think through what's possible under the context of KIP-429 anyways so we can have a thorough discussion in a later PR.",
        "createdAt" : "2019-09-03T23:46:09Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 442,
    "diffHunk" : "@@ -1,1 +380,384 @@                                    } else {\n                                        final Integer count = metadata.partitionCountForTopic(sourceTopicName);\n                                        if (count == null) {\n                                            throw new IllegalStateException(\n                                                \"No partition count found for source topic \""
  },
  {
    "id" : "6e388b46-5f37-405b-a6a9-79b785f26725",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "590b2a8e-ce60-4ea1-9b16-b4b6a8f2ac1b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Migrated the non-trivial config parsing logic to a new class. The new class does all its work in the constructor, so we'll still throw any exceptions at the same point.",
        "createdAt" : "2019-09-05T18:38:16Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +183,187 @@    @Override\n    public void configure(final Map<String, ?> configs) {\n        final AssignorConfiguration assignorConfiguration = new AssignorConfiguration(configs);\n\n        logPrefix = assignorConfiguration.logPrefix();"
  },
  {
    "id" : "78ecee7a-b3ec-4fe2-9cd0-44f8286fb64c",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d6db796-ad46-4f8b-8812-f8a9e588b013",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "just shortening some long lines.",
        "createdAt" : "2019-09-05T18:41:32Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 371,
    "diffHunk" : "@@ -1,1 +311,315 @@                             + \" Sending empty assignment back (with supported version {}).\",\n                         futureMetadataVersion,\n                         LATEST_SUPPORTED_VERSION);\n                versionProbing = true;\n            } else {"
  },
  {
    "id" : "de1ca337-199b-4a89-8d4d-b7675dbe4389",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9798a8f-b47e-4e95-91ad-897781866c25",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "switched to object reference so that we can use \"null\" as \"unset\" and avoid an ambiguous usage of an \"unknown == -1\" constant.",
        "createdAt" : "2019-09-05T18:43:12Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 419,
    "diffHunk" : "@@ -1,1 +361,365 @@                for (final String topicName : topicsInfo.repartitionSourceTopics.keySet()) {\n                    final Optional<Integer> maybeNumPartitions = repartitionTopicMetadata.get(topicName).numberOfPartitions();\n                    Integer numPartitions = null;\n\n                    if (!maybeNumPartitions.isPresent()) {"
  },
  {
    "id" : "d00270d2-4483-460a-b15b-27c60d270562",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50fc5114-02c2-4813-b351-2f7b5f97507c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "defaulting to `-1` if unknown here because it works with the loop below, and the scope is extremely local (i.e., you don't need any larger context than the next 10 lines of code to understand what's happening).",
        "createdAt" : "2019-09-05T18:58:11Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 471,
    "diffHunk" : "@@ -1,1 +423,427 @@        for (final Map.Entry<String, InternalTopicConfig> entry : repartitionTopicMetadata.entrySet()) {\n            final String topic = entry.getKey();\n            final int numPartitions = entry.getValue().numberOfPartitions().orElse(-1);\n\n            for (int partition = 0; partition < numPartitions; partition++) {"
  },
  {
    "id" : "96857218-38b5-401d-8c0c-50a3377b96f8",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284458826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9d3977a-1f80-41c4-a4c0-0a6f047f0749",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'd ultimately like to move more of the v1-4 assignment logic out of this class to make it more natural to add in the KIP-441 logic, but I think this PR is big enough as-is.",
        "createdAt" : "2019-09-05T19:01:23Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 558,
    "diffHunk" : "@@ -1,1 +572,576 @@    }\n\n    private static Map<String, Assignment> computeNewAssignment(final Map<UUID, ClientMetadata> clientsMetadata,\n                                                                final Map<TaskId, Set<TopicPartition>> partitionsForTask,\n                                                                final Map<HostInfo, Set<TopicPartition>> partitionsByHostState,"
  }
]