[
  {
    "id" : "fed71ff1-361e-48e3-949c-9dbd63ec4ee2",
    "prId" : 4630,
    "prUrl" : "https://github.com/apache/kafka/pull/4630#pullrequestreview-100636363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0d9e539-9e7b-47a2-8018-218b196084a8",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we add a unit test with two subscriptions, v1 and v2, and then check that the returned assignment map contains v1?",
        "createdAt" : "2018-03-02T00:13:32Z",
        "updatedAt" : "2018-03-02T23:28:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "994187626421459d0895add72fa09e38a021aa17",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +286,290 @@     */\n    @Override\n    public Map<String, Assignment> assign(final Cluster metadata,\n                                          final Map<String, Subscription> subscriptions) {\n        // construct the client metadata from the decoded subscription info"
  },
  {
    "id" : "a4a07b2e-02c5-4191-90a8-c50590d81683",
    "prId" : 4880,
    "prUrl" : "https://github.com/apache/kafka/pull/4880#pullrequestreview-112959764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "do you think it's safe to say `minUserMetadata >= 2` here so we don't have to add a new clause with every version? Or do you think the logic that follows may not apply to later metadata versions?",
        "createdAt" : "2018-04-17T15:55:37Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dbecde0c-d4bf-422d-b1fb-8c648f6a0461",
        "parentId" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Maybe --- for know I think it's fine, but we should consider to do a \"closed range\" if we add version 4. I don't like open-ended. Not sure what others think.",
        "createdAt" : "2018-04-17T16:57:42Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "38272fe1-0806-4a8d-a4cf-43aff62d19a1",
        "parentId" : "6e1fd052-75c5-4e7b-8722-cb6f0f4fada3",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I agree, closed range seems less risky.",
        "createdAt" : "2018-04-17T19:31:41Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e762d6e1f24dc67a738950aa75264801b98a27f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +527,531 @@        // construct the global partition assignment per host map\n        final Map<HostInfo, Set<TopicPartition>> partitionsByHostState = new HashMap<>();\n        if (minUserMetadataVersion == 2 || minUserMetadataVersion == 3) {\n            for (final Map.Entry<UUID, ClientMetadata> entry : clientsMetadata.entrySet()) {\n                final HostInfo hostInfo = entry.getValue().hostInfo;"
  }
]