[
  {
    "id" : "e6d506db-c669-4a08-8269-d9c5331d8577",
    "prId" : 6173,
    "prUrl" : "https://github.com/apache/kafka/pull/6173#pullrequestreview-209845516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34adee03-44d5-4e7b-bbbb-ba2caff4b15b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "need to access this in sub-class when overwriting new `intiStoreSerde()` method",
        "createdAt" : "2019-03-02T01:46:39Z",
        "updatedAt" : "2019-03-07T22:13:34Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a3613b4a03c0e0caa683f19026aca726248d191",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +46,50 @@    final Serde<K> keySerde;\n    final Serde<V> valueSerde;\n    StateSerdes<K, V> serdes;\n    private StreamsMetricsImpl metrics;\n    private Sensor putTime;"
  },
  {
    "id" : "a005d433-649f-42c0-9cee-0714fa2bc00a",
    "prId" : 6255,
    "prUrl" : "https://github.com/apache/kafka/pull/6255#pullrequestreview-202962456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25552e13-6e37-4a45-a7c1-cc78639acc75",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Since super.init is `innerState.init(context, root);` could we just call that to be consistent with other calls, or are you intentionally call this in case we change the implementation of wrappedstore.init in the future?",
        "createdAt" : "2019-02-12T03:03:56Z",
        "updatedAt" : "2019-02-13T14:39:33Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "e0185d55-1ee8-4edf-a56e-6ebbcfbaf85c",
        "parentId" : "25552e13-6e37-4a45-a7c1-cc78639acc75",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Good question...",
        "createdAt" : "2019-02-12T19:37:02Z",
        "updatedAt" : "2019-02-13T14:39:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "63540148-d7f5-4594-9c26-230c5dd62dc3",
        "parentId" : "25552e13-6e37-4a45-a7c1-cc78639acc75",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "yes, it would be incorrect design to call `wrappedStore().init` directly. The job of `WrappedStateStore.init` is to \"do the right thing\". If we go and look at what it does today, and just do that thing, it'll work only until the superclass's implementation changes.\r\n\r\nAnother way to look at it is that we are \"intercepting\" the init call, to add some extra stuff before and after the init. This doesn't mean we get to interrupt the call hierarchy and circumvent our parent class, nor do we have any reason to do so.\r\n\r\nNote that \"the other calls\" you refer to are not `StateStore` calls, they are `WindowStore` calls. And our superclass doesn't implement `WindowStore`, so it's not possible to call (eg) `super.put(key, value, timestamp)`.",
        "createdAt" : "2019-02-12T23:28:49Z",
        "updatedAt" : "2019-02-13T14:39:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e871f2a26bed0701a074e91e41c4e47f48f6b9e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +87,91 @@        final long startNs = time.nanoseconds();\n        try {\n            super.init(context, root);\n        } finally {\n            metrics.recordLatency("
  }
]