[
  {
    "id" : "5229ac43-15ef-45ce-bb50-e0dc731ab1da",
    "prId" : 10331,
    "prUrl" : "https://github.com/apache/kafka/pull/10331#pullrequestreview-629447958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "987561af-7ccc-458d-99d9-fcb36c51d23b",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we declare this class as `extends RocksDBWindowStore` so that we can save on those functions like `init` as their logics do not change, also no duplicated `maybeUpdateSeqnumForDups`.",
        "createdAt" : "2021-04-01T21:31:29Z",
        "updatedAt" : "2021-04-07T18:50:34Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "035bc5cd-4dea-4e14-b3bb-5aabc2afc8ac",
        "parentId" : "987561af-7ccc-458d-99d9-fcb36c51d23b",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Actually as I think twice I think we can just implement `put` and `all`, and for other read operations directly throw unsupported exceptions to make sure if they are called by mistake, we can fail fast. Also by doing that, we can just make `TimeOrderedWindowStoreIteratorWrapper` an inner class since it is only used by `all()`",
        "createdAt" : "2021-04-01T22:09:19Z",
        "updatedAt" : "2021-04-07T18:50:34Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "a5b79405-4aa9-47cc-80a0-09ea973b86bf",
        "parentId" : "987561af-7ccc-458d-99d9-fcb36c51d23b",
        "authorId" : "92abc720-96d9-4067-bc18-9bf1fa4019a1",
        "body" : "Seems too much work on the testing side if I keep most of the methods unsupported. Btw, I will remove the `RocksDBTimeOrderedSegmentedBytesStore` because we don't need to do range queries with prefixes anymore. With that, all methods in this class will work as expected without the issues with the range iterators caused by looking with prefixed keys. I think we should keep all the functionality. It is harmless, and it is already tested by `RocksDBTimeOrderedWindowStoreTest`. What do you think?",
        "createdAt" : "2021-04-02T17:25:36Z",
        "updatedAt" : "2021-04-07T18:50:34Z",
        "lastEditedBy" : "92abc720-96d9-4067-bc18-9bf1fa4019a1",
        "tags" : [
        ]
      },
      {
        "id" : "5816a437-a178-4c4d-8a31-d2ef8e653b4d",
        "parentId" : "987561af-7ccc-458d-99d9-fcb36c51d23b",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yeah that's a good point about unit test complexities. Let's just emphasize that key ranges are sub-optimally implemented with the new schema then (see my other comment below).",
        "createdAt" : "2021-04-06T22:22:53Z",
        "updatedAt" : "2021-04-07T18:50:34Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "708f08083e0ca568d9395e50b49d5883fc6e8fa2",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@ * which uses the {@link WindowKeySchema} to serialize the record bytes for efficient key queries.\n */\npublic class RocksDBTimeOrderedWindowStore\n    extends WrappedStateStore<SegmentedBytesStore, Object, Object>\n    implements WindowStore<Bytes, byte[]> {"
  }
]