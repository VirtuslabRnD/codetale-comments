[
  {
    "id" : "a63d7dca-5d11-4247-a0d2-22d473426243",
    "prId" : 6631,
    "prUrl" : "https://github.com/apache/kafka/pull/6631#pullrequestreview-230434477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "994c2134-8a27-4fb0-bf59-c0c29aa57d84",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Record skipped record.",
        "createdAt" : "2019-04-25T03:04:43Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce9250c078e701030e104f75c156a0dbf4634196",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +85,89 @@                    key, value, context().topic(), context().partition(), context().offset()\n                );\n                skippedRecordsSensor.record();\n                return;\n            }"
  },
  {
    "id" : "1ab975ab-d9fd-409b-9819-d5fb91f8146f",
    "prId" : 6667,
    "prUrl" : "https://github.com/apache/kafka/pull/6667#pullrequestreview-234793432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa151c7-6ca9-48ab-9d1b-94819020f16e",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "We already import the class on L26, so let's remove this import.",
        "createdAt" : "2019-05-07T16:42:06Z",
        "updatedAt" : "2019-05-11T12:26:17Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "413276a9-b0e3-488d-ad37-fa403b36292c",
        "parentId" : "dfa151c7-6ca9-48ab-9d1b-94819020f16e",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is for statically use this single util function (otherwise we have to call `ValueAndTimestamp.getValueOrNull` when calling).",
        "createdAt" : "2019-05-07T22:34:10Z",
        "updatedAt" : "2019-05-11T12:26:17Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "21e5dee3c8c50f5d8d88ce0f1b78b351e30768ba",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +28,32 @@import org.slf4j.LoggerFactory;\n\nimport static org.apache.kafka.streams.state.ValueAndTimestamp.getValueOrNull;\n\npublic class KStreamAggregate<K, V, T> implements KStreamAggProcessorSupplier<K, K, V, T> {"
  },
  {
    "id" : "eda4e7aa-f0e6-47d2-927b-49290ec0a0ca",
    "prId" : 7474,
    "prUrl" : "https://github.com/apache/kafka/pull/7474#pullrequestreview-299642106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eced1a58-1cab-44b9-89a1-67279914aa43",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Maybe keep as `Sensor` and we can set the correct sensor when adding dropped records?  Just a thought I don't have an issue with the current approach.",
        "createdAt" : "2019-10-09T18:43:55Z",
        "updatedAt" : "2019-10-18T14:55:41Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "f4b574da-5e22-4eec-8329-c7a01fd55732",
        "parentId" : "eced1a58-1cab-44b9-89a1-67279914aa43",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "In the task-level metrics refactoring, I will introduce method droppedRecordsSensorOrSkippedRecordsSensor() that chooses which sensor to create depending on the version.",
        "createdAt" : "2019-10-09T19:23:50Z",
        "updatedAt" : "2019-10-18T14:55:41Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "021a1c89fa4ca06714a05a6e388d75bf5fded2a7",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +62,66 @@        private TimestampedKeyValueStore<K, T> store;\n        private StreamsMetricsImpl metrics;\n        private Optional<Sensor> skippedRecordsSensor;\n        private TimestampedTupleForwarder<K, T> tupleForwarder;\n"
  }
]