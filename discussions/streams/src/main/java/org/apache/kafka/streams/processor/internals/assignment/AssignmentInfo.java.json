[
  {
    "id" : "4e21a2fd-55b1-4f75-9d19-4280cb054132",
    "prId" : 4880,
    "prUrl" : "https://github.com/apache/kafka/pull/4880#pullrequestreview-112987447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e1815e1-3cad-4a69-a7f8-d45462bc03d7",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we just call `decodeVersionTwoData` as we did for `processVersionThreeAssignment`?",
        "createdAt" : "2018-04-17T18:36:04Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "62e52942-e0f4-4a48-8257-93b5a70cac86",
        "parentId" : "9e1815e1-3cad-4a69-a7f8-d45462bc03d7",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It seems like these two approaches are fighting for dominance in this code.\r\n\r\nPersonally, I favor the \"flat\" design, where these methods don't call each other. It's just easier to read when each one in isolation lists all the operations it needs to do.\r\n\r\nIt's also more general, since a hypothetical future version N might add some new metadata in the middle, or even drop some previous metadata and so wouldn't be able to call decodeVersion{N-1} in its implementation.",
        "createdAt" : "2018-04-17T19:36:08Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e356dda6-0406-413f-9025-80fc49445552",
        "parentId" : "9e1815e1-3cad-4a69-a7f8-d45462bc03d7",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Version three will change and be different to version two. Thus, I prefer to not just call encodeVersionTwo. Guess it's personal taste.",
        "createdAt" : "2018-04-17T20:35:53Z",
        "updatedAt" : "2018-04-17T20:51:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e762d6e1f24dc67a738950aa75264801b98a27f",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +296,300 @@    private static void decodeVersionThreeData(final AssignmentInfo assignmentInfo,\n                                               final DataInputStream in) throws IOException {\n        decodeActiveTasks(assignmentInfo, in);\n        decodeStandbyTasks(assignmentInfo, in);\n        decodeGlobalAssignmentData(assignmentInfo, in);"
  },
  {
    "id" : "2944f0a0-64a0-4e5c-afe5-800ff4084168",
    "prId" : 7185,
    "prUrl" : "https://github.com/apache/kafka/pull/7185#pullrequestreview-280564359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a115a09-1ba8-433a-bb2d-fd51ad829f0c",
        "parentId" : null,
        "authorId" : "478a572c-b267-486a-b845-4847ccf71f62",
        "body" : "@guozhangwang Upon further testing, a simple dictionary encoding on the wire, saves almost the same amount as the index position based approach.. \r\n\r\nThis is much much simpler and does not interfere with the protocol or topology changes in anyway. thoughts? ",
        "createdAt" : "2019-08-12T17:40:47Z",
        "updatedAt" : "2019-09-03T23:47:18Z",
        "lastEditedBy" : "478a572c-b267-486a-b845-4847ccf71f62",
        "tags" : [
        ]
      },
      {
        "id" : "0262519d-44b6-4eac-b1a4-44ca5596c5b7",
        "parentId" : "6a115a09-1ba8-433a-bb2d-fd51ad829f0c",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I like this idea. It's indeed much simplified. I think the dictionary map cost is marginal if we are having a large number of clients with large number of partitions per topic.",
        "createdAt" : "2019-08-28T02:46:06Z",
        "updatedAt" : "2019-09-03T23:47:18Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ab9b54afa2442365850883bd0197a88395976ae",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +203,207 @@    }\n\n    private void encodePartitionsByHostAsDictionary(final DataOutputStream out) throws IOException {\n\n        // Build a dictionary to encode topicNames"
  },
  {
    "id" : "ceca4135-3307-445f-8a8f-b9e31d042ee4",
    "prId" : 7649,
    "prUrl" : "https://github.com/apache/kafka/pull/7649#pullrequestreview-312629690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8070050-2fc0-4e13-95fc-7e31b9de537d",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Having to bounce through an extra method for each version does nothing but make the protocol harder to understand. After inlining, we can clearly see the structure of each protocol version, and compare it with the decode method for symmetry.\r\n\r\nI've also inlined other encode/decode helper methods, for exactly the same reason. I won't comment on other instances.",
        "createdAt" : "2019-11-05T20:13:58Z",
        "updatedAt" : "2019-11-05T20:19:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "4fc484be-a5fe-4802-b039-1da32f7e0a36",
        "parentId" : "d8070050-2fc0-4e13-95fc-7e31b9de537d",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "This looks so much better!\r\n\r\nprop: drop inconsistently used version comments.",
        "createdAt" : "2019-11-06T17:11:35Z",
        "updatedAt" : "2019-11-06T17:30:51Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "1a69bbaf-f918-4624-9154-596390afe1a1",
        "parentId" : "d8070050-2fc0-4e13-95fc-7e31b9de537d",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah, didn't notice that. Probably an artifact of the inlining.\r\n\r\nIt _is_ annoying, but if there are no blockers, I might defer this to the future, so we don't have to wait for another passing build.",
        "createdAt" : "2019-11-06T17:55:45Z",
        "updatedAt" : "2019-11-06T17:55:45Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "67332057d2a55db34ae464d47427f51ef787d802",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +149,153 @@                    encodeActiveAndStandbyTaskAssignment(out);\n                    encodePartitionsByHostAsDictionary(out);\n                    out.writeInt(errCode);\n                    break;\n                default:"
  },
  {
    "id" : "89897cef-6b27-4d9e-a637-33044a736f44",
    "prId" : 8409,
    "prUrl" : "https://github.com/apache/kafka/pull/8409#pullrequestreview-388653581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bdd2cd6-7471-4cc5-ae43-5f5f052e2470",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'm wondering if we can avoid encoding this for the common case where there is no \"next rebalance time\". Do you have thoughts on the subject?",
        "createdAt" : "2020-04-03T20:09:41Z",
        "updatedAt" : "2020-04-08T01:54:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c8c47d1d-cecc-46cf-8daa-f174e51634e1",
        "parentId" : "0bdd2cd6-7471-4cc5-ae43-5f5f052e2470",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think it's only worth doing if we don't intend to switch over to generated protocol code for the `AssignmnentInfo` anytime soon. I'm pretty sure it's not possible to accomplish this in the json schema, so it would be a short lived optimization and/or require us to bump the protocol version unnecessarily once we do switch over. ",
        "createdAt" : "2020-04-03T22:34:03Z",
        "updatedAt" : "2020-04-08T01:54:58Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "76c87f97-2da4-4921-959c-6c11863bd68e",
        "parentId" : "0bdd2cd6-7471-4cc5-ae43-5f5f052e2470",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Of course, we don't _have_ to move the `AssignmentInfo` to generated code as well (although imo it's a bit weird to do it for the subscription but not the assignment). Or we could probably just add support for this ourselves at some later point.\r\n\r\nDo you think we should try and save these 8 bytes per assignment?",
        "createdAt" : "2020-04-03T22:38:49Z",
        "updatedAt" : "2020-04-08T01:54:58Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "f46e1600-10a1-4c30-a419-b0c4d76687b3",
        "parentId" : "0bdd2cd6-7471-4cc5-ae43-5f5f052e2470",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, this is a good reason to hold off. We can always bump the version later to try a different encoding.",
        "createdAt" : "2020-04-06T22:09:35Z",
        "updatedAt" : "2020-04-08T01:54:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "51cf963d8b8817cf7f617356b55fdfe1459a0760",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +359,363 @@                    decodeActiveAndStandbyHostPartitions(assignmentInfo, in);\n                    assignmentInfo.errCode = in.readInt();\n                    assignmentInfo.nextRebalanceMs = in.readLong();\n                    break;\n                default:"
  }
]