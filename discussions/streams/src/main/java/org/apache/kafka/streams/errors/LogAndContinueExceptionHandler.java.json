[
  {
    "id" : "904dbe28-6f84-40dd-9977-ebb670997660",
    "prId" : 4772,
    "prUrl" : "https://github.com/apache/kafka/pull/4772#pullrequestreview-107515402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "IIRC, using `StreamThread` is on purpose here (same below). @guozhangwang can you chime in?\r\n\r\nIf `StreamThread` is on purpose, we might want to add a comment.",
        "createdAt" : "2018-03-27T16:51:28Z",
        "updatedAt" : "2018-03-27T16:51:28Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "4349b38e-985a-4bb1-b8f8-c76810bb0a12",
        "parentId" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Would be helpful to understand the reason as well. The problem with a mismatch is that it's harder to track down the source of a log message and it messes up line numbers when printed.",
        "createdAt" : "2018-03-27T19:23:48Z",
        "updatedAt" : "2018-03-27T19:23:48Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "030fb6b1-1c96-46b1-bc6a-294e0df69600",
        "parentId" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The original motivation is to maintain the information of which thread was hitting this error, but the current implementation does not maintain that any more.. I'm not sure if it was lost somewhere in previous commit or it is never the case. But this is what I've in mind originally:\r\n\r\n```\r\n        final String logPrefix = String.format(\"stream-thread [%s] \", threadClientId);\r\n        final LogContext logContext = new LogContext(logPrefix);\r\n        final Logger log = logContext.logger(LogAndContinueExceptionHandler.class);\r\n```\r\n",
        "createdAt" : "2018-03-28T00:13:26Z",
        "updatedAt" : "2018-03-28T00:13:26Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "ab8e574a-e30f-4afd-bf38-e502c4ee7f3e",
        "parentId" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "Are these classes public? Could we move them into `StreamThread`?",
        "createdAt" : "2018-03-28T00:23:23Z",
        "updatedAt" : "2018-03-28T00:23:23Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "542b34d4-8c59-4997-80f5-6beb28eefd10",
        "parentId" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yes they are designed to be public.",
        "createdAt" : "2018-03-28T00:33:47Z",
        "updatedAt" : "2018-03-28T00:33:47Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "25ef21c3-a713-4155-83be-3e4d11afd39d",
        "parentId" : "48cd9a52-86dd-4683-b0c9-01ee7527d526",
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "I see. There may not be a nice way to wire in the thread id from a static context. If we can't get the thread id, I'd suggest accepting the change here so that at least the message points to the right file.",
        "createdAt" : "2018-03-28T00:49:43Z",
        "updatedAt" : "2018-03-28T00:49:43Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6edd0cc1d047d0dd9e86a19316ed6e03777ccc9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +30,34 @@ */\npublic class LogAndContinueExceptionHandler implements DeserializationExceptionHandler {\n    private static final Logger log = LoggerFactory.getLogger(LogAndContinueExceptionHandler.class);\n\n    @Override"
  }
]