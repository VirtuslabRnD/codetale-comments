[
  {
    "id" : "81577ff1-2cad-4050-aa24-17acd293c209",
    "prId" : 9004,
    "prUrl" : "https://github.com/apache/kafka/pull/9004#pullrequestreview-455244463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58adbb96-d3ee-409e-b344-c8d51831f76e",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'll have to update the KIP. Replacing ProcessorContext instead of just adding the generic parameters is going to avoid the Scala compatibility issue we faced last time.",
        "createdAt" : "2020-07-10T02:16:13Z",
        "updatedAt" : "2020-08-09T19:51:25Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "5808073d-9ca3-4829-9597-ca0e95f1a329",
        "parentId" : "58adbb96-d3ee-409e-b344-c8d51831f76e",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Sounds good.",
        "createdAt" : "2020-07-25T00:39:30Z",
        "updatedAt" : "2020-08-09T19:51:25Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5471848c9a2eeae5a17ee5ae2504a6b6979697df",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@ * @param <VForward> a bound on the types of values that may be forwarded\n */\npublic interface ProcessorContext<KForward, VForward> {\n\n    /**"
  },
  {
    "id" : "98d2d1a3-a987-439a-97fe-3ad818991e97",
    "prId" : 9004,
    "prUrl" : "https://github.com/apache/kafka/pull/9004#pullrequestreview-446080441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b225ebe2-0fea-41d7-9597-503e3c00117b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Since this is a new class, I've dropped the deprecated members. Everything else from the old ProcessorContext is preserved.",
        "createdAt" : "2020-07-10T02:17:46Z",
        "updatedAt" : "2020-08-09T19:51:25Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "5471848c9a2eeae5a17ee5ae2504a6b6979697df",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@     * @param value value\n     */\n    <K extends KForward, V extends VForward> void forward(final K key, final V value);\n\n    /**"
  },
  {
    "id" : "de203154-86f0-4eb6-ad44-eaee1b093ef9",
    "prId" : 9217,
    "prUrl" : "https://github.com/apache/kafka/pull/9217#pullrequestreview-474926824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43b7e99c-9ed5-4f3d-8dba-dd581306357b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Removing the package name to point to `org.apache.kafka.streams.processor.api.ProcessorContext` (note the `api` sub-package in the path)",
        "createdAt" : "2020-08-25T01:09:12Z",
        "updatedAt" : "2020-08-25T01:09:13Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "24fa0fc7-b8e3-406c-b84e-e6e9c41af356",
        "parentId" : "43b7e99c-9ed5-4f3d-8dba-dd581306357b",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Good catch.",
        "createdAt" : "2020-08-25T21:30:29Z",
        "updatedAt" : "2020-08-25T21:30:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e022076878591f9e0b447857dbf6f9b83c8bb39",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +106,110 @@    /**\n     * Schedules a periodic operation for processors. A processor may call this method during\n     * {@link Processor#init(ProcessorContext) initialization} or\n     * {@link Processor#process(Object, Object) processing} to\n     * schedule a periodic callback &mdash; called a punctuation &mdash; to {@link Punctuator#punctuate(long)}."
  },
  {
    "id" : "6e979b11-4e35-4cbf-b578-fafecff99adc",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0de26dc3-ac08-41a8-9bdd-0c95d9149ae4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is the small extension to the KIP that I mentioned, which means callers no longer have to cast the result to the store interface that they need (eg `KeyValueStore`).",
        "createdAt" : "2020-08-26T01:49:54Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +102,106 @@     * @return The state store instance\n     */\n    <S extends StateStore> S getStateStore(final String name);\n\n    /**"
  },
  {
    "id" : "8b46e268-7b10-44f0-85df-343bdd0212c9",
    "prId" : 9361,
    "prUrl" : "https://github.com/apache/kafka/pull/9361#pullrequestreview-500554881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df78cd85-c741-4d54-8f31-60379c80f0ac",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The new RecordMetadata context proposed in the KIP. Hopefully, the Javadoc is clear on why it's Optional.",
        "createdAt" : "2020-10-01T17:20:41Z",
        "updatedAt" : "2020-10-02T15:50:27Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8de75f6f16cf8bdcccbcb1bc1fc0a11dd40c1d1",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +72,76 @@     * Of course, it would be safest to always guard this condition.\n     */\n    Optional<RecordMetadata> recordMetadata();\n\n    /**"
  },
  {
    "id" : "10193fdc-5235-42b9-acfb-bfb29bc30453",
    "prId" : 9361,
    "prUrl" : "https://github.com/apache/kafka/pull/9361#pullrequestreview-500824433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc2f2d7f-4e51-42b0-a9ec-b38e425da500",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Migrated to the new Record argument.",
        "createdAt" : "2020-10-01T17:23:55Z",
        "updatedAt" : "2020-10-02T15:50:27Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "79264b49-6715-46ce-bb92-286b91d67df6",
        "parentId" : "fc2f2d7f-4e51-42b0-a9ec-b38e425da500",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I'd suggest we add a few more sentences about \"always create a new Record upon forwarding\" v.s. \"reuse the object overriding its key/value/timestamp/header fields\", e.g. which way is more plausible when.",
        "createdAt" : "2020-10-01T23:30:21Z",
        "updatedAt" : "2020-10-02T15:50:27Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b5a6e7c3-c6ef-42e9-a65b-cb8c3adc084d",
        "parentId" : "fc2f2d7f-4e51-42b0-a9ec-b38e425da500",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks, this sounds like a good place to put that guidance.",
        "createdAt" : "2020-10-02T02:10:58Z",
        "updatedAt" : "2020-10-02T15:50:27Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8de75f6f16cf8bdcccbcb1bc1fc0a11dd40c1d1",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +205,209 @@     * @param record The record to forward to all children\n     */\n    <K extends KForward, V extends VForward> void forward(Record<K, V> record);\n\n    /**"
  },
  {
    "id" : "8e10f14a-f538-4e5a-89cc-1c56ee621571",
    "prId" : 10810,
    "prUrl" : "https://github.com/apache/kafka/pull/10810#pullrequestreview-678897463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1232f23-6da3-4e19-b8ce-e4d4200f2463",
        "parentId" : null,
        "authorId" : "57e5aebe-6b6e-42ba-91fa-921189a7cab6",
        "body" : "```suggestion\r\n     * Returns the metadata of the current record if available. Processors may be invoked to\r\n```\r\nAn `s` is missing.",
        "createdAt" : "2021-06-08T17:55:43Z",
        "updatedAt" : "2021-06-08T17:56:18Z",
        "lastEditedBy" : "57e5aebe-6b6e-42ba-91fa-921189a7cab6",
        "tags" : [
        ]
      },
      {
        "id" : "654f5bef-61b5-40ca-b87e-0692657def92",
        "parentId" : "f1232f23-6da3-4e19-b8ce-e4d4200f2463",
        "authorId" : "57e5aebe-6b6e-42ba-91fa-921189a7cab6",
        "body" : "If've seen you have changed all the others to say `Return`, then this is fine",
        "createdAt" : "2021-06-08T18:57:25Z",
        "updatedAt" : "2021-06-08T18:57:25Z",
        "lastEditedBy" : "57e5aebe-6b6e-42ba-91fa-921189a7cab6",
        "tags" : [
        ]
      }
    ],
    "commit" : "800a42b2d324825bfab9494d2f2b602834d792ab",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +54,58 @@\n    /**\n     * Return the metadata of the current record if available. Processors may be invoked to\n     * process a source record from an input topic, to run a scheduled punctuation\n     * (see {@link ProcessorContext#schedule(Duration, PunctuationType, Punctuator)}),"
  }
]