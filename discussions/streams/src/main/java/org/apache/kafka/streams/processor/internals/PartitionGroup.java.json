[
  {
    "id" : "8d4bc48e-bb26-4214-bf54-ed6e2ba45ba9",
    "prId" : 5218,
    "prUrl" : "https://github.com/apache/kafka/pull/5218#pullrequestreview-130905488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bc55e8d-e805-4ef9-8b0d-6df6c0962658",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We could further optimize this computation by maintaining the queues in sorted order by their timestamp. Then, we would only ever have to look at the first queue in the sorted collection to find the new stream time.\r\n\r\nHowever, this requires more bookkeeping during put and poll, so I'd like to avoid it for now. We can make this optimization if this method is a bottleneck (but I doubt it will be).",
        "createdAt" : "2018-06-21T16:55:41Z",
        "updatedAt" : "2018-06-22T17:11:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e58d9726a7d7d1331ac7dac3ff65c4444c5a1bbc",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +146,150 @@            }\n        }\n        this.streamTime = timestamp;\n    }\n"
  },
  {
    "id" : "61afcbfb-1d70-4f07-85c0-f0a7da423b9b",
    "prId" : 5398,
    "prUrl" : "https://github.com/apache/kafka/pull/5398#pullrequestreview-142507690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ed28a2c-3780-46bb-92b2-9b853b77c235",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Although this is pre-existing, on `close` do we want to clear `nonEmptyQueuesByTime` as well?",
        "createdAt" : "2018-07-27T20:36:50Z",
        "updatedAt" : "2018-08-02T22:06:29Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "cc016900-08ad-4c8e-b289-11c6562d2c42",
        "parentId" : "8ed28a2c-3780-46bb-92b2-9b853b77c235",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@bbejeck We call `clear()` in `closeTopology` and `close()` in `closeSuspended`, i.e. the `nonEmptyQueuesByTime` should already be cleared when `close()` is called. But I agree with you that to to be on the safer side we can always just call clear() inside close(). Does that sound good to you?",
        "createdAt" : "2018-08-01T18:32:52Z",
        "updatedAt" : "2018-08-02T22:06:29Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c57cec79fa53032b55dd7a5f374c9ee62c25098",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +166,170 @@    }\n\n    public void close() {\n        clear();\n        partitionQueues.clear();"
  },
  {
    "id" : "d5a24539-329e-4c14-b8fc-6972b641902d",
    "prId" : 5742,
    "prUrl" : "https://github.com/apache/kafka/pull/5742#pullrequestreview-163593993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05adafc7-196d-4e20-894a-d88f84f481de",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "So, to return to @bbejeck 's concern... This metric gets updated once for every record we process. This may be less frequent than for every record in every call to a window aggregator, but it's still pretty darn frequent.\r\n\r\nShould I make it DEBUG-level until KAFKA-7275 is done?",
        "createdAt" : "2018-10-05T22:36:41Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "a25ea0f5-d822-44ee-8905-9021bd791f6a",
        "parentId" : "05adafc7-196d-4e20-894a-d88f84f481de",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I'm +1 on keeping both `dropped` and `lateness` sensors DEBUG for now.",
        "createdAt" : "2018-10-05T22:46:05Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "0daf86b2-ff6a-4671-9f87-2675190e36e3",
        "parentId" : "05adafc7-196d-4e20-894a-d88f84f481de",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The `dropped` metric was pre-existing (was `skipped-records` before). It has been at INFO level since 1.1 or 1.2. I think we should leave it at INFO. (The prior justification for this was that it should be abnormal to be dropping records, and it would probably be nice to know by default.)\r\n\r\nI have made `lateness` a DEBUG metric, though.",
        "createdAt" : "2018-10-08T16:38:18Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "abbe5c20-928f-4efb-b776-2f3f3f2cc162",
        "parentId" : "05adafc7-196d-4e20-894a-d88f84f481de",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "makes sense to me, +1 on making `lateness` DEBUG",
        "createdAt" : "2018-10-10T22:57:24Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "51c80eb6ad182197f8e09839b617db13053938ea",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +104,108 @@                } else {\n                    recordLatenessSensor.record(streamTime - record.timestamp);\n                }\n            }\n        }"
  }
]