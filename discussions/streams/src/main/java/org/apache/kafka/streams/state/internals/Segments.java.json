[
  {
    "id" : "1a5f00a4-d799-4c7e-abb2-a7be8fbe1026",
    "prId" : 5253,
    "prUrl" : "https://github.com/apache/kafka/pull/5253#pullrequestreview-130480035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c3ef160-77e4-45a6-b468-5ec7f34980ff",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is not necessarily part of this PR, but right now we only purge segments in `put`, should we consider doing purge in `segments` and `allSegments()` as well? They cover all range queries, i.e. both read and writes can trigger segment purging.",
        "createdAt" : "2018-06-19T23:24:24Z",
        "updatedAt" : "2018-06-20T21:03:38Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "11f412e0-a554-4670-a8ce-fe9fb8f72096",
        "parentId" : "7c3ef160-77e4-45a6-b468-5ec7f34980ff",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We could do that, but it might be better to only do it in `put`.\r\n\r\nThe disk usage can only grow during `put`, so there's no danger of running out of disk if you garbage collect only during `put`. Collecting in extra places would just be an optimization to keep the disk footprint as small as possible.\r\n\r\nAlso, it might be surprising to perform disk i/o during a metadata call to list segments.\r\n\r\nThat said, it wouldn't be incorrect to do it...",
        "createdAt" : "2018-06-20T14:20:48Z",
        "updatedAt" : "2018-06-20T21:03:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "33cc50fd-9fe5-437e-bd7d-f19302051534",
        "parentId" : "7c3ef160-77e4-45a6-b468-5ec7f34980ff",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "That is a good point. Let's keep our current behavior as only purge on puts then so that range queries do not see surprise perf variance due to rocksdb closing (each may take a few seconds in worst case).",
        "createdAt" : "2018-06-20T16:26:28Z",
        "updatedAt" : "2018-06-20T21:03:38Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7fcf59c6324e3a7f3713b023f64fed436832311",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +135,139 @@\n    List<Segment> segments(final long timeFrom, final long timeTo) {\n        final List<Segment> result = new ArrayList<>();\n        final NavigableMap<Long, Segment> segmentsInRange = segments.subMap(\n            segmentId(timeFrom), true,"
  }
]