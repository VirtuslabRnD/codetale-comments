[
  {
    "id" : "beb2c8ff-827d-499c-8ff1-9642b73db229",
    "prId" : 5369,
    "prUrl" : "https://github.com/apache/kafka/pull/5369#pullrequestreview-145373011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30d2fca1-0cba-40d6-bfe4-911ee0336c2d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: we can either just refer users to `Windows#fn` for the deprecation message, or copy-paste the javadoc everywhere --- just need to be consistent with one of the approach. Here we are copy-pasting for `until` while not for `maintainMs`.",
        "createdAt" : "2018-08-08T16:42:23Z",
        "updatedAt" : "2018-08-13T21:59:56Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "f6880cca-f51f-4285-a855-5b73c5afbb99",
        "parentId" : "30d2fca1-0cba-40d6-bfe4-911ee0336c2d",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The \"right\" deprecation message depends on the subclass type, so I've opted just to add the missing messages.",
        "createdAt" : "2018-08-10T19:36:06Z",
        "updatedAt" : "2018-08-13T21:59:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "366bb5a8f10600baf3b4000238cce9f6a8a6ef7d",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +132,136 @@     * @throws IllegalArgumentException if {@code duration} is smaller than the window size\n     *\n     * @deprecated since 2.1. Use {@link Materialized#retention} or directly configure the retention in a store supplier\n     *             and use {@link Materialized#as(WindowBytesStoreSupplier)}.\n     */"
  },
  {
    "id" : "5e23af11-6583-468f-87e8-da2d344b2406",
    "prId" : 5682,
    "prUrl" : "https://github.com/apache/kafka/pull/5682#pullrequestreview-160370298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdb89bbd-1161-4026-b48a-839ca82179bf",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "advance can be equal to window size... (needs a fix above, too) -- we only throw if it's larger than window size.",
        "createdAt" : "2018-09-30T21:21:44Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "dccbadeb-43f5-43fc-9862-85f023224f3d",
        "parentId" : "bdb89bbd-1161-4026-b48a-839ca82179bf",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "Fixed.",
        "createdAt" : "2018-10-01T16:05:37Z",
        "updatedAt" : "2018-10-04T14:34:19Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "5210f9fff117c695cb1f3024c94eff7f49599a6a",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +160,164 @@     * @param advance The advance interval (\"hop\") of the window, with the requirement that {@code 0 < advance.toMillis() <= sizeMs}.\n     * @return a new window definition with default maintain duration of 1 day\n     * @throws IllegalArgumentException if the advance interval is negative, zero, or larger-or-equal the window size\n     */\n    @SuppressWarnings(\"deprecation\") // will be fixed when we remove segments from Windows"
  }
]