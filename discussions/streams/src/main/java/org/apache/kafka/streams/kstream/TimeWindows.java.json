[
  {
    "id" : "beb2c8ff-827d-499c-8ff1-9642b73db229",
    "prId" : 5369,
    "prUrl" : "https://github.com/apache/kafka/pull/5369#pullrequestreview-145373011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30d2fca1-0cba-40d6-bfe4-911ee0336c2d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: we can either just refer users to `Windows#fn` for the deprecation message, or copy-paste the javadoc everywhere --- just need to be consistent with one of the approach. Here we are copy-pasting for `until` while not for `maintainMs`.",
        "createdAt" : "2018-08-08T16:42:23Z",
        "updatedAt" : "2018-08-13T21:59:56Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "f6880cca-f51f-4285-a855-5b73c5afbb99",
        "parentId" : "30d2fca1-0cba-40d6-bfe4-911ee0336c2d",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The \"right\" deprecation message depends on the subclass type, so I've opted just to add the missing messages.",
        "createdAt" : "2018-08-10T19:36:06Z",
        "updatedAt" : "2018-08-13T21:59:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "366bb5a8f10600baf3b4000238cce9f6a8a6ef7d",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +132,136 @@     * @throws IllegalArgumentException if {@code duration} is smaller than the window size\n     *\n     * @deprecated since 2.1. Use {@link Materialized#retention} or directly configure the retention in a store supplier\n     *             and use {@link Materialized#as(WindowBytesStoreSupplier)}.\n     */"
  },
  {
    "id" : "5e23af11-6583-468f-87e8-da2d344b2406",
    "prId" : 5682,
    "prUrl" : "https://github.com/apache/kafka/pull/5682#pullrequestreview-160370298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdb89bbd-1161-4026-b48a-839ca82179bf",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "advance can be equal to window size... (needs a fix above, too) -- we only throw if it's larger than window size.",
        "createdAt" : "2018-09-30T21:21:44Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "dccbadeb-43f5-43fc-9862-85f023224f3d",
        "parentId" : "bdb89bbd-1161-4026-b48a-839ca82179bf",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "Fixed.",
        "createdAt" : "2018-10-01T16:05:37Z",
        "updatedAt" : "2018-10-04T14:34:19Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "5210f9fff117c695cb1f3024c94eff7f49599a6a",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +160,164 @@     * @param advance The advance interval (\"hop\") of the window, with the requirement that {@code 0 < advance.toMillis() <= sizeMs}.\n     * @return a new window definition with default maintain duration of 1 day\n     * @throws IllegalArgumentException if the advance interval is negative, zero, or larger-or-equal the window size\n     */\n    @SuppressWarnings(\"deprecation\") // will be fixed when we remove segments from Windows"
  },
  {
    "id" : "06b39a07-2b97-4c7e-8b32-c647165f7bfd",
    "prId" : 10926,
    "prUrl" : "https://github.com/apache/kafka/pull/10926#pullrequestreview-693458488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8882099-4920-4092-a262-b34a5eb870b9",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "We should call out explicitly that this is setting the grace period to 0, which means that out of order records arriving after the window end will be dropped. Otherwise it's too easy to just use this method without thinking any further about the grace period and what it means/whether you want it",
        "createdAt" : "2021-06-24T23:08:34Z",
        "updatedAt" : "2021-06-24T23:16:12Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "aabd9f39-6187-4fb7-a559-f6d1f0697b68",
        "parentId" : "d8882099-4920-4092-a262-b34a5eb870b9",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Call it out explicitly in the javadocs, I mean. ie in the description part, not just the `@return` (though it's good to have put it there too). It would be a good idea to describe what the grace period actually means in the javadocs of this method like we do in `ofSizeAndGrace` so that users know what it is they are losing by opting out of the grace period.",
        "createdAt" : "2021-06-27T21:16:16Z",
        "updatedAt" : "2021-06-27T21:16:16Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "7480453b-b248-453d-aaeb-1da050138533",
        "parentId" : "d8882099-4920-4092-a262-b34a5eb870b9",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "In fact, since this and `ofSizeAndGrace` are pretty much the same thing -- differing only in the value of one config -- they should have the same javadocs completely. \r\n\r\nOnly the `@returns` and `@param` would be different. And maybe one sentence in each which says either `\"this window definition allows you to specify the grace period\"` or `\"this window definition does not require setting the grace period, note that this means out-of-order data arriving after the window end will be dropped so think carefully about your requirements before using this in production\"` --- or something like that",
        "createdAt" : "2021-06-27T22:00:42Z",
        "updatedAt" : "2021-06-27T22:00:42Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "4a1a99fe-bbb5-4250-85b1-db327bb7dc52",
        "parentId" : "d8882099-4920-4092-a262-b34a5eb870b9",
        "authorId" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "body" : "@ableegoldman \n\nMakes sense. I will review the Javadocs again for all the API changes and apply this feedback to the new API methods for the KIP\n\n",
        "createdAt" : "2021-06-27T22:28:01Z",
        "updatedAt" : "2021-06-27T22:28:01Z",
        "lastEditedBy" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff288e6fddf2457cdd66a78910615ed14706c8b2",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +98,102 @@     * @throws IllegalArgumentException if the specified window size is zero or negative or can't be represented as {@code long milliseconds}\n     */\n    public static TimeWindows ofSizeWithNoGrace(final Duration size) throws IllegalArgumentException {\n        return ofSizeAndGrace(size, ofMillis(NO_GRACE_PERIOD));\n    }"
  },
  {
    "id" : "9c74ced7-c9d8-49ec-a489-c825a145ebc3",
    "prId" : 10926,
    "prUrl" : "https://github.com/apache/kafka/pull/10926#pullrequestreview-695702544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be4418c7-ee1f-4a8d-835d-f5ecaa365572",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: move the previous line?",
        "createdAt" : "2021-06-30T06:07:11Z",
        "updatedAt" : "2021-06-30T06:12:28Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff288e6fddf2457cdd66a78910615ed14706c8b2",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +121,125 @@     */\n    public static TimeWindows ofSizeAndGrace(final Duration size, final Duration afterWindowEnd)\n            throws IllegalArgumentException {\n\n        final long sizeMs = size.toMillis();"
  },
  {
    "id" : "cbecda6a-81ad-4e1c-b6f4-0eade29a3649",
    "prId" : 10926,
    "prUrl" : "https://github.com/apache/kafka/pull/10926#pullrequestreview-697942939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52ad97c0-7c35-405f-990a-2d14fa74fbc7",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "This is not completely compatible with the behavior of older Streams apps. See #10953 for a fix and more details.",
        "createdAt" : "2021-07-02T08:20:11Z",
        "updatedAt" : "2021-07-02T08:20:47Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff288e6fddf2457cdd66a78910615ed14706c8b2",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +147,151 @@        final long sizeMs = validateMillisecondDuration(size, msgPrefix);\n\n        return new TimeWindows(sizeMs, sizeMs, DEPRECATED_OLD_24_HR_GRACE_PERIOD);\n    }\n"
  },
  {
    "id" : "2b4ae434-99d7-450c-b194-5fc1b60426da",
    "prId" : 10953,
    "prUrl" : "https://github.com/apache/kafka/pull/10953#pullrequestreview-706889899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33d7d601-36b2-49bd-8b49-2404e59c5b97",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "The javadoc `@return` needs to be adapted.",
        "createdAt" : "2021-07-02T07:48:14Z",
        "updatedAt" : "2021-07-02T07:55:22Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ef1b39a5-e5ca-4f0f-80c4-afd5d15bb8f3",
        "parentId" : "33d7d601-36b2-49bd-8b49-2404e59c5b97",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Updated on all corresponding classes' constructors.",
        "createdAt" : "2021-07-15T03:18:52Z",
        "updatedAt" : "2021-07-15T04:05:59Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "307a7c4ca4e3617a4aad238c22d8dc1147dee868",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +147,151 @@        final long sizeMs = validateMillisecondDuration(size, msgPrefix);\n\n        return new TimeWindows(sizeMs, sizeMs, Math.max(DEPRECATED_OLD_24_HR_GRACE_PERIOD - sizeMs, 0));\n    }\n"
  }
]