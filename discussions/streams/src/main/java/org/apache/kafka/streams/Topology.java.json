[
  {
    "id" : "40d6e477-35fd-4444-92ad-f4ab9f8d85c5",
    "prId" : 5348,
    "prUrl" : "https://github.com/apache/kafka/pull/5348#pullrequestreview-203542015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db1affda-5f64-472c-b0ef-43dfc6314900",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need this? Does the build report a WARNING and fails without it? (same below)",
        "createdAt" : "2019-02-13T01:51:57Z",
        "updatedAt" : "2019-02-21T07:48:05Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c393ba47-028e-45c2-b10a-5851e6ed32ab",
        "parentId" : "db1affda-5f64-472c-b0ef-43dfc6314900",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Adding default implementation to close() and configure() make Deserializer be a functional interface. Hence, it is feasible to pass lambdas without explicit type (Deserializer and TimestampExtractor can be the identical lambda expression). javac doesn't like the potential ambiguity. We can reorder the arguments in order to \"avoid\" the complaint. However, Topology is a public class so changing the method signature will break the compatibility. As a result, I added SuppressWarnings.\r\n",
        "createdAt" : "2019-02-13T07:48:05Z",
        "updatedAt" : "2019-02-21T07:48:05Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "2e7ab33d-bd88-4908-be95-95635596688b",
        "parentId" : "db1affda-5f64-472c-b0ef-43dfc6314900",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Thanks for the details -- however, you did not answer my question: Does the build fail without the annotation?",
        "createdAt" : "2019-02-13T22:24:36Z",
        "updatedAt" : "2019-02-21T07:48:05Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9e7a863f-0627-4858-872e-61369e9d21d0",
        "parentId" : "db1affda-5f64-472c-b0ef-43dfc6314900",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "> Does the build fail without the annotation?\r\n\r\nabsolutely :)",
        "createdAt" : "2019-02-14T02:14:17Z",
        "updatedAt" : "2019-02-21T07:48:05Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba10c8134da18b3bcc1d90ab45bc022b4d502cd1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +305,309 @@     * @throws TopologyException if processor is already added or if topics have already been registered by name\n     */\n    @SuppressWarnings(\"overloads\")\n    public synchronized Topology addSource(final AutoOffsetReset offsetReset,\n                                           final String name,"
  },
  {
    "id" : "2b55124b-fbcb-4278-aac4-2a7c7cfbfeae",
    "prId" : 9148,
    "prUrl" : "https://github.com/apache/kafka/pull/9148#pullrequestreview-463940277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47961ca0-7c93-4b49-b6c2-08786fdf8ca8",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Also here, adapting the old API to the new one.",
        "createdAt" : "2020-08-10T03:26:38Z",
        "updatedAt" : "2020-08-18T17:42:07Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8718628b670171cdc01fc20e7fe59284c3a5b9b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +723,727 @@            topic,\n            processorName,\n            () -> ProcessorAdapter.adapt(stateUpdateSupplier.get())\n        );\n        return this;"
  },
  {
    "id" : "193ca04c-551a-4eff-9727-63300afed9db",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef62c8c5-a20f-4a22-b721-b19d7cde6dfd",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "\r\n\r\nas in previous changes, delegating the old API to the new one.\r\n",
        "createdAt" : "2020-08-26T01:32:51Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +676,680 @@            parentNames\n        );\n    }\n\n    /**"
  },
  {
    "id" : "a31da758-9681-4d27-8fc8-bbba69486015",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac3f56bd-75d4-4a0c-9caf-9435c63fcd3a",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "new API",
        "createdAt" : "2020-08-26T01:33:09Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +694,698 @@    public synchronized <KIn, VIn, KOut, VOut> Topology addProcessor(final String name,\n                                                                     final ProcessorSupplier<KIn, VIn, KOut, VOut> supplier,\n                                                                     final String... parentNames) {\n        internalTopologyBuilder.addProcessor(name, supplier, parentNames);\n        final Set<StoreBuilder<?>> stores = supplier.stores();"
  },
  {
    "id" : "864654fe-7d85-4155-a484-0303a9ab0d02",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7f63f56-825c-49e2-b54a-c3c9882295a5",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "As in the other PRs, I inverted the imports, so the old API is fully qualified now, and the new API is imported.",
        "createdAt" : "2020-08-26T01:34:47Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +748,752 @@                                                       final String topic,\n                                                       final String processorName,\n                                                       final org.apache.kafka.streams.processor.ProcessorSupplier<K, V> stateUpdateSupplier) {\n        internalTopologyBuilder.addGlobalStore(\n            storeBuilder,"
  },
  {
    "id" : "c0728572-f97b-4a80-9b6c-62ad1533a08d",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b1cbc77-4ac9-42a6-a8f5-2d750f171495",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "new API",
        "createdAt" : "2020-08-26T01:35:04Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +836,840 @@                                                           final String topic,\n                                                           final String processorName,\n                                                           final ProcessorSupplier<KIn, VIn, Void, Void> stateUpdateSupplier) {\n        internalTopologyBuilder.addGlobalStore(\n            storeBuilder,"
  },
  {
    "id" : "8873c170-f75b-4998-97d6-f6e9784a1995",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-485177752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f695d36-641f-4c42-bebf-06ab178cff19",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "new API",
        "createdAt" : "2020-08-26T01:35:20Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d8ea4a2a-6022-4bb6-82b7-484f5afef21b",
        "parentId" : "5f695d36-641f-4c42-bebf-06ab178cff19",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "For consideration - maybe provide a builder for use as parameter.  \r\nSomething like \r\n```java\r\nGlobalStoreBuilder.builder().addSource().addTimestampextractor().addTopic()...\r\n```\r\nJust a thought, whenever I see long parameter lists I tend to look if there's a way to include a builder instead",
        "createdAt" : "2020-09-08T16:35:28Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "94d17517-9049-4025-8ddc-d75e9ad3edee",
        "parentId" : "5f695d36-641f-4c42-bebf-06ab178cff19",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, this probably would have been a better design. I'm a little hesitant to make this change to the KIP right now, though. Subjectively, it seems more lightweight for users if they don't have to change much of their code to switch over to the new API. Also, maybe I have a little bit of emotional resistance to increasing the scope of this KIP because it's been taking so long to actually make progress on it.\r\n\r\nI've filed https://issues.apache.org/jira/browse/KAFKA-10472 to capture the thought, though.",
        "createdAt" : "2020-09-09T16:07:36Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +881,885 @@                                                           final String topic,\n                                                           final String processorName,\n                                                           final ProcessorSupplier<KIn, VIn, Void, Void> stateUpdateSupplier) {\n        internalTopologyBuilder.addGlobalStore(\n            storeBuilder,"
  },
  {
    "id" : "73d33b11-5939-4c8f-9ed7-3f30159d12fa",
    "prId" : 10869,
    "prUrl" : "https://github.com/apache/kafka/pull/10869#pullrequestreview-682178162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1ca6a35-1ff9-4164-87e7-a6e311ce87a5",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Specifying old PAPI by fully qualified name where necessary.",
        "createdAt" : "2021-06-11T20:03:14Z",
        "updatedAt" : "2021-06-11T20:35:07Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "a33ae9685681126b60352ba1a44805be21da6074",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +656,660 @@     *\n     * @param name the unique name of the processor node\n     * @param supplier the supplier used to obtain this node's {@link org.apache.kafka.streams.processor.Processor} instance\n     * @param parentNames the name of one or more source or processor nodes whose output records this processor should receive\n     * and process"
  }
]