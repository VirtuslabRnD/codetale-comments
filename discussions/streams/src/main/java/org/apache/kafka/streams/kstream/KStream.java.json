[
  {
    "id" : "d62ad2dd-7a1a-4090-98cb-7019934881ae",
    "prId" : 4919,
    "prUrl" : "https://github.com/apache/kafka/pull/4919#pullrequestreview-118173236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa02f55b-6b5b-425a-b5dd-da52a373ba7a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: double space",
        "createdAt" : "2018-05-07T20:37:02Z",
        "updatedAt" : "2018-05-08T00:27:15Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "973b0181-b895-45b5-8d05-36b09fdb6124",
        "parentId" : "fa02f55b-6b5b-425a-b5dd-da52a373ba7a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "ack.",
        "createdAt" : "2018-05-07T22:19:57Z",
        "updatedAt" : "2018-05-08T00:27:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b7257a5b75a831530a76548620be9f546948a7",
    "line" : 1003,
    "diffHunk" : "@@ -1,1 +895,899 @@     * internal repartitioning topic in Kafka and write and re-read the data via this topic before the actual join.\n     * The repartitioning topic will be named \"${applicationId}-XXX-repartition\", where \"applicationId\" is\n     * user-specified in {@link  StreamsConfig} via parameter\n     * {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"XXX\" is an internally generated name, and\n     * \"-repartition\" is a fixed suffix."
  },
  {
    "id" : "c0eb3dcc-f9fc-4413-a82a-bd800d3a12dd",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-172280421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do you remove `transform` ? We only add a new `flatTransform` but `transform` is not removed.",
        "createdAt" : "2018-06-23T00:34:05Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b037563f-c0d1-49d9-8e79-349131db86f9",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I didn't want to make the list of referenced methods too long, so I thought to let map reference transform and flatMap reference flatTransform. But I do not have hard feelings about it. ",
        "createdAt" : "2018-06-23T13:22:36Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "b16aa97d-b1c1-4d7c-82b1-da7ca2f7f2c0",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Fair point. Not sure either :) So far, we list a lot of methods. Do you think we should do a general cleanup reduction of listed method? In the past, we only added but never removed?",
        "createdAt" : "2018-08-15T18:59:30Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "17f5cf3b-5a53-4971-914c-768ab7641455",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'd be in favor of either just adding the new method to the list (without removing another one) or deleting this whole list.\r\nPersonally, I feel the list is a little redundant with this interface itself.",
        "createdAt" : "2018-09-24T22:12:06Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "06c29c62-dc9a-4afb-9bc9-37f1504d86d0",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am fine with both options, but I am in favor of deleting the list. Out of curiosity, what is the advantage of just adding new methods to the list without removing others?",
        "createdAt" : "2018-10-08T06:57:59Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "7578cfcb-59f8-4571-939e-cf781fda4c62",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Unless @mjsax objects, I vote to just delete these lists. At this point, it almost looks like it's directing you to all the other methods in this interface, which seems redundant.\r\n\r\nI'm not sure I follow your last question. The list exists to direct readers to other relevant methods. I'm not sure why adding `flatTransform` renders `transform` irrelevant...",
        "createdAt" : "2018-10-08T17:53:25Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dcbe363a-af5c-4a71-ab96-b5d25fc8a2dc",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I think, it's overall useful to use `@see` to guide users -- however, I agree that it's getting a very long list. This seems to be a general issue though. Maybe, we should do a follow up PR, and go over all JavaDocs and clean them up? We should define a \"strategy/guideline\" how we cross reference. For example, does it make sense to link to both `flatMapValues` -- I guess not.\r\n\r\nWDYT @vvcephei ?",
        "createdAt" : "2018-10-08T22:08:25Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "88dd51af-d4a1-44e7-80c0-3e52af197c6a",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I'm fine with defining and applying a coherent strategy.\r\n\r\nIn lieu of that, I guess the default thing to do here would be to just add the new method to the list without removing any other items.",
        "createdAt" : "2018-10-09T20:34:01Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8c1f987d-2db3-49cb-ba1d-1dcf978e1ad3",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I re-added the links. @vvcephei My questions was about just adding links vs reorganizing links. I think my question was answered by the decision taken. ",
        "createdAt" : "2018-10-10T05:00:37Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ee8d5757-1e9e-4675-b422-b6122ec51dda",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Created https://issues.apache.org/jira/browse/KAFKA-7602",
        "createdAt" : "2018-11-06T23:20:05Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +265,269 @@     * @see #flatMapValues(ValueMapperWithKey)\n     * @see #transform(TransformerSupplier, String...)\n     * @see #flatTransform(TransformerSupplier, String...)\n     * @see #transformValues(ValueTransformerSupplier, String...)\n     * @see #transformValues(ValueTransformerWithKeySupplier, String...)"
  },
  {
    "id" : "6eff79bd-9638-4653-84c5-fad705095c1e",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-180096401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Technically, it's still possible to emit multiple key-value pairs via `context.forward()`, right? I guess this change is to highlight the different to the new `flatTransformValue()` only?\r\n\r\nI am wondering, if we should still mention this (but point out the `flatTransformValue` is recommended for this case, because of type safety)? Think, this might be worth adding, because `context.forward` may be use within punctuations.\r\n\r\nOr is the intend, to discourage the usage of `context.forward` completely and thus remove from the JavaDocs? This seems to limit users to implement custom operators... Note, that `process()` does not return an output stream and thus `transform` is quite critical for users to embed custom operators within the DSL.",
        "createdAt" : "2018-11-06T23:25:32Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "0c31de28-247e-4888-ab03-bdd9d6db0dd5",
        "parentId" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "You probably mean `flatTransform` and not `flatTransformValue` in your comment. I mention that to avoid misunderstandings in the following. How does `transform` differ from `transformValues` with respect to punctuations? I ask because in `transformValues` the transformer is not allowed to call `context.forward`. With [this code](https://github.com/apache/kafka/blob/trunk/streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamTransformValues.java#L50) the `context` in the transformer is wrapped with a context that throws an exception when `context.forward` is called. Does this mean a punctuation in `transformValues` is not allowed to emit any pair?",
        "createdAt" : "2018-11-28T22:22:35Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "1329e8bf-af6a-4489-82cf-3bf0507d0f42",
        "parentId" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "> You probably mean flatTransform and not flatTransformValue in your comment.\r\n\r\nYes.\r\n\r\nIn `transformValue` it's not allowed to use `context.forward()` (neither in `transform` nor in a `punctuation`) because it would allow to change the key violating the `transformValue` contract to not change the key.\r\n\r\nIn `transform` it's ok to call `context.forward()` though as there is no such restriction.",
        "createdAt" : "2018-11-30T02:00:29Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +496,500 @@\n    /**\n     * Transform each record of the input stream into zero or one record in the output stream (both key and value type\n     * can be altered arbitrarily).\n     * A {@link Transformer} (provided by the given {@link TransformerSupplier}) is applied to each input record and"
  },
  {
    "id" : "6ce8eddc-5204-4186-a863-351a7dc43fa7",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210066542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a427b6-f09b-4a78-92bf-2d7ded1e3694",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove empty line",
        "createdAt" : "2019-01-26T21:08:43Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "5532339a-0b97-420a-a026-be657a23d303",
        "parentId" : "60a427b6-f09b-4a78-92bf-2d7ded1e3694",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:24:22Z",
        "updatedAt" : "2019-03-04T10:24:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +504,508 @@     * Furthermore, via {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long)}, the processing progress\n     * can be observed and additional periodic actions can be performed.\n     *\n     * <p>\n     * In order to assign a state, the state must be created and registered beforehand:"
  },
  {
    "id" : "c9f46471-1e3d-4418-92a8-0873991f58fb",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-224125847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a40a708a-0e07-4b98-8e71-f12dddf02bde",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I just realize, that this seems to be wrong. `punctuate()` does not return anything. Might be a problem throughout all JavaDocs -- could your verify @cadonna ? I would suggest to do a separate PR to address this though so we can merge this PR without additional delay",
        "createdAt" : "2019-01-26T21:10:44Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a8403d53-c725-49fd-8428-342b25a44ed0",
        "parentId" : "a40a708a-0e07-4b98-8e71-f12dddf02bde",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Created PR #6552",
        "createdAt" : "2019-04-08T22:58:34Z",
        "updatedAt" : "2019-04-08T22:58:35Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +523,527 @@     * a schedule must be registered.\n     * The {@link Transformer} must return a {@link KeyValue} type in {@link Transformer#transform(Object, Object)\n     * transform()} and {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long) punctuate()}.\n     * <pre>{@code\n     * new TransformerSupplier() {"
  },
  {
    "id" : "d9afccb0-bb25-4553-ab90-418a969635d0",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210066839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d821c0e4-f466-475b-9a25-3ed12db98a81",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Nit: JavaDoc markup is not HTML... Thus, there is no closing tag. Remove  the and next empty line.",
        "createdAt" : "2019-01-26T21:11:32Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7267439a-e94b-4d9e-a315-11e8e6114f17",
        "parentId" : "d821c0e4-f466-475b-9a25-3ed12db98a81",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:25:00Z",
        "updatedAt" : "2019-03-04T10:25:00Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +554,558 @@     * or join) is applied to the result {@code KStream}.\n     * (cf. {@link #transformValues(ValueTransformerSupplier, String...)})\n     * </p>\n     *\n     * <p>"
  },
  {
    "id" : "99db0247-b49f-4f29-ba2c-4ea1a93b9e4d",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "552f4315-f79e-4301-9456-a3c8f278189d",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: \"in `transform()` and `punctuate()`\"",
        "createdAt" : "2019-01-26T21:12:39Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "401ce493-94c7-4a0f-a78e-0d602a91e9a0",
        "parentId" : "552f4315-f79e-4301-9456-a3c8f278189d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Done in PR #6365",
        "createdAt" : "2019-03-04T10:40:13Z",
        "updatedAt" : "2019-03-04T10:40:13Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +558,562 @@     * <p>\n     * Note that it is possible to emit multiple records for each input record by using\n     * {@link ProcessorContext#forward(Object, Object) context#forward()} in {@link Transformer#transform(K, V)}.\n     * However, a mismatch between the types of the emitted records and the type of the stream would only be detected\n     * at runtime."
  },
  {
    "id" : "e9cae9f1-5b18-434d-b1be-3db38e024b73",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210067245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99439595-a356-480d-8328-ac2c88c256b4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove this line",
        "createdAt" : "2019-01-26T21:12:52Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3aa79087-99a4-4226-ac25-7abf70fc4071",
        "parentId" : "99439595-a356-480d-8328-ac2c88c256b4",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:25:54Z",
        "updatedAt" : "2019-03-04T10:25:54Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +564,568 @@     * {@link #flatTransform(TransformerSupplier, String...)} if multiple records need to be emitted for each input\n     * record.\n     * </p>\n     *\n     * @param transformerSupplier an instance of {@link TransformerSupplier} that generates a {@link Transformer}"
  },
  {
    "id" : "4b791a15-46ba-474e-b28c-29d0964ebdad",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove empty line",
        "createdAt" : "2019-01-26T21:14:26Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "bf72c7c5-5b2d-4bad-aaa2-d15a4088edac",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "In `transform()` we have a sentence:\r\n```\r\nThe {@link Transformer} must return a {@link KeyValue} type in {@link Transformer#transform(Object, Object) transform()}\r\n```\r\n\r\nMight be good to add this here too and point out it might be a an `Iterable` plus example. Compare `flatMap()`:\r\n```\r\n     * The provided {@link KeyValueMapper} must return an {@link Iterable} (e.g., any {@link java.util.Collection} type)\r\n     * and the return value must not be {@code null}.\r\n```",
        "createdAt" : "2019-01-26T21:21:08Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "eb736538-d9ca-4a92-8da3-34fe86b0281f",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Empty line was already removed by somebody else.",
        "createdAt" : "2019-03-04T10:26:46Z",
        "updatedAt" : "2019-03-04T10:26:47Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "4708bbbc-e934-47c0-9314-2c5d77a5f813",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I added a similar sentence in PR #6365",
        "createdAt" : "2019-03-04T10:40:48Z",
        "updatedAt" : "2019-03-04T10:40:48Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +590,594 @@     * Furthermore, via {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long)} the processing progress\n     * can be observed and additional periodic actions can be performed.\n     *\n     * <p>\n     * In order to assign a state, the state must be created and registered beforehand:"
  },
  {
    "id" : "ba3abfd1-145f-4ca6-95f3-345a9a852f53",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-224126000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d1945b9-8a1d-4fa8-95a5-37fe617c1a7f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: `punctuate each second` (might be c&p error and affect other places, too) -- maybe better to address in separate PR (the `void punctuate()` issue and this can be one PR IMHO).",
        "createdAt" : "2019-01-26T21:16:41Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3133274a-3679-4cce-a84a-623cddaa5d83",
        "parentId" : "6d1945b9-8a1d-4fa8-95a5-37fe617c1a7f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Also contained in PR #6552",
        "createdAt" : "2019-04-08T22:59:08Z",
        "updatedAt" : "2019-04-08T22:59:08Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +618,622 @@     *                 this.context = context;\n     *                 this.state = context.getStateStore(\"myTransformState\");\n     *                 // punctuate each 1000ms; can access this.state\n     *                 context.schedule(Duration.ofSeconds(1), PunctuationType.WALL_CLOCK_TIME, new Punctuator(..));\n     *             }"
  },
  {
    "id" : "3f845b5e-6c34-4d13-8596-c83b9f40ffd9",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c991264-ecf4-4d4e-aac2-8fd7d34d1b76",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we add a similar paragraph about using `context.forward()` as in `transform()` ?",
        "createdAt" : "2019-01-26T21:18:01Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6e2a1c82-5d58-4273-97a3-75180be8bc71",
        "parentId" : "6c991264-ecf4-4d4e-aac2-8fd7d34d1b76",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I added a similar paragraph in PR #6365",
        "createdAt" : "2019-03-04T10:41:18Z",
        "updatedAt" : "2019-03-04T10:41:18Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +642,646 @@     * or join) is applied to the result {@code KStream}.\n     * (cf. {@link #transformValues(ValueTransformerSupplier, String...)})\n     *\n     * @param transformerSupplier an instance of {@link TransformerSupplier} that generates a {@link Transformer}\n     * @param stateStoreNames     the names of the state stores used by the processor"
  },
  {
    "id" : "b750b4b1-8f5a-4d08-8925-bc73c4c4a650",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160009405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fe3814d-a5f9-4432-a32b-d3db112eb335",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Did you mean to also insert a `<p>` here, so the html would be formatted the same as this javadoc?",
        "createdAt" : "2018-09-28T15:30:39Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "0fd96123-6784-4c4f-ad76-85c2c703722c",
        "parentId" : "2fe3814d-a5f9-4432-a32b-d3db112eb335",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "I'll add but I believe that was pre-existing",
        "createdAt" : "2018-09-28T20:16:16Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +840,844 @@     *\n     * <p>\n     * You can retrieve all generated internal topic names via {@link Topology#describe()}.\n     *\n     * <p>"
  },
  {
    "id" : "584f8cea-df88-4f10-badc-423d56f87104",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160009696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cea7d59-d65a-46a2-85d5-ba3d65117cdd",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "maybe we can also add note to the javadoc, like `@deprecated since 2.1. Use {@link groupByKey(Grouped)} instead.` ?",
        "createdAt" : "2018-09-28T15:32:58Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "b14ca13f-208c-4172-97c9-d6f2b7274cbb",
        "parentId" : "9cea7d59-d65a-46a2-85d5-ba3d65117cdd",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:17:13Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +819,823 @@     * @deprecated since 2.1. Use {@link org.apache.kafka.streams.kstream.KStream#groupByKey(Grouped)} instead\n     */\n    @Deprecated\n    KGroupedStream<K, V> groupByKey(final Serialized<K, V> serialized);\n"
  },
  {
    "id" : "c5cc56c6-500d-448b-96e9-e32d10d2ee9d",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160010422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87bf4b31-b919-4456-b2a1-d98ca8f8bf39",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "ditto on the deprecation notice in the javadoc.",
        "createdAt" : "2018-09-28T15:33:25Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "6fdc0a53-9b6b-4331-99b9-b7a097fdba3c",
        "parentId" : "87bf4b31-b919-4456-b2a1-d98ca8f8bf39",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:19:29Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +911,915 @@     * @deprecated since 2.1. Use {@link org.apache.kafka.streams.kstream.KStream#groupBy(KeyValueMapper, Grouped)} instead\n     */\n    @Deprecated\n    <KR> KGroupedStream<KR, V> groupBy(final KeyValueMapper<? super K, ? super V, KR> selector,\n                                       final Serialized<KR, V> serialized);"
  },
  {
    "id" : "4dd6447d-6e45-45e4-89eb-799886ae6ec2",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160011436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12740cec-4371-4c65-babd-548b53c6852d",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Similar question re: `<p>`",
        "createdAt" : "2018-09-28T15:35:40Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c3541493-14d8-45aa-af31-02b200867080",
        "parentId" : "12740cec-4371-4c65-babd-548b53c6852d",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "pre-existing, fixed",
        "createdAt" : "2018-09-28T20:22:39Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +929,933 @@     * either provided via {@link org.apache.kafka.streams.kstream.Grouped#as(String)} or an internally generated name.\n     * <p>\n     * You can retrieve all generated internal topic names via {@link Topology#describe()}.\n     *\n     * <p>"
  },
  {
    "id" : "d6ac9f96-5df8-4f7b-aab5-69a899f7cf90",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160020093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e5c733-2425-4967-a782-3b9a503b0a6b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "nit: missing the `@param` for `grouped`",
        "createdAt" : "2018-09-28T15:38:09Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e43d87c3-66ab-481b-b676-64c1c478cf1b",
        "parentId" : "17e5c733-2425-4967-a782-3b9a503b0a6b",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:51:02Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +849,853 @@     * @param  grouped  the {@link Grouped} instance used to specify {@link org.apache.kafka.common.serialization.Serdes}\n     *                  and part of the name for a repartition topic if repartitioning is required.\n     * @return a {@link KGroupedStream} that contains the grouped records of the original {@code KStream}\n     * @see #groupBy(KeyValueMapper)\n     */"
  },
  {
    "id" : "736fe498-9077-458a-8bd1-9973f86f3133",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160020652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d43a3657-60a3-4f89-a1e3-b2ab0c3843e8",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "nit: missing the `@param` for `grouped`",
        "createdAt" : "2018-09-28T15:38:16Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "da8fc6ca-2dd4-4226-b51d-b801f1b3b0c2",
        "parentId" : "d43a3657-60a3-4f89-a1e3-b2ab0c3843e8",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-28T20:52:52Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +937,941 @@     * This operation is equivalent to calling {@link #selectKey(KeyValueMapper)} followed by {@link #groupByKey()}.\n     *\n     * @param selector a {@link KeyValueMapper} that computes a new key for grouping\n     * @param grouped  the {@link Grouped} instance used to specify {@link org.apache.kafka.common.serialization.Serdes}\n     *                 and part of the name for a repartition topic if repartitioning is required."
  },
  {
    "id" : "1fc6c239-52bf-469f-9848-c343a9cc233e",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160133246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0401a028-8e8b-4cfb-b0de-1f697afb91b1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nice catch! (Can you double check other JavaDocs, too. Could be c&p error.)",
        "createdAt" : "2018-09-29T23:47:42Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7a3ab46b-1d8d-4cf3-82f0-a59649af883e",
        "parentId" : "0401a028-8e8b-4cfb-b0de-1f697afb91b1",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-09-30T23:41:52Z",
        "updatedAt" : "2018-10-02T03:08:38Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +859,863 @@     * Grouping a stream on the record key is required before an aggregation operator can be applied to the data\n     * (cf. {@link KGroupedStream}).\n     * The {@link KeyValueMapper} selects a new key (which may or may not be of the same type) while preserving the original values.\n     * If the new record key is {@code null} the record will not be included in the resulting {@link KGroupedStream}\n     * <p>"
  },
  {
    "id" : "53c86235-4a59-4ab4-b03d-c31478b71f5b",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160927636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b112aa8-b32b-4570-ae43-a287a3116809",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: `..` -> `.`",
        "createdAt" : "2018-10-02T03:52:36Z",
        "updatedAt" : "2018-10-02T04:15:07Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2b770bf5-2f01-446f-8f6d-cbab2949b6cc",
        "parentId" : "4b112aa8-b32b-4570-ae43-a287a3116809",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-10-02T21:17:29Z",
        "updatedAt" : "2018-10-02T21:17:29Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +802,806 @@     * {@link #transform(TransformerSupplier, String...)}), and no data redistribution happened afterwards (e.g., via\n     * {@link #through(String)}) an internal repartitioning topic may need to be created in Kafka\n     * if a later operator depends on the newly selected key..\n     * This topic will be named \"${applicationId}-&lt;name&gt-repartition\", where \"applicationId\" is user-specified in\n     * {@link StreamsConfig} via parameter {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"&lt;name&gt\" is"
  },
  {
    "id" : "8c6087f2-a82e-48e4-82ed-9e7408d8db55",
    "prId" : 5709,
    "prUrl" : "https://github.com/apache/kafka/pull/5709#pullrequestreview-160927914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6225052-bdcd-4f03-bcf2-7a9600103740",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "`XXX` -> `<name>`",
        "createdAt" : "2018-10-02T03:55:02Z",
        "updatedAt" : "2018-10-02T04:15:07Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "851f6812-7563-4170-9b63-25dc1e8529c2",
        "parentId" : "e6225052-bdcd-4f03-bcf2-7a9600103740",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2018-10-02T21:18:15Z",
        "updatedAt" : "2018-10-02T21:18:15Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1865cefcf62b3da85b2bff112296d49717891c34",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +893,897 @@     * Because a new key is selected, an internal repartitioning topic may need to be created in Kafka if a\n     * later operator depends on the newly selected key.\n     * This topic will be as \"${applicationId}-XXX-repartition\", where \"applicationId\" is user-specified in\n     * {@link  StreamsConfig} via parameter {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"XXX\" is\n     * an internally generated name, and \"-repartition\" is a fixed suffix."
  },
  {
    "id" : "d1ffc0d7-23df-4a3a-9c05-9a0c8cd90d81",
    "prId" : 5730,
    "prUrl" : "https://github.com/apache/kafka/pull/5730#pullrequestreview-160969979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d07b88dd-06fe-4dc0-a2af-1e6145a850af",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We used `${..}` to signify parameter substitution for applicationId. Should we do the same for name?",
        "createdAt" : "2018-10-02T21:46:18Z",
        "updatedAt" : "2018-10-02T22:14:54Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "da843b09-e555-494a-bf73-5e9cf8a4eb3c",
        "parentId" : "d07b88dd-06fe-4dc0-a2af-1e6145a850af",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Maybe -- however, application.id is a configuration parameter and cannot be specified on the method while name is a local parameter (my idea was to use different markup to distinguish both)",
        "createdAt" : "2018-10-02T21:59:04Z",
        "updatedAt" : "2018-10-02T22:14:54Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "0a7931b1-0c75-46eb-a0c0-508cb306f944",
        "parentId" : "d07b88dd-06fe-4dc0-a2af-1e6145a850af",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "I'm inclined to agree with @mjsax as it's a local parameter.  @vvcephei if you insist I can change it.",
        "createdAt" : "2018-10-02T22:07:33Z",
        "updatedAt" : "2018-10-02T22:15:23Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "75af44e3-749b-460c-8c91-7b6c1ccfbc29",
        "parentId" : "d07b88dd-06fe-4dc0-a2af-1e6145a850af",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, that's fine with me!",
        "createdAt" : "2018-10-03T00:14:50Z",
        "updatedAt" : "2018-10-03T00:14:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "587e388d4fae03e79c4877721e389a1483fddfe4",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +893,897 @@     * Because a new key is selected, an internal repartitioning topic may need to be created in Kafka if a\n     * later operator depends on the newly selected key.\n     * This topic will be as \"${applicationId}-&lt;name&gt-repartition\", where \"applicationId\" is user-specified in\n     * {@link  StreamsConfig} via parameter {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"&lt;name&gt\" is\n     * an internally generated name, and \"-repartition\" is a fixed suffix."
  },
  {
    "id" : "d8f30bbf-2b45-44c1-9100-b6e6c49b0c64",
    "prId" : 6269,
    "prUrl" : "https://github.com/apache/kafka/pull/6269#pullrequestreview-203608551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39ce31b9-3698-4e22-ad97-2bc308a6a57a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add some missing paragraph breaks",
        "createdAt" : "2019-02-14T08:07:43Z",
        "updatedAt" : "2019-02-14T08:07:51Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf4ae2c7f6aacfaeafe28852c5553c0b4b433971",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +1159,1163 @@     * {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"storeName\" is an\n     * internally generated name, and \"-changelog\" is a fixed suffix.\n     * <p>\n     * You can retrieve all generated internal topic names via {@link Topology#describe()}.\n     *"
  },
  {
    "id" : "8231d0a4-c9d3-481f-8340-60b0a2da0678",
    "prId" : 6269,
    "prUrl" : "https://github.com/apache/kafka/pull/6269#pullrequestreview-204931074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "111aaa33-ee35-4c1e-a99f-3368b08bf31a",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It's a bummer, since it forces you to come up with a name for the repartition topic, which also makes its lifecycle your responsibility. And also, Streams won't know that it's \"just\" a repartition topic, so it can't be optimized.\r\n\r\nCan I create a Jira to add a way to mark the transform as \"repartition required\"? Or maybe we can automatically do this when the transform has a state store?",
        "createdAt" : "2019-02-18T18:06:23Z",
        "updatedAt" : "2019-02-18T18:06:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "fd16abfc-e00b-4afc-85b2-1be9f2a6207c",
        "parentId" : "111aaa33-ee35-4c1e-a99f-3368b08bf31a",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "There is already a JIRA: https://issues.apache.org/jira/browse/KAFKA-7608 and also inactive KIP https://cwiki.apache.org/confluence/display/KAFKA/KIP-221%3A+Enhance+KStream+with+Connecting+Topic+Creation+and+Repartition+Hint\r\n\r\nIt's not fully backed out yet, but there is stuff we could do to improve the user experience.",
        "createdAt" : "2019-02-18T18:23:41Z",
        "updatedAt" : "2019-02-18T18:23:41Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "61fb0637-1bfc-4aa2-b6ce-f135a5b5654f",
        "parentId" : "111aaa33-ee35-4c1e-a99f-3368b08bf31a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : ":+1: Thanks!",
        "createdAt" : "2019-02-18T19:36:46Z",
        "updatedAt" : "2019-02-18T19:36:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf4ae2c7f6aacfaeafe28852c5553c0b4b433971",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +542,546 @@     * }</pre>\n     * Even if any upstream operation was key-changing, no auto-repartition is triggered.\n     * If repartitioning is required, a call to {@link #through(String)} should be performed before {@code transform()}.\n     * <p>\n     * Transforming records might result in an internal data redistribution if a key based operator (like an aggregation"
  },
  {
    "id" : "2483525d-c372-4782-80e6-8ef5ce0352c5",
    "prId" : 6424,
    "prUrl" : "https://github.com/apache/kafka/pull/6424#pullrequestreview-226375695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68b55fab-be1a-4e11-9c90-5e01fd631aaa",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "```suggestion\r\n     * This is a stateful record-by-record operation (see {@link #mapValues(ValueMapper) mapValues()}).\r\n```",
        "createdAt" : "2019-04-11T15:15:15Z",
        "updatedAt" : "2019-04-14T20:18:11Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "d50da3c3-1261-44a8-9d90-3ee03f9aa81f",
        "parentId" : "68b55fab-be1a-4e11-9c90-5e01fd631aaa",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Throughout the javadocs in `KStreamImpl`, `cf.` is used. Do you want me to change all of them in a new PR? Are there other opinions on this?",
        "createdAt" : "2019-04-12T21:49:49Z",
        "updatedAt" : "2019-04-14T20:18:11Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "7260b92d-b378-41a6-9393-56fb2d207c47",
        "parentId" : "68b55fab-be1a-4e11-9c90-5e01fd631aaa",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I don't know if we have a documentation style guide, but it's generally more accessible if we don't use Latin in our docs. No need to go making sweeping changes, but there's also no need to perpetuate an anti-pattern.",
        "createdAt" : "2019-04-13T18:36:36Z",
        "updatedAt" : "2019-04-14T20:18:11Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "b28beda7-ca69-4ff5-9979-94c30b330eed",
        "parentId" : "68b55fab-be1a-4e11-9c90-5e01fd631aaa",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "> I don't know if we have a documentation style guide\r\n\r\nI don't think we have one.\r\n\r\n>  but it's generally more accessible if we don't use Latin in our docs.\r\n\r\nThis is surprising to me. I thought `cf.` is a standard abbreviation that everybody knows...\r\n\r\nI would still use `cf.` in this PR for consistency reasons. If you prefer `see`, just create a ticket or open a new PR. We can also update this on a per-class basis, but I would prefer to keep it consistent within a class.",
        "createdAt" : "2019-04-14T02:10:12Z",
        "updatedAt" : "2019-04-14T20:18:11Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaa63039370267d4caadc285a9ce09c9f938248c",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +839,843 @@     * record value and computes zero or more new values.\n     * Thus, an input record {@code <K,V>} can be transformed into output records {@code <K:V'>, <K:V''>, ...}.\n     * This is a stateful record-by-record operation (cf. {@link #mapValues(ValueMapper) mapValues()}).\n     * Furthermore, via {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long) Punctuator#punctuate()}\n     * the processing progress can be observed and additional periodic actions can be performed."
  },
  {
    "id" : "3cb96978-95ac-4b0a-8493-e1585c687911",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-278540572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ac954e8-0e78-4dc3-8dc7-35b791213730",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "```suggestion\r\n     * from the auto-generated topic using default serializers, deserializers, and producers {@link DefaultPartitioner}.\r\n```",
        "createdAt" : "2019-08-22T17:01:34Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +844,848 @@    /**\n     * Materialize this stream to an auto-generated repartition topic and create a new {@code KStream}\n     * from the auto-generated topic using default serializers, deserializers, and producer's {@link DefaultPartitioner}.\n     * The number of partitions is determined based on the upstream topics partition numbers.\n     * <p>"
  },
  {
    "id" : "a4a7748c-e883-42a5-b4b2-ad79bfb9c981",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-294655739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6983aff-1af7-49c9-bb3a-76aabf1dfd3a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we explain the difference to `through()`? Something like:\r\n```\r\nThis operation is similar to {@link #through()}, however, Kafka Streams manages the used topic automatically. The created topic is considered and internal topic and hence to other application should read from the topic. Similar to auto-repartitioning, the topic will be created with infinite retention time and data will be purged by Kafka Streams explicitly.\r\n```\r\n\r\nWe might also update the docs for `through()` and point to the new operator.\r\n\r\nWe should also cross-link using `@see` tags",
        "createdAt" : "2019-09-28T01:10:35Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "53be597f-84d1-4c41-ae57-5e99c89a0a5c",
        "parentId" : "f6983aff-1af7-49c9-bb3a-76aabf1dfd3a",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "Done.",
        "createdAt" : "2019-09-28T22:01:50Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      },
      {
        "id" : "f3b3993e-74bd-4eec-a80d-f5adc447cc82",
        "parentId" : "f6983aff-1af7-49c9-bb3a-76aabf1dfd3a",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "Done and added more javadocs",
        "createdAt" : "2019-09-28T22:08:51Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +853,857 @@     * {@link StreamsConfig} via parameter {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG},\n     * \"&lt;name&gt;\" is an internally generated name, and \"-repartition\" is a fixed suffix.\n     *\n     * @return {@code KStream} that contains the exact same repartitioned records as this {@code KStream}.\n     * @see #through(String)"
  }
]