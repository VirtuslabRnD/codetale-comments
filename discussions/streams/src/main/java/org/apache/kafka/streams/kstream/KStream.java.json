[
  {
    "id" : "d62ad2dd-7a1a-4090-98cb-7019934881ae",
    "prId" : 4919,
    "prUrl" : "https://github.com/apache/kafka/pull/4919#pullrequestreview-118173236",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa02f55b-6b5b-425a-b5dd-da52a373ba7a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: double space",
        "createdAt" : "2018-05-07T20:37:02Z",
        "updatedAt" : "2018-05-08T00:27:15Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "973b0181-b895-45b5-8d05-36b09fdb6124",
        "parentId" : "fa02f55b-6b5b-425a-b5dd-da52a373ba7a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "ack.",
        "createdAt" : "2018-05-07T22:19:57Z",
        "updatedAt" : "2018-05-08T00:27:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "52b7257a5b75a831530a76548620be9f546948a7",
    "line" : 1003,
    "diffHunk" : "@@ -1,1 +895,899 @@     * internal repartitioning topic in Kafka and write and re-read the data via this topic before the actual join.\n     * The repartitioning topic will be named \"${applicationId}-XXX-repartition\", where \"applicationId\" is\n     * user-specified in {@link  StreamsConfig} via parameter\n     * {@link StreamsConfig#APPLICATION_ID_CONFIG APPLICATION_ID_CONFIG}, \"XXX\" is an internally generated name, and\n     * \"-repartition\" is a fixed suffix."
  },
  {
    "id" : "c0eb3dcc-f9fc-4413-a82a-bd800d3a12dd",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-172280421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do you remove `transform` ? We only add a new `flatTransform` but `transform` is not removed.",
        "createdAt" : "2018-06-23T00:34:05Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b037563f-c0d1-49d9-8e79-349131db86f9",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I didn't want to make the list of referenced methods too long, so I thought to let map reference transform and flatMap reference flatTransform. But I do not have hard feelings about it. ",
        "createdAt" : "2018-06-23T13:22:36Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "b16aa97d-b1c1-4d7c-82b1-da7ca2f7f2c0",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Fair point. Not sure either :) So far, we list a lot of methods. Do you think we should do a general cleanup reduction of listed method? In the past, we only added but never removed?",
        "createdAt" : "2018-08-15T18:59:30Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "17f5cf3b-5a53-4971-914c-768ab7641455",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'd be in favor of either just adding the new method to the list (without removing another one) or deleting this whole list.\r\nPersonally, I feel the list is a little redundant with this interface itself.",
        "createdAt" : "2018-09-24T22:12:06Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "06c29c62-dc9a-4afb-9bc9-37f1504d86d0",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am fine with both options, but I am in favor of deleting the list. Out of curiosity, what is the advantage of just adding new methods to the list without removing others?",
        "createdAt" : "2018-10-08T06:57:59Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "7578cfcb-59f8-4571-939e-cf781fda4c62",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Unless @mjsax objects, I vote to just delete these lists. At this point, it almost looks like it's directing you to all the other methods in this interface, which seems redundant.\r\n\r\nI'm not sure I follow your last question. The list exists to direct readers to other relevant methods. I'm not sure why adding `flatTransform` renders `transform` irrelevant...",
        "createdAt" : "2018-10-08T17:53:25Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dcbe363a-af5c-4a71-ab96-b5d25fc8a2dc",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I think, it's overall useful to use `@see` to guide users -- however, I agree that it's getting a very long list. This seems to be a general issue though. Maybe, we should do a follow up PR, and go over all JavaDocs and clean them up? We should define a \"strategy/guideline\" how we cross reference. For example, does it make sense to link to both `flatMapValues` -- I guess not.\r\n\r\nWDYT @vvcephei ?",
        "createdAt" : "2018-10-08T22:08:25Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "88dd51af-d4a1-44e7-80c0-3e52af197c6a",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I'm fine with defining and applying a coherent strategy.\r\n\r\nIn lieu of that, I guess the default thing to do here would be to just add the new method to the list without removing any other items.",
        "createdAt" : "2018-10-09T20:34:01Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8c1f987d-2db3-49cb-ba1d-1dcf978e1ad3",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I re-added the links. @vvcephei My questions was about just adding links vs reorganizing links. I think my question was answered by the decision taken. ",
        "createdAt" : "2018-10-10T05:00:37Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ee8d5757-1e9e-4675-b422-b6122ec51dda",
        "parentId" : "b2e68a2d-0cb2-4c69-b35c-a8d1efa9a5f1",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Created https://issues.apache.org/jira/browse/KAFKA-7602",
        "createdAt" : "2018-11-06T23:20:05Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +265,269 @@     * @see #flatMapValues(ValueMapperWithKey)\n     * @see #transform(TransformerSupplier, String...)\n     * @see #flatTransform(TransformerSupplier, String...)\n     * @see #transformValues(ValueTransformerSupplier, String...)\n     * @see #transformValues(ValueTransformerWithKeySupplier, String...)"
  },
  {
    "id" : "6eff79bd-9638-4653-84c5-fad705095c1e",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-180096401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Technically, it's still possible to emit multiple key-value pairs via `context.forward()`, right? I guess this change is to highlight the different to the new `flatTransformValue()` only?\r\n\r\nI am wondering, if we should still mention this (but point out the `flatTransformValue` is recommended for this case, because of type safety)? Think, this might be worth adding, because `context.forward` may be use within punctuations.\r\n\r\nOr is the intend, to discourage the usage of `context.forward` completely and thus remove from the JavaDocs? This seems to limit users to implement custom operators... Note, that `process()` does not return an output stream and thus `transform` is quite critical for users to embed custom operators within the DSL.",
        "createdAt" : "2018-11-06T23:25:32Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "0c31de28-247e-4888-ab03-bdd9d6db0dd5",
        "parentId" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "You probably mean `flatTransform` and not `flatTransformValue` in your comment. I mention that to avoid misunderstandings in the following. How does `transform` differ from `transformValues` with respect to punctuations? I ask because in `transformValues` the transformer is not allowed to call `context.forward`. With [this code](https://github.com/apache/kafka/blob/trunk/streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamTransformValues.java#L50) the `context` in the transformer is wrapped with a context that throws an exception when `context.forward` is called. Does this mean a punctuation in `transformValues` is not allowed to emit any pair?",
        "createdAt" : "2018-11-28T22:22:35Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "1329e8bf-af6a-4489-82cf-3bf0507d0f42",
        "parentId" : "2ab501f1-16d8-4abb-9c57-cdfacd2da64d",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "> You probably mean flatTransform and not flatTransformValue in your comment.\r\n\r\nYes.\r\n\r\nIn `transformValue` it's not allowed to use `context.forward()` (neither in `transform` nor in a `punctuation`) because it would allow to change the key violating the `transformValue` contract to not change the key.\r\n\r\nIn `transform` it's ok to call `context.forward()` though as there is no such restriction.",
        "createdAt" : "2018-11-30T02:00:29Z",
        "updatedAt" : "2019-01-22T20:16:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +496,500 @@\n    /**\n     * Transform each record of the input stream into zero or one record in the output stream (both key and value type\n     * can be altered arbitrarily).\n     * A {@link Transformer} (provided by the given {@link TransformerSupplier}) is applied to each input record and"
  },
  {
    "id" : "6ce8eddc-5204-4186-a863-351a7dc43fa7",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210066542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a427b6-f09b-4a78-92bf-2d7ded1e3694",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove empty line",
        "createdAt" : "2019-01-26T21:08:43Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "5532339a-0b97-420a-a026-be657a23d303",
        "parentId" : "60a427b6-f09b-4a78-92bf-2d7ded1e3694",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:24:22Z",
        "updatedAt" : "2019-03-04T10:24:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +504,508 @@     * Furthermore, via {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long)}, the processing progress\n     * can be observed and additional periodic actions can be performed.\n     *\n     * <p>\n     * In order to assign a state, the state must be created and registered beforehand:"
  },
  {
    "id" : "c9f46471-1e3d-4418-92a8-0873991f58fb",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-224125847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a40a708a-0e07-4b98-8e71-f12dddf02bde",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I just realize, that this seems to be wrong. `punctuate()` does not return anything. Might be a problem throughout all JavaDocs -- could your verify @cadonna ? I would suggest to do a separate PR to address this though so we can merge this PR without additional delay",
        "createdAt" : "2019-01-26T21:10:44Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a8403d53-c725-49fd-8428-342b25a44ed0",
        "parentId" : "a40a708a-0e07-4b98-8e71-f12dddf02bde",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Created PR #6552",
        "createdAt" : "2019-04-08T22:58:34Z",
        "updatedAt" : "2019-04-08T22:58:35Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +523,527 @@     * a schedule must be registered.\n     * The {@link Transformer} must return a {@link KeyValue} type in {@link Transformer#transform(Object, Object)\n     * transform()} and {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long) punctuate()}.\n     * <pre>{@code\n     * new TransformerSupplier() {"
  },
  {
    "id" : "d9afccb0-bb25-4553-ab90-418a969635d0",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210066839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d821c0e4-f466-475b-9a25-3ed12db98a81",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Nit: JavaDoc markup is not HTML... Thus, there is no closing tag. Remove  the and next empty line.",
        "createdAt" : "2019-01-26T21:11:32Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7267439a-e94b-4d9e-a315-11e8e6114f17",
        "parentId" : "d821c0e4-f466-475b-9a25-3ed12db98a81",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:25:00Z",
        "updatedAt" : "2019-03-04T10:25:00Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +554,558 @@     * or join) is applied to the result {@code KStream}.\n     * (cf. {@link #transformValues(ValueTransformerSupplier, String...)})\n     * </p>\n     *\n     * <p>"
  },
  {
    "id" : "99db0247-b49f-4f29-ba2c-4ea1a93b9e4d",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "552f4315-f79e-4301-9456-a3c8f278189d",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: \"in `transform()` and `punctuate()`\"",
        "createdAt" : "2019-01-26T21:12:39Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "401ce493-94c7-4a0f-a78e-0d602a91e9a0",
        "parentId" : "552f4315-f79e-4301-9456-a3c8f278189d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Done in PR #6365",
        "createdAt" : "2019-03-04T10:40:13Z",
        "updatedAt" : "2019-03-04T10:40:13Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +558,562 @@     * <p>\n     * Note that it is possible to emit multiple records for each input record by using\n     * {@link ProcessorContext#forward(Object, Object) context#forward()} in {@link Transformer#transform(K, V)}.\n     * However, a mismatch between the types of the emitted records and the type of the stream would only be detected\n     * at runtime."
  },
  {
    "id" : "e9cae9f1-5b18-434d-b1be-3db38e024b73",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210067245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99439595-a356-480d-8328-ac2c88c256b4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove this line",
        "createdAt" : "2019-01-26T21:12:52Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3aa79087-99a4-4226-ac25-7abf70fc4071",
        "parentId" : "99439595-a356-480d-8328-ac2c88c256b4",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Already changed by somebody else.",
        "createdAt" : "2019-03-04T10:25:54Z",
        "updatedAt" : "2019-03-04T10:25:54Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +564,568 @@     * {@link #flatTransform(TransformerSupplier, String...)} if multiple records need to be emitted for each input\n     * record.\n     * </p>\n     *\n     * @param transformerSupplier an instance of {@link TransformerSupplier} that generates a {@link Transformer}"
  },
  {
    "id" : "4b791a15-46ba-474e-b28c-29d0964ebdad",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: remove empty line",
        "createdAt" : "2019-01-26T21:14:26Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "bf72c7c5-5b2d-4bad-aaa2-d15a4088edac",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "In `transform()` we have a sentence:\r\n```\r\nThe {@link Transformer} must return a {@link KeyValue} type in {@link Transformer#transform(Object, Object) transform()}\r\n```\r\n\r\nMight be good to add this here too and point out it might be a an `Iterable` plus example. Compare `flatMap()`:\r\n```\r\n     * The provided {@link KeyValueMapper} must return an {@link Iterable} (e.g., any {@link java.util.Collection} type)\r\n     * and the return value must not be {@code null}.\r\n```",
        "createdAt" : "2019-01-26T21:21:08Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "eb736538-d9ca-4a92-8da3-34fe86b0281f",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Empty line was already removed by somebody else.",
        "createdAt" : "2019-03-04T10:26:46Z",
        "updatedAt" : "2019-03-04T10:26:47Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "4708bbbc-e934-47c0-9314-2c5d77a5f813",
        "parentId" : "6db5b0e0-76a4-409f-bb0c-a47c3ef940e7",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I added a similar sentence in PR #6365",
        "createdAt" : "2019-03-04T10:40:48Z",
        "updatedAt" : "2019-03-04T10:40:48Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +590,594 @@     * Furthermore, via {@link org.apache.kafka.streams.processor.Punctuator#punctuate(long)} the processing progress\n     * can be observed and additional periodic actions can be performed.\n     *\n     * <p>\n     * In order to assign a state, the state must be created and registered beforehand:"
  },
  {
    "id" : "ba3abfd1-145f-4ca6-95f3-345a9a852f53",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-224126000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d1945b9-8a1d-4fa8-95a5-37fe617c1a7f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: `punctuate each second` (might be c&p error and affect other places, too) -- maybe better to address in separate PR (the `void punctuate()` issue and this can be one PR IMHO).",
        "createdAt" : "2019-01-26T21:16:41Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3133274a-3679-4cce-a84a-623cddaa5d83",
        "parentId" : "6d1945b9-8a1d-4fa8-95a5-37fe617c1a7f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Also contained in PR #6552",
        "createdAt" : "2019-04-08T22:59:08Z",
        "updatedAt" : "2019-04-08T22:59:08Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +618,622 @@     *                 this.context = context;\n     *                 this.state = context.getStateStore(\"myTransformState\");\n     *                 // punctuate each 1000ms; can access this.state\n     *                 context.schedule(Duration.ofSeconds(1), PunctuationType.WALL_CLOCK_TIME, new Punctuator(..));\n     *             }"
  },
  {
    "id" : "3f845b5e-6c34-4d13-8596-c83b9f40ffd9",
    "prId" : 5273,
    "prUrl" : "https://github.com/apache/kafka/pull/5273#pullrequestreview-210073766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c991264-ecf4-4d4e-aac2-8fd7d34d1b76",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we add a similar paragraph about using `context.forward()` as in `transform()` ?",
        "createdAt" : "2019-01-26T21:18:01Z",
        "updatedAt" : "2019-01-26T21:29:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6e2a1c82-5d58-4273-97a3-75180be8bc71",
        "parentId" : "6c991264-ecf4-4d4e-aac2-8fd7d34d1b76",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I added a similar paragraph in PR #6365",
        "createdAt" : "2019-03-04T10:41:18Z",
        "updatedAt" : "2019-03-04T10:41:18Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "defa40188505accf8d98fbba94c63445beccf197",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +642,646 @@     * or join) is applied to the result {@code KStream}.\n     * (cf. {@link #transformValues(ValueTransformerSupplier, String...)})\n     *\n     * @param transformerSupplier an instance of {@link TransformerSupplier} that generates a {@link Transformer}\n     * @param stateStoreNames     the names of the state stores used by the processor"
  }
]