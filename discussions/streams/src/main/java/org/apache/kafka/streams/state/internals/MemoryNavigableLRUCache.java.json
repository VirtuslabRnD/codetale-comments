[
  {
    "id" : "1e2c3eca-72ac-41f8-8c93-883a44fa3506",
    "prId" : 10877,
    "prUrl" : "https://github.com/apache/kafka/pull/10877#pullrequestreview-706779265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3a6e610-4fc5-4838-9f1c-9878ef715196",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Can you add a test or two for this in `InMemoryLRUCacheStoreTest`? Alternatively, I think you should be able to just collect all the tests in `InMemoryKeyValueStoreTest` and `CachingInMemoryKeyValueStoreTest` and move them over to\r\n`AbstractKeyValueStoreTest` instead. That way you get test coverage for both of those plus a handful of other store classes at once, without having to copy the same test over and over across a bunch of different files.",
        "createdAt" : "2021-07-13T04:28:13Z",
        "updatedAt" : "2021-07-13T04:55:00Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "d7f64e37-9d92-4c7a-ac38-1898ef2ab675",
        "parentId" : "b3a6e610-4fc5-4838-9f1c-9878ef715196",
        "authorId" : "dec739d0-c763-471c-b738-6b6f5b82e58e",
        "body" : "1) I guess the reason I didn't add test in `InMemoryLRUCacheStoreTest` was that the key type defined here is Integer and prefixScan like range/reverseRange relies on byte lexicographical ordering and not on the ordering of the key type. So, IMO this test won't yield much for this case. If needed, I can add it.But, I think the tests for reverse and reverseRange are also missing from this class for the same reason or it could just be a miss :) \r\n2) Regarding the merging of test classes into one, I see that both those classes override the `createKeyValueStore` method differently, so merging them as per me would need some analysis. Is it ok if we create a separate ticket and tackle it there?",
        "createdAt" : "2021-07-14T11:50:33Z",
        "updatedAt" : "2021-07-14T11:50:33Z",
        "lastEditedBy" : "dec739d0-c763-471c-b738-6b6f5b82e58e",
        "tags" : [
        ]
      },
      {
        "id" : "aa4acb35-c957-42e6-a055-2f987e0055bb",
        "parentId" : "b3a6e610-4fc5-4838-9f1c-9878ef715196",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "1) Could you just treat them as Bytes all the same, and just convert to/from an Integer before putting/getting them from the store? That way you're still just handling Bytes like you are in this test, it just goes through an extra layer of de/serialization. Should be able to more or less copy over the existing tests with just a bit of extra code. Can you try this, in a followup PR?\r\n2) Yes, I was just suggesting to merge them as a possible way to make things easier and do less work, if it's going to be more then please do file a separate ticket for it.",
        "createdAt" : "2021-07-14T22:49:44Z",
        "updatedAt" : "2021-07-14T22:52:21Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5400dcfb29e3ec6010b7b3734e8f29fc7360cc1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +69,73 @@\n    @Override\n    public <PS extends Serializer<P>, P> KeyValueIterator<Bytes, byte[]> prefixScan(final P prefix, final PS prefixKeySerializer) {\n\n        final Bytes from = Bytes.wrap(prefixKeySerializer.serialize(null, prefix));"
  }
]