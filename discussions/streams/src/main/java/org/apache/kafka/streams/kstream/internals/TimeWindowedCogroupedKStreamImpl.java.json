[
  {
    "id" : "0d1b9e24-65c3-48f7-8a96-d3a8dfa12293",
    "prId" : 7774,
    "prUrl" : "https://github.com/apache/kafka/pull/7774#pullrequestreview-330805587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29ba89ed-60ac-44c7-abfb-8ce7059032cb",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we not pass `keySerde` into the super class? Seems we don't have a test with \"incorrect\" default serdes that require an overwrite -- otherwise the test should fail?",
        "createdAt" : "2019-12-11T08:23:46Z",
        "updatedAt" : "2019-12-11T22:13:14Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2915387d-785a-4689-8260-d1ff33d3d5c9",
        "parentId" : "29ba89ed-60ac-44c7-abfb-8ce7059032cb",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "We can, and it's probably better to do so. I think that this value won't actually get used as its only the key serde of the first `KGroupedStream`",
        "createdAt" : "2019-12-11T20:00:16Z",
        "updatedAt" : "2019-12-11T22:13:14Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f969bfa3fd027b214ab719d13bfff6c31fcda1b3",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@                                     final StreamsGraphNode streamsGraphNode,\n                                     final Map<KGroupedStreamImpl<K, ?>, Aggregator<? super K, ? super Object, V>> groupPatterns) {\n        super(name, null, null, sourceNodes, streamsGraphNode, builder);\n        //keySerde and valueSerde are null because there are many different groupStreams that they could be from\n        this.windows = windows;"
  },
  {
    "id" : "363f6472-04ba-40ad-b6c2-4f158edffb7c",
    "prId" : 7774,
    "prUrl" : "https://github.com/apache/kafka/pull/7774#pullrequestreview-330807596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c737f22b-a7f7-41b1-ac5f-2448a6080fc2",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This method seems to be the exact same as `TimeWindowedKStreamImpl#materialize()` -- we should share the code.",
        "createdAt" : "2019-12-11T08:30:27Z",
        "updatedAt" : "2019-12-11T22:13:14Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b4e6cdbc-5f36-4e5e-b1e8-19f9da2634b8",
        "parentId" : "c737f22b-a7f7-41b1-ac5f-2448a6080fc2",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "It almost is. But there are a few Type differences that make it so I can't use it directly and if I were to adapt `TimeWindowedKStreamImpl#materialize()` it would become less type safe",
        "createdAt" : "2019-12-11T20:03:50Z",
        "updatedAt" : "2019-12-11T22:13:14Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f969bfa3fd027b214ab719d13bfff6c31fcda1b3",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@    @SuppressWarnings(\"deprecation\")\n    // continuing to support Windows#maintainMs/segmentInterval in fallback mode\n    private StoreBuilder<TimestampedWindowStore<K, V>> materialize(\n            final MaterializedInternal<K, V, WindowStore<Bytes, byte[]>> materialized) {\n        WindowBytesStoreSupplier supplier = (WindowBytesStoreSupplier) materialized.storeSupplier();"
  },
  {
    "id" : "e905ed6b-b167-4f55-b469-576105fc735c",
    "prId" : 7782,
    "prUrl" : "https://github.com/apache/kafka/pull/7782#pullrequestreview-332023593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf716c56-0651-4ea6-a9f7-bd397d45fe50",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why this change?",
        "createdAt" : "2019-12-13T17:40:54Z",
        "updatedAt" : "2019-12-13T19:55:13Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c96ac479-c46a-42a1-a62e-5fea3e133640",
        "parentId" : "bf716c56-0651-4ea6-a9f7-bd397d45fe50",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "Something I missed when updating TimeWindowed which could brake the naming for a few cases",
        "createdAt" : "2019-12-13T17:55:12Z",
        "updatedAt" : "2019-12-13T19:55:13Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d30036845b194de6f949002fe66b796c1bdfee76",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +93,97 @@            groupPatterns,\n            initializer,\n            new NamedInternal(named),\n            materialize(materializedInternal),\n            materializedInternal.keySerde() != null ?"
  }
]