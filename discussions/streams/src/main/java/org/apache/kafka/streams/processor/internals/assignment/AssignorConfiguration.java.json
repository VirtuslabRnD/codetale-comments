[
  {
    "id" : "afc70e16-d489-4c94-88a1-693d39b9ce1a",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284585440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb0ccb2-3928-4624-a08c-fafbc41a162c",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: maybe we can just merge `StreamsAssignmentProtocolVersions` to this class?",
        "createdAt" : "2019-09-05T22:36:05Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "3eb3eab0-a29c-481f-8820-7f7099e0f617",
        "parentId" : "6cb0ccb2-3928-4624-a08c-fafbc41a162c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks for the feedback. I separated them because there are lots of classes that need to reference the assignment protocol versions, but there's only one that needs to parse configurations. It would be a shame to couple knowledge of PartitionAssignor configurations into SubscriptionInfo, and AssignmentInfo, for example.",
        "createdAt" : "2019-09-05T23:02:00Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@import static org.apache.kafka.common.utils.Utils.getHost;\nimport static org.apache.kafka.common.utils.Utils.getPort;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.LATEST_SUPPORTED_VERSION;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.VERSION_ONE;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.VERSION_TWO;"
  },
  {
    "id" : "fa86b561-60c1-4eec-bfb9-b7d47b788f7e",
    "prId" : 7386,
    "prUrl" : "https://github.com/apache/kafka/pull/7386#pullrequestreview-297180715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Hey @ableegoldman , I think you need to add the missing \"upgrade from\" versions to the `configuredMetadataVersion` method below as well. Otherwise, creating Streams will just throw an exception when you pass (for example) `UPGRCE_FROM_23`.",
        "createdAt" : "2019-10-03T21:32:52Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "654f24d2-0d55-486d-ac0b-8b2be73a8f87",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Oops, thanks yeah good catch! That reminds me I still need to add test that actually configures the assignor using these.",
        "createdAt" : "2019-10-03T21:35:25Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5567f724-1dd4-4608-93ea-4e69030fb5f3",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Also, not sure if it makes sense to have a test that you can actually construct and start Streams with all versions of \"upgrade.from\", which would have caught this.",
        "createdAt" : "2019-10-03T21:47:29Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e8c0f4d9-e328-4f28-81fd-78ac7f5866de",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Well no, I just added a test that uses `UPGRADE_FROM_23` (and one that doesn't)",
        "createdAt" : "2019-10-03T21:55:11Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5d18d52d-1fc2-4010-9ab1-5d17fe675bda",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Which would have caught that. I'm wondering if it actually makes more sense to not throw an exception in the `default` and just check beforehand whether its a valid config (ie is it contained in some \"valid config values\" set, which we actually may already have somewhere in `StreamsConfig`?)\r\nIt's not really practical to have to add new `UPGRADE_FROM` versions to an increasing number of places in the code or else get an exception thrown. Some cleanup to think about once this is over",
        "createdAt" : "2019-10-03T21:57:44Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "913d9f6a-0894-4cc5-9d04-b17b3f303301",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Agreed on the cleanup front. The current code makes sense when you just have one usage. As soon as we add a second, we probably need a different strategy. ",
        "createdAt" : "2019-10-03T22:11:57Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f047cd9bea88a4ffc88ce2b4f82946d52202c539",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +155,159 @@        }\n\n        return RebalanceProtocol.COOPERATIVE;\n    }\n"
  }
]