[
  {
    "id" : "afc70e16-d489-4c94-88a1-693d39b9ce1a",
    "prId" : 7249,
    "prUrl" : "https://github.com/apache/kafka/pull/7249#pullrequestreview-284585440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb0ccb2-3928-4624-a08c-fafbc41a162c",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: maybe we can just merge `StreamsAssignmentProtocolVersions` to this class?",
        "createdAt" : "2019-09-05T22:36:05Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "3eb3eab0-a29c-481f-8820-7f7099e0f617",
        "parentId" : "6cb0ccb2-3928-4624-a08c-fafbc41a162c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks for the feedback. I separated them because there are lots of classes that need to reference the assignment protocol versions, but there's only one that needs to parse configurations. It would be a shame to couple knowledge of PartitionAssignor configurations into SubscriptionInfo, and AssignmentInfo, for example.",
        "createdAt" : "2019-09-05T23:02:00Z",
        "updatedAt" : "2019-09-06T21:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cc2c66abcb7619589ed3366cb162c78dd7bbef8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@import static org.apache.kafka.common.utils.Utils.getHost;\nimport static org.apache.kafka.common.utils.Utils.getPort;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.LATEST_SUPPORTED_VERSION;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.VERSION_ONE;\nimport static org.apache.kafka.streams.processor.internals.assignment.StreamsAssignmentProtocolVersions.VERSION_TWO;"
  },
  {
    "id" : "fa86b561-60c1-4eec-bfb9-b7d47b788f7e",
    "prId" : 7386,
    "prUrl" : "https://github.com/apache/kafka/pull/7386#pullrequestreview-297180715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Hey @ableegoldman , I think you need to add the missing \"upgrade from\" versions to the `configuredMetadataVersion` method below as well. Otherwise, creating Streams will just throw an exception when you pass (for example) `UPGRCE_FROM_23`.",
        "createdAt" : "2019-10-03T21:32:52Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "654f24d2-0d55-486d-ac0b-8b2be73a8f87",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Oops, thanks yeah good catch! That reminds me I still need to add test that actually configures the assignor using these.",
        "createdAt" : "2019-10-03T21:35:25Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5567f724-1dd4-4608-93ea-4e69030fb5f3",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Also, not sure if it makes sense to have a test that you can actually construct and start Streams with all versions of \"upgrade.from\", which would have caught this.",
        "createdAt" : "2019-10-03T21:47:29Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e8c0f4d9-e328-4f28-81fd-78ac7f5866de",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Well no, I just added a test that uses `UPGRADE_FROM_23` (and one that doesn't)",
        "createdAt" : "2019-10-03T21:55:11Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "5d18d52d-1fc2-4010-9ab1-5d17fe675bda",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Which would have caught that. I'm wondering if it actually makes more sense to not throw an exception in the `default` and just check beforehand whether its a valid config (ie is it contained in some \"valid config values\" set, which we actually may already have somewhere in `StreamsConfig`?)\r\nIt's not really practical to have to add new `UPGRADE_FROM` versions to an increasing number of places in the code or else get an exception thrown. Some cleanup to think about once this is over",
        "createdAt" : "2019-10-03T21:57:44Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "913d9f6a-0894-4cc5-9d04-b17b3f303301",
        "parentId" : "c40b0302-45b9-418a-8142-d4a449461e0c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Agreed on the cleanup front. The current code makes sense when you just have one usage. As soon as we add a second, we probably need a different strategy. ",
        "createdAt" : "2019-10-03T22:11:57Z",
        "updatedAt" : "2019-10-06T23:53:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f047cd9bea88a4ffc88ce2b4f82946d52202c539",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +155,159 @@        }\n\n        return RebalanceProtocol.COOPERATIVE;\n    }\n"
  },
  {
    "id" : "ea245a21-bcbe-4cd8-89d6-b5307b3fc07f",
    "prId" : 7529,
    "prUrl" : "https://github.com/apache/kafka/pull/7529#pullrequestreview-302949208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d36f7de-167e-4dcd-868f-4dc43c482ef5",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Added for test and thinking this could be useful for users",
        "createdAt" : "2019-10-16T22:07:41Z",
        "updatedAt" : "2019-10-17T02:39:12Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "98a6b581-36bc-4b43-aac9-371769780132",
        "parentId" : "7d36f7de-167e-4dcd-868f-4dc43c482ef5",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm +1 on this: actually I'm thinking it would be nice to make the log message above symmetric, ie something like\r\n`log.info(\"Eager rebalancing enabled now for upgrade from {}.x\", upgradeFrom);`\r\nso we can just grep for \"eager\" or \"cooperative\" to figure out what we're on?",
        "createdAt" : "2019-10-16T22:17:27Z",
        "updatedAt" : "2019-10-17T02:39:12Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "6c99d321-6676-4468-9498-a79f1754f9b9",
        "parentId" : "7d36f7de-167e-4dcd-868f-4dc43c482ef5",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Agreed, but there's already this log statement https://github.com/apache/kafka/blob/trunk/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java#L150\r\n\r\n~Did you mean to change the wording of this one?~ NM I re-read your comment and I get it now.  I'll update the log statement and the system test and push.",
        "createdAt" : "2019-10-16T22:23:14Z",
        "updatedAt" : "2019-10-17T02:39:12Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "dbdb1e5b-e339-4e47-9290-a89cf78cbfda",
        "parentId" : "7d36f7de-167e-4dcd-868f-4dc43c482ef5",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "+1 on @ableegoldman 's suggestion.",
        "createdAt" : "2019-10-17T00:30:15Z",
        "updatedAt" : "2019-10-17T02:39:12Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce2e86b1297c78b52afff364eb8d667dd90b9f95",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +154,158 @@            }\n        }\n        log.info(\"Cooperative rebalancing enabled now\");\n        return RebalanceProtocol.COOPERATIVE;\n    }"
  },
  {
    "id" : "c10d3dad-3754-4faf-a507-313628abec03",
    "prId" : 8282,
    "prUrl" : "https://github.com/apache/kafka/pull/8282#pullrequestreview-375670559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dabab813-f38d-458d-83cf-28671095f716",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please add unit tests for this method (I am aware that there aren't any unit tests for this class).",
        "createdAt" : "2020-03-16T13:56:11Z",
        "updatedAt" : "2020-03-19T01:50:45Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "fb97db78-eabb-4b75-9dff-466b8168a52f",
        "parentId" : "dabab813-f38d-458d-83cf-28671095f716",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "ack",
        "createdAt" : "2020-03-17T00:43:29Z",
        "updatedAt" : "2020-03-19T01:50:45Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddc5cfa0fe78cd363ffaf21cb97ac6a368967506",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +259,263 @@    }\n\n    public AssignmentConfigs getAssignmentConfigs() {\n        return assignmentConfigs;\n    }"
  },
  {
    "id" : "df0e9008-d51b-4b4d-845e-44e3474601d1",
    "prId" : 8409,
    "prUrl" : "https://github.com/apache/kafka/pull/8409#pullrequestreview-389028819",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b02ef38-b764-4096-862f-e1153eff3c89",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Could you please add unit tests for these two methods? I am aware that there isn't even a `AssignorConfigurationTest` class (which makes me a bit sad ;-)). We can add the unit tests for the other methods in a separate PR.",
        "createdAt" : "2020-04-07T12:39:20Z",
        "updatedAt" : "2020-04-08T01:54:58Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "51cf963d8b8817cf7f617356b55fdfe1459a0760",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +190,194 @@    }\n\n    public AtomicLong getNextProbingRebalanceMs(final Map<String, ?> configs) {\n        final Object al = configs.get(InternalConfig.NEXT_PROBING_REBALANCE_MS);\n        if (al == null) {"
  }
]