[
  {
    "id" : "b7c5229e-f9ce-47ba-9432-6579cbf75b2e",
    "prId" : 5521,
    "prUrl" : "https://github.com/apache/kafka/pull/5521#pullrequestreview-147298533",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6a4336c-b415-4a27-a21a-e70f9bcbf2a6",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is to be aligned with KIP-101: found we need to relax it in order to add back the strong typing and remove `unchecked` annotations.",
        "createdAt" : "2018-08-17T17:28:03Z",
        "updatedAt" : "2018-10-01T04:30:31Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1278ae279c9fa20317e55ded8aeb364eab097127",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +29,33 @@public class ProcessorParameters<K, V> {\n\n    private final ProcessorSupplier<? super K, ? super V> processorSupplier;\n    private final String processorName;\n"
  },
  {
    "id" : "080aecfd-3234-4cfb-b24e-48fd03d43f72",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb2a0b9b-5a5c-4ea8-a00e-a521a3b66120",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Converted to the new API.",
        "createdAt" : "2020-08-26T01:42:51Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +31,35 @@ * keep the number of arguments more reasonable.\n */\npublic class ProcessorParameters<KIn, VIn, KOut, VOut> {\n\n    // During the transition to KIP-478, we capture arguments passed from the old API to simplify"
  },
  {
    "id" : "9aab176a-4c80-4ed8-963d-e583f948aad6",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80044dc5-8ab9-4747-bece-7697b19371d1",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The constructor for the old API is still present, and when you call it, we save a direct reference as well as adapting it to the new API. saving a direct reference dramatically simplifies the casts we've internalized below. Once everything is converted, we'll go back to just one reference saved.",
        "createdAt" : "2020-08-26T01:44:29Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +44,48 @@        this.processorSupplier = () -> ProcessorAdapter.adapt(processorSupplier.get());\n        this.processorName = processorName;\n    }\n\n    public ProcessorParameters(final ProcessorSupplier<KIn, VIn, KOut, VOut> processorSupplier,"
  },
  {
    "id" : "60d77986-5cec-4b93-a6d4-e7911fc22366",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-485180318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6244df96-81d5-45ac-982f-d8770f98623c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This replaces a type check that was previously done elsewhere.",
        "createdAt" : "2020-08-26T01:45:14Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "7fd0a734-a679-448b-bb4b-3c44800ffa3c",
        "parentId" : "6244df96-81d5-45ac-982f-d8770f98623c",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Just a minor thought here.  I'm wondering if these `ktableX` methods should go in a separate class, I feel like this is \"leaks\" a little bit. But I don't have a better idea ATM, so maybe we can revisit later.",
        "createdAt" : "2020-09-09T15:04:24Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "1812da90-ffc1-49ca-8e9c-00bcb94c4925",
        "parentId" : "6244df96-81d5-45ac-982f-d8770f98623c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks; yes, let's revisit it after the dust settles from KIP-478. These methods are for the most part temporary, since it's a real pain to do the cast when you have to deal with the current \"dual interface\" state in which processors might be old-style or new-style.\r\n\r\nI have a feeling I'll be able to eliminate these methods completely when I convert the relevant processors to the new API again.",
        "createdAt" : "2020-09-09T16:10:30Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +69,73 @@              ? null\n              : (KTableSource<KIn, VIn>) oldProcessorSupplier;\n    }\n\n    @SuppressWarnings(\"unchecked\")"
  }
]