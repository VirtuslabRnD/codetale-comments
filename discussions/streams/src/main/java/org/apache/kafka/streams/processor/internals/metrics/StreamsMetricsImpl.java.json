[
  {
    "id" : "2c13ca41-ef25-4026-bafe-24745ac485e0",
    "prId" : 4917,
    "prUrl" : "https://github.com/apache/kafka/pull/4917#pullrequestreview-114951786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7535a9-4cbf-43fb-a943-88a48de9ed8f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We previously prefixed this with \"thread.\". Was that necessary?",
        "createdAt" : "2018-04-23T22:08:56Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "606a894d-8b51-4265-be87-f15f4a21f079",
        "parentId" : "0d7535a9-4cbf-43fb-a943-88a48de9ed8f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Probably not, and since sensor names are only used for internal bookkeeping there should be no compatibility issues with the change.",
        "createdAt" : "2018-04-24T21:04:38Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a2e2a113646978725340b1500f491115e3d31",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +72,76 @@                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadName + \".\" + sensorName;\n            final Sensor sensor = metrics.sensor(fullSensorName, recordingLevel, parents);\n            threadLevelSensors.push(fullSensorName);"
  },
  {
    "id" : "3a04d5fb-e73c-458c-ba31-a770a4d9e375",
    "prId" : 4917,
    "prUrl" : "https://github.com/apache/kafka/pull/4917#pullrequestreview-115251604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why not organizing the thread-level sensors as cache-level sensors as well? I.e. `Map<String, Deque<String>> threadLevelSensors = new HashMap<>()` where the string key is just `threadName`, since we will only remove sensors for the whole thread at once.",
        "createdAt" : "2018-04-24T21:04:13Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "59bf990a-d9d6-46f3-b41f-4c0a179e8b6f",
        "parentId" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I started to do it that way, but I realized that right now StreamsMetricsImpl is only created and used in the thread level (its constructor takes a thread name), so that map would only ever have one key. It seemed needless to introduce that extra machinery for thread-level metrics if it's not necessary, and in fact it would be misleading, since it would suggest that the SMI was somehow managing sensors for more than one thread.\r\n\r\nI figured that if, in the future, we wanted to make SMI a singleton for the whole app, we could easily retrofit threadLevelSensor.\r\n\r\nIt might be better as a thread-level class, though, so we don't have to worry about contention.",
        "createdAt" : "2018-04-25T14:12:34Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "82b6d0c9-7c4d-45b2-818a-33791aeae14d",
        "parentId" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Makes sense, we can do that later.",
        "createdAt" : "2018-04-25T16:16:30Z",
        "updatedAt" : "2018-04-26T15:11:25Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a2e2a113646978725340b1500f491115e3d31",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +72,76 @@                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadName + \".\" + sensorName;\n            final Sensor sensor = metrics.sensor(fullSensorName, recordingLevel, parents);\n            threadLevelSensors.push(fullSensorName);"
  },
  {
    "id" : "ece31dd3-19e8-4e13-a6bd-1d08608cda9c",
    "prId" : 5450,
    "prUrl" : "https://github.com/apache/kafka/pull/5450#pullrequestreview-143249942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "826643a8-4b24-468c-9ea0-b94143d2c193",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I've made the following attempts to codify the sensor names:\r\n* moved the delimiters here\r\n* created a method for each level's prefix.\r\n* (re)created methods for the external parent and child sensor names\r\n* namespaced the internal sensors \"internal\" and the external sensors \"external\"",
        "createdAt" : "2018-08-03T16:28:34Z",
        "updatedAt" : "2018-08-03T22:17:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "b590af4726d2e4fc3bf1186676f6f9015388cd3e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +50,54 @@\n    private static final String SENSOR_PREFIX_DELIMITER = \".\";\n    private static final String SENSOR_NAME_DELIMITER = \".s.\";\n\n    public StreamsMetricsImpl(final Metrics metrics, final String threadName) {"
  },
  {
    "id" : "9b580d28-43fd-4fc4-b339-0e6252bd68d1",
    "prId" : 5953,
    "prUrl" : "https://github.com/apache/kafka/pull/5953#pullrequestreview-179054687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "013dfc13-54ae-47c9-be97-57d81797bee1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nice catch!",
        "createdAt" : "2018-11-27T23:06:54Z",
        "updatedAt" : "2018-11-28T21:23:43Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4db2541474143efda6df82e13f2d70bb2bcd0eba",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +407,411 @@        metrics.removeSensor(sensor.name());\n\n        final Sensor parent = parentSensors.remove(sensor);\n        if (parent != null) {\n            metrics.removeSensor(parent.name());"
  },
  {
    "id" : "6c264ece-d6b4-4245-8440-de97b2d77299",
    "prId" : 6631,
    "prUrl" : "https://github.com/apache/kafka/pull/6631#pullrequestreview-230434477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66bb69bd-7eff-45b8-9cf7-0e1c1244e9a2",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "`threadLevelSensor` retrieves a thread-level sensor. If it does not find the sensor with the given name in the registry, it creates the sensor. Furthermore, it keeps track of the created thread-level sensors to be able to remove them in `removeAllThreadLevelSensors()`.",
        "createdAt" : "2019-04-25T02:58:15Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce9250c078e701030e104f75c156a0dbf4634196",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +82,86 @@    public final Sensor threadLevelSensor(final String sensorName,\n                                          final RecordingLevel recordingLevel,\n                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadSensorPrefix() + SENSOR_NAME_DELIMITER + sensorName;"
  },
  {
    "id" : "2bb2a117-705e-4bd7-aad0-d54e1650c932",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-259596634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e87924-3fee-4e96-b92a-5dd64ed4b224",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: line to long (break each parameter in it's own line)",
        "createdAt" : "2019-06-21T17:47:21Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "38fd2e04-1034-4532-ad8c-8ec48e06da7c",
        "parentId" : "e3e87924-3fee-4e96-b92a-5dd64ed4b224",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "The line is exactly 120 characters long as allowed by the coding guidelines. ;-)",
        "createdAt" : "2019-07-02T20:43:17Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "6a65b9d0-3408-4801-9aa9-6862fd705cb0",
        "parentId" : "e3e87924-3fee-4e96-b92a-5dd64ed4b224",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Can we just add https://checkstyle.sourceforge.io/config_sizes.html#LineLength so we never have to have this discussion again? :)",
        "createdAt" : "2019-07-09T15:50:55Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +137,141 @@    }\n\n    public Map<String, String> storeLevelTagMap(final String taskName, final String storeType, final String storeName) {\n        final Map<String, String> tagMap = taskLevelTagMap(taskName);\n        tagMap.put(storeType + \"-\" + STORE_ID_TAG, storeName);"
  },
  {
    "id" : "71f09c83-323e-4698-a8dc-f213df58d26c",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-259702335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e2add7-ec86-446c-8565-06db824d9979",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "In `threadLevelTagMap(String...)` there is a check:\r\n```\r\n        if (tags != null) {\r\n            if ((tags.length % 2) != 0) {\r\n                throw new IllegalArgumentException(\"Tags needs to be specified in key-value pairs\");\r\n            }\r\n```\r\n\r\nShould we do the same here",
        "createdAt" : "2019-06-21T17:49:28Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "bf6bc989-cc3f-4bc8-b0b3-13d45deb7379",
        "parentId" : "23e2add7-ec86-446c-8565-06db824d9979",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I am not sure I can follow. We do not have a parameter `String... tags` here. What should we check?",
        "createdAt" : "2019-07-02T20:41:03Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ed54857c-4668-4741-9abf-d81e48c44263",
        "parentId" : "23e2add7-ec86-446c-8565-06db824d9979",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Actually, I'm not sure what's going on with `threadLevelTagMap(String...)`. \r\n\r\nIt has exactly one usage, which is `streamsMetrics.threadLevelTagMap(TASK_ID_TAG, ALL_TASKS)` which seems to be doing exactly the same thing this method is doing. \r\n\r\nMaybe we can just get rid of  `threadLevelTagMap(String...)` and migrate the usage to this method?",
        "createdAt" : "2019-07-09T15:48:59Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "bec5b35e-29be-470d-bb88-d1cfe784736d",
        "parentId" : "23e2add7-ec86-446c-8565-06db824d9979",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "`streamsMetrics.threadLevelTagMap(TASK_ID_TAG, ALL_TASKS)` is used for a parent sensor that will be removed as part of KIP-444. When the that sensor will be removed also `streamsMetrics.threadLevelTagMap(TASK_ID_TAG, ALL_TASKS)` and the corresponding method will disappear. I would like to leave it for the future PR, since that code is not touched in this PR. ",
        "createdAt" : "2019-07-09T19:06:05Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +132,136 @@\n    public Map<String, String> taskLevelTagMap(final String taskName) {\n        final Map<String, String> tagMap = threadLevelTagMap();\n        tagMap.put(TASK_ID_TAG, taskName);\n        return tagMap;"
  },
  {
    "id" : "3e8b2086-375b-4dc4-b227-c6eccd147274",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-257137630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30b5be92-d54c-4291-a50f-dd256113c4b6",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above",
        "createdAt" : "2019-06-21T17:49:59Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a057d5a2-4917-482a-9341-86695922f18e",
        "parentId" : "30b5be92-d54c-4291-a50f-dd256113c4b6",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "As above",
        "createdAt" : "2019-07-02T20:43:29Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +138,142 @@\n    public Map<String, String> storeLevelTagMap(final String taskName, final String storeType, final String storeName) {\n        final Map<String, String> tagMap = taskLevelTagMap(taskName);\n        tagMap.put(storeType + \"-\" + STORE_ID_TAG, storeName);\n        return tagMap;"
  },
  {
    "id" : "99a270b8-9575-4eb6-98df-58adf762a400",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-253702253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02034030-c9e4-464f-a62b-f2190f31ea5c",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "should it be called `store-id` then?",
        "createdAt" : "2019-06-24T15:47:24Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "4c9d5e9a-2d36-4153-aaa4-5edaadf96b6e",
        "parentId" : "02034030-c9e4-464f-a62b-f2190f31ea5c",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is to be consistent with existing state store-level ids.",
        "createdAt" : "2019-06-24T23:09:43Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +58,62 @@    public static final String THREAD_ID_TAG = \"client-id\";\n    public static final String TASK_ID_TAG = \"task-id\";\n    public static final String STORE_ID_TAG = \"state-id\";\n\n    public static final String ALL_TASKS = \"all\";"
  },
  {
    "id" : "07180fd7-2663-43d2-9be7-a21cebbe8b5e",
    "prId" : 7209,
    "prUrl" : "https://github.com/apache/kafka/pull/7209#pullrequestreview-279886112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aea84fe9-d042-4736-9ddb-d502b498595d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Maybe it's better to remove the `-state` from all the metrics scope (we have about 6 of them, like `rocksdb-window-state` to `rocksdb-window`) and retain it here? It's easier to maintain tag name consistency.",
        "createdAt" : "2019-08-19T17:53:49Z",
        "updatedAt" : "2019-08-26T11:09:34Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "c260a754-0066-40e8-af16-ba0c65a4dcbf",
        "parentId" : "aea84fe9-d042-4736-9ddb-d502b498595d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I had the same thought, but I did not want to pollute this PR too much. I have already a commit based on this PR that fixes this. I will open a PR with it once this PR is merged.",
        "createdAt" : "2019-08-22T14:36:15Z",
        "updatedAt" : "2019-08-26T11:09:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "4bca700e-1fde-4128-bb0d-91dbd8918081",
        "parentId" : "aea84fe9-d042-4736-9ddb-d502b498595d",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "ack",
        "createdAt" : "2019-08-26T23:21:21Z",
        "updatedAt" : "2019-08-26T23:21:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "347191422f0bdce0112e46b0df597b41245d4861",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +58,62 @@    public static final String THREAD_ID_TAG = \"client-id\";\n    public static final String TASK_ID_TAG = \"task-id\";\n    public static final String STORE_ID_TAG = \"id\";\n\n    public static final String ALL_TASKS = \"all\";"
  },
  {
    "id" : "06483775-4958-46d4-9659-28951e0ee905",
    "prId" : 7367,
    "prUrl" : "https://github.com/apache/kafka/pull/7367#pullrequestreview-291283722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "571499eb-17ba-41f4-a23f-1c19b1b49d8d",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "should this have a check similar to https://github.com/apache/kafka/pull/7367/files#diff-8b364ed2d0abd8e8ae21f5d322db6564R269-R272 to determine if `THREAD_ID_TAG` or `THREAD_ID_TAG_0100_TO_23` should be the key?",
        "createdAt" : "2019-09-20T01:07:24Z",
        "updatedAt" : "2019-09-20T22:24:31Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "1f3d920c-b965-4ffc-9797-d20e87f635f5",
        "parentId" : "571499eb-17ba-41f4-a23f-1c19b1b49d8d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "No, because this is on thread level. This will be done in another PR.",
        "createdAt" : "2019-09-20T17:35:05Z",
        "updatedAt" : "2019-09-20T22:24:31Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "41aa4c99a39bea101dc54b311bf5755b487cccaa",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +140,144 @@    public Map<String, String> threadLevelTagMap() {\n        final Map<String, String> tagMap = new LinkedHashMap<>();\n        tagMap.put(THREAD_ID_TAG_0100_TO_23, threadName);\n        return tagMap;\n    }"
  },
  {
    "id" : "294f7723-980e-4149-b37d-9399f1c78fe9",
    "prId" : 7367,
    "prUrl" : "https://github.com/apache/kafka/pull/7367#pullrequestreview-291411714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "746388d1-fc5c-4f4e-8858-25a66baf392d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This can be private?",
        "createdAt" : "2019-09-20T20:40:27Z",
        "updatedAt" : "2019-09-20T22:24:31Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "7dc319c6-b5ac-4184-bb38-68785dcaeb21",
        "parentId" : "746388d1-fc5c-4f4e-8858-25a66baf392d",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Yep! Done!",
        "createdAt" : "2019-09-20T21:51:34Z",
        "updatedAt" : "2019-09-20T22:24:31Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "41aa4c99a39bea101dc54b311bf5755b487cccaa",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +469,473 @@    }\n\n    public static void addAvgAndMaxToSensor(final Sensor sensor,\n                                            final String group,\n                                            final Map<String, String> tags,"
  },
  {
    "id" : "17c17f4f-2d8a-4aa5-873a-44ff944be118",
    "prId" : 7416,
    "prUrl" : "https://github.com/apache/kafka/pull/7416#pullrequestreview-297115060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee832e79-9d0e-4bc6-8a49-b9f4580e8849",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Can we rely on `ImmutableValue` from o.a.k.common?",
        "createdAt" : "2019-10-02T22:08:22Z",
        "updatedAt" : "2019-10-04T08:23:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "97c34050-e1ee-4a01-a9aa-25c1da65480b",
        "parentId" : "ee832e79-9d0e-4bc6-8a49-b9f4580e8849",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "`ImmutableMetricValue` is basically a copy of `ImmutableValue`. `ImmutableValue` in `o.a.k.common` is package private and within `AppInfoParser`. Additionally, I needed to add `hashCode()` and `equals()` for testing purposes. What we can do after the release is refactoring the `ImmutableValue` in common and use it in streams.",
        "createdAt" : "2019-10-03T17:14:42Z",
        "updatedAt" : "2019-10-04T08:23:54Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "66d99e46-2bc5-422d-855b-2122faacf718",
        "parentId" : "ee832e79-9d0e-4bc6-8a49-b9f4580e8849",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "SG.",
        "createdAt" : "2019-10-03T19:59:13Z",
        "updatedAt" : "2019-10-04T08:23:54Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab3c0436cf659dd6f76b2b6b5360d327bad385bb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +54,58 @@    }\n\n    static class ImmutableMetricValue<T> implements Gauge<T> {\n        private final T value;\n"
  },
  {
    "id" : "6022d798-dbfa-478c-afa2-3788b0b5e945",
    "prId" : 7459,
    "prUrl" : "https://github.com/apache/kafka/pull/7459#pullrequestreview-298308204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4baab91b-51d3-43b0-b74e-a2cc2de9c207",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think we can remove this line since it would be permanent for 2.4 right?",
        "createdAt" : "2019-10-07T17:47:07Z",
        "updatedAt" : "2019-10-07T17:47:22Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "10da412a-dcc3-49e3-a61e-78fefdc33850",
        "parentId" : "4baab91b-51d3-43b0-b74e-a2cc2de9c207",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Yes, you are right!\r\n",
        "createdAt" : "2019-10-07T17:59:55Z",
        "updatedAt" : "2019-10-07T17:59:55Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "81ba82f36862a22713c049014c144dcfe070f545",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@    }\n\n    // Temporarily moved from StreamsConfig to here to hide the built-in metrics version config\n    /**\n     * Config value for parameter {@link #BUILT_IN_METRICS_VERSION_CONFIG \"built.in.metrics.version\"} for built-in metrics from version 0.10.0. to 2.3"
  },
  {
    "id" : "1fe7d28c-ce44-44c1-a6f3-bc64a9b283ea",
    "prId" : 7474,
    "prUrl" : "https://github.com/apache/kafka/pull/7474#pullrequestreview-299648856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5bc6bc9-e9d8-40b1-bd64-3936c4b6628a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why reorder the rate / total metrics here?",
        "createdAt" : "2019-10-09T18:06:44Z",
        "updatedAt" : "2019-10-18T14:55:41Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "673421ee-259e-4198-95bb-47ac6d052d3c",
        "parentId" : "b5bc6bc9-e9d8-40b1-bd64-3936c4b6628a",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "To be consistent with the order of the metrics in the name of the method. ",
        "createdAt" : "2019-10-09T18:42:35Z",
        "updatedAt" : "2019-10-18T14:55:41Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "8e2fd0cd-6ade-4997-b14f-716f48eb5604",
        "parentId" : "b5bc6bc9-e9d8-40b1-bd64-3936c4b6628a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "SG.",
        "createdAt" : "2019-10-09T19:36:31Z",
        "updatedAt" : "2019-10-18T14:55:41Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "021a1c89fa4ca06714a05a6e388d75bf5fded2a7",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +662,666 @@                                                         final Map<String, String> tags,\n                                                         final String operation,\n                                                         final String descriptionOfRate,\n                                                         final String descriptionOfInvocation) {\n        sensor.add("
  },
  {
    "id" : "a28f8cd0-e717-4e85-840e-f1065f2f9efc",
    "prId" : 7584,
    "prUrl" : "https://github.com/apache/kafka/pull/7584#pullrequestreview-305842352",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af7e9296-f450-473a-8c83-d8fc001fd436",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Corrected mistake in naming.",
        "createdAt" : "2019-10-23T12:16:09Z",
        "updatedAt" : "2019-10-29T13:41:57Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5cd569c4b66c0af071eaf7b914f5e1413c34ca8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +53,57 @@    public enum Version {\n        LATEST,\n        FROM_0100_TO_24\n    }\n"
  }
]