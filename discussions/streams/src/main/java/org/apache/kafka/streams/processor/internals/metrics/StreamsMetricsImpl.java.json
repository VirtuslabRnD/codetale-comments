[
  {
    "id" : "2c13ca41-ef25-4026-bafe-24745ac485e0",
    "prId" : 4917,
    "prUrl" : "https://github.com/apache/kafka/pull/4917#pullrequestreview-114951786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d7535a9-4cbf-43fb-a943-88a48de9ed8f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We previously prefixed this with \"thread.\". Was that necessary?",
        "createdAt" : "2018-04-23T22:08:56Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "606a894d-8b51-4265-be87-f15f4a21f079",
        "parentId" : "0d7535a9-4cbf-43fb-a943-88a48de9ed8f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Probably not, and since sensor names are only used for internal bookkeeping there should be no compatibility issues with the change.",
        "createdAt" : "2018-04-24T21:04:38Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a2e2a113646978725340b1500f491115e3d31",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +72,76 @@                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadName + \".\" + sensorName;\n            final Sensor sensor = metrics.sensor(fullSensorName, recordingLevel, parents);\n            threadLevelSensors.push(fullSensorName);"
  },
  {
    "id" : "3a04d5fb-e73c-458c-ba31-a770a4d9e375",
    "prId" : 4917,
    "prUrl" : "https://github.com/apache/kafka/pull/4917#pullrequestreview-115251604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why not organizing the thread-level sensors as cache-level sensors as well? I.e. `Map<String, Deque<String>> threadLevelSensors = new HashMap<>()` where the string key is just `threadName`, since we will only remove sensors for the whole thread at once.",
        "createdAt" : "2018-04-24T21:04:13Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "59bf990a-d9d6-46f3-b41f-4c0a179e8b6f",
        "parentId" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I started to do it that way, but I realized that right now StreamsMetricsImpl is only created and used in the thread level (its constructor takes a thread name), so that map would only ever have one key. It seemed needless to introduce that extra machinery for thread-level metrics if it's not necessary, and in fact it would be misleading, since it would suggest that the SMI was somehow managing sensors for more than one thread.\r\n\r\nI figured that if, in the future, we wanted to make SMI a singleton for the whole app, we could easily retrofit threadLevelSensor.\r\n\r\nIt might be better as a thread-level class, though, so we don't have to worry about contention.",
        "createdAt" : "2018-04-25T14:12:34Z",
        "updatedAt" : "2018-04-26T15:11:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "82b6d0c9-7c4d-45b2-818a-33791aeae14d",
        "parentId" : "5b160d2c-97d3-4f11-9f80-bbae2b96662a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Makes sense, we can do that later.",
        "createdAt" : "2018-04-25T16:16:30Z",
        "updatedAt" : "2018-04-26T15:11:25Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "613a2e2a113646978725340b1500f491115e3d31",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +72,76 @@                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadName + \".\" + sensorName;\n            final Sensor sensor = metrics.sensor(fullSensorName, recordingLevel, parents);\n            threadLevelSensors.push(fullSensorName);"
  },
  {
    "id" : "ece31dd3-19e8-4e13-a6bd-1d08608cda9c",
    "prId" : 5450,
    "prUrl" : "https://github.com/apache/kafka/pull/5450#pullrequestreview-143249942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "826643a8-4b24-468c-9ea0-b94143d2c193",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I've made the following attempts to codify the sensor names:\r\n* moved the delimiters here\r\n* created a method for each level's prefix.\r\n* (re)created methods for the external parent and child sensor names\r\n* namespaced the internal sensors \"internal\" and the external sensors \"external\"",
        "createdAt" : "2018-08-03T16:28:34Z",
        "updatedAt" : "2018-08-03T22:17:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "b590af4726d2e4fc3bf1186676f6f9015388cd3e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +50,54 @@\n    private static final String SENSOR_PREFIX_DELIMITER = \".\";\n    private static final String SENSOR_NAME_DELIMITER = \".s.\";\n\n    public StreamsMetricsImpl(final Metrics metrics, final String threadName) {"
  },
  {
    "id" : "9b580d28-43fd-4fc4-b339-0e6252bd68d1",
    "prId" : 5953,
    "prUrl" : "https://github.com/apache/kafka/pull/5953#pullrequestreview-179054687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "013dfc13-54ae-47c9-be97-57d81797bee1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nice catch!",
        "createdAt" : "2018-11-27T23:06:54Z",
        "updatedAt" : "2018-11-28T21:23:43Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4db2541474143efda6df82e13f2d70bb2bcd0eba",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +407,411 @@        metrics.removeSensor(sensor.name());\n\n        final Sensor parent = parentSensors.remove(sensor);\n        if (parent != null) {\n            metrics.removeSensor(parent.name());"
  },
  {
    "id" : "6c264ece-d6b4-4245-8440-de97b2d77299",
    "prId" : 6631,
    "prUrl" : "https://github.com/apache/kafka/pull/6631#pullrequestreview-230434477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66bb69bd-7eff-45b8-9cf7-0e1c1244e9a2",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "`threadLevelSensor` retrieves a thread-level sensor. If it does not find the sensor with the given name in the registry, it creates the sensor. Furthermore, it keeps track of the created thread-level sensors to be able to remove them in `removeAllThreadLevelSensors()`.",
        "createdAt" : "2019-04-25T02:58:15Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce9250c078e701030e104f75c156a0dbf4634196",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +82,86 @@    public final Sensor threadLevelSensor(final String sensorName,\n                                          final RecordingLevel recordingLevel,\n                                          final Sensor... parents) {\n        synchronized (threadLevelSensors) {\n            final String fullSensorName = threadSensorPrefix() + SENSOR_NAME_DELIMITER + sensorName;"
  }
]