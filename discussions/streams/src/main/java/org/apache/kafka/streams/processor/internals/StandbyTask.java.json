[
  {
    "id" : "f68f3ea9-299a-48e3-b61f-6bd078c73045",
    "prId" : 4544,
    "prUrl" : "https://github.com/apache/kafka/pull/4544#pullrequestreview-99500042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58f6d2c2-4722-4105-b5f0-3cdbb91e1841",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I am not sure why we need this? Should the unsubscribe/subscribe change not fix the issue? What is the scenario that is not covered by unsubscribe/subscribe that is fixed with `taskClosed` flag?",
        "createdAt" : "2018-02-26T18:31:44Z",
        "updatedAt" : "2018-02-26T22:53:32Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "97ac9805-c2e4-4a6a-b4c2-b3e1a78867c2",
        "parentId" : "58f6d2c2-4722-4105-b5f0-3cdbb91e1841",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Strictly speaking this change is not required for this particular fix itself, but I just want to add some more safety net on the code in case there are other unknown issues. After second thought, what I can do is to change the thrown exception to `IllegalStateException` to let it fail immediately than trying to cover any unknown issues. WDYT?",
        "createdAt" : "2018-02-26T22:41:48Z",
        "updatedAt" : "2018-02-26T22:53:32Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "69b10f34-87ba-4ca8-b497-32cb590b89b2",
        "parentId" : "58f6d2c2-4722-4105-b5f0-3cdbb91e1841",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure. Both approaches have advantages and disadvantages.\r\n\r\nThe proposed change make the code more robust and thus might result in better user experience. However, we might not learn about issues as user might never recognize this log entry and thus never report. (Maybe we should log this as an ERROR and explain in the message that Streams will auto-recover from this, but people should please report that this happened? -- This would at least increase the likelihood to get a report.)\r\n\r\nFor `IllegalStateException` it would be the other way round... Guess it depends on the likelihood of a bug hitting this? If it's rare, failing might be better?\r\n\r\nBut not sure. \\cc @bbejeck @dguy ",
        "createdAt" : "2018-02-26T22:52:13Z",
        "updatedAt" : "2018-02-26T22:53:32Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6066f434-dde9-4ed6-8c50-3077c6c3a0d0",
        "parentId" : "58f6d2c2-4722-4105-b5f0-3cdbb91e1841",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I kept the migration exception while bumping the log to WARN indicating this is not expected to happen in the new commit.",
        "createdAt" : "2018-02-26T22:54:11Z",
        "updatedAt" : "2018-02-26T22:54:12Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c08097b3c0a5a569bf05b1872460a6f282786a12",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +146,150 @@        }\n\n        taskClosed = true;\n    }\n"
  },
  {
    "id" : "658efbee-e64f-448e-ab44-fc06ca8e2e77",
    "prId" : 5428,
    "prUrl" : "https://github.com/apache/kafka/pull/5428#pullrequestreview-153565808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46bc9003-5efb-46a8-953d-7c8bf86782c8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure if I understand this. Why is a commit only required if we did not restore all records that were passed in? Don't we need to commit if we did a restore and updated `lastOffset` ?",
        "createdAt" : "2018-09-06T17:52:03Z",
        "updatedAt" : "2018-09-11T21:32:12Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "1015fa72-e448-42a9-a382-bd79255f347b",
        "parentId" : "46bc9003-5efb-46a8-953d-7c8bf86782c8",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "`!restoreRecords.isEmpty()` means we have non-empty records that are applied inside `stateMgr.updateStandbyStates` call, note it does not remove records that are applied after the call.",
        "createdAt" : "2018-09-07T17:54:27Z",
        "updatedAt" : "2018-09-11T21:32:12Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "ac1b69ee-49a6-4765-8545-c83ad0232e6d",
        "parentId" : "46bc9003-5efb-46a8-953d-7c8bf86782c8",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack. I confused it with `remainingRecords`. All good :)",
        "createdAt" : "2018-09-08T21:53:28Z",
        "updatedAt" : "2018-09-11T21:32:12Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "71b2b16d0b0f37a05af3df60ae9b5ff88649a7a4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +191,195 @@        if (!restoreRecords.isEmpty()) {\n            commitNeeded = true;\n        }\n\n        return remainingRecords;"
  },
  {
    "id" : "fc4eda21-c659-4c22-9b1b-3484cc924f29",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-284928001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3765866c-0c0a-4ec5-9c32-c048348ca0dd",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Nice catch.",
        "createdAt" : "2019-09-05T22:56:19Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1305c550-da81-4d04-8bd0-c1af82966f7e",
        "parentId" : "3765866c-0c0a-4ec5-9c32-c048348ca0dd",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "Thanks! That one was nasty. It caused us to checkpoint at offset 0, so when the standby became active we had to start from scratch.",
        "createdAt" : "2019-09-06T15:11:45Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +202,206 @@\n        if (!restoreRecords.isEmpty()) {\n            stateMgr.updateStandbyStates(partition, restoreRecords, lastOffset);\n            commitNeeded = true;\n        }"
  },
  {
    "id" : "62a16fd4-7500-4f5f-bb40-0e01866ea7dd",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-284929193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46378470-6469-4f77-9d3f-6f068038c57d",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Since we do not initialize the offsetLimits, we would always get Long.MAX_VALUE for the first time right?",
        "createdAt" : "2019-09-05T23:19:08Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "defdc144-435c-4b7f-b204-a6d0a7cba6c1",
        "parentId" : "46378470-6469-4f77-9d3f-6f068038c57d",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "We initialize the offset to 0 for changelog / source partitions in the constructor, here:\r\n\r\nhttps://github.com/apache/kafka/pull/7238/files#diff-7012e86d489a291404d83f961ad40217R73",
        "createdAt" : "2019-09-06T15:13:42Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +179,183 @@\n        log.trace(\"Updating standby replicas of its state store for partition [{}]\", partition);\n        long limit = offsetLimits.getOrDefault(partition, Long.MAX_VALUE);\n\n        long lastOffset = -1L;"
  },
  {
    "id" : "6abf68af-8dac-4297-a1c7-2cec4e6227a2",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-285049057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86bfffd6-e3dc-45ad-8961-7780821559ed",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we move `updateableOffsetLimits.remove(partition);` into `updateOffsetLimits()` ?",
        "createdAt" : "2019-09-06T18:12:45Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "de9f534e-0642-4e8c-8198-0d1745c1b8c9",
        "parentId" : "86bfffd6-e3dc-45ad-8961-7780821559ed",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "Yes, that makes more sense now that we're not removing it in the if stmt.",
        "createdAt" : "2019-09-06T19:08:51Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +190,194 @@            // the offset limit if possible.\n            if (record.offset() >= limit && updateableOffsetLimits.contains(partition)) {\n                limit = updateOffsetLimits(partition);\n            }\n"
  },
  {
    "id" : "3dca4e69-d297-4ca9-a0cd-c563deee0266",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-285058829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "553efb48-f695-40d1-a304-9faf103eb67c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Do we need to update/extend `StandbyTasktTest` ?",
        "createdAt" : "2019-09-06T19:03:12Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "db3aee84-15de-4c18-a13b-ea5993467e1b",
        "parentId" : "553efb48-f695-40d1-a304-9faf103eb67c",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "+1. I think I had some tests for this that I neglected to move over. I'll get those in the next patch.",
        "createdAt" : "2019-09-06T19:31:39Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +37,41 @@ * A StandbyTask\n */\npublic class StandbyTask extends AbstractTask {\n    private Map<TopicPartition, Long> checkpointedOffsets = new HashMap<>();\n    private final Sensor closeTaskSensor;"
  },
  {
    "id" : "f378f5a1-669f-4691-aefe-1c343dbe4f73",
    "prId" : 7463,
    "prUrl" : "https://github.com/apache/kafka/pull/7463#pullrequestreview-299237945",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369f93e3-b8b3-4b0a-8cda-282222490833",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Could we also move this only to the `StreamTask`? Doesn't have to be in this PR. ",
        "createdAt" : "2019-10-08T11:01:08Z",
        "updatedAt" : "2019-10-10T01:02:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "53a349aa-7857-4226-9bd4-c5e5bc74f4a4",
        "parentId" : "369f93e3-b8b3-4b0a-8cda-282222490833",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not really, because we call `initializeTopology()` within `AssignedTasks#transitToRunning(T task)` that does not know the type (it generic `T extends Tasks`) -- hence, we would need to do an `instanceof` call within that method what is undesired.",
        "createdAt" : "2019-10-08T22:41:10Z",
        "updatedAt" : "2019-10-10T01:02:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "11cdd3d7-ea81-467f-a4d5-4f9008085585",
        "parentId" : "369f93e3-b8b3-4b0a-8cda-282222490833",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Oh, I see. I did not think about that dependency. Nevertheless I think somehow it would be possible to move `initializeTopology()` to `StreamsTask` without an `instanceof` but that needs a bit more thoughts and refactoring and it is out-of-scope for this PR.  ",
        "createdAt" : "2019-10-09T08:14:01Z",
        "updatedAt" : "2019-10-10T01:02:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "c47dfc79b0b4a8238e7bdc8707ee9ca32ff324ea",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +94,98 @@\n    @Override\n    public void initializeTopology() {}\n\n    /**"
  },
  {
    "id" : "db0fcce5-c03e-41b0-a626-fc936e63a318",
    "prId" : 7463,
    "prUrl" : "https://github.com/apache/kafka/pull/7463#pullrequestreview-299773986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e50d156-5954-4515-94ad-90915bc3abfd",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "new method",
        "createdAt" : "2019-10-10T01:05:41Z",
        "updatedAt" : "2019-10-10T01:05:42Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c47dfc79b0b4a8238e7bdc8707ee9ca32ff324ea",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +81,85 @@\n    @Override\n    public void initializeMetadata() {}\n\n    @Override"
  }
]