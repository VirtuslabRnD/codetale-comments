[
  {
    "id" : "e78bad17-9480-4526-a7f9-fe099b536609",
    "prId" : 6453,
    "prUrl" : "https://github.com/apache/kafka/pull/6453#pullrequestreview-217392555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "794eb4a6-d517-4e23-b3fe-0faee14bc1f9",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Although the constructor was pre-existing, I'm thinking we could clean things up a little bit by adding a constructor\r\n```java\r\n public TableProcessorNode(final String nodeName,\r\n        final ProcessorParameters<K, V> processorParameters,\r\n        final StoreBuilder<KeyValueStore<K, V>> storeBuilder) {\r\n        \r\n        this(nodeName, processorParameters, null, storeBuilder);\r\n    }\r\n```\r\nThen it's more clear in the code when we call \r\n```java\r\nfinal StreamsGraphNode tableNode = new TableProcessorNode<>(\r\n            name,\r\n            processorParameters,\r\n            storeBuilder\r\n        );\r\n```\r\nAnd we can leave the existing constructor using all 4 parameters alone.",
        "createdAt" : "2019-03-21T18:24:01Z",
        "updatedAt" : "2019-03-28T13:59:34Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bcb12612f780195c27285b030339bcdf4bb64c0",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +30,34 @@    private final String[] storeNames;\n\n    public TableProcessorNode(final String nodeName,\n                              final ProcessorParameters<K, V> processorParameters,\n                              final StoreBuilder<KeyValueStore<K, V>> storeBuilder) {"
  },
  {
    "id" : "56b7b658-42ea-4c18-a7e0-f6bbdda2f48d",
    "prId" : 6453,
    "prUrl" : "https://github.com/apache/kafka/pull/6453#pullrequestreview-220036593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74a175e7-92c6-422d-a8ba-68b64e69c69a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Print `storeBuilder.name()` here as well?",
        "createdAt" : "2019-03-27T17:04:56Z",
        "updatedAt" : "2019-03-28T13:59:34Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1bf187a6-0f40-4285-8862-820cc9317236",
        "parentId" : "74a175e7-92c6-422d-a8ba-68b64e69c69a",
        "authorId" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "body" : "No problem. :)",
        "createdAt" : "2019-03-28T13:59:41Z",
        "updatedAt" : "2019-03-28T13:59:41Z",
        "lastEditedBy" : "462b08c4-4553-46cf-b1cf-8fd3349738fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bcb12612f780195c27285b030339bcdf4bb64c0",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +49,53 @@    public String toString() {\n        return \"TableProcessorNode{\" +\n            \", processorParameters=\" + processorParameters +\n            \", storeBuilder=\" + storeBuilder.name() +\n            \", storeNames=\" + Arrays.toString(storeNames) +"
  },
  {
    "id" : "26dce93f-ab0c-45e9-900c-03ee2076c76e",
    "prId" : 8015,
    "prUrl" : "https://github.com/apache/kafka/pull/8015#pullrequestreview-356969928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fae3aec9-4508-4186-b1b0-843afdcc884f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, I figured out how to implement @mjsax 's suggestion specifically for KTableSource nodes, without affecting all the other kinds of KTable nodes.",
        "createdAt" : "2020-02-08T05:43:12Z",
        "updatedAt" : "2020-02-12T04:28:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8d3b0c34-83ad-427e-ab59-3e7601c144e0",
        "parentId" : "fae3aec9-4508-4186-b1b0-843afdcc884f",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "In retrospect, that might have been what you meant all along. Sorry if I misunderstood.",
        "createdAt" : "2020-02-08T05:54:51Z",
        "updatedAt" : "2020-02-12T04:28:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "9b7be871-aa4e-424f-842a-c44e5389bebb",
        "parentId" : "fae3aec9-4508-4186-b1b0-843afdcc884f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "As a further thought, I think TableProcessorNode should be used for KTableSource as well (today they are only used in filter, map, transformValues and joinForeignKey that results in a KTable), so that we do not need this extra condition. But we can do this cleanup later (our current internal representation has a few such gaps already so some refactoring might be in request in future anyways).",
        "createdAt" : "2020-02-11T17:34:19Z",
        "updatedAt" : "2020-02-12T04:28:08Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "342609d4-4772-4bb0-b811-0526c655155e",
        "parentId" : "fae3aec9-4508-4186-b1b0-843afdcc884f",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I agree with you, and I actually tried to do it at some point. There's a problem with the types because (IIRC) TableProcessorNodes are processors over `Change<V>`, but TableSourceNodes are processors over `<V>`. I wanted to revisit it after KIP-478, but never managed to get around to actually implementing it (yet).",
        "createdAt" : "2020-02-11T20:27:19Z",
        "updatedAt" : "2020-02-12T04:28:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "25b37c9c0e86158aba583ca42ae751d954e981f1",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +73,77 @@                                              processorName);\n            }\n        } else if (storeBuilder != null) {\n            topologyBuilder.addStateStore(storeBuilder, processorName);\n        }"
  },
  {
    "id" : "ca3d3265-3e7a-473a-9b2e-bb4bbf50e24f",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4510970e-2645-424b-ae3f-c577277e0d80",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is the type check that I internalized. Note, it becomes more complicated now that we also have to check whether or not the supplier is an \"old API\" supplier.",
        "createdAt" : "2020-08-26T01:47:31Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +68,72 @@\n        if (processorParameters.kTableSourceSupplier() != null) {\n            if (processorParameters.kTableSourceSupplier().materialized()) {\n                topologyBuilder.addStateStore(Objects.requireNonNull(storeBuilder, \"storeBuilder was null\"),\n                                              processorName);"
  }
]