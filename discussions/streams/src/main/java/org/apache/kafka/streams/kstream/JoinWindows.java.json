[
  {
    "id" : "ae1d455d-cd5d-44ec-9af9-2f6413e8b3e3",
    "prId" : 5682,
    "prUrl" : "https://github.com/apache/kafka/pull/5682#pullrequestreview-160366562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02ce8001-9d42-4b9e-97fd-b2b5d754991c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Add `@throws` to JavaDoc for `IllegalArgumentException`",
        "createdAt" : "2018-09-30T21:11:43Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a42892c1-afe7-4458-9a0a-27a39b779503",
        "parentId" : "02ce8001-9d42-4b9e-97fd-b2b5d754991c",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "Fixed.",
        "createdAt" : "2018-10-01T15:57:09Z",
        "updatedAt" : "2018-10-04T14:34:19Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "5210f9fff117c695cb1f3024c94eff7f49599a6a",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +226,230 @@     */\n    @SuppressWarnings({\"deprecation\"}) // removing segments from Windows will fix this\n    public JoinWindows grace(final Duration afterWindowEnd) throws IllegalArgumentException {\n        ApiUtils.validateMillisecondDuration(afterWindowEnd, \"afterWindowEnd\");\n        if (afterWindowEnd.toMillis() < 0) {"
  },
  {
    "id" : "68d65e65-30ef-4a23-a995-ecb4021ab890",
    "prId" : 5954,
    "prUrl" : "https://github.com/apache/kafka/pull/5954#pullrequestreview-179088237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6d5e245-a30b-448b-817c-d1a2c5499c92",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This might be controversial. I change it, to reuse the return type of `ApiUtils.validateMillisecondDuration`. (Similar in other XxxWindows classes).\r\n\r\nThoughts? ",
        "createdAt" : "2018-11-27T23:14:20Z",
        "updatedAt" : "2018-12-11T09:51:36Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "63f8f201-41fa-4098-8973-a7c442444c31",
        "parentId" : "f6d5e245-a30b-448b-817c-d1a2c5499c92",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "It is fine to me.",
        "createdAt" : "2018-11-28T01:28:21Z",
        "updatedAt" : "2018-12-11T09:51:36Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c692fa9804850c0cdd372d825db005bf3851f8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +78,82 @@    public final long afterMs;\n\n    private final long graceMs;\n\n    private JoinWindows(final long beforeMs,"
  },
  {
    "id" : "3aa83e00-910d-4c67-9802-a128cf528b14",
    "prId" : 6664,
    "prUrl" : "https://github.com/apache/kafka/pull/6664#pullrequestreview-233293681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48c4851-8030-4a8c-a241-0f26eb3e9872",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "But grace and retention are two different things.\r\n\r\nIn fact, I just had another conversation about this issue, and it seem we need to fix this by allowing people to specify  a retention time IMHO. Not sure if we need to add a `Materialized` parameter or add `Joined#withRetention()` that we use to specify serdes etc.",
        "createdAt" : "2019-05-02T13:42:59Z",
        "updatedAt" : "2019-05-02T13:45:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "1c11eecc-0df7-4e96-83f2-b31bc27251e1",
        "parentId" : "b48c4851-8030-4a8c-a241-0f26eb3e9872",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks, @mjsax . I think the ticket author is the same person you were talking with. He (later on) included a snippet of a chat with you.\r\n\r\nI think join windows are a little confusing because we tried to share the logic of windowed aggregations, but it's actually different.\r\n\r\nFor windowed aggregation, grace period defines how long after the window ends it will accept late-arriving records and update the results. The retention time defines how long we keep the state of the window in storage. Clearly, the retention time must be at least big enough to support the updates that may happen during the grace period, but it could be much larger, to support Interactive Queries even after the window is closed to updates.\r\n\r\nJoin windows are a little bit different, because they are not queriable. Therefore, there is no reason to have any retention beyond the grace period. This is also why there's no `Materialized` parameter. The state for the join is purely bookeeping, not a \"materialized view\" in the data processing sense.",
        "createdAt" : "2019-05-02T20:23:16Z",
        "updatedAt" : "2019-05-02T20:23:16Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "ee613c0c-79ba-48ea-9fb5-005ee73086e3",
        "parentId" : "b48c4851-8030-4a8c-a241-0f26eb3e9872",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "The report included the additional issue, that the `gracePeriod()` and neither deprecated `until()` is forwarded as changelog configuration though. Can we include a fix for this on this ticket?",
        "createdAt" : "2019-05-02T20:43:24Z",
        "updatedAt" : "2019-05-02T20:43:24Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7d53b4f4-6a0d-45f0-9284-ca9c9d07cb1d",
        "parentId" : "b48c4851-8030-4a8c-a241-0f26eb3e9872",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "If grace period isn't specified, then we should be forwarding the `until` aka `maintainMs` through. In his case, though, he was specifying grace period, so we were using it.\r\n\r\nI think his bug report is partly based on a flawed understanding of what he should expect to see, but it's possible there's a real bug somewhere. I'm waiting to see what he says next.",
        "createdAt" : "2019-05-02T21:04:00Z",
        "updatedAt" : "2019-05-02T21:04:00Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "ae55d3e7-cd28-4b5f-a1f2-6ac650f0be58",
        "parentId" : "b48c4851-8030-4a8c-a241-0f26eb3e9872",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I agree that for JoinWindows it is not necessary to let users specify retention since the underlying stores would not be queryable at all.\r\n\r\nAnd with `until` specified, the retention of the store, as well as the total \"joinable\" processing period, should be join-window + grace-period.",
        "createdAt" : "2019-05-03T00:33:16Z",
        "updatedAt" : "2019-05-03T00:33:17Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b2b4ae4a70e0f66adda62cccc21c438c488ea0e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +247,251 @@     * @return itself\n     * @throws IllegalArgumentException if {@code durationMs} is smaller than the window size\n     * @deprecated since 2.1. Use {@link JoinWindows#grace(Duration)} instead.\n     */\n    @Override"
  },
  {
    "id" : "29394704-973a-4d9c-971e-73e33cb0d972",
    "prId" : 7274,
    "prUrl" : "https://github.com/apache/kafka/pull/7274#pullrequestreview-283713478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62e7ffd4-4db8-4591-b122-111d33be2282",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is now defining a term that is unused elsewhere. We can either define the term we use (\"out-of-ordered-ness\" is defined as...\") or we can use the term we define (above: \"Reject out-of-order events that are delayed more than...\").",
        "createdAt" : "2019-09-04T15:48:23Z",
        "updatedAt" : "2019-09-20T01:27:15Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "94a8469159b893129a8d2420b8283f52d7954143",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +219,223 @@     * after the end of its window.\n     * <p>\n     * Delay is defined as (stream_time - record_timestamp).\n     *\n     * @param afterWindowEnd The grace period to admit out-of-order events to a window."
  },
  {
    "id" : "9d91b98e-bdc4-4bdc-888e-7d69148fd6b1",
    "prId" : 10861,
    "prUrl" : "https://github.com/apache/kafka/pull/10861#pullrequestreview-684404074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67fd46b1-17d6-47b3-b5ca-ece4879bdc1a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This is the new flag. We set it to `false` if the old methods are used, and to `true` for the new methods from KIP-633.",
        "createdAt" : "2021-06-10T09:50:28Z",
        "updatedAt" : "2021-06-10T10:08:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9c598ae1-5420-4381-b148-797ec807faac",
        "parentId" : "67fd46b1-17d6-47b3-b5ca-ece4879bdc1a",
        "authorId" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "body" : "Thanks for adding this note. This summary is very helpful to me in my implementation.",
        "createdAt" : "2021-06-15T19:24:20Z",
        "updatedAt" : "2021-06-15T19:24:20Z",
        "lastEditedBy" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad2fe801497ebb301f354af0a48cae6a905722b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +77,81 @@    private final long graceMs;\n\n    protected final boolean enableSpuriousResultFix;\n\n    protected JoinWindows(final JoinWindows joinWindows) {"
  },
  {
    "id" : "f18195c2-f9c6-4a9e-af93-195b926d3491",
    "prId" : 10861,
    "prUrl" : "https://github.com/apache/kafka/pull/10861#pullrequestreview-680578337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7b2daca-8a25-49a6-b0f2-8080c229b936",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Need to change this to be able to add an `JoinWindowsInternal` to access the newly added flag.",
        "createdAt" : "2021-06-10T09:51:00Z",
        "updatedAt" : "2021-06-10T10:08:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad2fe801497ebb301f354af0a48cae6a905722b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +68,72 @@ * @see TimestampExtractor\n */\npublic class JoinWindows extends Windows<Window> {\n\n    /** Maximum time difference for tuples that are before the join tuple. */"
  },
  {
    "id" : "cc56102c-7eae-4542-aae7-6e4bd61d5e04",
    "prId" : 10861,
    "prUrl" : "https://github.com/apache/kafka/pull/10861#pullrequestreview-680578337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6b24bcf-7937-4ae4-9282-3e24361f7d71",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Kept the overlap with KIP-633 PR to a minimum. The key is, that this and the method below must set the new flag to `true`.",
        "createdAt" : "2021-06-10T09:51:42Z",
        "updatedAt" : "2021-06-10T10:08:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad2fe801497ebb301f354af0a48cae6a905722b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +99,103 @@    }\n\n    public static JoinWindows ofTimeDifferenceAndGrace(final Duration timeDifference, final Duration afterWindowEnd) {\n        return new JoinWindows(timeDifference.toMillis(), timeDifference.toMillis(), afterWindowEnd.toMillis(), true);\n    }"
  },
  {
    "id" : "40dfee9e-eca3-43b6-905c-a58721d2240b",
    "prId" : 10861,
    "prUrl" : "https://github.com/apache/kafka/pull/10861#pullrequestreview-684593425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79093643-6aa3-48d3-8e0f-946f024a4564",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Side fix: `before()` resets grace to 24h (not sure why -- seems to be a bug)\r\n\r\nsame for `after()` below.",
        "createdAt" : "2021-06-10T09:52:43Z",
        "updatedAt" : "2021-06-10T10:08:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "797b9ade-3749-4687-af89-66a7b7775edd",
        "parentId" : "79093643-6aa3-48d3-8e0f-946f024a4564",
        "authorId" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "body" : "As per the feedback from @ableegoldman the grace period in the old methods need to stay at 24h. It is in the new methods that we get to specify it as zero.",
        "createdAt" : "2021-06-15T19:25:50Z",
        "updatedAt" : "2021-06-15T19:25:50Z",
        "lastEditedBy" : "aad84cc2-4a70-4d0c-986e-2abd823929da",
        "tags" : [
        ]
      },
      {
        "id" : "cfd129d4-3718-491d-b465-732f937bfd6b",
        "parentId" : "79093643-6aa3-48d3-8e0f-946f024a4564",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Sure. Don't see the connection to this change thought? Note, that `before()` and `after()` are non-static methods, and thus, they should not change/set the grace period. Only the static `of(size)` and non-static `grace()` should change grace period.\r\n```\r\nJoinWindow.of(5000).before(30); // of() will set default of 24h, so no need for before() to reset to 24h, it can just inherit it\r\nJoinWindows.of(5000).grace(40).before(30); // this should leave grace at `40` however, without this fix `before()` would re-set grace to the default of 24h what is incorrect\r\n```",
        "createdAt" : "2021-06-15T23:21:12Z",
        "updatedAt" : "2021-06-16T01:02:06Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad2fe801497ebb301f354af0a48cae6a905722b",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +134,138 @@        final String msgPrefix = prepareMillisCheckFailMsgPrefix(timeDifference, \"timeDifference\");\n        final long timeDifferenceMs = validateMillisecondDuration(timeDifference, msgPrefix);\n        return new JoinWindows(timeDifferenceMs, afterMs, graceMs, enableSpuriousResultFix);\n    }\n"
  },
  {
    "id" : "a8e68c1d-e14c-471d-be44-82e6ab25e72e",
    "prId" : 10861,
    "prUrl" : "https://github.com/apache/kafka/pull/10861#pullrequestreview-683458950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d456b151-23e6-4a71-9ffa-f52b91c6f1c8",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "How about moving this copy-constructor to JoinWindowsInternal?",
        "createdAt" : "2021-06-12T23:58:23Z",
        "updatedAt" : "2021-06-13T00:14:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "c5e6a6f9-642c-4dc7-8201-7d48789574d5",
        "parentId" : "d456b151-23e6-4a71-9ffa-f52b91c6f1c8",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not really possible. Multiple issues:\r\n - we still need a protected constructor in `JoinWindows`\r\n - we need to make `graceMs` protected\r\n - blocker: we need to make the _public_ members `beforeMs` and `afterMs` non-final (and we cannot do this...)",
        "createdAt" : "2021-06-15T00:27:46Z",
        "updatedAt" : "2021-06-15T00:27:47Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dad2fe801497ebb301f354af0a48cae6a905722b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +79,83 @@    protected final boolean enableSpuriousResultFix;\n\n    protected JoinWindows(final JoinWindows joinWindows) {\n        beforeMs = joinWindows.beforeMs;\n        afterMs = joinWindows.afterMs;"
  }
]