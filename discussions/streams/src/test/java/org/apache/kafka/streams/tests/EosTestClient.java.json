[
  {
    "id" : "e5399710-0386-4205-9f0b-e081bffd8619",
    "prId" : 8440,
    "prUrl" : "https://github.com/apache/kafka/pull/8440#pullrequestreview-392469831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "469cd7cd-99fc-4ad1-b06f-7e8afc8e614a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Small side improvement.",
        "createdAt" : "2020-04-07T20:56:22Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "96bb031a-ec88-4050-86ac-e830d6f4a642",
        "parentId" : "469cd7cd-99fc-4ad1-b06f-7e8afc8e614a",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could you elaborate a bit? The comment doesn't seem readable.",
        "createdAt" : "2020-04-08T17:01:28Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "f22b96a4-6dcb-4ff3-8a22-d3eaad2081b8",
        "parentId" : "469cd7cd-99fc-4ad1-b06f-7e8afc8e614a",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Comment says:\r\n```\r\n// increase commit interval to make sure a client is killed having an open transaction\r\n```\r\n\r\nIf we commit with small commit interval, the probability that there is no pending transaction when we kill the instance is high.\r\n\r\nWe delay to start a new transaction until we do the first `send()` and would commit quickly afterwards. If we \"stall\" in between waiting for new data (what is not uncommon in this test) there will be no open tx for some time.\r\n\r\nDuring debugging I did some segment dumps and could not find a single aborted transaction.\r\n\r\nDoes this make sense?",
        "createdAt" : "2020-04-09T00:15:44Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "21f4c876-2505-4c63-9fdb-e8a7ca6a658c",
        "parentId" : "469cd7cd-99fc-4ad1-b06f-7e8afc8e614a",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "kk, I think I get the motivation, but still feels `a client is killed` and `having an open transaction` could not be connected as a full sentence here. Maybe we should call `a killed client`?",
        "createdAt" : "2020-04-13T22:00:13Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "15e0b98ef384c15022ee76e6ca88b325567e31cb",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +104,108 @@        props.put(StreamsConfig.REPLICATION_FACTOR_CONFIG, 3);\n        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n        props.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 5000); // increase commit interval to make sure a client is killed having an open transaction\n        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());"
  },
  {
    "id" : "7c295d35-9137-447c-97bb-278080af8391",
    "prId" : 8679,
    "prUrl" : "https://github.com/apache/kafka/pull/8679#pullrequestreview-413123315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc2c5ef6-9c24-4596-aab5-2a5dadbf0db6",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above. Avoid internal topics.",
        "createdAt" : "2020-05-17T03:05:44Z",
        "updatedAt" : "2020-05-21T21:48:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfcb6a3dce9ea006c43ddc1d502eccb07f879c10",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +134,138 @@        if (withRepartitioning) {\n            data.to(\"repartition\");\n            final KStream<String, Integer> repartitionedData = builder.stream(\"repartition\");\n\n            repartitionedData.process(SmokeTestUtil.printProcessorSupplier(\"repartition\"));"
  }
]