[
  {
    "id" : "d1f1cc5e-2c97-49f3-8a7f-deb3dc0714c6",
    "prId" : 4991,
    "prUrl" : "https://github.com/apache/kafka/pull/4991#pullrequestreview-119150971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f2ab3a8-ee68-400f-aff7-95a60e140506",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: update test name",
        "createdAt" : "2018-05-10T16:21:34Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c606b9188d8a8a458f83ded6bfa55044bc10465",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +377,381 @@\n    @Test\n    public void testNoMessagesSentExceptionFromOverlappingPatterns() throws Exception {\n        final String fMessage = \"fMessage\";\n        final String fooMessage = \"fooMessage\";"
  },
  {
    "id" : "12531448-385d-49bd-9f8b-e408b8abea6a",
    "prId" : 4991,
    "prUrl" : "https://github.com/apache/kafka/pull/4991#pullrequestreview-119236806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03697a63-b1cf-4c9f-b4e8-5991153bf586",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should this line not throw with latest changes to check pattern overlap immediately?",
        "createdAt" : "2018-05-10T16:22:51Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3b682a52-4bed-4ce9-8bbd-aa0f0c41e108",
        "parentId" : "03697a63-b1cf-4c9f-b4e8-5991153bf586",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Note that before and now we only use `topicPattern.pattern().contains(otherPattern.pattern())` as we do not have an easy way to tell directly if two regex may overlap or not. So we still need to rely on runtime `SourceNodeFactory.getTopics` to detect eventually if there is some overlaps.\r\n\r\nThe check here that we moved from runtime is more like a pre-check which is not guaranteed 100 percent.",
        "createdAt" : "2018-05-10T20:33:43Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c606b9188d8a8a458f83ded6bfa55044bc10465",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +386,390 @@        // will be thrown when the processor topology is built.\n        final KStream<String, String> pattern1Stream = builder.stream(Pattern.compile(\"foo.*\"));\n        final KStream<String, String> pattern2Stream = builder.stream(Pattern.compile(\"f.*\"));\n\n        pattern1Stream.to(DEFAULT_OUTPUT_TOPIC, Produced.with(stringSerde, stringSerde));"
  },
  {
    "id" : "6c43c0f4-7492-4221-8d6b-e341ed240445",
    "prId" : 4991,
    "prUrl" : "https://github.com/apache/kafka/pull/4991#pullrequestreview-119535653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2994470-3900-43e9-bafa-0a9f0f2e6958",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `fail()` in next line to make sure we hit the timeout and throw an `AssertionError`",
        "createdAt" : "2018-05-10T16:24:19Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "afe8c48a-96b7-4fdb-a758-9dca7bcd7004",
        "parentId" : "e2994470-3900-43e9-bafa-0a9f0f2e6958",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "`fail()` will also throw an `AssertionError`, right?",
        "createdAt" : "2018-05-10T20:31:04Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b3671443-15d7-4831-890b-272bc9299c88",
        "parentId" : "e2994470-3900-43e9-bafa-0a9f0f2e6958",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Good point -- maybe throw an `new RuntimeException` ? This should not be caught in the `catch()` below. (and add a comment by why cannot use `fail`)",
        "createdAt" : "2018-05-11T17:07:15Z",
        "updatedAt" : "2018-05-11T18:28:02Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "d24dfb94-6e57-4a0c-add1-23287e5df9a5",
        "parentId" : "e2994470-3900-43e9-bafa-0a9f0f2e6958",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack, addressed this comment in a new commit.",
        "createdAt" : "2018-05-11T18:28:15Z",
        "updatedAt" : "2018-05-11T18:28:16Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c606b9188d8a8a458f83ded6bfa55044bc10465",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +410,414 @@        final Properties consumerConfig = TestUtils.consumerConfig(CLUSTER.bootstrapServers(), StringDeserializer.class, StringDeserializer.class);\n        try {\n            IntegrationTestUtils.waitUntilMinKeyValueRecordsReceived(consumerConfig, DEFAULT_OUTPUT_TOPIC, 2, 5000);\n            throw new IllegalStateException(\"This should not happen: an assertion error should have been thrown before this.\");\n        } catch (final AssertionError e) {"
  }
]