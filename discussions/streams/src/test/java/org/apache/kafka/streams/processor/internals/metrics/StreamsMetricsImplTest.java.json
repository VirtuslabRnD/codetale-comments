[
  {
    "id" : "f2492d7e-fe4e-4f19-90fe-b4c520d0b032",
    "prId" : 5953,
    "prUrl" : "https://github.com/apache/kafka/pull/5953#pullrequestreview-179819919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "289ba399-3e97-42c5-ac54-b857e9a57f1a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "What is this used for? Sensor `parent1` and `parent2` should be referring to exactly the same object right?",
        "createdAt" : "2018-11-29T02:08:53Z",
        "updatedAt" : "2018-11-29T02:09:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "422eb80e-b2e3-45cc-bc91-01e529e215d5",
        "parentId" : "289ba399-3e97-42c5-ac54-b857e9a57f1a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "They should be, but in reality the same parent sensor is (re)registered each time a child sensor is created, so I wanted to (idempotently) create a second parent sensor to make sure there's no extra references.",
        "createdAt" : "2018-11-29T14:26:07Z",
        "updatedAt" : "2018-11-29T14:26:08Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "4db2541474143efda6df82e13f2d70bb2bcd0eba",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +107,111 @@        assertThat(registry.metrics().size(), equalTo(numberOfTaskMetrics));\n\n        final Sensor parent2 = metrics.taskLevelSensor(taskName, operation, Sensor.RecordingLevel.DEBUG);\n        addAvgMaxLatency(parent2, PROCESSOR_NODE_METRICS_GROUP, taskTags, operation);\n        addInvocationRateAndCount(parent2, PROCESSOR_NODE_METRICS_GROUP, taskTags, operation);"
  },
  {
    "id" : "a1aee5d3-f121-46fc-8cd3-5bfbbc4838bb",
    "prId" : 5953,
    "prUrl" : "https://github.com/apache/kafka/pull/5953#pullrequestreview-180283331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5679cf6-f4a3-44e0-acdd-2a6d7a0d6ae8",
        "parentId" : null,
        "authorId" : "61d1839e-4bba-4391-aac4-487c97728ef2",
        "body" : "Typo: `testMu[l]tiLevelSensorRemoval() {`",
        "createdAt" : "2018-11-30T14:17:33Z",
        "updatedAt" : "2018-11-30T14:17:33Z",
        "lastEditedBy" : "61d1839e-4bba-4391-aac4-487c97728ef2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4db2541474143efda6df82e13f2d70bb2bcd0eba",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +77,81 @@\n    @Test\n    public void testMutiLevelSensorRemoval() {\n        final Metrics registry = new Metrics();\n        final StreamsMetricsImpl metrics = new StreamsMetricsImpl(registry, \"\");"
  },
  {
    "id" : "94e0bd00-d137-46dd-9302-d6d2ab0f1726",
    "prId" : 6979,
    "prUrl" : "https://github.com/apache/kafka/pull/6979#pullrequestreview-270285531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb444234-c045-45a7-adc7-2bb16593c702",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a meta comment: for SampledStat their recorded values can vary based on the windowing itself, so in unit test it may not always has the `exact` value, i.e. asserting `equalTo(value)` may make this flaky, whereas just testing it is non-zero is sufficient.",
        "createdAt" : "2019-07-19T17:04:51Z",
        "updatedAt" : "2019-07-31T13:08:56Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "3af83d2a-97aa-44d0-9d58-930aed37e31b",
        "parentId" : "eb444234-c045-45a7-adc7-2bb16593c702",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "IIUC, since `SampledStat` metrics do not maintain any clock internally and I use `MockTime` in the unit tests, the values recorded in `SampledStat` should be deterministic. Please, correct me if I am missing anything.",
        "createdAt" : "2019-07-31T11:53:25Z",
        "updatedAt" : "2019-07-31T13:09:06Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "6fa5e457-4b2e-4300-ab76-da3a9c20124d",
        "parentId" : "eb444234-c045-45a7-adc7-2bb16593c702",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "If we are using `MockTime` then it should be fine.",
        "createdAt" : "2019-08-02T16:47:16Z",
        "updatedAt" : "2019-08-02T16:47:16Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e53106914aa3a65b8a8115c1eb3c23d7b875a66f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +244,248 @@    }\n\n    @Test\n    public void shouldGetStoreLevelTagMap() {\n        final String threadName = \"test-thread\";"
  }
]