[
  {
    "id" : "c39cc327-2235-4a36-9131-f3e7317c3c26",
    "prId" : 4976,
    "prUrl" : "https://github.com/apache/kafka/pull/4976#pullrequestreview-118861306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2504671d-eae4-4c2f-aae7-dedc30f109f3",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "the original store is persistent -- but `storeBuilder` is in-memory -- change intended?",
        "createdAt" : "2018-05-09T18:39:22Z",
        "updatedAt" : "2018-05-09T20:23:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "90b4313f-9a73-4518-a148-ff973426a12c",
        "parentId" : "2504671d-eae4-4c2f-aae7-dedc30f109f3",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "For this test it does not matter. I was just reusing the store instance.",
        "createdAt" : "2018-05-09T18:52:36Z",
        "updatedAt" : "2018-05-09T20:23:53Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "03f1d91d0f70370756d275a18bdef4c4b4263011",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +528,532 @@        builder.addSource(null, \"source\", null, null, null, \"topic\");\n        builder.addProcessor(\"processor\", new MockProcessorSupplier(), \"source\");\n        builder.addStateStore(storeBuilder, \"processor\");\n        final Map<Integer, InternalTopologyBuilder.TopicsInfo> topicGroups = builder.topicGroups();\n        final InternalTopologyBuilder.TopicsInfo topicsInfo = topicGroups.values().iterator().next();"
  },
  {
    "id" : "a47d1cb9-b711-485f-8a12-8a3508aadeca",
    "prId" : 5257,
    "prUrl" : "https://github.com/apache/kafka/pull/5257#pullrequestreview-132927515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76a44d03-4abc-4c56-9eb2-a540d043c130",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "in cases like this where we didn't actually care how many segments or what segment interval, I substituted in the new `persistentWindowStore` that doesn't take any of the segment parameters.",
        "createdAt" : "2018-06-28T16:42:50Z",
        "updatedAt" : "2018-06-28T16:42:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "36180ec9e61ef1af0d9d15c173f1358a79b87dfd",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +536,540 @@        builder.addStateStore(\n            Stores.windowStoreBuilder(\n                Stores.persistentWindowStore(\"store\", 30_000L, 10_000L, false),\n                Serdes.String(),\n                Serdes.String()"
  },
  {
    "id" : "adb594ce-8375-400d-8fa1-f3634e53d0e5",
    "prId" : 6511,
    "prUrl" : "https://github.com/apache/kafka/pull/6511#pullrequestreview-222297282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe3ccb0-6a51-4311-87ec-2c215322a987",
        "parentId" : null,
        "authorId" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "body" : "I think this needs to be changed to -1 to fit with what is being set in the properties. At the moment this test fails consistently.",
        "createdAt" : "2019-04-03T12:44:39Z",
        "updatedAt" : "2019-04-03T12:45:06Z",
        "lastEditedBy" : "2f3fbc93-2875-4df0-8f43-329c41f891e4",
        "tags" : [
        ]
      },
      {
        "id" : "ade1bb79-bce8-4226-b3d6-b79b48d25451",
        "parentId" : "ffe3ccb0-6a51-4311-87ec-2c215322a987",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@soenkeliebau That was my bad, I ran than unit test while this change was stashed. Thanks!",
        "createdAt" : "2019-04-03T15:47:20Z",
        "updatedAt" : "2019-04-03T15:47:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc850a75bc915aaa371a4967f4e728318de80656",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +645,649 @@        final Map<String, String> properties = topicConfig.getProperties(Collections.<String, String>emptyMap(), 10000);\n        assertEquals(3, properties.size());\n        assertEquals(String.valueOf(Long.MAX_VALUE), properties.get(TopicConfig.RETENTION_MS_CONFIG));\n        assertEquals(TopicConfig.CLEANUP_POLICY_DELETE, properties.get(TopicConfig.CLEANUP_POLICY_CONFIG));\n        assertEquals(\"appId-foo\", topicConfig.name());"
  }
]