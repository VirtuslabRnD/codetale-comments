[
  {
    "id" : "563316bc-2eb1-4329-b4a9-94cd60459c29",
    "prId" : 8215,
    "prUrl" : "https://github.com/apache/kafka/pull/8215#pullrequestreview-370686467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eedafa3b-1ba4-425c-bb14-8564f1af12c0",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thanks for the added test coverage!!",
        "createdAt" : "2020-03-06T23:35:03Z",
        "updatedAt" : "2020-03-11T00:00:09Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc7e21a4c2388b501616e01da11f047844d34246",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@\n    @Test\n    public void shouldConstructProducerMetricsWithoutEOS() {\n        expect(config.getString(StreamsConfig.APPLICATION_ID_CONFIG)).andReturn(\"appId\");\n        expect(config.getString(StreamsConfig.PROCESSING_GUARANTEE_CONFIG)).andReturn(StreamsConfig.AT_LEAST_ONCE);"
  },
  {
    "id" : "7f7ffc1d-f64f-455e-83b9-48e4d273368f",
    "prId" : 8215,
    "prUrl" : "https://github.com/apache/kafka/pull/8215#pullrequestreview-370791997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "721f3fec-d47a-4667-a08f-24f0709a40e9",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Since we did this, could we also add test for `StandbyTaskCreator` to resolve https://issues.apache.org/jira/browse/KAFKA-9676?",
        "createdAt" : "2020-03-07T16:10:36Z",
        "updatedAt" : "2020-03-11T00:00:09Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "6809a92e-a1a7-45c9-8851-06c974564adc",
        "parentId" : "721f3fec-d47a-4667-a08f-24f0709a40e9",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we add a test for standby?",
        "createdAt" : "2020-03-07T22:16:21Z",
        "updatedAt" : "2020-03-11T00:00:09Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc7e21a4c2388b501616e01da11f047844d34246",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\n@RunWith(EasyMockRunner.class)\npublic class ActiveTaskCreatorTest {\n\n    @Mock(type = MockType.NICE)"
  },
  {
    "id" : "fa2e9425-6fdc-4906-aca6-541b8405e6a5",
    "prId" : 8215,
    "prUrl" : "https://github.com/apache/kafka/pull/8215#pullrequestreview-370795871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b15ade03-d87d-4d56-aff8-c078e17436fc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we use `verify` on mocks for both test cases?",
        "createdAt" : "2020-03-07T22:16:39Z",
        "updatedAt" : "2020-03-11T00:00:09Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "51f0abd8-fe28-442c-b570-0c6912735904",
        "parentId" : "b15ade03-d87d-4d56-aff8-c078e17436fc",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We don't really care what methods get called, do we? We are only interesting in the result of the method call -- if the internal implementation on how we build the metric change, the test should still pass.",
        "createdAt" : "2020-03-08T00:06:59Z",
        "updatedAt" : "2020-03-11T00:00:09Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc7e21a4c2388b501616e01da11f047844d34246",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@\n    @Test\n    public void shouldConstructProducerMetricsWithEOS() {\n        final TaskId taskId = new TaskId(0, 0);\n        final ProcessorTopology topology = mock(ProcessorTopology.class);"
  },
  {
    "id" : "26f2218a-4446-465d-8bc1-ed736e0d05c6",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378696289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b682282-1490-47cd-9eba-eff034737752",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This test should no cover _all_ required tests for `ActiveTaskCreator` and thus addressed  on half of https://issues.apache.org/jira/browse/KAFKA-9676 ",
        "createdAt" : "2020-03-19T20:24:30Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6759a5bc-b0ec-4c1d-b925-da7e36f1c4cc",
        "parentId" : "3b682282-1490-47cd-9eba-eff034737752",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "You mean `now`? :) If yes please feel free to resolve the ticket when you merge this.",
        "createdAt" : "2020-03-20T17:38:47Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "7ab47e13-4d15-4ba7-b65b-7256c12cdf20",
        "parentId" : "3b682282-1490-47cd-9eba-eff034737752",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes, it should _now_ cover all required tests.\r\n\r\nWe still can't resolve KAFAK-9676 afterwards, because `StandbyTaskCreatorTest` is still lacking full test coverage.",
        "createdAt" : "2020-03-20T17:52:56Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\n    @Test\n    public void shouldCreateThreadProducerIfEosDisabled() {\n        createTasks();\n"
  },
  {
    "id" : "e1440d0a-a517-4871-991e-7e216ceed5a6",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378692705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91d77268-4ec0-4ab0-8d53-ed3d7330f375",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Out of curiosity, why do we add two `{}` around the code logic hereï¼Ÿ",
        "createdAt" : "2020-03-20T16:35:01Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "79794ff9-1be1-4891-b554-21efd6f478cf",
        "parentId" : "91d77268-4ec0-4ab0-8d53-ed3d7330f375",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I want to make variable `thrown` \"final\" and also not introduce `thrown2` -- using two blocks allow to use the same name twice and to declare the variable \"final\". It also make it clear that it's basically two independent tests (we could also separate them into two test methods, but we test the same function and thus it seems better to do both cases in one test).",
        "createdAt" : "2020-03-20T17:47:54Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +252,256 @@            assertThat(thrown.getMessage(), is(\"Unknown TaskId: null\"));\n        }\n        {\n            final IllegalStateException thrown = assertThrows(\n                IllegalStateException.class,"
  },
  {
    "id" : "af15ebbd-b957-459c-a6f5-120c48bc1857",
    "prId" : 8331,
    "prUrl" : "https://github.com/apache/kafka/pull/8331#pullrequestreview-384273720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b3a8345-0347-4dd1-baa5-f97c6d0b864a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Adding more checks for this and other tests. Here: verify that we don't call `put(...)` (ie, don't set a `transactional.id`) for the non-eos case",
        "createdAt" : "2020-03-23T02:44:19Z",
        "updatedAt" : "2020-03-30T21:41:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "590d6762-7148-4e27-b96c-dea2ec504e54",
        "parentId" : "4b3a8345-0347-4dd1-baa5-f97c6d0b864a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Sounds great.",
        "createdAt" : "2020-03-30T22:20:55Z",
        "updatedAt" : "2020-03-30T22:27:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c01468233fc24b2deb017a7bdf80dc2c644d92fc",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +105,109 @@\n        assertThat(mockClientSupplier.producers.size(), is(1));\n        verify(mockProducerConfig);\n    }\n"
  },
  {
    "id" : "29c2a9f0-b67b-4a85-a9a0-b59f20ce8960",
    "prId" : 8331,
    "prUrl" : "https://github.com/apache/kafka/pull/8331#pullrequestreview-380549304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5050d67-ae02-41f5-8114-4d6c75665e01",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "For eos-alpha, we set the `transcational.id` for each task",
        "createdAt" : "2020-03-23T02:45:04Z",
        "updatedAt" : "2020-03-30T21:41:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "7f3dfcb2-e0ff-4b23-b224-099b625195a0",
        "parentId" : "a5050d67-ae02-41f5-8114-4d6c75665e01",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Good call, thanks for the improved coverage.",
        "createdAt" : "2020-03-24T18:06:38Z",
        "updatedAt" : "2020-03-30T21:41:00Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c01468233fc24b2deb017a7bdf80dc2c644d92fc",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +206,210 @@        final Map<String, Object> mockProducerConfig = mock(Map.class);\n        expect(mockProducerConfig.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, \"appId-0_0\")).andReturn(null);\n        expect(mockProducerConfig.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, \"appId-0_1\")).andReturn(null);\n        expect(mockProducerConfig.get(ProducerConfig.TRANSACTIONAL_ID_CONFIG))\n            .andReturn(\"appId-0_0\").andReturn(\"appId-0_1\");"
  }
]