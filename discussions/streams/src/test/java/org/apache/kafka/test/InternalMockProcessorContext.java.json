[
  {
    "id" : "c622dacb-0af7-43e2-91af-b5697d2c63b9",
    "prId" : 5369,
    "prUrl" : "https://github.com/apache/kafka/pull/5369#pullrequestreview-143667598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db450a52-92f3-4d6e-a0e5-ff0ceaaa07eb",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is to support the new thing I added to set the current node during Processor init.",
        "createdAt" : "2018-08-06T17:05:32Z",
        "updatedAt" : "2018-08-13T21:59:56Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "366bb5a8f10600baf3b4000238cce9f6a8a6ef7d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +137,141 @@            null,\n            cache);\n        super.setCurrentNode(new ProcessorNode(\"TESTING_NODE\"));\n        this.stateDir = stateDir;\n        this.keySerde = keySerde;"
  },
  {
    "id" : "3b07391b-25ee-4427-90e0-25686e79ea22",
    "prId" : 5710,
    "prUrl" : "https://github.com/apache/kafka/pull/5710#pullrequestreview-159719713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "913d6721-b335-4ed6-8298-33dccda6b980",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "We actually never should have been adapting it to a `BatchingStateRestoreCallback` before casting it to a `StateRestoreListener`.\r\n\r\nThe only reason it worked is that all our implementaitons happen to be `BatchingStateRestoreCallback` already, and the adaptation was therefore a no-op.",
        "createdAt" : "2018-09-28T05:06:15Z",
        "updatedAt" : "2018-09-29T02:36:52Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb44b1306c0fb643cc1df100c6fbea5427706d28",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +306,310 @@\n    public StateRestoreListener getRestoreListener(final String storeName) {\n        return getStateRestoreListener(restoreFuncs.get(storeName));\n    }\n"
  },
  {
    "id" : "fe680c9b-daaa-4984-8a99-bc1b10d51ffc",
    "prId" : 8669,
    "prUrl" : "https://github.com/apache/kafka/pull/8669#pullrequestreview-413759881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8159332-16c6-44e7-bbac-822a6b0a83e3",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "When we merge the InternalMock with MockInternal would this be okay? cc @cadonna ",
        "createdAt" : "2020-05-16T01:02:43Z",
        "updatedAt" : "2020-05-18T16:57:45Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "367e0838-ddbc-4e04-8490-b548fb5b3ae5",
        "parentId" : "d8159332-16c6-44e7-bbac-822a6b0a83e3",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I assumed this would be fine since it's pretty much what happened before (ie users of the context would get the record collector and then call send) but I'd like to get this confirmed",
        "createdAt" : "2020-05-16T01:14:17Z",
        "updatedAt" : "2020-05-18T16:57:45Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "cefcb54a-6242-4ed8-88cc-e445c1c0eccb",
        "parentId" : "d8159332-16c6-44e7-bbac-822a6b0a83e3",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Both, `MockInternalProcessorContext` and `InternalMockProcessorContext` currently implement `RecordCollector.Supplier` (i.e., `recordCollector()`). Of course, once rebased the consolidated mock needs to implement `taskType()` and `logChange()`.\r\nSee also my comment above regarding `KEY_SERIALIZER` and `VALUE_SERIALIZER`.\r\n@guozhangwang did you have anything specific in mind that I did not cover here?   ",
        "createdAt" : "2020-05-18T13:52:14Z",
        "updatedAt" : "2020-05-18T16:57:45Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "ea224134-00ff-4984-b14d-6aab66739348",
        "parentId" : "d8159332-16c6-44e7-bbac-822a6b0a83e3",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "No I do not, just wanting to make sure we do not have any major conflicts when rebasing the other.",
        "createdAt" : "2020-05-18T16:34:45Z",
        "updatedAt" : "2020-05-18T16:57:45Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f807b4f8da716905265a37eb0a2966496781cae4",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +362,366 @@                          final byte[] value,\n                          final long timestamp) {\n        recordCollector().send(\n            storeName + \"-changelog\",\n            key,"
  }
]