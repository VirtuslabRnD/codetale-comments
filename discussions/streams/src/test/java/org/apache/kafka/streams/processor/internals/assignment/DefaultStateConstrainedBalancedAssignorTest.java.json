[
  {
    "id" : "c64ff89e-f8c1-4914-9b3b-2734c292cd6e",
    "prId" : 8262,
    "prUrl" : "https://github.com/apache/kafka/pull/8262#pullrequestreview-376409588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1e372b3-bae7-42f5-9bf5-f5ea1a7ced15",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Nice find!",
        "createdAt" : "2020-03-17T23:34:38Z",
        "updatedAt" : "2020-03-19T22:25:01Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "b35b0ab0e58743b8629fbfaf3db7b07a812bfa23",
    "line" : 502,
    "diffHunk" : "@@ -1,1 +500,504 @@     * the given client is followed by the set of tasks that are not caught-up on the given client does NOT hold.\n     * In fact, in this test, at some point during the execution of the algorithm the assignment for CLIENT_2\n     * contains TASK_34 followed by TASK_23. TASK_23 is caught-up on CLIENT_2 whereas TASK_34 is not.\n     */\n    @Test"
  }
]