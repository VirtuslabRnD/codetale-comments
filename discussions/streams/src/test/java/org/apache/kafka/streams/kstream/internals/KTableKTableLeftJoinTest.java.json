[
  {
    "id" : "b9b23ebe-17fe-4c77-a6fb-aac52dc3953c",
    "prId" : 5433,
    "prUrl" : "https://github.com/apache/kafka/pull/5433#pullrequestreview-195300218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c996c462-29dd-401d-a808-b66f15d97483",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `assertNull(driver.readOutput(output));`",
        "createdAt" : "2018-08-06T21:49:42Z",
        "updatedAt" : "2019-01-23T00:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ff94595c-1aea-4e69-848c-79498cead245",
        "parentId" : "c996c462-29dd-401d-a808-b66f15d97483",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Done",
        "createdAt" : "2019-01-23T00:39:13Z",
        "updatedAt" : "2019-01-23T00:39:13Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d3c6fbfc089c8dca4f994c0d7627ec63a6367d7",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +112,116 @@            assertOutputKeyValue(driver, 1, \"X1+Y1\");\n            assertOutputKeyValue(driver, 2, \"X2+null\");\n            assertOutputKeyValue(driver, 3, \"X3+null\");\n            assertNull(driver.readOutput(output));\n"
  },
  {
    "id" : "e28db6af-a59a-421a-95c0-3280026fdc00",
    "prId" : 5433,
    "prUrl" : "https://github.com/apache/kafka/pull/5433#pullrequestreview-143769657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "feb81ae8-a501-4416-9097-97d37f078871",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `assertNull(driver.readOutput(output));`",
        "createdAt" : "2018-08-06T21:49:46Z",
        "updatedAt" : "2019-01-23T00:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d3c6fbfc089c8dca4f994c0d7627ec63a6367d7",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +122,126 @@            assertOutputKeyValue(driver, 1, \"X1+YY1\");\n            assertOutputKeyValue(driver, 2, \"X2+YY2\");\n            assertOutputKeyValue(driver, 3, \"X3+YY3\");\n            assertNull(driver.readOutput(output));\n"
  },
  {
    "id" : "b51ddeca-6a85-480b-a449-9bb599b22e08",
    "prId" : 5433,
    "prUrl" : "https://github.com/apache/kafka/pull/5433#pullrequestreview-143769657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe32dc71-0d54-41bc-8f18-5e92c863a596",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `assertNull(driver.readOutput(output));`",
        "createdAt" : "2018-08-06T21:49:52Z",
        "updatedAt" : "2019-01-23T00:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d3c6fbfc089c8dca4f994c0d7627ec63a6367d7",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +132,136 @@            assertOutputKeyValue(driver, 1, \"X1+YY1\");\n            assertOutputKeyValue(driver, 2, \"X2+YY2\");\n            assertOutputKeyValue(driver, 3, \"X3+YY3\");\n            assertNull(driver.readOutput(output));\n"
  },
  {
    "id" : "543830c2-7a9f-4fea-ba25-bb1953c33b55",
    "prId" : 5433,
    "prUrl" : "https://github.com/apache/kafka/pull/5433#pullrequestreview-143769657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea0061bf-d9e1-4260-b602-ef04f49782c8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `assertNull(driver.readOutput(output));`",
        "createdAt" : "2018-08-06T21:49:57Z",
        "updatedAt" : "2019-01-23T00:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d3c6fbfc089c8dca4f994c0d7627ec63a6367d7",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +140,144 @@            }\n            assertOutputKeyValue(driver, 0, \"X0+null\");\n            assertOutputKeyValue(driver, 1, \"X1+null\");\n            assertNull(driver.readOutput(output));\n"
  },
  {
    "id" : "0afca5a1-f61d-40e3-b98f-f23bb2aee5b3",
    "prId" : 5433,
    "prUrl" : "https://github.com/apache/kafka/pull/5433#pullrequestreview-143769657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2652ee7e-0f96-45c3-ab41-af689f61b947",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "add `assertNull(driver.readOutput(output));`",
        "createdAt" : "2018-08-06T21:50:02Z",
        "updatedAt" : "2019-01-23T00:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d3c6fbfc089c8dca4f994c0d7627ec63a6367d7",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +150,154 @@            assertOutputKeyValue(driver, 1, \"XX1+null\");\n            assertOutputKeyValue(driver, 2, \"XX2+YY2\");\n            assertOutputKeyValue(driver, 3, \"XX3+YY3\");\n            assertNull(driver.readOutput(output));\n        }"
  },
  {
    "id" : "cfdb5907-1ccc-4f4b-a5c1-c9eb75219abf",
    "prId" : 6292,
    "prUrl" : "https://github.com/apache/kafka/pull/6292#pullrequestreview-205903400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19a9164d-b57e-47f0-9699-18245b1746d4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Huh. Bummer that you have to make it queriable in order to use the in-memory store. I never noticed that before.",
        "createdAt" : "2019-02-19T19:33:59Z",
        "updatedAt" : "2019-02-19T19:34:21Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "52486e8c-9661-4233-b746-49bcdd49afaa",
        "parentId" : "19a9164d-b57e-47f0-9699-18245b1746d4",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think both tables at line 319 and line 321 are materialized anyways even without the `Materialized` object: for 319, the `groupBy` operator would cause its parent to be materialized.",
        "createdAt" : "2019-02-20T16:40:55Z",
        "updatedAt" : "2019-02-20T16:40:55Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1b8e7352-a16c-4780-9529-c1a2b5f12564",
        "parentId" : "19a9164d-b57e-47f0-9699-18245b1746d4",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes. I only added `Materialized.as()` for the operators that materialized in any case (not not alter the test logic).",
        "createdAt" : "2019-02-20T17:42:09Z",
        "updatedAt" : "2019-02-20T17:42:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d13f3043e8b84e623b4342b0a60352a0ad20d415",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +317,321 @@        final Consumed<Long, String> consumed = Consumed.with(Serdes.Long(), Serdes.String());\n        final KTable<Long, String> aggTable = builder\n            .table(agg, consumed, Materialized.as(Stores.inMemoryKeyValueStore(\"agg-base-store\")))\n            .groupBy(KeyValue::new, Grouped.with(Serdes.Long(), Serdes.String()))\n            .reduce("
  }
]