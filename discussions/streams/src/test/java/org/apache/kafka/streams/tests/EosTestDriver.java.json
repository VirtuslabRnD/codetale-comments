[
  {
    "id" : "c237662a-5c41-4b18-a6e7-679d8f151d3b",
    "prId" : 8440,
    "prUrl" : "https://github.com/apache/kafka/pull/8440#pullrequestreview-389490018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b4787db-9001-4194-aa9c-000a06f31da9",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Just increasing the wait time as small side improvement to spin less and reduce the output for debugging.",
        "createdAt" : "2020-04-07T21:05:39Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "15e0b98ef384c15022ee76e6ca88b325567e31cb",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +304,308 @@        boolean allRecordsReceived = false;\n        while (!allRecordsReceived && System.currentTimeMillis() < maxWaitTime) {\n            final ConsumerRecords<byte[], byte[]> receivedRecords = consumer.poll(Duration.ofSeconds(1L));\n\n            for (final ConsumerRecord<byte[], byte[]> record : receivedRecords) {"
  },
  {
    "id" : "49ee0d3b-893b-4139-99cf-e8d3c443b5af",
    "prId" : 8440,
    "prUrl" : "https://github.com/apache/kafka/pull/8440#pullrequestreview-389493152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59a0d17f-0adc-4b76-b486-09bf1403ceb4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "`seekToEnd()` will only reach the end-marker in read-committed mode, if there is no pending transaction.",
        "createdAt" : "2020-04-07T21:10:46Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "15e0b98ef384c15022ee76e6ca88b325567e31cb",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +590,594 @@        final long maxWaitTime = System.currentTimeMillis() + MAX_IDLE_TIME_MS;\n        while (!topicEndOffsets.isEmpty() && System.currentTimeMillis() < maxWaitTime) {\n            consumer.seekToEnd(partitions);\n\n            final Iterator<TopicPartition> iterator = partitions.iterator();"
  },
  {
    "id" : "d179683f-1ec7-4e17-947c-dce814c7fde3",
    "prId" : 8440,
    "prUrl" : "https://github.com/apache/kafka/pull/8440#pullrequestreview-390419745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ff6a759-511a-4dd8-af94-d3c21e5c5fb6",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Does this verification reflect in the actual system test?",
        "createdAt" : "2020-04-08T17:23:55Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "1fbe652c-e990-4e36-87d3-25eb558e393a",
        "parentId" : "5ff6a759-511a-4dd8-af94-d3c21e5c5fb6",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It's a sanity check that we did not loose or duplicate any write.\r\n",
        "createdAt" : "2020-04-09T00:34:09Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "15e0b98ef384c15022ee76e6ca88b325567e31cb",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +137,141 @@\n            // verify offsets\n            for (final Map.Entry<Integer, List<Long>> offsetsOfPartition : offsets.entrySet()) {\n                offsetsOfPartition.getValue().sort(Long::compareTo);\n                for (int i = 0; i < offsetsOfPartition.getValue().size() - 1; ++i) {"
  },
  {
    "id" : "938d0e52-d9cc-4d34-8cdb-9db6a2743e1b",
    "prId" : 8440,
    "prUrl" : "https://github.com/apache/kafka/pull/8440#pullrequestreview-390421278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3332c688-c11f-49f1-9f6d-e223c2d2dc27",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "What does this `sleep` do?",
        "createdAt" : "2020-04-08T17:30:42Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "b8b37ea7-3d42-434a-b0d4-791445f27e03",
        "parentId" : "3332c688-c11f-49f1-9f6d-e223c2d2dc27",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We don't want to \"busy loop\" calling `consumer.position()` -- the tx-timeout is 10 seconds and thus if we update `position()` (that is a broker round trip) once a seconds it seems sufficient.",
        "createdAt" : "2020-04-09T00:39:31Z",
        "updatedAt" : "2020-04-14T23:37:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "15e0b98ef384c15022ee76e6ca88b325567e31cb",
    "line" : 347,
    "diffHunk" : "@@ -1,1 +607,611 @@                }\n            }\n            sleep(1000L);\n        }\n"
  },
  {
    "id" : "a32c3d01-c718-44f7-90cb-cab270f4e3b5",
    "prId" : 8964,
    "prUrl" : "https://github.com/apache/kafka/pull/8964#pullrequestreview-462915283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f13ba82-c34c-428a-9f75-4885c877a49f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should be `break` for this case?",
        "createdAt" : "2020-08-05T23:20:42Z",
        "updatedAt" : "2020-08-11T21:25:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "0670ea71-63d7-4056-bbcb-9a7d5a00a51e",
        "parentId" : "2f13ba82-c34c-428a-9f75-4885c877a49f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "It is failed in fact: we expect the received records is no smaller than the expected record.",
        "createdAt" : "2020-08-06T00:51:58Z",
        "updatedAt" : "2020-08-11T21:25:16Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "7eb6eb58-883a-451b-a905-4a7394f5a820",
        "parentId" : "2f13ba82-c34c-428a-9f75-4885c877a49f",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Sure. The question is, why do we not break the `for` loop? If we run out of` expectedRecord` there does not seem to be a reason to iterator to the end of `receivedRecord` (and assign `exception` over and over again)?",
        "createdAt" : "2020-08-06T22:22:10Z",
        "updatedAt" : "2020-08-11T21:25:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4f2272986357de9c48032d1fd0d9b1482d5a974",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +390,394 @@            for (final ConsumerRecord<byte[], byte[]> receivedRecord : receivedRecordsForPartition) {\n                if (!expectedRecord.hasNext()) {\n                    exception = new RuntimeException(\"Result verification failed for \" + receivedRecord + \" since there's no more expected record\");\n                }\n"
  },
  {
    "id" : "09dc8f4f-0fbf-400e-ae3a-7d6a3bf6908d",
    "prId" : 8964,
    "prUrl" : "https://github.com/apache/kafka/pull/8964#pullrequestreview-462079456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "849d6ad8-787f-41b8-9910-04d610573143",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should be `break` here?",
        "createdAt" : "2020-08-05T23:21:06Z",
        "updatedAt" : "2020-08-11T21:25:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4f2272986357de9c48032d1fd0d9b1482d5a974",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +401,405 @@\n                if (!receivedKey.equals(expectedKey) || receivedValue != expectedValue) {\n                    exception = new RuntimeException(\"Result verification failed for \" + receivedRecord + \" expected <\" + expectedKey + \",\" + expectedValue + \"> but was <\" + receivedKey + \",\" + receivedValue + \">\");\n                }\n            }"
  }
]