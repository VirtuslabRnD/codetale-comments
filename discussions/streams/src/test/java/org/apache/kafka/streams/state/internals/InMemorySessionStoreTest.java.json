[
  {
    "id" : "56de59cc-c6d3-4efa-91ab-62b30dbe32ea",
    "prId" : 6525,
    "prUrl" : "https://github.com/apache/kafka/pull/6525#pullrequestreview-226869228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "missing coverage on:\r\n* expired segments\r\n* retention time\r\n* fetchSession, which doesn't find a session\r\n* fetch",
        "createdAt" : "2019-04-11T23:42:15Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "146829e5-a409-4b4e-86a5-0679bbe1f839",
        "parentId" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Can you clarify:\r\n\r\n1) fetch (both fetch methods have unit tests?)\r\n2) what is the difference testing-wise between expired segments and retention time(technically there are no \"segments\" for this store)? There is a test shouldRemoveExpired()\r\n3) Good thought Re: fetchSession not finding a session. Currently this will cause a NPE, which is true for the equivalent of fetchSession in every store implementation -- none of the other stores test for this. This seems like a bug? I would argue that returning null when finding nothing seems like the appropriate behavior for the underlying stores and the bug is in the deserializing layer, which should check for null before blindly deserializing..WDYT?",
        "createdAt" : "2019-04-12T02:42:09Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "3d5f8e7b-0752-4cd0-ac23-bc4f698af1e1",
        "parentId" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Sure, I was just going by the \"Run InMemorySessionStoreTest with Code Coverage\" feature in IDEA. I don't believe in shooting for 100% coverage or anything, I just mentioned the things that looked like you probably wanted to test.\r\n\r\n1. In `InMemorySessionStore`, lines 186 and 188 (`fetch(final Bytes key)`), and 193 and 195 (`fetch(final Bytes from, final Bytes to)`) are never invoked.\r\n2. I was just referring to `InMemorySessionStore` lines 105 and 106 (during `put`) as expired records.\r\nFor \"retention period\" I meant line 147, where `fetchSession` returns null. But upon second reading, I see that fetchSession might be returning null for several reasons (which illustrates my point about https://github.com/apache/kafka/pull/6525#discussion_r274714946). Regardless, the fall-though case is not covered.\r\n3. Interesting, yeah, it doesn't seem like this should cause an NPE. I see at least one usage in the code where we check the result for null, so apparently, we do expect this to return null some times. It sounds like a bug to me, either because the deserializer should preserve nulls, or because we should skip the deserializer for nulls (both patterns are present in the code).",
        "createdAt" : "2019-04-12T13:00:15Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "274320c7-773d-47f0-8df0-2e1b0372982e",
        "parentId" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "All three of these are actually unrelated to InMemorySessionStore and require some fixes before they can be addressed/properly tested here -- see https://github.com/apache/kafka/pull/6575",
        "createdAt" : "2019-04-13T01:07:05Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "323d2ad3-7537-4f10-8baf-fbad4ede1912",
        "parentId" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks @ableegoldman , are you planning to wait for #6575 to be merged before proceeding with this PR, or just not worry about it right now?",
        "createdAt" : "2019-04-13T15:19:25Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "220e1dbb-58b0-40e5-998b-37523d2c89c8",
        "parentId" : "1ef6ee5f-6a0d-4c35-a2cf-1e11e71d842f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think we should not worry about that here, and add corresponding tests for null fetchSession results in that PR?",
        "createdAt" : "2019-04-15T20:40:39Z",
        "updatedAt" : "2019-04-24T16:45:06Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "13682aaca862c3bc3c99280ee07870ccae89c07f",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@import org.junit.Test;\n\npublic class InMemorySessionStoreTest {\n\n    private static final String STORE_NAME = \"InMemorySessionStore\";"
  }
]