[
  {
    "id" : "31d139af-7032-46e1-9b00-8693c98deb3a",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115690115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaf9a21d-a1d0-462f-894f-29c3157be0a6",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "ditto on removing before/after.",
        "createdAt" : "2018-04-26T19:00:34Z",
        "updatedAt" : "2018-04-26T19:12:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +72,76 @@        }\n        driver = null;\n    }\n\n    @Test"
  },
  {
    "id" : "2d8fe712-3c5b-49df-a745-5942108d1b5a",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115690115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d4b083c-e8df-4601-b420-ba1367b7365f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks for the clarifying comments; does it make sense to verify these as we go, or is that too awkward?",
        "createdAt" : "2018-04-26T19:02:24Z",
        "updatedAt" : "2018-04-26T19:12:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +180,184 @@        }\n\n        // This tick will yield yields the \"-1:2\" result\n        driver.advanceWallClockTime(2);\n        // This tick further advances the clock to 3, which leads to the \"-1:3\" result"
  },
  {
    "id" : "73350935-e7e9-4708-a30b-6a107c05bc2f",
    "prId" : 4908,
    "prUrl" : "https://github.com/apache/kafka/pull/4908#pullrequestreview-115761468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "caff1ce3-21f3-4bf2-99da-3392480028c7",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: as above",
        "createdAt" : "2018-04-26T22:27:57Z",
        "updatedAt" : "2018-05-03T00:48:04Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d630db2abcf24acc30c677323334c0d0900c21a",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +130,134 @@        StreamsBuilder builder = new StreamsBuilder();\n\n        TransformerSupplier<Number, Number, KeyValue<Integer, Integer>> transformerSupplier = new TransformerSupplier<Number, Number, KeyValue<Integer, Integer>>() {\n            public Transformer<Number, Number, KeyValue<Integer, Integer>> get() {\n                return new Transformer<Number, Number, KeyValue<Integer, Integer>>() {"
  },
  {
    "id" : "9bc848d7-71f7-412f-a972-9d22a1a2a974",
    "prId" : 6732,
    "prUrl" : "https://github.com/apache/kafka/pull/6732#pullrequestreview-237467250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c394daab-d51a-44ce-a455-c4e2b3cd1c77",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Re-introducing test logic that had been previously removed (see the lines below that I uncommented).",
        "createdAt" : "2019-05-14T19:55:32Z",
        "updatedAt" : "2019-05-18T03:31:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "71dcd8d00479573cc7a7902d3b27d8b3e33fda21",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +63,67 @@                        timestamp -> context.forward(-1, (int) timestamp)\n                    );\n                }\n\n                @Override"
  },
  {
    "id" : "a1e9413b-f9b0-48b7-8d3c-887f1c26c627",
    "prId" : 6732,
    "prUrl" : "https://github.com/apache/kafka/pull/6732#pullrequestreview-237467250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d17928b9-40d0-4083-9388-586855bc158b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "These two extra results are from the punctuation. You can see that they were previously expected in the commented-out expectation on old line 89.",
        "createdAt" : "2019-05-14T19:57:44Z",
        "updatedAt" : "2019-05-18T03:31:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "71dcd8d00479573cc7a7902d3b27d8b3e33fda21",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +104,108 @@                \"2000:11110 (ts: 500)\",\n                \"-1:2 (ts: 2)\",\n                \"-1:3 (ts: 3)\"\n            };\n"
  },
  {
    "id" : "97c8e05f-4901-446f-ba4d-abed898219e0",
    "prId" : 6732,
    "prUrl" : "https://github.com/apache/kafka/pull/6732#pullrequestreview-237920869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "add835af-b5e5-4154-915f-c87bd86b6132",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we init `expected` first and use its size for assertion on L100?",
        "createdAt" : "2019-05-15T16:00:54Z",
        "updatedAt" : "2019-05-18T03:31:51Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "71dcd8d00479573cc7a7902d3b27d8b3e33fda21",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +98,102 @@            driver.advanceWallClockTime(1);\n\n            final String[] expected = {\n                \"2:10 (ts: 0)\",\n                \"20:110 (ts: 5)\","
  },
  {
    "id" : "945f530b-9b88-46be-87f0-d6012c47de5c",
    "prId" : 9361,
    "prUrl" : "https://github.com/apache/kafka/pull/9361#pullrequestreview-500554881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26201d22-28c3-46f1-8138-30460a8d73b7",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The prior code here was actually relying on a strange effect in which we set the (undefined) processor context's timestamp to the punctuation time. I could preserve that behavior, but it looked like a bug to me.",
        "createdAt" : "2020-10-01T21:03:51Z",
        "updatedAt" : "2020-10-02T15:50:27Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8de75f6f16cf8bdcccbcb1bc1fc0a11dd40c1d1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +62,66 @@                        Duration.ofMillis(1),\n                        PunctuationType.WALL_CLOCK_TIME,\n                        timestamp -> context.forward(-1, (int) timestamp, To.all().withTimestamp(timestamp))\n                    );\n                }"
  }
]