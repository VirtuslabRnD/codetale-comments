[
  {
    "id" : "a673abaa-cdaf-4dbd-a664-35d0071550b1",
    "prId" : 6290,
    "prUrl" : "https://github.com/apache/kafka/pull/6290#pullrequestreview-205871216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0ba21c9-0fd7-43b6-b287-e1da53eef4c4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It looks like this field is never used outside of this class, which also implies that its value is never read. Should we just delete it?",
        "createdAt" : "2019-02-19T19:28:39Z",
        "updatedAt" : "2019-03-06T21:04:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "1c054150-8445-4a97-ba6f-7ee1db7065a8",
        "parentId" : "a0ba21c9-0fd7-43b6-b287-e1da53eef4c4",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "The `NoOpProcessorContext` is contained in `test` package and thus is built to be used in multiple tests. Thus it should be generic IMHO, even if we don't use all available \"features\". Thoughts?",
        "createdAt" : "2019-02-19T19:38:34Z",
        "updatedAt" : "2019-03-06T21:04:18Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ac852438-c150-48e5-b573-4f6e7e77aad8",
        "parentId" : "a0ba21c9-0fd7-43b6-b287-e1da53eef4c4",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I just meant that the `forwardedValues` are being captured but never referenced. Therefore, we don't need to capture them. No need to maintain features in test support classes that no tests use.",
        "createdAt" : "2019-02-20T16:43:55Z",
        "updatedAt" : "2019-03-06T21:04:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b2f3902eddf6b20003ccd8848068578bc6ed524",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +36,40 @@public class NoOpProcessorContext extends AbstractProcessorContext {\n    public boolean initialized;\n    @SuppressWarnings(\"WeakerAccess\")\n    public Map<Object, Object> forwardedValues = new HashMap<>();\n"
  }
]