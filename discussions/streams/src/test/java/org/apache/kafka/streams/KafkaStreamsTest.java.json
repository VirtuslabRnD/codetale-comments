[
  {
    "id" : "a0b66daa-c58e-46d4-a3c6-426a73d4f930",
    "prId" : 5488,
    "prUrl" : "https://github.com/apache/kafka/pull/5488#pullrequestreview-145830144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58626ce9-9edb-40e5-9704-4bdf42eb33a7",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is the config to shorten integration test, ditto elsewhere.",
        "createdAt" : "2018-08-10T22:25:24Z",
        "updatedAt" : "2018-08-15T03:19:02Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "e5326429-aafe-4ede-90c7-a6d15b0b94ce",
        "parentId" : "58626ce9-9edb-40e5-9704-4bdf42eb33a7",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "very nice!",
        "createdAt" : "2018-08-13T20:50:19Z",
        "updatedAt" : "2018-08-15T03:19:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "7550e3eb5eeb926254dc8822bd9ea87502592a93",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +87,91 @@        props.put(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getPath());\n        props.put(StreamsConfig.NUM_STREAM_THREADS_CONFIG, NUM_THREADS);\n        props.put(IntegrationTestUtils.INTERNAL_LEAVE_GROUP_ON_CLOSE, true);\n        streams = new KafkaStreams(builder.build(), props);\n    }"
  },
  {
    "id" : "4ea3025b-a587-4f38-9b15-7040a2ce48b6",
    "prId" : 5618,
    "prUrl" : "https://github.com/apache/kafka/pull/5618#pullrequestreview-153572230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d930cce0-d7dd-40ac-a130-4e8643330935",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ditto here, for this test we can still reuse the shared streams.",
        "createdAt" : "2018-09-07T15:57:06Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "c924487e-c1aa-403d-8610-6cdc4b077add",
        "parentId" : "d930cce0-d7dd-40ac-a130-4e8643330935",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not here. We need to get `oldInitCount = MockMetricsReporter.INIT_COUNT.get();` before we create `new KafkaStreams()` instance.",
        "createdAt" : "2018-09-09T05:54:06Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c072587e1165b53c629304314685ac6e965a3193",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +286,290 @@            assertTrue(\"some reporters should be initialized by calling on construction\", initDiff > 0);\n\n            streams.start();\n            final int oldCloseCount = MockMetricsReporter.CLOSE_COUNT.get();\n            streams.close();"
  },
  {
    "id" : "5174d081-abd3-4f3b-8590-4f1e30ff7fb5",
    "prId" : 5618,
    "prUrl" : "https://github.com/apache/kafka/pull/5618#pullrequestreview-155234061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "187a108b-1b3b-498d-8a48-1dbba33d7494",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Just out of curiosity, how does this differ from the following?\r\n```\r\nassertTrue(streams.close(10, TimeUnit.SECONDS));\r\n``` ",
        "createdAt" : "2018-09-10T17:08:17Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "1826da7b-48a0-4d1f-92c4-34b8fb139daf",
        "parentId" : "187a108b-1b3b-498d-8a48-1dbba33d7494",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure... Seems we could rewrite it. \\cc @guozhangwang @bbejeck WDYT?",
        "createdAt" : "2018-09-11T01:01:40Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "f0084740-3b37-43be-8a3f-2e89ff4dd1ca",
        "parentId" : "187a108b-1b3b-498d-8a48-1dbba33d7494",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "none from what I can see, but I'm not sure it's worth holding up the PR for it.",
        "createdAt" : "2018-09-13T19:21:35Z",
        "updatedAt" : "2018-09-13T19:21:35Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c072587e1165b53c629304314685ac6e965a3193",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +143,147 @@            () -> streams.state() == KafkaStreams.State.NOT_RUNNING,\n            10 * 1000,\n            \"Streams never stopped.\");\n\n        // Ensure that any created clients are closed"
  },
  {
    "id" : "c39aad5f-2df5-45f7-84fa-8dfdfbe5a58f",
    "prId" : 5618,
    "prUrl" : "https://github.com/apache/kafka/pull/5618#pullrequestreview-155229512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff02834d-e1c5-4b41-8ed2-0a8dd00aee9f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The fact that we are having to do this in our tests suggests to me that maybe we should think about making KafkaStreams `AutoCloseable`. Should I go ahead and make a jira for this?",
        "createdAt" : "2018-09-10T17:12:57Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e40d0279-67a2-4ad6-9caa-00050f30b0ec",
        "parentId" : "ff02834d-e1c5-4b41-8ed2-0a8dd00aee9f",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "In general I am in favor to this. \\cc @guozhangwang @bbejeck Thoughts?",
        "createdAt" : "2018-09-11T01:03:21Z",
        "updatedAt" : "2018-09-11T01:05:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "5b07d292-1c96-4597-a1f2-3732a84335fd",
        "parentId" : "ff02834d-e1c5-4b41-8ed2-0a8dd00aee9f",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "+1 for me on `AutoCloseable`",
        "createdAt" : "2018-09-13T19:08:54Z",
        "updatedAt" : "2018-09-13T19:08:54Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c072587e1165b53c629304314685ac6e965a3193",
    "line" : 314,
    "diffHunk" : "@@ -1,1 +270,274 @@            streams.start();\n        } finally {\n            streams.close();\n        }\n        // There's nothing to assert... We're testing that this operation actually completes."
  },
  {
    "id" : "58cb0bad-2ee5-4110-b064-2a5517241d41",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157541165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fc6a39f-cc35-4773-9e0d-5f668170fb47",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Just catching up on this PR. Should we wrap the `close()` into a `finally` block?",
        "createdAt" : "2018-09-21T04:19:50Z",
        "updatedAt" : "2018-09-21T04:28:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +104,108 @@        props.put(CommonClientConfigs.RECEIVE_BUFFER_CONFIG, Selectable.USE_DEFAULT_BUFFER_SIZE);\n        final KafkaStreams streams = new KafkaStreams(builder.build(), props);\n        streams.close();\n    }\n"
  },
  {
    "id" : "6a1e08a1-b6a5-4960-807f-fdd215242242",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157541165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bd13442-5545-43c0-ad73-c712125ef8b4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: naming -> `shouldAcceptDefaultBufferSizes()`\r\n\r\nAlso, I am wondering why we check for default buffer size? The ticket was about the issue, that `-1` was not accepted. Thus, while having this test is ok, we should actually test for `-1` to have a test that covers the reported issue.",
        "createdAt" : "2018-09-21T04:25:21Z",
        "updatedAt" : "2018-09-21T04:28:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +100,104 @@\n    @Test\n    public void testOsDefaultSocketBufferSizes() {\n        props.put(CommonClientConfigs.SEND_BUFFER_CONFIG, Selectable.USE_DEFAULT_BUFFER_SIZE);\n        props.put(CommonClientConfigs.RECEIVE_BUFFER_CONFIG, Selectable.USE_DEFAULT_BUFFER_SIZE);"
  },
  {
    "id" : "4644aba4-3f9c-4a56-9939-739a3d65f383",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157541165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6d69011-d8d7-451a-915f-cf54d84bc097",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If `new KafkaStreams` throws, this line will never be executed (same below). Also, `streams` will not have any object assigned. Thus, we cannot even close anything, as the object was never created -- I think we can remove this line and also remove the variable `streams`.",
        "createdAt" : "2018-09-21T04:25:38Z",
        "updatedAt" : "2018-09-21T04:28:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +111,115 @@        props.put(CommonClientConfigs.SEND_BUFFER_CONFIG, -2);\n        final KafkaStreams streams = new KafkaStreams(builder.build(), props);\n        streams.close();\n    }\n"
  },
  {
    "id" : "f0699ca2-adb0-40f0-8459-64bffd1bbca4",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157541165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a56e3a2-5e90-4383-ad90-c0a603388083",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: -> `shouldThrowForInvalidSocketSendBufferSize()`",
        "createdAt" : "2018-09-21T04:26:08Z",
        "updatedAt" : "2018-09-21T04:28:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    @Test(expected = KafkaException.class)\n    public void testInvalidSocketSendBufferSize() {\n        props.put(CommonClientConfigs.SEND_BUFFER_CONFIG, -2);\n        final KafkaStreams streams = new KafkaStreams(builder.build(), props);"
  },
  {
    "id" : "4420e014-a0bb-47a3-b0aa-38b175b0980e",
    "prId" : 5643,
    "prUrl" : "https://github.com/apache/kafka/pull/5643#pullrequestreview-157541165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acf29b2d-32c1-4390-9721-6a2125badc00",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: -> `shouldThrowForInvalidSocketReceiveBufferSize()`",
        "createdAt" : "2018-09-21T04:26:19Z",
        "updatedAt" : "2018-09-21T04:28:26Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ead236f3a3f3405fecf70d8bd150bee553673c3d",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +115,119 @@\n    @Test(expected = KafkaException.class)\n    public void testInvalidSocketReceiveBufferSize() {\n        props.put(CommonClientConfigs.RECEIVE_BUFFER_CONFIG, -2);\n        final KafkaStreams streams = new KafkaStreams(builder.build(), props);"
  },
  {
    "id" : "7ecbd657-963f-4421-9a38-a80acebaf4ab",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-172240851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81392466-1ff6-4abf-9baa-f693b1d29e3b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Thanks for the cleanup!",
        "createdAt" : "2018-11-06T21:32:07Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +144,148 @@\n        Assert.assertEquals(KafkaStreams.State.CREATED, globalStreams.state());\n        Assert.assertEquals(0, stateListener.numChanges);\n\n        globalStreams.start();"
  },
  {
    "id" : "07fa0cb1-ccf2-40b0-b9e0-2d398b73257f",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-172328363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb23c09-6ea6-4e65-90e8-5f2709da6f9c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Isn't this case covered by `statelessPAPITopologyShouldNotCreateStateDirectory` ? DSL compiles down into a Topology anyway.\r\n\r\nSimilar below.",
        "createdAt" : "2018-11-06T21:37:08Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "5bdc3f49-4a56-4ac6-bf9a-8c1867359fbe",
        "parentId" : "ccb23c09-6ea6-4e65-90e8-5f2709da6f9c",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "DSL tests are removed.",
        "createdAt" : "2018-11-07T03:25:09Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +595,599 @@\n    @Test\n    public void statelessTopologyShouldNotCreateStateDirectory() throws Exception {\n        final String inputTopic = testName.getMethodName() + \"-input\";\n        final String outputTopic = testName.getMethodName() + \"-output\";"
  }
]