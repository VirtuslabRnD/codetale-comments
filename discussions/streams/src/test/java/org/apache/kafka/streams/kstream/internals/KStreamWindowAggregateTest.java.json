[
  {
    "id" : "893a87cf-fd30-4969-acc6-c29bf3ec1021",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115690115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93399664-0c8d-4887-995c-eed0cc1e4f5d",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "ditto on removing before/after.",
        "createdAt" : "2018-04-26T19:03:38Z",
        "updatedAt" : "2018-04-26T19:12:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +73,77 @@            driver.close();\n        }\n        driver = null;\n    }\n"
  },
  {
    "id" : "4c44540b-f84d-474d-9ddd-e2dffbfc74d1",
    "prId" : 5742,
    "prUrl" : "https://github.com/apache/kafka/pull/5742#pullrequestreview-161798478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e6122a-a894-445a-bc1f-41f6e6b773e4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "on-the-side, avoiding deprecated APIs in an unrelated test.",
        "createdAt" : "2018-10-04T20:36:48Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "51c80eb6ad182197f8e09839b617db13053938ea",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +74,78 @@        final KTable<Windowed<String>, String> table2 = builder\n            .stream(topic1, Consumed.with(Serdes.String(), Serdes.String()))\n            .groupByKey(Grouped.with(Serdes.String(), Serdes.String()))\n            .windowedBy(TimeWindows.of(ofMillis(10)).advanceBy(ofMillis(5)))\n            .aggregate(MockInitializer.STRING_INIT, MockAggregator.TOSTRING_ADDER, Materialized.<String, String, WindowStore<Bytes, byte[]>>as(\"topic1-Canonized\").withValueSerde(Serdes.String()));"
  },
  {
    "id" : "ddbf0422-b0a9-44a6-8376-023066120cc7",
    "prId" : 5742,
    "prUrl" : "https://github.com/apache/kafka/pull/5742#pullrequestreview-161798478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f38ff535-da53-486d-bf8f-bbb277cd1876",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "With the prior test data, all the records would have the exact same amount of lateness. I created a difference, which lets us demonstrate correct max and avg lateness metrics.",
        "createdAt" : "2018-10-04T20:39:10Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "51c80eb6ad182197f8e09839b617db13053938ea",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +338,342 @@            driver.pipeInput(recordFactory.create(topic, \"k\", \"4\", 104L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"5\", 105L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"6\", 6L));\n            LogCaptureAppender.unregister(appender);\n"
  },
  {
    "id" : "0be15951-6da4-438e-b709-fc37a85bcd40",
    "prId" : 5742,
    "prUrl" : "https://github.com/apache/kafka/pull/5742#pullrequestreview-161798478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6a85533-7649-49c9-b670-a89f0bc5055b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "no point in parameterizing this one, it would be the same each time.",
        "createdAt" : "2018-10-04T20:40:26Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "51c80eb6ad182197f8e09839b617db13053938ea",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +387,391 @@        );\n\n        assertThat(driver.metrics().get(dropRate).metricValue(), not(0.0));\n\n        final MetricName latenessMaxMetric = new MetricName("
  },
  {
    "id" : "a15a48e8-edef-4ebb-ab6f-03907c9881f3",
    "prId" : 5742,
    "prUrl" : "https://github.com/apache/kafka/pull/5742#pullrequestreview-164078388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba7fc5ed-02df-4853-ba9c-10f0ce41bc75",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "For the `shouldLogAndMeterWhenSkippingExpiredWindowByGrace` and the `shouldLogAndMeterWhenSkippingExpiredWindow`  only the first record is not dropped (I know this is due to setting the stream time) and all subsequent records are dropped.  \r\nDo we want to put a record in the middle that isn't late and thus not dropped?",
        "createdAt" : "2018-10-10T23:43:56Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "92527f6c-52d1-4efe-89a5-f9874653dc75",
        "parentId" : "ba7fc5ed-02df-4853-ba9c-10f0ce41bc75",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Just to clarify, the intent here is to test the logging and metering, not the dropping behavior. Are you suggesting that we should verify that the record in the middle does not get dropped *and therefore* it doesn't get logged or contribute to the metrics?",
        "createdAt" : "2018-10-11T20:51:25Z",
        "updatedAt" : "2018-10-11T21:06:03Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8d3d3d14-acc2-42ce-a01a-27b8e20b66dd",
        "parentId" : "ba7fc5ed-02df-4853-ba9c-10f0ce41bc75",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Yes that was the intent of my suggestion, but considering you're clarification I think the test is fine as is.",
        "createdAt" : "2018-10-11T21:45:41Z",
        "updatedAt" : "2018-10-11T21:45:42Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "d248b54f-5794-4cf6-a6f2-71c741fee470",
        "parentId" : "ba7fc5ed-02df-4853-ba9c-10f0ce41bc75",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, yeah, I agree. We could augment the test, but I think it's also fine as is.",
        "createdAt" : "2018-10-12T02:22:25Z",
        "updatedAt" : "2018-10-12T02:22:25Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "51c80eb6ad182197f8e09839b617db13053938ea",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +335,339 @@            driver.pipeInput(recordFactory.create(topic, \"k\", \"1\", 101L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"2\", 102L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"3\", 103L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"4\", 104L));\n            driver.pipeInput(recordFactory.create(topic, \"k\", \"5\", 105L));"
  },
  {
    "id" : "029503ca-7abc-4233-a926-c5e115693d3d",
    "prId" : 6447,
    "prUrl" : "https://github.com/apache/kafka/pull/6447#pullrequestreview-214788321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b970880-9815-4243-b74f-e0faed5c6078",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This test sets timestamps explicitly so we get non-zero timestamps.",
        "createdAt" : "2019-03-14T22:10:54Z",
        "updatedAt" : "2019-03-15T22:47:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc762eb14f8bf66eab01acccb93ebad26b446979",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +102,106 @@            asList(\n                \"[A@0/10]:0+1 (ts: 0)\",\n                \"[B@0/10]:0+2 (ts: 1)\",\n                \"[C@0/10]:0+3 (ts: 2)\",\n                \"[D@0/10]:0+4 (ts: 3)\","
  },
  {
    "id" : "a5c2a187-7bb8-4a48-9ca2-80a71acb12f0",
    "prId" : 6933,
    "prUrl" : "https://github.com/apache/kafka/pull/6933#pullrequestreview-262082078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0c2e768-e95a-4996-ba78-273fd14e8730",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: avoid double spaces",
        "createdAt" : "2019-07-15T21:27:11Z",
        "updatedAt" : "2019-07-15T21:29:20Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd06e50eae4c23a88290a3aa6f0c8e5e271a036",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +112,116 @@                new KeyValueTimestamp<>(new Windowed<>(\"D\", new TimeWindow(0, 10)), \"0+4\", 3),\n                new KeyValueTimestamp<>(new Windowed<>(\"A\", new TimeWindow(0, 10)), \"0+1+1\", 4),\n                new KeyValueTimestamp<>(new Windowed<>(\"A\", new TimeWindow(0, 10)),  \"0+1+1+1\",  5),\n                new KeyValueTimestamp<>(new Windowed<>(\"A\", new TimeWindow(5, 15)),  \"0+1\",  5),\n                new KeyValueTimestamp<>(new Windowed<>(\"B\", new TimeWindow(0, 10)),  \"0+2+2\",  6),"
  },
  {
    "id" : "c6c60ef0-fe9b-429e-a49f-6d725276763a",
    "prId" : 7378,
    "prUrl" : "https://github.com/apache/kafka/pull/7378#pullrequestreview-297632279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b56e0fa-5394-442b-8b48-2edd05055434",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need to pass `null` as third parameter? Saw this in some other tests, too.",
        "createdAt" : "2019-10-04T05:23:36Z",
        "updatedAt" : "2019-10-04T18:59:11Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "259b0eaa-5cdf-4f56-9c5e-411f3da60700",
        "parentId" : "6b56e0fa-5394-442b-8b48-2edd05055434",
        "authorId" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "body" : "Reason for those null parameter in TestRecord contructor is limited variation of constructors with long. It would not require header parameter (null) if Instant would be used, which is the prefered way for the future.\r\n",
        "createdAt" : "2019-10-04T15:19:02Z",
        "updatedAt" : "2019-10-04T18:59:11Z",
        "lastEditedBy" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "tags" : [
        ]
      },
      {
        "id" : "81931a2e-c671-44c0-a0ea-1cdf4118db66",
        "parentId" : "6b56e0fa-5394-442b-8b48-2edd05055434",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack.",
        "createdAt" : "2019-10-04T18:02:07Z",
        "updatedAt" : "2019-10-04T18:59:11Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "50cfdc05d22d51ec9864ecb1722a461bb07a7e4a",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +343,347 @@                    driver.createOutputTopic(\"output\", new StringDeserializer(), new StringDeserializer());\n\n            assertThat(outputTopic.readRecord(), equalTo(new TestRecord<String, String>(\"[k@95/105]\", \"+100\", null, 100L)));\n            assertThat(outputTopic.readRecord(), equalTo(new TestRecord<String, String>(\"[k@100/110]\", \"+100\", null, 100L)));\n            assertThat(outputTopic.readRecord(), equalTo(new TestRecord<String, String>(\"[k@5/15]\", \"+5\", null, 5L)));"
  },
  {
    "id" : "621ca32d-b5a5-4fcf-8bb5-023c89fb9879",
    "prId" : 8508,
    "prUrl" : "https://github.com/apache/kafka/pull/8508#pullrequestreview-395836796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f84add-9004-4ee1-a87f-0cbc9114c0c5",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Removed because the parameter is variadic",
        "createdAt" : "2020-04-18T00:34:46Z",
        "updatedAt" : "2020-04-20T21:47:46Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e72cdd476c8f733788238ed303056c7369f3441",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +191,195 @@            );\n            processors.get(1).checkAndClearProcessResult();\n            processors.get(2).checkAndClearProcessResult();\n\n            inputTopic1.pipeInput(\"A\", \"1\", 5L);"
  }
]