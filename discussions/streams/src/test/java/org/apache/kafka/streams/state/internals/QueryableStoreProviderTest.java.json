[
  {
    "id" : "851be17a-0d3e-4f57-8df1-2a8162382ea0",
    "prId" : 8706,
    "prUrl" : "https://github.com/apache/kafka/pull/8706#pullrequestreview-421201099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29dfd8b0-5613-4d1d-a79c-dd60aef26bb5",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It might be better to test if the right store is returned instead of just checking for not-null? For this, in `before()` we need to get a reference on the store we pass into `addStore()`?",
        "createdAt" : "2020-05-28T21:56:12Z",
        "updatedAt" : "2020-05-29T10:13:35Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a55fcf5c-12bf-4a16-9da2-3cbca401e467",
        "parentId" : "29dfd8b0-5613-4d1d-a79c-dd60aef26bb5",
        "authorId" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "body" : "I think how to validate returned store reference, QueryableStoreProvider always wraps it in CompositeReadOnlyKeyValueStore?\r\n",
        "createdAt" : "2020-05-29T10:22:08Z",
        "updatedAt" : "2020-05-29T10:22:08Z",
        "lastEditedBy" : "fb37eaac-be97-4ac5-a5b2-b493114a5f1a",
        "tags" : [
        ]
      },
      {
        "id" : "5db4f3ba-ae4b-48f7-a824-a608962bd16e",
        "parentId" : "29dfd8b0-5613-4d1d-a79c-dd60aef26bb5",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Hmmm... Good point. Let leave it as-is. It's also covered in integration tests that the right store is returned.",
        "createdAt" : "2020-05-29T18:45:14Z",
        "updatedAt" : "2020-05-29T18:45:14Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7836004c631beb69184d2601a974645312b71312",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +97,101 @@    @Test\n    public void shouldReturnKVStoreWithPartitionWhenItExists() {\n        assertNotNull(storeProvider.getStore(StoreQueryParameters.fromNameAndType(keyValueStore, QueryableStoreTypes.keyValueStore()).withPartition(numStateStorePartitions - 1)));\n    }\n"
  }
]