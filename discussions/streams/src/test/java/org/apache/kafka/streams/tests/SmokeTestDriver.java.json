[
  {
    "id" : "55d765fe-2962-459b-a032-0f8df44ba8d7",
    "prId" : 4758,
    "prUrl" : "https://github.com/apache/kafka/pull/4758#pullrequestreview-107117947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40c8f810-e7a1-40f8-a999-b5e379b5faaf",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Admittedly, this is a random time to bring this up, but a pattern that I like for this is:\r\n```java\r\nfinal long seed = providedSeed != null ? providedSeed : new Random().nextLong();\r\nSystem.out.println(\"Seed is: \" + seed);\r\nfinal Random rand = new Random(seed);\r\n```\r\nwhere `providedSeed` comes from an env variable, command-line arg, whatever...\r\n\r\nThis way you get the same default behavior (pseudorandomly generated sequence of test values), but you also have the option to deterministically reproduce a previous pseudorandom sequence from a prior run. This can be helpful in diagnosing flaky tests.\r\n\r\nNot saying this is needed here; I just wanted to share the pattern.",
        "createdAt" : "2018-03-27T00:07:07Z",
        "updatedAt" : "2018-03-27T00:18:55Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "6949d213-5b04-4f72-a72d-8e82a7bf3bd6",
        "parentId" : "40c8f810-e7a1-40f8-a999-b5e379b5faaf",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Basically I agree. So far, we did not have any issues with `Random` introducing flakiness that we cannot reproduce. However, I am not sure if `seed = new Random().nextLong()` is a good seed -- isn't this also deterministic? I am used to `seed = System.currentTimeMillis()` ?",
        "createdAt" : "2018-03-27T00:27:33Z",
        "updatedAt" : "2018-03-27T00:27:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cb064a5d0891c989ee8a725d115d21dbe82aed1",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +156,160 @@            allData.put(data[i].key, new HashSet<Integer>());\n        }\n        final Random rand = new Random();\n\n        int remaining = 1; // dummy value must be positive if <autoTerminate> is false"
  },
  {
    "id" : "83988667-a37c-4726-ab2d-7aaef43d1681",
    "prId" : 6231,
    "prUrl" : "https://github.com/apache/kafka/pull/6231#pullrequestreview-202986803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d16df36-050f-4958-b58e-b1ee97161bf0",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should this be `|=` ?",
        "createdAt" : "2019-02-11T23:21:39Z",
        "updatedAt" : "2019-02-14T18:07:59Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "80cf0d5a-1bbd-45d1-9b4d-df761300b67c",
        "parentId" : "3d16df36-050f-4958-b58e-b1ee97161bf0",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "no, it's only a success if *all* the checks pass. So I think it's correct as an \"and\". Does that seem right?",
        "createdAt" : "2019-02-12T22:04:39Z",
        "updatedAt" : "2019-02-14T18:07:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8f218541-33e4-400b-b48e-f6dd841c9cc1",
        "parentId" : "3d16df36-050f-4958-b58e-b1ee97161bf0",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack. I guess I mixed up old code and new code -- also the comment `give it one more try if it's not already passing` is confusing. The interplay between `verificationResult.passed()` and `success` seems a little convoluted.",
        "createdAt" : "2019-02-13T01:01:59Z",
        "updatedAt" : "2019-02-14T18:07:59Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5633477428c1b393d469431d92e5b3c61a2d03c",
    "line" : 373,
    "diffHunk" : "@@ -1,1 +362,366 @@            verificationResult = verifyAll(inputs, events);\n        }\n        success &= verificationResult.passed();\n\n        System.out.println(verificationResult.result());"
  }
]