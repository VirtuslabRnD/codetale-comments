[
  {
    "id" : "d9325a2f-9b72-48b0-8143-5feda9e1fc79",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115688725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9da005c4-5cde-4456-9efe-7c9e005a60cb",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is not a suggestion for change: while working on removing `KStreamBuilder` and `TopologyBuilder` I realized in some unit tests we may still need this class to access the internal topology builder. So probably we cannot remove it even after that, but we can discuss this later in the cleanup PR.",
        "createdAt" : "2018-04-26T18:06:07Z",
        "updatedAt" : "2018-04-26T18:27:36Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +25,29 @@ *  {@link InternalTopologyBuilder} by exposing a protected constructor.\n *\n *  It should be used only for testing, and should be removed once the deprecated\n *  classes {@link org.apache.kafka.streams.kstream.KStreamBuilder} and\n *  {@link org.apache.kafka.streams.processor.TopologyBuilder} are removed."
  },
  {
    "id" : "00db25ad-b342-4bcf-af59-ad72a017656a",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115895157",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e80d59d-2678-407e-8aeb-fe9add6884f2",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Nice solution to this problem.",
        "createdAt" : "2018-04-26T18:22:20Z",
        "updatedAt" : "2018-04-26T19:12:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "9d41af6f-a690-4b03-adf6-ffc41bd88e5d",
        "parentId" : "7e80d59d-2678-407e-8aeb-fe9add6884f2",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Thanks. Just following a nice tip from @mjsax .",
        "createdAt" : "2018-04-27T10:47:33Z",
        "updatedAt" : "2018-04-27T10:47:33Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +29,33 @@ *  {@link org.apache.kafka.streams.processor.TopologyBuilder} are removed.\n */\npublic class TopologyTestDriverWrapper extends TopologyTestDriver {\n\n    public TopologyTestDriverWrapper(final InternalTopologyBuilder builder,"
  },
  {
    "id" : "ac7949d6-4af4-424e-8287-4f0b935fbf2f",
    "prId" : 4986,
    "prUrl" : "https://github.com/apache/kafka/pull/4986#pullrequestreview-128423059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9eb949ae-ccda-47ee-a146-e6652430865e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Should we check `globalTopology` as well before give up and throw?",
        "createdAt" : "2018-06-04T01:38:37Z",
        "updatedAt" : "2018-06-13T15:06:10Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6bbf6bed-aad2-4fb8-be94-2a46df240e67",
        "parentId" : "9eb949ae-ccda-47ee-a146-e6652430865e",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Yes, we should. Added  the global topology check. ",
        "createdAt" : "2018-06-13T15:05:42Z",
        "updatedAt" : "2018-06-13T15:06:10Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbaf6fbc255d74af1146f92501f59f3b1fd85cd4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@     * @return the processor matching the search name\n     */\n    public ProcessorNode getProcessor(final String name) {\n        for (final ProcessorNode node : processorTopology.processors()) {\n            if (node.name().equals(name)) {"
  }
]