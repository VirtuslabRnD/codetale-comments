[
  {
    "id" : "c33342d1-fe34-401b-9ab1-889eafcc50c3",
    "prId" : 7984,
    "prUrl" : "https://github.com/apache/kafka/pull/7984#pullrequestreview-350484961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26c5f309-9e71-440c-b210-b890c141fe32",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why is this a new test class? Why not add those tests to existing `QueryableStateIntegrationTest` ?",
        "createdAt" : "2020-01-29T23:32:10Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87c5b9c6789e6f77819eecee0400c64d4220356f",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@\n@Category({IntegrationTest.class})\npublic class StoreQueryIntegrationTest {\n\n    private static final int NUM_BROKERS = 1;"
  },
  {
    "id" : "c240f835-46fd-4679-a9e8-287900f935f1",
    "prId" : 7984,
    "prUrl" : "https://github.com/apache/kafka/pull/7984#pullrequestreview-351921425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c71cdf65-ca6d-407a-b3d6-49613b6f3079",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I am not sure if I understand this test? If there are two instances, and a topic with 2 partitions, each instance is hosting one task. Hence, how does this test verify that _all_ partitions are considered for querying?\r\n\r\n1. there is only one partition\r\n2. even if there would be two partitions, how could this test verify if only one partition was queried or both?\r\n\r\nMaybe enabling stale querying helps to verify?\r\n\r\nSimilar question about the below test. Or do I miss something?",
        "createdAt" : "2020-01-29T23:46:36Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c6c95fc0-c65f-4dbf-8915-871fb82c1b29",
        "parentId" : "c71cdf65-ca6d-407a-b3d6-49613b6f3079",
        "authorId" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "body" : "Hmm, you are right. Although, my main point for writing this test was that when no partition is implicitly provided, the key fetch returns a value(and only on the machine where active resides). I have already written tests to verify that enabling stale stores returns value as well in shouldQueryAllStalePartitionStores() so we can remove this test as well.",
        "createdAt" : "2020-01-30T04:38:46Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "tags" : [
        ]
      },
      {
        "id" : "ec9fbc67-61f6-4d33-ac4f-9e540694a809",
        "parentId" : "c71cdf65-ca6d-407a-b3d6-49613b6f3079",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If you want to verify that only the active task returns data, the test name should indicate this.",
        "createdAt" : "2020-01-30T07:41:31Z",
        "updatedAt" : "2020-01-30T07:43:49Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "4cf4d022-bbf5-4c67-9f83-8e2fd3f4530c",
        "parentId" : "c71cdf65-ca6d-407a-b3d6-49613b6f3079",
        "authorId" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "body" : "Done.",
        "createdAt" : "2020-02-02T06:26:59Z",
        "updatedAt" : "2020-02-02T06:26:59Z",
        "lastEditedBy" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "tags" : [
        ]
      }
    ],
    "commit" : "87c5b9c6789e6f77819eecee0400c64d4220356f",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@        assertThat(kafkaStreams1IsActive ? store1.get(key) : store2.get(key), is(notNullValue()));\n        assertThat(kafkaStreams1IsActive ? store2.get(key) : store1.get(key), is(nullValue()));\n    }\n\n    @Test"
  },
  {
    "id" : "c4998d84-70d7-4262-9ab6-d83b72a7203b",
    "prId" : 7984,
    "prUrl" : "https://github.com/apache/kafka/pull/7984#pullrequestreview-351922385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94d0edb1-367e-453e-ae99-68f8d5e2f1a4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we catch? We should be able to figure this out before we call `store()` base on the given `KeyQueryMetadata`.",
        "createdAt" : "2020-01-29T23:48:00Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "b55cdc36-b6b4-4dfd-8d9e-c87ef4b90df2",
        "parentId" : "94d0edb1-367e-453e-ae99-68f8d5e2f1a4",
        "authorId" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "body" : "Done.",
        "createdAt" : "2020-02-02T06:53:56Z",
        "updatedAt" : "2020-02-02T06:53:56Z",
        "lastEditedBy" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "tags" : [
        ]
      }
    ],
    "commit" : "87c5b9c6789e6f77819eecee0400c64d4220356f",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +173,177 @@        } catch (final InvalidStateStoreException exception) {\n        //Only one among kafkaStreams1 and kafkaStreams2 will contain the specific active store requested. The other will throw exception\n        }\n        try {\n            store2 = kafkaStreams2"
  },
  {
    "id" : "2f02872b-01b7-4630-b5e6-99d5f20b6ace",
    "prId" : 7984,
    "prUrl" : "https://github.com/apache/kafka/pull/7984#pullrequestreview-351922381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "947e06bc-2350-4fd1-a123-dcd093e50d5e",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Seem this test is subject to a race condition, because we don't know if the standby is up-to-date already (the used semaphore only tells us that the active one is up-to-date) and contains the key. I think we need to retry this in a loop with timeout?",
        "createdAt" : "2020-01-29T23:55:07Z",
        "updatedAt" : "2020-01-30T05:36:55Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "269b6621-b33b-4c13-8c2a-1389ae65a623",
        "parentId" : "947e06bc-2350-4fd1-a123-dcd093e50d5e",
        "authorId" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "body" : "Done.",
        "createdAt" : "2020-02-02T06:53:47Z",
        "updatedAt" : "2020-02-02T06:53:48Z",
        "lastEditedBy" : "3501d636-ea66-482b-a2ca-f215a3669632",
        "tags" : [
        ]
      }
    ],
    "commit" : "87c5b9c6789e6f77819eecee0400c64d4220356f",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@        // Assert that both active and standby are able to query for a key\n        assertThat(store1.get(key), is(notNullValue()));\n        assertThat(store2.get(key), is(notNullValue()));\n    }\n"
  }
]