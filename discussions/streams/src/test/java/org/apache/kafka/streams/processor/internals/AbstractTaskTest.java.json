[
  {
    "id" : "66dd2365-9a1a-4e51-a59a-2288b862755f",
    "prId" : 6555,
    "prUrl" : "https://github.com/apache/kafka/pull/6555#pullrequestreview-224612009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f67e1a3d-85ef-4e35-944d-5376cc8147f4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This is kind of funny. We always called `store.name()`, but with the current changes, we call it twice. Apparently, EasyMock returns `null` on the first invocation and throws an exception on the second, which doesn't seem quite right.\r\n\r\nAnyway, since we need the store to have a name, I made one.",
        "createdAt" : "2019-04-09T19:42:48Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9567b1ef225409db812fc48a6c64574a5f16f11",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +98,102 @@        final Consumer consumer = EasyMock.createNiceMock(Consumer.class);\n        final StateStore store = EasyMock.createNiceMock(StateStore.class);\n        expect(store.name()).andReturn(\"dummy-store-name\").anyTimes();\n        EasyMock.replay(store);\n        expect(stateDirectory.lock(id)).andReturn(false);"
  },
  {
    "id" : "e4cbf7b2-9bdb-4e7d-b773-0308c9ea5d0a",
    "prId" : 6555,
    "prUrl" : "https://github.com/apache/kafka/pull/6555#pullrequestreview-224612009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38d4af25-d3f9-487f-8b34-397f2131933e",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I also shorted some long lines.",
        "createdAt" : "2019-04-09T19:43:10Z",
        "updatedAt" : "2019-04-22T19:13:13Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9567b1ef225409db812fc48a6c64574a5f16f11",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +242,246 @@                                                         Duration.ZERO,\n                                                         new MockStateRestoreListener(),\n                                                         new LogContext(\"stream-task-test \")),\n                                false,\n                                stateDirectory,"
  }
]