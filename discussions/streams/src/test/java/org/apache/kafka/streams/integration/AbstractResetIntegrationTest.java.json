[
  {
    "id" : "2ac4cdbd-355c-4ae4-a4a7-4e75190cc3dd",
    "prId" : 4305,
    "prUrl" : "https://github.com/apache/kafka/pull/4305#pullrequestreview-84956183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5f2c688-04e5-4f64-9538-b4b4917b55d0",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I assume this fails, because KS is still running. This is a valid test, but does test if `StreamsResetter` fails for non-existing topic. ",
        "createdAt" : "2017-12-19T18:31:57Z",
        "updatedAt" : "2017-12-30T19:18:11Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "3db25f4d-711f-45a6-92e6-60ca26936c4e",
        "parentId" : "f5f2c688-04e5-4f64-9538-b4b4917b55d0",
        "authorId" : "bc886239-fe1b-4ce1-88aa-f750be340c11",
        "body" : "Let me change the input-topics in the parameterlist. Then i believe this should fail for sure.",
        "createdAt" : "2017-12-21T02:45:40Z",
        "updatedAt" : "2017-12-30T19:18:11Z",
        "lastEditedBy" : "bc886239-fe1b-4ce1-88aa-f750be340c11",
        "tags" : [
        ]
      }
    ],
    "commit" : "4536903c0669ad0556c2f2257c97f0deb703dbd7",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +631,635 @@        streams.start();\n\n        final int exitCode = new StreamsResetter().run(parameters, cleanUpConfig);\n        Assert.assertEquals(1, exitCode);\n"
  },
  {
    "id" : "0df5800b-a977-4e64-a2d0-0cb0a5ae22d1",
    "prId" : 4446,
    "prUrl" : "https://github.com/apache/kafka/pull/4446#pullrequestreview-90677504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67d7e80f-2ca2-45f6-aec5-9e40c9b7faf4",
        "parentId" : null,
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "Are we sure we want `while(true)`? Should we not give up after some period of time so the build doesn't hang?\r\n\r\nAlso, why can't we just put a longer wait in the `TestUtils.waitForCondition(...)`?",
        "createdAt" : "2018-01-19T11:05:29Z",
        "updatedAt" : "2018-01-19T11:05:29Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      },
      {
        "id" : "87a03fb3-21ee-406b-86e3-3e2ee5a9beae",
        "parentId" : "67d7e80f-2ca2-45f6-aec5-9e40c9b7faf4",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "The `while(true)` was in the code before the rewrite an not an issue.\r\n\r\nA long wait won't do as `TestUtils.waitForCondition(...)` throws an `AsssertionException` if its wait time passed, while we get a `TimeoutException` from the request itself here if the broker is not available yet. I guess, we could increase the timeout for the request, but we reuse the same condition on other places and their we don't want to have  timeout -- could parametrize it of course....\r\n\r\nLet me know what you think.",
        "createdAt" : "2018-01-19T22:29:23Z",
        "updatedAt" : "2018-01-19T22:29:23Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "ea366316-dc66-467a-81f4-6e65cbb20d3d",
        "parentId" : "67d7e80f-2ca2-45f6-aec5-9e40c9b7faf4",
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "no probs - leave as is then",
        "createdAt" : "2018-01-23T00:45:38Z",
        "updatedAt" : "2018-01-23T00:45:38Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3400d4b5c7976d68c00cc15625da429f83546bd9",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +173,177 @@\n        // busy wait until cluster (ie, ConsumerGroupCoordinator) is available\n        while (true) {\n            Thread.sleep(50);\n"
  },
  {
    "id" : "91fa0ad0-8cda-4210-a394-ec253401b938",
    "prId" : 4491,
    "prUrl" : "https://github.com/apache/kafka/pull/4491#pullrequestreview-94481059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce4108eb-4967-4e26-b9e0-daaa9baba671",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need to generate a new object each time?",
        "createdAt" : "2018-02-06T02:20:51Z",
        "updatedAt" : "2018-02-14T00:45:15Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c17ab942-d176-4622-9f1f-87c062337a3f",
        "parentId" : "ce4108eb-4967-4e26-b9e0-daaa9baba671",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "We cannot create an object before any tests are run, because `appID` is not initialized and that would cause test to pause. This is actually the root cause of the failure before.",
        "createdAt" : "2018-02-06T19:45:31Z",
        "updatedAt" : "2018-02-14T00:45:15Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a66a86136a04896102819d5c5e6da66a44ba46a",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +182,186 @@\n        // busy wait until cluster (ie, ConsumerGroupCoordinator) is available\n        TestUtils.waitForCondition(new ConsumerGroupInactiveCondition(), TIMEOUT_MULTIPLIER * CLEANUP_CONSUMER_TIMEOUT,\n                \"Test consumer group \" + appID + \" still active even after waiting \" + (TIMEOUT_MULTIPLIER * CLEANUP_CONSUMER_TIMEOUT) + \" ms.\");\n"
  }
]