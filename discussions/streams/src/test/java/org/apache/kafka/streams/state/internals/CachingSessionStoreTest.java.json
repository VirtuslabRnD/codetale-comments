[
  {
    "id" : "710f749f-fbb3-480f-8564-87d8e321af01",
    "prId" : 5323,
    "prUrl" : "https://github.com/apache/kafka/pull/5323#pullrequestreview-134068038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90442a37-3586-4f16-9a4a-26002f611b94",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I searched through the code base to find all the spots where we set the segment interval to 1 minute just because it was the min. I've set them all lower (typically to 100ms, because it's a nice round number) mostly to avoid implying that there's anything special about 60s anymore.",
        "createdAt" : "2018-07-03T16:12:08Z",
        "updatedAt" : "2018-08-01T16:09:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1375356d9dbd23051ecdd3ce171dbf0d6040ec6",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +57,61 @@    private static final int MAX_CACHE_SIZE_BYTES = 600;\n    private static final Long DEFAULT_TIMESTAMP = 10L;\n    private static final long SEGMENT_INTERVAL = 100L;\n    private RocksDBSegmentedBytesStore underlying;\n    private CachingSessionStore<String, String> cachingStore;"
  },
  {
    "id" : "ca39d94c-b38b-4505-a028-89b961394c2b",
    "prId" : 5323,
    "prUrl" : "https://github.com/apache/kafka/pull/5323#pullrequestreview-134068038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da97d0c0-1122-4c13-acd3-01e5c9f40149",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "In all the places where the test logic actually depends on the segment interval, I've expanded the expressions to include it. Theoretically, we should be able to plug in any number for the segment interval, and the tests should still pass.",
        "createdAt" : "2018-07-03T16:14:04Z",
        "updatedAt" : "2018-08-01T16:09:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1375356d9dbd23051ecdd3ce171dbf0d6040ec6",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +186,190 @@        final Windowed<Bytes> a1 = new Windowed<>(keyA, new SessionWindow(SEGMENT_INTERVAL * 0, SEGMENT_INTERVAL * 0));\n        final Windowed<Bytes> a2 = new Windowed<>(keyA, new SessionWindow(SEGMENT_INTERVAL * 1, SEGMENT_INTERVAL * 1));\n        final Windowed<Bytes> a3 = new Windowed<>(keyA, new SessionWindow(SEGMENT_INTERVAL * 2, SEGMENT_INTERVAL * 2));\n        cachingStore.put(a1, \"1\".getBytes());\n        cachingStore.put(a2, \"2\".getBytes());"
  },
  {
    "id" : "e5b3d782-d40a-445e-b57d-4f466750b682",
    "prId" : 6161,
    "prUrl" : "https://github.com/apache/kafka/pull/6161#pullrequestreview-193491553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85e9186f-6129-4de0-b9b4-dd3fb6ec50f1",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This additional record is for illustrating the bug. Without the fix the flushed entries would be incorrect.",
        "createdAt" : "2019-01-17T07:46:41Z",
        "updatedAt" : "2019-01-31T01:30:38Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4bcfd8a8650fee88171642e5b5eec9fd96fb27c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +229,233 @@        final Windowed<Bytes> b = new Windowed<>(keyA, new SessionWindow(1, 2));\n        final Windowed<String> aDeserialized = new Windowed<>(\"a\", new SessionWindow(2, 4));\n        final Windowed<String> bDeserialized = new Windowed<>(\"a\", new SessionWindow(1, 2));\n        final List<KeyValue<Windowed<String>, Change<String>>> flushed = new ArrayList<>();\n        cachingStore.setFlushListener("
  },
  {
    "id" : "265304a7-0da6-4bd1-bcc6-52ac01e1d8f4",
    "prId" : 6645,
    "prUrl" : "https://github.com/apache/kafka/pull/6645#pullrequestreview-236048892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2b3ac68-ccee-43fa-a102-c1c03c3ec398",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Update this test to check result timestamp, too.",
        "createdAt" : "2019-05-10T11:10:05Z",
        "updatedAt" : "2019-05-12T13:26:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "43873294c59da42142246aa9c261e0f903f0f3d4",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +257,261 @@\n        assertEquals(\n            Collections.singletonList(\n                new KeyValueTimestamp<>(\n                    bDeserialized,"
  }
]