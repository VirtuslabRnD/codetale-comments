[
  {
    "id" : "4cc9ba6a-3db0-45b4-ad30-16535c2a8ea0",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378063159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f62b2fdd-6587-49d2-9b1c-974610c106d9",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We \"duplicate\" test for eos-alpha and eos-beta (similar pattern below for other tests)",
        "createdAt" : "2020-03-19T20:19:13Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +528,532 @@\n    @Test\n    public void shouldResetToDefaultIfConsumerIsolationLevelIsOverriddenIfEosAlphaEnabled() {\n        props.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, EXACTLY_ONCE);\n        shouldResetToDefaultIfConsumerIsolationLevelIsOverriddenIfEosEnabled();"
  },
  {
    "id" : "1c2d41c6-5f8f-4e74-9841-39fdba72750e",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378064999",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90a5df21-043c-4d59-890c-e71bbb4eecec",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Side cleanup",
        "createdAt" : "2020-03-19T20:22:05Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +890,894 @@    }\n\n    static class MisconfiguredSerde implements Serde<Object> {\n        @Override\n        public void configure(final Map<String, ?>  configs, final boolean isKey) {"
  },
  {
    "id" : "4029253b-1f53-4add-9a61-28287cf3f3c4",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378681560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "968f2438-80dd-442d-a07c-de2ff2223674",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could you elaborate what you mean here?",
        "createdAt" : "2020-03-20T05:01:09Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "1e22fd2d-ce69-4740-9dc5-99a2ab9cbf67",
        "parentId" : "968f2438-80dd-442d-a07c-de2ff2223674",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If we would use `EXACLTY_ONCE_BETA` in this test, we would compare `EXACLTY_ONCE_BETA == EXACLTY_ONCE_BETA` what is not useful -- we should compare `EXACLTY_ONCE_BETA == \"exactly_once_beta\"` instead.",
        "createdAt" : "2020-03-20T06:42:02Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "d3fcb7af-d3ed-479c-9b93-5719f7dbfaae",
        "parentId" : "968f2438-80dd-442d-a07c-de2ff2223674",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Makes sense!",
        "createdAt" : "2020-03-20T17:37:49Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +485,489 @@    @Test\n    public void shouldAcceptExactlyOnceBeta() {\n        // don't use `StreamsConfig.EXACLTY_ONCE_BETA` to actually do a useful test\n        props.put(StreamsConfig.PROCESSING_GUARANTEE_CONFIG, \"exactly_once_beta\");\n        new StreamsConfig(props);"
  },
  {
    "id" : "d16c6cb8-f10e-44f9-8ad3-f0c0fad2af1c",
    "prId" : 8322,
    "prUrl" : "https://github.com/apache/kafka/pull/8322#pullrequestreview-379916441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9d9a9c8-a2a6-47c9-b995-a77a079521c2",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should this be `GROUP_INSTANCE_ID_CONFIG` ?",
        "createdAt" : "2020-03-23T19:14:19Z",
        "updatedAt" : "2020-03-23T19:14:20Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "674ba942-5e45-4b6a-b43a-feded2263d0b",
        "parentId" : "f9d9a9c8-a2a6-47c9-b995-a77a079521c2",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a piggy-backed test coverage not directly related to the PR --- I wanted to make sure that whatever user specified group id is always overridden by the streams itself.",
        "createdAt" : "2020-03-23T21:31:47Z",
        "updatedAt" : "2020-03-23T21:32:26Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "e3341096-fa6e-43f0-96e1-84c95675d738",
        "parentId" : "f9d9a9c8-a2a6-47c9-b995-a77a079521c2",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack.\r\n\r\nShould we test that the `GROUP_INSTANCE_ID` is set correctly based on the user config for the main consumer (or do we have a test for this already?)",
        "createdAt" : "2020-03-24T00:08:08Z",
        "updatedAt" : "2020-03-24T00:08:08Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "160acd197340ef183ea5af15f34ef9790a67b70b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +196,200 @@        props.put(StreamsConfig.consumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"5\");\n        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"50\");\n        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_ID_CONFIG), \"another-id\");\n        final StreamsConfig streamsConfig = new StreamsConfig(props);\n        final Map<String, Object> returnedProps = streamsConfig.getMainConsumerConfigs(groupId, clientId, threadIdx);"
  },
  {
    "id" : "6904a718-8de4-4b88-ae25-15a31cff418b",
    "prId" : 8322,
    "prUrl" : "https://github.com/apache/kafka/pull/8322#pullrequestreview-379916607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdd1571e-42a8-42e7-b137-0d098d22fa98",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we need this 3 lines? Setting the config without prefix would set it for all consumers anyway?\r\n\r\nIf you want to test the overwrite with prefix, should it be it's own test?",
        "createdAt" : "2020-03-23T19:17:10Z",
        "updatedAt" : "2020-03-23T19:17:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "eb6cb6cb-ad87-48df-ba7b-45631a6166e1",
        "parentId" : "fdd1571e-42a8-42e7-b137-0d098d22fa98",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I want to check that no prefix would take effects here -- note I used different values for different overrides, so if it is violated we know which prefix introduced the violation.",
        "createdAt" : "2020-03-23T21:30:04Z",
        "updatedAt" : "2020-03-23T21:32:26Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "26656e05-8d24-4914-876c-de3097bb112e",
        "parentId" : "fdd1571e-42a8-42e7-b137-0d098d22fa98",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack",
        "createdAt" : "2020-03-24T00:08:32Z",
        "updatedAt" : "2020-03-24T00:08:32Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "160acd197340ef183ea5af15f34ef9790a67b70b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +144,148 @@        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-1\");\n        props.put(StreamsConfig.restoreConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-2\");\n        props.put(StreamsConfig.globalConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-3\");\n        final StreamsConfig streamsConfig = new StreamsConfig(props);\n"
  },
  {
    "id" : "3b6edbce-80d9-4e3d-aeac-aa6c1524434f",
    "prId" : 8864,
    "prUrl" : "https://github.com/apache/kafka/pull/8864#pullrequestreview-453826889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb17c828-bd3f-41e2-801d-7aa6d81f6c04",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Hey, sorry if this is picky, but are these also to be removed when we remove the config? If so, maybe we should just say it on every suppression.",
        "createdAt" : "2020-07-06T23:47:06Z",
        "updatedAt" : "2020-07-21T00:12:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "596f130f-3e53-447a-88c5-2e13978fe285",
        "parentId" : "fb17c828-bd3f-41e2-801d-7aa6d81f6c04",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not 100% sure yet how the test will be rewritten. My expectation is, that we remove the `retries` config and also remove the `Suppress` tag -- however, we can only do this, after streams code was changes.",
        "createdAt" : "2020-07-07T19:47:10Z",
        "updatedAt" : "2020-07-21T00:12:06Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "86b8858b-76d6-4f54-a23b-bf964c5a68ec",
        "parentId" : "fb17c828-bd3f-41e2-801d-7aa6d81f6c04",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Addressed via #9060",
        "createdAt" : "2020-07-23T04:18:01Z",
        "updatedAt" : "2020-07-23T04:18:01Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6c10d88f9c6fa9d89cc500112255898e2f24845",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +160,164 @@    }\n\n    @SuppressWarnings(\"deprecation\") // TODO revisit in follow up PR\n    @Test\n    public void consumerConfigMustContainStreamPartitionAssignorConfig() {"
  },
  {
    "id" : "a16fd0d4-964c-47f2-ac19-f0fca4d7e841",
    "prId" : 8864,
    "prUrl" : "https://github.com/apache/kafka/pull/8864#pullrequestreview-453826941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "584e4759-dcf3-4e0e-88bd-d952fd5cd2fc",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Addressed via #9060",
        "createdAt" : "2020-07-23T04:18:17Z",
        "updatedAt" : "2020-07-23T04:18:17Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6c10d88f9c6fa9d89cc500112255898e2f24845",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +192,196 @@    }\n\n    @SuppressWarnings(\"deprecation\") // TODO revisit in follow up PR\n    @Test\n    public void consumerConfigShouldContainAdminClientConfigsForRetriesAndRetryBackOffMsWithAdminPrefix() {"
  }
]