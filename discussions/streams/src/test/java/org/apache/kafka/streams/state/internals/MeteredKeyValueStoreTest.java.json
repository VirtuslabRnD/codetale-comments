[
  {
    "id" : "e7ac2f91-d6c0-448d-bae0-9101fa2f1fa3",
    "prId" : 8368,
    "prUrl" : "https://github.com/apache/kafka/pull/8368#pullrequestreview-383238288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc6c32d1-c96f-4070-bfac-3a11f64737d4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "These tests were missing, so I added them.",
        "createdAt" : "2020-03-27T22:53:24Z",
        "updatedAt" : "2020-03-28T01:19:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d67f1a9b39ab41874c2c702eb4cce011afc2560",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +313,317 @@\n    @Test\n    public void shouldRemoveMetricsOnClose() {\n        inner.close();\n        expectLastCall();"
  },
  {
    "id" : "6d373ca5-5e02-40d1-be52-89ff55756a68",
    "prId" : 8368,
    "prUrl" : "https://github.com/apache/kafka/pull/8368#pullrequestreview-383238288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a3c3bd0-8605-4d62-95d2-912b5732e1e1",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "These tests are the ones that cover the bug I fixed.",
        "createdAt" : "2020-03-27T22:53:47Z",
        "updatedAt" : "2020-03-28T01:19:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d67f1a9b39ab41874c2c702eb4cce011afc2560",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +326,330 @@\n    @Test\n    public void shouldRemoveMetricsEvenIfWrappedStoreThrowsOnClose() {\n        inner.close();\n        expectLastCall().andThrow(new RuntimeException(\"Oops!\"));"
  },
  {
    "id" : "b0bcadf6-bd25-48d4-a1e1-a583fce8099e",
    "prId" : 8902,
    "prUrl" : "https://github.com/apache/kafka/pull/8902#pullrequestreview-440222385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Unless we're actually verifying these interactions, we should probably use the MockInternalProcessorContext instead, and save ourselves from having to tweak these expectations every time we change the implementation details. ",
        "createdAt" : "2020-06-26T03:55:54Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "bb293c73-e656-47b9-9bcb-d538570d23ba",
        "parentId" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I guess there is a misunderstanding. You cannot verify an expectation that is specified with `andStubReturn()`. That is the reason why I changed `andReturn().anyTimes()` with `andStubReturn()`. This also means that these expectations do not depend on the implementation details (i.e. how often the methods are called). Method `andStubReturn()` has similar effect as using `MockInternalProcessorContext`. Refactoring the tests would unreasonably increase the size of this PR. Hence, I would like not to do it.     ",
        "createdAt" : "2020-06-26T08:41:35Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "5a2e4f18-f430-4480-9c57-449d814a350b",
        "parentId" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think Bruno needs to give us all a short lesson on the correct usage of EasyMock. He explained the `StubReturn` thing to me on another PR a while back and I've been (slowly) trying to help migrate all the `.andReturn.anyTimes` usages over to this where appropriate (which is most places). It's definitely helped reduce the large number of EasyMock'ed tests that have to be fixed after every minor implementation change.\r\n\r\nThat said, there does seem to be one critical difference between using `.andStubReturn` and the actual `MockInternalProcessorContext`. If we add a new method to the `InternalProcessorContext` interface, for example, we then have to add this expectation to every test that calls it with an EasyMock context. Having had to do this a number of times, it's definitely a huge timesuck.\r\n\r\nBut I also agree that it doesn't need to be done as part of this PR. Maybe once the MockInternal and InternalMock processor contexts are finally merged we can do some reasonable cleanup of the tests",
        "createdAt" : "2020-06-26T17:29:12Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "f60f4104-fe73-426c-923b-6567ac9639a8",
        "parentId" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks, all. What Sophie mentioned is more in line with what I had in mind. The advantage of something like \"MIPC\" is that it just generally satisfies the API contract while not really doing stuff like writing to the brokers, etc. Because it's a contract-valid implementation of InternalProcessorContext, we can use it transparently to support any use case where we really don't care exactly what calls the unit under test makes into the context.\r\n\r\nEasyMock is very powerful, but it can't magically implement a complex interface contract, so it can never fill this gap. On the other hand, if there's really only going to be one or two calls, then it's fine. And, of course, if we _need_ to verify interactions, exceptions, etc., then EasyMock gives us a very powerful set of utilities for it.\r\n\r\nAnyway, we don't have to change this right now, but I've certainly spent many hours fiddling around with easymock expectations just like this, and it provides no value if you just want the thing to behave the way that MIPC already behaves. Which is why I pointed it out.",
        "createdAt" : "2020-06-27T02:10:03Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "7fe3989a-39bd-44bf-88ab-5b561a0d2c77",
        "parentId" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I agree that EasyMock is not able to magically implement a complex interface contract. However, as I said earlier it would significantly increase the size of this PR to swap to `InternalMockProcessorContext` or one of its siblings right now.",
        "createdAt" : "2020-06-30T10:05:25Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "a3678e80-ada7-40e2-9854-14ab660a7056",
        "parentId" : "9792252d-382c-41aa-98ab-f0089e567e92",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, no need to change it now, then. Thanks for the discussion.",
        "createdAt" : "2020-06-30T17:09:55Z",
        "updatedAt" : "2020-07-09T12:00:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfacb69b8895b4c72874942d37faa9a36ca357e9",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +136,140 @@        expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics, \"test\", builtInMetricsVersion));\n        expect(context.taskId()).andStubReturn(taskId);\n        expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC);\n        expect(inner.name()).andStubReturn(STORE_NAME);\n        storeLevelGroup ="
  },
  {
    "id" : "25f4dbe5-1958-446a-ac5f-bf420c6f0efd",
    "prId" : 9508,
    "prUrl" : "https://github.com/apache/kafka/pull/9508#pullrequestreview-576201015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "930403cb-88c5-46fa-b2d7-9e8ab4e0dbe5",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "nit:\r\n```suggestion\r\n        final KafkaMetric metric = metric(\"prefix-scan-rate\");\r\n```",
        "createdAt" : "2021-01-26T10:44:39Z",
        "updatedAt" : "2021-02-03T10:49:03Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eca3c9c2852172896001178f8e7a115fd392aeb",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +447,451 @@        iterator.close();\n\n        final KafkaMetric metric = metrics.metric(new MetricName(\"prefix-scan-rate\", STORE_LEVEL_GROUP, \"\", tags));\n        assertTrue((Double) metric.metricValue() > 0);\n        verify(inner);"
  }
]