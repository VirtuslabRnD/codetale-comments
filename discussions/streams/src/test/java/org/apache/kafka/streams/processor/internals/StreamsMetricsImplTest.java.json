[
  {
    "id" : "cf230ae5-e973-4be8-bb53-8444d7701735",
    "prId" : 5108,
    "prUrl" : "https://github.com/apache/kafka/pull/5108#pullrequestreview-125226772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76c46989-d19b-4ae2-8908-61bf45083435",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Do we need to wrap with the LinkedHashMap? Could we just do `Collections.unmodifiableMap(metrics.metrics());`",
        "createdAt" : "2018-05-31T18:46:18Z",
        "updatedAt" : "2018-05-31T18:48:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1deaf577-d348-4ea2-98a7-9254c82eb9a0",
        "parentId" : "76c46989-d19b-4ae2-8908-61bf45083435",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I can look into it. I thought that `unmodifiableMap` only wraps the collection, not copies it, and we need to make a copy here.",
        "createdAt" : "2018-06-01T16:02:06Z",
        "updatedAt" : "2018-06-01T16:02:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "da6360a2-a3ea-481f-a5a1-a0cf6f1d438c",
        "parentId" : "76c46989-d19b-4ae2-8908-61bf45083435",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yep, it's only a view, and we need a copy: \"Returns an unmodifiable view of the specified map.\"",
        "createdAt" : "2018-06-01T16:04:40Z",
        "updatedAt" : "2018-06-01T16:04:40Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e7962e73f82f6f79604910e5f61d8b9820b8d3b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +59,63 @@        Map<String, String> tags = new HashMap<>();\n        final Metrics metrics = new Metrics();\n        final Map<MetricName, KafkaMetric> initialMetrics = Collections.unmodifiableMap(new LinkedHashMap<>(metrics.metrics()));\n        StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics, groupName, tags);\n"
  },
  {
    "id" : "dd2960e6-4c4e-436f-b22c-558769c160b2",
    "prId" : 5108,
    "prUrl" : "https://github.com/apache/kafka/pull/5108#pullrequestreview-125226387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ba4189d-4414-40f3-a313-e87ae5511d45",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "What are those assertions validated for?",
        "createdAt" : "2018-05-31T18:48:17Z",
        "updatedAt" : "2018-05-31T18:48:24Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "a398c27a-f3af-4a7c-8dd6-bb0b8f91b3af",
        "parentId" : "4ba4189d-4414-40f3-a313-e87ae5511d45",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'm checking that the metric actually got removed from the registry. Previously, we didn't assert anything, which I guess validates that we didn't get any exceptions, but if we failed to remove the sensor, the test would still pass.",
        "createdAt" : "2018-06-01T16:03:30Z",
        "updatedAt" : "2018-06-01T16:03:30Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e7962e73f82f6f79604910e5f61d8b9820b8d3b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +64,68 @@        Sensor sensor1 = streamsMetrics.addSensor(sensorName, Sensor.RecordingLevel.DEBUG);\n        streamsMetrics.removeSensor(sensor1);\n        Assert.assertEquals(initialMetrics, metrics.metrics());\n\n        Sensor sensor1a = streamsMetrics.addSensor(sensorName, Sensor.RecordingLevel.DEBUG, sensor1);"
  },
  {
    "id" : "55e55ae1-fe89-4d37-ae6f-00c8daf2b34b",
    "prId" : 5450,
    "prUrl" : "https://github.com/apache/kafka/pull/5450#pullrequestreview-142918894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab4b01f0-e80d-4b12-bb51-7370e02a107a",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Testing the public interface instead of the (unused and now removed) internal one.",
        "createdAt" : "2018-08-02T18:46:48Z",
        "updatedAt" : "2018-08-03T22:17:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "b590af4726d2e4fc3bf1186676f6f9015388cd3e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +52,56 @@        streamsMetrics.removeSensor(sensor1a);\n\n        final Sensor sensor2 = streamsMetrics.addLatencyAndThroughputSensor(scope, entity, operation, Sensor.RecordingLevel.DEBUG);\n        streamsMetrics.removeSensor(sensor2);\n"
  }
]