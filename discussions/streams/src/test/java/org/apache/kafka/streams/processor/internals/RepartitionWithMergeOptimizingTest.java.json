[
  {
    "id" : "8a4180ef-6893-42b0-9ae3-1a816f3192cc",
    "prId" : 7472,
    "prUrl" : "https://github.com/apache/kafka/pull/7472#pullrequestreview-300376961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Hmm.. why the sub-topologies ordering was reversed here?",
        "createdAt" : "2019-10-10T19:10:15Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "555fae56-1c1c-43b3-8e79-3d0116c1ff20",
        "parentId" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "@guozhangwang I think this has to do with the fact that `TopologyDescription` sorts the topology strings",
        "createdAt" : "2019-10-10T20:03:53Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "d326fe30-fd32-4910-9cb8-51b702adb3e7",
        "parentId" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yeah I know, but the SubtopologyComparator sorts by the sub-topology-id here. What surprises me is that, those two sub-topologies actually switched their ids too -- usually we assign the ids to sub-topologies following the parsing order, right?",
        "createdAt" : "2019-10-10T20:27:06Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "e879da3a-488e-4c74-a5d3-625780488a55",
        "parentId" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "That's what I thought as well. But `makeNodeGroups` sorts by name first then iterates over the names and assigns sub-topology id. Which I think would explain it.",
        "createdAt" : "2019-10-10T21:18:30Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "f21a702b-5fa8-421c-8f01-a31527f65265",
        "parentId" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ah you're right.\r\n\r\nHmm I think we should fix the logic\r\n\r\n```\r\nfor (final String nodeName : Utils.sorted(allSourceNodes)) {\r\n            nodeGroupId = putNodeGroupName(nodeName, nodeGroupId, nodeGroups, rootToNodeGroup);\r\n        }\r\n```\r\n\r\nhere asap, to sort by the sink -> source relationship than by source node names; previously we do not expect the source node to be customized normally so that we can just rely on the internal suffix which is basically following the parsing order. But we do not need to get this fix in this PR.",
        "createdAt" : "2019-10-10T21:49:27Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6d8a2dbc-4103-4878-b80e-27d2e678dfe0",
        "parentId" : "b9e3cf44-8c6b-49a5-ade0-91794fb29c16",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I agree, I found it really confusing that the subtopologies were suddenly in a different, and seemingly incorrect, order (thanks for filing a ticket)",
        "createdAt" : "2019-10-10T22:03:05Z",
        "updatedAt" : "2019-10-10T22:46:57Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "47c574dd6bfa44f7ed3feed89b477a8abe330987",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +212,216 @@    private static final String EXPECTED_OPTIMIZED_TOPOLOGY = \"Topologies:\\n\"\n                                                              + \"   Sub-topology: 0\\n\"\n                                                              + \"    Source: KSTREAM-SOURCE-0000000020 (topics: [long-groupByKey-repartition])\\n\"\n                                                              + \"      --> long-count, string-count\\n\"\n                                                              + \"    Processor: string-count (stores: [string-store])\\n\""
  }
]