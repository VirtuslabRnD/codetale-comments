[
  {
    "id" : "eb3b8d03-e295-4889-9012-eaac0bd416a4",
    "prId" : 4410,
    "prUrl" : "https://github.com/apache/kafka/pull/4410#pullrequestreview-92713329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70e6a6a3-f5fe-4d7c-9b93-70ca92eed2c9",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we randomly shuffle the input list before calling `createTaskAssignor(...)` ?",
        "createdAt" : "2018-01-30T01:34:17Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "32e574fb-d8ea-4100-a302-1a2cbc3edd5c",
        "parentId" : "70e6a6a3-f5fe-4d7c-9b93-70ca92eed2c9",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "`createTaskAssignor` shuffles the passed in `TaskId`s internally",
        "createdAt" : "2018-01-30T20:40:34Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ca46d643897cc70a5fd92fa4d92b485e85f59bf",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +81,85 @@        createClient(p3, 2);\n\n        final StickyTaskAssignor taskAssignor = createTaskAssignor(task10, task11, task22, task20, task21, task12);\n        taskAssignor.assign(0);\n        assertActiveTaskTopicGroupIdsEvenlyDistributed();"
  },
  {
    "id" : "a2d921cd-067e-4384-bc69-51523c189f37",
    "prId" : 4410,
    "prUrl" : "https://github.com/apache/kafka/pull/4410#pullrequestreview-92713390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c84d7b30-b171-45fa-a93e-c9f1d2148a99",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "as above",
        "createdAt" : "2018-01-30T01:34:27Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9823b84e-13d5-4c44-8ecd-7aa45038b369",
        "parentId" : "c84d7b30-b171-45fa-a93e-c9f1d2148a99",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "same as above",
        "createdAt" : "2018-01-30T20:40:43Z",
        "updatedAt" : "2018-01-30T21:17:39Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ca46d643897cc70a5fd92fa4d92b485e85f59bf",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +92,96 @@        createClient(p3, 2);\n\n        final StickyTaskAssignor taskAssignor = createTaskAssignor(task20, task11, task12, task10, task21, task22);\n        taskAssignor.assign(1);\n        assertActiveTaskTopicGroupIdsEvenlyDistributed();"
  },
  {
    "id" : "5d6187d0-cfb8-48e8-a239-ec4f7c362c50",
    "prId" : 8252,
    "prUrl" : "https://github.com/apache/kafka/pull/8252#pullrequestreview-378864151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b7c723-e61b-426e-86e3-8768c95ed78c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Does this test pass on the current code base, or is it a consequence of this PR?",
        "createdAt" : "2020-03-20T21:44:04Z",
        "updatedAt" : "2020-03-20T23:32:09Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "49580ec3-a3f7-4ee0-a41d-108dad09772f",
        "parentId" : "90b7c723-e61b-426e-86e3-8768c95ed78c",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "It's testing the newly added `#preservePreviousTaskAssignment`: this is sort of a temporary hack to force the `StickyTaskAssignor` to return a \"completely sticky\" active task assignment, in the case the admin `listOffsets` request fails or times out.\r\n\r\nThe default `StickyTaskAssignor` behavior is unchanged in this PR, to leave the code in a stable state and avoid adding a huge refactoring of `StickyTaskAssignorTest` to an already large PR. ",
        "createdAt" : "2020-03-20T22:15:55Z",
        "updatedAt" : "2020-03-20T23:32:09Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "87bfccc7-8fb7-4920-bd42-c99147f6cc72",
        "parentId" : "90b7c723-e61b-426e-86e3-8768c95ed78c",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, thanks. The subtlety was a bit lost on me.",
        "createdAt" : "2020-03-20T23:40:17Z",
        "updatedAt" : "2020-03-20T23:40:17Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3dc2a52378efe7bb111982c725760bb4e7a1e9d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +676,680 @@\n    @Test\n    public void shouldViolateBalanceToPreserveActiveTaskStickiness() {\n        final ClientState c1 = createClientWithPreviousActiveTasks(p1, 1, task00, task01, task02);\n        final ClientState c2 = createClient(p2, 1);"
  },
  {
    "id" : "f7d2ae81-465a-4d3c-a883-589bcaed994c",
    "prId" : 10615,
    "prUrl" : "https://github.com/apache/kafka/pull/10615#pullrequestreview-649457935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fd12be7-4edd-439e-9775-4ebe7aa3de8b",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "It might seem weird that some of these tests started failing since this PR is just adding an unused API, but it's just because they're very rigid and tend to assert a specific task assignment rather than validating the assignment contract, eg that tasks are evenly balanced. I'm guessing that just adding a field to the TaskId class, even though it's unused, resulted in a different hash and therefore ordering in some unsorted data structure somewhere in the assignor. \r\n\r\nI did verify that the new test results are still correct within the expected constraints, then adapted the tests to be more durable rather than just modifying the expected task assignments",
        "createdAt" : "2021-04-30T06:37:53Z",
        "updatedAt" : "2021-04-30T06:37:53Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "10deeb52-3197-4f71-990d-5161f19046e1",
        "parentId" : "9fd12be7-4edd-439e-9775-4ebe7aa3de8b",
        "authorId" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "body" : "That makes sense, however you might be able not include the new field from the hash to prevent a chaotic assignment if you wanted",
        "createdAt" : "2021-04-30T15:34:04Z",
        "updatedAt" : "2021-04-30T15:35:03Z",
        "lastEditedBy" : "e4e906b3-d01a-4fe6-ad3e-ccca19a6df5c",
        "tags" : [
        ]
      },
      {
        "id" : "9c0f62f6-6554-4c51-ada5-617e85c77554",
        "parentId" : "9fd12be7-4edd-439e-9775-4ebe7aa3de8b",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "True, but we'll want to add it eventually so I just left this part in. I wanted to keep all the changes in `TaskId` to avoid merge hell and that included adding it to the hash. \r\n\r\nI see it as an opportunity to improve some of the tests that we should have done anyways",
        "createdAt" : "2021-04-30T17:59:03Z",
        "updatedAt" : "2021-04-30T17:59:04Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "f720d7b28d4c7ff21667ac2893e3ab7009a73abd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +167,171 @@        assertThat(assign(TASK_1_0, TASK_0_0, TASK_0_1, TASK_0_2, TASK_0_3, TASK_0_4, TASK_0_5), is(false));\n\n        final Set<TaskId> allTasks = new HashSet<>(asList(TASK_0_0, TASK_0_1, TASK_1_0, TASK_0_5, TASK_0_2, TASK_0_3, TASK_0_4));\n        final Set<TaskId> client1Tasks = clients.get(UUID_1).activeTasks();\n        final Set<TaskId> client2Tasks = clients.get(UUID_2).activeTasks();"
  }
]