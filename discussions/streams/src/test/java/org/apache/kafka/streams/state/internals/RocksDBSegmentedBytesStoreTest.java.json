[
  {
    "id" : "2c970375-4d8b-4404-9621-eaf8139fa7bb",
    "prId" : 3307,
    "prUrl" : "https://github.com/apache/kafka/pull/3307#pullrequestreview-102483716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869edd15-4c90-4024-82f7-e8b1b73e2f95",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "should we better create a JIRA for this -- a TODO might get lost",
        "createdAt" : "2018-03-01T05:15:38Z",
        "updatedAt" : "2018-03-08T22:16:54Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9a6961e5-190a-4723-afce-9af3947bdaac",
        "parentId" : "869edd15-4c90-4024-82f7-e8b1b73e2f95",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack.",
        "createdAt" : "2018-03-08T22:24:39Z",
        "updatedAt" : "2018-03-08T22:24:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1711c42e30e3fe20677282a33767cd005b63034",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +52,56 @@import static org.junit.Assert.assertTrue;\n\n// TODO: this test does not cover time window serdes\npublic class RocksDBSegmentedBytesStoreTest {\n"
  },
  {
    "id" : "bce6fb76-aedd-404f-b84a-966a8cf73fdf",
    "prId" : 4836,
    "prUrl" : "https://github.com/apache/kafka/pull/4836#pullrequestreview-117889538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d98ae2a3-7d90-47d5-9cc0-88cfe6534d9a",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I'd suggest creating the windows in this function based on the schema type at once, and use them everywhere in the test functions. Looking through the tests, I think three windows are good enough for all of them: `[10, 10]`, `[500, 1000]`, and `[1000, 1500]` as long as we reduce the retention time to 1000L.",
        "createdAt" : "2018-04-09T21:26:46Z",
        "updatedAt" : "2018-05-07T06:36:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "a7267bc0-6f64-482f-82b8-e7042e7ae440",
        "parentId" : "d98ae2a3-7d90-47d5-9cc0-88cfe6534d9a",
        "authorId" : "0fd320b6-e92b-497c-81a9-e7e8cb88d1d8",
        "body" : "done",
        "createdAt" : "2018-05-07T06:07:34Z",
        "updatedAt" : "2018-05-07T06:36:19Z",
        "lastEditedBy" : "0fd320b6-e92b-497c-81a9-e7e8cb88d1d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a411ad654c25d345c20041f8a9b6feec1d00f4df",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +102,106 @@\n        bytesStore = new RocksDBSegmentedBytesStore(storeName,\n                retention,\n                numSegments,\n                schema);"
  },
  {
    "id" : "70be6c8c-2616-4d56-ad25-3898afedf1d9",
    "prId" : 4836,
    "prUrl" : "https://github.com/apache/kafka/pull/4836#pullrequestreview-118088516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae3eed17-429b-4663-8e30-c1211433f100",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: define `KeyValue<Windowed<String>, Long> deserialized` once before the `if - else` statement then  you can call `results.add` once by moving the `results.add` to outside the `if - else`",
        "createdAt" : "2018-05-07T16:13:02Z",
        "updatedAt" : "2018-05-07T16:13:41Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "0b3421f6-910d-4ba7-9ede-6c16a92f2347",
        "parentId" : "ae3eed17-429b-4663-8e30-c1211433f100",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The deserialized is actually different since we need to differentiate between `timeWindowed` and `sessionWindowed`. It is partially because our signatures for time windows and session windows are not the same.",
        "createdAt" : "2018-05-07T17:56:43Z",
        "updatedAt" : "2018-05-07T17:56:43Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a411ad654c25d345c20041f8a9b6feec1d00f4df",
    "line" : 361,
    "diffHunk" : "@@ -1,1 +317,321 @@            final KeyValue<Bytes, byte[]> next = iterator.next();\n            if (schema instanceof WindowKeySchema) {\n                final KeyValue<Windowed<String>, Long> deserialized = KeyValue.pair(\n                        WindowKeySchema.fromStoreKey(next.key.get(), windowSizeForTimeWindow, stateSerdes),\n                        stateSerdes.valueDeserializer().deserialize(\"dummy\", next.value)"
  },
  {
    "id" : "cebe62de-42a4-40ff-9402-182fd97b7560",
    "prId" : 5276,
    "prUrl" : "https://github.com/apache/kafka/pull/5276#pullrequestreview-132591363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a575e287-c9bf-46eb-92d4-9fba43a9a978",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Nice test!",
        "createdAt" : "2018-06-27T20:16:37Z",
        "updatedAt" : "2018-07-16T22:20:43Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e494e0530e6dd1b2fcd46756363200e2f0181386",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +355,359 @@        for (final Segment segment: bytesStore.getSegments()) {\n            Assert.assertThat(segment.getOptions().level0FileNumCompactionTrigger(), equalTo(4));\n        }\n    }\n"
  },
  {
    "id" : "a10dfca8-bf76-404d-9b53-afacd80c41f0",
    "prId" : 5369,
    "prUrl" : "https://github.com/apache/kafka/pull/5369#pullrequestreview-145899823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54b2c7b0-5fe8-46b2-9459-b63d218f6605",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Hmm.. could we just add a `create()` function without register, if that is the only reason we need to explicitly `unregister` it later?",
        "createdAt" : "2018-08-13T22:40:10Z",
        "updatedAt" : "2018-08-13T22:40:22Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "4db58422-9aa9-4244-9bd8-0f5a4fb3e56c",
        "parentId" : "54b2c7b0-5fe8-46b2-9459-b63d218f6605",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "no, we need to both create and register it, or we won't capture any logs.",
        "createdAt" : "2018-08-14T00:10:14Z",
        "updatedAt" : "2018-08-14T00:10:15Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8513a0ef-d893-4988-b2f9-f21064d4b173",
        "parentId" : "54b2c7b0-5fe8-46b2-9459-b63d218f6605",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "n.b., re reason we have to do all the stuff (set to debug, create, register, unregister) inside the static methods is that it's normally forbidden to mess directly with log4j classes (because we should normally use slf4j as our interface).\r\n\r\nBut these tests are a special case, and in that context, it's safe to treat it as a given that the logger is actually log4j. Accordingly, I added an exception permitting us to use log4j classes inside the LogCaptureAppender.",
        "createdAt" : "2018-08-14T00:13:25Z",
        "updatedAt" : "2018-08-14T00:13:26Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "0678d787-bbe9-4dad-a363-4ac9f714811d",
        "parentId" : "54b2c7b0-5fe8-46b2-9459-b63d218f6605",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "also, the only reason we \"need\" to unregister it is to avoid polluting the rest of the tests. Otherwise, the appender would continue to capture logs until the JVM exits.",
        "createdAt" : "2018-08-14T00:35:29Z",
        "updatedAt" : "2018-08-14T00:35:29Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "adaf3201-4080-4140-9759-c84b874fe6cd",
        "parentId" : "54b2c7b0-5fe8-46b2-9459-b63d218f6605",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack, thanks!",
        "createdAt" : "2018-08-14T02:36:56Z",
        "updatedAt" : "2018-08-14T02:36:56Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "366bb5a8f10600baf3b4000238cce9f6a8a6ef7d",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +415,419 @@    public void shouldLogAndMeasureExpiredRecords() {\n        LogCaptureAppender.setClassLoggerToDebug(RocksDBSegmentedBytesStore.class);\n        final LogCaptureAppender appender = LogCaptureAppender.createAndRegister();\n\n        context.setStreamTime(Math.max(retention, segmentInterval) * 2);"
  }
]