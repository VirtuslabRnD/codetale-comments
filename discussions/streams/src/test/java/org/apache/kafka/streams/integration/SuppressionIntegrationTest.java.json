[
  {
    "id" : "b6921285-1987-491c-afc6-b8c513943980",
    "prId" : 5567,
    "prUrl" : "https://github.com/apache/kafka/pull/5567#pullrequestreview-157752210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "330182bf-71db-4baa-a763-0d2817a2c349",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: do you need `cleanStateAfterTest`?   In  `getCleanStartedStreams` you already call `driver.cleanUp` and delete all topics in `cleanStateBeforeTest` ",
        "createdAt" : "2018-09-06T15:34:05Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "4c13a2c5-4469-492a-b27f-a37d1491eab4",
        "parentId" : "330182bf-71db-4baa-a763-0d2817a2c349",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It's a belt-and-suspenders thing. We want it at the end so that the tests don't leave garbage around (for example the last test). I also added it at the beginning just in case a prior run got forcibly killed and never had a chance to clean up.",
        "createdAt" : "2018-09-06T15:48:47Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "57177d18-c48e-4d91-9e9c-3fea90eb279f",
        "parentId" : "330182bf-71db-4baa-a763-0d2817a2c349",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If you don't trust the regular cleanup, the question is why? Also, should we apply this patter to other tests, too?",
        "createdAt" : "2018-09-21T05:04:20Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2ef6f86e-561d-4495-bc60-3085f780ddc7",
        "parentId" : "330182bf-71db-4baa-a763-0d2817a2c349",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Specifically, the \"if\" I described above happens to me when I am debugging integration tests. If you set a breakpoint and then hit the \"stop\" button, it doesn't get a chance to run the normal \"after\" cleanup.\r\n\r\nDepending on whether the test uses a randomized state directory or not, this will either give you dirty state for the next run, or it'll just consume more and more disk space in `/tmp` until you run out. I have had both happen to me in the last few months.\r\n\r\nI do think we should use the same pattern for all the integration tests.",
        "createdAt" : "2018-09-21T15:50:06Z",
        "updatedAt" : "2018-09-24T14:28:33Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "035b26310e76216b502839a6b9f22bf1fc75fee2",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +166,170 @@    }\n\n    private void cleanStateAfterTest(final KafkaStreams driver) throws InterruptedException {\n        driver.cleanUp();\n        CLUSTER.deleteAllTopicsAndWait(30_000L);"
  },
  {
    "id" : "00bd4dd5-bb8e-46bb-8b02-82deee216f82",
    "prId" : 5687,
    "prUrl" : "https://github.com/apache/kafka/pull/5687#pullrequestreview-158373945",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d66a1dd4-f335-416f-8c4e-8f6ba28c9d0e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Why SCALE_FACTOR is COMMIT_INTERVAL * 2, is it just to make sure at least one commit is called during this interval of time?",
        "createdAt" : "2018-09-25T00:56:22Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "efceadf1-d6ea-4704-aa74-44f7566c6a3d",
        "parentId" : "d66a1dd4-f335-416f-8c4e-8f6ba28c9d0e",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yes. It doesn't actually matter whether or not a commit in called in between the various times used in tests (I've tested it both ways). But it seemed like a reasonable concern that the commit _might_ mess up the suppression in some way, so I went ahead and made sure the tests included commits.",
        "createdAt" : "2018-09-25T02:10:42Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "4b734f27-58f1-442a-8f97-cbd2e239ebbd",
        "parentId" : "d66a1dd4-f335-416f-8c4e-8f6ba28c9d0e",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Sounds good.",
        "createdAt" : "2018-09-25T04:27:48Z",
        "updatedAt" : "2018-09-25T17:39:14Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b40354ce9f18459f56b1bc8ca8249a52d4ec9cef",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +87,91 @@    private static final int COMMIT_INTERVAL = 100;\n    private static final int SCALE_FACTOR = COMMIT_INTERVAL * 2;\n    private static final long TIMEOUT_MS = 30_000L;\n\n    @Ignore"
  },
  {
    "id" : "83d79473-b326-4cb9-b6ec-081cc7098c28",
    "prId" : 5693,
    "prUrl" : "https://github.com/apache/kafka/pull/5693#pullrequestreview-159604175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff8fb2e-ce6f-4614-b43b-66705c517a98",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: this can be simplified to:\r\n`TestUtils.waitForCondition(() -> driver.state() == KafkaStreams.State.ERROR, TIMEOUT_MS, \"Streams didn't shutdown in error state\");`",
        "createdAt" : "2018-09-27T18:31:04Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "95190530-bb88-4374-a985-5c4ad6723c5a",
        "parentId" : "1ff8fb2e-ce6f-4614-b43b-66705c517a98",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "AH, right. I looked for something like that, but I was looking in `IntegrationTestUtils`. Thanks.",
        "createdAt" : "2018-09-27T19:21:55Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "c5b673bb-cd3a-4fdd-8b6b-b7790d7345fe",
        "parentId" : "1ff8fb2e-ce6f-4614-b43b-66705c517a98",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ok, I've updated it.",
        "createdAt" : "2018-09-27T19:26:00Z",
        "updatedAt" : "2018-10-02T03:20:17Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddd78d9ad6826da2d821584232f2750d022ef34a",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +559,563 @@    }\n\n    private void verifyErrorShutdown(final KafkaStreams driver) throws InterruptedException {\n        waitForCondition(() -> !driver.state().isRunning(), TIMEOUT_MS, \"Streams didn't shut down.\");\n        assertThat(driver.state(), is(KafkaStreams.State.ERROR));"
  },
  {
    "id" : "0730d867-dff1-48d5-b432-92d7d7b723fc",
    "prId" : 5724,
    "prUrl" : "https://github.com/apache/kafka/pull/5724#pullrequestreview-160578888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b33c0bad-14a4-4b80-9925-2995e4b77d0e",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "same here.",
        "createdAt" : "2018-10-02T06:54:32Z",
        "updatedAt" : "2018-10-03T00:05:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "d405ac999adf4136de26b1e533c627ca00ed3238",
    "line" : 456,
    "diffHunk" : "@@ -1,1 +531,535 @@                mkEntry(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, ((Deserializer<Long>) LONG_DESERIALIZER).getClass().getName())\n            )\n        );\n        IntegrationTestUtils.verifyKeyValueTimestamps(properties, topic, keyValueTimestamps);\n"
  }
]