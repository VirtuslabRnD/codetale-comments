[
  {
    "id" : "8ccedaae-5ddb-4ac4-99f8-1db7edf21b86",
    "prId" : 6056,
    "prUrl" : "https://github.com/apache/kafka/pull/6056#pullrequestreview-189558168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7412311-22ed-4e8a-b64c-8df3b09cfe5e",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Relaxing the throws declaration tightens up the line, but does it make the test more mysterious?",
        "createdAt" : "2019-01-03T16:05:10Z",
        "updatedAt" : "2019-01-03T23:02:43Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "030990f3-6be2-4a2b-aead-f5629b98ac4c",
        "parentId" : "f7412311-22ed-4e8a-b64c-8df3b09cfe5e",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "No (compare my comment on the other PR). If any exception occurs, the test fails anyway.",
        "createdAt" : "2019-01-03T22:58:32Z",
        "updatedAt" : "2019-01-03T23:02:43Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2e8005cb-df67-46c9-b342-2a3c8b3dfe96",
        "parentId" : "f7412311-22ed-4e8a-b64c-8df3b09cfe5e",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I buy it. Thanks!",
        "createdAt" : "2019-01-04T22:59:01Z",
        "updatedAt" : "2019-01-04T22:59:02Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "03c9f753f724d0bdebb4c3a2892b8956f525b345",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +301,305 @@\n    @Test\n    public void shouldCreateSourceAndSinkNodesForRepartitioningTopic() throws Exception {\n        final String topic1 = \"topic1\";\n        final String storeName1 = \"storeName1\";"
  },
  {
    "id" : "c646e9a0-6e8b-4460-94c9-cf4e97b81709",
    "prId" : 9156,
    "prUrl" : "https://github.com/apache/kafka/pull/9156#pullrequestreview-489824695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a81f7730-593a-4afe-a1e4-9e094febe8ee",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Seems the `Matererialized.as(\"fred\")` parameter is missing?",
        "createdAt" : "2020-09-09T19:38:38Z",
        "updatedAt" : "2020-09-25T12:04:48Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "8bd0bc2e-7fae-4be9-88f9-7949e4423eb4",
        "parentId" : "a81f7730-593a-4afe-a1e4-9e094febe8ee",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "Why? This test is about forced materialization. If we pass that parameter, then it would work even if not forced, right?",
        "createdAt" : "2020-09-16T15:49:22Z",
        "updatedAt" : "2020-09-25T12:04:48Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      },
      {
        "id" : "4b1d2c7a-3a15-4525-b1ae-a78fcab73fe5",
        "parentId" : "a81f7730-593a-4afe-a1e4-9e094febe8ee",
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "Rename test to make it clear its force materialized due to sending old values, \r\n\r\n`shouldSetSendingOldValuesIfMaterializationForcedInternally`",
        "createdAt" : "2020-09-16T17:01:47Z",
        "updatedAt" : "2020-09-25T12:04:48Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a8d7f36b7e70de9442cab0be4b91d9a068c3d95",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +397,401 @@\n        final KTableImpl<String, String, String> table =\n            (KTableImpl<String, String, String>) builder.table(\"topic1\", consumed);\n\n        table.enableSendingOldValues(true);"
  }
]