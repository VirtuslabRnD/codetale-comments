[
  {
    "id" : "e098280c-3457-4018-bb6c-6f625acac7d3",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115894464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac203545-0a94-439f-91e4-6a58e5a2ba1f",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "There's now a `Utils.mkProperties` method you can use (in conjunction with `mkMap`) to set these at the declaration site instead of setting them (redundantly) before every test. Then you won't need the `@Before` at all.",
        "createdAt" : "2018-04-26T18:10:15Z",
        "updatedAt" : "2018-04-26T19:12:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "eca0c033-4c7e-4e7e-8d07-d057acc11bb5",
        "parentId" : "ac203545-0a94-439f-91e4-6a58e5a2ba1f",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Yes, that will make it a bit cleaner",
        "createdAt" : "2018-04-27T10:44:24Z",
        "updatedAt" : "2018-04-27T10:44:25Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +68,72 @@        props.setProperty(StreamsConfig.STATE_DIR_CONFIG, TestUtils.tempDirectory().getAbsolutePath());\n        props.setProperty(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n        props.setProperty(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n    }\n"
  },
  {
    "id" : "8a72fd8f-1eec-4bba-b07d-c7a96b8d3085",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115894975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55b4fb7d-4644-44df-9b1d-fd85d317e188",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This cleanup seems a bit awkward. It assumes that tests will initialize the driver but not close it, which seems like a strange abdication of responsibility.\r\n\r\nI think it would be cleaner and clearer to get rid of the driver field entirely. Tests that need the driver already initialize it; they can declare it as a local variable as well. Then, they clearly need to close it as well.\r\n\r\nSince `TopologyTestDriver` is `AutoCloseable`, one option is to declare the driver in try-with-resources style:\r\n```java\r\n@Test public void myTest() {\r\n  try (final TopologyTestDriver driver) {\r\n    // the test code\r\n  }\r\n}\r\n```",
        "createdAt" : "2018-04-26T18:18:33Z",
        "updatedAt" : "2018-04-26T19:12:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "09386a34-9a66-43d6-8427-bbfea49b23c8",
        "parentId" : "55b4fb7d-4644-44df-9b1d-fd85d317e188",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Yes, this is definitely better. Using try-with-resources and `Utils.mkProperties` we won't need `@Before` and `@After`",
        "createdAt" : "2018-04-27T10:46:46Z",
        "updatedAt" : "2018-04-27T10:46:46Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +78,82 @@        }\n        driver = null;\n    }\n\n    @Test(expected = TopologyException.class)"
  },
  {
    "id" : "7eac6c4e-7e30-4de3-ae85-fc22dd5a35b9",
    "prId" : 5163,
    "prUrl" : "https://github.com/apache/kafka/pull/5163#pullrequestreview-127647803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "865ec469-e6f5-4f80-84a8-6bc30c24e9c2",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we add this check to `shouldReuseSourceTopicAsChangelogsWithOptimization20`, too?",
        "createdAt" : "2018-06-10T20:46:01Z",
        "updatedAt" : "2018-06-11T17:05:19Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a1b82816-e597-44a9-9ffe-4465239d89ca",
        "parentId" : "865ec469-e6f5-4f80-84a8-6bc30c24e9c2",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "ack.",
        "createdAt" : "2018-06-11T16:40:10Z",
        "updatedAt" : "2018-06-11T17:05:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca40f17ef652a219d23b27ed11e2e8d9dbb748ca",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +303,307 @@        assertThat(internalTopologyBuilder.build().storeToChangelogTopic(), equalTo(Collections.singletonMap(\"store\", \"appId-store-changelog\")));\n\n        assertThat(internalTopologyBuilder.getStateStores().keySet(), equalTo(Collections.singleton(\"store\")));\n\n        assertThat(internalTopologyBuilder.getStateStores().get(\"store\").loggingEnabled(), equalTo(true));"
  },
  {
    "id" : "d28c65c7-9fd1-4d28-8398-871f63de78fc",
    "prId" : 5201,
    "prUrl" : "https://github.com/apache/kafka/pull/5201#pullrequestreview-142222852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5ef3e7b-d8c3-49c6-a2f9-bdbd3570573f",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Should we just do `final ProcessorTopology topology = builder.build();` and remove the line below? Same elsewhere.",
        "createdAt" : "2018-07-31T06:02:11Z",
        "updatedAt" : "2018-08-01T19:43:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "356286f9-4ae8-4eeb-930a-2e2c54a46bd5",
        "parentId" : "f5ef3e7b-d8c3-49c6-a2f9-bdbd3570573f",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Actually, we still need both The `StreamsBuilder.build()` call returns a `Topology` while the `InternalTopologyBuilder.build()` returns a `ProcessoryTopology`.   \r\n\r\n\r\nWhile the method names seem to be a bit overloaded, the terminology and methods pre-date this PR, so maybe we can do a follow-up PR to look at renaming and clarifying things some.",
        "createdAt" : "2018-08-01T01:41:57Z",
        "updatedAt" : "2018-08-01T19:43:39Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "8ba508b6-e6f7-4d32-8b64-e6b156a5d846",
        "parentId" : "f5ef3e7b-d8c3-49c6-a2f9-bdbd3570573f",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ack, thanks for clarifying.",
        "createdAt" : "2018-08-01T04:13:11Z",
        "updatedAt" : "2018-08-01T19:43:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b49c4f31e1be598f1898d9d78dc0df7ecf8ab4c1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@        final KTable<Bytes, String> filteredKTable = builder.<Bytes, String>table(\"table-topic\").filter(MockPredicate.<Bytes, String>allGoodPredicate());\n        builder.<Bytes, String>stream(\"stream-topic\").join(filteredKTable, MockValueJoiner.TOSTRING_JOINER);\n        builder.build();\n\n        final ProcessorTopology topology = builder.internalTopologyBuilder.build();"
  }
]