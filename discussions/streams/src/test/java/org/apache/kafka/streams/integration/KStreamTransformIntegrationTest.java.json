[
  {
    "id" : "a51dd426-bdda-40db-a5ea-01f2989d6770",
    "prId" : 6824,
    "prUrl" : "https://github.com/apache/kafka/pull/6824#pullrequestreview-411332512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b04669-f622-4a60-8289-c69fbbd2a123",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If you change the indention, move the first `new KeyValue(1, 1)` to it's own line.",
        "createdAt" : "2020-05-13T23:10:03Z",
        "updatedAt" : "2020-05-27T02:01:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23fbd6a633193d0ea5cfcb0734446a248b7cf09",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +83,87 @@            inputTopic.pipeKeyValueList(Arrays.asList(\n                new KeyValue<>(1, 1),\n                new KeyValue<>(2, 2),\n                new KeyValue<>(3, 3),\n                new KeyValue<>(2, 1),"
  },
  {
    "id" : "b0a56e86-3d04-492e-bfc6-e34a9b65fd35",
    "prId" : 6824,
    "prUrl" : "https://github.com/apache/kafka/pull/6824#pullrequestreview-418682397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2123604-fb88-47c6-9022-f3da5edf6dfc",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Not your fault, but I couldn't figure out how this test actually works. It doesn't look like we ever clear `results` between runs. What's going on here?",
        "createdAt" : "2020-05-26T16:18:10Z",
        "updatedAt" : "2020-05-27T02:01:21Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "3d478047-ac68-4e16-b035-b1f982dcbedd",
        "parentId" : "a2123604-fb88-47c6-9022-f3da5edf6dfc",
        "authorId" : "9af9fedf-5bac-44a0-895d-96aad0032528",
        "body" : "I would assume it's a JUnit test that uses the [standard lifecycle](https://stackoverflow.com/a/19381563/1031507) where the class is recreated for every test.  I haven't looked into the test running infrastructure at all though so maybe because this is `@Category({IntegrationTest.class})` you would expect some other behavior?",
        "createdAt" : "2020-05-26T18:10:31Z",
        "updatedAt" : "2020-05-27T02:01:21Z",
        "lastEditedBy" : "9af9fedf-5bac-44a0-895d-96aad0032528",
        "tags" : [
        ]
      },
      {
        "id" : "6b75c945-ac6c-448e-aa3b-b309a0f87833",
        "parentId" : "a2123604-fb88-47c6-9022-f3da5edf6dfc",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Huh, I never knew that. After reading into it a little more, I can see why it works, but it's also not guaranteed to work for all Runner implementations; the docs just say this is the behavior of the _default_ implementation.\r\n\r\nAnyway, like I said, it predates your PR, so I wouldn't request any changes. I just thought you might have some insight since you had modified the test. And you did! ;)\r\n\r\nThanks.",
        "createdAt" : "2020-05-26T21:20:02Z",
        "updatedAt" : "2020-05-27T02:01:21Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23fbd6a633193d0ea5cfcb0734446a248b7cf09",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +61,65 @@    private final String stateStoreName = \"myTransformState\";\n    private final List<KeyValue<Integer, Integer>> results = new ArrayList<>();\n    private final ForeachAction<Integer, Integer> accumulateExpected = (key, value) -> results.add(KeyValue.pair(key, value));\n    private KStream<Integer, Integer> stream;\n"
  }
]