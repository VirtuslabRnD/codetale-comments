[
  {
    "id" : "e88d6351-3d95-49f2-9cb4-4d7ee5b4859d",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-279350523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ac0c613-f0c0-4b6e-b310-724e05d75c16",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Maybe consider:\r\n\r\n```suggestion\r\n        final CountDownLatch latch = new CountDownLatch(1);\r\n        kafkaStreams.setStateListener((newState, oldState) -> {\r\n            if (oldState == KafkaStreams.State.REBALANCING && newState == KafkaStreams.State.RUNNING) {\r\n                latch.countDown();\r\n            }\r\n        });\r\n        kafkaStreams.start();\r\n        try {\r\n            latch.await(IntegrationTestUtils.DEFAULT_TIMEOUT, TimeUnit.MILLISECONDS);\r\n        } catch (final InterruptedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n```\r\n\r\nThen, this method won't return until Streams is actually started, which we've seen can increase test stability.",
        "createdAt" : "2019-08-22T17:38:10Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "6de5d7b4-32ed-4e97-92c3-401a4f7531d0",
        "parentId" : "9ac0c613-f0c0-4b6e-b310-724e05d75c16",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "Done",
        "createdAt" : "2019-08-25T19:50:33Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 795,
    "diffHunk" : "@@ -1,1 +793,797 @@        });\n\n        kafkaStreams.start();\n\n        latch.await(IntegrationTestUtils.DEFAULT_TIMEOUT, TimeUnit.MILLISECONDS);"
  },
  {
    "id" : "218d36cd-d1da-458b-8976-7f9f66199615",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-391609570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "For this particular test, it seems we could detect the issue during topology `build()` already? Ie, we could do an additional early check? If we think it's worth doing, we should do it in follow up PR to not drag this PR any longer. \\cc @vvcephei (If yes, we could change this test from an integration test to a unit test)",
        "createdAt" : "2020-04-01T05:14:55Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2c894ab3-628d-4924-ab28-d3498d7674b5",
        "parentId" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "I'll create followup ticket on that.",
        "createdAt" : "2020-04-03T22:55:41Z",
        "updatedAt" : "2020-04-07T14:50:24Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      },
      {
        "id" : "f39ac927-fb0d-46de-a46d-7284b15bf207",
        "parentId" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, I'd agree with checking as early as possible in the special cases where we can know the partition counts statically. But also agree with doing it in a follow-on ticket, since it's kind of a nice-to-have.",
        "createdAt" : "2020-04-07T17:39:46Z",
        "updatedAt" : "2020-04-07T17:39:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "ed3c075c-bb32-4276-a712-8ef13ced4186",
        "parentId" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Cool. @lkokhreidze did you create a ticket already? (Just want to make sure we don't drop this on the floor.)",
        "createdAt" : "2020-04-09T23:36:34Z",
        "updatedAt" : "2020-04-09T23:36:34Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6b917afb-c3f2-4757-af18-711121478c21",
        "parentId" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "authorId" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "body" : "@mjsax yes, here it is https://issues.apache.org/jira/browse/KAFKA-9850",
        "createdAt" : "2020-04-10T16:39:43Z",
        "updatedAt" : "2020-04-10T16:39:43Z",
        "lastEditedBy" : "f616d937-9d20-463c-aba4-ff4af295195c",
        "tags" : [
        ]
      },
      {
        "id" : "14df27fa-0cc5-4e6d-991b-5aa6566ee272",
        "parentId" : "87e1bf65-c8cb-4f46-a963-dabbd5973953",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Thank you!",
        "createdAt" : "2020-04-10T19:04:51Z",
        "updatedAt" : "2020-04-10T19:04:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +168,172 @@        builder.stream(inputTopic, Consumed.with(Serdes.Integer(), Serdes.String()))\n               .repartition(inputTopicRepartitioned)\n               .join(topicBStream, (value1, value2) -> value2, JoinWindows.of(Duration.ofSeconds(10)))\n               .to(outputTopic);\n"
  },
  {
    "id" : "b732a350-9620-4ee6-b75e-7a6098465db9",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-391198473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b011ddbc-2385-4759-b14a-a28562359476",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Seems unnesseary complex? A simple \r\n```\r\n        return Arrays.asList(new String[][] {\r\n            {StreamsConfig.OPTIMIZE},\r\n            {StreamsConfig.NO_OPTIMIZATION}\r\n        });\r\n```\r\nwould do, too :)\r\n\r\n(Feel free to ignore the comment.)",
        "createdAt" : "2020-04-09T23:47:20Z",
        "updatedAt" : "2020-04-09T23:47:20Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@              .forEach(x -> values.add(new Object[]{x}));\n\n        return values;\n    }\n"
  },
  {
    "id" : "f68e28c7-ddae-4e82-a9c3-684b99836aeb",
    "prId" : 7170,
    "prUrl" : "https://github.com/apache/kafka/pull/7170#pullrequestreview-391199013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e2e2bc3-18fb-41d2-bd0b-f096a59ceda8",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "A simple\r\n```\r\n    @Parameter\r\n    public String topologyOptimization;\r\n```\r\n\r\nWould be sufficient instead of adding a constructor and those lines could go into `before()`.\r\n\r\n(As above, feel free to ignore this comment.)",
        "createdAt" : "2020-04-09T23:49:15Z",
        "updatedAt" : "2020-04-09T23:49:15Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2bcdfe487ec13f41f4516d6bee6a1847f6d4ce2",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@    }\n\n    public KStreamRepartitionIntegrationTest(final String topologyOptimization) {\n        streamsConfiguration = new Properties();\n        kafkaStreamsInstances = new ArrayList<>();"
  }
]