[
  {
    "id" : "42c5f2de-66cf-4fb9-af6a-4f0686c48ff7",
    "prId" : 4651,
    "prUrl" : "https://github.com/apache/kafka/pull/4651#pullrequestreview-101721395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f619673-17aa-443a-87ed-db60d91ce962",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we mock the consumer that it would throw an exception if `resume()` is called? Or would `verify` below fail for this case anyway?",
        "createdAt" : "2018-03-06T20:59:42Z",
        "updatedAt" : "2018-03-15T09:23:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6430ff83-88cd-4774-b4df-22adfbb41dea",
        "parentId" : "6f619673-17aa-443a-87ed-db60d91ce962",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "@mjsax  if `resume()` is called on the consumer `verify` will fail the test.",
        "createdAt" : "2018-03-06T21:23:54Z",
        "updatedAt" : "2018-03-15T09:23:10Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "501954cc57da1ecd2b49f2f084b9d73e34c4b857",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +623,627 @@        EasyMock.replay(active, consumer);\n\n        // shouldn't invoke `resume` method in consumer\n        taskManager.updateNewAndRestoringTasks();\n        EasyMock.verify(consumer);"
  },
  {
    "id" : "b8b1285d-4f2a-4fc1-a13a-a05ba82b22ab",
    "prId" : 8187,
    "prUrl" : "https://github.com/apache/kafka/pull/8187#pullrequestreview-366117465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "967f67c3-fab4-44b6-a032-76ab3326f1cf",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thank you for the added tests!",
        "createdAt" : "2020-02-28T01:51:03Z",
        "updatedAt" : "2020-02-28T04:50:31Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "abbb2e38df0ff7c250e3b77588c7cc62b22bb4de",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +760,764 @@\n    @Test\n    public void shouldThrowRuntimeExceptionWhenEncounteredUnknownExceptionDuringTaskClose() {\n        final StateMachineTask migratedTask01 = new StateMachineTask(taskId01, taskId01Partitions, false) {\n            @Override"
  },
  {
    "id" : "96ddf950-b971-43c0-b9ae-a61e93828c33",
    "prId" : 8213,
    "prUrl" : "https://github.com/apache/kafka/pull/8213#pullrequestreview-369883525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16f729b1-0107-4a0f-85c6-b5b56e52ed01",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Are the tests added in TaskManager only trying for more coverage? @vvcephei ",
        "createdAt" : "2020-03-05T17:29:08Z",
        "updatedAt" : "2020-03-05T18:59:47Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "89fa22e9-957a-4aa1-92cb-5f11cb0aa500",
        "parentId" : "16f729b1-0107-4a0f-85c6-b5b56e52ed01",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "yep, that's right.",
        "createdAt" : "2020-03-05T20:17:51Z",
        "updatedAt" : "2020-03-05T20:17:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "2eb596b0721bcf1908d19f811d96e5121ca4e41d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@import org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.common.KafkaException;\nimport org.apache.kafka.common.Metric;\nimport org.apache.kafka.common.MetricName;\nimport org.apache.kafka.common.TopicPartition;"
  },
  {
    "id" : "9b79ca7c-bdc8-4c18-8519-88248b02323a",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-369184653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "805715da-1bc0-4451-9392-671eb4e817b6",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "We should also verify the thrown cause",
        "createdAt" : "2020-03-05T01:18:20Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 872,
    "diffHunk" : "@@ -1,1 +1950,1954 @@\n        assertThat(thrown.getCause(), instanceOf(TimeoutException.class));\n        assertThat(thrown.getMessage(), equalTo(\"Timed out while committing offsets via consumer\"));\n        assertThat(task01.state(), is(Task.State.CREATED));\n    }"
  },
  {
    "id" : "85a89f90-08d3-4581-8e45-4672a99e13aa",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-376323985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63e0c4ea-da9d-4ac1-988b-1115cab85efc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Same here, for verifying the thrown cause",
        "createdAt" : "2020-03-05T01:18:46Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "44a541b6-98ba-4be0-ae55-912aa97bb8b6",
        "parentId" : "63e0c4ea-da9d-4ac1-988b-1115cab85efc",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a meta comment: since we moved the commit logic out of the tasks into task-manager already, we should add the check that:\r\n\r\n1) inside the task manager, if the commit failed with fatal errors, the corresponding follow-up steps (postCommit, suspend, closeClean) should be skipped, and the exception is thrown out of the task-manager to thread\r\n2) if commit failed with fenced errors, follow-up steps are also skipped (tasks state should be un-changed) and the task-migration exception is thrown out of the task-manager.",
        "createdAt" : "2020-03-17T19:25:38Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 852,
    "diffHunk" : "@@ -1,1 +1930,1934 @@\n        assertThat(thrown.getCause(), instanceOf(CommitFailedException.class));\n        assertThat(thrown.getMessage(), equalTo(\"Consumer committing offsets failed, indicating the corresponding thread is no longer part of the group; it means all tasks belonging to this thread should be migrated.\"));\n        assertThat(task01.state(), is(Task.State.CREATED));\n    }"
  },
  {
    "id" : "c0d671cc-a1b7-471f-ae97-100c422a37b7",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-373216265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1985ea29-3279-430a-b622-b6dfffaf1f9f",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we verify the assignment stack and lost stack separately, by doing `handleAssignment` verify first before calling `handleLost`",
        "createdAt" : "2020-03-11T22:20:40Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "3f046bb8-b679-4ff0-9811-cbe10c43a554",
        "parentId" : "1985ea29-3279-430a-b622-b6dfffaf1f9f",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure if I can follow? The comments just mark which setup calls belongs to which test call, nothing more. All setup is done upfront before we call the actually methods under test.",
        "createdAt" : "2020-03-12T00:48:34Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +428,432 @@        final Task task01 = new StateMachineTask(taskId01, taskId01Partitions, false);\n\n        // `handleAssignment`\n        expectRestoreToBeCompleted(consumer, changeLogReader);\n        expect(activeTaskCreator.createTasks(anyObject(), eq(taskId00Assignment))).andReturn(singletonList(task00)).anyTimes();"
  },
  {
    "id" : "45aeca36-c929-4489-bf5e-2a28bef5e598",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-374326338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please add a similar unit test as the one above but where `stateDirectory.listTaskDirectories()` returns `null` instead of an empty array. ",
        "createdAt" : "2020-03-11T12:24:45Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "da263d84-9e9c-4b50-a411-eaf80dd96531",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think we should actually just make `listTaskDirectories()` always return an empty `File[]` instead of null in some cases and `new File[0]` in others, as we treat both cases the same. WDYT?",
        "createdAt" : "2020-03-11T18:11:05Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "eaf5f37a-282d-4af2-8f93-b1e1327b7bd8",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Yeah, I agree with you. I checked the code and it should be OK to always return an empty array. However, could you open a second PR for it that we merge before this one to keep this PR focussed. ",
        "createdAt" : "2020-03-12T08:08:58Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "fd461950-bc71-4427-bf9f-814e4cc974c7",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm not sure it's really worth doing as a separate PR, it's about 10 lines of code and is only really motivated by the work in this KIP?",
        "createdAt" : "2020-03-12T21:01:59Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "18c7ae4d-22af-41b2-9f94-a8e9a855f404",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Fair enough",
        "createdAt" : "2020-03-13T14:06:08Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +176,180 @@        verify(stateDirectory);\n        assertTrue(taskManager.lockedTaskDirectories().isEmpty());\n    }\n\n    @Test"
  },
  {
    "id" : "38df7718-0ed8-471a-a7ee-e4a9d699ad35",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-372708595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01622e49-6131-4640-9e41-7b688c416f75",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please also verify `stateDirectory.unlock(\"0_2\")`. Only verifying `lockedTaskDirectories()` seems too weak to me. ",
        "createdAt" : "2020-03-11T14:51:23Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +216,220 @@\n        taskManager.handleRebalanceComplete();\n        assertThat(taskManager.lockedTaskDirectories(), is(mkSet(taskId00, taskId01)));\n        verify(stateDirectory);\n    }"
  },
  {
    "id" : "673db8af-7384-4373-829e-821cc9a6f54c",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-373373719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Could you add a test for `taskManager.getTaskOffsetSums()` when there are no locked task directories, i.e., `lockedTaskDirectories` is empty? ",
        "createdAt" : "2020-03-11T15:07:03Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "8048109e-a54a-4fa6-abbc-f18d4179a175",
        "parentId" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I believe that's the same as what `shouldNotReportOffsetSumsForTaskWeCantLock` is testing, or did you have something different in mind?",
        "createdAt" : "2020-03-11T18:41:55Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "00ecce65-c738-4f21-a209-050f48684ec6",
        "parentId" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Oh, I guess I missed `shouldNotReportOffsetSumsForTaskWeCantLock()`. No, I did not have something different in mind.",
        "createdAt" : "2020-03-12T08:58:51Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +320,324 @@        verify(stateDirectory);\n    }\n\n    @Test\n    public void shouldPinOffsetSumToLongMaxValueInCaseOfOverflow() throws IOException {"
  },
  {
    "id" : "8e90972e-a55d-4886-85ea-e1946a91ad82",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-373032517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf87e2a1-f6ea-4e5c-b86e-c1ff4ffb6383",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Could add a test for an offset that is negative but not `-1`? And another test with multiple offsets of different types, i.e., negative, unknown, etc. The latter could be the composite case, we already talked about. ",
        "createdAt" : "2020-03-11T15:11:57Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "5099c54a-7ff6-4d98-94ca-555870e10212",
        "parentId" : "cf87e2a1-f6ea-4e5c-b86e-c1ff4ffb6383",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Sure, I'll add one based on the current code and can update it if we decide to allow overflow",
        "createdAt" : "2020-03-11T18:46:02Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +339,343 @@        assertThat(taskManager.getTaskOffsetSums(), is(expectedOffsetSums));\n    }\n\n    @Test\n    public void shouldCloseActiveUnassignedSuspendedTasksWhenClosingRevokedTasks() {"
  }
]