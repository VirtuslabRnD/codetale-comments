[
  {
    "id" : "42c5f2de-66cf-4fb9-af6a-4f0686c48ff7",
    "prId" : 4651,
    "prUrl" : "https://github.com/apache/kafka/pull/4651#pullrequestreview-101721395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f619673-17aa-443a-87ed-db60d91ce962",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Should we mock the consumer that it would throw an exception if `resume()` is called? Or would `verify` below fail for this case anyway?",
        "createdAt" : "2018-03-06T20:59:42Z",
        "updatedAt" : "2018-03-15T09:23:10Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6430ff83-88cd-4774-b4df-22adfbb41dea",
        "parentId" : "6f619673-17aa-443a-87ed-db60d91ce962",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "@mjsax  if `resume()` is called on the consumer `verify` will fail the test.",
        "createdAt" : "2018-03-06T21:23:54Z",
        "updatedAt" : "2018-03-15T09:23:10Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "501954cc57da1ecd2b49f2f084b9d73e34c4b857",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +623,627 @@        EasyMock.replay(active, consumer);\n\n        // shouldn't invoke `resume` method in consumer\n        taskManager.updateNewAndRestoringTasks();\n        EasyMock.verify(consumer);"
  },
  {
    "id" : "b8b1285d-4f2a-4fc1-a13a-a05ba82b22ab",
    "prId" : 8187,
    "prUrl" : "https://github.com/apache/kafka/pull/8187#pullrequestreview-366117465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "967f67c3-fab4-44b6-a032-76ab3326f1cf",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thank you for the added tests!",
        "createdAt" : "2020-02-28T01:51:03Z",
        "updatedAt" : "2020-02-28T04:50:31Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "abbb2e38df0ff7c250e3b77588c7cc62b22bb4de",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +760,764 @@\n    @Test\n    public void shouldThrowRuntimeExceptionWhenEncounteredUnknownExceptionDuringTaskClose() {\n        final StateMachineTask migratedTask01 = new StateMachineTask(taskId01, taskId01Partitions, false) {\n            @Override"
  },
  {
    "id" : "96ddf950-b971-43c0-b9ae-a61e93828c33",
    "prId" : 8213,
    "prUrl" : "https://github.com/apache/kafka/pull/8213#pullrequestreview-369883525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16f729b1-0107-4a0f-85c6-b5b56e52ed01",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Are the tests added in TaskManager only trying for more coverage? @vvcephei ",
        "createdAt" : "2020-03-05T17:29:08Z",
        "updatedAt" : "2020-03-05T18:59:47Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "89fa22e9-957a-4aa1-92cb-5f11cb0aa500",
        "parentId" : "16f729b1-0107-4a0f-85c6-b5b56e52ed01",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "yep, that's right.",
        "createdAt" : "2020-03-05T20:17:51Z",
        "updatedAt" : "2020-03-05T20:17:51Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "2eb596b0721bcf1908d19f811d96e5121ca4e41d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@import org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.common.KafkaException;\nimport org.apache.kafka.common.Metric;\nimport org.apache.kafka.common.MetricName;\nimport org.apache.kafka.common.TopicPartition;"
  },
  {
    "id" : "9b79ca7c-bdc8-4c18-8519-88248b02323a",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-369184653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "805715da-1bc0-4451-9392-671eb4e817b6",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "We should also verify the thrown cause",
        "createdAt" : "2020-03-05T01:18:20Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 872,
    "diffHunk" : "@@ -1,1 +1950,1954 @@\n        assertThat(thrown.getCause(), instanceOf(TimeoutException.class));\n        assertThat(thrown.getMessage(), equalTo(\"Timed out while committing offsets via consumer\"));\n        assertThat(task01.state(), is(Task.State.CREATED));\n    }"
  },
  {
    "id" : "85a89f90-08d3-4581-8e45-4672a99e13aa",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-376323985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63e0c4ea-da9d-4ac1-988b-1115cab85efc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Same here, for verifying the thrown cause",
        "createdAt" : "2020-03-05T01:18:46Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "44a541b6-98ba-4be0-ae55-912aa97bb8b6",
        "parentId" : "63e0c4ea-da9d-4ac1-988b-1115cab85efc",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is a meta comment: since we moved the commit logic out of the tasks into task-manager already, we should add the check that:\r\n\r\n1) inside the task manager, if the commit failed with fatal errors, the corresponding follow-up steps (postCommit, suspend, closeClean) should be skipped, and the exception is thrown out of the task-manager to thread\r\n2) if commit failed with fenced errors, follow-up steps are also skipped (tasks state should be un-changed) and the task-migration exception is thrown out of the task-manager.",
        "createdAt" : "2020-03-17T19:25:38Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 852,
    "diffHunk" : "@@ -1,1 +1930,1934 @@\n        assertThat(thrown.getCause(), instanceOf(CommitFailedException.class));\n        assertThat(thrown.getMessage(), equalTo(\"Consumer committing offsets failed, indicating the corresponding thread is no longer part of the group; it means all tasks belonging to this thread should be migrated.\"));\n        assertThat(task01.state(), is(Task.State.CREATED));\n    }"
  },
  {
    "id" : "c0d671cc-a1b7-471f-ae97-100c422a37b7",
    "prId" : 8218,
    "prUrl" : "https://github.com/apache/kafka/pull/8218#pullrequestreview-373216265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1985ea29-3279-430a-b622-b6dfffaf1f9f",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could we verify the assignment stack and lost stack separately, by doing `handleAssignment` verify first before calling `handleLost`",
        "createdAt" : "2020-03-11T22:20:40Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "3f046bb8-b679-4ff0-9811-cbe10c43a554",
        "parentId" : "1985ea29-3279-430a-b622-b6dfffaf1f9f",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Not sure if I can follow? The comments just mark which setup calls belongs to which test call, nothing more. All setup is done upfront before we call the actually methods under test.",
        "createdAt" : "2020-03-12T00:48:34Z",
        "updatedAt" : "2020-03-19T08:49:21Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b03a487a518756f7c9acd1f3177b12b407867d5",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +428,432 @@        final Task task01 = new StateMachineTask(taskId01, taskId01Partitions, false);\n\n        // `handleAssignment`\n        expectRestoreToBeCompleted(consumer, changeLogReader);\n        expect(activeTaskCreator.createTasks(anyObject(), eq(taskId00Assignment))).andReturn(singletonList(task00)).anyTimes();"
  },
  {
    "id" : "45aeca36-c929-4489-bf5e-2a28bef5e598",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-374326338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please add a similar unit test as the one above but where `stateDirectory.listTaskDirectories()` returns `null` instead of an empty array. ",
        "createdAt" : "2020-03-11T12:24:45Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "da263d84-9e9c-4b50-a411-eaf80dd96531",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think we should actually just make `listTaskDirectories()` always return an empty `File[]` instead of null in some cases and `new File[0]` in others, as we treat both cases the same. WDYT?",
        "createdAt" : "2020-03-11T18:11:05Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "eaf5f37a-282d-4af2-8f93-b1e1327b7bd8",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Yeah, I agree with you. I checked the code and it should be OK to always return an empty array. However, could you open a second PR for it that we merge before this one to keep this PR focussed. ",
        "createdAt" : "2020-03-12T08:08:58Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "fd461950-bc71-4427-bf9f-814e4cc974c7",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I'm not sure it's really worth doing as a separate PR, it's about 10 lines of code and is only really motivated by the work in this KIP?",
        "createdAt" : "2020-03-12T21:01:59Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "18c7ae4d-22af-41b2-9f94-a8e9a855f404",
        "parentId" : "9109e594-423f-4b5d-aa7e-4ae44fc7a37f",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Fair enough",
        "createdAt" : "2020-03-13T14:06:08Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +176,180 @@        verify(stateDirectory);\n        assertTrue(taskManager.lockedTaskDirectories().isEmpty());\n    }\n\n    @Test"
  },
  {
    "id" : "38df7718-0ed8-471a-a7ee-e4a9d699ad35",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-372708595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01622e49-6131-4640-9e41-7b688c416f75",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Please also verify `stateDirectory.unlock(\"0_2\")`. Only verifying `lockedTaskDirectories()` seems too weak to me. ",
        "createdAt" : "2020-03-11T14:51:23Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +216,220 @@\n        taskManager.handleRebalanceComplete();\n        assertThat(taskManager.lockedTaskDirectories(), is(mkSet(taskId00, taskId01)));\n        verify(stateDirectory);\n    }"
  },
  {
    "id" : "673db8af-7384-4373-829e-821cc9a6f54c",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-373373719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Could you add a test for `taskManager.getTaskOffsetSums()` when there are no locked task directories, i.e., `lockedTaskDirectories` is empty? ",
        "createdAt" : "2020-03-11T15:07:03Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "8048109e-a54a-4fa6-abbc-f18d4179a175",
        "parentId" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I believe that's the same as what `shouldNotReportOffsetSumsForTaskWeCantLock` is testing, or did you have something different in mind?",
        "createdAt" : "2020-03-11T18:41:55Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "00ecce65-c738-4f21-a209-050f48684ec6",
        "parentId" : "1f2878ea-92f8-44a7-b530-3b420a499936",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Oh, I guess I missed `shouldNotReportOffsetSumsForTaskWeCantLock()`. No, I did not have something different in mind.",
        "createdAt" : "2020-03-12T08:58:51Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +320,324 @@        verify(stateDirectory);\n    }\n\n    @Test\n    public void shouldPinOffsetSumToLongMaxValueInCaseOfOverflow() throws IOException {"
  },
  {
    "id" : "8e90972e-a55d-4886-85ea-e1946a91ad82",
    "prId" : 8246,
    "prUrl" : "https://github.com/apache/kafka/pull/8246#pullrequestreview-373032517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf87e2a1-f6ea-4e5c-b86e-c1ff4ffb6383",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "req: Could add a test for an offset that is negative but not `-1`? And another test with multiple offsets of different types, i.e., negative, unknown, etc. The latter could be the composite case, we already talked about. ",
        "createdAt" : "2020-03-11T15:11:57Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "5099c54a-7ff6-4d98-94ca-555870e10212",
        "parentId" : "cf87e2a1-f6ea-4e5c-b86e-c1ff4ffb6383",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Sure, I'll add one based on the current code and can update it if we decide to allow overflow",
        "createdAt" : "2020-03-11T18:46:02Z",
        "updatedAt" : "2020-03-13T22:09:33Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "a757918bbbf7c4b27aa29720e540a5603f890b1e",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +339,343 @@        assertThat(taskManager.getTaskOffsetSums(), is(expectedOffsetSums));\n    }\n\n    @Test\n    public void shouldCloseActiveUnassignedSuspendedTasksWhenClosingRevokedTasks() {"
  },
  {
    "id" : "8f103eb1-eaef-4367-a8f9-6b4088695e6a",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378070096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a5164d6-b220-47b5-9b77-7e4ea812adbe",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Add a second task to allow testing per-task commit vs thread-producer commit",
        "createdAt" : "2020-03-19T20:29:39Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +1511,1515 @@        task02.setCommittableOffsetsAndMetadata(offsetsT02);\n        task02.setCommitNeeded();\n        taskManager.tasks().put(taskId02, task02);\n\n        reset(consumer);"
  },
  {
    "id" : "de025a5b-a4b5-4d06-a26e-e5ad10ad85de",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378689394",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6a9334b-b776-4875-9ddc-3e6cab15ec26",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "nit: is there a way to verify a function is never called? Like `consumer.commit()`",
        "createdAt" : "2020-03-20T16:21:35Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "0a505ec2-4ae1-4c5b-a5e1-6470f3ecf248",
        "parentId" : "f6a9334b-b776-4875-9ddc-3e6cab15ec26",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This is verified automatically. As we don't register an expected call, the test would fail if it would be called.",
        "createdAt" : "2020-03-20T17:43:06Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +1519,1523 @@        taskManager.commitAll();\n\n        verify(producer, consumer);\n    }\n"
  },
  {
    "id" : "dcb8bd8e-c488-47c1-9f1e-74946ef4c9ef",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378690369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b45fc799-7f22-4b92-9cf3-e76231a8d7e8",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "What does task03 and task04 work for?",
        "createdAt" : "2020-03-20T16:24:20Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "cbd97a20-04a7-486b-b982-f3fc60928393",
        "parentId" : "b45fc799-7f22-4b92-9cf3-e76231a8d7e8",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We have `commitNeeded` and `commitRequested` flags. To test all four possible combination how those flags can be set, we need 4 tasks, ie, we close missing test coverage adding new tasks for those cases.",
        "createdAt" : "2020-03-20T17:44:32Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 312,
    "diffHunk" : "@@ -1,1 +1691,1695 @@        final Map<TopicPartition, OffsetAndMetadata> offsets2 = singletonMap(t1p2, new OffsetAndMetadata(2L, null));\n        task02.setCommittableOffsetsAndMetadata(offsets2);\n        final StateMachineTask task03 = new StateMachineTask(taskId03, taskId03Partitions, true);\n        final StateMachineTask task04 = new StateMachineTask(taskId10, taskId10Partitions, false);\n"
  },
  {
    "id" : "2a3513c2-4789-4522-8d7d-f25677e8c569",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378819632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Could we add a few more unit tests for:\r\n\r\n1. When handling Revocation, we commit all tasks.\r\n2. When handling Assignment (where we may close some tasks), we commit all tasks.\r\n3. When committing upon user-requested, we commit all tasks.\r\n\r\nPardon me if they are already covered, and just lmk :)",
        "createdAt" : "2020-03-20T17:45:38Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "db29d7a7-2d72-4f43-85d8-1b8a1539cfbb",
        "parentId" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Added new test for (1). Case (3) is covered by modified test `shouldMaybeCommitAllActiveTasksThatNeedCommit` (formally `shouldMaybeCommitActiveTasks`).\r\n\r\nFor case (2), I am not sure if we need to change anything? `handleAssignment()` is not changed in this PR, because we either resume a task or close it: if we resume a task there is nothing to be committed from my understanding and thus it seems sufficient to only commit tasks that we close?",
        "createdAt" : "2020-03-20T18:34:20Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a072e2da-b89f-4cae-82ee-8fa800e58f17",
        "parentId" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "With 2) under eos-beta, when committing the txn we would avoidably commit the sent records from other tasks; so I'm wondering if we should also commit them as well, otherwise some outgoing records would be included in the txn while the incoming partition offsets would not be committed. ",
        "createdAt" : "2020-03-20T18:49:00Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "84e67cb0-3205-45f0-a491-f6a2e4c93e90",
        "parentId" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack. My miss-conception was that a task would be in SUSPENDED state when we resume it (and thus it would have been committed already). However, it seems that `resume()` can also happen for a RUNNING task, for which case it's a no-op. Will fix it.",
        "createdAt" : "2020-03-20T19:11:03Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c0df14fc-f2e7-4c56-81aa-4e4213e6a415",
        "parentId" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Yeah with KIP-429, during the rebalance some tasks would still be processed and hence records being sent out; so the resuming tasks could be in RUNNING state as well.",
        "createdAt" : "2020-03-20T19:13:07Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "a9f1846f-f187-4191-8108-a230c1a4f3c7",
        "parentId" : "e2a7d75b-c2d9-4084-8fac-6e7d95ea5f57",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Ack. Fixed `TaskManager#handleAssignment()` and added new tests for case (2)",
        "createdAt" : "2020-03-20T21:22:30Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@import org.apache.kafka.clients.consumer.CommitFailedException;\nimport org.apache.kafka.clients.consumer.Consumer;\nimport org.apache.kafka.clients.consumer.ConsumerGroupMetadata;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.OffsetAndMetadata;"
  },
  {
    "id" : "3a0bdf6c-0333-41e3-bc19-2606d7394dba",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378888791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d8adf2f-34e8-4bcf-bb91-3fd10411da49",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "nit: we could use mkMap helper here as well.",
        "createdAt" : "2020-03-20T23:50:23Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "dc864ec0-b8e7-4514-bc1c-46aa5fe15ffc",
        "parentId" : "5d8adf2f-34e8-4bcf-bb91-3fd10411da49",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "What is the advantage as we only need a empty map?",
        "createdAt" : "2020-03-21T01:49:42Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "211a59c7-202b-4307-84cb-3ec4f57e275d",
        "parentId" : "5d8adf2f-34e8-4bcf-bb91-3fd10411da49",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "ah, sg",
        "createdAt" : "2020-03-21T03:36:44Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +868,872 @@        final StateMachineTask task10 = new StateMachineTask(taskId10, taskId10Partitions, false);\n\n        final Map<TopicPartition, OffsetAndMetadata> expectedCommittedOffsets = new HashMap<>();\n        expectedCommittedOffsets.putAll(offsets00);\n        expectedCommittedOffsets.putAll(offsets01);"
  },
  {
    "id" : "de5acc91-1b0a-4777-b259-d7b216bf7999",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378882196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6659d58b-6b49-406b-a418-b7522ad1a911",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Could you elaborate why we check commitNeeded for task00 and task01, while check for commitPrepared for task02 and task10 here? I'm needing some clarification here.",
        "createdAt" : "2020-03-20T23:59:33Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "95ed62a9-07d4-4494-8869-b81a9aee1b4d",
        "parentId" : "6659d58b-6b49-406b-a418-b7522ad1a911",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "For `task00` and `task01` the `commitNeeded` flag is set to `true`. Both are committed, thus `prepareCommit()` should be called as well as `postCommit()` -- a check if `commitNeeded` was reset to `false` covers both.\r\n\r\nFor `task02` and `task03` the `commitNeeded` flag is `false` though and both should not be committed -- hence, we check of `prepareCommit` was not called.\r\n\r\nDoes this make sense?",
        "createdAt" : "2020-03-21T01:53:07Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +785,789 @@        taskManager.handleAssignment(assignmentActive, assignmentStandby);\n\n        assertThat(task00.commitNeeded, is(false));\n        assertThat(task01.commitNeeded, is(false));\n        assertThat(task02.commitPrepared, is(false));"
  },
  {
    "id" : "bd333651-759f-4209-9c88-38dd2ab1e629",
    "prId" : 8318,
    "prUrl" : "https://github.com/apache/kafka/pull/8318#pullrequestreview-378882369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4db5be4-21b7-4b57-9079-b68889a9c2ce",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Why we don't check task00 here?",
        "createdAt" : "2020-03-21T00:00:49Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "a2e2b593-c846-4bb8-9c14-a7623511947a",
        "parentId" : "d4db5be4-21b7-4b57-9079-b68889a9c2ce",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Because `task00` is the task that is revoked and thus closed -- hence, `prepareCommit()` is not called for `task00` but only `prepareClose()`. We could add a check for prepareClose but it's a \"distraction\" as the test verifies that non-closed tasks are committed (there is another test that verifies that closed tasks are committed and closed already).\r\n\r\nDoes this make sense?",
        "createdAt" : "2020-03-21T01:55:49Z",
        "updatedAt" : "2020-03-21T18:49:58Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59154ab4ee7c4f24706911fb37b8118510d1a3a1",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +901,905 @@        taskManager.handleRevocation(taskId00Partitions);\n\n        assertThat(task01.commitPrepared, is(true));\n        assertThat(task01.commitNeeded, is(false));\n        assertThat(task02.commitPrepared, is(false));"
  },
  {
    "id" : "731a90d3-3755-49a2-98e6-f600d78bf86c",
    "prId" : 8327,
    "prUrl" : "https://github.com/apache/kafka/pull/8327#pullrequestreview-379956394",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d402fe4-5de5-4ba2-b0c9-4cd90f8e7795",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: why use `Task` for `task00` but `StateMachineTask` for `task01` ? Can you unify this (it a little confusing)?",
        "createdAt" : "2020-03-24T00:27:29Z",
        "updatedAt" : "2020-03-24T03:46:30Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "e12e27e6-0713-4f75-bf9a-9deb8cfbc296",
        "parentId" : "2d402fe4-5de5-4ba2-b0c9-4cd90f8e7795",
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Because we don't have `setCommitNeeded` for `Task` I guess?",
        "createdAt" : "2020-03-24T02:17:18Z",
        "updatedAt" : "2020-03-24T03:46:30Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de186888785fdd16bc40ad29cd7f94de997b336",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1220,1224 @@        final Task task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n\n        final StateMachineTask task01 = new StateMachineTask(taskId01, taskId01Partitions, true);\n        task01.setCommittableOffsetsAndMetadata(singletonMap(t1p1, new OffsetAndMetadata(0L, null)));\n        task01.setCommitNeeded();"
  },
  {
    "id" : "7a5e7170-eca3-430a-98a1-595067eea83a",
    "prId" : 8327,
    "prUrl" : "https://github.com/apache/kafka/pull/8327#pullrequestreview-379923757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee1042e8-998d-4aa2-aaea-5aceb307aae6",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "To make sure we close _all_ tasks (not just the task that causes the error), we should add one more task, that we also close and ensure that it state goes to CLOSED?",
        "createdAt" : "2020-03-24T00:30:33Z",
        "updatedAt" : "2020-03-24T03:46:30Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de186888785fdd16bc40ad29cd7f94de997b336",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +1251,1255 @@\n        assertThat(task00.state(), is(Task.State.CREATED));\n        assertThat(task01.state(), is(Task.State.CLOSED));\n        assertThat(task02.state(), is(Task.State.CLOSED));\n"
  },
  {
    "id" : "5236bb64-c351-4839-aa3f-8d888c43b623",
    "prId" : 8331,
    "prUrl" : "https://github.com/apache/kafka/pull/8331#pullrequestreview-379940491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6821b91-b558-4ecb-adec-5330dd2cabb2",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Is this test added for the fix in this PR?",
        "createdAt" : "2020-03-23T17:19:08Z",
        "updatedAt" : "2020-03-30T21:41:00Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "7356fb6f-9198-40c1-81bd-9dc6ee3ce1ae",
        "parentId" : "d6821b91-b558-4ecb-adec-5330dd2cabb2",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes, as the name suggests :)",
        "createdAt" : "2020-03-24T01:24:35Z",
        "updatedAt" : "2020-03-30T21:41:00Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c01468233fc24b2deb017a7bdf80dc2c644d92fc",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +460,464 @@\n    @Test\n    public void shouldReInitializeThreadProducerOnHandleLostAllIfEosBetaEnabled() {\n        activeTaskCreator.reInitializeThreadProducer();\n        expectLastCall();"
  },
  {
    "id" : "2fe806aa-2be1-4d62-b43d-91fee59fa9bf",
    "prId" : 8358,
    "prUrl" : "https://github.com/apache/kafka/pull/8358#pullrequestreview-382566997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ffc38b6-09c8-409b-8a45-335fa4b25ac3",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Not sure if there's a better way to put it, but I was a little surprised to see \"we would stop early\". I guess it didn't even occur to me that the task manager would block or something if there's no records to process.",
        "createdAt" : "2020-03-26T21:08:53Z",
        "updatedAt" : "2020-03-27T05:53:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "1fbe8b2d-07f5-4deb-95f1-354b7a31e573",
        "parentId" : "3ffc38b6-09c8-409b-8a45-335fa4b25ac3",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Oh maybe I did not put it clearly: let's say for a single task, if we call process(N) but there are only M < N records in the buffer, then of course we would process only M records.\r\n\r\nIf there are multiple tasks, say, 2, if we call process(N) and task1 has N1 > N and task2 has N2 < N, then we would process a total of N + N2 in a single call, and in that case we would not \"stop\" but continues to process; we would only break the loop when ALL tasks have no records to process. This test is just to verify that part.",
        "createdAt" : "2020-03-26T23:30:31Z",
        "updatedAt" : "2020-03-27T05:53:18Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "78498756-b28d-4b9a-9390-74e4eebab60b",
        "parentId" : "3ffc38b6-09c8-409b-8a45-335fa4b25ac3",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah, ok... To be clear, I was only confused about the comment, not the behavior. I think the comment was \"obvious\" to me only because this is exactly what this PR is about. But coming back in a year, I'm sure I'll appreciate the comment.",
        "createdAt" : "2020-03-27T04:01:01Z",
        "updatedAt" : "2020-03-27T05:53:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "990ec8a34eb22dd13b0120c288f4161007f6ae46",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +1849,1853 @@        assertThat(taskManager.process(3, 0L), is(6));\n\n        // check that if there's no records proccssible, we would stop early\n        assertThat(taskManager.process(3, 0L), is(5));\n        assertThat(taskManager.process(3, 0L), is(0));"
  },
  {
    "id" : "64f742ed-ff7a-4284-a974-f44f29b20168",
    "prId" : 8463,
    "prUrl" : "https://github.com/apache/kafka/pull/8463#pullrequestreview-391717406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dba21fa-a319-4a83-b4f4-8c973a35779b",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Verified that this test does fail on `verify(changelogReader)` without this fix",
        "createdAt" : "2020-04-10T23:31:50Z",
        "updatedAt" : "2020-04-10T23:32:52Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "571e454d-6054-460f-862e-013f64a954bd",
        "parentId" : "4dba21fa-a319-4a83-b4f4-8c973a35779b",
        "authorId" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "body" : "Great to see this test case !",
        "createdAt" : "2020-04-11T00:32:07Z",
        "updatedAt" : "2020-04-11T00:32:07Z",
        "lastEditedBy" : "0e2392fc-5c22-4c17-aa96-3025239a3098",
        "tags" : [
        ]
      },
      {
        "id" : "67665b3c-0ef8-4450-9c0a-c469cf2ef8fa",
        "parentId" : "4dba21fa-a319-4a83-b4f4-8c973a35779b",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "It's 500% easier to write tests for this thanks to the refactoring work @guozhangwang did for `TaskManager` and `TaskManagerTest` 🙂 ",
        "createdAt" : "2020-04-11T00:34:20Z",
        "updatedAt" : "2020-04-11T00:34:20Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8b15773b7d1eb96e8804a90e29cb27d390f6b3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +887,891 @@\n    @Test\n    public void shouldCleanupAnyTasksClosedAsDirtyAfterCommitException() {\n        final StateMachineTask task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n        final Map<TopicPartition, OffsetAndMetadata> offsets00 = singletonMap(t1p0, new OffsetAndMetadata(0L, null));"
  }
]