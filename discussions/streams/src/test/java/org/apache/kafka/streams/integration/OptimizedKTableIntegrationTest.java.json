[
  {
    "id" : "42019aef-5bf0-45d1-a4dd-d20ee7060c32",
    "prId" : 7238,
    "prUrl" : "https://github.com/apache/kafka/pull/7238#pullrequestreview-287129366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Before we produce new messages, should we verify that the store was migrated correctly and contains `store.get(key), is(equalTo(batch1NumMessages - 1))` ?",
        "createdAt" : "2019-09-06T18:55:36Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "67c1f668-d395-4ef6-b8a9-149f21da088a",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "Yes, we can do that with a time limited loop that queries for that state.",
        "createdAt" : "2019-09-06T19:17:22Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "58a7289a-3586-48f2-b838-15b4659036cf",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "@mjsax You may have uncovered yet another bug (BUG 6?) in optimized graph failover! I cannot seem to get any value for the key after failover. So, looks like this may involve yet more significant investigation. Thanks for the idea!",
        "createdAt" : "2019-09-06T20:28:57Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "c289ef04-e2cf-4381-a148-171d0aa868fe",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "This test fails with non-optimized graphs too. I hope I'm doing something wrong...",
        "createdAt" : "2019-09-06T20:38:20Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "a2770de8-816c-4a60-96db-42920e93ed7c",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "*whew*... Apparently 10 seconds was not long enough to wait for the store to become available after failure. If I wait a bit longer it finally becomes available. Seems long though? This is the case for both non-optimized and optimized...",
        "createdAt" : "2019-09-06T20:58:52Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "f8988e6f-f1fa-439b-aded-739a0505387e",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If case of failure, we detect the failure only after `session.timeout.ms` (default 10 seconds) hit -- to speed up the test, we could decrease the session timeout via `StreamsConfig`",
        "createdAt" : "2019-09-10T23:15:56Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "51142edb-b8a8-4c48-8495-8a656fe290c6",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "I had the same exact thought. My only reservation was tweaking config too much might start to deviate too much from expected use. In other words, I'm totally for this if have a reasonable value in mind. I was thinking about 1s?",
        "createdAt" : "2019-09-11T15:59:38Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "7d7ccbe2-71ac-4381-b3e4-47ac11d363c8",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "body" : "I'm going to try with 1s. If you have a better value please let me know as soon as you get a chance :)",
        "createdAt" : "2019-09-11T16:23:35Z",
        "updatedAt" : "2019-09-11T16:35:57Z",
        "lastEditedBy" : "12543f19-3885-429e-8f77-e0f748c56d1f",
        "tags" : [
        ]
      },
      {
        "id" : "b02b2455-2447-4950-a98f-acf9313603b2",
        "parentId" : "408dbc24-7049-4c79-95ea-4226e3f5605b",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We can try that -- but we need to reduce `HEARTBEAT_INTERVAL_MS_CONFIG`, too, for this case -- its default is 3 seconds and it must be smaller than session timeout.\r\n\r\nChecking some existing tests, we have some that set them to 500ms / 1sec. Some other test reduce session timeout to 2 or 5 seconds...",
        "createdAt" : "2019-09-11T23:40:35Z",
        "updatedAt" : "2019-09-11T23:40:36Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b14fbdce1f31b17070923325715f68c0238d43d",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@        final int totalNumMessages = batch1NumMessages + batch2NumMessages;\n\n        produceValueRange(key, batch1NumMessages, totalNumMessages);\n\n        // Assert that all messages in the second batch were processed in a timely manner"
  }
]