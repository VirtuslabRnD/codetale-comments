[
  {
    "id" : "d1e4edaf-1398-4780-bf79-0e45da828830",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115690115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8761334-2a33-4ce9-85c8-a16903872079",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think we ditch the before/after methods as I previously recommended.",
        "createdAt" : "2018-04-26T18:48:50Z",
        "updatedAt" : "2018-04-26T19:12:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +99,103 @@            driver.close();\n        }\n        driver = null;\n    }\n"
  },
  {
    "id" : "5e9de61e-5e39-4f33-8583-f1078fd61870",
    "prId" : 7927,
    "prUrl" : "https://github.com/apache/kafka/pull/7927#pullrequestreview-340910887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48d87568-9581-47a5-a516-1094c0b2547a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Cannot use import as we cannot suppress deprecation warning on import (similar in the tests).",
        "createdAt" : "2020-01-10T01:21:30Z",
        "updatedAt" : "2020-01-10T01:21:30Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b54aaa0b587b31dacb84d171d6e472d9fa7a6da",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +86,90 @@    @SuppressWarnings(\"deprecation\")\n    private final org.apache.kafka.streams.kstream.Serialized<String, String> stringSerialized =\n        org.apache.kafka.streams.kstream.Serialized.with(Serdes.String(), Serdes.String());\n\n    private final MockProcessorSupplier<String, String> processorSupplier = new MockProcessorSupplier<>();"
  },
  {
    "id" : "8b43e10a-cd9d-4222-bb3d-b887ec763679",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eee15cf-3452-4740-9b0b-4961e0bd75cc",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "For this case, the input `KStream` key was not changed, and thus no repartition topic should be created. We should only get a single sub-topology.",
        "createdAt" : "2020-01-28T22:42:46Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +2383,2387 @@                \"    Sink: KSTREAM-SINK-0000000004 (topic: output)\\n\" +\n                \"      <-- KTABLE-TOSTREAM-0000000003\\n\\n\")\n        );\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {"
  },
  {
    "id" : "92712b0b-efa7-4196-a866-72596082c9a6",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba164f41-7148-46b8-8af0-5911e8f4473f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Might be good, to add a verification step for the `topologyDescription` similar to above (base on past experience, I am a little paranoid to make sure we do the correct thing when building the topology).",
        "createdAt" : "2020-01-28T22:47:07Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +2433,2437 @@                \"      <-- KSTREAM-SOURCE-0000000000\\n\\n\")\n        );\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> inputTopic ="
  },
  {
    "id" : "5513965e-ad5f-49bc-81bc-faff432747b1",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baca715f-2604-4ca1-9578-4f73079d01c3",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above: add a `topologyDescription` verification step -- we should see a repartition topic. We should also not get a state store when reading the data from the repartition topic into the `KTable` for this case.",
        "createdAt" : "2020-01-28T22:56:05Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +2459,2463 @@            .toTable()\n            .toStream().to(output);\n\n        final Topology topology = builder.build();\n"
  },
  {
    "id" : "c795d15c-2983-4945-bf89-d241b06ca2a3",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3f2693e-01f5-44bb-a4ed-7f785dd97ec1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above: let's add a `topologyDescription` verification step (sam the the other tests below).",
        "createdAt" : "2020-01-28T22:58:44Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +2536,2540 @@\n        final Topology topology = builder.build(props);\n\n        final String topologyDescription = topology.describe().toString();\n"
  },
  {
    "id" : "e07ecc01-025f-4d1d-af4b-c4d0d7f906df",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bf47e5c-0a75-4ed6-b405-432e6eb7174c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It would be better to verify the whole `TopologyDescription` -- as you reuse this method for two different test, you could pass the \"expectedTopology\" String as parameter into this method.\r\n\r\nHowever, reading the test code below, the case for table-table join, for which the right-hand table is _updated_ to trigger a join result is missing (this case only makes sense for table-table join, as for stream-table join the right hand side table updates only update the rhs table, but never trigger a join result). Hence, I think it would be best to not share code but have two test and add the missing case for the table-table join.",
        "createdAt" : "2020-01-29T18:35:53Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 498,
    "diffHunk" : "@@ -1,1 +2760,2764 @@            TopologyWrapper.getInternalTopologyBuilder(topology).copartitionGroups();\n\n        assertEquals(1, copartitionGroups.size());\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(topology, props)) {"
  },
  {
    "id" : "d77586ea-abf7-46f7-9892-6902c66879b1",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a102d4aa-4f5d-4373-9e8f-5954f0342683",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If you use the default `props` instead of creating a custom one, we don't need to pass in string serdes here. (cf. my comment below)",
        "createdAt" : "2020-01-29T18:48:19Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 553,
    "diffHunk" : "@@ -1,1 +2815,2819 @@            .stream(input, consumed)\n            .toTable()\n            .groupBy(MockMapper.selectValueKeyValueMapper(), Grouped.with(Serdes.String(), Serdes.String()))\n            .count()\n            .toStream()"
  },
  {
    "id" : "f7e1cdca-e284-4249-ba5a-3d71d623adab",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e4dd40-db65-47d4-8831-18919a6eb879",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As for all tests, we should verify `topologyDescription`",
        "createdAt" : "2020-01-29T18:49:45Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 544,
    "diffHunk" : "@@ -1,1 +2806,2810 @@\n    @Test\n    public void shouldSupportGroupByCountWithKStreamToKTable() {\n        final Consumed<String, String> consumed = Consumed.with(Serdes.String(), Serdes.String());\n        final StreamsBuilder builder = new StreamsBuilder();"
  }
]