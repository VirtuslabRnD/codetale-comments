[
  {
    "id" : "d1e4edaf-1398-4780-bf79-0e45da828830",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115690115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8761334-2a33-4ce9-85c8-a16903872079",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think we ditch the before/after methods as I previously recommended.",
        "createdAt" : "2018-04-26T18:48:50Z",
        "updatedAt" : "2018-04-26T19:12:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +99,103 @@            driver.close();\n        }\n        driver = null;\n    }\n"
  },
  {
    "id" : "5e9de61e-5e39-4f33-8583-f1078fd61870",
    "prId" : 7927,
    "prUrl" : "https://github.com/apache/kafka/pull/7927#pullrequestreview-340910887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48d87568-9581-47a5-a516-1094c0b2547a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Cannot use import as we cannot suppress deprecation warning on import (similar in the tests).",
        "createdAt" : "2020-01-10T01:21:30Z",
        "updatedAt" : "2020-01-10T01:21:30Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b54aaa0b587b31dacb84d171d6e472d9fa7a6da",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +86,90 @@    @SuppressWarnings(\"deprecation\")\n    private final org.apache.kafka.streams.kstream.Serialized<String, String> stringSerialized =\n        org.apache.kafka.streams.kstream.Serialized.with(Serdes.String(), Serdes.String());\n\n    private final MockProcessorSupplier<String, String> processorSupplier = new MockProcessorSupplier<>();"
  },
  {
    "id" : "8b43e10a-cd9d-4222-bb3d-b887ec763679",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eee15cf-3452-4740-9b0b-4961e0bd75cc",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "For this case, the input `KStream` key was not changed, and thus no repartition topic should be created. We should only get a single sub-topology.",
        "createdAt" : "2020-01-28T22:42:46Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +2383,2387 @@                \"    Sink: KSTREAM-SINK-0000000004 (topic: output)\\n\" +\n                \"      <-- KTABLE-TOSTREAM-0000000003\\n\\n\")\n        );\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {"
  },
  {
    "id" : "92712b0b-efa7-4196-a866-72596082c9a6",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba164f41-7148-46b8-8af0-5911e8f4473f",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Might be good, to add a verification step for the `topologyDescription` similar to above (base on past experience, I am a little paranoid to make sure we do the correct thing when building the topology).",
        "createdAt" : "2020-01-28T22:47:07Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +2433,2437 @@                \"      <-- KSTREAM-SOURCE-0000000000\\n\\n\")\n        );\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(builder.build(), props)) {\n            final TestInputTopic<String, String> inputTopic ="
  },
  {
    "id" : "5513965e-ad5f-49bc-81bc-faff432747b1",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baca715f-2604-4ca1-9578-4f73079d01c3",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above: add a `topologyDescription` verification step -- we should see a repartition topic. We should also not get a state store when reading the data from the repartition topic into the `KTable` for this case.",
        "createdAt" : "2020-01-28T22:56:05Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +2459,2463 @@            .toTable()\n            .toStream().to(output);\n\n        final Topology topology = builder.build();\n"
  },
  {
    "id" : "c795d15c-2983-4945-bf89-d241b06ca2a3",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-349757446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3f2693e-01f5-44bb-a4ed-7f785dd97ec1",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above: let's add a `topologyDescription` verification step (sam the the other tests below).",
        "createdAt" : "2020-01-28T22:58:44Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +2536,2540 @@\n        final Topology topology = builder.build(props);\n\n        final String topologyDescription = topology.describe().toString();\n"
  },
  {
    "id" : "e07ecc01-025f-4d1d-af4b-c4d0d7f906df",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bf47e5c-0a75-4ed6-b405-432e6eb7174c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "It would be better to verify the whole `TopologyDescription` -- as you reuse this method for two different test, you could pass the \"expectedTopology\" String as parameter into this method.\r\n\r\nHowever, reading the test code below, the case for table-table join, for which the right-hand table is _updated_ to trigger a join result is missing (this case only makes sense for table-table join, as for stream-table join the right hand side table updates only update the rhs table, but never trigger a join result). Hence, I think it would be best to not share code but have two test and add the missing case for the table-table join.",
        "createdAt" : "2020-01-29T18:35:53Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 498,
    "diffHunk" : "@@ -1,1 +2760,2764 @@            TopologyWrapper.getInternalTopologyBuilder(topology).copartitionGroups();\n\n        assertEquals(1, copartitionGroups.size());\n\n        try (final TopologyTestDriver driver = new TopologyTestDriver(topology, props)) {"
  },
  {
    "id" : "d77586ea-abf7-46f7-9892-6902c66879b1",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a102d4aa-4f5d-4373-9e8f-5954f0342683",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If you use the default `props` instead of creating a custom one, we don't need to pass in string serdes here. (cf. my comment below)",
        "createdAt" : "2020-01-29T18:48:19Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 553,
    "diffHunk" : "@@ -1,1 +2815,2819 @@            .stream(input, consumed)\n            .toTable()\n            .groupBy(MockMapper.selectValueKeyValueMapper(), Grouped.with(Serdes.String(), Serdes.String()))\n            .count()\n            .toStream()"
  },
  {
    "id" : "f7e1cdca-e284-4249-ba5a-3d71d623adab",
    "prId" : 7985,
    "prUrl" : "https://github.com/apache/kafka/pull/7985#pullrequestreview-350317635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00e4dd40-db65-47d4-8831-18919a6eb879",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As for all tests, we should verify `topologyDescription`",
        "createdAt" : "2020-01-29T18:49:45Z",
        "updatedAt" : "2020-01-30T06:31:16Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "604a1821cede104e3db1e0d3f7ef7aa95fab00b1",
    "line" : 544,
    "diffHunk" : "@@ -1,1 +2806,2810 @@\n    @Test\n    public void shouldSupportGroupByCountWithKStreamToKTable() {\n        final Consumed<String, String> consumed = Consumed.with(Serdes.String(), Serdes.String());\n        final StreamsBuilder builder = new StreamsBuilder();"
  },
  {
    "id" : "529ee104-f799-466f-9d7f-32d97d646856",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351818596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8d79dc3-83a8-4c08-9fab-4176f2b61453",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Adding couple of new test to verify we don't accept `null`s.",
        "createdAt" : "2020-01-31T22:40:36Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +688,692 @@    }\n\n    @Test\n    public void shouldNotAllowNullNamedOnToTable() {\n        final NullPointerException exception = assertThrows("
  },
  {
    "id" : "14391129-f31c-4cac-b6b3-09f5cac45ecd",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351818857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9783fda9-7be3-4bde-80fc-9383def9a737",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Making the test a little bit fancier.",
        "createdAt" : "2020-01-31T22:41:18Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +2467,2471 @@            inputTopic.pipeInput(\"B\", \"02\");\n            inputTopic.pipeInput(\"A\", \"03\");\n            final Map<String, String> expectedStore = mkMap(mkEntry(\"A\", \"03\"), mkEntry(\"B\", \"02\"));\n\n            assertThat(asMap(store), is(expectedStore));"
  },
  {
    "id" : "290c6360-d91f-41f0-a299-f3eb5a28b792",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351819089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e738952-0177-4bf8-960e-7376a729f2cf",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Changing this test, to also change the key _type_ to make sure we can pass in serdes correctly.",
        "createdAt" : "2020-01-31T22:41:54Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +2483,2487 @@\n        builder.stream(input, consumed)\n            .map((key, value) -> new KeyValue<>(key.charAt(0) - 'A', value))\n            .toTable(Materialized.with(Serdes.Integer(), null))\n            .toStream().to(output);"
  },
  {
    "id" : "1791a253-0692-4126-964c-93de658eca3b",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351819254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9beb9de6-1110-4054-a047-c40c5207617a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Overwrite key-serde to match type (this was exposing the \"store name == null\" bug).",
        "createdAt" : "2020-01-31T22:42:23Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +2484,2488 @@        builder.stream(input, consumed)\n            .map((key, value) -> new KeyValue<>(key.charAt(0) - 'A', value))\n            .toTable(Materialized.with(Serdes.Integer(), null))\n            .toStream().to(output);\n"
  },
  {
    "id" : "5ff0ffd9-d607-464d-84e1-f3bd3c8e0b39",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351819599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "388c0a90-e501-46cf-ae91-bd78e2b708c7",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Due to the refactoring of the `KStreamImple#toTable()` overloads, we get different names -- but as nothing is released yet, there is backward compatibility concern.",
        "createdAt" : "2020-01-31T22:43:23Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +2502,2506 @@                \"      --> KSTREAM-SINK-0000000004\\n\" +\n                \"      <-- KSTREAM-MAP-0000000001\\n\" +\n                \"    Sink: KSTREAM-SINK-0000000004 (topic: KSTREAM-TOTABLE-0000000002-repartition)\\n\" +\n                \"      <-- KSTREAM-FILTER-0000000005\\n\" +\n                \"\\n\" +"
  },
  {
    "id" : "f9434d9b-a984-4d1a-af35-10f7666e65e1",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-351820206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6acffe5-669a-4861-9498-0d600266f2e4",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Just a code simplification -- no need to not use `props` similarly to the other tests.",
        "createdAt" : "2020-01-31T22:45:09Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 480,
    "diffHunk" : "@@ -1,1 +2931,2935 @@\n        try (\n            final TopologyTestDriver driver = new TopologyTestDriver(topology, props)) {\n            final TestInputTopic<String, String> inputTopic =\n                driver.createInputTopic(input, new StringSerializer(), new StringSerializer(), Instant.ofEpochMilli(0L), Duration.ZERO);"
  },
  {
    "id" : "de67eb5b-4b28-4263-9470-4d250319d68f",
    "prId" : 8027,
    "prUrl" : "https://github.com/apache/kafka/pull/8027#pullrequestreview-355531918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe2ccdd2-6d0d-4772-b0a8-46a5a6ee6354",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "This is an actual fix in the test code.",
        "createdAt" : "2020-01-31T22:45:48Z",
        "updatedAt" : "2020-02-08T03:59:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "2d2c3f2f-18c5-4b37-ba80-5e72fd562c0e",
        "parentId" : "fe2ccdd2-6d0d-4772-b0a8-46a5a6ee6354",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This looks better than what I did, go for it!\r\n\r\nMy original hotfix PR is just to unblock the JDK11 jenkins job.",
        "createdAt" : "2020-02-08T05:42:06Z",
        "updatedAt" : "2020-02-08T05:42:06Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "295398d006e707a60672b3898068cac2049a0f7f",
    "line" : 488,
    "diffHunk" : "@@ -1,1 +2936,2940 @@            final TestOutputTopic<String, Integer> outputTopic =\n                driver.createOutputTopic(output, Serdes.String().deserializer(), Serdes.Integer().deserializer());\n            final KeyValueStore<String, Integer> store = driver.getKeyValueStore(storeName);\n\n            inputTopic.pipeInput(\"A\", \"green\", 10L);"
  },
  {
    "id" : "256610f6-9d8e-46b0-905f-2c260b876b9d",
    "prId" : 8679,
    "prUrl" : "https://github.com/apache/kafka/pull/8679#pullrequestreview-413123264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db1013e1-e158-4960-a74d-0bece1a81a9c",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "replicating test",
        "createdAt" : "2020-05-17T03:04:17Z",
        "updatedAt" : "2020-05-21T21:48:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfcb6a3dce9ea006c43ddc1d502eccb07f879c10",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +594,598 @@\n    @Test\n    public void shouldNotAllowNullRepartitionedOnRepartition() {\n        final NullPointerException exception = assertThrows(\n            NullPointerException.class,"
  },
  {
    "id" : "9426ea9b-a449-496b-b814-4c505ae0fea4",
    "prId" : 8679,
    "prUrl" : "https://github.com/apache/kafka/pull/8679#pullrequestreview-413123282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44a581aa-2fb7-4716-b201-ca6c71455e9b",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "replicating test cases",
        "createdAt" : "2020-05-17T03:04:49Z",
        "updatedAt" : "2020-05-21T21:48:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfcb6a3dce9ea006c43ddc1d502eccb07f879c10",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +1413,1417 @@        assertEquals(((AbstractStream) stream1.repartition()).valueSerde(), consumedInternal.valueSerde());\n        assertEquals(((AbstractStream) stream1.repartition(Repartitioned.with(mySerde, mySerde))).keySerde(), mySerde);\n        assertEquals(((AbstractStream) stream1.repartition(Repartitioned.with(mySerde, mySerde))).valueSerde(), mySerde);\n\n        assertEquals(((AbstractStream) stream1.groupByKey()).keySerde(), consumedInternal.keySerde());"
  },
  {
    "id" : "a16ceb0f-a2b1-40c1-92a6-30936859d7e2",
    "prId" : 8679,
    "prUrl" : "https://github.com/apache/kafka/pull/8679#pullrequestreview-413123290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5af1ff1-1afd-404a-b228-0dc3f5273a98",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "replicating test",
        "createdAt" : "2020-05-17T03:05:00Z",
        "updatedAt" : "2020-05-21T21:48:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfcb6a3dce9ea006c43ddc1d502eccb07f879c10",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +1476,1480 @@\n    @Test\n    public void shouldUseRecordMetadataTimestampExtractorWithRepartition() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final KStream<String, String> stream1 = builder.stream(Arrays.asList(\"topic-1\", \"topic-2\"), stringConsumed);"
  },
  {
    "id" : "7699a367-cb3a-462d-b687-98a1069138b8",
    "prId" : 8679,
    "prUrl" : "https://github.com/apache/kafka/pull/8679#pullrequestreview-413123296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "254660cc-1a4a-4f67-af25-41aa70b42ebf",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "replicating test",
        "createdAt" : "2020-05-17T03:05:08Z",
        "updatedAt" : "2020-05-21T21:48:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfcb6a3dce9ea006c43ddc1d502eccb07f879c10",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +1509,1513 @@\n    @Test\n    public void shouldSendDataThroughRepartitionTopicUsingRepartitioned() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        final String input = \"topic\";"
  }
]