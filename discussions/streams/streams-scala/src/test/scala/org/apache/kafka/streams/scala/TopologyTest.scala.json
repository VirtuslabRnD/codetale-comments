[
  {
    "id" : "54b94cc3-4d44-4af2-8913-45fb0849b663",
    "prId" : 5019,
    "prUrl" : "https://github.com/apache/kafka/pull/5019#pullrequestreview-121115174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5043fe58-fc14-4ad0-b91d-a475ea97c20e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "As @debasishg mentioned, we want to keep the scala API to be as consistent as possible with the java API. Are specific reasons for the changes here?",
        "createdAt" : "2018-05-17T15:50:54Z",
        "updatedAt" : "2018-05-18T17:20:41Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b9a9e633-65e8-43bb-bf64-84a73781f478",
        "parentId" : "5043fe58-fc14-4ad0-b91d-a475ea97c20e",
        "authorId" : "7b2b0b66-666b-4e5c-beda-94b652bf1309",
        "body" : "See my comment above .. ",
        "createdAt" : "2018-05-17T16:02:50Z",
        "updatedAt" : "2018-05-18T17:20:41Z",
        "lastEditedBy" : "7b2b0b66-666b-4e5c-beda-94b652bf1309",
        "tags" : [
        ]
      },
      {
        "id" : "c4cf2393-6353-4cd2-a2a3-f19d2b2a6e02",
        "parentId" : "5043fe58-fc14-4ad0-b91d-a475ea97c20e",
        "authorId" : "785455e8-efbf-4a4b-bb81-b194d48f204f",
        "body" : "See the ability to remove (or keep) the types.\r\nAlso this doesn't go too fare from the Java API since it's just about currying parameters and has the benefit of bringing the API closer to the Scala \"way of doing\".",
        "createdAt" : "2018-05-17T16:15:46Z",
        "updatedAt" : "2018-05-18T17:20:41Z",
        "lastEditedBy" : "785455e8-efbf-4a4b-bb81-b194d48f204f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d55f3bf6aeeec244c9b2f96a032e00636020ff7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +143,147 @@      val clicksPerRegion: KTable[String, Long] =\n        userClicksStream\n          .leftJoin(userRegionsTable)((clicks, region) => (if (region == null) \"UNKNOWN\" else region, clicks))\n          .map((_, regionWithClicks) => regionWithClicks)\n          .groupByKey"
  },
  {
    "id" : "b36d50bd-6a66-4542-b5d7-f95dd974e18d",
    "prId" : 5481,
    "prUrl" : "https://github.com/apache/kafka/pull/5481#pullrequestreview-144537318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0e7945a-8c25-4229-9dc3-1dbd86b5c882",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I also compiled with scala 2.12 to verify that the old code works via SAM conversion. I don't think we can explicitly test with it in this project, though, until we update to 2.12.",
        "createdAt" : "2018-08-08T17:57:07Z",
        "updatedAt" : "2018-08-09T14:42:06Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "1aee2f257ef30db4902789058e2dcba7faff678c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +218,222 @@                override def close(): Unit = Unit\n              }\n          })\n          .groupBy((k, v) => v)\n          .count()"
  },
  {
    "id" : "74de8739-5bb5-4551-bb52-4b2913a934d2",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210372407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cad10e6-335e-40ad-89d1-4ed29013b37b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "There was a warning that these variables didn't have a type annotation. The scala style recommends annotating all *public* members with an explicit type as a courtesy to callers. Since these don't need to be public, I've made them private to resolve the warning, rather than explicitly stating the type.",
        "createdAt" : "2019-03-04T21:22:21Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@  private val userRegionsTopic = \"user-regions-topic\"\n\n  private val pattern = Pattern.compile(\"\\\\W+\", Pattern.UNICODE_CHARACTER_CLASS)\n\n  @Test def shouldBuildIdenticalTopologyInJavaNScalaSimple(): Unit = {"
  },
  {
    "id" : "4fcc9527-6520-4e50-b201-1fc44f66da7d",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210372407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eb25b5c-c8d2-4e23-9343-175cd3210bea",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The test methods do need to be public, though, for JUnit to run them, so here I've just added the return type.",
        "createdAt" : "2019-03-04T21:22:57Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +55,59 @@  private val pattern = Pattern.compile(\"\\\\W+\", Pattern.UNICODE_CHARACTER_CLASS)\n\n  @Test def shouldBuildIdenticalTopologyInJavaNScalaSimple(): Unit = {\n\n    // build the Scala topology"
  },
  {
    "id" : "f9d5088c-19d3-40a7-83e3-548831c8a1f9",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210372407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a29e4bc-cba9-4f06-80df-b536d24b8716",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Scala style is to eschew empty parens when the method doesn't produce side effects. This one does not, so I've removed the parens.",
        "createdAt" : "2019-03-04T21:23:51Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +58,62 @@\n    // build the Scala topology\n    def getTopologyScala: TopologyDescription = {\n\n      import Serdes._"
  },
  {
    "id" : "88125a10-4dbd-4445-87c4-8eb33def088a",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210372407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d69e4ee-7384-496b-9b27-83a3f69336a8",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This was an IDEA suggestion to use an `_` instead of a name for parameters that are unused. It's a form of self-documenting code.",
        "createdAt" : "2019-03-04T21:24:44Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +102,106 @@        textLines\n          .flatMapValues(v => pattern.split(v.toLowerCase))\n          .groupBy((_, v) => v)\n          .count()\n"
  },
  {
    "id" : "b4195151-50d0-400f-a179-1924c121a82a",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210767304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0a7087a-f42e-4ee2-b0f4-ab36cec7c62b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "This variable was unused.",
        "createdAt" : "2019-03-04T21:25:15Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "fedfad85-3c62-437f-86b8-ad24941df85c",
        "parentId" : "a0a7087a-f42e-4ee2-b0f4-ab36cec7c62b",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I think this was intentional to describe the operation. The warning is really annoying though and I've debated removing that variable several times. :)",
        "createdAt" : "2019-03-05T08:35:51Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "1172ed6a-163b-45ff-81b6-ede3a1ad8d2d",
        "parentId" : "a0a7087a-f42e-4ee2-b0f4-ab36cec7c62b",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, the thought crossed my mind. I just didn't think the description was that necessary. Although, I guess I can add a comment instead...",
        "createdAt" : "2019-03-05T16:08:27Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +148,152 @@\n      // clicks per region\n      userClicksStream\n        .leftJoin(userRegionsTable)((clicks, region) => (if (region == null) \"UNKNOWN\" else region, clicks))\n        .map((_, regionWithClicks) => regionWithClicks)"
  },
  {
    "id" : "62590053-037c-4497-9be9-7029648f2868",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210768143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25436e6a-62f7-4797-8b88-b3a28e5b6da6",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "```suggestion\r\n      // clicks per region\r\n      userClicksStream\r\n```",
        "createdAt" : "2019-03-05T16:09:50Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +148,152 @@\n      // clicks per region\n      userClicksStream\n        .leftJoin(userRegionsTable)((clicks, region) => (if (region == null) \"UNKNOWN\" else region, clicks))\n        .map((_, regionWithClicks) => regionWithClicks)"
  },
  {
    "id" : "c8a4f5ee-7dff-4105-9119-78faa3905651",
    "prId" : 6369,
    "prUrl" : "https://github.com/apache/kafka/pull/6369#pullrequestreview-210768786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64611af6-6ae2-4ca0-a11f-8450603048f4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "```suggestion\r\n      // word counts\r\n      grouped.count()\r\n```",
        "createdAt" : "2019-03-05T16:10:57Z",
        "updatedAt" : "2019-03-07T18:18:31Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "48b9798a804f681fb2de48b390f0ca630c602402",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +261,265 @@\n      // word counts\n      grouped.count()\n\n      streamBuilder.build().describe()"
  },
  {
    "id" : "6c3e72f6-1c96-49ce-a42c-9d2170693e47",
    "prId" : 6373,
    "prUrl" : "https://github.com/apache/kafka/pull/6373#pullrequestreview-214738740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3607ed0-fdb3-4266-a29b-9dc99aae4fcc",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "I like the idea here, but I'm thinking it's a good idea to compare unoptimized Scala topology to the unoptimized Java topology so I'd change this line to \r\n```scala\r\nassertEquals(getTopologyScala.build(propsNoOptimization).describe.toString,\r\n                    getTopologyScala.build(propsNoOptimization).describe.toString)\r\n```",
        "createdAt" : "2019-03-14T19:10:14Z",
        "updatedAt" : "2019-03-15T07:21:42Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "521ea36d-85d2-458c-9767-8e24cd829f68",
        "parentId" : "c3607ed0-fdb3-4266-a29b-9dc99aae4fcc",
        "authorId" : "f7299f56-bbd6-49e5-8eae-139aab5060e2",
        "body" : "What about adding your assertion instead of substituting to line 399? Do you agree?",
        "createdAt" : "2019-03-14T19:56:25Z",
        "updatedAt" : "2019-03-15T07:21:42Z",
        "lastEditedBy" : "f7299f56-bbd6-49e5-8eae-139aab5060e2",
        "tags" : [
        ]
      },
      {
        "id" : "ec748aea-02c7-4691-b42a-feede3c19e0c",
        "parentId" : "c3607ed0-fdb3-4266-a29b-9dc99aae4fcc",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : ">What about adding your assertion instead of substituting to line 399? \r\n\r\nYes, that works as well",
        "createdAt" : "2019-03-14T20:11:44Z",
        "updatedAt" : "2019-03-15T07:21:42Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "88c62dfbcdfede8226ad00336d0f9a1bfd0f015e",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +428,432 @@    }\n\n    assertNotEquals(getTopologyScala.build(props).describe.toString,\n                    getTopologyScala.build(propsNoOptimization).describe.toString)\n    assertEquals(getTopologyScala.build(propsNoOptimization).describe.toString,"
  }
]