[
  {
    "id" : "6c036612-0ff5-409b-bcc5-06f4d75169ed",
    "prId" : 1018,
    "prUrl" : "https://github.com/zio/zio/pull/1018#pullrequestreview-250055378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f3b13ee-32d2-41ae-a67f-a4fd33c68187",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Thanks for enhancing the test! Let's stick with either a property-based test or a deterministic test with constants. That's okay too.\r\n\r\nThe problem with using `Random` directly is that failures would not be easily reproducible.",
        "createdAt" : "2019-06-14T18:05:57Z",
        "updatedAt" : "2019-06-14T18:30:47Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "3bcdc7b1-56c2-4975-a04b-ff6eb1cb49c3",
        "parentId" : "3f3b13ee-32d2-41ae-a67f-a4fd33c68187",
        "authorId" : "8fc7e270-cb68-4da5-893c-3b443027cf44",
        "body" : "Yeah, you are totally right, I'll go with a fixed seeded Random if you are fine with it. BTW I am new to the workflow: Just amend the change and force push to my forked repo?",
        "createdAt" : "2019-06-14T18:12:13Z",
        "updatedAt" : "2019-06-14T18:30:47Z",
        "lastEditedBy" : "8fc7e270-cb68-4da5-893c-3b443027cf44",
        "tags" : [
        ]
      },
      {
        "id" : "40e0371d-2e6a-4711-9394-7760ab646b4f",
        "parentId" : "3f3b13ee-32d2-41ae-a67f-a4fd33c68187",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Feel free to amend or add new commits. We'll squash it anyway.\r\n\r\nWould it be possible to avoid the use of Random entirely? Not sure it's necessary to demonstrate the issue here, and for larger coverage we should use property checks.",
        "createdAt" : "2019-06-14T18:15:15Z",
        "updatedAt" : "2019-06-14T18:30:47Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "a5394f70-7c97-4e46-903a-8e33cc3d51c6",
        "parentId" : "3f3b13ee-32d2-41ae-a67f-a4fd33c68187",
        "authorId" : "8fc7e270-cb68-4da5-893c-3b443027cf44",
        "body" : "Of course, will do so. It's only important to use more than one chunk and  data that is not exactly dividable into full chunks. Thanks for your quick feedback and help.",
        "createdAt" : "2019-06-14T18:17:52Z",
        "updatedAt" : "2019-06-14T18:30:47Z",
        "lastEditedBy" : "8fc7e270-cb68-4da5-893c-3b443027cf44",
        "tags" : [
        ]
      },
      {
        "id" : "5af69e43-66bb-4b5f-b74a-1e8d8e291399",
        "parentId" : "3f3b13ee-32d2-41ae-a67f-a4fd33c68187",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "üôèüèª",
        "createdAt" : "2019-06-14T18:22:15Z",
        "updatedAt" : "2019-06-14T18:30:47Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "88f3229fe2ac0dba2499318e4c7395ea5d8752bf",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +488,492 @@  }\n\n  private def fromInputStream = unsafeRun {\n    import java.io.ByteArrayInputStream\n    val chunkSize = ZStreamChunk.DefaultChunkSize"
  }
]