[
  {
    "id" : "75492048-fbd0-42a4-9336-7438a9f444f8",
    "prId" : 3825,
    "prUrl" : "https://github.com/zio/zio/pull/3825#pullrequestreview-438360427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a24b080-2d57-4f62-a0d2-5cb880397b02",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "In terms of code organization, I'd be fine with this just being `: Chunk[Byte]` and wrapping the exceptions into the `CompressionException` in `compression.gunzip`.",
        "createdAt" : "2020-06-26T14:50:30Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "18aa6a6b30f15d84367cbc456d4ca1cbf1b34d8f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@  def close(): Unit = state.close()\n\n  def onChunk(c: Chunk[Byte]): ZIO[Any, CompressionException, Chunk[Byte]] =\n    ZIO.effect {\n      val (newState, output) = state.feed(c.toArray)"
  },
  {
    "id" : "bcce2da2-d894-4ae7-a4c6-42fda828b1d8",
    "prId" : 3825,
    "prUrl" : "https://github.com/zio/zio/pull/3825#pullrequestreview-440845490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "parentId" : null,
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Sounds like we should throw an exception if the input does not contain a valid header. Is that possible to do?",
        "createdAt" : "2020-06-26T14:55:42Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "6098df71-8269-465a-9a0b-a2b2ba05138c",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "body" : "Should I change:\r\n```scala\r\ncase None =>\r\n              ZIO.succeed {\r\n                gunzipper.reset()\r\n                Chunk.empty\r\n              }\r\n```\r\nto\r\n```scala\r\ncase None =>\r\n              ZIO.succeed {\r\n                if(gunzipper.isFinished()){\r\n                  gunzipper.reset()\r\n                  Chunk.empty\r\n                } else {\r\n                  <fail because stream wasn't complete gzipped>\r\n                }\r\n              }\r\n``` ?",
        "createdAt" : "2020-06-27T19:04:02Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "tags" : [
        ]
      },
      {
        "id" : "43dbf5e1-22f1-4598-aea6-70bf554508de",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "504b2e64-4baa-4b92-8da7-3fdb8e2af536",
        "body" : "I would prefer the error and not the empty chunk :)  Is there an \"auto decompress\" path that decompresses if the header exists, and leaves the bytes intact if not?",
        "createdAt" : "2020-06-30T14:14:36Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "504b2e64-4baa-4b92-8da7-3fdb8e2af536",
        "tags" : [
        ]
      },
      {
        "id" : "d8d4793e-7a54-4972-85af-a80183e56b2c",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "body" : "If we would like to have such path, then invalid header would have to fallback to clear text stream. Because there is no criterion to distinguish between invalid header and no header.",
        "createdAt" : "2020-06-30T14:37:41Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "tags" : [
        ]
      },
      {
        "id" : "02a1a1bf-f818-4a37-96e6-495df7ca82e0",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "@LGLO To your question: Yes, you should add that `else` branch, but you should use `ZIO.effect` instead.",
        "createdAt" : "2020-07-01T12:53:53Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      },
      {
        "id" : "82cd1f2d-4bbd-4c28-89d7-a67ea472aedd",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "body" : "Thanks!\r\nI didn't left this work here. Hopefully I could spend some time today in the evening and next week.",
        "createdAt" : "2020-07-01T12:55:56Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "524c15e0-b013-4ec4-bd1d-2b61884828d1",
        "tags" : [
        ]
      },
      {
        "id" : "84008eef-932c-4782-a753-16d66d33f989",
        "parentId" : "56ea8b01-806e-44fa-a12a-56eb796cd704",
        "authorId" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "body" : "Thank you @LGLO!",
        "createdAt" : "2020-07-01T12:59:52Z",
        "updatedAt" : "2020-07-07T20:38:02Z",
        "lastEditedBy" : "4f7a0777-ad97-4424-aa99-3fcea1de6a97",
        "tags" : [
        ]
      }
    ],
    "commit" : "18aa6a6b30f15d84367cbc456d4ca1cbf1b34d8f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@  private class ParseHeaderStep(acc: Array[Byte], crc32: CRC32) extends State {\n\n    //TODO: If whole input is shorther than fixed header, not output is produced and no error is singaled. Is it ok?\n    override def feed(chunkBytes: Array[Byte]): (State, Chunk[Byte]) = {\n"
  }
]