[
  {
    "id" : "551e4453-8dfe-402a-b08c-2a04ba7ae22d",
    "prId" : 4402,
    "prUrl" : "https://github.com/apache/kafka/pull/4402#pullrequestreview-89254910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee90e707-4cb1-41c4-ad32-47cf5371fb6b",
        "parentId" : null,
        "authorId" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "body" : "should we also be checking that `topicName` is non-null?",
        "createdAt" : "2018-01-15T12:32:51Z",
        "updatedAt" : "2018-01-29T20:50:45Z",
        "lastEditedBy" : "2c9c4dbb-be9d-424e-8d8a-9f3d67f8372b",
        "tags" : [
        ]
      },
      {
        "id" : "7fbef7b4-eb42-4b03-a374-39b387462808",
        "parentId" : "ee90e707-4cb1-41c4-ad32-47cf5371fb6b",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I want to allow `topicName=null` for the case that somebody wants a factory without default topic name. We have a constructor without taking a defaultTopicName.",
        "createdAt" : "2018-01-16T21:29:25Z",
        "updatedAt" : "2018-01-29T20:50:45Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e6d22473e7cfc73ccb2321b04fe05f1998505f3",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +134,138 @@        Objects.requireNonNull(keySerializer, \"keySerializer cannot be null\");\n        Objects.requireNonNull(valueSerializer, \"valueSerializer cannot be null\");\n        this.topicName = defaultTopicName;\n        this.keySerializer = keySerializer;\n        this.valueSerializer = valueSerializer;"
  },
  {
    "id" : "2723933d-3038-4ff7-9927-a0bc89c274f3",
    "prId" : 4402,
    "prUrl" : "https://github.com/apache/kafka/pull/4402#pullrequestreview-90669547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abf6644c-9ca1-43be-a407-cd417629670c",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Hmm, the package name is different with other classes under the `test-utils` artifact, is this intentional? (see my other comment above)",
        "createdAt" : "2018-01-22T23:10:35Z",
        "updatedAt" : "2018-01-29T20:50:45Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "8f371e24-3558-4071-9c1a-4c86472871ee",
        "parentId" : "abf6644c-9ca1-43be-a407-cd417629670c",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "See answer above.",
        "createdAt" : "2018-01-22T23:58:51Z",
        "updatedAt" : "2018-01-29T20:50:45Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e6d22473e7cfc73ccb2321b04fe05f1998505f3",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@ * limitations under the License.\n */\npackage org.apache.kafka.streams.test;\n\nimport org.apache.kafka.clients.consumer.ConsumerRecord;"
  }
]