[
  {
    "id" : "2b162588-e846-4af6-80dc-1945a5ddc9e8",
    "prId" : 4793,
    "prUrl" : "https://github.com/apache/kafka/pull/4793#pullrequestreview-114058728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f800924-7d2f-4fec-ac6b-23357c04bd08",
        "parentId" : null,
        "authorId" : "0c73d886-f3da-4107-8045-92d8e3c8fb75",
        "body" : "My previous comment about caching compiled pattern applies here as well.",
        "createdAt" : "2018-04-20T16:48:43Z",
        "updatedAt" : "2018-04-20T16:48:43Z",
        "lastEditedBy" : "0c73d886-f3da-4107-8045-92d8e3c8fb75",
        "tags" : [
        ]
      },
      {
        "id" : "2716fc41-b3b9-449d-81de-ab4f5cf8202b",
        "parentId" : "1f800924-7d2f-4fec-ac6b-23357c04bd08",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes. Still unclear to me if we need to optimize testing code? Feel free to do a MINOR PR if you think it's important to improve.",
        "createdAt" : "2018-04-20T17:16:17Z",
        "updatedAt" : "2018-04-20T17:16:17Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ae919388471d5c9ab5a3a6c62dd63443ae0bb2c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +379,383 @@    private void validateSourceTopicNameRegexPattern(final String inputRecordTopic) {\n        for (final String sourceTopicName : internalTopologyBuilder.getSourceTopicNames()) {\n            if (!sourceTopicName.equals(inputRecordTopic) && Pattern.compile(sourceTopicName).matcher(inputRecordTopic).matches()) {\n                throw new TopologyException(\"Topology add source of type String for topic: \" + sourceTopicName +\n                        \" cannot contain regex pattern for input record topic: \" + inputRecordTopic +"
  },
  {
    "id" : "2318560d-3a0b-40bc-bc66-152cb6e93311",
    "prId" : 4832,
    "prUrl" : "https://github.com/apache/kafka/pull/4832#pullrequestreview-115899036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "364d9cb9-015a-41e9-8c60-433394f12913",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think this can be package-private, since your wrapper is in the same package.",
        "createdAt" : "2018-04-26T19:10:17Z",
        "updatedAt" : "2018-04-26T19:13:00Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "4d672067-5904-42a6-80b2-4f4d2cff5c3d",
        "parentId" : "364d9cb9-015a-41e9-8c60-433394f12913",
        "authorId" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "body" : "Yes, it can. I'll change it.",
        "createdAt" : "2018-04-27T11:04:30Z",
        "updatedAt" : "2018-04-27T11:04:31Z",
        "lastEditedBy" : "796fe0a1-c8b6-4b8f-a416-408b76bf799e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc5df4c3ba297c3fe2933b2adcb7ee623da698b3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +227,231 @@     * @param config the configuration for the topology\n     */\n    protected TopologyTestDriver(final InternalTopologyBuilder builder,\n                              final Properties config) {\n        this(builder, config,  System.currentTimeMillis());"
  },
  {
    "id" : "00c1b102-da03-4017-bac0-a7db345ae1a3",
    "prId" : 5096,
    "prUrl" : "https://github.com/apache/kafka/pull/5096#pullrequestreview-124249121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffddbbfd-fe58-4adb-b115-a097abb954b1",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Nice move :)",
        "createdAt" : "2018-05-30T04:52:02Z",
        "updatedAt" : "2018-06-05T23:33:19Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1ff0f5ba20df728f7e3a524462c8c717e4bc222",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +439,443 @@        producer.clear();\n        for (final ProducerRecord<byte[], byte[]> record : output) {\n            outputRecordsByTopic.computeIfAbsent(record.topic(), k -> new LinkedList<>()).add(record);\n\n            // Forward back into the topology if the produced record is to an internal or a source topic ..."
  },
  {
    "id" : "35223e7c-72a1-4fcc-bb62-1c02678ccf31",
    "prId" : 5096,
    "prUrl" : "https://github.com/apache/kafka/pull/5096#pullrequestreview-126560288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83605b6-4486-4853-ac49-98fcd516c834",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks for cleaning this up. I still can't read the old code without taking notes...",
        "createdAt" : "2018-06-06T20:39:21Z",
        "updatedAt" : "2018-06-06T20:39:22Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "f21981fa-8055-48e4-8f45-80ddd79e57ac",
        "parentId" : "d83605b6-4486-4853-ac49-98fcd516c834",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "The old code was wrong... That's why I rewrote it. Also added a corresponding test. The existing test did not cover one case and I hit the issue while working on the original PR using facades.",
        "createdAt" : "2018-06-06T20:43:53Z",
        "updatedAt" : "2018-06-06T20:43:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "dc062157-5284-4b2e-93c2-c542ef5fceb4",
        "parentId" : "d83605b6-4486-4853-ac49-98fcd516c834",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah, well, then thanks for making it both legible and correct.",
        "createdAt" : "2018-06-06T21:21:13Z",
        "updatedAt" : "2018-06-06T21:21:14Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1ff0f5ba20df728f7e3a524462c8c717e4bc222",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +586,590 @@        }\n\n        return null;\n    }\n"
  },
  {
    "id" : "a468a442-e319-4a63-b42e-9de9918ad10c",
    "prId" : 5671,
    "prUrl" : "https://github.com/apache/kafka/pull/5671#pullrequestreview-158263660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58414bdf-c0f3-496e-9853-975e1732dae3",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Could we do `final StreamsConfig streamsConfig = new StreamsConfig(config, false);` instead? I tried locally and it worked.",
        "createdAt" : "2018-09-21T22:04:14Z",
        "updatedAt" : "2018-09-29T15:14:27Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "539e2936-67ad-4b29-b578-0a5857917a5b",
        "parentId" : "58414bdf-c0f3-496e-9853-975e1732dae3",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "That works for TopologyTestDriver, but not MockProcessorContext because that constructor is protected, and the TopologyTestDriver happens to be in the same package as StreamsConfig.\r\n\r\nI previously had the QuietStreamsConfig used only in MockProcessorContext, but the feedback was to also use it in TopologyTestDriver.\r\n\r\nSeeing it this way, do you think it makes sense just to use the protected constructor in TopologyTestDriver, and the QuietStreamsConfig in the MockProcessorContext?",
        "createdAt" : "2018-09-23T18:54:25Z",
        "updatedAt" : "2018-09-29T15:14:27Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "e2512792-993d-4474-990d-56dfbbca815f",
        "parentId" : "58414bdf-c0f3-496e-9853-975e1732dae3",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "With the additional context,  I'm fine with the PR as is.",
        "createdAt" : "2018-09-24T19:41:11Z",
        "updatedAt" : "2018-09-29T15:14:27Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      }
    ],
    "commit" : "cab2084c121436f9360886dfcb89a662beef4e0c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +237,241 @@                               final Properties config,\n                               final long initialWallClockTimeMs) {\n        final StreamsConfig streamsConfig = new QuietStreamsConfig(config);\n        mockWallClockTime = new MockTime(initialWallClockTimeMs);\n"
  },
  {
    "id" : "f473dbff-00d0-407d-a707-559e884235ea",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-162986900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ced7eb95-c6ac-4bca-88a9-1ca87e2b94db",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "nit: this needs to be final \r\n\r\nNote: Since this is in the streams:test-utils module `./gradlew streams:clean streams:test` didn't pick this up. If you run `./gradlew streams:test-utils:clean streams:test-utils:test` you'll see the error.",
        "createdAt" : "2018-10-09T15:59:33Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "4a032fde-1a0c-4205-ad0e-fb0540123f06",
        "parentId" : "ced7eb95-c6ac-4bca-88a9-1ca87e2b94db",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "Thanks for pointing it out. Fixed it.",
        "createdAt" : "2018-10-09T16:38:40Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +259,263 @@\n        final MockConsumer<byte[], byte[]> consumer = new MockConsumer<>(OffsetResetStrategy.EARLIEST);\n        stateDirectory = new StateDirectory(streamsConfig, mockWallClockTime, createStateDirectory);\n\n        final MetricConfig metricConfig = new MetricConfig()"
  }
]