[
  {
    "id" : "8ec45d22-362b-4f71-b270-30afacb16e17",
    "prId" : 4655,
    "prUrl" : "https://github.com/apache/kafka/pull/4655#pullrequestreview-102116431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1332af0-3e57-4d38-b65b-be317c83179a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I think we can simplify this test. We only want to make sure the application directory gets deleted. Thus, we can create it manually, create the driver with corresponding config (passing in a empty Topology), call `close()` and check if the directory was deleted.",
        "createdAt" : "2018-03-07T21:47:59Z",
        "updatedAt" : "2018-03-07T22:17:53Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "861879d8-4b38-45e0-9f6f-9022e14a35e7",
        "parentId" : "f1332af0-3e57-4d38-b65b-be317c83179a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yeah, that makes sense, unless you think it might be possible to introduce some other bug later that breaks this behavior via a different mechanism.",
        "createdAt" : "2018-03-07T21:51:58Z",
        "updatedAt" : "2018-03-07T22:17:53Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "12c579c3-818f-4bfa-84b8-70bdb7a6a154",
        "parentId" : "f1332af0-3e57-4d38-b65b-be317c83179a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "So, if I read the StateDirectory code right, any subdir of stateDirectory that is parseable as a TaskId and not currently \"locked\" by a running task gets deleted on `cleanRemovedTasks`.\r\n\r\nI could make use of this fact to implement the test as you say, but then this test, which is supposed to be verifying some behavior of the TopologyTestDriver actually becomes coupled to the internal implementation of StateDirectory, which feels wrong to me.\r\n\r\nI agree that we don't need a simulation as complete as what I wrote, but it seems like the test should be interacting only with the driver.",
        "createdAt" : "2018-03-07T22:05:55Z",
        "updatedAt" : "2018-03-07T22:17:53Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "8bc51ba7-ed08-4d84-a672-fc336bd14a6a",
        "parentId" : "f1332af0-3e57-4d38-b65b-be317c83179a",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'll update the code with what I'm thinking, and you can let me know if you think it's still too silly.",
        "createdAt" : "2018-03-07T22:06:55Z",
        "updatedAt" : "2018-03-07T22:17:53Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "94a0a9a7afbf34e5809d6931f6acc27979ed80cc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +841,845 @@\n    @Test\n    public void shouldCleanUpPersistentStateStoresOnClose() {\n        final Topology topology = new Topology();\n        topology.addSource(\"sourceProcessor\", \"input-topic\");"
  },
  {
    "id" : "97a46246-ec1d-47da-ab96-28fa8056c924",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-171355311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd0f3fdc-d67e-4a51-ae63-a2158ee19cc9",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "duplicate code",
        "createdAt" : "2018-11-04T03:00:37Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "a1b5ee3c-6e75-4ef9-9695-27f0289f5183",
        "parentId" : "bd0f3fdc-d67e-4a51-ae63-a2158ee19cc9",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "Fixed.",
        "createdAt" : "2018-11-04T09:37:02Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1085,1089 @@        final String stateDir = config.getProperty(StreamsConfig.STATE_DIR_CONFIG);\n        final File appDir = new File(stateDir, config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG));\n        assertFalse(appDir.exists());\n    }\n"
  },
  {
    "id" : "9595d6ca-0f11-4a24-8eb4-4bb750fb4fbb",
    "prId" : 5696,
    "prUrl" : "https://github.com/apache/kafka/pull/5696#pullrequestreview-171355302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c850bf9e-6ac9-45a6-b39f-c9b3d08658a9",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Nit: use `StateDirector#directoryForTask(taskId))` ",
        "createdAt" : "2018-11-04T03:01:58Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "cff0a36f-2013-48a6-a1eb-6fe5bde90641",
        "parentId" : "c850bf9e-6ac9-45a6-b39f-c9b3d08658a9",
        "authorId" : "85578594-6b0b-4724-b709-a8c84f206391",
        "body" : "`StateDirectory` instance is not available in that class, so didn't updated it.",
        "createdAt" : "2018-11-04T09:36:35Z",
        "updatedAt" : "2018-11-21T09:44:56Z",
        "lastEditedBy" : "85578594-6b0b-4724-b709-a8c84f206391",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdd60cb5ad70b8796e3ef74f1e5a94245cf8f7f9",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +1098,1102 @@\n        final TaskId taskId = new TaskId(0, 0);\n        assertTrue(new File(appDir, taskId.toString()).exists());\n    }\n}"
  },
  {
    "id" : "8c463a61-24d3-4d6e-bca9-b5416ea1bdcf",
    "prId" : 5923,
    "prUrl" : "https://github.com/apache/kafka/pull/5923#pullrequestreview-176628487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4009fe2-b76c-4bb7-b91e-23c751dcd50a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "nit: we can remove this comment, as the test name explains it :)",
        "createdAt" : "2018-11-20T07:21:11Z",
        "updatedAt" : "2018-11-20T07:21:39Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bee64a22c3d387fe0b113d6b38c6278aa4cbc77",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +898,902 @@            Stores.inMemoryKeyValueStore(\"aggStore\"),\n            Serdes.String(),\n            Serdes.Long()).withCachingEnabled(), // intentionally turn on caching to achieve better test coverage\n            \"aggregator\");\n"
  },
  {
    "id" : "0be85e12-6e98-489c-a8d9-681ffaf84fff",
    "prId" : 6179,
    "prUrl" : "https://github.com/apache/kafka/pull/6179#pullrequestreview-237840956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "619b5f4c-7aac-4c4e-9cc8-3d981710243b",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "one small nit: should this test include in-memory stores?",
        "createdAt" : "2019-05-14T15:57:16Z",
        "updatedAt" : "2019-05-15T16:21:01Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "4ea9b4c3-f32c-49bb-b9bf-ad64dac85dc9",
        "parentId" : "619b5f4c-7aac-4c4e-9cc8-3d981710243b",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Sure. Why not.",
        "createdAt" : "2019-05-15T14:00:27Z",
        "updatedAt" : "2019-05-15T16:21:01Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdc126a7c2360eefe46a6cb8190cad268e4a08a9",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +747,751 @@        final String sessionStoreName = \"sessionStore\";\n        final String globalKeyValueStoreName = \"globalKeyValueStore\";\n        final String globalTimestampedKeyValueStoreName = \"globalKeyValueTimestampStore\";\n\n        final Topology topology = setupSingleProcessorTopology();"
  },
  {
    "id" : "b3a9ca16-3f0a-4549-a9ad-26b43882a9d9",
    "prId" : 7378,
    "prUrl" : "https://github.com/apache/kafka/pull/7378#pullrequestreview-297576828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "102fdc5f-cf63-41fa-b23a-0ae9f2c12224",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "use `final IllegalArgumentException exception = assertThrows(...)` instead of try-catch",
        "createdAt" : "2019-10-04T07:24:27Z",
        "updatedAt" : "2019-10-04T18:59:11Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "4447b7d9-b5f8-4cbc-8797-cbc7f87d00ae",
        "parentId" : "102fdc5f-cf63-41fa-b23a-0ae9f2c12224",
        "authorId" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "body" : "changed",
        "createdAt" : "2019-10-04T16:11:15Z",
        "updatedAt" : "2019-10-04T18:59:11Z",
        "lastEditedBy" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "50cfdc05d22d51ec9864ecb1722a461bb07a7e4a",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +402,406 @@        testDriver = new TopologyTestDriver(new Topology(), config);\n        assertThrows(IllegalArgumentException.class, () -> {\n            pipeRecord(unknownTopic, new TestRecord<byte[], byte[]>(nullValue));\n        });\n    }"
  },
  {
    "id" : "1ff7efcb-fc9f-454d-a955-5f7c201a5b8d",
    "prId" : 7462,
    "prUrl" : "https://github.com/apache/kafka/pull/7462#pullrequestreview-299181728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4e2725a-9986-43e8-89be-de23927adbec",
        "parentId" : null,
        "authorId" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "body" : "This is not related to change in this PR, but after second read, should we setup non-empty topology here.\r\nto prevent IllegalStateException to be thrown due to empty topology after some future change.\r\n```suggestion\r\n         testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\r\n```",
        "createdAt" : "2019-10-08T05:07:54Z",
        "updatedAt" : "2019-10-14T22:03:09Z",
        "lastEditedBy" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "tags" : [
        ]
      },
      {
        "id" : "cc8170e9-1efe-4d1f-a332-7f26fe3c4dfe",
        "parentId" : "a4e2725a-9986-43e8-89be-de23927adbec",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "If we really don't allow an empty topology, and `TopologyTestDriver` constructor throw, the test would fail. Hence, such a change would break the test and we could update it then.",
        "createdAt" : "2019-10-09T05:50:13Z",
        "updatedAt" : "2019-10-14T22:03:09Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "afd7d4cdfa2d3192bb14cfc3d692d42eb597c2ae",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +404,408 @@    @Test\n    public void shouldThrowForUnknownTopic() {\n        testDriver = new TopologyTestDriver(new Topology(), config);\n        assertThrows(\n            IllegalArgumentException.class,"
  },
  {
    "id" : "b9763e70-8b51-4e8b-8cb2-ce4ba0c76b5d",
    "prId" : 7462,
    "prUrl" : "https://github.com/apache/kafka/pull/7462#pullrequestreview-299181777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb383feb-ccf8-4b3f-b661-2cfd428ca516",
        "parentId" : null,
        "authorId" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "body" : "This is not related to change in this PR, but after second read, should we setup non-empty topology here.\r\nto prevent IllegalStateException to be thrown due to empty topology after some future change.\r\n```suggestion\r\n         testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\r\n```",
        "createdAt" : "2019-10-08T05:09:01Z",
        "updatedAt" : "2019-10-14T22:03:09Z",
        "lastEditedBy" : "1888656f-7aef-4ed7-ab66-3b00afb0b9b7",
        "tags" : [
        ]
      },
      {
        "id" : "1ac9a92b-4ec5-4a84-87c7-64e7fffd3124",
        "parentId" : "cb383feb-ccf8-4b3f-b661-2cfd428ca516",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "As above.",
        "createdAt" : "2019-10-09T05:50:26Z",
        "updatedAt" : "2019-10-14T22:03:09Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "afd7d4cdfa2d3192bb14cfc3d692d42eb597c2ae",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +418,422 @@    @Test\n    public void shouldThrowForMissingTime() {\n        testDriver = new TopologyTestDriver(new Topology(), config);\n        assertThrows(\n            IllegalStateException.class,"
  },
  {
    "id" : "07916a58-d14b-4e72-b374-755655bb779f",
    "prId" : 8065,
    "prUrl" : "https://github.com/apache/kafka/pull/8065#pullrequestreview-356328285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a7a0876-4cb8-4392-8e24-74128d316762",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why do we test the same thing twice?",
        "createdAt" : "2020-02-10T04:21:17Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "587a54f8-eaa2-43ae-9a20-22723407034c",
        "parentId" : "6a7a0876-4cb8-4392-8e24-74128d316762",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "It's not exactly the same.\r\n\r\nWe do want the \"final\" output to be the correct end-state of the operation, which the map test verifies very succinctly. Since this is a table operation, verifying the result as a map is most appropriate.\r\n\r\nBut we also don't want anything extra in the output topic, which the second test verifies.\r\n\r\nIt's true that the map test is redundant with the last element in the list test; it's just telling the narrative of what we expect.",
        "createdAt" : "2020-02-10T16:27:00Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "b5bea0e7-1841-4031-8c18-63af3c9492a5",
        "parentId" : "6a7a0876-4cb8-4392-8e24-74128d316762",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I've added comments to make this narrative more apparent.",
        "createdAt" : "2020-02-10T17:28:56Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "9b3ed2db-ed25-4951-a9ff-1758c3fd5db6",
        "parentId" : "6a7a0876-4cb8-4392-8e24-74128d316762",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "> Since this is a table operation\r\n\r\nThe test uses the PAPI -- those semantic cannot be inferred -- I am fine with leaving the redundant code if you like it better that way -- but it does not improve test coverage and is confusing IMHO.",
        "createdAt" : "2020-02-10T17:59:14Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "16482286-6b2d-448d-bc71-4eac24068ac0",
        "parentId" : "6a7a0876-4cb8-4392-8e24-74128d316762",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah! I was still thinking about the foreign-key join test. You're right.",
        "createdAt" : "2020-02-10T23:00:46Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fc4da0e7f0a29845782c4f3a860289bbdfb356a",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +1559,1563 @@            // and _then_ print it with \"recurse-\" prepended.\n\n            in.pipeInput(\"B\", \"beta\");\n            final List<KeyValue<String, String>> events = out.readKeyValuesToList();\n            assertThat("
  },
  {
    "id" : "1f2936ec-1ee0-4cc8-913a-638d76a8f68f",
    "prId" : 8065,
    "prUrl" : "https://github.com/apache/kafka/pull/8065#pullrequestreview-356417505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80b6e110-7fdf-4ee9-9a10-6c1ef6bc832c",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Here's the new test I added to make sure TopologyTestDriver works properly with task idling.",
        "createdAt" : "2020-02-11T04:58:51Z",
        "updatedAt" : "2020-02-11T22:50:50Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fc4da0e7f0a29845782c4f3a860289bbdfb356a",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +1694,1698 @@                    new KeyValue<>(\"B\", \"beta\")\n                ))\n            );\n        }\n    }"
  },
  {
    "id" : "c32dc7f1-8420-4b5b-b9f1-7cb52b840d01",
    "prId" : 8631,
    "prUrl" : "https://github.com/apache/kafka/pull/8631#pullrequestreview-410458183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ede2dd7-0db4-4074-ab98-224d7e3cece0",
        "parentId" : null,
        "authorId" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "body" : "Would this test still pass, even without the global table?",
        "createdAt" : "2020-05-12T09:16:11Z",
        "updatedAt" : "2020-05-12T09:16:37Z",
        "lastEditedBy" : "e431deb4-a19e-4e78-a775-12af049c9089",
        "tags" : [
        ]
      },
      {
        "id" : "3d980034-778d-437d-9282-bf4c692c2ae7",
        "parentId" : "9ede2dd7-0db4-4074-ab98-224d7e3cece0",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Yes, the `SOURCE_TOPCI_1` should be added to the set of produced topics in any case. It's more like a \"reverse\" check, i.e., that it does _not fail_ with a `to()` operation that reuses the \"global topic name\". \r\n\r\nI was not 100% sure if this test is strictly necessary, but thought it can't hurt either.",
        "createdAt" : "2020-05-12T22:08:52Z",
        "updatedAt" : "2020-05-12T22:08:52Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b94b59e26b27c4290ebb44f67f0034cd8f52db71",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +514,518 @@\n    @Test\n    public void shouldCaptureGlobalTopicNameIfWrittenInto() {\n        final StreamsBuilder builder = new StreamsBuilder();\n        builder.globalTable(SOURCE_TOPIC_1, Materialized.as(\"globalTable\"));"
  },
  {
    "id" : "b197298b-8fb5-443f-bd2a-44b3aad0454e",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09f0cfcb-89c3-4be0-b6b3-05b73cfefcbc",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Shockingly, the old test wasn't testing what it was supposed to test.\r\n\r\nIt's supposed to check and make sure the processor populates the global store, but it was actually just checking whether the mock captured the processed records. I changed the processor to actually do what it's supposed to, and then changed the assertion below to check what this test is really supposed to be checking.",
        "createdAt" : "2020-08-26T02:03:14Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +403,407 @@                        store.put(key, value);\n                    }\n                }\n            );\n        }"
  },
  {
    "id" : "1fb73b0c-e7d5-45de-9447-4719f6dba0a0",
    "prId" : 9221,
    "prUrl" : "https://github.com/apache/kafka/pull/9221#pullrequestreview-475089291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60fc61f2-5e63-46a4-9ec2-484d00f55b3b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Just casting `null` to resolve the right overload.",
        "createdAt" : "2020-08-26T02:03:37Z",
        "updatedAt" : "2020-09-09T17:34:57Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c37687893a08e3bb056f99cc9927a5c679f80d5d",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +1004,1008 @@    public void shouldReturnAllStores() {\n        final Topology topology = setupSourceSinkTopology();\n        topology.addProcessor(\"processor\", (ProcessorSupplier<Object, Object, Object, Object>) () -> null, \"source\");\n        topology.addStateStore(\n            new KeyValueStoreBuilder<>("
  }
]