[
  {
    "id" : "6b89c5f2-4754-4d12-bc36-c42d220982b7",
    "prId" : 5590,
    "prUrl" : "https://github.com/apache/kafka/pull/5590#pullrequestreview-150772343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1127bb14-9464-4d38-9963-4b7595e64f58",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "registering our generic serde for all the things.",
        "createdAt" : "2018-08-29T22:05:21Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f1710a4a49c23eb65688ee83b77674963e819a1",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +180,184 @@        props.put(StreamsConfig.DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS, JSONSerde.class);\n        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, JSONSerde.class);\n        props.put(StreamsConfig.DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS, JSONSerde.class);\n        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n        props.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);"
  },
  {
    "id" : "7e45ac55-c382-4b18-b781-01ba6b68c9bc",
    "prId" : 5590,
    "prUrl" : "https://github.com/apache/kafka/pull/5590#pullrequestreview-151384695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80cb0435-da8b-45ac-8116-a8e29f1c959e",
        "parentId" : null,
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "As far as I remember Jackson would throw an exception if you try to feed it with `null`. Would it be better for us to do that?",
        "createdAt" : "2018-08-30T15:57:01Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      },
      {
        "id" : "1d32e537-1fe2-41a0-8cbc-3d61bc97674b",
        "parentId" : "80cb0435-da8b-45ac-8116-a8e29f1c959e",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "No, `null` is a valid wire-format for a Kafka document. It's generally treated as a tombstone.\r\n\r\nI think you're right about Jackson, though, which makes it all the more important to short-circuit on null values, as I've done.",
        "createdAt" : "2018-08-30T20:27:41Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "24270aa5-cdbc-4c29-922e-3e4374e92253",
        "parentId" : "80cb0435-da8b-45ac-8116-a8e29f1c959e",
        "authorId" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "body" : "Ok, fair point about the tombstones, I didn't consider that.",
        "createdAt" : "2018-08-31T13:02:27Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "cb6f8432-d515-4113-87f8-14e555ab8ed1",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f1710a4a49c23eb65688ee83b77674963e819a1",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +91,95 @@        public T deserialize(final String topic, final byte[] data) {\n            if (data == null) {\n                return null;\n            }\n"
  },
  {
    "id" : "8c7085b0-80e7-4b68-aedc-6f7e14ae52cd",
    "prId" : 5590,
    "prUrl" : "https://github.com/apache/kafka/pull/5590#pullrequestreview-151428825",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b1930a8-9b35-438b-95ea-c7342cbf64c2",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@vvcephei I see that you'd prefer to go with the fancy way :) ",
        "createdAt" : "2018-08-30T22:59:29Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "d5375b8c-be96-46fd-aaa5-7bb43aa195b3",
        "parentId" : "8b1930a8-9b35-438b-95ea-c7342cbf64c2",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Before, the purpose was to discuss what alternatives exist to one-serde-per-class. I thought it was better to be very clear in that discussion.\r\n\r\nNow the goal is to make an actual recommendation for people to use. I think for production code, the Jenkins annotations are more maintainable.",
        "createdAt" : "2018-08-31T14:50:58Z",
        "updatedAt" : "2018-08-31T17:22:47Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f1710a4a49c23eb65688ee83b77674963e819a1",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +131,135 @@     * An interface for registering types that can be de/serialized with {@link JSONSerde}.\n     */\n    @SuppressWarnings(\"DefaultAnnotationParam\") // being explicit for the example\n    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = \"_t\")\n    @JsonSubTypes({"
  },
  {
    "id" : "a8a68edb-dd4a-4804-9c39-132ac1548728",
    "prId" : 5682,
    "prUrl" : "https://github.com/apache/kafka/pull/5682#pullrequestreview-158588441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f282f05-3bad-4de3-b157-eee3bcc37fbe",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think we'd get better test coverage if, as a general rule, the new Duration methods call through to the deprecated methods.\r\nThen, when we change all the tests to call the new API, we're still exercising both the new and old code paths.",
        "createdAt" : "2018-09-24T21:23:55Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "326bf675-6d0c-4ebe-ba0e-9a768492ab7e",
        "parentId" : "0f282f05-3bad-4de3-b157-eee3bcc37fbe",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I think this is the answer to your earlier question. If you were to implement the new Duration methods by calling the old `long` methods, then I think we should just migrate all tests to call the new methods.",
        "createdAt" : "2018-09-24T22:01:36Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "dd94d139-6575-4919-b640-7ac61619b39a",
        "parentId" : "0f282f05-3bad-4de3-b157-eee3bcc37fbe",
        "authorId" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "body" : "OK. Thanks I will follow your advice.",
        "createdAt" : "2018-09-25T14:59:13Z",
        "updatedAt" : "2018-10-04T14:34:18Z",
        "lastEditedBy" : "fe0be475-2786-4ac9-8152-c07fa363b977",
        "tags" : [
        ]
      }
    ],
    "commit" : "5210f9fff117c695cb1f3024c94eff7f49599a6a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +208,212 @@            .map((user, viewRegion) -> new KeyValue<>(viewRegion.region, viewRegion))\n            .groupByKey(Serialized.with(Serdes.String(), new JSONSerde<>()))\n            .windowedBy(TimeWindows.of(Duration.ofDays(7)).advanceBy(Duration.ofSeconds(1)))\n            .count()\n            .toStream()"
  }
]