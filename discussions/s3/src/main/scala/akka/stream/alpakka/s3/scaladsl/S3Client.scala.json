[
  {
    "id" : "e2e207fd-6879-4114-97af-716e77c809ce",
    "prId" : 1274,
    "prUrl" : "https://github.com/akka/alpakka/pull/1274#pullrequestreview-165548316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bca6e725-3a45-4048-9e03-32874d63dc27",
        "parentId" : null,
        "authorId" : "f0abef99-a19c-44d7-a733-a6eb198f97a1",
        "body" : "Following the boy scout rule, I improved this.\r\n\r\nThere are several Content-Type classes: `akka.http.scaladsl.model.ContentType`, `akka.http.scaladsl.model.headers.Content-Length` and before #858 we were using the wrong one...",
        "createdAt" : "2018-10-17T10:01:11Z",
        "updatedAt" : "2018-10-18T12:10:01Z",
        "lastEditedBy" : "f0abef99-a19c-44d7-a733-a6eb198f97a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "667c1958e3d0868c232ea0ad8b034c30898dc6d0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +140,144 @@   */\n  lazy val contentType: Option[String] = metadata.collectFirst {\n    case ct: `Content-Type` => ct.value\n  }\n"
  },
  {
    "id" : "0bfa8cac-2539-421f-9562-5e2b2876df81",
    "prId" : 563,
    "prUrl" : "https://github.com/akka/alpakka/pull/563#pullrequestreview-83765469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09ce48dd-37a3-4eae-bc86-6f20580039e0",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "Ah, here they are done in the right way, so I guess the other methods were just left overs?",
        "createdAt" : "2017-12-15T08:19:22Z",
        "updatedAt" : "2017-12-15T10:14:00Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      },
      {
        "id" : "ba52d4ab-675a-4bed-8963-5548fb27e8db",
        "parentId" : "09ce48dd-37a3-4eae-bc86-6f20580039e0",
        "authorId" : "0101c09a-9fdc-42d6-a1e8-e0f9ab8b14ee",
        "body" : "yep, also the related constants have been removed",
        "createdAt" : "2017-12-15T10:14:41Z",
        "updatedAt" : "2017-12-15T10:14:42Z",
        "lastEditedBy" : "0101c09a-9fdc-42d6-a1e8-e0f9ab8b14ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "02b2169c3714cf7d888879d954958df2146ebd10",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +141,145 @@  }.get\n\n}\nobject ObjectMetadata {\n  def apply(metadata: Seq[HttpHeader]) = new ObjectMetadata(metadata)"
  },
  {
    "id" : "0fd00829-d482-4b0a-ad8c-33e94ad47fa6",
    "prId" : 183,
    "prUrl" : "https://github.com/akka/alpakka/pull/183#pullrequestreview-22067907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7428f8a5-3b9f-4334-a2a5-c659764716fe",
        "parentId" : null,
        "authorId" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "body" : "is there a corresponding thing in `javadsl`?\r\n\r\nis this the purpose of the PR? the other changes are \"only\" refactoring?",
        "createdAt" : "2017-02-13T08:05:32Z",
        "updatedAt" : "2017-02-15T18:00:51Z",
        "lastEditedBy" : "b8cd968d-9321-417f-8dcf-5300bfdd199e",
        "tags" : [
        ]
      },
      {
        "id" : "aa2a4f2a-bbea-41c7-a851-72bffa4f4b72",
        "parentId" : "7428f8a5-3b9f-4334-a2a5-c659764716fe",
        "authorId" : "f5d1cb2f-9b94-4a9a-8a71-47a02dcbe5bd",
        "body" : "> is there a corresponding thing in javadsl?\r\n\r\njust added with the latest commit. \r\n\r\n> is this the purpose of the PR? the other changes are \"only\" refactoring?\r\n\r\nyep, that's the core change of this PR. the refactorings were needed to make it work.",
        "createdAt" : "2017-02-15T18:04:42Z",
        "updatedAt" : "2017-02-15T18:04:42Z",
        "lastEditedBy" : "f5d1cb2f-9b94-4a9a-8a71-47a02dcbe5bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2a88cbc30e2dc3cfcb8c9287b7d77c01a8e39f8",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +39,43 @@  private[this] val impl = S3Stream(credentials, region)\n\n  def request(bucket: String, key: String): Future[HttpResponse] = impl.request(S3Location(bucket, key))\n\n  def download(bucket: String, key: String): Source[ByteString, NotUsed] = impl.download(S3Location(bucket, key))"
  }
]