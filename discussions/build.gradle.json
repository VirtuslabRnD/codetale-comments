[
  {
    "id" : "9dc8bdd5-d130-49db-b522-0372bcae901d",
    "prId" : 4949,
    "prUrl" : "https://github.com/apache/kafka/pull/4949#pullrequestreview-116437594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69ce14bf-caaa-4d81-96d2-5b234a0056cf",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Unrelated question, why is `scalaLogging` just a test compile dependency?",
        "createdAt" : "2018-04-30T18:26:31Z",
        "updatedAt" : "2018-05-06T18:20:56Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "13ad2a28-1eff-4c31-ac68-f0703d0fe55c",
        "parentId" : "69ce14bf-caaa-4d81-96d2-5b234a0056cf",
        "authorId" : "27ab30e2-edf7-4e09-a032-8cc89f132093",
        "body" : "It's required by the `LazyLogging` trait referenced by several tests, but it doesn't look like any logging is actually done.  It's probably safe to remove this.  @debasishg can you provide some insight here?",
        "createdAt" : "2018-04-30T18:43:01Z",
        "updatedAt" : "2018-05-06T18:20:56Z",
        "lastEditedBy" : "27ab30e2-edf7-4e09-a032-8cc89f132093",
        "tags" : [
        ]
      },
      {
        "id" : "2d1fe99e-250e-4580-b3ae-8ca77c913545",
        "parentId" : "69ce14bf-caaa-4d81-96d2-5b234a0056cf",
        "authorId" : "7b2b0b66-666b-4e5c-beda-94b652bf1309",
        "body" : "+1 .. it's there, along with `log4j.properties` as part of logging infrastructure from the tests. Currently not used though. We can remove the imports and do away with the dependency. Do we keep `log4j.properties` ?",
        "createdAt" : "2018-04-30T18:52:52Z",
        "updatedAt" : "2018-05-06T18:20:56Z",
        "lastEditedBy" : "7b2b0b66-666b-4e5c-beda-94b652bf1309",
        "tags" : [
        ]
      },
      {
        "id" : "4a1faa91-e106-4c78-8a79-9c6e86a3247f",
        "parentId" : "69ce14bf-caaa-4d81-96d2-5b234a0056cf",
        "authorId" : "27ab30e2-edf7-4e09-a032-8cc89f132093",
        "body" : "Let's remove the dependency.  I think it makes sense to keep `log4j.properties` so users can see what's happening with the embedded Kafka instance and Kafka streams when the tests are run.  ",
        "createdAt" : "2018-04-30T21:06:38Z",
        "updatedAt" : "2018-05-06T18:20:56Z",
        "lastEditedBy" : "27ab30e2-edf7-4e09-a032-8cc89f132093",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b451d5132582b24f30076860074190868e8c573",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +981,985 @@  println \"Building project 'streams-scala' with Scala version ${versions.scala}\"\n  apply plugin: 'scala'\n  archivesBaseName = \"kafka-streams-scala_${versions.baseScala}\"\n\n  dependencies {"
  },
  {
    "id" : "390f5bae-a5b6-486e-8d1b-41e383516bc3",
    "prId" : 4994,
    "prUrl" : "https://github.com/apache/kafka/pull/4994#pullrequestreview-120780909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "977f7643-9236-4e67-b5ed-d548505fcd95",
        "parentId" : null,
        "authorId" : "915b2f67-05e6-4824-939a-398e7be58870",
        "body" : "we need to include public classes to javadocs at line no: 859",
        "createdAt" : "2018-05-16T18:07:55Z",
        "updatedAt" : "2018-05-26T01:46:03Z",
        "lastEditedBy" : "915b2f67-05e6-4824-939a-398e7be58870",
        "tags" : [
        ]
      },
      {
        "id" : "1570462e-8111-45b2-baee-be582cedd162",
        "parentId" : "977f7643-9236-4e67-b5ed-d548505fcd95",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "üëç Fixed -- thanks for the review @omkreddy ",
        "createdAt" : "2018-05-16T19:12:58Z",
        "updatedAt" : "2018-05-26T01:46:03Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a4c4e8225d82f39b1ff2b67d43103fd3b879c8f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +789,793 @@    compile libs.slf4jApi\n    compile libs.jacksonDatabind // for SASL/OAUTHBEARER bearer token parsing\n\n    testCompile libs.bcpkix\n    testCompile libs.junit"
  },
  {
    "id" : "b4a3843f-948f-4663-848b-ecf5c88c8391",
    "prId" : 5110,
    "prUrl" : "https://github.com/apache/kafka/pull/5110#pullrequestreview-125030370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b155b76-f6b5-448b-b5e9-6dfb13a043a5",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "What happens if we don't include this?",
        "createdAt" : "2018-05-31T20:36:15Z",
        "updatedAt" : "2018-06-12T06:12:37Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "83367cf7-8502-42ec-b780-0c54fce2040e",
        "parentId" : "7b155b76-f6b5-448b-b5e9-6dfb13a043a5",
        "authorId" : "915b2f67-05e6-4824-939a-398e7be58870",
        "body" : "We will not get below provided scope dependency in clients maven pom file.  Like regular maven based projects, it is good to publish provided scope libraries. Otherwise users will not get to know all the required libs (users may not always read the docs).\r\n\r\n```\r\n   <dependency>\r\n      <groupId>com.fasterxml.jackson.core</groupId>\r\n      <artifactId>jackson-databind</artifactId>\r\n      <version>2.9.5</version>\r\n      <scope>provided</scope>\r\n    </dependency>\r\n```",
        "createdAt" : "2018-06-01T02:08:26Z",
        "updatedAt" : "2018-06-12T06:12:37Z",
        "lastEditedBy" : "915b2f67-05e6-4824-939a-398e7be58870",
        "tags" : [
        ]
      }
    ],
    "commit" : "105129c45a1d736f898c50a4740af38e36160e6c",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +799,803 @@    compileOnly libs.jacksonDatabind // for SASL/OAUTHBEARER bearer token parsing\n\n    jacksonDatabindConfig libs.jacksonDatabind // to publish as provided scope dependency.\n\n    testCompile libs.bcpkix"
  },
  {
    "id" : "89a518fb-26ad-4fd0-b5e1-8c5ce2fecf02",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-233792055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cf80d17-169b-4a91-b3a8-79a290ad887e",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We should add a comment explaining why we are doing this.",
        "createdAt" : "2019-04-29T13:40:32Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "5f1b8146-abbb-4c76-ae85-d7d0e1a357e5",
        "parentId" : "9cf80d17-169b-4a91-b3a8-79a290ad887e",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done.",
        "createdAt" : "2019-05-05T18:24:50Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +427,431 @@      scalaCompileOptions.additionalParameters += [\n        \"-Xlint:by-name-right-associative\",\n        \"-Xlint:unsound-match\"\n      ]\n    }"
  },
  {
    "id" : "f5eaf0c3-c9a3-4920-986d-cefd4c104272",
    "prId" : 5454,
    "prUrl" : "https://github.com/apache/kafka/pull/5454#pullrequestreview-234182865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83617239-672a-473c-80d3-6f5a32b905a6",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "These are the two relevant PRs for these changes:\r\n\r\n* https://github.com/scala/scala/pull/6502\r\n* https://github.com/scala/scala/pull/5969\r\n\r\nInstead of doing it like this, I'd do only add these params if baseScala is 2.11 or 2.12 (similar to `-Xlint:constant`). Future versions of Scala won't have them either so the suggested approach is more future proof. Also, worth including the PR references in a comment near the conditional code.",
        "createdAt" : "2019-05-05T19:21:52Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8d6c283b-54a4-4b49-a071-b7d38134bce4",
        "parentId" : "83617239-672a-473c-80d3-6f5a32b905a6",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "Done, new commit pushed.",
        "createdAt" : "2019-05-06T20:23:49Z",
        "updatedAt" : "2019-06-22T07:42:05Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b8ae01208a9735966ec060e51eb3487294bf05",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +427,431 @@      scalaCompileOptions.additionalParameters += [\n        \"-Xlint:by-name-right-associative\",\n        \"-Xlint:unsound-match\"\n      ]\n    }"
  },
  {
    "id" : "db8a1689-27c3-456a-a9a1-6d481724e766",
    "prId" : 5605,
    "prUrl" : "https://github.com/apache/kafka/pull/5605#pullrequestreview-153150760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "parentId" : null,
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Not needed immediately, but I put this in so when we release `2.1` we are set for 2.0 upgrade/downgrade tests.",
        "createdAt" : "2018-09-03T20:22:20Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "cdd5337a-c164-4fc4-9cd6-7b8e715e0e28",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Why not needed now? We would use this to test upgrading from 2.0 to 2.1-SNAPSHOT",
        "createdAt" : "2018-09-05T18:54:38Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "23ae8b0c-07c0-491a-892a-6af01f511366",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Sure, but we can't include `2.0` in the test until we get a KIP for updating `StreamsConfig` for the `2.0` version.  ",
        "createdAt" : "2018-09-06T15:41:15Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "c3836354-8f6b-499a-b92a-87d7a4b806ee",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "@bbejeck If `StreamsConfig#TOPOLOGY_OPTIMIZATION` is set to `NO_OPTIMIZATION`, which is the default value, it should be compatible still right?",
        "createdAt" : "2018-09-06T20:09:27Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "860ae818-dfef-40fa-b5fa-d0221e87fd38",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Yes, that's correct.",
        "createdAt" : "2018-09-06T20:31:10Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "fe66536f-c809-41b7-acad-9ff64a656556",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "So can we add the test from 2.0 to 2.1-SNAPSHOT in this PR as well?",
        "createdAt" : "2018-09-06T20:43:59Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "c35ba2a2-7a58-4c9e-98a9-4768374f2e18",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Not yet `StreamsConfigs` checks for a valid version to upgrade from and adding `2.0` fails\r\nhttps://github.com/apache/kafka/blob/trunk/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java#L675\r\n\r\nIt's my understanding we need a KIP to add `2.0`.  If we don't need a KIP, then I can add `2.0` to `StreamsConfig` and update the test.",
        "createdAt" : "2018-09-06T20:57:11Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "8f88525f-af70-4b36-8f21-9d8148c3341c",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "We should just be able to use the default value (which is `none`) in 2.1-SNAPSHOT right?",
        "createdAt" : "2018-09-06T21:03:10Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "b9fa433b-7211-4330-af36-65e16add7b17",
        "parentId" : "e69f687b-d45c-42b8-9a73-c1025c9021d0",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We don't need to add `2.0` as `upgrade.from` config -- with version probing, upgrading from 2.0 to 2.1 must work without the config specified.",
        "createdAt" : "2018-09-06T22:50:29Z",
        "updatedAt" : "2018-09-13T16:35:40Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "16e7a0147fd58b9c3c876902b1fef6fae6638fad",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1190,1194 @@}\n\nproject(':streams:upgrade-system-tests-20') {\n  archivesBaseName = \"kafka-streams-upgrade-system-tests-20\"\n"
  },
  {
    "id" : "b3cc47b3-ff98-4706-925f-179553c1a515",
    "prId" : 5726,
    "prUrl" : "https://github.com/apache/kafka/pull/5726#pullrequestreview-244781906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@vahidhashemian I don't think we should have this dependency. We have avoided the Jackson module for Scala on purpose as it doesn't provide enough value. It would be good to fix this before 2.3.0 if at all possible. cc @hachikuji",
        "createdAt" : "2019-05-30T16:56:40Z",
        "updatedAt" : "2019-05-30T16:56:41Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c3c18f11-4c3a-4f31-8969-758c3cfddb7f",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "To clarify, I'm referring to the Scala module (I got the line slightly wrong). The CSV one is probably fine.",
        "createdAt" : "2019-05-30T16:59:06Z",
        "updatedAt" : "2019-05-30T16:59:06Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "3b331474-70ae-4b46-b7ee-5bff12bfbd28",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "How this was isolated:\r\n-  comment out **libs.jacksonModuleScala** dependency in build.gradle\r\n- execute **./gradlew -PscalaVersion=2.12 jar**\r\n\r\nResult: two compile errors in `kafka.admin.ConsumerGroupCommand` (**_core_** module)\r\n\r\nI volunteer to help with this.",
        "createdAt" : "2019-05-30T18:28:11Z",
        "updatedAt" : "2019-05-30T18:28:11Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "9a6f98f3-b2ee-4ee6-9f61-32109ffc26c3",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "@dejan2609 If you submit a PR, I'll help review it.",
        "createdAt" : "2019-05-30T18:55:33Z",
        "updatedAt" : "2019-05-30T18:55:34Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "204ea469-84c8-42e8-993b-81a6a03ea35d",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "body" : "@ijuma Thanks for catching this. I wasn't aware of the limitation.\r\n@dejan2609 Thanks for volunteering. If you like, you can open a JIRA for easier tracking of the issue.",
        "createdAt" : "2019-05-31T03:52:15Z",
        "updatedAt" : "2019-05-31T03:52:15Z",
        "lastEditedBy" : "2a5e5a4d-e0e2-4e26-b139-0930dd63f949",
        "tags" : [
        ]
      },
      {
        "id" : "77541cff-eaff-48f6-abe9-358475c4e0ec",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "@vahidhashemian Sure, I will open JIRA ticket.\r\n\r\n@Ijuma FYI: as a former Java developer that switched to build/release engineering I can't deliver quickly (but I assume this is not a post-haste). ",
        "createdAt" : "2019-06-01T17:03:49Z",
        "updatedAt" : "2019-06-01T17:03:49Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      },
      {
        "id" : "0bc4c53f-e0b1-47d5-8469-c4ed1297bf5a",
        "parentId" : "d7f49966-ab2b-41b6-ac6e-a69f11d720cd",
        "authorId" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "body" : "JIRA ticket is created here: https://issues.apache.org/jira/browse/KAFKA-8466 **_Remove 'jackson-module-scala' dependency (and replace it with some code)_**",
        "createdAt" : "2019-06-03T09:52:17Z",
        "updatedAt" : "2019-06-03T09:52:18Z",
        "lastEditedBy" : "b5dd24df-aa2f-41ea-bd40-6589320ee740",
        "tags" : [
        ]
      }
    ],
    "commit" : "d46a39a67c8313bff14fc4693ccd6692657a7a79",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +640,644 @@    compile libs.jacksonDatabind\n    compile libs.jacksonModuleScala\n    compile libs.jacksonDataformatCsv\n    compile libs.jacksonJDK8Datatypes\n    compile libs.joptSimple"
  },
  {
    "id" : "6af5774e-eda3-48f6-a537-f0e13fd74127",
    "prId" : 6045,
    "prUrl" : "https://github.com/apache/kafka/pull/6045#pullrequestreview-194361141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b78f2802-242e-48b5-8908-36450ffcf47c",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Out of curiosity, what does this do? In general, it's good practice to explain the reason for unrelated changes in the PR description.",
        "createdAt" : "2019-01-19T06:49:13Z",
        "updatedAt" : "2019-01-19T06:49:22Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "4e7ff4af-aac2-450e-a545-4f55f7069122",
        "parentId" : "b78f2802-242e-48b5-8908-36450ffcf47c",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "Setting a group + description on a task will add it to the `gradle tasks` output. Without it, you have to search through the gradle file to discover what tasks exist. \r\n\r\n```\r\n$ gradle tasks\r\n\r\n...\r\n\r\nVerification tasks\r\n------------------\r\ncheck - Runs all checks.\r\ncheckScoverage\r\ncheckstyleMain - Run checkstyle on all main Java sources\r\ncheckstyleTest - Run checkstyle on all test Java sources\r\njacocoTestCoverageVerification - Verifies code coverage metrics based on specified rules for the test task.\r\njacocoTestReport - Generates code coverage report for the test task.\r\nreportScoverage\r\nspotlessApply - Applies code formatting steps to sourcecode in-place.\r\nspotlessCheck - Checks that sourcecode satisfies formatting steps.\r\ntest - Runs the unit tests.\r\ntestScoverage\r\n\r\n\r\nBUILD SUCCESSFUL in 7s\r\n1 actionable task: 1 executed\r\n```",
        "createdAt" : "2019-01-19T13:47:12Z",
        "updatedAt" : "2019-01-19T13:47:12Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "e5622877-e05b-4fbf-a3df-658b453402ca",
        "parentId" : "b78f2802-242e-48b5-8908-36450ffcf47c",
        "authorId" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "body" : "And agreed, I should have added a note in the PR description.",
        "createdAt" : "2019-01-19T13:48:12Z",
        "updatedAt" : "2019-01-19T13:48:12Z",
        "lastEditedBy" : "083f2f03-ca7e-48a1-9781-482564dfdf53",
        "tags" : [
        ]
      },
      {
        "id" : "de30b420-ac66-49d1-bb61-a3d6afade96b",
        "parentId" : "b78f2802-242e-48b5-8908-36450ffcf47c",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Thanks for the explanation!",
        "createdAt" : "2019-01-19T16:12:51Z",
        "updatedAt" : "2019-01-19T16:12:51Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba0768420c04aa546906895016671fd544ff38f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +379,383 @@    group = 'Verification'\n    description = 'Run checkstyle on all test Java sources'\n  }\n\n  test.dependsOn('checkstyleMain', 'checkstyleTest')"
  },
  {
    "id" : "062ad3c8-9843-4c1c-b79e-945f8523df83",
    "prId" : 6631,
    "prUrl" : "https://github.com/apache/kafka/pull/6631#pullrequestreview-236170434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5afb32c2-110b-4fa9-86ac-2da9c6b1a13b",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Huh. Why do we need powermock? For mocking final classes?",
        "createdAt" : "2019-05-02T21:15:29Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "2257f7c2-a4a2-494b-9252-50c1c0d37c32",
        "parentId" : "5afb32c2-110b-4fa9-86ac-2da9c6b1a13b",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "... ah, I see, for mocking static methods to test StreamsMetricImpl. Nice!",
        "createdAt" : "2019-05-10T14:45:30Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "30d1f838-2dcb-4d67-bf88-51143b9193bf",
        "parentId" : "5afb32c2-110b-4fa9-86ac-2da9c6b1a13b",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Actually to mock static methods in `StreamsMetricsImpl` to test `ThreadMetrics`.",
        "createdAt" : "2019-05-10T15:29:17Z",
        "updatedAt" : "2019-05-20T06:37:39Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce9250c078e701030e104f75c156a0dbf4634196",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1122,1126 @@    testCompile libs.easymock\n    testCompile libs.powermockJunit4\n    testCompile libs.powermockEasymock\n    testCompile libs.bcpkix\n    testCompile libs.hamcrest"
  },
  {
    "id" : "3d16662c-44d0-4745-ba05-1e75a9e39428",
    "prId" : 7248,
    "prUrl" : "https://github.com/apache/kafka/pull/7248#pullrequestreview-308587183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2ac9f56-e15c-4ceb-9702-fb4aeb3b2c65",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Unfortunately, IDEA doesn't pick this up, but you can run this manually before running in IDEA:\r\n```\r\n./gradlew :clients:processMessages :clients:processTestMessages :streams:processMessages\r\n```",
        "createdAt" : "2019-10-24T14:36:27Z",
        "updatedAt" : "2019-10-29T21:04:35Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "669a58a9-7e7c-47ce-9937-6cc8c4c8f741",
        "parentId" : "d2ac9f56-e15c-4ceb-9702-fb4aeb3b2c65",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "Good to know, I use `./gradlew jar` and it seems to pick everything up as well.",
        "createdAt" : "2019-10-24T15:46:55Z",
        "updatedAt" : "2019-10-29T21:04:35Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "f0572201-bc00-4750-9381-12759039493b",
        "parentId" : "d2ac9f56-e15c-4ceb-9702-fb4aeb3b2c65",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "yeah, that'll do it, too, as will `:compile`. The line above is just the minimal command to run (also works on the client code that needs to be re-generated every time you switch branches). It takes like 1.5 seconds.",
        "createdAt" : "2019-10-24T20:39:08Z",
        "updatedAt" : "2019-10-29T21:04:35Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "fe17e65e-bf86-45b5-84c9-c62de759282f",
        "parentId" : "d2ac9f56-e15c-4ceb-9702-fb4aeb3b2c65",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Would `./gradlew streams:test` automatically pick it up?",
        "createdAt" : "2019-10-29T01:37:31Z",
        "updatedAt" : "2019-10-29T21:04:35Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "dd95b64b-d24d-4a5f-b3b6-d2c71db76877",
        "parentId" : "d2ac9f56-e15c-4ceb-9702-fb4aeb3b2c65",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Yes, this line makes the code generation a dependency of the compile phase, which also has to run before the tests. ",
        "createdAt" : "2019-10-29T15:05:39Z",
        "updatedAt" : "2019-10-29T21:04:35Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4d6ae101dee1bb04c4a267771e3f9ac6ec347eb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1201,1205 @@  }\n\n  compileJava.dependsOn 'processMessages'\n\n  javadoc {"
  },
  {
    "id" : "70855ed3-90f9-4904-96c8-54a00161cc87",
    "prId" : 7397,
    "prUrl" : "https://github.com/apache/kafka/pull/7397#pullrequestreview-294494881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad1e653f-f78a-45db-b677-31d6b0d68e01",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "The determineCommitId logic is the same for both client and streams, I'm wondering if we can make it a global task that both can rely on (I'm not an expert of gradle, just wondering).",
        "createdAt" : "2019-09-27T17:45:49Z",
        "updatedAt" : "2019-09-27T17:46:23Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "00b47925-de26-45b6-b81e-3c0f6aa505ff",
        "parentId" : "ad1e653f-f78a-45db-b677-31d6b0d68e01",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I also had the same thought and I am also not a gradle expert. I would leave the duplicate code as it is for now to have a chance to get client-level metrics into the release and fix this afterwards.",
        "createdAt" : "2019-09-27T18:30:52Z",
        "updatedAt" : "2019-09-27T18:30:52Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf520ca11f46bab45c3912abe84419e70ee823c0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1172,1176 @@  }\n\n  task determineCommitId {\n    def takeFromHash = 16\n    if (commitId) {"
  },
  {
    "id" : "408ec370-2521-42aa-a0d9-e2d60ef45263",
    "prId" : 7452,
    "prUrl" : "https://github.com/apache/kafka/pull/7452#pullrequestreview-522555729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dc71abd-1083-4b3a-b752-3aedec466d94",
        "parentId" : null,
        "authorId" : "688ae185-c40e-4164-bb8f-b141f87c347e",
        "body" : "@ijuma I apologize if this the wrong place to ask a question about this PR. What would be the best place to start a discussion on removing `\"-opt-inline-from:scala.**\"` or reducing the scope of the glob to only include relevant methods like `Option.exists`? I'm not so familiar with the Kafka development process.\r\n\r\nAt Twitter, we are currently unable to upgrade to 2.5.x because kafka_2.12:2.5.1 inlines anonymous classes from the 2.12.11 library that no longer exist in the 2.12.12 library, resulting in crashes like this\r\n```\r\n java.lang.NoClassDefFoundError: scala/math/Ordering$$anon$7\r\n```\r\nWe can work around this issue by publishing a custom build of Kafka but that's not a sustainable solution.\r\n\r\nThese inlining settings are causing issues for a lot of users based on my search online. Even members of the Scala compiler team who worked on the inliner have suggested that the inliner settings in the Kafka build are based on false assumptions https://github.com/akka/alpakka-kafka/pull/1212#issuecomment-706933445 cc/ @lrytz \r\n",
        "createdAt" : "2020-11-03T12:06:21Z",
        "updatedAt" : "2020-11-03T12:06:21Z",
        "lastEditedBy" : "688ae185-c40e-4164-bb8f-b141f87c347e",
        "tags" : [
        ]
      },
      {
        "id" : "aea94284-84d1-4464-b807-46061100405a",
        "parentId" : "7dc71abd-1083-4b3a-b752-3aedec466d94",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "You can submit a PR. :)",
        "createdAt" : "2020-11-03T13:28:21Z",
        "updatedAt" : "2020-11-03T13:28:21Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "82610a43-e819-4041-8085-333177336158",
        "parentId" : "7dc71abd-1083-4b3a-b752-3aedec466d94",
        "authorId" : "688ae185-c40e-4164-bb8f-b141f87c347e",
        "body" : "I opened https://github.com/apache/kafka/pull/9548 :) ",
        "createdAt" : "2020-11-03T14:23:49Z",
        "updatedAt" : "2020-11-03T14:23:49Z",
        "lastEditedBy" : "688ae185-c40e-4164-bb8f-b141f87c347e",
        "tags" : [
        ]
      },
      {
        "id" : "4cc859b3-8f9b-4117-a835-ad66f9918fb8",
        "parentId" : "7dc71abd-1083-4b3a-b752-3aedec466d94",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Let's continue the discussion in #9548. Note the comment from @lrytz is regarding the claim that the `core` module should not be used as a library. This is the recommendation from the Kafka project though, so we can discuss in #9548 why users are depending on this module as a library (i.e. his expertise in the scala compiler/inliner is not relevant to this particular comment).",
        "createdAt" : "2020-11-03T14:33:21Z",
        "updatedAt" : "2020-11-03T14:34:42Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "80bb3ab0fec5200463de98ecdc483643694616b5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +428,432 @@      List<String> inlineFrom\n      if (project.name.equals('core'))\n        inlineFrom = [\"-opt-inline-from:scala.**\", \"-opt-inline-from:kafka.**\", \"-opt-inline-from:org.apache.kafka.**\"]\n      else\n        inlineFrom = [\"-opt-inline-from:org.apache.kafka.**\"]"
  },
  {
    "id" : "9ba6ea23-e403-4a39-b629-a7d277638784",
    "prId" : 7664,
    "prUrl" : "https://github.com/apache/kafka/pull/7664#pullrequestreview-313755927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbade15-af55-4fae-b9b7-a2c0667fc782",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "copying over hamcrest for the system test.",
        "createdAt" : "2019-11-08T02:41:19Z",
        "updatedAt" : "2019-12-10T16:19:00Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "5332705c02453ef86b4a7926d4d1bd8927f19f5c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1222,1226 @@      include('slf4j-log4j12*')\n      include('log4j*jar')\n      include('*hamcrest*')\n    }\n    from (configurations.runtime) {"
  },
  {
    "id" : "e52345d3-26cf-459c-91b0-778a8a3a1a5d",
    "prId" : 8429,
    "prUrl" : "https://github.com/apache/kafka/pull/8429#pullrequestreview-398924415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d42b46f6-d1ea-4a2a-b206-3164126bc38e",
        "parentId" : null,
        "authorId" : "542ab869-22c6-4e91-8cb0-3f722b478997",
        "body" : "aka `-Werror` in 2.13 :-)",
        "createdAt" : "2020-04-23T09:32:04Z",
        "updatedAt" : "2020-04-23T09:32:04Z",
        "lastEditedBy" : "542ab869-22c6-4e91-8cb0-3f722b478997",
        "tags" : [
        ]
      }
    ],
    "commit" : "138c47d6e4bf701172d9c7cc750b7ff035d577f4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +488,492 @@      scalaCompileOptions.additionalParameters += [\"-opt-warnings\"]\n      // Scala 2.13.2 introduces compiler warnings suppression, which is a pre-requisite for -Xfatal-warnings\n      scalaCompileOptions.additionalParameters += [\"-Xfatal-warnings\"]\n    }\n"
  },
  {
    "id" : "edf19b71-166c-4e58-8f27-bf3cd2e01c71",
    "prId" : 8541,
    "prUrl" : "https://github.com/apache/kafka/pull/8541#pullrequestreview-400037029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df9d938d-2880-4222-8f9d-09b379e396e4",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Necessary because the test name that JUnit generates for the parameterized StreamsPartitionAssignorTest is slightly too long. I have no way to shorten it because the thing that pushes it over is the fact that there are two package names in the parameterized method name, and there's no control over the format of the test name itself. So, I decided just to truncate the file name instead, which is almost certainly still unique for pretty much any test.",
        "createdAt" : "2020-04-23T23:23:57Z",
        "updatedAt" : "2020-04-28T03:20:48Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "89aa7631-3f3e-4148-8443-cc88501f5a45",
        "parentId" : "df9d938d-2880-4222-8f9d-09b379e396e4",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "The only alternative I can think of is to parameterize the \"short name\" of the TaskAssignor, which seems kind of wacky.\r\n\r\nAlso, worth noting the impact of truncation is nothing if the file name is still unique. If the name is shared between two tests, then the impact is still nothing if both tests pass. The only observable effect is that if one or both tests fail, their logs would get combined. It seems like we can afford just to defer this problem until it happens, if ever.",
        "createdAt" : "2020-04-24T15:13:30Z",
        "updatedAt" : "2020-04-28T03:20:48Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "d58f62dc73dc3f4832cb89b5be6a8c8ce2f32e60",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +239,243 @@      // truncate the file name if it's too long\n      def logFile = new File(\n              \"${projectDir}/build/reports/testOutput/${tid.substring(0, Math.min(tid.size(),240))}.test.stdout\"\n      )\n      logFile.parentFile.mkdirs()"
  },
  {
    "id" : "20582be6-6d62-49fa-85ac-b52c593f1638",
    "prId" : 8993,
    "prUrl" : "https://github.com/apache/kafka/pull/8993#pullrequestreview-444883555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cde56afc-a2ce-42bb-957a-1fe4f452dd62",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I realized this just now. We really should test upgrading from 2.5.0 to 2.5.1, and similar for every bugfix release. In other words, we should add/update \"LATEST_X_Y\" to the test matrix of the X.Y branch after each release.",
        "createdAt" : "2020-07-08T15:30:15Z",
        "updatedAt" : "2020-07-10T14:57:01Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "c87801aa970f960a9c072fbc03b2a2d2a19d7a30",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1509,1513 @@}\n\nproject(':streams:upgrade-system-tests-25') {\n  archivesBaseName = \"kafka-streams-upgrade-system-tests-25\"\n"
  },
  {
    "id" : "16ebfa7c-7329-47da-a7bf-26ea1b19becd",
    "prId" : 9073,
    "prUrl" : "https://github.com/apache/kafka/pull/9073#pullrequestreview-464322121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eee9e32e-d72b-4529-bd96-102d951b48dc",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I don't think we have actual unit/integration tests in those packages? Also seems a pain to keep it updates (and I am sure we will forget to update it). Should we just skip those?",
        "createdAt" : "2020-07-24T20:51:50Z",
        "updatedAt" : "2020-07-24T20:51:50Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "8af7ef15-9e00-4c9e-8898-08185b890293",
        "parentId" : "eee9e32e-d72b-4529-bd96-102d951b48dc",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Oh. Already merged. Never mind.",
        "createdAt" : "2020-07-24T20:52:14Z",
        "updatedAt" : "2020-07-24T20:52:14Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "e4389843-8c4c-48d7-9ac1-f1cd05935009",
        "parentId" : "eee9e32e-d72b-4529-bd96-102d951b48dc",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Thanks for the comment anyway.\r\n\r\nI was on the fence about it, but I went with including these projects just to be sure that `testAll` really tests all of the components of `:streams`. Even though they don't have tests, the `:test` target is convenient because it runs all of the compilation targets, as well as spotbugs and checkstyle. The idea is just to flush out any/all possible sources of failure so that we can be pretty sure that if `:streams:testAll` passes, then so will Jenkins.\r\n\r\nI agree it's a pain. Maybe we can consider either contributing a script to keep this stuff updated or writing some gradle code to build the list automatically.",
        "createdAt" : "2020-08-10T15:14:31Z",
        "updatedAt" : "2020-08-10T15:14:32Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "20daa22d0979730d7fb6d3aeb7d1a00b03d6a7d0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1284,1288 @@            ':streams:upgrade-system-tests-23:test',\n            ':streams:upgrade-system-tests-24:test',\n            ':streams:upgrade-system-tests-25:test',\n            ':streams:examples:test'\n    ]"
  },
  {
    "id" : "13d57f2f-77ee-4be9-a01a-018f2f4c8cb1",
    "prId" : 9238,
    "prUrl" : "https://github.com/apache/kafka/pull/9238#pullrequestreview-480121696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25b71f0e-1f4e-4f3a-94ba-be86b10bd389",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "Should this new option be supported by *test task*?",
        "createdAt" : "2020-09-01T21:16:09Z",
        "updatedAt" : "2020-09-01T21:53:08Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "a685414db7b41c9a0d2e1552b8be1a062fa7ab59",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +339,343 @@  task integrationTest(type: Test, dependsOn: compileJava) {\n    maxParallelForks = userMaxForks ?: Runtime.runtime.availableProcessors()\n    ignoreFailures = userIgnoreFailures\n\n    maxHeapSize = defaultMaxHeapSize"
  },
  {
    "id" : "6c6ce6a5-e912-4ee8-88e8-f27c097ab8a1",
    "prId" : 9486,
    "prUrl" : "https://github.com/apache/kafka/pull/9486#pullrequestreview-517145605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "364b307d-e012-4fe2-8ef4-3a7de50b533f",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Do we still need this with your latest change? Also, can you please check the indenting generally? It should be two spaces.",
        "createdAt" : "2020-10-26T17:26:17Z",
        "updatedAt" : "2020-10-26T20:22:13Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "c46f9012-42d8-4a9b-96c3-876043aebd8e",
        "parentId" : "364b307d-e012-4fe2-8ef4-3a7de50b533f",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : ">Do we still need this with your latest change?\r\n\r\nI thought about taking it out, but I left it in as a fail-safe, thinking that if the build file changes somehow enabling scaladoc for all submodules, `core` will only provide the scaladoc jar file with the license and manifest.\r\n\r\nI don't have a strong opinion on this, so I can remove if you want me to.\r\n\r\nAck on the indenting",
        "createdAt" : "2020-10-26T17:34:36Z",
        "updatedAt" : "2020-10-26T20:22:13Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "667a44c5-98e4-4a47-845d-f3918ad0a422",
        "parentId" : "364b307d-e012-4fe2-8ef4-3a7de50b533f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "ok, let's maybe add a comment explaining it then.",
        "createdAt" : "2020-10-26T18:26:26Z",
        "updatedAt" : "2020-10-26T20:22:13Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "1db277df-d4ea-46fd-8cfe-ab7747e9da8e",
        "parentId" : "364b307d-e012-4fe2-8ef4-3a7de50b533f",
        "authorId" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "body" : "ack",
        "createdAt" : "2020-10-26T19:59:08Z",
        "updatedAt" : "2020-10-26T20:22:13Z",
        "lastEditedBy" : "4c968502-bb3d-46ee-8719-0c0bdbc6242f",
        "tags" : [
        ]
      },
      {
        "id" : "cfbcd379-ae8e-4e3f-88d9-69979aec193b",
        "parentId" : "364b307d-e012-4fe2-8ef4-3a7de50b533f",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I tweaked it a bit",
        "createdAt" : "2020-10-26T20:22:58Z",
        "updatedAt" : "2020-10-26T20:22:58Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5b9e6e65cb3d7b2918c3bb07ff76b9820e15704",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +736,740 @@  scaladoc {\n    enabled = false\n  }\n  if (userEnableTestCoverage)\n    apply plugin: \"org.scoverage\""
  },
  {
    "id" : "4fc3e5bb-2d24-4494-83d3-38a6649d1178",
    "prId" : 9785,
    "prUrl" : "https://github.com/apache/kafka/pull/9785#pullrequestreview-564879611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b184e09-ceaa-4158-92c9-7359fe81208e",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "@ijuma Should we remove hamcrest? Removing it causes a bigger patch. The benefit of removing it is that our test assert get more consistent.",
        "createdAt" : "2020-12-24T10:19:15Z",
        "updatedAt" : "2020-12-24T10:19:15Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "114a5ab4-63be-49a0-a62b-4778d75122db",
        "parentId" : "3b184e09-ceaa-4158-92c9-7359fe81208e",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "see https://github.com/apache/kafka/pull/9520#issuecomment-757426244 so keeping ```libs.hamcrest``` is fine.",
        "createdAt" : "2021-01-10T06:43:46Z",
        "updatedAt" : "2021-01-10T06:43:46Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "749ee2aa-abf2-4723-8899-472c6e60722c",
        "parentId" : "3b184e09-ceaa-4158-92c9-7359fe81208e",
        "authorId" : "971fa008-53a4-419e-9bf1-f3f38de845ff",
        "body" : "Thank you .\nYou are so strong that you can track a lot of issues simultaneously !",
        "createdAt" : "2021-01-10T16:32:32Z",
        "updatedAt" : "2021-01-10T16:32:32Z",
        "lastEditedBy" : "971fa008-53a4-419e-9bf1-f3f38de845ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "2640cf19647cc3667bbde1a70ffde47abaeeb6e4",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1784,1788 @@    testCompile project(':clients').sourceSets.test.output\n    testCompile libs.junitJupiter\n    testCompile libs.hamcrest\n    testCompile libs.easymock\n  }"
  },
  {
    "id" : "92524530-82d8-4f53-a1f0-ceb3d510dc43",
    "prId" : 9836,
    "prUrl" : "https://github.com/apache/kafka/pull/9836#pullrequestreview-581924909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e781eeaf-a071-4252-ab68-71d5a86d7bf5",
        "parentId" : null,
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "To get access to more Matchers",
        "createdAt" : "2021-01-06T20:10:47Z",
        "updatedAt" : "2021-01-27T20:08:58Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "50403e04-c4bc-4fee-9043-fc86bbeca7ce",
        "parentId" : "e781eeaf-a071-4252-ab68-71d5a86d7bf5",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "We actually removed these from `clients` when we migrated to JUnit 5...",
        "createdAt" : "2021-02-02T14:01:09Z",
        "updatedAt" : "2021-02-02T14:01:09Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "21b33b00-a6cf-4684-b629-7d6328836c9a",
        "parentId" : "e781eeaf-a071-4252-ab68-71d5a86d7bf5",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "Ah, my apologies. I'll send a new PR to back this out.",
        "createdAt" : "2021-02-03T01:33:18Z",
        "updatedAt" : "2021-02-03T01:33:19Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc3ec40f25900d2c25d7c1de1de6271cd0180cd5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1119,1123 @@    testCompile libs.junitJupiter\n    testCompile libs.mockitoCore\n    testCompile libs.hamcrest\n\n    testRuntime libs.slf4jlog4j"
  },
  {
    "id" : "b151232e-595b-42d1-8e86-cffe6fa30a7a",
    "prId" : 9857,
    "prUrl" : "https://github.com/apache/kafka/pull/9857#pullrequestreview-566443745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c14d4341-85ca-427c-ab4d-5b945e521168",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Is \"examples\" the right name? Given that you converted `streams-examples`?",
        "createdAt" : "2021-01-12T13:09:43Z",
        "updatedAt" : "2021-01-12T13:09:44Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "05c65901-ce4c-45e6-81ee-f925cf6bdabe",
        "parentId" : "c14d4341-85ca-427c-ab4d-5b945e521168",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "> Is \"examples\" the right name? Given that you converted streams-examples?\r\n\r\ngradle uses the folder name as project name. It can be override if we want to make more readable naming. All project names are shown below.\r\n\r\n```\r\nclients\r\nconnect\r\ncore\r\nexamples\r\ngenerator\r\njmh-benchmarks\r\nlog4j-appender\r\nraft\r\nstreams\r\ntools\r\napi\r\nbasic-auth-extension\r\nfile\r\njson\r\nmirror\r\nmirror-client\r\nruntime\r\ntransforms\r\nexamples\r\nstreams-scala\r\ntest-utils\r\nupgrade-system-tests-0100\r\nupgrade-system-tests-0101\r\nupgrade-system-tests-0102\r\nupgrade-system-tests-0110\r\nupgrade-system-tests-10\r\nupgrade-system-tests-11\r\nupgrade-system-tests-20\r\nupgrade-system-tests-21\r\nupgrade-system-tests-22\r\nupgrade-system-tests-23\r\nupgrade-system-tests-24\r\nupgrade-system-tests-25\r\nupgrade-system-tests-26\r\nupgrade-system-tests-27\r\n```",
        "createdAt" : "2021-01-12T16:22:47Z",
        "updatedAt" : "2021-01-12T16:22:47Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      }
    ],
    "commit" : "29a2785b3a9f7e1144f75e3703db11aa7cd17080",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +242,246 @@  }\n\n  def shouldUseJUnit5 = [\"tools\", \"raft\", \"log4j-appender\", \"examples\"].contains(it.project.name)\n  def testLoggingEvents = [\"passed\", \"skipped\", \"failed\"]\n  def testShowStandardStreams = false"
  },
  {
    "id" : "16de6f7c-62a8-46a8-909d-2653858c6056",
    "prId" : 9876,
    "prUrl" : "https://github.com/apache/kafka/pull/9876#pullrequestreview-568478942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "838d90d7-5835-4132-b93c-bbae5820f18f",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Do we actually use hamcrest in this module? If not, we should remove this.",
        "createdAt" : "2021-01-14T06:07:42Z",
        "updatedAt" : "2021-01-14T17:53:49Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "8b89ffd3-d29a-49b6-a1ed-03fbe33a3674",
        "parentId" : "838d90d7-5835-4132-b93c-bbae5820f18f",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "yes, we use it",
        "createdAt" : "2021-01-14T17:49:00Z",
        "updatedAt" : "2021-01-14T17:53:49Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea359b2f64481a4031e74b1d5291d2e4724f5fe7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1024,1028 @@    compileOnly libs.log4j\n    testCompile libs.junitJupiter\n    testCompile libs.hamcrest\n    testCompile libs.slf4jlog4j\n    testCompile project(':clients').sourceSets.test.output // for org.apache.kafka.test.IntegrationTest"
  },
  {
    "id" : "8f612a85-a38d-4d2c-a970-59540d7bc2a7",
    "prId" : 9876,
    "prUrl" : "https://github.com/apache/kafka/pull/9876#pullrequestreview-568500794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c26c868b-5ce1-434d-b187-17d36cfc39e9",
        "parentId" : null,
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "I think you don't need this if that comment is true.",
        "createdAt" : "2021-01-14T06:08:18Z",
        "updatedAt" : "2021-01-14T17:53:49Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "6cb42d3b-7087-481e-9913-d6edd4f3afa1",
        "parentId" : "c26c868b-5ce1-434d-b187-17d36cfc39e9",
        "authorId" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "body" : "later PRs add IntegrationTest to the metadata module... simpler to just keep it in this PR",
        "createdAt" : "2021-01-14T17:49:33Z",
        "updatedAt" : "2021-01-14T17:53:49Z",
        "lastEditedBy" : "514c0afb-8649-4fd9-a6ea-ee9e1b695274",
        "tags" : [
        ]
      },
      {
        "id" : "bd3820ad-7f3f-4906-ac44-93f8d818a9a6",
        "parentId" : "c26c868b-5ce1-434d-b187-17d36cfc39e9",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "This is not right, the mentioned annotation is only used for JUnit 4. I submitted a minor PR that fixes the comment at least: https://github.com/apache/kafka/pull/9897",
        "createdAt" : "2021-01-14T18:17:13Z",
        "updatedAt" : "2021-01-14T18:17:13Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea359b2f64481a4031e74b1d5291d2e4724f5fe7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1026,1030 @@    testCompile libs.hamcrest\n    testCompile libs.slf4jlog4j\n    testCompile project(':clients').sourceSets.test.output // for org.apache.kafka.test.IntegrationTest\n  }\n"
  },
  {
    "id" : "25afff90-de91-48fb-9a4a-33262dd65232",
    "prId" : 9882,
    "prUrl" : "https://github.com/apache/kafka/pull/9882#pullrequestreview-567912918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87e90a13-b0d0-4cf0-b5ff-870761e8f96d",
        "parentId" : null,
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "```examples``` is already in junit 5 (bed4c6a33b16b96c1a20f47d818f7a44eea33fa9)",
        "createdAt" : "2021-01-14T06:57:02Z",
        "updatedAt" : "2021-01-14T06:58:32Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "1fa01121-2f23-40a3-8fb6-01c103ef1d42",
        "parentId" : "87e90a13-b0d0-4cf0-b5ff-870761e8f96d",
        "authorId" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "body" : "oh, there is another module called ```examples```",
        "createdAt" : "2021-01-14T06:59:30Z",
        "updatedAt" : "2021-01-14T06:59:31Z",
        "lastEditedBy" : "0f776378-bb23-4193-9bb0-1db5973f3781",
        "tags" : [
        ]
      },
      {
        "id" : "2ce32e98-a400-4ad8-b3a9-592b2443e389",
        "parentId" : "87e90a13-b0d0-4cf0-b5ff-870761e8f96d",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "It doesn't have tests though, so I can probably remove it. Let me check.",
        "createdAt" : "2021-01-14T07:05:52Z",
        "updatedAt" : "2021-01-14T07:05:53Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      },
      {
        "id" : "01ac9a6c-1a9a-4314-a829-1d9c9d3c5687",
        "parentId" : "87e90a13-b0d0-4cf0-b5ff-870761e8f96d",
        "authorId" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "body" : "Fixed.",
        "createdAt" : "2021-01-14T07:13:35Z",
        "updatedAt" : "2021-01-14T07:13:35Z",
        "lastEditedBy" : "d8c7cf80-a55a-474c-a4f4-f60a9efda52c",
        "tags" : [
        ]
      }
    ],
    "commit" : "59f0ffbc9beee816520a2081d1248cb69afe4a76",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +244,248 @@  // Remove the relevant project name once it's converted to JUnit 5\n  def shouldUseJUnit5 = !([\"api\", \"basic-auth-extension\", \"connect\", \"core\", \"file\", \"generator\",\n    \"json\", \"mirror\", \"mirorr-client\", \"runtime\", \"transform\", \"examples\", \"streams-scala\",\n     \"streams\"].contains(it.project.name) || it.project.name.startsWith(\"upgrade-system-tests-\"))\n"
  }
]