[
  {
    "id" : "2c646750-3a95-48fd-8a32-fa60dc74fb80",
    "prId" : 2268,
    "prUrl" : "https://github.com/akka/alpakka/pull/2268#pullrequestreview-397283848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc5ec79b-ab75-4f59-b233-23e1c539cc42",
        "parentId" : null,
        "authorId" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "body" : "Hmm, this is kinda dangerous - uses like `bytes.via(tarReader).take(100).foreach(_.runWith(Sink.ignore))` could stall the stream.\r\n\r\nI seem to remember we have similar problems in processing multipart file uploads in Akka HTTP, but can't find a reference right now.\r\n\r\nI don't see how we could make an API that avoids this, though, so perhaps this comment is sufficient.",
        "createdAt" : "2020-04-21T15:07:43Z",
        "updatedAt" : "2020-04-22T08:57:51Z",
        "lastEditedBy" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "tags" : [
        ]
      }
    ],
    "commit" : "62b5ca6f4004713c24fc3ca87bffb39e6b3de552",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +30,34 @@  /**\n   * Parse incoming `ByteString`s into tar file entries and sources for the file contents.\n   * The file contents sources MUST be consumed to progress reading the file.\n   */\n  def tarReader(): Flow[ByteString, (TarArchiveMetadata, Source[ByteString, NotUsed]), NotUsed] ="
  }
]