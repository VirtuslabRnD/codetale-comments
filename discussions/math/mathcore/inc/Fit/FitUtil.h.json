[
  {
    "id" : "ee144343-74d8-4286-866b-611908ed060f",
    "prId" : 567,
    "prUrl" : "https://github.com/root-project/root/pull/567#pullrequestreview-37975357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b6b8bfe-e4a9-49d2-ad0b-2108924de447",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Do we really want that to be an ifdef?",
        "createdAt" : "2017-05-13T08:18:22Z",
        "updatedAt" : "2017-05-16T11:44:25Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "33af645d-c37d-439d-8372-27c62cce16dc",
        "parentId" : "4b6b8bfe-e4a9-49d2-ad0b-2108924de447",
        "authorId" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "body" : "@lmoneta ?",
        "createdAt" : "2017-05-13T08:48:40Z",
        "updatedAt" : "2017-05-16T11:44:25Z",
        "lastEditedBy" : "eb1cc629-c047-424e-bc0f-ae19ac8ba815",
        "tags" : [
        ]
      }
    ],
    "commit" : "7feac35c8036123d7313a42466110b1fc7eca312",
    "line" : 317,
    "diffHunk" : "@@ -1,1 +339,343 @@         nPoints = 0; // count the effective non-zero points\n         // set parameters of the function to cache integral value\n#ifdef USE_PARAMCACHE\n         (const_cast<IModelFunctionTempl<T> &>(func)).SetParameters(p);\n#endif"
  },
  {
    "id" : "4544686e-18c1-454d-b428-8055410f5666",
    "prId" : 585,
    "prUrl" : "https://github.com/root-project/root/pull/585#pullrequestreview-44570761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "418f8a63-3312-4611-b29f-d733b650bd72",
        "parentId" : null,
        "authorId" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "body" : "I don't really like the `#ifdef` here and elsewhere. This is a nighmare for testing and maintaining. Isn't it possible to just define the function to always take two parameters, but ignore the second one when `USE_PARAMCACHE` is or is not defined? The logic looks backward here (looks like a parameter cache is passed when `USE_PARAMCACHE` is *not* defined).",
        "createdAt" : "2017-06-16T14:13:37Z",
        "updatedAt" : "2017-06-16T14:13:37Z",
        "lastEditedBy" : "a66b5f61-1206-4ddd-b280-befb0005276f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d2b823c227e7c2b1cae3bd32a3ae6159cfa587c",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +486,490 @@#else\n                fval = func ( x.data(), p );\n#endif\n          // one -dim case\n            } else {"
  }
]