[
  {
    "id" : "9da8d4c3-b374-42f2-997e-322e064ea42b",
    "prId" : 6918,
    "prUrl" : "https://github.com/root-project/root/pull/6918#pullrequestreview-548098134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3435f26-0b2a-463c-b88d-edb8df02b7f9",
        "parentId" : null,
        "authorId" : "3773ed93-1876-4f73-a51b-eaae8c3a35b8",
        "body" : "This is a bit weird, I copied the behavior of the original code, I am not sure if it is intentional or an oversight. If the copy ctor does a deep copy, then also assignment should make a deep copy, I think (it currently does not).\r\n\r\nGenerally speaking, it is quite possible that the optimizations that the original authors implemented with these shared_ptr's are not needed anymore in C++11 with move semantics. But that is a topic for a possible future PR.",
        "createdAt" : "2020-12-09T11:40:57Z",
        "updatedAt" : "2020-12-09T11:42:35Z",
        "lastEditedBy" : "3773ed93-1876-4f73-a51b-eaae8c3a35b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dff217db7885408391e080642c68c583ea855380",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +26,30 @@\n   // HD: this deep-copies, inconsistent to assignment?\n   explicit FunctionGradient(const MnAlgebraicVector &grd) : fData(std::make_shared<BasicFunctionGradient>(grd)) {}\n\n   FunctionGradient(const MnAlgebraicVector &grd, const MnAlgebraicVector &g2, const MnAlgebraicVector &gstep)"
  }
]