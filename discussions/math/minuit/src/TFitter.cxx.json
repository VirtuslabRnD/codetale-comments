[
  {
    "id" : "91b1292f-9ca7-42e9-8f21-fa751c9c7118",
    "prId" : 416,
    "prUrl" : "https://github.com/root-project/root/pull/416#pullrequestreview-26569224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "parentId" : null,
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "A common pattern in ROOT is to assign the variable nullptr after it was deleted. This avoids crashes on double deletion and use after delete issues.\r\n\r\nAdding `grad = nullptr;` should solve this.",
        "createdAt" : "2017-03-11T07:50:20Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "9ddfdf4d-c8fd-4ce4-b9e8-d3b317ad9692",
        "parentId" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Hi,\r\n\r\nthis is true. But where should this be used in this case? I would not drop zeroing of freed pointers like a bomb everywhere. We also indeed know that these should be unique/shared ptrs/std::{vectors/arrays} depending on the case :( ",
        "createdAt" : "2017-03-11T14:20:03Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "f0ecacc5-1a04-46cc-a1b5-e8b6c123f323",
        "parentId" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "An example for this would be when you have a complex destructor (like in this case) and somebody decides to access or delete grad again. Assigning a nullptr will avoid future bugs from this kind.",
        "createdAt" : "2017-03-11T14:40:12Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "56f25eef-a52c-4a4e-81f5-ee798549fd22",
        "parentId" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "This is true. On the other hand this is more of a development rather than a fix of a coverity bug and I would wait to require those. In any case, new development should not rely on the pointer to be a nullptr after being freed in my opinion...",
        "createdAt" : "2017-03-12T13:36:34Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "158906d1-de89-4a78-8ef3-8e590647358e",
        "parentId" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "authorId" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "body" : "Hm, I wouldn't consider adding `grad = nullptr;` development :) but complete coverity fix reducing the possibility of introducing bugs...",
        "createdAt" : "2017-03-12T18:36:49Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "6f6f52c8-bace-4788-98aa-f12fb2560025",
        "tags" : [
        ]
      },
      {
        "id" : "702305f6-40e7-4a20-af05-8378b88d185c",
        "parentId" : "f225e63f-d629-4fe0-8c7b-f1ac3075a03d",
        "authorId" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "body" : "I agree with Vassil.  Since we are touching (looking at) this code, it makes sense to make related improvements (especially when they are straight-forward) .. and indeed setting pointer to nullptr after deletion is somewhat of requirement.  Thanks.",
        "createdAt" : "2017-03-13T14:51:38Z",
        "updatedAt" : "2017-03-17T17:29:12Z",
        "lastEditedBy" : "335eabbd-4b70-43fb-a046-bf82995f5dd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f5674a650a47e4a4b22503ee0750dbbce6e8ce",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +139,143 @@   Double_t *matr = GetCovarianceMatrix();\n   if (!matr){\n      delete [] grad;\n      delete [] sum_vector;\n      return;"
  }
]