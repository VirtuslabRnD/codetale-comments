[
  {
    "id" : "c74410c1-adcc-42ee-82eb-3b929ca81149",
    "prId" : 27665,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27665#pullrequestreview-269249170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eab4240a-701f-4905-a090-36bbd9d2d62b",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This feels better, thanks. Will need to be documented in PlotAccessor.",
        "createdAt" : "2019-07-31T19:48:32Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "bbbfc834-d371-421a-bb08-245927e55178",
        "parentId" : "eab4240a-701f-4905-a090-36bbd9d2d62b",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "thanks and added doc! @TomAugspurger ",
        "createdAt" : "2019-07-31T20:01:48Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db0cf7365e41b008fd8d8916632ead1778b4f2f4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +107,111 @@        table=False,\n        layout=None,\n        include_bool=False,\n        **kwds\n    ):"
  },
  {
    "id" : "84c68ad8-47c1-4f4f-a12c-c7bbaec1a5c7",
    "prId" : 27665,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27665#pullrequestreview-341601496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason we don't just always allow this?",
        "createdAt" : "2019-08-04T22:13:32Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "938e5158-d876-48e1-a57c-2b36487930be",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "https://github.com/pandas-dev/pandas/pull/23813#issuecomment-440255972\r\n\r\nTom used to propose this option to avoid a breaking change for people replying on bool data being dropped @jreback ",
        "createdAt" : "2019-08-05T07:17:10Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "3ec85414-3486-4a2d-b79c-49d8ac22e8d1",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok\r\n\r\n> but for now we can make it False or None if we want to issue a warning and change it to True in the future. \r\n\r\nI think let's makes this default to ``None`` and issue a warning if not explicity passed & there is boolean data. We can change this in future releases.",
        "createdAt" : "2019-08-05T11:47:00Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b80937ca-6370-4105-9f08-89db25a69603",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm not sure if we necessarily want that. I suspect plotting bools is relatively rare.",
        "createdAt" : "2019-08-05T16:24:12Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1a7963ab-ef15-49e1-b376-23f5892aedde",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "Hi, my English is not very good, so if i understand correctly, there is no clear outcome of how this should proceed? (`None` with warning or just `False`). I also reckon plotting bools is relatively rare, but i did try to plot at work, and found not doable, so i checked issues and kind of reopen to fix it up. So shall I just merge master to fix failures for now? @TomAugspurger @jreback ",
        "createdAt" : "2019-08-07T07:43:37Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "ba107141-84a4-4110-9712-0bf0d1aa4624",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm not sure how to decide which default is more useful, so my preference is to keep things as they are.",
        "createdAt" : "2019-08-07T20:51:49Z",
        "updatedAt" : "2019-08-12T17:59:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "093554d9-6035-4e6f-a770-06b525ffb6a6",
        "parentId" : "1069db91-888c-4fb4-86ba-d9b71ce9bc1b",
        "authorId" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "body" : "How about automatically plotting bools (without warning) if there are only bools present (e.g. a 1D boolean series or a DF of all bools)?",
        "createdAt" : "2020-01-12T21:49:40Z",
        "updatedAt" : "2020-01-12T21:49:40Z",
        "lastEditedBy" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "db0cf7365e41b008fd8d8916632ead1778b4f2f4",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +406,410 @@\n        # GH23719, allow plotting boolean\n        if self.include_bool is True:\n            select_include_type.append(np.bool_)\n        numeric_data = data.select_dtypes(include=select_include_type)"
  },
  {
    "id" : "f0ecb0b2-e8df-4491-ba50-6795668a0365",
    "prId" : 28172,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28172#pullrequestreview-288250750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c8084d8-57bd-4fd4-8995-487e9b2bae93",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Just to verify, ignoring `ticklabels` is the correct thing to do here?",
        "createdAt" : "2019-08-30T18:52:22Z",
        "updatedAt" : "2019-09-20T14:38:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "26861bdd-af48-4773-a528-c9228657678d",
        "parentId" : "5c8084d8-57bd-4fd4-8995-487e9b2bae93",
        "authorId" : "dc9ba385-009b-4ac8-9c86-31fc3bd576f6",
        "body" : "I don't know, the ticklabels doesn't work properly when the index has a different size than the axis. If I use it in this case the x axis only goes up to 5. What is the best way to go about it?",
        "createdAt" : "2019-09-03T12:52:00Z",
        "updatedAt" : "2019-09-20T14:38:45Z",
        "lastEditedBy" : "dc9ba385-009b-4ac8-9c86-31fc3bd576f6",
        "tags" : [
        ]
      },
      {
        "id" : "b8b158d2-1415-4348-b4da-dd6ccad91613",
        "parentId" : "5c8084d8-57bd-4fd4-8995-487e9b2bae93",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Sorry, I'm not sure I understand the issue. To be clear, my question wasn't saying that you shouldn't ignore `ticklabels`. That may be the correct thing to do (for example, when the number of user-provided `xticks` differs from the number of original points.\r\n\r\n> If I use it in this case the x axis only goes up to 5. \r\n\r\nIs \"this case\" your new test case?",
        "createdAt" : "2019-09-03T13:55:22Z",
        "updatedAt" : "2019-09-20T14:38:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "796f8541-af5e-465f-8214-76e71819eedc",
        "parentId" : "5c8084d8-57bd-4fd4-8995-487e9b2bae93",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think this is the correct behavior.",
        "createdAt" : "2019-09-13T21:02:35Z",
        "updatedAt" : "2019-09-20T14:38:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9437cf248ce8f632fa3cf9fb49eb4ddb180c15f8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1438,1442 @@\n        if self.xticks is not None:\n            ax.set_xticks(np.array(self.xticks))\n        else:\n            ax.set_xticks(self.tick_pos)"
  },
  {
    "id" : "a2d16cea-b5bb-4027-90fd-d9d01d245d85",
    "prId" : 28373,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28373#pullrequestreview-371463499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f67bbfb0-a28b-4c08-84d5-c680202bcdf2",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Can you remove this blank line please?",
        "createdAt" : "2020-03-09T20:15:23Z",
        "updatedAt" : "2020-06-27T20:10:19Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1aeee0d2725656a7f5a929f4dd8c63783b6ed8d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +172,176 @@\n        if sharex is None:\n\n            # if by is defined, subplots are used and sharex should be False\n            if ax is None and by is None:"
  },
  {
    "id" : "624c6832-c5d0-4328-a77f-b9a53a735386",
    "prId" : 28733,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28733#pullrequestreview-374808820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this the bug you are referring to? Would rather raise than do this if so",
        "createdAt" : "2019-11-07T23:36:24Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "2a065042-db9d-4187-96e8-c941a16a55c1",
        "parentId" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "authorId" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "body" : "Raising here would mean no more bar plotting of MultiIndex, which would probably some code for users.\r\nBefore the proposed fix, the MultiIndex did renders, but, the level of a multi index are joined as tuple, and the matplotlib method for axis conversion does not handle this, so this fix can only handle single Index.\r\nBreaking an inperfect way of plotting MultiIndex seems a bit harsh.\r\n",
        "createdAt" : "2019-11-09T19:30:24Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "tags" : [
        ]
      },
      {
        "id" : "a093a5fc-42d8-42a4-8cd3-95d9ad4511ba",
        "parentId" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Gotcha. Unfortunately just changing this to an arbitrary range I don't think is a great idea either. Is there no way to maintain existing behavior?",
        "createdAt" : "2019-11-09T19:39:56Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "8e1a04f6-2e72-4cd4-89b8-1d0ded58beee",
        "parentId" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "authorId" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "body" : "This do maintain existing behavior for MultiIndex.\r\nAnd it improves it for single index.\r\n\r\nThe arbitrary range was the previous solution for all case, see line 1312 of the file before changes.",
        "createdAt" : "2019-11-09T19:41:33Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "tags" : [
        ]
      },
      {
        "id" : "41347649-20b0-4723-8bda-14fc693fa706",
        "parentId" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i would add a UserWarning here that MultiImdexes are not supported",
        "createdAt" : "2020-03-14T23:26:51Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "03f13ab6-6122-4a35-9432-8b3070033165",
        "parentId" : "1aac3a45-4ac8-4ef0-ace8-e208bd65e35b",
        "authorId" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "body" : "Sure thing. I had to add a `:okwarning:` in doc/source/user_guide/visualization.rst for the doc ci to pass.",
        "createdAt" : "2020-03-15T15:27:29Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "95932568c3aa688686758e006060feefb0bc6ad1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1389,1393 @@                    UserWarning,\n                )\n            self.ax_index = np.arange(len(data))\n        else:\n            self.ax_index = self.data.index"
  },
  {
    "id" : "48996f83-73a0-45e4-85d5-ece8a1dff668",
    "prId" : 28733,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28733#pullrequestreview-374798328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f01267b3-e684-44c6-85f5-2b69de710fa3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there any assert in orientation that it takes on only certain values?",
        "createdAt" : "2020-03-14T23:27:22Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "afd7c3ea-f981-4a82-9b96-4fb465c2765a",
        "parentId" : "f01267b3-e684-44c6-85f5-2b69de710fa3",
        "authorId" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "body" : "No assert. Orientation is never a parameter. It is defined by the BarPlot class as \"vertical\", and overloaded by the Barhplot class as \"horizontal\". It is also defined in LinePlot class.\r\nGlobaly, it is use by the _post_plot_logic_common method from the base class MPLPlot.\r\n",
        "createdAt" : "2020-03-15T13:16:27Z",
        "updatedAt" : "2020-11-21T11:19:19Z",
        "lastEditedBy" : "60c8e4cb-b7ef-4974-822d-c9a482b0c3b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "95932568c3aa688686758e006060feefb0bc6ad1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1419,1423 @@            ax = self._get_ax(i)\n\n            if self.orientation == \"vertical\":\n                ax.xaxis.update_units(self.ax_index)\n                self.tick_pos = ax.convert_xunits(self.ax_index).astype(np.int)"
  },
  {
    "id" : "ca5560e6-5681-40c5-8f41-b77b3b66e721",
    "prId" : 30434,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30434#pullrequestreview-336271170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Just out of curiosity how is the X axis determined for objects? Is there an implicit sort?",
        "createdAt" : "2019-12-24T17:35:19Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "32d8ae4a-cea9-47b4-9be6-d8d170d53ab7",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "For `scatter` plot, i think both x and y axis can plot objects data. btw, what do you mean by `implicit sort`?\r\n\r\ni think the the order of objects on X axis will be the same with the order of given objects, e.g. \r\n```python\r\ndf = pd.DataFrame({\"x\": [\"b\", \"z\", \"c\"], \"y\": [1, 2, 3], })\r\nplt.scatter(x=df[\"x\"], y=df[\"y\"])\r\n```\r\non X axis, the order will still be b, z, c, other than b, c, z.  And this is identical to behaviour of matplotlib. Does this answer your question? @WillAyd ",
        "createdAt" : "2019-12-24T20:21:35Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "6682cd0b-86d3-484a-b23a-46411db4cd33",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Could you update or add a test case for mixed object types? Something where the X-axis would be say `[\"A\", 1, \"2\"]`?",
        "createdAt" : "2019-12-24T20:43:13Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c608b48b-8032-496f-b235-6babbd451cb0",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "emm, but this mixed type is not valid input for scatter plot as far as I know. @WillAyd \r\n\r\nOr do you want to have something below for mixed type? \r\n```python\r\nwith pytest.raises('something'):\r\n    df.plot(kind='scatter', x='x', y='y')\r\n```",
        "createdAt" : "2019-12-24T20:48:10Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "7cc3dedd-07e4-41a6-9018-4acf178ed11b",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "No I think I might just misunderstand the PR. So it's not necessarily just `object` dtypes that can be plotted but `object` dtypes containing only same-typed values right?",
        "createdAt" : "2019-12-24T20:50:30Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "8eadb679-dfe4-4eb9-bd4e-6094621ad9c0",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "yeah, i just did a quick test, and you could see in the picture attached, a `TypeError` will be raised: `TypeError: 1 is not a string` in matplotlib, also in this implementation\r\n![Screen Shot 2019-12-24 at 9 49 54 PM](https://user-images.githubusercontent.com/9269816/71424927-83b7cf00-2697-11ea-9d7a-84fddd360c55.png)\r\n",
        "createdAt" : "2019-12-24T20:51:22Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "a1ab7540-0c16-4579-b079-31e9320a1b8e",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "oops, did not see your comment when commenting 😅 \r\n\r\nYes, the type has to be same on either axis. maybe the name of PR is misleading, sorry about that. I meant `object` type data (all data remains same type) can be plotted now.",
        "createdAt" : "2019-12-24T20:54:07Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "8bbe2498-9a41-4eae-a80f-9d16d0fe9813",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I'm +/- 0 on the `object` dtype here but maybe its OK if there is an implicit assumption that whatever objects provided are sortable. Can you maybe just start by making your test case `[\"C\", \"B\", \"A\"]` along the axis or is that not possible?",
        "createdAt" : "2019-12-24T20:59:26Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b78833ec-d489-4a20-b670-03c06b9da015",
        "parentId" : "70e6fbd0-0274-4612-9971-8e95cd884e0f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "it is definitely possible, i attach the plot here along with output with matplotlib as reference, actually in the implementation in pandas, the proprocessing does a filtering on the dtype of columns and output will be provided as input for plotting, and intuitively use `ax.scatter` to plot, so should be the same as matplotlib:\r\n![Screen Shot 2019-12-24 at 10 02 07 PM](https://user-images.githubusercontent.com/9269816/71425064-19a02980-2699-11ea-9357-06c816b0a6d5.png)\r\n\r\njust double check a bit: you want such cases to be added to tests, right? ",
        "createdAt" : "2019-12-24T21:03:17Z",
        "updatedAt" : "2019-12-30T16:45:42Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f3507cebadf94283c7106f22604c2db4c448db6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +398,402 @@        # GH 18755, include object and category type for scatter plot\n        if self._kind == \"scatter\":\n            include_type.extend([\"object\", \"category\"])\n\n        numeric_data = data.select_dtypes(include=include_type, exclude=exclude_type)"
  }
]