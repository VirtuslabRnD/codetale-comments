[
  {
    "id" : "3c28701f-c129-4c79-abd1-6743c683f3ae",
    "prId" : 35935,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35935#pullrequestreview-476999237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e19c9d-a92a-4eef-8918-37c2effc2990",
        "parentId" : null,
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Optional[int], as it used to be None?\r\n\r\nEDIT nevermind, looks like you're intentionally removing the default value",
        "createdAt" : "2020-08-27T19:00:19Z",
        "updatedAt" : "2020-08-27T19:01:34Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d5ef6ff9e44d7bc8facf867e939e0319090dbaf",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +99,103 @@\ndef _subplots(\n    naxes: int,\n    sharex: bool = False,\n    sharey: bool = False,"
  },
  {
    "id" : "c271f576-8edb-4e62-b2fc-7c178a251108",
    "prId" : 35935,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35935#pullrequestreview-477563967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13b82e68-29c3-4e93-8939-7520b723fbee",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "Revealed type is 'Any'\r\n\r\nnot sure what's best here. I imagine that once we get np.ndarray imports sorted, there'll be a lot of mypy errors to fix. I wonder whether we want to continue adding types that currently resolve to Any or leave untyped.\r\n",
        "createdAt" : "2020-08-27T19:50:20Z",
        "updatedAt" : "2020-08-27T19:50:20Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "e93ba833-c8c4-408c-ae7c-e2af2a7857d1",
        "parentId" : "13b82e68-29c3-4e93-8939-7520b723fbee",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ill follow your lead on this.\r\n\r\nthere are a lot of places in pd.plotting where we have a `ax` arg that would be nice to disambiguate `pd.Index` vs `matplotlib.axes.Axes` vs `matplotlib.axis.Axis` (i think most are `Axes`)",
        "createdAt" : "2020-08-27T19:58:55Z",
        "updatedAt" : "2020-08-27T19:58:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7a7a71d6-eed5-4787-9b59-155076eb793d",
        "parentId" : "13b82e68-29c3-4e93-8939-7520b723fbee",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : ">  once we get np.ndarray imports sorted\r\n\r\nis there cause for optimism this may be soon-ish?",
        "createdAt" : "2020-08-27T21:47:21Z",
        "updatedAt" : "2020-08-27T21:47:21Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "82000629-427f-4af0-bf09-b13dae5148b1",
        "parentId" : "13b82e68-29c3-4e93-8939-7520b723fbee",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "I'm not sure that we have got to any technical blocks yet since not much effort in this direction. Personally, I wanted to get the check_untyped_defs sorted first. (was a phase 0 in a plan) that imo comes before all other work. but in open source can't control the effort and therefore some have a preference for typing the public api. My interest in typing has always been for the internal consistency and quality of the pandas codebase itself. \r\n\r\nBut with hindsight, getting typing PRs through was so painfull that any typing additions is a bonus.",
        "createdAt" : "2020-08-28T09:01:10Z",
        "updatedAt" : "2020-08-28T09:01:11Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d5ef6ff9e44d7bc8facf867e939e0319090dbaf",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\nif TYPE_CHECKING:\n    from matplotlib.table import Table\n\n"
  },
  {
    "id" : "051ac720-3410-4eaf-9d97-c79d61e0d668",
    "prId" : 35968,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35968#pullrequestreview-478216347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "return is 1d np.ndarray? axes can also be (np.ndarray, IndexClass)?",
        "createdAt" : "2020-08-29T08:32:44Z",
        "updatedAt" : "2020-08-30T15:20:52Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "239c2109-d349-4f35-8b45-fd067aa1bddc",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Index.ravel returns an ndarray, so we always get ndarray here",
        "createdAt" : "2020-08-29T16:57:24Z",
        "updatedAt" : "2020-08-30T15:20:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "aea3e7e7-6586-4103-93c5-cc5e1e942fb5",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "can you update return type",
        "createdAt" : "2020-08-30T12:15:11Z",
        "updatedAt" : "2020-08-30T15:20:52Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "ecc5d7a4-a781-480a-9263-2684952c7fa2",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "to what?",
        "createdAt" : "2020-08-30T15:17:34Z",
        "updatedAt" : "2020-08-30T15:20:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5e3c7951-c1e2-4030-8a28-5a1b7124d635",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "np.ndarray?",
        "createdAt" : "2020-08-30T15:49:58Z",
        "updatedAt" : "2020-08-30T15:49:59Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "7b2881d2-92f6-4470-871a-7fe9edb53d33",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "If there were a way to indicate `ndarray[\"Axes\"]` I'd agree.  until then, it is the \"Axes\" that is most relevant",
        "createdAt" : "2020-08-30T15:52:28Z",
        "updatedAt" : "2020-08-30T15:52:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6a07962f-c767-4793-b925-f9fddefc0827",
        "parentId" : "413b3fcb-79f7-4b46-8717-76563fae535c",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "so mypy is green since np.ndarray resolves to Any, so Any is compatible with Sequence[\"Axes\"].\r\n\r\nI guess that we could add `result = cast(Sequence[\"Axes\"], result)` when numpy types are available.\r\n\r\n",
        "createdAt" : "2020-08-30T16:20:41Z",
        "updatedAt" : "2020-08-30T16:20:41Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a94acea39ecbaf28c73623525858d75069c9168b",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +352,356 @@\n\ndef _flatten(axes: Union[\"Axes\", Sequence[\"Axes\"]]) -> Sequence[\"Axes\"]:\n    if not is_list_like(axes):\n        return np.array([axes])"
  }
]