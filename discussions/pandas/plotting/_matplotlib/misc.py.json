[
  {
    "id" : "1dfeeaeb-d4a7-4c91-86c1-3beae0adcaf2",
    "prId" : 40394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40394#pullrequestreview-611632052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69617ba3-693b-4f3a-a4d3-fb4c05ac217b",
        "parentId" : null,
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "This was throwing an error during CI:\r\n```\r\n____________________ TestDataFramePlots.test_andrews_curves ____________________\r\n[gw0] linux -- Python 3.8.8 /usr/share/miniconda/envs/pandas-dev/bin/python\r\n\r\nself = <pandas.tests.plotting.test_misc.TestDataFramePlots object at 0x7f3ae76442b0>\r\niris =      SepalLength  SepalWidth  PetalLength  PetalWidth            Name\r\n0            5.1         3.5          1.4       ...      2.3  Iris-virginica\r\n149          5.9         3.0          5.1         1.8  Iris-virginica\r\n\r\n[150 rows x 5 columns]\r\n\r\n    def test_andrews_curves(self, iris):\r\n        from matplotlib import cm\r\n    \r\n        from pandas.plotting import andrews_curves\r\n    \r\n        df = iris\r\n        # Ensure no UserWarning when making plot\r\n        with tm.assert_produces_warning(None):\r\n>           _check_plot_works(andrews_curves, frame=df, class_column=\"Name\")\r\n\r\npandas/tests/plotting/test_misc.py:158: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/tests/plotting/common.py:625: in _check_plot_works\r\n    raise err\r\npandas/tests/plotting/common.py:618: in _check_plot_works\r\n    for ret in gen_plots(f, fig, **kwargs):\r\npandas/tests/plotting/common.py:645: in _gen_two_subplots\r\n    yield f(**kwargs)\r\npandas/plotting/_misc.py:271: in andrews_curves\r\n    return plot_backend.andrews_curves(\r\npandas/plotting/_matplotlib/misc.py:282: in andrews_curves\r\n    y = f(t)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nt = array([-3.14159265, -3.11001886, -3.07844506, -3.04687127, -3.01529747,\r\n       -2.98372368, -2.95214988, -2.92057608, ...900229,  2.92057608,  2.95214988,  2.98372368,\r\n        3.01529747,  3.04687127,  3.07844506,  3.11001886,  3.14159265])\r\n\r\n    def f(t):\r\n        x1 = amplitudes[0]\r\n        result = x1 / np.sqrt(2.0)\r\n    \r\n        # Take the rest of the coefficients and resize them\r\n        # appropriately. Take a copy of amplitudes as otherwise numpy\r\n        # deletes the element from amplitudes itself.\r\n        coeffs = np.delete(np.copy(amplitudes), 0)\r\n>       coeffs.resize(int((coeffs.size + 1) / 2), 2)\r\nE       ValueError: cannot resize an array that references or is referenced\r\nE       by another array in this way.\r\nE       Use the np.resize function or refcheck=False\r\n\r\npandas/plotting/_matplotlib/misc.py:249: ValueError\r\n```",
        "createdAt" : "2021-03-13T20:24:24Z",
        "updatedAt" : "2021-03-15T18:49:33Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "a56b0a853e1b8d49ffa7975aa0a21383666dbc05",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +247,251 @@            # deletes the element from amplitudes itself.\n            coeffs = np.delete(np.copy(amplitudes), 0)\n            coeffs = np.resize(coeffs, (int((coeffs.size + 1) / 2), 2))\n\n            # Generate the harmonics and arguments for the sin and cos"
  }
]