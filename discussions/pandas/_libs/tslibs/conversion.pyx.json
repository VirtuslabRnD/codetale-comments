[
  {
    "id" : "e8bb7fd2-cf99-4cfc-aa65-848bc7cb94e5",
    "prId" : 17875,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17875#pullrequestreview-72677494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3725ae07-811e-45cf-9ac1-39d938fc6658",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add an assert n >= 1 here",
        "createdAt" : "2017-10-28T17:50:25Z",
        "updatedAt" : "2017-10-29T22:05:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4b84f90750d3ae251cda6a22bc86f7b10e1f9e0",
    "line" : 470,
    "diffHunk" : "@@ -1,1 +468,472 @@cdef inline bisect_right_i8(int64_t *data, int64_t val, Py_ssize_t n):\n    cdef Py_ssize_t pivot, left = 0, right = n\n\n    assert n >= 1\n"
  },
  {
    "id" : "3b2950a4-ab1e-4cfe-a3bc-88d2823b1471",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-74268820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18aef472-afbc-414d-96f9-4d14e553f88a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason for the localization functions to exists here rather than in timezones.pyx?",
        "createdAt" : "2017-11-04T23:35:38Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0385c4f3-c66e-470f-877f-7f2567db5bd4",
        "parentId" : "18aef472-afbc-414d-96f9-4d14e553f88a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Really want to limit the points of contact with `pandas_datetimestruct` and the ensuing dependencies.",
        "createdAt" : "2017-11-04T23:52:36Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +794,798 @@    from pandas._libs.tslib import Timestamp\n    return str(Timestamp(val))\n\n\n# ----------------------------------------------------------------------"
  },
  {
    "id" : "a0b63d85-ca29-410c-9ac8-61a22e2491e1",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75435835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "885083ec-9dee-4827-ac7d-4010270f60e1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add parameters to doc-strring",
        "createdAt" : "2017-11-09T13:29:24Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +805,809 @@    Normalize each of the (nanosecond) timestamps in the given array by\n    rounding down to the beginning of the day (i.e. midnight).  If `tz`\n    is not None, then this is midnight for this timezone.\n\n    Parameters"
  },
  {
    "id" : "8f05fc50-81ab-43d7-902b-51699c333bdd",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75435835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "606afb26-3a4b-4725-9c54-24d3d8aa3f1d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2017-11-09T13:29:30Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +843,847 @@    rounding down to the beginning of the day (i.e. midnight) for the\n    given timezone `tz`.\n\n    Parameters\n    ----------"
  },
  {
    "id" : "5469096d-ad2d-4ddd-8b28-18bfb06ce46c",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75485221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10bb675b-a753-4f52-9a06-802e703319fe",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think you changed the name? ok to de-privatize and rename to normalize_local_timestamps. I prefer more readable function names fyi.",
        "createdAt" : "2017-11-09T13:30:08Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "578293c0-74d9-4356-b098-2e2045cf96e5",
        "parentId" : "10bb675b-a753-4f52-9a06-802e703319fe",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Didn't change the name, no.",
        "createdAt" : "2017-11-09T15:51:54Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +838,842 @@@cython.wraparound(False)\n@cython.boundscheck(False)\ncdef ndarray[int64_t] _normalize_local(ndarray[int64_t] stamps, object tz):\n    \"\"\"\n    Normalize each of the (nanosecond) timestamps in the given array by"
  },
  {
    "id" : "bb2e2ac8-7e0c-4068-8b0f-da54661b2d53",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75484034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14634cdd-e78f-4803-949d-7bec545fe56a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doc-string and de-privatize",
        "createdAt" : "2017-11-09T13:30:35Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6ad81cee-cd3b-4d49-99fe-a0f9e2ff8949",
        "parentId" : "14634cdd-e78f-4803-949d-7bec545fe56a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It is private.  Not importable.",
        "createdAt" : "2017-11-09T15:48:48Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +907,911 @@\n\ncdef inline int64_t _normalized_stamp(pandas_datetimestruct *dts) nogil:\n    \"\"\"\n    Normalize the given datetimestruct to midnight, then convert to int64_t."
  },
  {
    "id" : "3719a1cd-9229-4135-bf86-4d1070d6aed2",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75435835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d45b6c5-989b-43af-825e-763640731085",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add parameters in doc-string\r\n\r\ngood name",
        "createdAt" : "2017-11-09T13:30:55Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +932,936 @@    midnight, i.e. hour == minute == second == 0.  If the optional timezone\n    `tz` is not None, then this is midnight for this timezone.\n\n    Parameters\n    ----------"
  },
  {
    "id" : "a45952c3-41cb-4a59-8045-96a4be31eeac",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75967428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4f6cd9e-75f7-4531-a8d4-30bb6816ea02",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this looks like it has exactly 2 uses, I would much rather\r\n``Timestamp(...).value`` and remove this routine (and remove the tests for it)\r\n\r\n```\r\n(pandas) bash-3.2$ grep -r pydt_to_i8 pandas/ --include '*.py' --include '*.pyx'\r\npandas//_libs/tslib.pyx:cpdef pydt_to_i8(object pydt):\r\npandas//_libs/tslib.pyx:    Inverse of pydt_to_i8\r\npandas//_libs/tslibs/offsets.pyx:from pandas._libs.tslib import pydt_to_i8, monthrange\r\npandas//_libs/tslibs/offsets.pyx:        i8 = pydt_to_i8(dt)\r\npandas//core/indexes/datetimes.py:    return np.int64(libts.pydt_to_i8(key)).view(_NS_DTYPE)\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected\r\npandas//tests/scalar/test_timestamp.py:                    assert tslib.pydt_to_i8(result) == expected_tz\r\npandas//tests/scalar/test_timestamp.py:                    assert tslib.pydt_to_i8(result) == expected_tz\r\npandas//tests/scalar/test_timestamp.py:                    assert tslib.pydt_to_i8(result) == expected_utc\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected_tz\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected_tz\r\npandas//tests/scalar/test_timestamp.py:                assert tslib.pydt_to_i8(result) == expected_utc\r\n```",
        "createdAt" : "2017-11-12T18:54:48Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +91,95 @@\ncpdef int64_t pydt_to_i8(object pydt) except? -1:\n    \"\"\"\n    Convert to int64 representation compatible with numpy datetime64; converts\n    to UTC"
  },
  {
    "id" : "ca684917-5040-4872-872c-943caa2f6968",
    "prId" : 18228,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18228#pullrequestreview-75962537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcd57d27-3dbe-471d-8ccf-3a344504376e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "return val (see my comment below)",
        "createdAt" : "2017-11-12T15:38:33Z",
        "updatedAt" : "2017-11-12T17:52:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "754dd7bcc2883e582162c75e1b1794d1b125be50",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +447,451 @@\n    if get_timezone(tz2) == 'UTC':\n        return utc_date\n    elif is_tzlocal(tz2):\n        dt64_to_dtstruct(utc_date, &dts)"
  },
  {
    "id" : "f2247351-60c8-4f4e-9ff3-bf2cd08b330e",
    "prId" : 18358,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18358#pullrequestreview-77650028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44296244-8d47-42da-868e-ff9e02c35264",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob should add some checks around this, IOW this could already be ns (TODO ok)",
        "createdAt" : "2017-11-19T15:26:02Z",
        "updatedAt" : "2017-11-19T18:02:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "548d9fba-be93-4cca-95c1-4731d7d2f2e4",
        "parentId" : "44296244-8d47-42da-868e-ff9e02c35264",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, this check is done elsewhere, will not be hard to implement.\r\n\r\nIf it weren't for `datetime64[Y]` and `datetime64[M]` we could take the `pandas_datetime_to_datetimestruct` out of these funcs altogether, avoid converting back and forth.",
        "createdAt" : "2017-11-19T18:01:26Z",
        "updatedAt" : "2017-11-19T18:02:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef759f2d9a55eba8099467665dd689d57f95c36",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +104,108 @@        return result\n\n    unit = get_datetime64_unit(arr.flat[0])\n    for i in range(n):\n        if ivalues[i] != NPY_NAT:"
  }
]