[
  {
    "id" : "dbe9cb30-fb20-45a1-92ba-43ca63bb4b5d",
    "prId" : 18014,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18014#pullrequestreview-72682485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dc7a044-e89b-4d06-ba5c-f723a0046173",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ought to make these doc strings simpler\r\neg this doesnâ€™t round but returns a NaT\r\nthe parameters are kind of irrelevant",
        "createdAt" : "2017-10-28T21:49:46Z",
        "updatedAt" : "2017-10-31T15:44:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5aaf8e0f-0f71-42b5-a79d-092f08fa10e2",
        "parentId" : "8dc7a044-e89b-4d06-ba5c-f723a0046173",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Will add to the todo list.",
        "createdAt" : "2017-10-28T21:55:20Z",
        "updatedAt" : "2017-10-31T15:44:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b7593e34053c2853ade795522cd39455ae6af10",
    "line" : 425,
    "diffHunk" : "@@ -1,1 +423,427 @@        Returns\n        -------\n        a new Timestamp rounded to the given resolution of `freq`\n\n        Parameters"
  },
  {
    "id" : "7c44c2bc-2f77-4b3c-8d36-2824b49e6be4",
    "prId" : 18014,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18014#pullrequestreview-72682376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fd370b1-e392-4c73-864e-58b780d83f1f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "deprivatize at some point",
        "createdAt" : "2017-10-28T21:50:28Z",
        "updatedAt" : "2017-10-31T15:44:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b7593e34053c2853ade795522cd39455ae6af10",
    "line" : 544,
    "diffHunk" : "@@ -1,1 +542,546 @@\ncdef inline bint _checknull_with_nat(object val):\n    \"\"\" utility to check if a value is a nat or not \"\"\"\n    return val is None or (\n        PyFloat_Check(val) and val != val) or val is NaT"
  },
  {
    "id" : "9d9cdc6a-e990-4bec-ad60-a2ad625b0366",
    "prId" : 21692,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21692#pullrequestreview-133808616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aa93637-f8f4-43e9-bfc3-0222503e845f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "why import this from  `util`? Didn't you move it to `tslibs.missing` ?",
        "createdAt" : "2018-07-02T13:47:42Z",
        "updatedAt" : "2018-07-02T16:37:41Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "2823b77c-9a58-459b-88d1-e0e324e1b4d6",
        "parentId" : "4aa93637-f8f4-43e9-bfc3-0222503e845f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not sure I understand the question.  This PR is moving this function from `_libs.missing` to `tslibs.nattype` because doing so simplifies the dependency structure.",
        "createdAt" : "2018-07-02T16:39:30Z",
        "updatedAt" : "2018-07-02T16:39:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a48843ad-7f78-4d67-87b6-13573a5305f3",
        "parentId" : "4aa93637-f8f4-43e9-bfc3-0222503e845f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "and by moving the function should not change the import?",
        "createdAt" : "2018-07-02T23:29:18Z",
        "updatedAt" : "2018-07-02T23:29:19Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "25be7c35-fcf6-499f-9559-79db893442b8",
        "parentId" : "4aa93637-f8f4-43e9-bfc3-0222503e845f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these util functions of basically c versions of isinstance checks, so this is ok.",
        "createdAt" : "2018-07-02T23:30:59Z",
        "updatedAt" : "2018-07-02T23:30:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b798bf5eea1a49c3ab966fa89c3eaaf6cdadccd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +607,611 @@    elif val is NaT:\n        return True\n    elif util.is_timedelta64_object(val):\n        return val.view('int64') == NPY_NAT\n    elif util.is_datetime64_object(val):"
  },
  {
    "id" : "3f77c0e9-24ed-40af-9b89-3357e3b0da23",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-156335200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f90c18f2-c7a8-41ce-9806-e01ae2f28224",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a ersionadded tag",
        "createdAt" : "2018-09-18T12:15:24Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +571,575 @@            - 'shift' will shift the nonexistent time forward to the closest\n              existing time\n            - 'NaT' will return NaT where there are nonexistent times\n            - 'raise' will raise an NonExistentTimeError if there are\n              nonexistent times"
  },
  {
    "id" : "6e039ebe-3899-454d-af83-3ec334343382",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-164631252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec95f41d-ffea-4d95-a085-34d383c4bbec",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Sorry, rst formatting nitpick: there needs to be a blank line between the first sentences, and the start of this list ... (getting rst right can be annoying ..)",
        "createdAt" : "2018-10-15T10:00:27Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +569,573 @@            where clocks moved forward due to DST.\n\n            - 'shift' will shift the nonexistent time forward to the closest\n              existing time\n            - 'NaT' will return NaT where there are nonexistent times"
  },
  {
    "id" : "faf7ba4c-66e0-4ff0-b158-d8e3a7221e34",
    "prId" : 22647,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22647#pullrequestreview-156331865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db9345f5-19e8-40d5-9c91-f404d408b925",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add versionadded tags here (and other new arg places)",
        "createdAt" : "2018-09-18T12:05:30Z",
        "updatedAt" : "2018-09-19T20:20:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7eddde9652c2ed58dae2413e9bc8c4f0a0aa86",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +500,504 @@            - bool contains flags to determine if time is dst or not (note\n              that this flag is only applicable for ambiguous fall dst dates)\n            - 'NaT' will return NaT for an ambiguous time\n            - 'raise' will raise an AmbiguousTimeError for an ambiguous time\n"
  },
  {
    "id" : "21f68c90-d8e2-4a24-abf5-1b30ac8b3946",
    "prId" : 22647,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22647#pullrequestreview-156331865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f63fae7b-45f9-4e5b-a0e6-4896bb9952a2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "may make sense to provide a template for the doc-strings (can be followup)",
        "createdAt" : "2018-09-18T12:06:04Z",
        "updatedAt" : "2018-09-19T20:20:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba7eddde9652c2ed58dae2413e9bc8c4f0a0aa86",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +502,506 @@            - 'NaT' will return NaT for an ambiguous time\n            - 'raise' will raise an AmbiguousTimeError for an ambiguous time\n\n            .. versionadded:: 0.24.0\n"
  },
  {
    "id" : "85217dfc-f3de-4d97-aadf-55f51cf51191",
    "prId" : 23406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23406#pullrequestreview-170773425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eabc691a-75f1-42f7-828f-56480671f747",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if any way to share these doc-strings would be great, maybe templating?",
        "createdAt" : "2018-10-30T12:17:34Z",
        "updatedAt" : "2018-10-31T04:52:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f0670a59-911b-48b1-982d-09087df392cf",
        "parentId" : "eabc691a-75f1-42f7-828f-56480671f747",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "@jbrockmendel do you happen to know why for some of these NaT methods we aren't just passing is `Timestamp.[method].__doc__` instead of copying these docstrings?",
        "createdAt" : "2018-10-31T05:03:49Z",
        "updatedAt" : "2018-10-31T05:03:49Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "4c5943fb-edac-4703-8bf2-c83b4159b8fa",
        "parentId" : "eabc691a-75f1-42f7-828f-56480671f747",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because of the dependency structure.  We import NaT in timestznps but not the other way around.",
        "createdAt" : "2018-11-01T16:43:38Z",
        "updatedAt" : "2018-11-01T16:43:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b31f034f5da9a0311ccaf99c9cae18437e6943b0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +485,489 @@\n            .. versionadded:: 0.24.0\n        nonexistent : 'shift', 'NaT', default 'raise'\n            A nonexistent time does not exist in a particular timezone\n            where clocks moved forward due to DST."
  },
  {
    "id" : "458ff1fe-49b1-4908-9401-bccd83efb571",
    "prId" : 23940,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23940#pullrequestreview-180807335",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6653927c-5e86-4c05-9b77-ace2dbdb4799",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The `cimports` weren't working when trying to use a relative import, so I've kept them as absolute",
        "createdAt" : "2018-12-03T15:00:10Z",
        "updatedAt" : "2018-12-26T21:32:11Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b908e695e8f8014a8ccdc913eef5d5f218f3a6d4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +15,19 @@cnp.import_array()\n\ncimport pandas._libs.tslibs.util as util\nfrom pandas._libs.tslibs.util cimport (\n    get_nat, is_integer_object, is_float_object, is_datetime64_object,"
  },
  {
    "id" : "a20bb615-28bc-436a-a6ad-f32e7bba3141",
    "prId" : 24008,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24008#pullrequestreview-180571126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1520cac8-0dc7-4b14-b844-f662cece6563",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : " can you remove",
        "createdAt" : "2018-12-02T17:47:20Z",
        "updatedAt" : "2018-12-02T17:48:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "263870f4-c4d5-417e-8b9c-65cc04c85564",
        "parentId" : "1520cac8-0dc7-4b14-b844-f662cece6563",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "or do we do this elsewhere to remind of the attributes?",
        "createdAt" : "2018-12-02T17:49:20Z",
        "updatedAt" : "2018-12-02T17:49:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "267d5082-d73b-4358-8922-d05ba944185c",
        "parentId" : "1520cac8-0dc7-4b14-b844-f662cece6563",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes, this is the pattern we used for _TSObject",
        "createdAt" : "2018-12-02T17:59:34Z",
        "updatedAt" : "2018-12-02T17:59:34Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "05c2ce0df64cad5900c46822e11ea7bfeba5976b",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +89,93 @@\ncdef class _NaT(datetime):\n    # cdef readonly:\n    #    int64_t value\n    #    object freq"
  },
  {
    "id" : "15c1a896-c0dc-4027-bced-b2e6a78a9017",
    "prId" : 27740,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27740#pullrequestreview-270515127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df047c41-bc88-4cbf-8dea-860a47e6603f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this list and the one below are different, why is that? is this one missing periodindex?",
        "createdAt" : "2019-08-04T21:13:21Z",
        "updatedAt" : "2019-08-04T21:28:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "06edec79-b912-432b-a86a-c190d2df0775",
        "parentId" : "df047c41-bc88-4cbf-8dea-860a47e6603f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It's definitely weird, and this is hiding other bugs e.g. with ndarray or str.  I've got a separate branch to fix this Once And For All that removes these lists entirely.  For now I want to fix this particular bug so we can simplify the tar out of core.ops",
        "createdAt" : "2019-08-04T21:28:36Z",
        "updatedAt" : "2019-08-04T21:28:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "790df917d6a4b5a31a10e9add0fe854ea3e24900",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +124,128 @@        elif getattr(other, '_typ', None) in ['dateoffset', 'series',\n                                              'period', 'datetimeindex',\n                                              'datetimearray',\n                                              'timedeltaindex',\n                                              'timedeltaarray']:"
  },
  {
    "id" : "de7916b1-e31f-4dea-ab09-223b8b0a175a",
    "prId" : 27740,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27740#pullrequestreview-270515519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4fcb9f1-3c4e-4215-8b45-60863540ceae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this missing dti and tdi?",
        "createdAt" : "2019-08-04T21:13:29Z",
        "updatedAt" : "2019-08-04T21:28:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d7e69986-bffb-402a-a15a-908dd612acac",
        "parentId" : "f4fcb9f1-3c4e-4215-8b45-60863540ceae",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this true?",
        "createdAt" : "2019-08-04T21:34:32Z",
        "updatedAt" : "2019-08-04T21:34:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "587ea775-c264-49ee-b1e7-6625f66fea3b",
        "parentId" : "f4fcb9f1-3c4e-4215-8b45-60863540ceae",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think so.  Same response as the other one: soon we're going to get rid of this list altogether (in fact, the implementation of `__sub__` will be identical to the implementation of `__add__`)",
        "createdAt" : "2019-08-04T21:40:38Z",
        "updatedAt" : "2019-08-04T21:40:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "790df917d6a4b5a31a10e9add0fe854ea3e24900",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +155,159 @@        elif getattr(other, '_typ', None) in ['period', 'series',\n                                              'periodindex', 'dateoffset',\n                                              'datetimearray',\n                                              'timedeltaarray']:\n            return NotImplemented"
  },
  {
    "id" : "0b8e64e8-67ad-45bc-a509-297d1ced320a",
    "prId" : 27807,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27807#pullrequestreview-272575519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "919435c3-7ad8-43cc-aaf0-3fefebfdbce6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what if there is a tz?",
        "createdAt" : "2019-08-08T12:17:06Z",
        "updatedAt" : "2019-08-08T15:25:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e4afc6a5-d076-4d31-b50f-25735acb99a3",
        "parentId" : "919435c3-7ad8-43cc-aaf0-3fefebfdbce6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this is specifically for ndarray, so there cant be a tz",
        "createdAt" : "2019-08-08T13:37:03Z",
        "updatedAt" : "2019-08-08T15:25:31Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b865896eb5cd44eacb455847029e65e7b80b347",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +144,148 @@            return c_NaT\n\n        elif util.is_array(other):\n            if other.dtype.kind in 'mM':\n                # If we are adding to datetime64, we treat NaT as timedelta"
  },
  {
    "id" : "b7b5cd6b-0d52-422f-b6c9-66e3e4a74489",
    "prId" : 27807,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27807#pullrequestreview-274306034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad8c616-8670-464e-a507-0ddcd1258cce",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the ```getattr(other, 'ndim', -1)``` is very non-standard (as we almost always make this return 0 by default). can you just use a hasattr check? as the ndim == 0 branch is also never hit as a 0-line scalar hits the is_array branch. (maybe make that clear in a comment). also can pull out line 115 and make it part of the elif",
        "createdAt" : "2019-08-13T12:10:03Z",
        "updatedAt" : "2019-08-13T12:10:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1243ea0c-d84c-49cf-bba3-c3fe33334ea4",
        "parentId" : "3ad8c616-8670-464e-a507-0ddcd1258cce",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah its weird, but it predates me.  the logic here is kind of weird; id rather take the time to look at it more carefully in a separate pass",
        "createdAt" : "2019-08-13T14:04:07Z",
        "updatedAt" : "2019-08-13T14:04:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b865896eb5cd44eacb455847029e65e7b80b347",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +107,111 @@            return _nat_scalar_rules[op]\n\n        elif util.is_array(other):\n            result = np.empty(other.shape, dtype=np.bool_)\n            result.fill(_nat_scalar_rules[op])"
  },
  {
    "id" : "85984fe7-eea2-4ed2-b276-be9947c59b6d",
    "prId" : 28739,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28739#pullrequestreview-296919250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ccff05-8cff-4f99-b19b-b006c9770011",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "in theory the end of the sentence isnt the right place for the preposition to be at",
        "createdAt" : "2019-10-02T13:56:15Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "29b4208e-20f8-4442-971e-d34a18acf223",
        "parentId" : "76ccff05-8cff-4f99-b19b-b006c9770011",
        "authorId" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "body" : "mainly, I was trying to limit scope to just fixing improper formatting and not get carried away with editing content, but it probably makes more sense to go ahead and make grammatical changes as well, considering its very unlikely someone will come back and edit those at a later date. I'll update this PR where it makes sense ",
        "createdAt" : "2019-10-02T15:05:29Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "tags" : [
        ]
      },
      {
        "id" : "623aa65e-258f-4d4d-98e3-0571129aedfe",
        "parentId" : "76ccff05-8cff-4f99-b19b-b006c9770011",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Totally reasonable.  If you'd like to do a follow-up PR after this to address these, that'd be welcome.",
        "createdAt" : "2019-10-03T14:36:19Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd2afe5bb88dcdc46987c6ad76647c2c9a6b5a12",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +535,539 @@        ----------\n        tz : str or timezone object, default None\n            Timezone to localize to.\n        \"\"\")\n    today = _make_nat_func('today',  # noqa:E128"
  },
  {
    "id" : "2884d700-27ab-4f62-8a87-09643f88ce6b",
    "prId" : 28739,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28739#pullrequestreview-297229762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869550e2-c496-477c-993b-9484be73dd38",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "nitpick, not sure if there is any way around this, but backslashes like these are bothersome when I want to do code-folding.  Is there an alternative that avoids the backslash?",
        "createdAt" : "2019-10-02T13:57:29Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f6f63ae9-5d3c-4b37-867e-a6391a92c77b",
        "parentId" : "869550e2-c496-477c-993b-9484be73dd38",
        "authorId" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "body" : "I tried a few variations, but this is the only one that preserved the formatting in the docs and kept the line length < 89\r\n\r\nexample:\r\n```python\r\n>>> test = \"\"\"\"I am a very long string \\\r\n... with a line break\"\"\"\r\n>>> print(test)\r\n\"I am a very long string with a line break\r\n>>> test2 = r\"\"\"I am a very long string literal\r\n... with a line break\"\"\"\r\n>>> print(test2)\r\nI am a very long string literal\r\nwith a line break\r\n>>> test3 = \"\"\"I am a very long string\r\n... with a line break\"\"\"\r\n>>> print(test3)\r\nI am a very long string\r\nwith a line break\r\n```",
        "createdAt" : "2019-10-02T15:11:27Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "tags" : [
        ]
      },
      {
        "id" : "9060d0e9-6696-4b7d-b604-478d559a4802",
        "parentId" : "869550e2-c496-477c-993b-9484be73dd38",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No problem, thanks for looking into this",
        "createdAt" : "2019-10-03T14:36:38Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3b7ba441-eaba-4103-a4c3-c1ed4eed9b51",
        "parentId" : "869550e2-c496-477c-993b-9484be73dd38",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm I wasn't aware of the need for this. Does this affect the HTML output at all? Also think it would be good to not have this if possible",
        "createdAt" : "2019-10-03T15:55:24Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f9daea5b-cbbf-4380-b37b-4094c245c23d",
        "parentId" : "869550e2-c496-477c-993b-9484be73dd38",
        "authorId" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "body" : "this is the docs with the line continuation character:\r\n![image](https://user-images.githubusercontent.com/7444140/66144952-c8bbf000-e5d7-11e9-8b65-115b53ad92df.png)\r\n\r\nthis is without:\r\n![image](https://user-images.githubusercontent.com/7444140/66145629-403e4f00-e5d9-11e9-8b00-50954fbb35f2.png)\r\n\r\nso the html definitely treats it as a new line without the line continuation. definitely not an expert on python strings, so if you guys have any other suggestions on having a line break in the file but having it render as one line, id be happy to try them out. AFAIK, this is the only way.\r\n",
        "createdAt" : "2019-10-03T16:30:19Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "e3dad206-27b2-49a0-9d4d-fa6db52844ca",
        "tags" : [
        ]
      },
      {
        "id" : "d6a30d8d-76b5-4a35-8775-d81f4bdbc8f7",
        "parentId" : "869550e2-c496-477c-993b-9484be73dd38",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "OK sounds good. I'm still OK with this as is can always perfect later",
        "createdAt" : "2019-10-04T01:39:44Z",
        "updatedAt" : "2019-10-04T04:35:01Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd2afe5bb88dcdc46987c6ad76647c2c9a6b5a12",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +568,572 @@            .. versionadded:: 0.24.0\n        nonexistent : {'raise', 'shift_forward', 'shift_backward, 'NaT', \\\ntimedelta}, default 'raise'\n            A nonexistent time does not exist in a particular timezone\n            where clocks moved forward due to DST."
  },
  {
    "id" : "b04558bd-3a08-42d8-bb3d-09c756f98201",
    "prId" : 30395,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30395#pullrequestreview-337500120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f902f25e-fd0f-471a-a976-d2a5641bd601",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, why do we need the compat function here? this should work on all versions (as this is just an error case)",
        "createdAt" : "2020-01-01T17:59:08Z",
        "updatedAt" : "2020-01-06T10:07:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0a2b0913-91c4-4f25-b1a6-0004ea2d7cde",
        "parentId" : "f902f25e-fd0f-471a-a976-d2a5641bd601",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "If it's out of the \"compat.py38\" block, the build would failed with an error message of:\r\n\r\n```python\r\ndatetime has no attribute of 'fromisocalendar'\r\n```",
        "createdAt" : "2020-01-01T18:53:03Z",
        "updatedAt" : "2020-01-06T10:07:18Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f800d6bce9c05768ffbdc5b5cbe7bc69122c3fb",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +432,436 @@    utcoffset = _make_error_func('utcoffset', datetime)\n\n    # \"fromisocalendar\" was introduced in 3.8\n    if PY_MINOR_VERSION >= 8:\n        fromisocalendar = _make_error_func('fromisocalendar', datetime)"
  },
  {
    "id" : "6946e5cd-f977-4995-8d59-f376277f7f94",
    "prId" : 32214,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32214#pullrequestreview-365092354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jbrockmendel is this a problem? (the dependency)?",
        "createdAt" : "2020-02-26T02:29:00Z",
        "updatedAt" : "2020-02-26T02:29:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "173794d6-e71d-4a52-9061-1e596b451c9b",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I'd like to avoid it if possible.  The property \"tslibs doesnt rely on anything except _config\" is really nice for reasoning-about-code purposes.\r\n\r\n@dsaxton is it feasible to put pd.NA into a higher-level check than checknull_with_nat?",
        "createdAt" : "2020-02-26T02:34:09Z",
        "updatedAt" : "2020-02-26T02:34:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3d3f2fdf-b477-4003-9747-a5d8876bc55e",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Hmm, it may be but I think it would have to be before https://github.com/pandas-dev/pandas/blob/master/pandas/core/arrays/datetimes.py#L1844, do you think that looks possible? There's also the \"trick\" of not importing `NA` at all and checking for `(val == val) is (val != val)` in `checknull_with_nat`",
        "createdAt" : "2020-02-26T03:12:16Z",
        "updatedAt" : "2020-02-26T03:12:16Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "41770ffc-f893-458f-88ae-d448b4545d7b",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, going to merge this as-is. @jbrockmendel or @dsaxton if you can figure a way to decouple this a bit would be great (though since missing is pretty dependency free i actually don't mind this)",
        "createdAt" : "2020-02-26T12:39:22Z",
        "updatedAt" : "2020-02-26T12:39:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3e40a327-5883-4261-aafc-24c6f7a07f82",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@dsaxton im having trouble figuring out which usage of checknull_with_nat is the relevant one here, can you point it out?  The only ones I see when grepping are in `libmissing.checknull` (which already checks for C_NA, which this renders redundant), and in `Period.__new__`, which seems like it shouldn't be relevant.",
        "createdAt" : "2020-02-26T16:07:14Z",
        "updatedAt" : "2020-02-26T16:07:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5d3c52c4-72c9-45d6-b132-0802d4abc411",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "looks like i was confusing checknull_with_nat with is_null_datetimelike, never mind",
        "createdAt" : "2020-02-26T17:16:54Z",
        "updatedAt" : "2020-02-26T17:16:54Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1bb8a079-2285-466d-9d4e-0725f1cf689e",
        "parentId" : "2ecee079-eecf-4e36-be95-0278f96ad54a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(this suggests we may have too many null-checking-like functions)",
        "createdAt" : "2020-02-26T17:21:49Z",
        "updatedAt" : "2020-02-26T17:21:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3933346a9511c772f168017f325035429e4ca4d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@    is_timedelta64_object)\n\nfrom pandas._libs.missing cimport C_NA\n\n"
  }
]