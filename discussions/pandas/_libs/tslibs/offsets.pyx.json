[
  {
    "id" : "b34b2b4b-c8f4-466c-afe6-6a01ae1a623d",
    "prId" : 17830,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17830#pullrequestreview-72653810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "656bafd2-ac39-4a2b-b5d4-98da52c2a1b0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok with de-privatizing things internally here (can be later as well)",
        "createdAt" : "2017-10-27T23:48:54Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ced2c8d24b3d5f2fbbb0d20843b1007e6ca49e40",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@np.import_array()\n\n\nfrom util cimport is_string_object\n"
  },
  {
    "id" : "34d3a59a-1a6e-4dd2-86b0-47bc4cf88f35",
    "prId" : 17830,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17830#pullrequestreview-72663818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b171f43-0800-42e0-a551-74297b14b41b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this used?",
        "createdAt" : "2017-10-27T23:49:35Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a037aa74-a8b8-4567-85eb-549c2ed06e7f",
        "parentId" : "1b171f43-0800-42e0-a551-74297b14b41b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No.  This came up recently in #17914.",
        "createdAt" : "2017-10-28T05:15:38Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ced2c8d24b3d5f2fbbb0d20843b1007e6ca49e40",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +204,208 @@\n\n# TODO: unused.  remove?\nclass CacheableOffset(object):\n    _cacheable = True"
  },
  {
    "id" : "dc966b1b-94ea-4885-a13b-14e7ec1f0247",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72682742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d07b808d-3559-4d37-90eb-77a07b809c78",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "BeginMixin and EndMixin are new, each only have the one method.  At the moment these methods are in DateOffset, but they are only used by a small handful of FooBegin and BarEnd subclasses.",
        "createdAt" : "2017-10-28T22:10:00Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +272,276 @@\n\nclass BeginMixin(object):\n    # helper for vectorized offsets\n"
  },
  {
    "id" : "1d9675f8-42bc-426c-91ff-b8b22e36c754",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72682772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30a294f5-6b5f-446c-aef6-b264ca876486",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "In the status quo `__neg__` is defined as `return self.__class__(-self.n, normalize=self.normalize, **self.kwds)`.  By deferring to `__mul__`, we move away from the `self.kwds` pattern.  Ditto for `copy`.",
        "createdAt" : "2017-10-28T22:11:47Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +336,340 @@        # Note: we are defering directly to __mul__ instead of __rmul__, as\n        # that allows us to use methods that can go in a `cdef class`\n        return self * -1\n\n    def copy(self):"
  },
  {
    "id" : "701dffe1-81c3-4509-aae3-c28c220c8bd1",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72713941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are you creating a base class here? what is the purpose?",
        "createdAt" : "2017-10-29T20:04:55Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "14111c1d-f794-4bd5-bed2-4b41bb8ecbca",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "IOW why not simply have 1 Base class (and not a _BaseOffset and a BaseOffset)",
        "createdAt" : "2017-10-29T20:07:08Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0a6c821e-d264-4f10-825b-be6d787e7bf5",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "See comments about remaining cython/pickle issues.\r\n\r\nYou're absolutely right that in its current form having two separate classes accomplishes nothing.  The idea is that `_BaseOffset` should be a `cdef class`, while `BaseOffset` should be python class.  (`__rfoo__` methods do not play nicely with cython classes).",
        "createdAt" : "2017-10-29T20:32:07Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "660283f3-6443-40fc-8777-299ed08a4485",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that is fine.",
        "createdAt" : "2017-10-29T21:37:59Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4550c0a1-e7a4-4802-a3e7-0b9ef7a065a3",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would probably leave this as a class for the moment. I am not convinced this actually needs to be a full c-extension class (e.g. its not like we are inheriting from a python c-class here). I don't see the benefit and it has added complexity.",
        "createdAt" : "2017-10-29T21:40:52Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fb7838c5-256b-4fb8-a44d-f1d70f5acfb8",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The main reason is to achieve immutability.  That's the big roadblock between us and making `__eq__`, `__ne__`, `__hash__` performance not-awful.  (There's an issue somewhere about \"scalar types immutable\" or something like that)",
        "createdAt" : "2017-10-29T22:29:01Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d08e2748-9f5f-49b8-94c8-dba994e6865a",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok",
        "createdAt" : "2017-10-29T22:57:39Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +317,321 @@# Base Classes\n\nclass _BaseOffset(object):\n    \"\"\"\n    Base class for DateOffset methods that are not overriden by subclasses"
  },
  {
    "id" : "c4a22297-d580-4e8e-a028-66a46c389221",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72712979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6307c100-35b4-44cb-aea9-c0a26c314524",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "side note, the repr is currently used for hashing, but instead should simply define ``__hash__`` I think.",
        "createdAt" : "2017-10-29T21:39:53Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "161e6750-f185-4751-81b3-5368e6d7b626",
        "parentId" : "6307c100-35b4-44cb-aea9-c0a26c314524",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`__hash__` is defined using `_params()` which is the god-awful slow thing we need to get rid of.",
        "createdAt" : "2017-10-29T22:30:31Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +347,351 @@        return self.isAnchored() and self._cacheable\n\n    def __repr__(self):\n        className = getattr(self, '_outputName', type(self).__name__)\n"
  },
  {
    "id" : "dcf57143-91bf-4520-8be5-57a9f249dc9f",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-74742930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf103270-9f3e-489b-af8f-8acd76aa2b16",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "update setup.py for this",
        "createdAt" : "2017-11-07T13:16:55Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +18,22 @@from pandas._libs.tslib import pydt_to_i8\n\nfrom frequencies cimport get_freq_code\nfrom conversion cimport tz_convert_single\n"
  },
  {
    "id" : "a782bdd5-37cb-4efb-b4e6-fb28dacfc378",
    "prId" : 18280,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18280#pullrequestreview-76831717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d623eb65-7f4e-43a9-af3f-2eecf0b3cc31",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "theoretically you should assert day_opt here (because if n=0 it is not checked)",
        "createdAt" : "2017-11-15T11:23:27Z",
        "updatedAt" : "2017-11-15T16:08:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a13c945f-c158-42e3-9092-cea14a93613f",
        "parentId" : "d623eb65-7f4e-43a9-af3f-2eecf0b3cc31",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You mean assert that it is valid?  Sure.\r\n\r\nBTW good call on testing the raising get_day_of_month.  The exception gets ignored without an `except -1`.",
        "createdAt" : "2017-11-15T15:55:03Z",
        "updatedAt" : "2017-11-15T16:08:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "369da473a878e0fa2a51d22806296dea204e0dbe",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +516,520 @@\n    \"\"\"\n    # Note: The other.day < ... condition will never hold when day_opt=='start'\n    # and the other.day > ... condition will never hold when day_opt=='end'.\n    # At some point these extra checks may need to be optimized away."
  },
  {
    "id" : "bfa72876-73ac-4b3d-bd8c-6864562f6b69",
    "prId" : 18329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18329#pullrequestreview-77651323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "652cbfe9-312f-4473-aac9-7858e5595fb4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in a followup (TODO), can you add a description of these attributes in the doc-string of this class. (e.g. what the options are, what they do, etc).",
        "createdAt" : "2017-11-19T18:50:52Z",
        "updatedAt" : "2017-11-19T18:50:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f3c76e9ac9900d5e45b7416c841bb04a45e2071",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +356,360 @@    \"\"\"\n    _typ = \"dateoffset\"\n    _normalize_cache = True\n    _cacheable = False\n    _day_opt = None"
  },
  {
    "id" : "a8cb2ff9-9659-482e-aa6e-80c0ccd80364",
    "prId" : 18375,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18375#pullrequestreview-77657880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dfbc616-f2ba-47b6-a240-d9ca09911ebb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add these in setup.py",
        "createdAt" : "2017-11-19T22:33:28Z",
        "updatedAt" : "2017-11-20T04:04:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d865d8125decd48ec2e30b5080e217fae028573e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +22,26 @@from conversion cimport tz_convert_single, pydt_to_i8\nfrom frequencies cimport get_freq_code\nfrom nattype cimport NPY_NAT\nfrom np_datetime cimport (pandas_datetimestruct,\n                          dtstruct_to_dt64, dt64_to_dtstruct,"
  },
  {
    "id" : "6c8d1ab2-4c8e-4722-95d4-245d5631fae1",
    "prId" : 18375,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18375#pullrequestreview-77752389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed546b89-a7c7-4f7b-b52e-9891205db019",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you doc-string things as well (here just fix the formatting to numpydoc)",
        "createdAt" : "2017-11-20T11:21:29Z",
        "updatedAt" : "2017-11-20T11:21:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d865d8125decd48ec2e30b5080e217fae028573e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +451,455 @@    \"\"\"\n    Given an int64-based datetime index, shift all elements\n    specified number of months using DateOffset semantics\n\n    day: {None, 'start', 'end'}"
  },
  {
    "id" : "f877f941-9fd4-4c70-ad89-3afa9d812c03",
    "prId" : 18762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18762#pullrequestreview-83474483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67c5435f-e9ed-4535-aed1-2c11c247b043",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does not match the signature",
        "createdAt" : "2017-12-14T11:34:17Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5d9dee11784beda944f226b0363ca015ce5e79f",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +880,884 @@    ----------\n    other : datetime or Timestamp\n    n : number of periods to increment, before adjusting for rolling\n    month : int reference month giving the first month of the year\n    day_opt : 'start', 'end', 'business_start', 'business_end'"
  },
  {
    "id" : "3aef0dea-bef7-4878-bc08-d11f6278144d",
    "prId" : 18762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18762#pullrequestreview-85430680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a78e535c-d3b4-4b52-b211-af8fff2d5039",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is very very confusing. you are using this in 2 separate ways. I would prefer 2 functions one for day one for month",
        "createdAt" : "2017-12-21T15:22:17Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4e2b5e3b-f8ab-495e-b6f2-00fa37a67767",
        "parentId" : "a78e535c-d3b4-4b52-b211-af8fff2d5039",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "So is the issue with the docstring in roll_convention?  or the name?  I dont think the function itself can be broken down any further.",
        "createdAt" : "2017-12-21T16:22:23Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "dee8de2c-86fb-4142-9715-89e0cdfa8575",
        "parentId" : "a78e535c-d3b4-4b52-b211-af8fff2d5039",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Would this concern be ameliorated if `roll_monthday` were removed?  I expect all of the places where it is used are eventually going to be simplified/fixed to use `roll_convention` (or something equivalent)",
        "createdAt" : "2017-12-21T17:21:59Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "66a0cd35-8d3b-4807-876d-cdab9cc4427b",
        "parentId" : "a78e535c-d3b4-4b52-b211-af8fff2d5039",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think this is fine, but you are using this two differen types so make\r\n``roll_monthday_interger``, ``roll_monthday_datetime`` or whatever. have 1 function do 1 thing.",
        "createdAt" : "2017-12-23T20:51:46Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bed31228-9d17-4072-ad29-02368e031f1f",
        "parentId" : "a78e535c-d3b4-4b52-b211-af8fff2d5039",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Is it possible the diff is obfuscating the fact that roll_monthday was split several commits back into `roll_monthday` (which takes datetimes) and `roll_convention` (which takes ints)?",
        "createdAt" : "2017-12-23T22:12:43Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5d9dee11784beda944f226b0363ca015ce5e79f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +834,838 @@    n : number of periods to increment, before adjusting for rolling\n    compare : int, generally the day component of a datetime, in the same\n              month as the datetime form which `other` was taken.\n\n    Returns"
  },
  {
    "id" : "088bd526-248f-425f-ac4b-95074e810e16",
    "prId" : 19403,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19403#pullrequestreview-91941641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4eb489f-1918-45bd-855c-c0d076813be2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "huh?",
        "createdAt" : "2018-01-26T12:02:18Z",
        "updatedAt" : "2018-02-01T18:18:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "651931ed-d09b-4f9b-9c8b-8b0927d05477",
        "parentId" : "c4eb489f-1918-45bd-855c-c0d076813be2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "In particular DateOffset has a lot of _attributes that may not get set unless specifically passed.",
        "createdAt" : "2018-01-26T19:18:58Z",
        "updatedAt" : "2018-02-01T18:18:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "53c251fb45c2739df25657a200b0a2601c3e1f8c",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +308,312 @@    def kwds(self):\n        # for backwards-compatibility\n        kwds = {name: getattr(self, name, None) for name in self._attributes\n                if name not in ['n', 'normalize']}\n        return {name: kwds[name] for name in kwds if kwds[name] is not None}"
  },
  {
    "id" : "aa192fab-ebe9-48a9-ba41-610db3c1632f",
    "prId" : 21341,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21341#pullrequestreview-126607177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "073efd04-5ae9-4c56-b7aa-6097b646303f",
        "parentId" : null,
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "The standard approach is usually to use private attribute like `_n` and provide access via a properties. Is there a reason why that wouldn't make sense here?",
        "createdAt" : "2018-06-06T20:37:36Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "6d664e80-e1d6-4e36-9cfd-9e85e3732527",
        "parentId" : "073efd04-5ae9-4c56-b7aa-6097b646303f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "That would absolutely make sense, but since micro-benchmarks are a concern I prefer to avoid the `property` overhead.  The best-case would be the implementation in <s>#18824</s>#18224, but I can't figure out the pickle errors there.",
        "createdAt" : "2018-06-07T01:16:20Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e5af76f7-7639-4622-be70-290da3df4a34",
        "parentId" : "073efd04-5ae9-4c56-b7aa-6097b646303f",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "OK, seems reasonable to me.",
        "createdAt" : "2018-06-07T01:18:15Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9312249dcf6045de63863a6090b701ff73bc342",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +312,316 @@\n    def __setattr__(self, name, value):\n        raise AttributeError(\"DateOffset objects are immutable.\")\n\n    @property"
  },
  {
    "id" : "818abc84-f42a-42f8-ba74-3d156ff8bd84",
    "prId" : 21341,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21341#pullrequestreview-129787900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would just set these as regular attributes, I doubt this actually makes a signfiicant perf difference.\r\n",
        "createdAt" : "2018-06-19T00:29:56Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "380cadc1-9d3f-4441-a983-80d922ed87cb",
        "parentId" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not sure I understand.  These _are_ regular attributes, but the PR overrides `__setattr__` so we have to use `object.__setattr__`.",
        "createdAt" : "2018-06-19T00:46:10Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f4674d07-fa3f-4c1b-9d7f-5f03d07b3da0",
        "parentId" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh sorry you are right. \r\n\r\ncan you set these as cdef readonly? (and maybe type them) or not yet?",
        "createdAt" : "2018-06-19T00:47:26Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7b2187de-b03f-4958-85c1-e78f60f03390",
        "parentId" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I really really wish I could, but until someone smarter than me looks at <s>#18824</s>#18224 `cdef class` causes pickle test failures.",
        "createdAt" : "2018-06-19T00:49:00Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "753c724e-e986-4cdd-af44-c72e90d085dc",
        "parentId" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "@jbrockmendel what pickle issue are you referring to in that change? That just looks like a master tracker but not sure the exact issue contained within ",
        "createdAt" : "2018-06-19T00:54:01Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c45a6a37-69d5-4749-949b-b1543fb07554",
        "parentId" : "8506f62f-808a-4059-a0e1-0d877e2c23cb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@WillAyd thanks for catching that, should be #18224.  Will fix above.",
        "createdAt" : "2018-06-19T00:57:55Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9312249dcf6045de63863a6090b701ff73bc342",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +307,311 @@    def __init__(self, n=1, normalize=False):\n        n = self._validate_n(n)\n        object.__setattr__(self, \"n\", n)\n        object.__setattr__(self, \"normalize\", normalize)\n        object.__setattr__(self, \"_cache\", {})"
  },
  {
    "id" : "3a5d8b4b-ecfc-4070-910f-7813911abaae",
    "prId" : 21341,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21341#pullrequestreview-129790519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what is _cache for?",
        "createdAt" : "2018-06-19T00:30:07Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b378bfc2-b8f4-484b-8dc5-cea9abee13d6",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "If we don't create this explicitly in `__init__` then `@cache_readonly` lookups will try to create it, which will raise.",
        "createdAt" : "2018-06-19T00:46:57Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d72ab2a7-d7e4-4bc9-96c8-dcf4e45a42a4",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you put this on the class? (or is that really weird)?",
        "createdAt" : "2018-06-19T00:56:55Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c1afd85d-829f-4007-9eaa-52b95e60200b",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "\r\n```\r\npd.DateOffset._cache = {}\r\noff = pd.DateOffset(n=1)\r\nhour = pd.offsets.BusinessHour(n=2)\r\n\r\n>>> off._cache is hour._cache\r\nTrue\r\n```\r\n",
        "createdAt" : "2018-06-19T01:10:50Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "356f8540-2138-458e-b503-fad99b3b7676",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "right so we can't use the ``@cache_readonly`` decorator here? (or is that what you are doing by pre-emptively setting the cache)?",
        "createdAt" : "2018-06-19T01:13:44Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dfb07d40-b82b-445d-b83c-607e315282a2",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`cache_readonly.__get__` checks for a `_cache` attribute and creates one if it does not exist.  Creating it in `__init__` ensures that one exists, so a new one does not have to be created (since attempting to do so would raise)",
        "createdAt" : "2018-06-19T01:16:10Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e00d45a3-d96c-4cf0-ae62-18bdfdfe19d6",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i.e. this is necessary in order to retain the existing usages of `cache_readonly` on `DateOffset` subclasses.",
        "createdAt" : "2018-06-19T01:16:47Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ebdb2080-97ec-460a-b5fa-edf8c1cb522f",
        "parentId" : "23136d57-8f99-4761-8ac6-59b6cf8adc53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok makes sense",
        "createdAt" : "2018-06-19T01:18:00Z",
        "updatedAt" : "2018-06-21T10:23:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9312249dcf6045de63863a6090b701ff73bc342",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +309,313 @@        object.__setattr__(self, \"n\", n)\n        object.__setattr__(self, \"normalize\", normalize)\n        object.__setattr__(self, \"_cache\", {})\n\n    def __setattr__(self, name, value):"
  },
  {
    "id" : "533b6364-af1c-4f5e-9212-1e0c27a070fe",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-172499379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a0fdaf3-e795-4b39-9b5a-920b43f552e9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment on each of these blocks",
        "createdAt" : "2018-11-07T14:00:25Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +309,313 @@    def __eq__(self, other):\n        if is_string_object(other):\n            try:\n                # GH#23524 if to_offset fails, we are dealing with an\n                #  incomparable type so == is False and != is True"
  },
  {
    "id" : "f0093d10-084a-4943-b176-d551fc9744d8",
    "prId" : 23915,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23915#pullrequestreview-180571396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54a79dff-22e0-4399-9cd9-fa1480a4d793",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string here",
        "createdAt" : "2018-12-02T17:52:32Z",
        "updatedAt" : "2018-12-07T23:03:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "09d51607-71fe-43bc-8ce9-58d453c06fe9",
        "parentId" : "54a79dff-22e0-4399-9cd9-fa1480a4d793",
        "authorId" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "body" : "added.",
        "createdAt" : "2018-12-02T18:08:21Z",
        "updatedAt" : "2018-12-07T23:03:22Z",
        "lastEditedBy" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed3629a40fe0c67c879bc9d12559da4d2693bef",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +359,363 @@        attributes equal.\n        \"\"\"\n        return type(self)(n=1, normalize=self.normalize, **self.kwds)\n\n    def __add__(self, other):"
  },
  {
    "id" : "4b338ea4-e758-4f89-abec-7fd958bc47a1",
    "prId" : 24710,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24710#pullrequestreview-191335959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "639a4be7-a6e7-4f56-a49c-10c66eaa5cd3",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "eventually we'll reuse this for rdiv, floordiv, etc.",
        "createdAt" : "2019-01-10T17:53:01Z",
        "updatedAt" : "2019-01-11T17:48:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a9bb746eb723d5897010024e9bf06a4b6513f11",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +131,135 @@\n\ncdef _wrap_timedelta_result(result):\n    \"\"\"\n    Tick operations dispatch to their Timedelta counterparts.  Wrap the result"
  },
  {
    "id" : "90c22c2e-7802-4217-91b1-d83e5d084b84",
    "prId" : 24710,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24710#pullrequestreview-191383093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41175941-a3b1-4fde-a91f-f1cf1dc6bf9d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this would be easy in cython, except for the fact that the offsets are in python :<",
        "createdAt" : "2019-01-10T19:18:10Z",
        "updatedAt" : "2019-01-11T17:48:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a941c3c3-aed7-4b8a-b0b6-fa11074c7c11",
        "parentId" : "41175941-a3b1-4fde-a91f-f1cf1dc6bf9d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah that and to_offset; im pretty sure we’ll finish moving the offsets to cython eventually (may need to split this module)",
        "createdAt" : "2019-01-10T19:45:06Z",
        "updatedAt" : "2019-01-11T17:48:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a9bb746eb723d5897010024e9bf06a4b6513f11",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +146,150 @@    if PyDelta_Check(result):\n        # convert Timedelta back to a Tick\n        from pandas.tseries.offsets import _delta_to_tick\n        return _delta_to_tick(result)\n"
  },
  {
    "id" : "40139698-e9ab-4457-9f13-f2b05928a49a",
    "prId" : 34148,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34148#pullrequestreview-411980170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c3f04e6-b0e0-4f72-9556-a74a4658f54e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should probably deprecate this (e.g. put this in _nanos for use internally), but can be later",
        "createdAt" : "2020-05-14T15:59:13Z",
        "updatedAt" : "2020-05-14T17:23:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c529dd6-fa1c-416a-b9e8-1f4dd2ed0eb6",
        "parentId" : "7c3f04e6-b0e0-4f72-9556-a74a4658f54e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "maybe.  we access it in the Timedelta code, so making it private might be a minor code smell",
        "createdAt" : "2020-05-14T16:29:03Z",
        "updatedAt" : "2020-05-14T17:23:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d4e54e0ef4198163441e8d9cbb22b807b287f93",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +790,794 @@\n    @property\n    def nanos(self) -> int64_t:\n        return self.delta.value\n"
  },
  {
    "id" : "871fe141-445e-41a0-87bb-6d0bccb1ef77",
    "prId" : 34167,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34167#pullrequestreview-412016134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7f7a46d-48db-4649-8586-4bfd6a010a2a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you not cimport this?",
        "createdAt" : "2020-05-14T16:53:24Z",
        "updatedAt" : "2020-05-18T14:16:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5770055b-eba7-40a0-9b54-348bd697e736",
        "parentId" : "c7f7a46d-48db-4649-8586-4bfd6a010a2a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "we need Timestamp (not cimport-able), not _Timestamp (cimport-able) here.  We could re-instate a `as_timestamp` func to only do the runtime import in one place, and after a (fast) isinstance check.\r\n\r\nI asked on the cython mailing list [yesterday](https://groups.google.com/forum/#!topic/cython-users/ikkDWc1bXkU) about handling of circular cimports.  It seems pretty hit-and-miss.",
        "createdAt" : "2020-05-14T17:08:18Z",
        "updatedAt" : "2020-05-18T14:16:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1abc5acf5949c8dbc32c348ba8a5ea1a3a9425e3",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +634,638 @@            Rolled timestamp if not on offset, otherwise unchanged timestamp.\n        \"\"\"\n        from pandas import Timestamp\n        dt = Timestamp(dt)\n        if not self.is_on_offset(dt):"
  },
  {
    "id" : "4774e77a-662e-43ab-bce1-2d257814194d",
    "prId" : 34432,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34432#pullrequestreview-420485015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bd42022-4c70-41c1-bd2f-6fbbe4d1818a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Cython doesn't optimize this automatically? \r\n(and does this make a noticeable difference?)",
        "createdAt" : "2020-05-28T20:00:22Z",
        "updatedAt" : "2020-05-28T20:00:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7a11112a-4a71-4526-a045-b1f6e4c08d7d",
        "parentId" : "2bd42022-4c70-41c1-bd2f-6fbbe4d1818a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "cython does not do this automatically.  it makes a small differnece, but enough that we do this in the rest of the cython code",
        "createdAt" : "2020-05-28T20:11:37Z",
        "updatedAt" : "2020-05-28T20:11:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "bfe7d6d9-854b-49eb-9c00-629fcca11564",
        "parentId" : "2bd42022-4c70-41c1-bd2f-6fbbe4d1818a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK",
        "createdAt" : "2020-05-28T20:12:37Z",
        "updatedAt" : "2020-05-28T20:12:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "bf211061-2834-483b-b2ad-ff2b361e0451",
        "parentId" : "2bd42022-4c70-41c1-bd2f-6fbbe4d1818a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah we use this type of check with datetime types a lot ",
        "createdAt" : "2020-05-28T20:55:42Z",
        "updatedAt" : "2020-05-28T20:56:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a78d9f77a8e4d426f0808e175b9de6534e9192f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1326,1330 @@            return off_str\n\n        if PyDelta_Check(self.offset):\n            zero = timedelta(0, 0, 0)\n            if self.offset >= zero:"
  },
  {
    "id" : "8de81087-2688-465d-98d7-252f0b2cdf33",
    "prId" : 34462,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34462#pullrequestreview-421536789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad57ee5b-9711-4036-b550-de716a847f4a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do an absolute import",
        "createdAt" : "2020-05-31T23:12:13Z",
        "updatedAt" : "2020-05-31T23:13:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1feafb04-03a1-458a-9621-0e5097db1b73",
        "parentId" : "ad57ee5b-9711-4036-b550-de716a847f4a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure, follow-up?  this is a blocker for stuff im excited about",
        "createdAt" : "2020-05-31T23:16:15Z",
        "updatedAt" : "2020-05-31T23:16:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6be0fcab-2954-4545-908c-810dc089c36c",
        "parentId" : "ad57ee5b-9711-4036-b550-de716a847f4a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(and actually #34486 will get rid of this import)",
        "createdAt" : "2020-05-31T23:16:44Z",
        "updatedAt" : "2020-05-31T23:16:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e68b2f46a442fc97cf2a834ad59c38e2dc78284a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3600,3604 @@\n                # TODO: avoid runtime import\n                from .resolution import Resolution, reso_str_bump_map\n\n                if prefix in reso_str_bump_map:"
  },
  {
    "id" : "83db9adb-3d1e-44c8-9110-224274c832a4",
    "prId" : 34486,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34486#pullrequestreview-421534497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39a4af66-8b32-477c-b93e-bff9b2e565fc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "wouldn't this be better as a module level routine?",
        "createdAt" : "2020-05-31T22:20:57Z",
        "updatedAt" : "2020-05-31T23:57:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "81b25a5c-cde0-4f3d-85b9-4008c67bd34d",
        "parentId" : "39a4af66-8b32-477c-b93e-bff9b2e565fc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i dont think so.  it uses `self.n`, so really makes sense as a method",
        "createdAt" : "2020-05-31T22:45:41Z",
        "updatedAt" : "2020-05-31T23:57:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea127bad7755b28c523c19804ee390b17890a423",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +750,754 @@    # FIXME: Without making this cpdef, we get AttributeError when calling\n    #  from __mul__\n    cpdef Tick _next_higher_resolution(Tick self):\n        if type(self) is Day:\n            return Hour(self.n * 24)"
  },
  {
    "id" : "bef13274-a35e-4c84-8e9f-7db3079768de",
    "prId" : 34486,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34486#pullrequestreview-421534234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b4abc2-99a0-4e20-904f-c7b0e9acedad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really really prefer absolute imports",
        "createdAt" : "2020-05-31T22:22:08Z",
        "updatedAt" : "2020-05-31T23:57:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5f193518-19cc-47aa-a450-c759f871765a",
        "parentId" : "d4b4abc2-99a0-4e20-904f-c7b0e9acedad",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure.  im more concerned about getting rid of the runtime imports",
        "createdAt" : "2020-05-31T22:41:07Z",
        "updatedAt" : "2020-05-31T23:57:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea127bad7755b28c523c19804ee390b17890a423",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +3602,3606 @@    <Hour>\n    \"\"\"\n    # TODO: avoid runtime imports\n    from pandas._libs.tslibs.timedeltas import Timedelta\n"
  },
  {
    "id" : "2a1f5ab3-4e32-4e5d-b3a4-440a58189550",
    "prId" : 34486,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34486#pullrequestreview-421533075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08419a5a-2f62-42e8-872e-99fb7717b640",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give some comments on what is being done here",
        "createdAt" : "2020-05-31T22:22:42Z",
        "updatedAt" : "2020-05-31T23:57:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea127bad7755b28c523c19804ee390b17890a423",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +3641,3645 @@                if not stride:\n                    stride = 1\n\n                if prefix in {\"D\", \"H\", \"T\", \"S\", \"L\", \"U\", \"N\"}:\n                    # For these prefixes, we have something like \"3H\" or"
  }
]