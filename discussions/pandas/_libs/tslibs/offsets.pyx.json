[
  {
    "id" : "b34b2b4b-c8f4-466c-afe6-6a01ae1a623d",
    "prId" : 17830,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17830#pullrequestreview-72653810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "656bafd2-ac39-4a2b-b5d4-98da52c2a1b0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok with de-privatizing things internally here (can be later as well)",
        "createdAt" : "2017-10-27T23:48:54Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ced2c8d24b3d5f2fbbb0d20843b1007e6ca49e40",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@np.import_array()\n\n\nfrom util cimport is_string_object\n"
  },
  {
    "id" : "34d3a59a-1a6e-4dd2-86b0-47bc4cf88f35",
    "prId" : 17830,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17830#pullrequestreview-72663818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b171f43-0800-42e0-a551-74297b14b41b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this used?",
        "createdAt" : "2017-10-27T23:49:35Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a037aa74-a8b8-4567-85eb-549c2ed06e7f",
        "parentId" : "1b171f43-0800-42e0-a551-74297b14b41b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No.  This came up recently in #17914.",
        "createdAt" : "2017-10-28T05:15:38Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ced2c8d24b3d5f2fbbb0d20843b1007e6ca49e40",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +204,208 @@\n\n# TODO: unused.  remove?\nclass CacheableOffset(object):\n    _cacheable = True"
  },
  {
    "id" : "dc966b1b-94ea-4885-a13b-14e7ec1f0247",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72682742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d07b808d-3559-4d37-90eb-77a07b809c78",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "BeginMixin and EndMixin are new, each only have the one method.  At the moment these methods are in DateOffset, but they are only used by a small handful of FooBegin and BarEnd subclasses.",
        "createdAt" : "2017-10-28T22:10:00Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +272,276 @@\n\nclass BeginMixin(object):\n    # helper for vectorized offsets\n"
  },
  {
    "id" : "1d9675f8-42bc-426c-91ff-b8b22e36c754",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72682772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30a294f5-6b5f-446c-aef6-b264ca876486",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "In the status quo `__neg__` is defined as `return self.__class__(-self.n, normalize=self.normalize, **self.kwds)`.  By deferring to `__mul__`, we move away from the `self.kwds` pattern.  Ditto for `copy`.",
        "createdAt" : "2017-10-28T22:11:47Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +336,340 @@        # Note: we are defering directly to __mul__ instead of __rmul__, as\n        # that allows us to use methods that can go in a `cdef class`\n        return self * -1\n\n    def copy(self):"
  },
  {
    "id" : "701dffe1-81c3-4509-aae3-c28c220c8bd1",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72713941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are you creating a base class here? what is the purpose?",
        "createdAt" : "2017-10-29T20:04:55Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "14111c1d-f794-4bd5-bed2-4b41bb8ecbca",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "IOW why not simply have 1 Base class (and not a _BaseOffset and a BaseOffset)",
        "createdAt" : "2017-10-29T20:07:08Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0a6c821e-d264-4f10-825b-be6d787e7bf5",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "See comments about remaining cython/pickle issues.\r\n\r\nYou're absolutely right that in its current form having two separate classes accomplishes nothing.  The idea is that `_BaseOffset` should be a `cdef class`, while `BaseOffset` should be python class.  (`__rfoo__` methods do not play nicely with cython classes).",
        "createdAt" : "2017-10-29T20:32:07Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "660283f3-6443-40fc-8777-299ed08a4485",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that is fine.",
        "createdAt" : "2017-10-29T21:37:59Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4550c0a1-e7a4-4802-a3e7-0b9ef7a065a3",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would probably leave this as a class for the moment. I am not convinced this actually needs to be a full c-extension class (e.g. its not like we are inheriting from a python c-class here). I don't see the benefit and it has added complexity.",
        "createdAt" : "2017-10-29T21:40:52Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fb7838c5-256b-4fb8-a44d-f1d70f5acfb8",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The main reason is to achieve immutability.  That's the big roadblock between us and making `__eq__`, `__ne__`, `__hash__` performance not-awful.  (There's an issue somewhere about \"scalar types immutable\" or something like that)",
        "createdAt" : "2017-10-29T22:29:01Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d08e2748-9f5f-49b8-94c8-dba994e6865a",
        "parentId" : "3bbf293a-d8a5-4931-b9c5-958e8fe84476",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok",
        "createdAt" : "2017-10-29T22:57:39Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +317,321 @@# Base Classes\n\nclass _BaseOffset(object):\n    \"\"\"\n    Base class for DateOffset methods that are not overriden by subclasses"
  },
  {
    "id" : "c4a22297-d580-4e8e-a028-66a46c389221",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-72712979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6307c100-35b4-44cb-aea9-c0a26c314524",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "side note, the repr is currently used for hashing, but instead should simply define ``__hash__`` I think.",
        "createdAt" : "2017-10-29T21:39:53Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "161e6750-f185-4751-81b3-5368e6d7b626",
        "parentId" : "6307c100-35b4-44cb-aea9-c0a26c314524",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`__hash__` is defined using `_params()` which is the god-awful slow thing we need to get rid of.",
        "createdAt" : "2017-10-29T22:30:31Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +347,351 @@        return self.isAnchored() and self._cacheable\n\n    def __repr__(self):\n        className = getattr(self, '_outputName', type(self).__name__)\n"
  },
  {
    "id" : "dcf57143-91bf-4520-8be5-57a9f249dc9f",
    "prId" : 18016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18016#pullrequestreview-74742930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf103270-9f3e-489b-af8f-8acd76aa2b16",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "update setup.py for this",
        "createdAt" : "2017-11-07T13:16:55Z",
        "updatedAt" : "2017-11-07T19:20:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "61bf134f11b8258fb79549fe5c906cd3e3701430",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +18,22 @@from pandas._libs.tslib import pydt_to_i8\n\nfrom frequencies cimport get_freq_code\nfrom conversion cimport tz_convert_single\n"
  },
  {
    "id" : "a782bdd5-37cb-4efb-b4e6-fb28dacfc378",
    "prId" : 18280,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18280#pullrequestreview-76831717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d623eb65-7f4e-43a9-af3f-2eecf0b3cc31",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "theoretically you should assert day_opt here (because if n=0 it is not checked)",
        "createdAt" : "2017-11-15T11:23:27Z",
        "updatedAt" : "2017-11-15T16:08:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a13c945f-c158-42e3-9092-cea14a93613f",
        "parentId" : "d623eb65-7f4e-43a9-af3f-2eecf0b3cc31",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You mean assert that it is valid?  Sure.\r\n\r\nBTW good call on testing the raising get_day_of_month.  The exception gets ignored without an `except -1`.",
        "createdAt" : "2017-11-15T15:55:03Z",
        "updatedAt" : "2017-11-15T16:08:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "369da473a878e0fa2a51d22806296dea204e0dbe",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +516,520 @@\n    \"\"\"\n    # Note: The other.day < ... condition will never hold when day_opt=='start'\n    # and the other.day > ... condition will never hold when day_opt=='end'.\n    # At some point these extra checks may need to be optimized away."
  },
  {
    "id" : "bfa72876-73ac-4b3d-bd8c-6864562f6b69",
    "prId" : 18329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18329#pullrequestreview-77651323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "652cbfe9-312f-4473-aac9-7858e5595fb4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in a followup (TODO), can you add a description of these attributes in the doc-string of this class. (e.g. what the options are, what they do, etc).",
        "createdAt" : "2017-11-19T18:50:52Z",
        "updatedAt" : "2017-11-19T18:50:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f3c76e9ac9900d5e45b7416c841bb04a45e2071",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +356,360 @@    \"\"\"\n    _typ = \"dateoffset\"\n    _normalize_cache = True\n    _cacheable = False\n    _day_opt = None"
  },
  {
    "id" : "a8cb2ff9-9659-482e-aa6e-80c0ccd80364",
    "prId" : 18375,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18375#pullrequestreview-77657880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dfbc616-f2ba-47b6-a240-d9ca09911ebb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add these in setup.py",
        "createdAt" : "2017-11-19T22:33:28Z",
        "updatedAt" : "2017-11-20T04:04:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d865d8125decd48ec2e30b5080e217fae028573e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +22,26 @@from conversion cimport tz_convert_single, pydt_to_i8\nfrom frequencies cimport get_freq_code\nfrom nattype cimport NPY_NAT\nfrom np_datetime cimport (pandas_datetimestruct,\n                          dtstruct_to_dt64, dt64_to_dtstruct,"
  },
  {
    "id" : "6c8d1ab2-4c8e-4722-95d4-245d5631fae1",
    "prId" : 18375,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18375#pullrequestreview-77752389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed546b89-a7c7-4f7b-b52e-9891205db019",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you doc-string things as well (here just fix the formatting to numpydoc)",
        "createdAt" : "2017-11-20T11:21:29Z",
        "updatedAt" : "2017-11-20T11:21:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d865d8125decd48ec2e30b5080e217fae028573e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +451,455 @@    \"\"\"\n    Given an int64-based datetime index, shift all elements\n    specified number of months using DateOffset semantics\n\n    day: {None, 'start', 'end'}"
  }
]