[
  {
    "id" : "d12e7b56-554a-499d-901a-a7eefb642c13",
    "prId" : 18952,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18952#pullrequestreview-104773810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0ffabd9-5182-4ade-a2d7-5fae8163f6c0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have an assert on how? (e.g. it has to be S/E)? if not can you add one",
        "createdAt" : "2018-03-13T23:00:17Z",
        "updatedAt" : "2018-07-30T20:07:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "79160cec-d321-409a-b45c-5b0b2b3233cd",
        "parentId" : "f0ffabd9-5182-4ade-a2d7-5fae8163f6c0",
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "This is done in ``_validate_end_alias`` I think:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/ad50b1d77531f41a9bd684a1eff8bfe2831c24b8/pandas/_libs/tslibs/period.pyx#L1843-L1850",
        "createdAt" : "2018-03-17T18:03:16Z",
        "updatedAt" : "2018-07-30T20:07:58Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6716ca3a8eed559e9dceb14a6eb927a5fa4f4fd",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1222,1226 @@            freq = self._maybe_convert_freq(freq)\n        how = _validate_end_alias(how)\n\n        end = how == 'E'\n        if end:"
  },
  {
    "id" : "9ea793d2-c78b-469a-9fbf-edac9b1d2003",
    "prId" : 19540,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19540#pullrequestreview-94550039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00dcfb9a-4d78-4a8a-b7aa-9e0e8967bf76",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these can be inline?",
        "createdAt" : "2018-02-06T11:30:18Z",
        "updatedAt" : "2018-02-07T16:23:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cb7c8748-14db-44fa-b9c3-aa35121440ad",
        "parentId" : "00dcfb9a-4d78-4a8a-b7aa-9e0e8967bf76",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "get_accessor_func returns pointers to these functions.  Does that affect inline-ability?",
        "createdAt" : "2018-02-06T15:22:12Z",
        "updatedAt" : "2018-02-07T16:23:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "597a4ac9-86dc-4d87-b874-2af49a9db98f",
        "parentId" : "00dcfb9a-4d78-4a8a-b7aa-9e0e8967bf76",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no idea. ok can you run a perf comparison on period stuff, maybe even vs 0.21.0 so we can get a good sense if anything has changed much.",
        "createdAt" : "2018-02-06T23:44:17Z",
        "updatedAt" : "2018-02-07T16:23:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c0265e3c-6dc8-4459-9024-2428295b9bac",
        "parentId" : "00dcfb9a-4d78-4a8a-b7aa-9e0e8967bf76",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The compiler didn't complain about the inlining.  Looking at timeit results the difference is indistinguishable.  Will get asv going in a few minutes.",
        "createdAt" : "2018-02-06T23:56:05Z",
        "updatedAt" : "2018-02-07T16:23:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d749d860cfdde384cb39a97b7c40507e8a84813",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +389,393 @@\n\ncdef int pyear(int64_t ordinal, int freq):\n    cdef:\n        date_info dinfo"
  },
  {
    "id" : "1fc12cc4-6937-484b-9fb7-3e169fa092cb",
    "prId" : 19540,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19540#pullrequestreview-94928678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c868213-705c-464a-8907-b1bd50354a91",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "as usual want to write doc-strings for things",
        "createdAt" : "2018-02-08T01:09:18Z",
        "updatedAt" : "2018-02-08T01:09:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d749d860cfdde384cb39a97b7c40507e8a84813",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +96,100 @@@cython.cdivision\ncdef char* c_strftime(date_info *dinfo, char *fmt):\n    \"\"\"\n    function to generate a nice string representation of the period\n    object, originally from DateObject_strftime"
  },
  {
    "id" : "405b9afa-ec3f-4f80-a424-e266a8e58b84",
    "prId" : 19608,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19608#pullrequestreview-95633561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cbd8c61-2138-4c55-8426-3fcc394f0ed6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ideally add some full doc-strings on these which list the args and types",
        "createdAt" : "2018-02-10T17:23:41Z",
        "updatedAt" : "2018-02-10T17:24:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bf57de26-9584-4883-b831-131e3c8ac738",
        "parentId" : "9cbd8c61-2138-4c55-8426-3fcc394f0ed6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Will do.  Mind doing those in the next round to avoid clogging the CI?",
        "createdAt" : "2018-02-10T20:33:56Z",
        "updatedAt" : "2018-02-10T20:33:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "af6fb788-5da0-47c7-8ba8-7ec34d599d4f",
        "parentId" : "9cbd8c61-2138-4c55-8426-3fcc394f0ed6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that's fine",
        "createdAt" : "2018-02-10T21:12:28Z",
        "updatedAt" : "2018-02-10T21:12:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "769feee147b0e2543a86d320f4ec8f317975398e",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +289,293 @@    \"\"\"\n    Set the instance's value using the given date and time.\n    Assumes GREGORIAN_CALENDAR.\n    \"\"\"\n    # Bounds check"
  },
  {
    "id" : "f43c2dd0-4415-45ae-93ff-11cb68fc7ad7",
    "prId" : 19650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19650#pullrequestreview-97303449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24dd4302-3920-449d-ae6e-5146cbc69b6c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pointer to",
        "createdAt" : "2018-02-12T11:18:31Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "19911b54-5270-4320-b401-668d1183894f",
        "parentId" : "24dd4302-3920-449d-ae6e-5146cbc69b6c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "That's what the asterisk is for (this notation is used in docstrings elsewhere).  Have a preferred syntax?",
        "createdAt" : "2018-02-12T15:20:25Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "63200ae5-6fbb-4c26-9e7a-74b80fc774c7",
        "parentId" : "24dd4302-3920-449d-ae6e-5146cbc69b6c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, you are removing this anyhow IIRC? (in follow on)",
        "createdAt" : "2018-02-16T18:17:23Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0352899d-6f77-4e11-82cd-7af3801829cb",
        "parentId" : "24dd4302-3920-449d-ae6e-5146cbc69b6c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.",
        "createdAt" : "2018-02-16T20:13:40Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4e453b61957187c3b1cf9e0c81368e263774ab9",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +322,326 @@    Parameters\n    ----------\n    dinfo : date_info*\n    absdate : int64_t\n        days elapsed since datetime(1, 1, 1)"
  },
  {
    "id" : "834e60f9-944c-483b-99cc-cfeaf8e51012",
    "prId" : 19650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19650#pullrequestreview-97303740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f920fbf8-ebc5-42da-9ec5-d23ce9b7dd72",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you be more specific here , e.g. what is abstime",
        "createdAt" : "2018-02-12T11:18:59Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2e7154a9-61d0-4559-93bf-485af25aab97",
        "parentId" : "f920fbf8-ebc5-42da-9ec5-d23ce9b7dd72",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "here",
        "createdAt" : "2018-02-16T18:18:17Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "46219cf9-03d6-45fb-ac08-bb23ca3c00d9",
        "parentId" : "f920fbf8-ebc5-42da-9ec5-d23ce9b7dd72",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The next line `seconds elapsed since beginning of day described by absdate` isn't clear?",
        "createdAt" : "2018-02-16T20:14:57Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4e453b61957187c3b1cf9e0c81368e263774ab9",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +374,378 @@    ----------\n    dinfo : date_info*\n    abstime : double\n        seconds elapsed since beginning of day described by absdate\n"
  },
  {
    "id" : "5e3ca79d-4802-4063-b31b-f7c3eaf55049",
    "prId" : 19650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19650#pullrequestreview-97412302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f481f758-f15a-4965-9814-4a8f03dd2749",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "very odd that these take pointers",
        "createdAt" : "2018-02-18T16:27:37Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "83e68650-9646-4b05-b786-5b15dce0b0b8",
        "parentId" : "f481f758-f15a-4965-9814-4a8f03dd2749",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "At this point these functions are translated as directly as possible from the C versions.  In future passes I'd like to make them more pythonic too, will need to be careful about perf.",
        "createdAt" : "2018-02-18T18:44:51Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "209a0856-e976-4e83-bbee-7a967a4cfbae",
        "parentId" : "f481f758-f15a-4965-9814-4a8f03dd2749",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that’s fine ",
        "createdAt" : "2018-02-18T18:48:20Z",
        "updatedAt" : "2018-02-21T01:35:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4e453b61957187c3b1cf9e0c81368e263774ab9",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +459,463 @@    Parameters\n    ----------\n    ordinal : int64_t\n    freq : int\n    quarter : *int"
  },
  {
    "id" : "6d370c55-aca2-4b0b-87f4-e4071659ef1f",
    "prId" : 19918,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19918#pullrequestreview-100026589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a8c6559-d8b4-43f9-a1f1-c533693292f3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doc-string",
        "createdAt" : "2018-02-28T11:24:08Z",
        "updatedAt" : "2018-03-01T15:54:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e16dd3ee6da44c8428f21bab22edc9bfe5deac1d",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +594,598 @@\ncpdef int64_t period_ordinal(int y, int m, int d, int h, int min,\n                             int s, int us, int ps, int freq):\n    \"\"\"\n    Find the ordinal representation of the given datetime components at the"
  },
  {
    "id" : "1be4f2d8-2c7d-4b4a-8a2d-6fc8ca4b20f8",
    "prId" : 20277,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20277#pullrequestreview-103339167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Periods represent time spans so it's good to note that this is the start of the period. So maybe\r\n\r\n    Return the day of the year the of the Period's start.\r\n\r\nThat's a bit wordy though. Feel free to reword if you have a better phrasing.",
        "createdAt" : "2018-03-11T11:39:09Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "efa9ed72-836c-453a-854e-6d0b8d8ae2a3",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "07ff3507-34ef-4e57-9a31-9527075ae48a",
        "body" : "sorry, but I didn't understand the meaning of the sentence `Return the day of the year the of the Period's start.`, specifically of the `period's start`",
        "createdAt" : "2018-03-11T15:39:24Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "07ff3507-34ef-4e57-9a31-9527075ae48a",
        "tags" : [
        ]
      },
      {
        "id" : "be9722ce-57c1-4174-b91e-a695b2010098",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Period is a span, so saying \"Day of the year\" is a bit ambiguous. Is it the start, end, somewhere in between?\r\n\r\nIf you have a period like `Period('2017-01-01', freq='A')\r\n\r\n```python\r\nIn [2]: pd.Period('2017-01-01', freq='A')\r\nOut[2]: Period('2017', 'A-DEC')\r\n\r\nIn [3]: pd.Period('2017-01-01', freq='A').day\r\nOut[3]: 31\r\n```\r\n\r\nI was apparently wrong about it always being the start. I guess it's related to `freq`",
        "createdAt" : "2018-03-12T15:35:13Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1a13a907-cf85-41f2-8a57-b5fdb521a4f5",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This comment will be relevant to many of the Period attributes like day, dayofyear, .. (also the ones I already merged ..). \r\nSo it would be good to be consistent in it.\r\n\r\nThe annual frequency is by default a \"year-end\" frequency, so it's indeed freq related.\r\n",
        "createdAt" : "2018-03-12T16:18:06Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "56c4597e-5ebd-4b02-b16b-49655d063f01",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "body" : "I'm sorry, I don't follow... Can you show two cases creating a period starting on the same day but with different frequencies, and how this affect `.day`, `.dayofweek`, `.dayofyear`, etc.?",
        "createdAt" : "2018-03-13T07:11:58Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "tags" : [
        ]
      },
      {
        "id" : "9473647d-5aff-4e71-b6a6-aade4a54ae20",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@dukebody small example:\r\n\r\n```\r\nIn [30]: p1 = pd.Period('2017-01-01', freq='D')\r\n\r\nIn [31]: p2 = pd.Period('2017-01-01', freq='M')\r\n\r\nIn [32]: p1\r\nOut[32]: Period('2017-01-01', 'D')\r\n\r\nIn [33]: p2\r\nOut[33]: Period('2017-01', 'M')\r\n\r\nIn [34]: p1.start_time\r\nOut[34]: Timestamp('2017-01-01 00:00:00')\r\n\r\nIn [35]: p2.start_time\r\nOut[35]: Timestamp('2017-01-01 00:00:00')\r\n\r\nIn [36]: p1.dayofyear\r\nOut[36]: 1\r\n\r\nIn [37]: p2.dayofyear\r\nOut[37]: 31\r\n```\r\n\r\nI am not really familiar with this frequency business, but you have certain frequences which are \"anchored\" at the beginning of the period, and others at the end of the period. But I don't directly see a way how to inspect this.",
        "createdAt" : "2018-03-13T08:41:26Z",
        "updatedAt" : "2018-03-13T08:48:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "64dc0492-5139-4410-9896-e160190c05e7",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "body" : "That's quite confusing. Should we open a ticket to make `.dayofyear` etc. always refer to the start time of the period? Not to the \"anchored\" time. Otherwise these functions are very unpredictable IMO and therefore don't add a lot of value.",
        "createdAt" : "2018-03-13T08:52:54Z",
        "updatedAt" : "2018-03-13T08:52:54Z",
        "lastEditedBy" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "tags" : [
        ]
      },
      {
        "id" : "155f1245-9b1e-4a8f-af6c-3f8b05f7c28b",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, I am writing one currently ;) \r\nI suppose those attributes will mainly be useful for frequencies <= 1D",
        "createdAt" : "2018-03-13T08:54:41Z",
        "updatedAt" : "2018-03-13T08:54:41Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "51ec9305-3d86-4745-9f39-4e80bea89662",
        "parentId" : "0e7883ec-bf7d-4c4f-bd2e-09de8269303c",
        "authorId" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "body" : "I'm OK with merging this PR without referring to the start or end date of the period, and then work on code to make this predictable and change all docstrings to refer to the period start date.",
        "createdAt" : "2018-03-13T08:55:59Z",
        "updatedAt" : "2018-03-13T08:55:59Z",
        "lastEditedBy" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ff8d46e22757840745990245f6d58dceb13ddda",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1257,1261 @@    def dayofyear(self):\n        \"\"\"\n        Return the day of the year.\n\n        This attribute returns the day of the year on which the particular"
  },
  {
    "id" : "a7643f41-10e2-48cf-9066-b2d2f6cb7e46",
    "prId" : 20280,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20280#pullrequestreview-103361776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86c6c441-5aaa-4c2d-b13b-423435307925",
        "parentId" : null,
        "authorId" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "body" : "If I'm not mistaken, this will return the day of the week on which the particular *starting* date for the given period occurs. I think this is important to mention, because at first I was confused thinking \"how a period of one month can have a day of the week?\".",
        "createdAt" : "2018-03-11T11:39:50Z",
        "updatedAt" : "2018-03-13T10:04:39Z",
        "lastEditedBy" : "e6a9b51d-be9b-4393-ae80-b015827ea507",
        "tags" : [
        ]
      },
      {
        "id" : "1f619f9a-f41e-44f3-b52f-5cc70e581e7a",
        "parentId" : "86c6c441-5aaa-4c2d-b13b-423435307925",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, we have this discussion in another PR as well (https://github.com/pandas-dev/pandas/pull/20277/files#r173651389). Only, it is not necessarily the starting date, it depends on the `freq`.",
        "createdAt" : "2018-03-12T18:24:11Z",
        "updatedAt" : "2018-03-13T10:04:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "69e49831-f67f-40ef-b422-52da255ead10",
        "parentId" : "86c6c441-5aaa-4c2d-b13b-423435307925",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Issue is here: https://github.com/pandas-dev/pandas/issues/20324. ",
        "createdAt" : "2018-03-13T10:04:06Z",
        "updatedAt" : "2018-03-13T10:04:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "de15589930feadfc8d25e992826876ddd853e91a",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1250,1254 @@        Return the day of the week.\n\n        This attribute returns the day of the week on which the particular\n        date for the given period occurs depending on the frequency with\n        Monday=0, Sunday=6."
  },
  {
    "id" : "e0928969-da9d-4438-b8d1-4b4bb53b683e",
    "prId" : 20413,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20413#pullrequestreview-138015053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23b9634d-89fc-425b-8437-3b2c8647e3ac",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Would it work using syntax to the effect of `weekday = property(dayofweek.fget, doc=dayofweek.__doc__)`?",
        "createdAt" : "2018-07-10T04:10:55Z",
        "updatedAt" : "2018-07-17T20:54:25Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ea504232-4b57-4a7d-9d48-829a1bfaeb64",
        "parentId" : "23b9634d-89fc-425b-8437-3b2c8647e3ac",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Thanks for the feedback. That's actually a great idea, didn't know property had an argument for the doc. Unfortunately this doesn't seem to be supported in cython:\r\n\r\n```\r\n    weekday = property(dayofweek.fget, doc=dayofweek.__doc__)\r\n                      ^\r\n------------------------------------------------------------\r\n\r\npandas/_libs/tslibs/period.pyx:1430:23: 'dayofweek' is not a constant, variable or function identifier\r\n\r\n```",
        "createdAt" : "2018-07-17T20:56:31Z",
        "updatedAt" : "2018-07-17T20:56:31Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcaaf4b114918a9cb1c5dbd0e77b06a9902838e2",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +1478,1482 @@        # Docstring is a duplicate from dayofweek. Reusing docstrings with\n        # Appender doesn't work for properties in Cython files, and setting\n        # the __doc__ attribute is also not possible.\n        return self.dayofweek\n"
  },
  {
    "id" : "8c45c201-2d55-41a0-8ebb-de4ff9676129",
    "prId" : 21314,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21314#pullrequestreview-126206245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "816dc36e-7252-4373-98ea-b51ad2abfa0d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a test that hits this explicity?",
        "createdAt" : "2018-06-05T10:55:28Z",
        "updatedAt" : "2018-06-26T22:56:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5876f82d-a1f2-4d2e-8386-1443ad275480",
        "parentId" : "816dc36e-7252-4373-98ea-b51ad2abfa0d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.  Without this we get test failures in `tests.indexes.period.test_arithmetic.TestPeriodIndexSeriesMethods` for \r\n`test_pi_ops`, `test_pi_sub_period`, `test_pi_sub_period_nat`\r\n",
        "createdAt" : "2018-06-06T01:20:12Z",
        "updatedAt" : "2018-06-26T22:56:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "efd7c752dff40c4bd49eca576c0ccf259778ea2b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1128,1132 @@                # GH#21314 PeriodIndex - Period returns an object-index\n                # of DateOffset objects, for which we cannot use __neg__\n                # directly, so we have to apply it pointwise\n                return other.__sub__(self).map(lambda x: -x)\n            else:  # pragma: no cover"
  },
  {
    "id" : "5b32eeec-528e-4237-adf2-0d24922f14c6",
    "prId" : 21878,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21878#pullrequestreview-137239696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f04db572-1b45-43ba-90a6-033451969a12",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2018-07-14T14:35:21Z",
        "updatedAt" : "2018-07-14T14:35:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "003babfa4ea299f4e46d380a2e1bf16948b44fca",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +54,58 @@from offsets import _Tick\n\nDEF PY2 = str == bytes\n\n"
  },
  {
    "id" : "9df290d1-b68b-4494-bce3-89458dd6ae07",
    "prId" : 22087,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22087#pullrequestreview-141292676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7af478bf-2b6e-4188-848c-555418b3b889",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is what fixed 22067.  year and month were getting an Int64Index.",
        "createdAt" : "2018-07-27T23:11:33Z",
        "updatedAt" : "2018-07-29T20:57:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1bff36a0dbbe8b6f23646399381d7f2c07f74a8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1922,1926 @@\ncdef int64_t _ordinal_from_fields(int year, int month, quarter, int day,\n                                  int hour, int minute, int second, freq):\n    base, mult = get_freq_code(freq)\n    if quarter is not None:"
  },
  {
    "id" : "ccb3fcc0-7bb1-4f29-9c88-675cc00a25b7",
    "prId" : 22087,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22087#pullrequestreview-141319723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27a8ab0e-f148-4332-ab65-b6c732141cb2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does quarter not need a type?",
        "createdAt" : "2018-07-28T12:52:41Z",
        "updatedAt" : "2018-07-29T20:57:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d8dfa82a-8718-47f8-8cd3-b1feda3fff7c",
        "parentId" : "27a8ab0e-f148-4332-ab65-b6c732141cb2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It can be `None`.",
        "createdAt" : "2018-07-28T15:26:08Z",
        "updatedAt" : "2018-07-29T20:57:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1bff36a0dbbe8b6f23646399381d7f2c07f74a8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1921,1925 @@\n\ncdef int64_t _ordinal_from_fields(int year, int month, quarter, int day,\n                                  int hour, int minute, int second, freq):\n    base, mult = get_freq_code(freq)"
  },
  {
    "id" : "0dd75baf-c2dd-4acc-a1c4-146285ff43b8",
    "prId" : 22235,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22235#pullrequestreview-144207643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9303921c-24e8-4157-88f2-aa58e5a0f28f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "grr how many times do we have this i the code base :)",
        "createdAt" : "2018-08-07T22:19:09Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a0e1fceb-950b-450f-8372-f51b1d7a6351",
        "parentId" : "9303921c-24e8-4157-88f2-aa58e5a0f28f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We could probably use np_datetime.cmp_scalar here, would need to cast from int to int64_t",
        "createdAt" : "2018-08-07T22:20:24Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b9abda31-2877-4a24-b124-a7e37d36b930",
        "parentId" : "9303921c-24e8-4157-88f2-aa58e5a0f28f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no it’s done - was just generally commenting",
        "createdAt" : "2018-08-07T22:23:22Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ae2c72d595613cf2f592e8d2f43400f82b61655",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +120,124 @@\ncdef int min_value(int left, int right) nogil:\n    if left < right:\n        return left\n    return right"
  },
  {
    "id" : "26668b5e-d54f-4cea-82f4-76b2f98e07eb",
    "prId" : 22235,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22235#pullrequestreview-144356841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bc53c4f-4c35-4bd8-9afe-008efef8881b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u use the enumerated here?",
        "createdAt" : "2018-08-07T22:19:39Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3378651a-4878-4a78-a3c7-6299362f21ad",
        "parentId" : "5bc53c4f-4c35-4bd8-9afe-008efef8881b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "huh?  This is just moving the existing C code into cython.",
        "createdAt" : "2018-08-08T04:54:35Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3d24c1a7-f06b-4e7f-9521-fba5efe5891c",
        "parentId" : "5bc53c4f-4c35-4bd8-9afe-008efef8881b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I get it, but the 6 is pretty opaque",
        "createdAt" : "2018-08-08T10:26:35Z",
        "updatedAt" : "2018-08-09T22:32:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ae2c72d595613cf2f592e8d2f43400f82b61655",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +131,135 @@    # row or col < 6 means frequency strictly lower than Daily, which\n    # do not use daytime_conversion_factors\n    if row < 6:\n        return 0\n    elif col < 6:"
  }
]