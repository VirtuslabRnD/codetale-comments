[
  {
    "id" : "946ddc8c-a8b9-4a18-9a28-2e6cac0f9676",
    "prId" : 25895,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25895#pullrequestreview-219966298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f458f6-fbac-4c78-bb1a-8db9a87c29be",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "was this wrong as char before?",
        "createdAt" : "2019-03-27T17:47:09Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "8054286e-7057-45a1-8eec-1ca548d3a9f5",
        "parentId" : "83f458f6-fbac-4c78-bb1a-8db9a87c29be",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "Yes, it was wrong because it was being assigned an `int` :) So a potential for an overflow or underflow if string to be parsed is longer than 127 characters.",
        "createdAt" : "2019-03-27T17:56:53Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      },
      {
        "id" : "ce6f9f31-a682-4efd-bd5f-6c569619f8be",
        "parentId" : "83f458f6-fbac-4c78-bb1a-8db9a87c29be",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Great.  Can you add a test case for the overflow/underflow?",
        "createdAt" : "2019-03-27T18:34:10Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ee33b16f-0029-4896-97f6-780b149daa9d",
        "parentId" : "83f458f6-fbac-4c78-bb1a-8db9a87c29be",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "Test is added.",
        "createdAt" : "2019-03-28T07:20:34Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      },
      {
        "id" : "c242663b-7f1b-4473-b180-76ee455ff499",
        "parentId" : "83f458f6-fbac-4c78-bb1a-8db9a87c29be",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "Link to test implementation (test fails on current master due to overflow): https://github.com/pandas-dev/pandas/pull/25895/files#diff-e295b05df69c00ad3e6d6d4d97360cccR65",
        "createdAt" : "2019-03-28T11:35:36Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5f8e2959b6a4fa797c607298aeea14337d34d57",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +73,77 @@    int i, numdigits;\n    const char *substr;\n    int sublen;\n\n    /* If year-month-day are separated by a valid separator,"
  },
  {
    "id" : "caf2699a-3746-4c58-a0c3-22f56ce4d564",
    "prId" : 30903,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30903#pullrequestreview-345578179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e009224-d895-462c-b60c-6d842ea92605",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Note that we do also have a isoformat function for time deltas defined here:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/cdffa43af34aa832105dd3787eec20ea0222af54/pandas/_libs/tslibs/timedeltas.pyx#L1097\r\n\r\nBut I think the path to get that to work in the JSON module would be way more complicated than implementing in C as we do here (and less consistent with other datetime handling). \r\n\r\nMaybe as a follow up we want to use this C function in the Timedelta class",
        "createdAt" : "2020-01-21T00:08:03Z",
        "updatedAt" : "2020-03-17T02:44:36Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef08ad6c0bb4b1ded4d6f00d21bbb77f0a6055a3",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +908,912 @@\n\nint make_iso_8601_timedelta(pandas_timedeltastruct *tds,\n                            char *outstr, size_t *outlen) {\n  *outlen = 0;"
  }
]