[
  {
    "id" : "f6851c6e-e613-4a14-989b-5070f45b75ff",
    "prId" : 18085,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18085#pullrequestreview-73988208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5f2a348-efa0-446c-96f4-19ce8b39c272",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "convert_to_timedelta64 is cut/paste",
        "createdAt" : "2017-11-03T02:39:58Z",
        "updatedAt" : "2017-11-08T05:44:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5e8fe0d04e3511aeafc16f0024538f9f2b7ef52",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +97,101 @@\n\ncpdef convert_to_timedelta64(object ts, object unit):\n    \"\"\"\n    Convert an incoming object to a timedelta64 if possible"
  },
  {
    "id" : "4d78c783-06ce-45d5-b132-0895dc09d30e",
    "prId" : 18085,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18085#pullrequestreview-73988233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7e3cae4-fd0c-4999-94ae-b53b514880e5",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "array_to_timedelta64 is cut/paste",
        "createdAt" : "2017-11-03T02:40:14Z",
        "updatedAt" : "2017-11-08T05:44:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5e8fe0d04e3511aeafc16f0024538f9f2b7ef52",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +156,160 @@\n\ncpdef array_to_timedelta64(ndarray[object] values, unit='ns', errors='raise'):\n    \"\"\"\n    Convert an ndarray to an array of timedeltas. If errors == 'coerce',"
  },
  {
    "id" : "e4383244-fba4-4782-8bd0-1c558c7ec5dc",
    "prId" : 18085,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18085#pullrequestreview-73988330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e7b8adf-a274-488a-8410-3f3768357e14",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`isinstance(other, Timedelta)` --> `PyDelta_Check(other)` effectively equivalent, should be more performant.",
        "createdAt" : "2017-11-03T02:41:45Z",
        "updatedAt" : "2017-11-08T05:44:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5e8fe0d04e3511aeafc16f0024538f9f2b7ef52",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +467,471 @@    # timedelta like or an array of timedeltalike\n    def f(self, other):\n        if hasattr(other, 'delta') and not PyDelta_Check(other):\n            # offsets.Tick\n            return op(self, other.delta)"
  },
  {
    "id" : "064c331b-9319-4f83-ae32-f6ed128a7b4d",
    "prId" : 18085,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18085#pullrequestreview-74280055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ca865c4-9e5d-47f0-a5ea-8115d44ba595",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "timedeltas should depend on nattype.pxd",
        "createdAt" : "2017-11-05T12:30:12Z",
        "updatedAt" : "2017-11-08T05:44:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5e8fe0d04e3511aeafc16f0024538f9f2b7ef52",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +30,34 @@\nfrom nattype import nat_strings, NaT\nfrom nattype cimport _checknull_with_nat\n\n# ----------------------------------------------------------------------"
  },
  {
    "id" : "78ba975c-0675-42ba-89c6-9d0138270701",
    "prId" : 18961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18961#pullrequestreview-85756814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf4cb93e-18ef-4947-92c0-6cc9c50aee56",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this what we do for division?\r\nis it not tested now?",
        "createdAt" : "2017-12-28T01:53:15Z",
        "updatedAt" : "2018-01-06T17:58:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d703f35e-e055-43e5-a1ab-3c8cb4c6971f",
        "parentId" : "cf4cb93e-18ef-4947-92c0-6cc9c50aee56",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> is this what we do for division?\r\n\r\nYes.\r\n\r\nThe status quo is... weird.\r\n\r\n```\r\n    def __floordiv__(self, other):\r\n        if hasattr(other, 'dtype'):\r\n            # work with i8\r\n            other = other.astype('m8[ns]').astype('i8')\r\n            return self.value // other\r\n\r\n        elif is_integer_object(other):\r\n            # integers only\r\n            return Timedelta(self.value // other, unit='ns')\r\n\r\n        elif not _validate_ops_compat(other):\r\n            return NotImplemented\r\n\r\n        other = Timedelta(other)\r\n        if other is NaT:\r\n            return np.nan\r\n        return self.value // other.value\r\n\r\n    def __rfloordiv__(self, other):\r\n        if hasattr(other, 'dtype'):\r\n            # work with i8\r\n            other = other.astype('m8[ns]').astype('i8')\r\n            return other // self.value\r\n\r\n        elif not _validate_ops_compat(other):\r\n            return NotImplemented\r\n\r\n        other = Timedelta(other)\r\n        if other is NaT:\r\n            return NaT\r\n        return other.value // self.value\r\n\r\n```\r\n\r\n> is it not tested now?\r\n\r\nNot that I'm aware of.",
        "createdAt" : "2017-12-28T02:08:33Z",
        "updatedAt" : "2018-01-06T17:58:34Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f101378da9f156f8d563d0566d087a9bdd71dc14",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1086,1090 @@        other = Timedelta(other)\n        if other is NaT:\n            return np.nan\n        return other.value // self.value\n"
  },
  {
    "id" : "9c3dd5ad-dabf-45da-aaec-45e4548cd1a1",
    "prId" : 19065,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19065#pullrequestreview-86799814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18d0205e-82f0-4c72-90d3-7c0405d8c77d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you should just raise here",
        "createdAt" : "2018-01-05T00:25:49Z",
        "updatedAt" : "2018-01-05T01:32:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a40a8252-6974-4ad2-8d4e-c32bcda6856d",
        "parentId" : "18d0205e-82f0-4c72-90d3-7c0405d8c77d",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Not an expert on Cython but pytest was failing when raising the exception inside of this function. I believe it is attributable to the int64_t function declaration. I could remove that type and raising the exception directly inside the function would work. Otherwise, I was getting the below output during testing.\r\n\r\n```\r\n-------------------------------------------------------------- Captured stderr call --------------------------------------------------------------\r\nAttributeError: 'NoneType' object has no attribute 'groupdict'\r\nException ignored in: 'pandas._libs.tslibs.timedeltas.parse_iso_format_string'\r\nAttributeError: 'NoneType' object has no attribute 'groupdict'\r\n```",
        "createdAt" : "2018-01-05T00:33:12Z",
        "updatedAt" : "2018-01-05T01:32:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "9a9d771d-b8b6-4500-b4e7-9a86b4cb05db",
        "parentId" : "18d0205e-82f0-4c72-90d3-7c0405d8c77d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh, you just need to add:\r\n ``except? -1:`` to the declaration; this tells cython that you may raise in a ``cdef`` function so it should check. you don't need to explicity return -1 though.",
        "createdAt" : "2018-01-05T00:36:46Z",
        "updatedAt" : "2018-01-05T01:32:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e7bcd959-b1c6-464c-82fa-da10082bbbae",
        "parentId" : "18d0205e-82f0-4c72-90d3-7c0405d8c77d",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Ah OK thanks. Will make changes and re-push",
        "createdAt" : "2018-01-05T00:38:27Z",
        "updatedAt" : "2018-01-05T01:32:47Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bab9dab85314918d01019f59944e7f278222a28",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +552,556 @@            ns += timedelta_from_spec(v, '0', k)\n\n    else:\n        raise ValueError(\"Invalid ISO 8601 Duration format - \"\n                         \"{}\".format(iso_fmt))"
  },
  {
    "id" : "96f47f61-8e6c-421f-83df-8ea01e065a2c",
    "prId" : 19732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19732#pullrequestreview-97410272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cf81767-8545-4f9a-8ffa-89f1391a1ef8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you might be able to do something like this\r\n\r\n``round(frac * 1000, p - 3) // 1000`` (for p >- 3) but haven't looked really closely.",
        "createdAt" : "2018-02-18T17:37:58Z",
        "updatedAt" : "2018-05-19T23:42:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ba45b47110f4ebbd94c0deaf44b8b34c0793504",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +234,238 @@    frac = ts - base\n    if p:\n        frac = round(frac, p)\n    return <int64_t> (base * m) + <int64_t> (frac * m)\n"
  }
]