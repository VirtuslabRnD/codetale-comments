[
  {
    "id" : "ebff4b5f-ad54-4b40-8ed5-2838e7eaf8f6",
    "prId" : 18164,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18164#pullrequestreview-99540684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c08fdd78-8a2b-4c7c-af9c-6bb3355f6867",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u have this call day_name",
        "createdAt" : "2018-02-27T02:31:33Z",
        "updatedAt" : "2018-03-02T03:27:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d97f43b2a16351aeeaf4e993f7014b5e803e2b4d",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +767,771 @@        warnings.warn(\"`weekday_name` is deprecated and will be removed in a \"\n                      \"future version. Use `day_name` instead\",\n                      DeprecationWarning)\n        return self.day_name()\n"
  },
  {
    "id" : "037da9ef-82c6-4937-ac6f-6fd4d5aa0ce9",
    "prId" : 18369,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18369#pullrequestreview-77649860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7b050c3-24b6-4d1c-b480-f46137457c7c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can cdef these (TODO)",
        "createdAt" : "2017-11-19T17:21:53Z",
        "updatedAt" : "2017-11-20T15:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6e4cf4a2-9813-4716-8a93-7d48b3bbf5ed",
        "parentId" : "e7b050c3-24b6-4d1c-b480-f46137457c7c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, in fact a bunch of stuff can be moved up to `_Timestamp`.",
        "createdAt" : "2017-11-19T17:55:08Z",
        "updatedAt" : "2017-11-20T15:01:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c00d36b03d06894346102ebba0c77725d94798e2",
    "line" : 950,
    "diffHunk" : "@@ -1,1 +948,952 @@        0 Julian date is noon January 1, 4713 BC.\n        \"\"\"\n        year = self.year\n        month = self.month\n        day = self.day"
  },
  {
    "id" : "1b6358fb-35b6-44c7-bcfe-c35da687f017",
    "prId" : 18539,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18539#pullrequestreview-79537325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4bf1977-493f-4e70-8e81-96f840cb1b31",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so why is this in _Timestamp again (as opposed to Timestamp); this is why its cpdef, why not just cdef?",
        "createdAt" : "2017-11-28T11:09:39Z",
        "updatedAt" : "2017-11-28T15:30:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "17a359a6-fef5-4752-8f04-620954d6eafc",
        "parentId" : "c4bf1977-493f-4e70-8e81-96f840cb1b31",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not sure why its in _Timestamp instead of Timestamp (though my understanding is putting it in _Timestamp is slightly more performant and smaller memory footprint); it was that way before I got here.\r\n\r\nIt is `cpdef` and not `cdef` because if it were cdef then calling it from Timestamp would be an AttributeError.  That's why #18446 moved a bunch of properties up to _Timestamp after making it cdef.",
        "createdAt" : "2017-11-28T15:12:18Z",
        "updatedAt" : "2017-11-28T15:30:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9baeb6db0bc459e3431fd42ff16884bceaf61ff9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +305,309 @@        return int(out[0])\n\n    cpdef bint _get_start_end_field(self, str field):\n        cdef:\n            int64_t val"
  },
  {
    "id" : "0d727fb9-51ad-4f74-8672-4d001ee8db80",
    "prId" : 18811,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18811#pullrequestreview-84558575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d04bf8-96a6-48c3-881b-f17949fde71b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we use this nomenclature above? if not can you reconcile",
        "createdAt" : "2017-12-19T11:35:31Z",
        "updatedAt" : "2017-12-19T19:12:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "039fc5cb-7713-42a7-85a3-04a8a609ac13",
        "parentId" : "20d04bf8-96a6-48c3-881b-f17949fde71b",
        "authorId" : "ad641c5e-8c19-4350-a77b-ef5d980aedc8",
        "body" : "yes in the above the doc says:\r\n```\r\n    Notes\r\n    -----\r\n    There are essentially three calling conventions for the constructor. The\r\n    primary form accepts four parameters. They can be passed by position or\r\n    keyword.\r\n\r\n    The other two forms mimic the parameters from ``datetime.datetime``. They\r\n    can be passed by either position or keyword, but not both mixed together.\r\n```",
        "createdAt" : "2017-12-19T19:11:32Z",
        "updatedAt" : "2017-12-19T19:12:09Z",
        "lastEditedBy" : "ad641c5e-8c19-4350-a77b-ef5d980aedc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcdf2abed53fbebe7bd0e3a4c1136e5f16a534ea",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +408,412 @@    Examples\n    --------\n    Using the primary calling convention:\n\n    This converts a datetime-like string"
  },
  {
    "id" : "e236f653-99d4-4e0b-9c57-e3d4d02fbaf4",
    "prId" : 19889,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19889#pullrequestreview-99147901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee7485d7-82b3-4ef8-9844-1d587b3cd7fe",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "What if we get here with a string ts_input with conflicting nanos? I think it might be better to accept nanos _only_ in combination with other integer args/kwargs.",
        "createdAt" : "2018-02-25T04:48:05Z",
        "updatedAt" : "2018-02-28T04:56:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "57e0721a-7158-4926-9106-1088a83cce71",
        "parentId" : "ee7485d7-82b3-4ef8-9844-1d587b3cd7fe",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Currently (and in this PR), the Timestamp constructor will just parse the string and ignore all additional passed kwargs related to the values of each datetime element:\r\n\r\n```\r\nIn [7]: Timestamp('2010-10-10 12:59:59.999999999', hour=0, nanosecond=16)\r\nOut[7]: Timestamp('2010-10-10 12:59:59.999999999')\r\n``` \r\n\r\nThe nanosecond kwarg will only be used if a datetime.datetime is passed or other datetime element kwargs are passed. As mentioned in my other comment, we might also want to raise in the situation above. ",
        "createdAt" : "2018-02-25T05:35:34Z",
        "updatedAt" : "2018-02-28T04:56:58Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "9577c5c2-2f9c-4151-a5a5-7ec305312b21",
        "parentId" : "ee7485d7-82b3-4ef8-9844-1d587b3cd7fe",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I agree here, the nanoscecond kw must only be used when kwargs are passed",
        "createdAt" : "2018-02-25T16:27:28Z",
        "updatedAt" : "2018-02-28T04:56:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c81ec573e5fc699e3cdb9161bec7513b17dd54c9",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +623,627 @@            tz, tzinfo = tzinfo, None\n\n        ts = convert_to_tsobject(ts_input, tz, unit, 0, 0, nanosecond or 0)\n\n        if ts.value == NPY_NAT:"
  },
  {
    "id" : "1aa9c9cc-01c4-4a36-9271-78ac15500df8",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-156335200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a67c72e0-64a5-4dc7-80db-ceb32320c704",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, this is now a bit confusing, e.g. there is overlap between errors and nonexistent. Is it possible to use errors instead here? (and not add a new keyword)?",
        "createdAt" : "2018-09-18T12:16:32Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +980,984 @@            - 'raise' will raise an AmbiguousTimeError for an ambiguous time\n\n        nonexistent : 'shift', 'NaT', default 'raise'\n            A nonexistent time does not exist in a particular timezone\n            where clocks moved forward due to DST."
  },
  {
    "id" : "076356ff-4d6e-4e1a-a9a7-2a90124289db",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-160129060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c2e124-b082-442d-8628-afe5456d2816",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is a top-level yes? (e.g. user callable)",
        "createdAt" : "2018-09-30T14:03:25Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d688a9dc-f775-45af-abfe-8ad1124255d1",
        "parentId" : "f5c2e124-b082-442d-8628-afe5456d2816",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Correct. Users still have access to errors in `Timestamp.tz_localize`",
        "createdAt" : "2018-09-30T21:21:29Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +992,996 @@            .. versionadded:: 0.24.0\n\n        errors : 'raise', 'coerce', default None\n            - 'raise' will raise a NonExistentTimeError if a timestamp is not\n               valid in the specified timezone (e.g. due to a transition from"
  },
  {
    "id" : "8b805ab5-14cd-4ece-b8a4-40918a92035a",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-161989084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "883e730a-c14a-44ef-933f-1f1969027017",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you explain here how to replace the existing errors keyword with nonexistent?\r\n\r\n(and the same for the other docstring where this shows up)",
        "createdAt" : "2018-10-05T11:16:30Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +999,1003 @@              into the specified timezone. Use ``nonexistent='NaT'`` instead.\n\n              .. deprecated:: 0.24.0\n\n        Returns"
  }
]