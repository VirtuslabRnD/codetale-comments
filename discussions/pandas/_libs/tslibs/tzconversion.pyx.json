[
  {
    "id" : "ff28b11b-dde9-4dcd-8572-8118be34d160",
    "prId" : 31563,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31563#pullrequestreview-360944856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d6e44fa-518b-440a-85b3-292b46c5d8af",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how is this different than the function below?",
        "createdAt" : "2020-02-19T00:20:59Z",
        "updatedAt" : "2020-02-26T06:22:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b238bc60-75ec-4ba1-9d53-14ce76192ad4",
        "parentId" : "9d6e44fa-518b-440a-85b3-292b46c5d8af",
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "This one takes `to_utc` and passes it through, and it doesn't return the fold. Though I prefer my original suggestion, which is to remove the `to_utc` from the underlying function and do\r\n\r\n```python\r\nif to_utc:\r\n    return val + delta\r\nelse:\r\n    return val -delta\r\n```",
        "createdAt" : "2020-02-19T00:29:13Z",
        "updatedAt" : "2020-02-26T06:22:56Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      },
      {
        "id" : "679ffb7b-fb86-4a47-b11d-bcafe9b6298d",
        "parentId" : "9d6e44fa-518b-440a-85b3-292b46c5d8af",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah i think i like @pganssle suggestion here\r\n\r\n2 very similar functions are very tricky to grok",
        "createdAt" : "2020-02-19T00:50:53Z",
        "updatedAt" : "2020-02-26T06:22:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "37a02d04-6e21-45a7-808b-62d7d86ebe99",
        "parentId" : "9d6e44fa-518b-440a-85b3-292b46c5d8af",
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "Done.\r\n\r\nWe still need to pass `to_utc` to `_tzlocal_get_offset_components` because of this:\r\n```python\r\n    if not to_utc:\r\n        dt = dt.replace(tzinfo=tzutc())\r\n        dt = dt.astimezone(tz)\r\n```\r\nI wanted `_tz_convert_tzlocal_utc` and `_tz_convert_tzlocal_fromutc` to be alternative wrappers for `_tzlocal_get_offset_components`, but it's not important enough to debate.",
        "createdAt" : "2020-02-19T09:13:51Z",
        "updatedAt" : "2020-02-26T06:22:56Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd02318aca686126c6c96c1ab3cefda4fbe4b128",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +490,494 @@\n\ncdef int64_t _tz_convert_tzlocal_utc(int64_t val, tzinfo tz, bint to_utc=True):\n    \"\"\"\n    Convert the i8 representation of a datetime from a tzlocal timezone to"
  }
]