[
  {
    "id" : "aa895ce2-fd2b-4763-86e7-a5a46895bf7b",
    "prId" : 40433,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40433#pullrequestreview-612340088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "parentId" : null,
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "how does `list[str]` work in Python < 3.9? (asking because I don't know)",
        "createdAt" : "2021-03-14T20:41:37Z",
        "updatedAt" : "2021-03-14T20:41:37Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "73ba1f78-e731-4065-84d6-cee6f98141f5",
        "parentId" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i decided to try this out bc i think ive seen @simonjayhawkins using this pattern using it recently",
        "createdAt" : "2021-03-14T20:45:14Z",
        "updatedAt" : "2021-03-14T20:45:14Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "cfc7b901-8699-46c0-85c7-45ba68489a54",
        "parentId" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> how does `list[str]` work in Python < 3.9? (asking because I don't know)\r\n\r\npyi files don't go through the Python interpreter. so have the advantage of being able to use the latest typing features understood by mypy/pyre/pyright/pytype. `list[str]` is PEP 585 compliant.\r\n\r\n---\r\n\r\nside note: we are in the process of attempting to inline the microsoft pyright stubs. inline types not only need to satisfy the python interpreter supported (i.e. python 3.7 **without** typing extensions) but the code in the annotated functions also needs to be consistent with the in-line function annotations.\r\n\r\nso (hopefully without sounding too negative) I imagine that not only will that take a while but may also not even be possible in some cases.\r\n\r\nFor type checking user code against the public api, I expect using stubs (eg. bundled with pyright or 3rd party such as https://github.com/predictive-analytics-lab/data-science-types (development ceased 16 Feb 2021)) will be the better option for the foreseeable future.\r\n\r\nHowever, internal consistency/robustness is achieved though adding inline types and checking with mypy (which has excellent features that support the gradual typing process.) \r\n\r\n---\r\n\r\nwe do yet have a good way of generating type stubs from cython files, so in order to have types available for the compiled code, we probably need to manually curate these. So being able to use the pyright stubs here would be beneficial. \r\n\r\n@jbrockmendel Are these stubs manually curated or forked from pyright? I believe @Dr-Irv is coordinating between pandas and pyright and may have some input on this.",
        "createdAt" : "2021-03-15T12:36:11Z",
        "updatedAt" : "2021-03-15T12:36:11Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "cd816bd8-034a-4641-a10b-005bda515e66",
        "parentId" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> Are these stubs manually curated or forked from pyright?\r\n\r\nManually curated",
        "createdAt" : "2021-03-15T14:14:17Z",
        "updatedAt" : "2021-03-15T14:14:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "393eafe1-f135-45b0-bab7-d22265fe6a4e",
        "parentId" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "I think doing this is OK, as adding stubs may reveal problems in the python code that may need to be fixed. So doing this before pulling in the pyright stubs could be advantageous and make the migration smoother.",
        "createdAt" : "2021-03-15T14:20:11Z",
        "updatedAt" : "2021-03-15T14:20:11Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "763fc0d2-d1f9-43e9-8283-2ca018512c77",
        "parentId" : "6242de5b-a0c4-494e-8b5f-4029cebb0e35",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "\r\n> @jbrockmendel Are these stubs manually curated or forked from pyright? I believe @Dr-Irv is coordinating between pandas and pyright and may have some input on this.\r\n\r\nI wouldn't say I'm \"coordinating\", but the work that has been done by the Microsoft team provides a good starting point (and possible reference) for pandas type stubs.  See https://github.com/microsoft/python-type-stubs/tree/main/pandas\r\n",
        "createdAt" : "2021-03-15T15:38:04Z",
        "updatedAt" : "2021-03-15T15:38:05Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "229a13a1b16d876b447d031eb5a862d6670e1c65",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@\nDAYS: list[str]\nMONTH_ALIASES: dict[int, str]\nMONTH_NUMBERS: dict[str, int]"
  }
]