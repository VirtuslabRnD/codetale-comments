[
  {
    "id" : "f6793a0e-a98a-4cb1-ae20-f7db6fbda143",
    "prId" : 17805,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17805#pullrequestreview-72674555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5645687-da2e-4427-a2fe-4647e20c5f0f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "void?",
        "createdAt" : "2017-10-28T15:36:43Z",
        "updatedAt" : "2017-10-29T20:27:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e017a52984831c0312344a20b1ad31f706612b80",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\n\ncdef inline check_dts_bounds(pandas_datetimestruct *dts):\n    \"\"\"Raises OutOfBoundsDatetime if the given date is outside the range that\n    can be represented by nanosecond-resolution 64-bit integers.\"\"\""
  },
  {
    "id" : "101288ad-9181-427d-8c3a-9c6f6c1a5aed",
    "prId" : 18059,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18059#pullrequestreview-73973961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25fc6866-76e8-4a7b-8953-58c8f1d0c48a",
        "parentId" : null,
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "Can you make the docstrings more descriptive?  Something like `\"returns int64 value underlying numpy datetime scalar Python object\"`",
        "createdAt" : "2017-11-02T23:19:39Z",
        "updatedAt" : "2017-11-05T17:56:57Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      },
      {
        "id" : "674c06fe-47ac-4b22-bf00-13a1f58d568a",
        "parentId" : "25fc6866-76e8-4a7b-8953-58c8f1d0c48a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Good idea, will change.",
        "createdAt" : "2017-11-03T00:01:38Z",
        "updatedAt" : "2017-11-05T17:56:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13b85d88319b86a5461708a498c2083715163f32",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@\ncdef inline npy_datetime get_datetime64_value(object obj) nogil:\n    \"\"\"\n    returns the int64 value underlying scalar numpy datetime64 object\n"
  },
  {
    "id" : "d5322c79-918f-4e1e-b6ea-5174f0defbae",
    "prId" : 18654,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18654#pullrequestreview-81720410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c62ef73b-7de6-4771-ac78-74eed54e04bf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "when you do change this, pls add doc-string (and same below)",
        "createdAt" : "2017-12-07T01:04:32Z",
        "updatedAt" : "2017-12-07T01:04:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "64fcedaf6c4477adb7c03e63566b9817319ae2a0",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +172,176 @@cdef inline int _string_to_dts(object val, pandas_datetimestruct* dts,\n                               int* out_local, int* out_tzoffset) except? -1:\n    cdef:\n        int result\n        char *tmp"
  },
  {
    "id" : "9750cd22-4609-4b6b-b101-c95bcde58d1f",
    "prId" : 18654,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18654#pullrequestreview-81720581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b718b8c7-d4f2-47f5-a304-b44ba3af829c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "have to investigate this, it is pretty weird",
        "createdAt" : "2017-12-07T01:05:41Z",
        "updatedAt" : "2017-12-07T01:05:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "64fcedaf6c4477adb7c03e63566b9817319ae2a0",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +190,194 @@                                pandas_datetimestruct* dts,\n                                int* out_local, int* out_tzoffset) except? -1:\n    # Note: without this \"extra layer\" between _string_to_dts\n    # and parse_iso_8601_datetime, calling _string_to_dts raises\n    # `SystemError: <class 'str'> returned a result with an error set`"
  },
  {
    "id" : "f92c3c12-7ba4-4f5a-a8b4-d7fe0817e225",
    "prId" : 21962,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21962#pullrequestreview-138331970",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae8efb48-6bad-48fa-9770-dc1623707806",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add an explicit check?",
        "createdAt" : "2018-07-18T10:29:24Z",
        "updatedAt" : "2018-07-18T16:16:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7afa964d-0b7a-46e3-b70a-686bba3a4540",
        "parentId" : "ae8efb48-6bad-48fa-9770-dc1623707806",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is called by some very perf-sensitive code, all uses of which already handle this carefully.  I think its sufficiently internal to be OK without.",
        "createdAt" : "2018-07-18T16:16:13Z",
        "updatedAt" : "2018-07-18T16:16:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "69a84595ba231158b553a3848208586958689844",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +148,152 @@cdef inline int64_t pydatetime_to_dt64(datetime val,\n                                       npy_datetimestruct *dts):\n    \"\"\"\n    Note we are assuming that the datetime object is timezone-naive.\n    \"\"\""
  },
  {
    "id" : "30e38c4a-50e9-41de-bdd7-992afaa94f5d",
    "prId" : 25895,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25895#pullrequestreview-219637400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2240d659-892d-4025-bc06-5c80ccc525ef",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "just for my edification, what do we gain from this?",
        "createdAt" : "2019-03-27T17:44:18Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "091fb232-080d-4eba-a9b9-131e8d95330a",
        "parentId" : "2240d659-892d-4025-bc06-5c80ccc525ef",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "This removes some warnings, and it is also more correct - ideally any parameter that function doesn't change should be passed as `const` so:\r\n1. compiler could generate more optimal code, and\r\n2. it would be more apparent from function signature that the function won't change this parameter :)",
        "createdAt" : "2019-03-27T17:54:59Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      },
      {
        "id" : "fbf69e12-0cac-4738-a74c-a80d40dae70b",
        "parentId" : "2240d659-892d-4025-bc06-5c80ccc525ef",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "Also, when I try to transfer `const char*` in this function without `const` for `str` variable then in complilation stage appeared: \r\n`error: invalid conversion from ‘const char*’ to ‘char*’ [-fpermissive]`",
        "createdAt" : "2019-03-27T18:04:44Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5f8e2959b6a4fa797c607298aeea14337d34d57",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +34,38 @@\ncdef extern from \"src/datetime/np_datetime_strings.h\":\n    int parse_iso_8601_datetime(const char *str, int len,\n                                npy_datetimestruct *out,\n                                int *out_local, int *out_tzoffset)"
  },
  {
    "id" : "73bee4c7-8474-4e0b-a588-af96184831fc",
    "prId" : 25895,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25895#pullrequestreview-220379429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93658a5a-27e3-4b00-a496-06127db7e423",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is the perf improvement from this simplification or somewhere else?",
        "createdAt" : "2019-03-28T22:39:19Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "843a693a-a3ea-4ad0-9f08-885364e989c4",
        "parentId" : "93658a5a-27e3-4b00-a496-06127db7e423",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "Yes, most of the perf boost is that `get_c_string_buf_and_size` doesn't do extra memory allocation.\r\nSee https://github.com/pandas-dev/pandas/pull/25754#discussion_r268640802",
        "createdAt" : "2019-03-29T05:28:17Z",
        "updatedAt" : "2019-03-29T05:54:53Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5f8e2959b6a4fa797c607298aeea14337d34d57",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +180,184 @@    buf = get_c_string_buf_and_size(val, &length)\n    return parse_iso_8601_datetime(buf, length,\n                                   dts, out_local, out_tzoffset)"
  }
]