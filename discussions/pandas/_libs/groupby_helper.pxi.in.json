[
  {
    "id" : "d95e0508-84cb-4b0b-ba86-4c4106b966d2",
    "prId" : 18876,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18876#pullrequestreview-85150061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff566bf3-1a86-4dee-bdc5-4bf7ce4c3e92",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this work for ``min_count==0``?",
        "createdAt" : "2017-12-21T18:38:27Z",
        "updatedAt" : "2017-12-28T12:36:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6f6b0c99-5a86-40e3-84b5-7bc86755e34d",
        "parentId" : "ff566bf3-1a86-4dee-bdc5-4bf7ce4c3e92",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yeah, `sumx`  starts out as `zeros`, so we just have to avoid setting it to NaN. Same for `prod`, but with ones.",
        "createdAt" : "2017-12-21T18:49:41Z",
        "updatedAt" : "2017-12-28T12:36:26Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e954f84d5e5b2eae643472031c7890da3d98814",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +90,94 @@        for i in range(ncounts):\n            for j in range(K):\n                if nobs[i, j] < min_count:\n                    out[i, j] = NAN\n                else:"
  },
  {
    "id" : "b49c3865-da88-4fa7-b931-f669b8685eef",
    "prId" : 19481,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19481#pullrequestreview-95401920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42f6daf2-d00f-4d31-862b-e0299f1253c2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "any comments on the impl would be helpful (to future readers)",
        "createdAt" : "2018-02-08T01:23:31Z",
        "updatedAt" : "2018-02-09T18:37:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d01bfa0a-4dd0-463c-bed3-7362ce0bf27f",
        "parentId" : "42f6daf2-d00f-4d31-862b-e0299f1253c2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "nice comments!",
        "createdAt" : "2018-02-09T12:19:20Z",
        "updatedAt" : "2018-02-09T18:37:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4578d78e5d4feaf6a8a3caac51acf7d2ebc112",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +573,577 @@                        if ascending:\n                            out[_as[j], 0] = j + 1 - grp_start\n                        else:\n                            out[_as[j], 0] = 2 * i - j - dups + 2 - grp_start\n                elif tiebreak == TIEBREAK_DENSE:"
  }
]