[
  {
    "id" : "a49991a5-5841-4bc1-b6d8-227a4bacb4ce",
    "prId" : 18825,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18825#pullrequestreview-84528389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b6ec4d-1100-44b7-9d60-ac543e81ef98",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment similiar to in algos_take for using the memory view.\r\n\r\n",
        "createdAt" : "2017-12-19T11:19:02Z",
        "updatedAt" : "2017-12-23T20:56:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bff80cea-60f0-4abf-99e2-98fbbca10ee5",
        "parentId" : "77b6ec4d-1100-44b7-9d60-ac543e81ef98",
        "authorId" : "e602fac6-dffe-49d8-a029-57bc9f68e4c3",
        "body" : "Done. I also noticed that the indenting was a tad off so I re-indented it to be 4 spaces.",
        "createdAt" : "2017-12-19T17:28:50Z",
        "updatedAt" : "2017-12-23T20:56:18Z",
        "lastEditedBy" : "e602fac6-dffe-49d8-a029-57bc9f68e4c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddb5247d73345af80f5723d6f3865409f12b3877",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +256,260 @@          ('Int64', 'int64', 'val == iNaT', False)]\n\ndef get_dispatch(dtypes):\n  for (name, dtype, null_condition, float_group) in dtypes:\n    unique_template = \"\"\"\\"
  },
  {
    "id" : "eccfb298-eca0-4d07-a77c-3aa480547a72",
    "prId" : 20473,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20473#pullrequestreview-106870759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "702fa3bf-feda-47ed-97ce-55cc7c866b9b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "when is float_group used? seems superfluous?",
        "createdAt" : "2018-03-25T13:45:18Z",
        "updatedAt" : "2018-03-26T12:15:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1203ec0a-ae39-465c-8135-a9fc5e14fe2e",
        "parentId" : "702fa3bf-feda-47ed-97ce-55cc7c866b9b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Seems to be used in `unique`.",
        "createdAt" : "2018-03-26T11:56:44Z",
        "updatedAt" : "2018-03-26T12:15:20Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "465d458573c99ee218299c2713c2e5abd305907c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +251,255 @@{{py:\n\n# name, dtype, float_group, default_na_value\ndtypes = [('Float64', 'float64', True, 'nan'),\n          ('UInt64', 'uint64', False, 0),"
  },
  {
    "id" : "71b30120-242a-4f02-ac46-2d643b43a3c0",
    "prId" : 21688,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21688#pullrequestreview-133435286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44ce4216-f1a6-43db-9267-0269db78fceb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have multiple lookup routines for different drapes - is there a reason to not change them all?\r\n\r\nwhy just lookup? we have many routines which couldnin theory benefit from this",
        "createdAt" : "2018-06-30T19:46:05Z",
        "updatedAt" : "2018-07-07T15:52:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "76e377bd-a038-4f74-a529-c97c6eb7ca9a",
        "parentId" : "44ce4216-f1a6-43db-9267-0269db78fceb",
        "authorId" : "6bfa1922-c427-4971-9e7f-6e6257a1d5bb",
        "body" : "I can make a pass over `hashtable_class_helper.pxi.in` and add `const` specifiers where applicable.",
        "createdAt" : "2018-06-30T20:15:17Z",
        "updatedAt" : "2018-07-07T15:52:23Z",
        "lastEditedBy" : "6bfa1922-c427-4971-9e7f-6e6257a1d5bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4cb62960808931e209ce7b8392221d08c24d234",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +334,338 @@\n    @cython.boundscheck(False)\n    def lookup(self, const {{dtype}}_t[:] values):\n        cdef:\n            Py_ssize_t i, n = len(values)"
  },
  {
    "id" : "7b87bda0-32be-4cc8-aace-8481e683c7af",
    "prId" : 22805,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22805#pullrequestreview-184724267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34e69aa0-6995-4efd-b8c3-2f4851d84f13",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can type the size_hint as a uint_t I think to avoid this problem",
        "createdAt" : "2018-09-23T12:21:19Z",
        "updatedAt" : "2019-01-14T20:09:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f8660463-05e9-466a-bb2b-652ca3aa843d",
        "parentId" : "34e69aa0-6995-4efd-b8c3-2f4851d84f13",
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "It's getting typed as a `uint` on the next line - we actually want it untyped here so it could accept arbitrarily large values, just needs capped before before being converted to the c-type (what was causing the original error)",
        "createdAt" : "2018-12-13T15:40:53Z",
        "updatedAt" : "2019-01-14T20:09:39Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3cbb2bf64016f4cd8a719f10dfd1e1459e4f690",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +266,270 @@        self.table = kh_init_{{dtype}}()\n        if size_hint is not None:\n            size_hint = min(size_hint, _SIZE_HINT_LIMIT)\n            kh_resize_{{dtype}}(self.table, size_hint)\n"
  }
]