[
  {
    "id" : "5b095c36-93da-4c98-807c-eec17a019272",
    "prId" : 21992,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21992#pullrequestreview-140246016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5302431-f9ab-41f8-9f12-7df228a94635",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "as an aside I think we usually call this diff elsewhere, so maybe can share code, and might thing about renaming (future PR to think about)",
        "createdAt" : "2018-07-25T10:10:11Z",
        "updatedAt" : "2018-07-25T10:11:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebb6d5283d635d7ca93aff975ffda2d34ead7362",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +77,81 @@\n\ncpdef ndarray[int64_t, ndim=1] unique_deltas(ndarray[int64_t] arr):\n    \"\"\"\n    Efficiently find the unique first-differences of the given array."
  },
  {
    "id" : "a5db67cb-ceb3-443f-9e31-c008891e6448",
    "prId" : 22452,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22452#pullrequestreview-148288509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d34a2e5-99b3-448a-9cf0-e0d29abf4839",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Do we need to explicitly use indexing here or is calling also an option? The latter may help reduce the amount of code required (maybe worth exploring in separate PR):\r\n\r\nhttp://docs.cython.org/en/latest/src/userguide/fusedtypes.html#calling",
        "createdAt" : "2018-08-21T23:29:11Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "ead2cf40-ff80-4c71-b7a0-0b6da97bfb78",
        "parentId" : "7d34a2e5-99b3-448a-9cf0-e0d29abf4839",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> Do we need to explicitly use indexing here or is calling also an option?\r\n\r\nI think you're right that the calling can be simplified, but this way keeps the changes self-contained.",
        "createdAt" : "2018-08-21T23:31:26Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "237931bf-750a-41e7-95a5-09ed251a8675",
        "parentId" : "7d34a2e5-99b3-448a-9cf0-e0d29abf4839",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Yea for sure - not saying do here but food for thought in subsequent changes or new developments.",
        "createdAt" : "2018-08-21T23:32:49Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e25c39a37704bcf5ddfec84908b170d64444baa5",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +455,459 @@\n\npad_float64 = pad[\"float64_t\"]\npad_float32 = pad[\"float32_t\"]\npad_object = pad[\"object\"]"
  },
  {
    "id" : "9744a673-8dc7-4ea3-a1f7-4984170bb662",
    "prId" : 22452,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22452#pullrequestreview-232007733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94025337-08d9-415f-9494-36caf554acc5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Since this is just copy / paste of the below block, what do you think about creating a blank context manager that doesn't really do anything. \r\n\r\n```python\r\nif algos_t is not object:\r\n    cm = nogil\r\nelse:\r\n    cm = dummy_context\r\n```\r\n\r\nAnd then either implementation can share the context manager:\r\n\r\n```python\r\nwith cm:\r\n    ...\r\n```\r\n\r\nWould reduce the copy / paste and make it so we don't miss updates to say one part of the fused type in the future that makes for hard-to-find implementation differences. Could be generalizable in a few instances in Cython.",
        "createdAt" : "2018-08-21T23:45:34Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f993b0e8-8ca0-4be2-aa2d-e727e70a0678",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "That would be great if it can be made to work; a lot of the tempita code takes this form.\r\n\r\nI don't think cython treats `with nogil` as an actual contextmanager.  @scoder any thoughts on this?",
        "createdAt" : "2018-08-22T00:11:34Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "779d24cc-3606-4c53-b7e5-d88363067493",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I agree, making this simpler would motivate this PR",
        "createdAt" : "2018-08-22T10:12:10Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "26cbe881-857c-41fc-ab42-a745483939be",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "5e54ce7a-48bf-45fc-9fea-7cf39179e458",
        "body" : "Well, `nogil` is really special in Cython and not an actual context manager. I could imagine something like `with nogil.only_if(some_bool_condition)`, which would then duplicate the with-block to generate a True and False version of it and select the right one at runtime. Or even at compile time, if the condition is a compile time constant, such as a type check on fused types (release GIL for native C types, keep for object types). The latter would definitely be possible, whereas duplicating the code block could be messy and is definitely more work.\r\n\r\nNote that `nogil` is also a decorator, so `nogil(something)` is already taken.",
        "createdAt" : "2018-08-23T15:17:03Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e54ce7a-48bf-45fc-9fea-7cf39179e458",
        "tags" : [
        ]
      },
      {
        "id" : "d88d6fe6-c755-4caa-b243-fe46a610f33c",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "@scoder thanks for the info! What would be the next steps to get the functionality you've described? Compile-time evaluation would certainly be ideal",
        "createdAt" : "2018-08-24T00:06:45Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b4832959-03a2-4834-b0a6-ca7409bfad30",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "5e54ce7a-48bf-45fc-9fea-7cf39179e458",
        "body" : "1) Read and discuss https://github.com/cython/cython/issues/2579\r\n2) find someone to implement it\r\n\r\n:)",
        "createdAt" : "2018-08-25T09:49:41Z",
        "updatedAt" : "2018-09-18T02:12:46Z",
        "lastEditedBy" : "5e54ce7a-48bf-45fc-9fea-7cf39179e458",
        "tags" : [
        ]
      },
      {
        "id" : "3cb180c5-38fb-40c8-bb1c-9773ce7f9036",
        "parentId" : "94025337-08d9-415f-9494-36caf554acc5",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Looks like this will be released in Cython 3.0 - could have a few uses in our codebase for sure. Thanks!",
        "createdAt" : "2019-04-30T06:24:01Z",
        "updatedAt" : "2019-04-30T06:24:01Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e25c39a37704bcf5ddfec84908b170d64444baa5",
    "line" : 458,
    "diffHunk" : "@@ -1,1 +808,812 @@\n    if algos_t is not object:\n        with nogil:\n            prev = arr[0]\n            for i in range(1, n):"
  },
  {
    "id" : "43d875f6-c63f-48f5-86f0-c3c4beaf88a3",
    "prId" : 23235,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23235#pullrequestreview-166741790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "320a774f-8cac-4c29-ab6f-d633ca66f478",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Are all of these used?",
        "createdAt" : "2018-10-19T21:32:16Z",
        "updatedAt" : "2018-10-23T09:57:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a641ab0f-e1c3-4606-8091-ee5b3dd37bf5",
        "parentId" : "320a774f-8cac-4c29-ab6f-d633ca66f478",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : " NPY_UINT32, NPY_UINT16 and uint23_t and uint16_t are not used. This needs a discussion, see below.",
        "createdAt" : "2018-10-20T07:46:48Z",
        "updatedAt" : "2018-10-23T09:57:02Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a519cc4380470f5e3a67c28a84a47e8f33f77855",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +12,16 @@from numpy cimport (ndarray,\n                    NPY_INT64, NPY_INT32, NPY_INT16, NPY_INT8,\n                    NPY_UINT64, NPY_UINT32, NPY_UINT16, NPY_UINT8,\n                    NPY_FLOAT32, NPY_FLOAT64,\n                    NPY_OBJECT,"
  },
  {
    "id" : "fd9c7b6f-6e76-4869-a668-140501caac89",
    "prId" : 23583,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23583#pullrequestreview-173667036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8296cb6e-37af-4613-b5ca-7a4d98e48116",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think will have a big perf slowdown",
        "createdAt" : "2018-11-09T13:47:58Z",
        "updatedAt" : "2018-11-10T16:36:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f4bcd641-a58a-4faf-ae3a-4f97d73e9d95",
        "parentId" : "8296cb6e-37af-4613-b5ca-7a4d98e48116",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "its never used in cython and `nogil` isnt allowed for `def` functions.  There is a `with nogil` block just below this",
        "createdAt" : "2018-11-09T13:53:54Z",
        "updatedAt" : "2018-11-10T16:36:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7a3305d2-c3b6-4375-9780-5e0aa91fa00d",
        "parentId" : "8296cb6e-37af-4613-b5ca-7a4d98e48116",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pls test i once changed this (and tried to remove) and was all negative",
        "createdAt" : "2018-11-10T04:26:39Z",
        "updatedAt" : "2018-11-10T16:36:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "576089d2-fabb-4370-a30e-74cb7acc0162",
        "parentId" : "8296cb6e-37af-4613-b5ca-7a4d98e48116",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Indistinguishable:\r\n\r\nmaster:\r\n```\r\nIn [3]: arr = np.arange(10000, dtype=np.int64)\r\n\r\nIn [4]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 165.65 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 9.42 µs per loop\r\n\r\nIn [5]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 4.39 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 10.3 µs per loop\r\n\r\nIn [6]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 4.21 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 11.2 µs per loop\r\n```\r\n\r\nPR:\r\n```\r\nIn [3]: arr = np.arange(10000, dtype=np.int64)\r\n\r\nIn [4]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 12.06 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 9.71 µs per loop\r\n\r\nIn [5]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 9.48 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 9.6 µs per loop\r\n\r\nIn [6]: %timeit pd._libs.algos.kth_smallest(arr, 4)\r\nThe slowest run took 6.23 times longer than the fastest. This could mean that an intermediate result is being cached.\r\n100000 loops, best of 3: 9.95 µs per loop\r\n```\r\n\r\nSimilar for other dtypes",
        "createdAt" : "2018-11-10T16:35:40Z",
        "updatedAt" : "2018-11-10T16:36:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "23344b2823bf3c45f5ba88af50b1d8308d7d4f64",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +198,202 @@@cython.boundscheck(False)\n@cython.wraparound(False)\ndef kth_smallest(numeric[:] a, Py_ssize_t k) -> numeric:\n    cdef:\n        Py_ssize_t i, j, l, m, n = a.shape[0]"
  },
  {
    "id" : "847c7a3d-21d5-4973-8d91-83aa3b0309cf",
    "prId" : 24932,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24932#pullrequestreview-196796221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb65a2c-320b-4d88-aa12-10d250aa380a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does const provide any perf enhancements?",
        "createdAt" : "2019-01-26T15:36:28Z",
        "updatedAt" : "2019-01-26T15:39:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "67b65998-44b3-4133-ba12-4b23ec1f392b",
        "parentId" : "abb65a2c-320b-4d88-aa12-10d250aa380a",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I am not sure.",
        "createdAt" : "2019-01-26T16:03:24Z",
        "updatedAt" : "2019-01-26T16:03:24Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      },
      {
        "id" : "8db56b42-d526-448d-a2ed-c907bc17a4b8",
        "parentId" : "abb65a2c-320b-4d88-aa12-10d250aa380a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "IIUC if a user happens to pass an ndarray with the writeable flag set to False, cython will raise if the `const` modifier is not present.",
        "createdAt" : "2019-01-26T17:23:57Z",
        "updatedAt" : "2019-01-26T17:23:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9fc17c6b-4359-485c-8e7c-994824806a59",
        "parentId" : "abb65a2c-320b-4d88-aa12-10d250aa380a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok thanks. ",
        "createdAt" : "2019-01-26T17:48:20Z",
        "updatedAt" : "2019-01-26T17:48:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b5c8d9e2dc67fd6e441079378a00f3a008892c1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +77,81 @@@cython.wraparound(False)\n@cython.boundscheck(False)\ncpdef ndarray[int64_t, ndim=1] unique_deltas(const int64_t[:] arr):\n    \"\"\"\n    Efficiently find the unique first-differences of the given array."
  },
  {
    "id" : "cebaf39c-ab6a-4725-8cca-6d7daa3be73c",
    "prId" : 24932,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24932#pullrequestreview-196792922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf017a4d-72ea-47ed-9feb-e7bb04c7fae0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does const not work with fused types?",
        "createdAt" : "2019-01-26T15:37:11Z",
        "updatedAt" : "2019-01-26T15:39:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca6059e6-e43f-487f-b4c5-cf37277bd8ec",
        "parentId" : "cf017a4d-72ea-47ed-9feb-e7bb04c7fae0",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I could not make it compile. Seems there's an open [issue](https://github.com/cython/cython/issues/1772) about it in the cython repo.",
        "createdAt" : "2019-01-26T16:02:40Z",
        "updatedAt" : "2019-01-26T16:02:41Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b5c8d9e2dc67fd6e441079378a00f3a008892c1",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +679,683 @@@cython.wraparound(False)\n@cython.boundscheck(False)\ndef arrmap(algos_t[:] index, object func):\n    cdef:\n        Py_ssize_t length = index.shape[0]"
  },
  {
    "id" : "c2626931-c239-47e6-9a48-82c8af56baa5",
    "prId" : 28151,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28151#pullrequestreview-280533771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5415d4e-6cf7-4085-9760-e64b8bd570df",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you move this to the loop below?",
        "createdAt" : "2019-08-26T16:49:37Z",
        "updatedAt" : "2019-09-07T01:31:10Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "4c54ba41-88f6-4aa5-a23f-4a6069969e41",
        "parentId" : "e5415d4e-6cf7-4085-9760-e64b8bd570df",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Is there a way to do that?  The reason I had this separate was because if we rank in the outermost loop below the `yi` column won't be ranked, and if we rank inside that loop we're back to the original implementation.  This was just a way of forcing it to rank everything first.",
        "createdAt" : "2019-08-26T17:49:26Z",
        "updatedAt" : "2019-09-07T01:31:10Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "8e350d43-4684-4ba0-8b58-23859513d495",
        "parentId" : "e5415d4e-6cf7-4085-9760-e64b8bd570df",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Addressed by https://github.com/pandas-dev/pandas/pull/28151/commits/14e7f5166ef28dc71763e1a3b005f080e256e39c",
        "createdAt" : "2019-08-28T00:12:41Z",
        "updatedAt" : "2019-09-07T01:31:10Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "92d813429502f0439b4a6b20273be4bf24b42dcb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +312,316 @@\n    for i in range(K):\n        ranked_mat[:, i] = rank_1d_float64(mat[:, i])\n\n    for xi in range(K):"
  },
  {
    "id" : "fb5ba457-bbfc-42ab-abd4-bddc7695c068",
    "prId" : 29314,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29314#pullrequestreview-310774878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57517e9c-9e09-4aaa-b476-60af58a1646d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string",
        "createdAt" : "2019-11-02T14:34:01Z",
        "updatedAt" : "2019-11-02T14:34:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4498190a-2f61-4a16-b763-b644388881f0",
        "parentId" : "57517e9c-9e09-4aaa-b476-60af58a1646d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes, next pass",
        "createdAt" : "2019-11-02T15:14:05Z",
        "updatedAt" : "2019-11-02T15:14:06Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "83c26a11d0126f70e8dc8efabe340be657440edf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +381,385 @@\ndef _validate_limit(nobs: int, limit=None) -> int:\n    if limit is None:\n        lim = nobs\n    else:"
  },
  {
    "id" : "3408f3a8-dc30-4f30-9d86-df0e94efeabf",
    "prId" : 31935,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31935#pullrequestreview-357790548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbf90d7f-a769-4c27-a12c-e3e9db6f407f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "const?",
        "createdAt" : "2020-02-12T20:33:11Z",
        "updatedAt" : "2020-02-13T00:32:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e58def5f-c766-48c1-88e1-0423a592f0aa",
        "parentId" : "cbf90d7f-a769-4c27-a12c-e3e9db6f407f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm tried but seems to crash the compiler. Traceback below\r\n\r\n```sh\r\n[1/1] Cythonizing pandas/_libs/algos.pyx\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n    float64_t\r\n\r\n\r\n@cython.boundscheck(False)\r\n@cython.wraparound(False)\r\ndef diff_2d(const diff_t[:, :] arr,\r\n                        ^\r\n------------------------------------------------------------\r\n\r\npandas/_libs/algos.pyx:1178:25: Compiler crash in AnalyseDeclarationsTransform\r\n\r\nFile 'ModuleNode.py', line 124, in analyse_declarations: ModuleNode(algos.pyx:1:0,\r\n    full_module_name = 'pandas._libs.algos')\r\nFile 'Nodes.py', line 431, in analyse_declarations: StatListNode(algos.pyx:1:0)\r\nFile 'Nodes.py', line 431, in analyse_declarations: StatListNode(algos.pyx:1178:0)\r\nFile 'Nodes.py', line 375, in analyse_declarations: CompilerDirectivesNode(algos.pyx:1178:0)\r\nFile 'Nodes.py', line 431, in analyse_declarations: StatListNode(algos.pyx:1178:0)\r\nFile 'Nodes.py', line 2887, in analyse_declarations: DefNode(algos.pyx:1178:0,\r\n    modifiers = [...]/0,\r\n    name = 'diff_2d',\r\n    num_required_args = 4,\r\n    outer_attrs = [...]/2,\r\n    py_wrapper_required = True,\r\n    reqd_kw_flags_cname = '0')\r\nFile 'Nodes.py', line 2925, in analyse_argument_types: DefNode(algos.pyx:1178:0,\r\n    modifiers = [...]/0,\r\n    name = 'diff_2d',\r\n    num_required_args = 4,\r\n    outer_attrs = [...]/2,\r\n    py_wrapper_required = True,\r\n    reqd_kw_flags_cname = '0')\r\nFile 'Nodes.py', line 1093, in analyse: MemoryViewSliceTypeNode(algos.pyx:1178:25,\r\n    name = 'memoryview')\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/Nodes.py\", line 1093, in analyse\r\n    self.type = PyrexTypes.MemoryViewSliceType(base_type, axes_specs)\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/PyrexTypes.py\", line 625, in __init__\r\n    self.dtype_name = Buffer.mangle_dtype_name(self.dtype)\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/Buffer.py\", line 631, in mangle_dtype_name\r\n    return prefix + dtype.specialization_name()\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/PyrexTypes.py\", line 57, in specialization_name\r\n    common_subs = (self.empty_declaration_code()\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/PyrexTypes.py\", line 51, in empty_declaration_code\r\n    self._empty_declaration = self.declaration_code('')\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/PyrexTypes.py\", line 1582, in declaration_code\r\n    return self.const_base_type.declaration_code(\"const %s\" % entity_code, for_display, dll_linkage, pyrex)\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Compiler/PyrexTypes.py\", line 1649, in declaration_code\r\n    raise Exception(\"This may never happen, please report a bug\")\r\nException: This may never happen, please report a bug\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 784, in <module>\r\n    setup_package()\r\n  File \"setup.py\", line 754, in setup_package\r\n    ext_modules=maybe_cythonize(extensions, compiler_directives=directives),\r\n  File \"setup.py\", line 527, in maybe_cythonize\r\n    return cythonize(extensions, *args, **kwargs)\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1096, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/Users/williamayd/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1219, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: pandas/_libs/algos.pyx\r\n```",
        "createdAt" : "2020-02-12T21:04:55Z",
        "updatedAt" : "2020-02-13T00:32:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "72d79d2d-cf7e-47d5-a00e-79fef7417c5c",
        "parentId" : "cbf90d7f-a769-4c27-a12c-e3e9db6f407f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "huh, possibly a cython issue",
        "createdAt" : "2020-02-12T21:12:32Z",
        "updatedAt" : "2020-02-13T00:32:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "644055bb5adeca32f95a94cd36d4f9785c0f358d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1174,1178 @@@cython.boundscheck(False)\n@cython.wraparound(False)\ndef diff_2d(diff_t[:, :] arr,\n            out_t[:, :] out,\n            Py_ssize_t periods, int axis):"
  },
  {
    "id" : "528b0e14-07ea-4041-a1e8-d693863ae80d",
    "prId" : 32961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32961#pullrequestreview-380128037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43961287-90e7-4f6f-b777-cb49123ee512",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "Added ```bint```",
        "createdAt" : "2020-03-24T09:24:12Z",
        "updatedAt" : "2020-03-25T19:00:54Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c75cc59214d3a04dc08f05c2d684cd3c9372f3a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +802,806 @@    rank_t[:] in_arr,\n    ties_method=\"average\",\n    bint ascending=True,\n    na_option=\"keep\",\n    bint pct=False,"
  },
  {
    "id" : "e0d2018e-8235-495a-8156-c62b964a59e1",
    "prId" : 32961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32961#pullrequestreview-380128178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23cefb62-8b6d-4e00-a8cb-53c03be8b616",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "Added ```bint```",
        "createdAt" : "2020-03-24T09:24:23Z",
        "updatedAt" : "2020-03-25T19:00:54Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c75cc59214d3a04dc08f05c2d684cd3c9372f3a",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +804,808 @@    bint ascending=True,\n    na_option=\"keep\",\n    bint pct=False,\n):\n    \"\"\""
  },
  {
    "id" : "46073eef-3b4a-41ee-b323-9473cb3380b4",
    "prId" : 32961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32961#pullrequestreview-380128397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "733f86ba-1da5-4931-87be-aa6e04d68d43",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "added ```int```",
        "createdAt" : "2020-03-24T09:24:38Z",
        "updatedAt" : "2020-03-25T19:00:54Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c75cc59214d3a04dc08f05c2d684cd3c9372f3a",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1024,1028 @@def rank_2d(\n    rank_t[:, :] in_arr,\n    int axis=0,\n    ties_method=\"average\",\n    bint ascending=True,"
  },
  {
    "id" : "f62aecb8-855e-495f-8d81-6aaae7f46c26",
    "prId" : 32961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32961#pullrequestreview-380128584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ba7398-6e04-46c0-9d1a-93769016be94",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "added ```bint```",
        "createdAt" : "2020-03-24T09:24:53Z",
        "updatedAt" : "2020-03-25T19:00:54Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c75cc59214d3a04dc08f05c2d684cd3c9372f3a",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1026,1030 @@    int axis=0,\n    ties_method=\"average\",\n    bint ascending=True,\n    na_option=\"keep\",\n    bint pct=False,"
  },
  {
    "id" : "1b9426d6-8fa3-4606-970d-3bcfc20266b6",
    "prId" : 32961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32961#pullrequestreview-380128697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4f23daa-0f93-494e-b5f6-e7cf5a928d2c",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "added ```bint```",
        "createdAt" : "2020-03-24T09:25:01Z",
        "updatedAt" : "2020-03-25T19:00:54Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c75cc59214d3a04dc08f05c2d684cd3c9372f3a",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1028,1032 @@    bint ascending=True,\n    na_option=\"keep\",\n    bint pct=False,\n):\n    \"\"\""
  }
]