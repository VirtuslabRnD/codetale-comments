[
  {
    "id" : "8458c0fe-d141-43b8-ab75-fc152df38fff",
    "prId" : 18086,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18086#pullrequestreview-75967736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ea26e80-d8a0-439e-acb2-66f6cbf14290",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't add extraneous things, ok for now",
        "createdAt" : "2017-11-12T18:50:03Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c090095-4620-4656-8042-9f29d32a09e6",
        "parentId" : "6ea26e80-d8a0-439e-acb2-66f6cbf14290",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This was a dummy commit to force the CI on a TestClipboard failure.",
        "createdAt" : "2017-11-12T19:00:25Z",
        "updatedAt" : "2017-11-12T19:04:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fa05bd68c8cb2a794b1d39f392ca4f4c8ef26c1",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# -*- coding: utf-8 -*-\n# cython: profile=False\n"
  },
  {
    "id" : "0aa7b6ec-3910-4733-9d7c-759055e687ba",
    "prId" : 19481,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19481#pullrequestreview-94930816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f7ba65b-ae6a-4e59-ae27-ec81aa039e6f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe import directly as the name of the enum?\r\n\r\ncan you also share this name with the non-grouping rank functions?",
        "createdAt" : "2018-02-07T12:37:16Z",
        "updatedAt" : "2018-02-09T18:37:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c11bc1e1-bd14-4904-9a78-40dc823e22f0",
        "parentId" : "1f7ba65b-ae6a-4e59-ae27-ec81aa039e6f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I tried this back in d09268b1 but all of the Py27 builds failed as a result with the error below (py3 was fine). Tried digging up info but couldn't find anything - any chance you've seen this before?\r\n\r\n```bash\r\n\r\ncythoning pandas/_libs/groupby.pyx to pandas/_libs/groupby.c\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n\r\n        if keep_na and (values[_as[i], 0] != values[_as[i], 0]):\r\n            grp_na_count += 1\r\n            out[_as[i], 0] = np.nan\r\n        else:\r\n            if tiebreak == TiebreakEnumType.TIEBREAK_AVERAGE:\r\n                                          ^\r\n------------------------------------------------------------\r\n\r\npandas/_libs/groupby.pyx:178:43: Compiler crash in AnalyseExpressionsTransform\r\n\r\nModuleNode.body = StatListNode(groupby.pyx:4:0)\r\nStatListNode.stats[16] = StatListNode(groupby.pyx:125:0)\r\nStatListNode.stats[0] = CompilerDirectivesNode(groupby.pyx:125:0)\r\nCompilerDirectivesNode.body = StatListNode(groupby.pyx:125:0)\r\nStatListNode.stats[0] = DefNode(groupby.pyx:125:0,\r\n    doc = u'\\n    Only transforms on axis=0\\n    ',\r\n    modifiers = [...]/0,\r\n    name = u'group_rank_object',\r\n    num_required_args = 8,\r\n    py_wrapper_required = True,\r\n    reqd_kw_flags_cname = '0',\r\n    used = True)\r\nFile 'Nodes.py', line 430, in analyse_expressions: StatListNode(groupby.pyx:130:4)\r\nFile 'Nodes.py', line 430, in analyse_expressions: StatListNode(groupby.pyx:170:4)\r\nFile 'Nodes.py', line 6181, in analyse_expressions: ForInStatNode(groupby.pyx:170:4)\r\nFile 'Nodes.py', line 430, in analyse_expressions: StatListNode(groupby.pyx:171:8)\r\nFile 'Nodes.py', line 5842, in analyse_expressions: IfStatNode(groupby.pyx:174:8)\r\nFile 'Nodes.py', line 430, in analyse_expressions: StatListNode(groupby.pyx:178:12)\r\nFile 'Nodes.py', line 5840, in analyse_expressions: IfStatNode(groupby.pyx:178:12)\r\nFile 'Nodes.py', line 5885, in analyse_expressions: IfClauseNode(groupby.pyx:178:15)\r\nFile 'ExprNodes.py', line 541, in analyse_temp_boolean_expression: PrimaryCmpNode(groupby.pyx:178:24,\r\n    operator = u'==',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 11893, in analyse_types: PrimaryCmpNode(groupby.pyx:178:24,\r\n    operator = u'==',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 6329, in analyse_types: AttributeNode(groupby.pyx:178:43,\r\n    attribute = u'TIEBREAK_AVERAGE',\r\n    initialized_check = True,\r\n    is_attribute = 1,\r\n    needs_none_check = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 6395, in analyse_as_type_attribute: AttributeNode(groupby.pyx:178:43,\r\n    attribute = u'TIEBREAK_AVERAGE',\r\n    initialized_check = True,\r\n    is_attribute = 1,\r\n    needs_none_check = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 6438, in as_name_node: AttributeNode(groupby.pyx:178:43,\r\n    attribute = u'TIEBREAK_AVERAGE',\r\n    initialized_check = True,\r\n    is_attribute = 1,\r\n    needs_none_check = True,\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 1906, in analyse_rvalue_entry: NameNode(groupby.pyx:178:43,\r\n    cf_maybe_null = True,\r\n    is_name = True,\r\n    name = u'TIEBREAK_AVERAGE',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 1939, in analyse_entry: NameNode(groupby.pyx:178:43,\r\n    cf_maybe_null = True,\r\n    is_name = True,\r\n    name = u'TIEBREAK_AVERAGE',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\nFile 'ExprNodes.py', line 1953, in check_identifier_kind: NameNode(groupby.pyx:178:43,\r\n    cf_maybe_null = True,\r\n    is_name = True,\r\n    name = u'TIEBREAK_AVERAGE',\r\n    result_is_used = True,\r\n    use_managed_ref = True)\r\n\r\nCompiler crash traceback from this point on:\r\n  File \"/Users/williamayd/miniconda3/envs/pandas_dev2/lib/python2.7/site-packages/Cython/Compiler/ExprNodes.py\", line 1953, in check_identifier_kind\r\n    if entry.is_type and entry.type.is_extension_type:\r\nAttributeError: 'NoneType' object has no attribute 'is_type'\r\n\r\n```",
        "createdAt" : "2018-02-07T16:26:34Z",
        "updatedAt" : "2018-02-09T18:37:11Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a3b4fe84-e695-4b38-9ee6-15ae900f7b04",
        "parentId" : "1f7ba65b-ae6a-4e59-ae27-ec81aa039e6f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "thats annoying. havne't seen that ",
        "createdAt" : "2018-02-08T01:22:02Z",
        "updatedAt" : "2018-02-09T18:37:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4578d78e5d4feaf6a8a3caac51acf7d2ebc112",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +17,21 @@\nfrom util cimport numeric, get_nat\nfrom algos cimport (swap, TiebreakEnumType, TIEBREAK_AVERAGE, TIEBREAK_MIN,\n                    TIEBREAK_MAX, TIEBREAK_FIRST, TIEBREAK_DENSE)\nfrom algos import take_2d_axis1_float64_float64, groupsort_indexer, tiebreakers"
  },
  {
    "id" : "6f7eb07b-9c5f-4d17-bf6b-4932adf12d64",
    "prId" : 24954,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24954#pullrequestreview-199796741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64e22898-959f-4c36-9e69-c5a68f8e26f8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Do we still need these? Thought from a previous comment that they weren't required\r\n\r\nSide note - I see you've been force pushing changes. If you merge master you can push without forcing, which typically does a better job of maintaining comment history",
        "createdAt" : "2019-02-04T19:47:33Z",
        "updatedAt" : "2019-02-04T19:47:38Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "6d2799dc-7ecd-4c77-9e15-1c6876066085",
        "parentId" : "64e22898-959f-4c36-9e69-c5a68f8e26f8",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "Yes, they are still needed (to avoid changing the code calling this function). atleast until some logic to handle int64_t differently is added to the _group_add function.\r\n\r\nI force push to keep only 1 commit (avoid the bloat).\r\nI can add commits and squash before merging, do you think that's better? ",
        "createdAt" : "2019-02-04T23:18:09Z",
        "updatedAt" : "2019-02-07T14:27:52Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      }
    ],
    "commit" : "937e44cb2aca62ffb828bd8c05d976b4630fb1c8",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +431,435 @@\n\ngroup_add_float32 = _group_add['float']\ngroup_add_float64 = _group_add['double']\n"
  },
  {
    "id" : "210a4bdb-33fe-46c4-adf2-1d977588169a",
    "prId" : 24954,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24954#pullrequestreview-199796741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d275003-413e-4729-b946-d57ba9464710",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Unrelated to this PR but I see there are some functions at the end of the template file which have been converted to fused types but still remain in the template file. Could make sense to move them here as well (separate PR)",
        "createdAt" : "2019-02-04T19:48:39Z",
        "updatedAt" : "2019-02-04T19:48:39Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "2f18b85b-24ca-4be7-b6b4-48afd1ee15a8",
        "parentId" : "6d275003-413e-4729-b946-d57ba9464710",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I'll take a look at that (for next PR). thanks.",
        "createdAt" : "2019-02-04T20:41:39Z",
        "updatedAt" : "2019-02-07T14:27:52Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      },
      {
        "id" : "b968433b-9c19-4b22-b436-6b5a0de5ebe7",
        "parentId" : "6d275003-413e-4729-b946-d57ba9464710",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "@WillAyd which functions did you find that are unnecessary? I couldn't find any.",
        "createdAt" : "2019-02-04T23:16:35Z",
        "updatedAt" : "2019-02-07T14:27:52Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      }
    ],
    "commit" : "937e44cb2aca62ffb828bd8c05d976b4630fb1c8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +386,390 @@@cython.wraparound(False)\n@cython.boundscheck(False)\ndef _group_add(floating[:, :] out,\n               int64_t[:] counts,\n               floating[:, :] values,"
  },
  {
    "id" : "9c0b1487-194a-4528-bccc-52dd515be51d",
    "prId" : 24954,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24954#pullrequestreview-200403356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d009ff93-8a9e-4747-baf6-3fe303f6b59e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just call this group_add",
        "createdAt" : "2019-02-06T03:39:57Z",
        "updatedAt" : "2019-02-06T03:41:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "937e44cb2aca62ffb828bd8c05d976b4630fb1c8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +386,390 @@@cython.wraparound(False)\n@cython.boundscheck(False)\ndef _group_add(floating[:, :] out,\n               int64_t[:] counts,\n               floating[:, :] values,"
  },
  {
    "id" : "fd27fca2-c2a5-4962-aee2-62b70d30049c",
    "prId" : 25249,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25249#pullrequestreview-202299181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47725843-d7de-467a-9db0-74ab36c8665f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "!=",
        "createdAt" : "2019-02-09T20:25:59Z",
        "updatedAt" : "2019-02-11T18:51:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "346214ab-dab9-4374-9e16-a990eabac6cc",
        "parentId" : "47725843-d7de-467a-9db0-74ab36c8665f",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I made the minimum amount of changes when I refactored from tempita to fused types.\r\n\r\nSo just to make sure, you would like me to take this opportunity to the fix small issues inside the functions themselves?",
        "createdAt" : "2019-02-09T21:06:21Z",
        "updatedAt" : "2019-02-11T18:51:42Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      },
      {
        "id" : "e7a7404b-1f2e-48e0-b13a-9a0c86357e39",
        "parentId" : "47725843-d7de-467a-9db0-74ab36c8665f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes please.  Be sure to comment to point out where you have made changes.",
        "createdAt" : "2019-02-11T02:18:31Z",
        "updatedAt" : "2019-02-11T18:51:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "69e9b140-a1c2-46cf-a45e-54f39fc0491d",
        "parentId" : "47725843-d7de-467a-9db0-74ab36c8665f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "generally when moving large blocks of code best to just move them and not make any other changes. generally prefer to just have these changes in a followup; if very small ok though.",
        "createdAt" : "2019-02-11T13:12:04Z",
        "updatedAt" : "2019-02-11T18:51:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1a2078ed-f48f-4763-9c5e-f011390eeccf",
        "parentId" : "47725843-d7de-467a-9db0-74ab36c8665f",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "Fixed.",
        "createdAt" : "2019-02-11T19:38:18Z",
        "updatedAt" : "2019-02-11T19:38:18Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cb991b7c6b778ab9036529b4b0b27450644fb51",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +453,457 @@        floating[:, :] prodx, nobs\n\n    if not len(values) == len(labels):\n        raise AssertionError(\"len(index) != len(labels)\")\n"
  },
  {
    "id" : "86a8b015-4fd9-4241-bd0c-7d24eecd41c1",
    "prId" : 25249,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25249#pullrequestreview-201938692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37b2cc82-c162-41c9-bb22-3f7aa83d912a",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Is this overflow safe?",
        "createdAt" : "2019-02-09T20:28:45Z",
        "updatedAt" : "2019-02-11T18:51:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3e17a35f-abdc-4ae8-8612-ffaa4164114c",
        "parentId" : "37b2cc82-c162-41c9-bb22-3f7aa83d912a",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I am not sure, kept the same logic as was in tempita.",
        "createdAt" : "2019-02-09T21:10:27Z",
        "updatedAt" : "2019-02-11T18:51:43Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      },
      {
        "id" : "38a51570-33b2-4db4-b1fc-8a5789473d1d",
        "parentId" : "37b2cc82-c162-41c9-bb22-3f7aa83d912a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "OK.  Definitely not something to worry about for this PR.  Ditto with the performance in the variance calculation.",
        "createdAt" : "2019-02-11T02:21:32Z",
        "updatedAt" : "2019-02-11T18:51:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cb991b7c6b778ab9036529b4b0b27450644fb51",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +474,478 @@                if val == val:\n                    nobs[lab, j] += 1\n                    prodx[lab, j] *= val\n\n        for i in range(ncounts):"
  },
  {
    "id" : "8a3baea5-8ede-4781-9cb8-ea64dc18c387",
    "prId" : 25249,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25249#pullrequestreview-201878446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a64ad02-9657-4c81-8958-c208bc5f9cb1",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Is this performant?  Seems like a lot of unnecessary operations",
        "createdAt" : "2019-02-09T20:31:54Z",
        "updatedAt" : "2019-02-11T18:51:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d9177e71-d1f3-4583-87b1-c2f10e45b792",
        "parentId" : "0a64ad02-9657-4c81-8958-c208bc5f9cb1",
        "authorId" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "body" : "I am not sure. kept logic as-is.",
        "createdAt" : "2019-02-09T21:11:36Z",
        "updatedAt" : "2019-02-11T18:51:43Z",
        "lastEditedBy" : "7e74fb24-2f96-4cb7-8b24-bacafb9fec58",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cb991b7c6b778ab9036529b4b0b27450644fb51",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +529,533 @@                    oldmean = mean[lab, j]\n                    mean[lab, j] += (val - oldmean) / nobs[lab, j]\n                    out[lab, j] += (val - mean[lab, j]) * (val - oldmean)\n\n        for i in range(ncounts):"
  }
]