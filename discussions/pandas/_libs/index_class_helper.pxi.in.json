[
  {
    "id" : "75dbdee2-cb9a-4c98-a3f9-1a62a7a23284",
    "prId" : 27909,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27909#pullrequestreview-275497007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Any idea what the perf impact it here?  I don't recall how expensive getting this context manager is.",
        "createdAt" : "2019-08-14T20:20:31Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "bfe30b50-75ad-41eb-849a-c47ad97fc572",
        "parentId" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No idea.  A couple options: 1) not-suppress the warning, 2) write a cython function to check for cases when the warning _would_ be emitted and skip the comparison in that case",
        "createdAt" : "2019-08-14T21:51:33Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3ec6f107-6081-4edd-8378-39738734ac2d",
        "parentId" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "an option here is to do this\r\n\r\n```\r\nif isinstance(val, str):\r\n    val = np.array([val], dtype=object)\r\n```",
        "createdAt" : "2019-08-15T01:09:13Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "770ea73b-ddc4-4a88-8bb1-b5743075d233",
        "parentId" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Some timings\r\n\r\n```python\r\nIn [2]: %%timeit\r\n   ...: with warnings.catch_warnings():\r\n   ...:     pass\r\n   ...:\r\n2.19 µs ± 89.6 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\nIn [3]: %%timeit\r\n   ...: with warnings.catch_warnings():\r\n   ...:     warnings.filterwarnings(\"ignore\", category=FutureWarning)\r\n   ...:\r\n   ...:\r\n3.96 µs ± 64.9 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\n```\r\n\r\nNo idea if that's too large here or not.",
        "createdAt" : "2019-08-15T13:16:19Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1604e451-6acb-4529-ac9c-d81b73068dba",
        "parentId" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "That's not terrible for not-in-a-loop code.  The cython-provided numpy.pxd file has a UFUNC_ERR_IGNORE that makes me think it may be possible to do something similar in cython-space, but so far no helpful documentation on how to make that a reality.",
        "createdAt" : "2019-08-15T14:49:19Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "67463d16-418f-4966-b755-7622abb14002",
        "parentId" : "caade83d-6767-48c2-9d08-6c591a97e400",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> That's not terrible for not-in-a-loop code.\r\n\r\nAgreed. Doesn't seem worth worrying about.",
        "createdAt" : "2019-08-15T15:23:37Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c8ae4a9d886699108b21de4351898c3d6e942ca",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +62,66 @@        values = self._get_index_values().view('{{dtype}}')\n        try:\n            with warnings.catch_warnings():\n                # e.g. if values is float64 and `val` is a str, suppress warning\n                warnings.filterwarnings(\"ignore\", category=FutureWarning)"
  },
  {
    "id" : "f33ab0f7-7a00-4471-9b5c-4b6ce6d3589d",
    "prId" : 27909,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27909#pullrequestreview-281147876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6048dff2-ad72-451c-9578-b127f083ed3c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this deprecation linked to a particular issue? If so comment would be nice so we know when to clean up",
        "createdAt" : "2019-08-28T22:28:01Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "9eaa854c-f93a-43cb-91ec-9c6d39e23886",
        "parentId" : "6048dff2-ad72-451c-9578-b127f083ed3c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Looks like numpy-dev still isn't enforcing it, so its still unknown",
        "createdAt" : "2019-08-28T23:06:26Z",
        "updatedAt" : "2019-09-03T01:54:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c8ae4a9d886699108b21de4351898c3d6e942ca",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +63,67 @@        try:\n            with warnings.catch_warnings():\n                # e.g. if values is float64 and `val` is a str, suppress warning\n                warnings.filterwarnings(\"ignore\", category=FutureWarning)\n                indexer = values == val"
  }
]