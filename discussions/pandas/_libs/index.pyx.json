[
  {
    "id" : "6b9adc6d-ee60-4289-9cf1-80a7cc684802",
    "prId" : 18371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18371#pullrequestreview-77750737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d00e675-511f-4bf7-be2b-ee4a795fbfd4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you can add a doc string at some point",
        "createdAt" : "2017-11-20T11:14:49Z",
        "updatedAt" : "2017-11-20T11:14:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "38e29d1d987176dd981032ac356aa9b70d241dfc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@\ncpdef object get_value_box(ndarray arr, object loc):\n    cdef:\n        Py_ssize_t i, sz\n"
  },
  {
    "id" : "f2be8677-5381-4650-899e-ee2e47e41420",
    "prId" : 19074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19074#pullrequestreview-88447861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa4a48ef-a305-4a89-abb5-fa0231aeb523",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pls run/show asv results for reindinxing with methods",
        "createdAt" : "2018-01-12T11:29:14Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "468bb08cb14ce265b78babbcbbb066adc1d08d51",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +672,676 @@        if method is not None:\n            # but underlying backfill and pad methods require index and keys\n            # to be sorted. The index already is (checked in\n            # Index._get_fill_indexer), sort (integer representations of) keys:\n            order = np.argsort(lab_ints)"
  },
  {
    "id" : "ed0e39fd-ddbc-4d18-ae8a-4a5a090dd46d",
    "prId" : 19074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19074#pullrequestreview-91826601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49291d2f-2fcc-4988-abbd-126e37328aad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doc-string would be nice here",
        "createdAt" : "2018-01-26T03:14:14Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3629661c-d97d-42f0-a757-94320856b181",
        "parentId" : "49291d2f-2fcc-4988-abbd-126e37328aad",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "[Already replied](https://github.com/pandas-dev/pandas/pull/19074#discussion_r159793102) (not in this PR)",
        "createdAt" : "2018-01-26T11:32:56Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "8f0b329d-c0c9-4f66-95da-1cd59c8ad248",
        "parentId" : "49291d2f-2fcc-4988-abbd-126e37328aad",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and since its being re-written let's take this opportunity to fix these.",
        "createdAt" : "2018-01-26T11:57:43Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e3041bc3-80df-4011-b5e2-d4ab2eb195d5",
        "parentId" : "49291d2f-2fcc-4988-abbd-126e37328aad",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "Nope. They clearly must be inherited/set generally.",
        "createdAt" : "2018-01-26T12:47:49Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "468bb08cb14ce265b78babbcbbb066adc1d08d51",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +666,670 @@    def get_indexer(self, object target, object method=None,\n                    object limit=None):\n        lab_ints = self._extract_level_codes(target)\n\n        # All methods (exact, backfill, pad) directly map to the respective"
  },
  {
    "id" : "a7f27115-1a8d-4be5-bd8e-d0cf3f6363a0",
    "prId" : 19418,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19418#pullrequestreview-92029255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bac55a4-db7c-4220-b950-ae8b0948785b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should prob put array dtype introspection in a single place and expose via``is_timedelta64_array`` (new) somewhere maybe util.pxd",
        "createdAt" : "2018-01-27T16:32:54Z",
        "updatedAt" : "2018-01-27T16:32:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "90e75166149b2915b484b22ea24bd854eac3faf1",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +13,17 @@\ncdef extern from \"numpy/arrayobject.h\":\n    # These can be cimported directly from numpy in cython>=0.27.3\n    cdef enum NPY_TYPES:\n        NPY_DATETIME"
  },
  {
    "id" : "2427f4d5-9a5b-4f81-a0e4-9a16fbf49c54",
    "prId" : 21878,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21878#pullrequestreview-137239696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2033db2-e754-4a4a-bc20-4a88fbce2629",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob can remove this comment (future PR ok)",
        "createdAt" : "2018-07-14T14:33:51Z",
        "updatedAt" : "2018-07-14T14:35:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "003babfa4ea299f4e46d380a2e1bf16948b44fca",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +11,15 @@from numpy cimport (ndarray, float64_t, int32_t,\n                    int64_t, uint8_t, uint64_t, intp_t,\n                    # Note: NPY_DATETIME, NPY_TIMEDELTA are only available\n                    # for cimport in cython>=0.27.3\n                    NPY_DATETIME, NPY_TIMEDELTA)"
  },
  {
    "id" : "d4e82db2-f49b-43da-8d35-d7facc1124f1",
    "prId" : 22826,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22826#pullrequestreview-160057998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d41ea464-bbbc-45ca-ba3f-7fe9eca85e5b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what if you drop the ``len(stargets) < 5`` and just use it if its monotonic_increasing? does the small case actually make any difference here?",
        "createdAt" : "2018-09-25T12:06:26Z",
        "updatedAt" : "2018-09-26T20:23:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "255ede05-86a2-48ba-a2ec-734aa2004281",
        "parentId" : "d41ea464-bbbc-45ca-ba3f-7fe9eca85e5b",
        "authorId" : "c029ae91-41d9-4044-92c3-e06a2617bdf1",
        "body" : "If you drop the `len(stargets) < 5`, then we'd be running a binary search against the index for each item in a potentially large set of targets -- runtime should be `O(m log n)` where `m` is the number of items in the set and `n` is the length of the index. Presumably, this would be slower when `m` is large enough compared to the current behavior which is to run through each item in the index and check if it is in the set of targets, which should be `O(n)` assuming constant time checks for whether an item is in the set of targets. Thoughts?",
        "createdAt" : "2018-09-26T20:40:49Z",
        "updatedAt" : "2018-09-26T20:40:49Z",
        "lastEditedBy" : "c029ae91-41d9-4044-92c3-e06a2617bdf1",
        "tags" : [
        ]
      },
      {
        "id" : "f50fb707-7205-4ee3-bb40-8193ed590669",
        "parentId" : "d41ea464-bbbc-45ca-ba3f-7fe9eca85e5b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a case where this is true in the asv's and compare?",
        "createdAt" : "2018-09-28T11:34:36Z",
        "updatedAt" : "2018-09-28T11:34:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c36221c4-2c1b-4991-8f3b-1bac542b2f68",
        "parentId" : "d41ea464-bbbc-45ca-ba3f-7fe9eca85e5b",
        "authorId" : "c029ae91-41d9-4044-92c3-e06a2617bdf1",
        "body" : "yes, in each of the following asv's `stargets` is either length one or length two\r\n\r\n> ```\r\n>      [ab9dbd64]       [b704c5bb]\r\n>      <master>         <loc-enhancements>\r\n> -         383±4ms          211±3ms     0.55  indexing.NonNumericSeriesIndexing.time_getitem_list_like('datetime', 'nonunique_monotonic_inc')\r\n> -        59.0±2ms         11.9±1ms     0.20  indexing.CategoricalIndexIndexing.time_get_indexer_list('monotonic_incr')\r\n> -      69.4±0.6ms          445±3μs     0.01  indexing.NumericSeriesIndexing.time_getitem_list_like(<class 'pandas.core.indexes.numeric.Int64Index'>, 'nonunique_monotonic_inc')\r\n> -      66.3±0.3ms          423±1μs     0.01  indexing.NumericSeriesIndexing.time_getitem_list_like(<class 'pandas.core.indexes.numeric.Float64Index'>, 'nonunique_monotonic_inc')\r\n> -      66.1±0.6ms          320±2μs     0.00  indexing.NumericSeriesIndexing.time_ix_list_like(<class 'pandas.core.indexes.numeric.Float64Index'>, 'nonunique_monotonic_inc')\r\n> -      69.2±0.4ms          330±3μs     0.00  indexing.NumericSeriesIndexing.time_ix_list_like(<class 'pandas.core.indexes.numeric.Int64Index'>, 'nonunique_monotonic_inc')\r\n> -      65.7±0.3ms          286±3μs     0.00  indexing.NumericSeriesIndexing.time_loc_list_like(<class 'pandas.core.indexes.numeric.Float64Index'>, 'nonunique_monotonic_inc')\r\n> -      69.3±0.5ms          295±2μs     0.00  indexing.NumericSeriesIndexing.time_loc_list_like(<class 'pandas.core.indexes.numeric.Int64Index'>, 'nonunique_monotonic_inc')\r\n> \r\n> SOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n> ```\r\n\r\n",
        "createdAt" : "2018-09-29T00:40:17Z",
        "updatedAt" : "2018-09-29T00:40:17Z",
        "lastEditedBy" : "c029ae91-41d9-4044-92c3-e06a2617bdf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ad3006b7fa6b41a0c4d32c05272bb8cde786597",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +295,299 @@        missing = np.empty(n_t, dtype=np.int64)\n\n        # map each starget to its position in the index\n        if stargets and len(stargets) < 5 and self.is_monotonic_increasing:\n            # if there are few enough stargets and the index is monotonically"
  },
  {
    "id" : "aa994dc0-abde-4bae-92a3-e00bca7ecef2",
    "prId" : 23235,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23235#pullrequestreview-166741230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f34e717f-8873-4f47-8b75-85392bb11529",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Pointer type used?",
        "createdAt" : "2018-10-19T21:33:48Z",
        "updatedAt" : "2018-10-23T09:57:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0c6ab4ee-134f-4a18-a5d0-36bcf5417c7a",
        "parentId" : "f34e717f-8873-4f47-8b75-85392bb11529",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Yes, in the ``cdef _maybe_get_bool_indexer`` part.",
        "createdAt" : "2018-10-20T07:21:08Z",
        "updatedAt" : "2018-10-23T09:57:02Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a519cc4380470f5e3a67c28a84a47e8f33f77855",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +6,10 @@import numpy as np\ncimport numpy as cnp\nfrom numpy cimport (ndarray, intp_t,\n                    float64_t, float32_t,\n                    int64_t, int32_t, int16_t, int8_t,"
  }
]