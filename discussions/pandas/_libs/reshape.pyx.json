[
  {
    "id" : "fed8586c-7cff-416e-b732-87100b8c40ef",
    "prId" : 22454,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22454#pullrequestreview-150631597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bec407b9-7d4e-4048-801c-1017046e787a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what if we make the inner a function instead?",
        "createdAt" : "2018-08-29T12:50:23Z",
        "updatedAt" : "2018-08-29T12:50:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b9809426-a009-4bf2-9c55-fc091dea6671",
        "parentId" : "bec407b9-7d4e-4048-801c-1017046e787a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No dice; we'd need a \"nogil\" version and a not-nogil version.",
        "createdAt" : "2018-08-29T13:36:57Z",
        "updatedAt" : "2018-08-29T13:36:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0a2d48b0-6d00-413b-8aec-14c7f1e457d8",
        "parentId" : "bec407b9-7d4e-4048-801c-1017046e787a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think like long-term cython may implement a feature discussed in #22452 that may let us clear this up further.  For now this is much more readable than the existing tempita implementation.",
        "createdAt" : "2018-08-29T15:50:31Z",
        "updatedAt" : "2018-08-29T15:50:31Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eea4a53a97413f305f9653a9ae279500782cf70d",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +45,49 @@        Py_ssize_t i, j, w, nulls, s, offset\n\n    if reshape_t is not object:\n        # evaluated at compile-time\n        with nogil:"
  },
  {
    "id" : "72b36a40-8939-4a0e-8c57-b495da5ba4bd",
    "prId" : 27267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27267#pullrequestreview-258857685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53a51223-5ec9-4564-844e-ce69aea4fa01",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This only explodes 1D items in a particular element right? Wonder if we should raise for nested list-likes or make some note regarding them (or alternately make some type of recursive call here to handle)",
        "createdAt" : "2019-07-07T16:20:21Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "eb8f98f6-293c-40d8-9083-8843a579ebab",
        "parentId" : "53a51223-5ec9-4564-844e-ce69aea4fa01",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, this is a good point, I *think* we are only intended for single levels lists, but let me see what i can do",
        "createdAt" : "2019-07-08T12:06:58Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e7755b72a7be47aa2579ea810c6c1032a5cc81b",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +125,129 @@        if c_is_list_like(v, False):\n            if len(v):\n                counts[i] += len(v)\n            else:\n                # empty list-like, use a nan marker"
  },
  {
    "id" : "dab3a0fd-b882-45ba-8ddd-c7a61ccff477",
    "prId" : 27267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27267#pullrequestreview-259246476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c39ef46c-bdbc-4fc6-be96-de343a9a822d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Maybe just `if v` for PEP8",
        "createdAt" : "2019-07-07T16:21:54Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e1af8699-a758-42f5-9eb4-e31ae1c2d93b",
        "parentId" : "c39ef46c-bdbc-4fc6-be96-de343a9a822d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "also v-->val pls; 1-letter names make grepping a pain",
        "createdAt" : "2019-07-07T16:24:33Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "56da6354-3769-4b2b-9981-135fb24d01e3",
        "parentId" : "c39ef46c-bdbc-4fc6-be96-de343a9a822d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Maybe just if v for PEP8\r\n\r\nWe should keep the explicit check, `if v` would fail for empty array",
        "createdAt" : "2019-07-09T02:10:15Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4389c010-7a03-4444-9aa6-1285c3a5147a",
        "parentId" : "c39ef46c-bdbc-4fc6-be96-de343a9a822d",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "> `if v` would fail for empty array\r\n\r\nNice catch",
        "createdAt" : "2019-07-09T02:51:58Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e7755b72a7be47aa2579ea810c6c1032a5cc81b",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +138,142 @@\n        if c_is_list_like(v, False):\n            if len(v):\n                for j in range(len(v)):\n                    result[count] = v[j]"
  }
]