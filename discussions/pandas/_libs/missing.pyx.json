[
  {
    "id" : "8e135884-1541-43a3-87dd-911ac07300c9",
    "prId" : 18357,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18357#pullrequestreview-77649768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason for not pulling in ``util._checknull`` here as well, as seems logical? (or just future PR)",
        "createdAt" : "2017-11-19T15:11:08Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bb47cf49-0edb-4cdf-9f3c-13f6c6cedb0b",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You mean defining it here instead of in `util`?  Or importing it into the namespace?  I'd be +1 on the former, indifferent to the latter.",
        "createdAt" : "2017-11-19T17:06:57Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b82020cd-a3f0-4fa0-8fc1-2f21ee36c9c3",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think for sure *should* define it here. but then this puts missing as a dep of things like hashing.pyx. ok with it being a dep of any of the tslibs though.\r\n\r\n```\r\n(pandas) bash-3.2$ find pandas -name '*.pyx' | xargs grep _checknull\r\npandas/_libs/hashing.pyx:from util cimport _checknull\r\npandas/_libs/hashing.pyx:        elif _checknull(val):\r\npandas/_libs/interval.pyx:        if util._checknull(interval):\r\npandas/_libs/lib.pyx:from util cimport is_array, _checknull, _checknan\r\npandas/_libs/lib.pyx:        return _checknull(val)\r\npandas/_libs/lib.pyx:        return _checknull(val)\r\npandas/_libs/lib.pyx:        result[i] = val is NaT or util._checknull_old(val)\r\npandas/_libs/lib.pyx:                _checknull(x) and _checknull(y)):\r\npandas/_libs/lib.pyx:    if _checknull(val):\r\npandas/_libs/lib.pyx:        if _checknull(x):\r\npandas/_libs/lib.pyx:            if _checknull(x):\r\npandas/_libs/lib.pyx:            elif _checknull(y):\r\npandas/_libs/src/inference.pyx:        if util._checknull(val):\r\npandas/_libs/src/inference.pyx:        elif util._checknull(v):\r\npandas/_libs/src/inference.pyx:    if util._checknull(v):\r\npandas/_libs/src/inference.pyx:    if util._checknull(v):\r\npandas/_libs/src/inference.pyx:    if util._checknull(v):\r\npandas/_libs/src/inference.pyx:    if util._checknull(v):\r\npandas/_libs/src/inference.pyx:        return util._checknull(value)\r\npandas/_libs/src/inference.pyx:            bint is_generic_null = util._checknull(value)\r\npandas/_libs/tslib.pyx:from tslibs.nattype cimport _checknull_with_nat, NPY_NAT\r\npandas/_libs/tslib.pyx:        if _checknull_with_nat(val):\r\npandas/_libs/tslib.pyx:            if _checknull_with_nat(val):\r\npandas/_libs/tslib.pyx:        if _checknull_with_nat(val):\r\npandas/_libs/tslib.pyx:            if _checknull_with_nat(val):\r\npandas/_libs/tslib.pyx:            if _checknull_with_nat(val):\r\npandas/_libs/tslib.pyx:            if _checknull_with_nat(val):\r\npandas/_libs/tslibs/nattype.pyx:cdef inline bint _checknull_with_nat(object val):\r\npandas/_libs/tslibs/strptime.pyx:from nattype cimport _checknull_with_nat, NPY_NAT\r\npandas/_libs/tslibs/strptime.pyx:            if _checknull_with_nat(val):\r\npandas/_libs/tslibs/timedeltas.pyx:from nattype cimport _checknull_with_nat, NPY_NAT\r\npandas/_libs/tslibs/timedeltas.pyx:    if _checknull_with_nat(ts):\r\npandas/_libs/tslibs/timedeltas.pyx:    if _checknull_with_nat(other):\r\npandas/_libs/tslibs/timedeltas.pyx:        elif _checknull_with_nat(value):\r\n```",
        "createdAt" : "2017-11-19T17:11:18Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a7032623-7489-4063-8482-77b9fe5cb25a",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "If we're moving util._checknull anyway, I'd advocate renaming it to e.g. `check_none_or_nan`",
        "createdAt" : "2017-11-19T17:11:54Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "52173b5e-199b-4259-9f0f-7ee6dcc84cac",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure",
        "createdAt" : "2017-11-19T17:13:56Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5bd0841b-b689-4a2e-b469-044e70c17513",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> I think for sure should define it here. but then this puts missing as a dep of things like hashing.pyx. ok with it being a dep of any of the tslibs though.\r\n\r\nI'll take a look and see which util funcs can be moved without messing with dependencies.\r\n\r\nFWIW this PR already adds missing to the 'pxdfiles` key of hashtable, which cimports missing.checknull.  Previously it was an un-declared dependency on lib.",
        "createdAt" : "2017-11-19T17:26:18Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3ed4f96d-163f-49d7-9787-16ff243e5ee3",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Looks like util._checknull_old can be moved to missing (is used there once, nowhere else).  Let's saving util._checknull for later, since it is used in a bunch of places.",
        "createdAt" : "2017-11-19T17:34:30Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e387eb8a-3a8b-4ff9-aa95-fb728f235a50",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok with leaving these for later as well",
        "createdAt" : "2017-11-19T17:35:35Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bcc4f338-ae83-4c30-a8cf-8264b0f267c7",
        "parentId" : "8bd9362a-2ab8-4aa6-a805-574565038bca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Sounds good.  Just pushed commit with docstrings.",
        "createdAt" : "2017-11-19T17:51:39Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e94e01fa8d2022650a85023183df7a2680261ec3",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@    elif util.is_array(val):\n        return False\n    else:\n        return util._checknull(val)\n"
  }
]