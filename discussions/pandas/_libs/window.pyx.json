[
  {
    "id" : "eb9c8d88-286c-4cfd-9d86-1fde3a8caa88",
    "prId" : 16247,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16247#pullrequestreview-37181994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9ae81e2-6777-4920-b61a-f6b8378fd74c",
        "parentId" : null,
        "authorId" : "dba5a4d5-8dc3-4549-9886-8ed279bce369",
        "body" : "Hadn't realized this before: `skiplist.get` is an O(log win) operation which we now have to perform twice. We also do a `skiplist.insert` and a `skiplist.remove`, which are also O(log win), and probably more expensive than `skiplist.get`, but a pessimistic estimation says the performance of this function will go down by 25%.\r\n\r\nI think there are two things to do here:\r\n\r\n 1. quantify that slow down by running a couple of benchmarks with and without this PR, and leave a record of the results for further reference.\r\n 2. if the slowdown is significant, we could gain the speed back by doing some changes to the skiplist internals: when the first index is fetched, getting the next one is trivially simple and cheap, so we could add a `.get_two()` method to `IndexableSkiplist` and use it here. I think that would be work for another PR, but creating an issue for tracking based on the results of the benchmarks should be part of merging this.",
        "createdAt" : "2017-05-09T09:01:49Z",
        "updatedAt" : "2017-07-07T16:19:20Z",
        "lastEditedBy" : "dba5a4d5-8dc3-4549-9886-8ed279bce369",
        "tags" : [
        ]
      },
      {
        "id" : "9fb3fbd3-4500-4d17-aacc-cb9d7a6fe106",
        "parentId" : "d9ae81e2-6777-4920-b61a-f6b8378fd74c",
        "authorId" : "a849772d-dc25-4b0b-95b1-218052276e07",
        "body" : "I ran some very simple performance tests. The new version is indeed 25% slower.\r\n\r\n*New*\r\n\r\n```python\r\nIn [1]: import pandas\r\nIn [2]: pandas.__version__\r\nOut[2]: '0.20.0+19.g36db9bdaf'\r\nIn [3]: import numpy as np\r\nIn [4]: df = pandas.DataFrame({'a': np.random.random(1000000)})\r\nIn [5]: %timeit df.a.rolling(10).quantile(0.5)\r\n1 loop, best of 3: 1.78 s per loop\r\nIn [6]: %timeit df.a.rolling(10).median()\r\n1 loop, best of 3: 460 ms per loop\r\n```\r\n*Old*\r\n\r\n```python\r\nIn [1]: import pandas\r\nIn [2]: pandas.__version__\r\nOut[2]: '0.20.1'\r\nIn [3]: import numpy as np\r\nIn [4]: df = pandas.DataFrame({'a': np.random.random(1000000)})\r\nIn [5]: %timeit df.a.rolling(10).quantile(0.5)\r\n1 loop, best of 3: 1.4 s per loop\r\nIn [6]: %timeit df.a.rolling(10).median()\r\n1 loop, best of 3: 451 ms per loop\r\n```\r\nYMMV, of course.",
        "createdAt" : "2017-05-09T15:41:26Z",
        "updatedAt" : "2017-07-07T16:19:20Z",
        "lastEditedBy" : "a849772d-dc25-4b0b-95b1-218052276e07",
        "tags" : [
        ]
      },
      {
        "id" : "e9f0edbe-ecd1-4f6c-b7d3-2949d181a410",
        "parentId" : "d9ae81e2-6777-4920-b61a-f6b8378fd74c",
        "authorId" : "dba5a4d5-8dc3-4549-9886-8ed279bce369",
        "body" : "Thanks for doing this! Seeing this, there is a more obvious approach to speeding this in a future PR: use the C implemented skiplist that median uses, instead of the Cython `IndexableSkiplist` used by quantile. But that's clearly a different PR.",
        "createdAt" : "2017-05-09T20:49:04Z",
        "updatedAt" : "2017-07-07T16:19:20Z",
        "lastEditedBy" : "dba5a4d5-8dc3-4549-9886-8ed279bce369",
        "tags" : [
        ]
      },
      {
        "id" : "f60eb3bd-35c6-4e9c-b1fb-bfa916f50649",
        "parentId" : "d9ae81e2-6777-4920-b61a-f6b8378fd74c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jaimefrio the issue is that for median you are only doing a single calculation. when doing *many* calculations (like here) a skip list is far faster. The actual impl of the skiplist could be improved a lot though (it has python objects inside it).",
        "createdAt" : "2017-05-09T23:39:00Z",
        "updatedAt" : "2017-07-07T16:19:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4080942107c217aef2ad54defd09928f6469f7fc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1401,1405 @@            else:\n                vlow = skiplist.get(idx)\n                vhigh = skiplist.get(idx + 1)\n                output[i] = (vlow + (vhigh - vlow) *\n                                 (quantile * (nobs - 1) - idx))"
  },
  {
    "id" : "de547222-d971-4317-b158-a9c3b82df6c0",
    "prId" : 18065,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18065#pullrequestreview-74748485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4d8a77d-7754-4c20-8c9b-70ea62ecb88a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the reference to _zero_fperr as well (back to here)",
        "createdAt" : "2017-11-07T13:37:08Z",
        "updatedAt" : "2017-11-07T13:51:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee5a33d6015771f44b9b9e55480a72bc032b2473",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +794,798 @@        #         large number.\n        #\n        #         in core/nanops.py nanskew/nankurt call the function\n        #         _zero_out_fperr(m2) to fix floating error.\n        #         if the variance is less than 1e-14, it could be"
  },
  {
    "id" : "c2c9d5cb-9f3f-43c7-a8b0-1409cd306ff6",
    "prId" : 18921,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18921#pullrequestreview-85867461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b43a5e-69d9-4010-8ef8-3bdb88694fda",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "nice!",
        "createdAt" : "2017-12-28T18:59:27Z",
        "updatedAt" : "2017-12-29T12:24:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a97e133bbe3e8bbc74fa8ecbc6331c4c7bfc4b77",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +493,497 @@        # fixed window\n\n        range_endpoint = int_max(minp, 1) - 1\n\n        with nogil:"
  },
  {
    "id" : "65d20fc0-824b-43b0-a6a4-141553809225",
    "prId" : 19549,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19549#pullrequestreview-95037797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3243cc12-ada0-4673-93de-55a8fc70c6d9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a description of the algorithm and a link (if available)",
        "createdAt" : "2018-02-08T11:22:29Z",
        "updatedAt" : "2018-02-12T04:37:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "65c0dbe757f9c7b8b138c6627070bccaaddc0f76",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1244,1248 @@\n    output = np.empty(N, dtype=input.dtype)\n\n    Q = deque[int64_t]()\n"
  },
  {
    "id" : "e1b0abbf-8d98-4710-96c4-9c9edc7d941b",
    "prId" : 20497,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20497#pullrequestreview-108439506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af9e90a6-b3f7-4b60-83d7-cbe1b8d10937",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Wouldn't this raise a `KeyError` not a `ValueError`?",
        "createdAt" : "2018-03-30T21:13:58Z",
        "updatedAt" : "2018-04-24T11:29:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cc7a71eb919cd84662cee4081269734fbeaf4fb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1397,1401 @@\n    try:\n        interpolation_type = interpolation_types[interpolation]\n    except KeyError:\n        raise ValueError(\"Interpolation '{}' is not supported\""
  },
  {
    "id" : "8261843c-e370-4366-a53f-7482744996b9",
    "prId" : 20497,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20497#pullrequestreview-112481860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6427eb25-f5f9-41e6-a34b-b05c630d0f29",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is there a test case to cover that this raises the expected error message when passing an invalid argument? If not can you add?",
        "createdAt" : "2018-04-01T14:56:27Z",
        "updatedAt" : "2018-04-24T11:29:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d15b246f-4815-49f6-b97d-200d23987451",
        "parentId" : "6427eb25-f5f9-41e6-a34b-b05c630d0f29",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Minor nit but can you place the name of the passed interpolation in single quotes? Helps distinguish it from the rest of the text in the error message (will need to update test as well)",
        "createdAt" : "2018-04-16T16:07:01Z",
        "updatedAt" : "2018-04-24T11:29:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9cc7a71eb919cd84662cee4081269734fbeaf4fb",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +1398,1402 @@    try:\n        interpolation_type = interpolation_types[interpolation]\n    except KeyError:\n        raise ValueError(\"Interpolation '{}' is not supported\"\n                         .format(interpolation))"
  },
  {
    "id" : "50527226-f850-42a1-9f98-d9a56d8976d2",
    "prId" : 22178,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22178#pullrequestreview-142965765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55eba512-986a-4a75-89fb-dd54b9158dd4",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@chris-b1 @jbrockmendel this changed between 0.23.x and master. On master we use\r\n\r\n```cython\r\ncdef extern from \"src/headers/cmath\" namespace \"std\":\r\n```\r\n\r\nBut here we use `../src/headers/cmath`. Does this look correct for 0.23.x?",
        "createdAt" : "2018-08-02T20:29:53Z",
        "updatedAt" : "2018-08-03T12:13:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "bfa23d55-1fbb-4d2f-b728-da2bdb474600",
        "parentId" : "55eba512-986a-4a75-89fb-dd54b9158dd4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This looks like something I would have nit-picked about.  The \"../\" is inaccurate in this context.  Evidently the cython/gcc compiler doesn't mind either way, but I'm pretty sure the one in master is More Correct.",
        "createdAt" : "2018-08-02T20:36:42Z",
        "updatedAt" : "2018-08-03T12:13:04Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7300fe7b2c57643fe7bc1a4a834a8b1fdb6bae3a",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +14,18 @@\n\ncdef extern from \"../src/headers/cmath\" namespace \"std\":\n    bint isnan(double) nogil\n    int signbit(double) nogil"
  },
  {
    "id" : "9cf118bc-e077-439a-937a-9154eb6f6b3d",
    "prId" : 25926,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25926#pullrequestreview-220828922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27ce79f2-874e-416c-828a-ad21d49c4188",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Any reason for keeping this an ndarray versus a memory view?",
        "createdAt" : "2019-03-30T16:55:32Z",
        "updatedAt" : "2019-03-31T20:02:49Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d0849aac-f1f1-48d2-a5c1-06e33113fe5d",
        "parentId" : "27ce79f2-874e-416c-828a-ad21d49c4188",
        "authorId" : "3cf21736-8210-430b-9ff1-610530ed90f8",
        "body" : "There is no need to convert that one to a memoryview.  The values array comes from a python object and doesn't have the same memory leak issue as the `ndarry`s that comes from the cdef in `_roll_min_max`",
        "createdAt" : "2019-03-30T17:08:33Z",
        "updatedAt" : "2019-03-31T20:02:49Z",
        "lastEditedBy" : "3cf21736-8210-430b-9ff1-610530ed90f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d9f93a4f129cd30470ee1ecd50993420d7fcccd",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1267,1271 @@\n\ncdef _roll_min_max_variable(ndarray[numeric] values,\n                            ndarray[int64_t] starti,\n                            ndarray[int64_t] endi,"
  },
  {
    "id" : "de8900ce-982d-45c0-b47d-2ad930d9f732",
    "prId" : 27371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27371#pullrequestreview-261552086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a338a041-0f41-42b1-bb5f-2ec4c72e09c9",
        "parentId" : null,
        "authorId" : null,
        "body" : "```\r\npandas/_libs/window.cpp:43820:21: warning: ‘__pyx_pybuffernd_tot_wgt.__Pyx_LocalBuf_ND::diminfo[0].__Pyx_Buf_DimInfo::strides’ \r\nmay be used uninitialized in this function [-Wmaybe-uninitialized]\r\n43820 |   __Pyx_LocalBuf_ND __pyx_pybuffernd_tot_wgt;\r\n```",
        "createdAt" : "2019-07-13T03:17:24Z",
        "updatedAt" : "2019-07-13T03:17:25Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "5db20809-f299-4b9a-96fc-e4391c640217",
        "parentId" : "a338a041-0f41-42b1-bb5f-2ec4c72e09c9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Are you saying this resolved that issue or introduced it?\r\n\r\nIf resolved change lgtm just want to clarify",
        "createdAt" : "2019-07-13T16:52:16Z",
        "updatedAt" : "2019-07-13T16:52:16Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "92805de0-825c-480b-aaeb-b18761d8b354",
        "parentId" : "a338a041-0f41-42b1-bb5f-2ec4c72e09c9",
        "authorId" : null,
        "body" : "I should have put the comment one line up. The change fixes this warning, which occurs because of the original line.",
        "createdAt" : "2019-07-13T18:33:00Z",
        "updatedAt" : "2019-07-13T18:33:00Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "085a0623e282660bb8577fa9edfca0c5d79d1a2a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1683,1687 @@    \"\"\"\n    cdef:\n        float64_t[:] output, tot_wgt, counts\n        Py_ssize_t in_i, win_i, win_n, in_n\n        float64_t val_in, val_win, c, w"
  },
  {
    "id" : "c42b5d15-9f27-4e3c-8aa7-dc4b8eb76c7a",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-269748156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df86ca17-1ab3-4bbe-a33a-f817f2937c53",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Would this only be negative if the weight was negative which we should validate much earlier?",
        "createdAt" : "2019-08-01T06:14:08Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "8234f07f-de4f-4842-b0ba-c6d50926f0e9",
        "parentId" : "df86ca17-1ab3-4bbe-a33a-f817f2937c53",
        "authorId" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "body" : "I guess it might be if one weight is negative and another is positive but not necessarily",
        "createdAt" : "2019-08-01T16:48:41Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "fd6a3bb0-1e01-4fbd-9d3f-28cd7cd4505e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +1800,1804 @@        else:\n            result = t * win_n / ((win_n - ddof) * sum_w)\n            if result < 0:\n                result = 0\n    else:"
  },
  {
    "id" : "85ab9750-a74a-4d64-b51e-7fc93197a839",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-269771056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b210b63-c357-421b-98e9-e6efab14dc57",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you add a docstring here and document what gets mutated?",
        "createdAt" : "2019-08-01T17:38:06Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +1808,1812 @@\n\ncdef inline void add_weighted_var(float64_t val,\n                                  float64_t w,\n                                  float64_t *t,"
  },
  {
    "id" : "1d218f65-f392-4149-b748-c7cb7fdb3dda",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-269771056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccefbfed-f75f-40fc-8e7f-15c73d40ea85",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Same comment",
        "createdAt" : "2019-08-01T17:40:15Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +1854,1858 @@\n\ncdef inline void remove_weighted_var(float64_t val,\n                                     float64_t w,\n                                     float64_t *t,"
  },
  {
    "id" : "2e768a75-8c1c-43f6-a7b4-221cf6672abb",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-270136173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daf592dd-8e3f-45e7-86c9-f57b8fbc9dc7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string",
        "createdAt" : "2019-08-02T11:58:21Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1791,1795 @@    cdef:\n        float64_t result\n\n    # Variance is unchanged if no observation is added or removed\n    if (nobs >= minp) and (nobs > ddof):"
  },
  {
    "id" : "bbf8b4f7-dd47-44bf-83c2-6696b06d96e5",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-270136173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8de13d01-4232-45b6-b6ad-0e077501ba91",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add paramters to the doc-string",
        "createdAt" : "2019-08-02T11:58:37Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +1818,1822 @@    differences to include value and weight pair in weighted variance\n    calculation using West's method.\n\n    Paper: https://dl.acm.org/citation.cfm?id=359153\n"
  },
  {
    "id" : "0c154b7e-8225-4519-8725-508cbb8e0a04",
    "prId" : 27682,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27682#pullrequestreview-270136173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc33ece0-69fa-4363-8480-3e7afea0cec8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2019-08-02T11:58:44Z",
        "updatedAt" : "2019-11-08T10:42:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c06f2b6c81e8682159b1a98fbd33271ca0dce28b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +1860,1864 @@                                     float64_t *mean,\n                                     float64_t *nobs) nogil:\n    \"\"\"\n    Update weighted mean, sum of weights and sum of weighted squared\n    differences to remove value and weight pair from weighted variance"
  }
]