[
  {
    "id" : "f90b52b5-92db-46c6-86e1-eb1650503dd0",
    "prId" : 17903,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17903#pullrequestreview-71035552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d9eaa67-78e8-4087-89de-ce969570ce9e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can put the sorted_nanmask for all dtypes",
        "createdAt" : "2017-10-20T13:34:27Z",
        "updatedAt" : "2017-12-04T15:42:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9ef78a07-d717-4805-b199-b16deff962f4",
        "parentId" : "3d9eaa67-78e8-4087-89de-ce969570ce9e",
        "authorId" : "4cd6c97a-353d-414a-949a-1e0cfc3a0c8a",
        "body" : "Yes , you are right. I should add for all dtypes.",
        "createdAt" : "2017-10-22T14:54:04Z",
        "updatedAt" : "2017-12-04T15:42:05Z",
        "lastEditedBy" : "4cd6c97a-353d-414a-949a-1e0cfc3a0c8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "987fb9d76f10c3c5bba4a2fd1dc7f86e0ec6d70f",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +44,48 @@\n        {{if dtype == 'object'}}\n        ndarray sorted_data, values\n        {{else}}\n        ndarray[{{ctype}}] sorted_data, values"
  },
  {
    "id" : "ec4988a6-f003-4ead-afdd-db3244119a85",
    "prId" : 18357,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18357#pullrequestreview-77656838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6e008da-3234-47ed-94ff-a455e7dbf0ca",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these could be cimports instead?",
        "createdAt" : "2017-11-19T19:59:02Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "43b0165c-2770-4f05-94c1-7b57a844c896",
        "parentId" : "d6e008da-3234-47ed-94ff-a455e7dbf0ca",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ATM these are not `cdef`",
        "createdAt" : "2017-11-19T21:59:43Z",
        "updatedAt" : "2017-11-22T17:49:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e94e01fa8d2022650a85023183df7a2680261ec3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +84,88 @@\n    {{if dtype == 'object'}}\n    mask = missing.isnaobj(values)\n    {{elif dtype == 'float64'}}\n    mask = np.isnan(values)"
  },
  {
    "id" : "95912ddf-a5b8-4ad2-8751-4dfe10a98f84",
    "prId" : 28978,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28978#pullrequestreview-301617196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c10cbdc5-4e18-49c2-bdda-b6fb761eaf4a",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Why do we need this change?",
        "createdAt" : "2019-10-15T01:41:37Z",
        "updatedAt" : "2019-10-15T01:41:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "a2d3abd8-ddf6-44f7-bb42-8abeece698f9",
        "parentId" : "c10cbdc5-4e18-49c2-bdda-b6fb761eaf4a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because without it cython raises at compile-time because it in_arr and values have different types",
        "createdAt" : "2019-10-15T01:54:14Z",
        "updatedAt" : "2019-10-15T01:54:14Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6d941ac7becf7a2ebc100abdfc2877a572b902f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +230,234 @@        values = np.asarray(in_arr).T.copy()\n    else:\n        values = np.asarray(in_arr).copy()\n\n    {{if dtype == 'object'}}"
  },
  {
    "id" : "54219c4c-8d24-48d2-b895-2bdde4efe6d3",
    "prId" : 29044,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29044#pullrequestreview-302933395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15c3b5a7-8364-4fb8-ac87-b0f564f0dfee",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Not necessarily in scope for this but would be nice if there was a better way to do this via fused types (a dict or inline func?)",
        "createdAt" : "2019-10-16T23:15:26Z",
        "updatedAt" : "2019-10-17T18:57:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c12c8e37-2f68-4b09-967f-5f386fdd896c",
        "parentId" : "15c3b5a7-8364-4fb8-ac87-b0f564f0dfee",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah I've been giving that some thought.  I think we can do that with something like:\r\n\r\n```\r\ncdef inline rank_t get_thing(rank_t val):  # <-- totally ignore `val`, just care about rank_t\r\n    if rank_t is object: ...\r\n\r\ndef actual_func(rank_t ...):\r\n    cdef:\r\n          rank_t val, thing\r\n    \r\n    thing = get_thing(val)\r\n```",
        "createdAt" : "2019-10-16T23:28:37Z",
        "updatedAt" : "2019-10-17T18:57:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9473aa79594e617962811e2360f4a5f6e067ef69",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +72,76 @@    if rank_t is not uint64_t:\n        if ascending ^ (na_option == 'top'):\n            if rank_t is object:\n                nan_value = Infinity()\n            elif rank_t is float64_t:"
  },
  {
    "id" : "ea193e03-4f02-43ee-afa8-6de2ea21d526",
    "prId" : 29044,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29044#pullrequestreview-302932189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97331331-b0fd-496b-96d2-b0eb24cc519c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Maybe reading wrong but this is duplicated in each conditional branch? Could clean in follow up if so",
        "createdAt" : "2019-10-16T23:18:00Z",
        "updatedAt" : "2019-10-17T18:57:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "49caa4dd-b278-45e6-bb2b-8eb0de70bf04",
        "parentId" : "97331331-b0fd-496b-96d2-b0eb24cc519c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "agreed",
        "createdAt" : "2019-10-16T23:24:32Z",
        "updatedAt" : "2019-10-17T18:57:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9473aa79594e617962811e2360f4a5f6e067ef69",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +102,106 @@        if tiebreak == TIEBREAK_FIRST:\n            # need to use a stable sort here\n            _as = np.lexsort(keys=order)\n            if not ascending:\n                tiebreak = TIEBREAK_FIRST_DESCENDING"
  },
  {
    "id" : "c892e962-89fb-421d-ae62-74194cec1e98",
    "prId" : 29044,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29044#pullrequestreview-303575934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ce2dab1-a323-432a-ae5b-1b94c5364d1e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some comments here",
        "createdAt" : "2019-10-17T21:54:46Z",
        "updatedAt" : "2019-10-17T21:55:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ae86b37d-752f-4c41-a613-f5769e8ddb02",
        "parentId" : "8ce2dab1-a323-432a-ae5b-1b94c5364d1e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can you be more specific?  there is a pretty nice comment up on L69",
        "createdAt" : "2019-10-17T22:11:16Z",
        "updatedAt" : "2019-10-17T22:11:16Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9473aa79594e617962811e2360f4a5f6e067ef69",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +79,83 @@                nan_value = np.iinfo(np.int64).max\n\n            order = (values, mask)\n        else:\n            if rank_t is object:"
  },
  {
    "id" : "edbed88f-aac9-4707-bedc-61ca197dcf93",
    "prId" : 29044,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29044#pullrequestreview-303569429",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32efd5b1-d411-4baf-b8e3-448e6635923c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comments here as well",
        "createdAt" : "2019-10-17T21:55:22Z",
        "updatedAt" : "2019-10-17T21:55:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9473aa79594e617962811e2360f4a5f6e067ef69",
    "line" : 387,
    "diffHunk" : "@@ -1,1 +279,283 @@                nan_value = Infinity()\n            elif rank_t is float64_t:\n                nan_value = np.inf\n            elif rank_t is int64_t:\n                nan_value = np.iinfo(np.int64).max"
  }
]