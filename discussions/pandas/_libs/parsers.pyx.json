[
  {
    "id" : "8154fe47-5400-4e33-ae56-196dfb666b22",
    "prId" : 17643,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17643#pullrequestreview-65319882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "591d4aa2-5351-41fa-b918-40dbc086374a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "str -> string_types",
        "createdAt" : "2017-09-26T18:51:25Z",
        "updatedAt" : "2017-10-02T11:45:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9325a9345f3a4495ff81eb692121c194d8d7c040",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +2228,2232 @@        dtype = dtypes.pop()\n        if is_categorical_dtype(dtype):\n            sort_categories = isinstance(dtype, str)\n            result[name] = union_categoricals(arrs,\n                                              sort_categories=sort_categories)"
  },
  {
    "id" : "d6b82fc5-a14d-4e84-a3dd-be4c282fa38e",
    "prId" : 18091,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18091#pullrequestreview-74068898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4494e55d-ee6b-4877-9675-ec6978a064df",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here on what is going on",
        "createdAt" : "2017-11-03T12:51:24Z",
        "updatedAt" : "2017-11-03T20:29:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a06857f6189d9c147ad4ff9f3b90f5ee8d51e89",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +686,690 @@                                 self.compression)\n\n            if b'utf-16' in (self.encoding or b''):\n                # we need to read utf-16 through UTF8Recoder.\n                # if source is utf-16, convert source to utf-8 by UTF8Recoder."
  },
  {
    "id" : "961f4f0b-7e78-4758-a44c-a1ee23f92262",
    "prId" : 18663,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18663#pullrequestreview-81818759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "578584e6-4e7f-4ceb-a942-b7c6b0649e9b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@chris-b1, @gfyoung don't we have an issue to remove support for structured arrays entirely? is that already deprecated?",
        "createdAt" : "2017-12-07T11:15:01Z",
        "updatedAt" : "2017-12-07T23:45:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0627b5b3-0abf-44aa-a9b7-a97a9b1aa080",
        "parentId" : "578584e6-4e7f-4ceb-a942-b7c6b0649e9b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if not let's create one (and deprecate in 0.22)",
        "createdAt" : "2017-12-07T11:15:19Z",
        "updatedAt" : "2017-12-07T23:45:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "274dafb12d6fc03a9071bdf23f43081e8bc9cf41",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +93,97 @@cdef extern from \"src/numpy_helper.h\":\n    object sarr_from_data(cnp.dtype, int length, void* data)\n    void transfer_object_column(char *dst, char *src, size_t stride,\n                                size_t length)\n"
  },
  {
    "id" : "0d3c5aa4-60cf-4d8b-b4ca-c15feaaa2cd7",
    "prId" : 19380,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19380#pullrequestreview-91395554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ebd2616-f023-4f04-a912-6116b6be0dcb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are we not linting these .pyx for the 2 blank lines between functions?",
        "createdAt" : "2018-01-25T00:57:21Z",
        "updatedAt" : "2018-01-25T00:57:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e3cdd975-ae38-4016-aa65-8f89e95c35f1",
        "parentId" : "1ebd2616-f023-4f04-a912-6116b6be0dcb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "flake8 chokes on a SyntaxError as soon as it hits a `cimport`",
        "createdAt" : "2018-01-25T02:16:15Z",
        "updatedAt" : "2018-01-25T02:16:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce6e9945fdacb067ee056a959713d39354c98aec",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +1450,1454 @@    return result, na_count\n\n\ncdef _string_box_utf8(parser_t *parser, int64_t col,\n                      int64_t line_start, int64_t line_end,"
  },
  {
    "id" : "08022e9f-d6d3-45f4-aa5a-91c3168b33ba",
    "prId" : 23072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23072#pullrequestreview-176127767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35f33284-c182-460e-86e0-d44845b84161",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move the commment before the try",
        "createdAt" : "2018-11-03T14:23:02Z",
        "updatedAt" : "2018-11-19T02:40:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "070b3d5e-b2d9-420c-974c-546824240e22",
        "parentId" : "35f33284-c182-460e-86e0-d44845b84161",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Done.",
        "createdAt" : "2018-11-19T02:40:18Z",
        "updatedAt" : "2018-11-19T02:40:35Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "36c1104b7ad9761e020f7e8198eb60da4045d169",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1112,1116 @@            # Attempt to parse tokens and infer dtype of the column.\n            # Should return as the desired dtype (inferred or specified).\n            try:\n                col_res, na_count = self._convert_tokens(\n                    i, start, end, name, na_filter, na_hashset,"
  },
  {
    "id" : "28eab47d-6398-4344-999c-670092675629",
    "prId" : 23255,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23255#pullrequestreview-182991231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb77ff6-208e-40f3-8c53-fddca827a176",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what is this for?",
        "createdAt" : "2018-12-09T18:45:58Z",
        "updatedAt" : "2019-01-02T02:01:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "de4935ed-0d57-4b95-9e5d-1d87dc088f6d",
        "parentId" : "ccb77ff6-208e-40f3-8c53-fddca827a176",
        "authorId" : "287271b7-536e-4f62-9f31-06429d0563b6",
        "body" : "without this the `np.concatenate` call will return the `arrs` back to an `np.object_` array again.",
        "createdAt" : "2018-12-09T19:30:51Z",
        "updatedAt" : "2019-01-02T02:01:21Z",
        "lastEditedBy" : "287271b7-536e-4f62-9f31-06429d0563b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f42235aad6aa0dcdb4d3324792001062a7242c43",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +2190,2194 @@                                              sort_categories=sort_categories)\n        else:\n            if is_extension_array_dtype(dtype):\n                array_type = dtype.construct_array_type()\n                result[name] = array_type._concat_same_type(arrs)"
  },
  {
    "id" : "88a42cc3-fc60-4a08-bd5b-8940e09ecdb2",
    "prId" : 23255,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23255#pullrequestreview-188447832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5c394b3-a477-47db-9660-b9f67727b20a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move this comment above the ``try_upcast = ``",
        "createdAt" : "2018-12-30T18:45:25Z",
        "updatedAt" : "2019-01-02T02:01:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f42235aad6aa0dcdb4d3324792001062a7242c43",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1123,1127 @@                    self._free_na_set(na_hashset)\n\n            # don't try to upcast EAs\n            try_upcast = upcast_na and na_count > 0\n            if try_upcast and not is_extension_array_dtype(col_dtype):"
  },
  {
    "id" : "6e8da136-e19b-46ea-8f25-ebba61142be7",
    "prId" : 23484,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23484#pullrequestreview-171859364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dc78a82-9e69-4483-83ab-188b0eda6a54",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it seems like you could just add ``unamed_cols.add(name)`` at line 774 (e.g. after the ``if name == ''`` ?",
        "createdAt" : "2018-11-06T03:22:38Z",
        "updatedAt" : "2018-11-06T03:22:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3990acc7-869e-4ef2-8953-e9bea99d3623",
        "parentId" : "7dc78a82-9e69-4483-83ab-188b0eda6a54",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Not quite.  You need to add the name that you get post-mangling (e.g. if there are dupes).  That's why you have to \"keep track\" after the logic ending at 794.",
        "createdAt" : "2018-11-06T04:16:19Z",
        "updatedAt" : "2018-11-06T04:16:19Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "e18fef9b8e68d2afc18b018c16ba2c2e40131b6a",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +794,798 @@                            count = counts.get(name, 0)\n\n                    if old_name == '':\n                        unnamed_cols.add(name)\n"
  },
  {
    "id" : "1f15d81e-568e-44d9-83b3-68be23a00fbc",
    "prId" : 25804,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25804#pullrequestreview-217829959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5b58f5e-de1b-440c-968e-3059d8eac00f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is there a ballpark estimate for how much more memory this might be using? I feel if anything we get more issues for read_csv in regards to high memory usage than slow parsing so just want to be careful of tradeoffs that we make, especially since we don't have any memory benchmarks set up",
        "createdAt" : "2019-03-22T15:02:41Z",
        "updatedAt" : "2019-03-22T15:02:45Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "4e733e23-5598-413e-8a13-6b64abe33037",
        "parentId" : "a5b58f5e-de1b-440c-968e-3059d8eac00f",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "Worst case would be when `bucket_size` was increased from 128 to 1024.\r\nMemory for 128-sized table (on x86_64) ~3.6 KB, for 1024-sized table (on x86_64) ~21.04 KB.\r\n\r\nFor default case bucket size is 32, so memory is increased from 1.67 KB to 6.04 KB.\r\n\r\nI think it's acceptable to trade about 15 more KB (as there are typically three such maps - NA values, true-ish values, false-ish values) to gain up to 15% of parsing speed.\r\n\r\nP.S. Memory size formula where `B` is `bucket_size`:\r\n```c++\r\nsizeof(khint32_t) * 4 + sizeof(void*) * 3 + B * (sizeof(khint32_t) + sizeof(char*) + sizeof(size_t)) + 256 * sizeof(int)\r\n```\r\nwhich gives `1064 + B * 20` bytes  (again on x86_64).",
        "createdAt" : "2019-03-22T15:25:02Z",
        "updatedAt" : "2019-03-22T15:25:57Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      },
      {
        "id" : "68817c6d-ca8e-4285-8b54-c4e44194baee",
        "parentId" : "a5b58f5e-de1b-440c-968e-3059d8eac00f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "My math might be fuzzy but assuming someone is parsing say 10M records and this increases the size of each record by 15kb, would that require roughly 150MB more of memory? \r\n",
        "createdAt" : "2019-03-22T15:35:49Z",
        "updatedAt" : "2019-03-22T15:35:49Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "532be985-a0fe-4bdb-9fb3-e4060e548f3b",
        "parentId" : "a5b58f5e-de1b-440c-968e-3059d8eac00f",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "It is 15 KB _per parser_, not per record :)\r\nSo in a typical case (when one parser exists at a time) it's only 15 KB more.",
        "createdAt" : "2019-03-22T15:42:11Z",
        "updatedAt" : "2019-03-22T15:42:11Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      },
      {
        "id" : "79099e06-01f9-43ad-b669-9738b1e68efd",
        "parentId" : "a5b58f5e-de1b-440c-968e-3059d8eac00f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Ha thanks for clarifying. I suppose that's quite the difference",
        "createdAt" : "2019-03-22T15:42:43Z",
        "updatedAt" : "2019-03-22T15:42:43Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ceb8501723bd0e96e2bb2fac543cae8c85553df",
    "line" : 473,
    "diffHunk" : "@@ -1,1 +2095,2099 @@        # reduces amount of hash collisions on lookup thus\n        # \"key not in table\" case is faster.\n        # Note that this trades table memory footprint for lookup speed.\n        kh_resize_str_starts(table, table.table.n_buckets * 8)\n"
  },
  {
    "id" : "73e08d8c-e2b5-4f92-9c89-f8b9687f18e0",
    "prId" : 26270,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26270#pullrequestreview-233290028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3d3ff7c-6d46-4fb4-8fe8-3737fadf6594",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This was orthogonal but figured preferable to import this way rather than through Python header (cython doesn't expose the last remaining item coming from Python.h)",
        "createdAt" : "2019-05-03T00:11:56Z",
        "updatedAt" : "2019-05-03T00:13:17Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d72d05a6cef7628c309562f0f75af9d39f93a1f9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +23,27 @@                      PyUnicode_AsUTF8String,\n                      PyErr_Occurred, PyErr_Fetch,\n                      PyUnicode_Decode)\nfrom cpython.ref cimport Py_XDECREF\n"
  },
  {
    "id" : "0ca77661-fd68-405d-9b4d-acaa23f7f715",
    "prId" : 26386,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26386#pullrequestreview-237359640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b61ffeb5-1538-4026-b4c0-c94586e01885",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would rather write out the 3 float_precision cases explicity, e.g. if/elif/else",
        "createdAt" : "2019-05-14T11:59:54Z",
        "updatedAt" : "2019-05-14T16:21:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "49b09a54-62d7-4e48-927a-1f70f4e7dcf5",
        "parentId" : "b61ffeb5-1538-4026-b4c0-c94586e01885",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Done.",
        "createdAt" : "2019-05-14T16:22:02Z",
        "updatedAt" : "2019-05-14T16:22:02Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "4196a4922fa7226f701cf079baf843cfc2aa98fa",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +487,491 @@            self.parser.double_converter_withgil = NULL\n            self.parser.double_converter_nogil = precise_xstrtod\n        else:\n            self.parser.double_converter_withgil = NULL\n            self.parser.double_converter_nogil = xstrtod"
  },
  {
    "id" : "c54b1fd5-8472-4120-912a-12312faefb18",
    "prId" : 30369,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30369#pullrequestreview-335049944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16d1d672-57fb-43c7-848a-6f54620f74f7",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "comment is now extraneous",
        "createdAt" : "2019-12-20T03:11:33Z",
        "updatedAt" : "2020-01-02T00:04:16Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c8dea4af8a4d8f555a953ddd8e9b989a836b05e",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +171,175 @@        int64_t skip_first_N_rows\n        int64_t skipfooter\n        # pick one, depending on whether the converter requires GIL\n        float64_t (*double_converter)(const char *, char **,\n                                      char, char, char,"
  },
  {
    "id" : "7bc5e8f8-1770-43ea-b0e0-0b17cf7c0ee3",
    "prId" : 33126,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33126#pullrequestreview-383760032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e244e083-7945-4568-8a85-8dc1102c563e",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "bytes?",
        "createdAt" : "2020-03-29T19:52:24Z",
        "updatedAt" : "2020-04-03T09:16:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b317d262-01a6-4bdd-9088-a66c2e8d9782",
        "parentId" : "e244e083-7945-4568-8a85-8dc1102c563e",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "When trying to have ```bytes quotechar=b'\"'```, ```pytest``` is having a segfault.\r\n\r\n---\r\n\r\n```bash\r\n$ pytest -q --cache-clear pandas/tests/io/parser/test_common.py\r\n```\r\n\r\nOutputs the following:\r\n\r\n<details>\r\n\r\n```\r\n.Fatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x000064a291f35740 (most recent call first):\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/io/parsers.py\", line 1935 in __init__\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/io/parsers.py\", line 1112 in _make_engine\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/io/parsers.py\", line 880 in __init__\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/io/parsers.py\", line 449 in _read\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/io/parsers.py\", line 676 in parser_f\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/tests/io/parser/conftest.py\", line 22 in read_csv\r\n  File \"/home/bummy/Documents/Github/Community/Python/Projects/pandas-MomIsBestFriend/pandas/tests/io/parser/test_common.py\", line 82 in test_empty_decimal_marker\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/python.py\", line 184 in pytest_pyfunc_call\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 86 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 92 in _hookexec\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/python.py\", line 1479 in runtest\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 135 in pytest_runtest_call\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 86 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 92 in _hookexec\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 217 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 244 in from_call\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 217 in call_runtest_hook\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 186 in call_and_report\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 100 in runtestprotocol\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/runner.py\", line 85 in pytest_runtest_protocol\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 86 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 92 in _hookexec\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/main.py\", line 272 in pytest_runtestloop\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 86 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 92 in _hookexec\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/main.py\", line 247 in _main\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/main.py\", line 191 in wrap_session\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/main.py\", line 240 in pytest_cmdline_main\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 86 in <lambda>\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/manager.py\", line 92 in _hookexec\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 125 in main\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/bin/pytest\", line 11 in <module>\r\nSegmentation fault (core dumped)\r\n\r\n```\r\n\r\n</details>\r\n\r\n---\r\n\r\nI believe that this has nothing to do with ```pytest``` but with ```python``` it self, because the first line in the error message is: ```Fatal Python error: Segmentation fault```",
        "createdAt" : "2020-03-30T11:25:12Z",
        "updatedAt" : "2020-04-03T09:16:43Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe34a44bbc11d64a72e37c196932242c50769e6e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +311,315 @@                  escapechar=None,\n                  bint doublequote=True,\n                  quotechar=b'\"',\n                  quoting=0,\n                  lineterminator=None,"
  },
  {
    "id" : "a3ef57ed-bb55-47a9-aa86-30bd22cf570b",
    "prId" : 33126,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33126#pullrequestreview-383777242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "165b6449-7f31-49b3-a830-1932ded00239",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does this actually change anything? I'm surprised would have to declare this on both sides of the assignment",
        "createdAt" : "2020-03-30T03:38:51Z",
        "updatedAt" : "2020-04-03T09:16:43Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "10fc7998-7de9-4b09-8499-818e3473f439",
        "parentId" : "165b6449-7f31-49b3-a830-1932ded00239",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "If we have the line:\r\n\r\n```cython\r\nlist header\r\n```\r\n\r\ninstead of:\r\n\r\n```cython\r\nlist header = []\r\n```\r\n\r\n```cython``` raises with \r\n\r\n> local variable 'header' referenced before assignment\r\n\r\n---\r\n\r\nFull error message:\r\n\r\n<details>\r\n\r\n```\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n                            hr -= 1\r\n                            self.parser_start -= 1\r\n                            this_header = [None] * lc\r\n\r\n                data_line = hr + 1\r\n                header.append(this_header)\r\n               ^\r\n------------------------------------------------------------\r\n\r\npandas/_libs/parsers.pyx:769:16: local variable 'header' referenced before assignment\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 791, in <module>\r\n    setup_package()\r\n  File \"setup.py\", line 761, in setup_package\r\n    ext_modules=maybe_cythonize(extensions, compiler_directives=directives),\r\n  File \"setup.py\", line 534, in maybe_cythonize\r\n    return cythonize(extensions, *args, **kwargs)\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1102, in cythonize\r\n    cythonize_one(*args)\r\n  File \"/home/bummy/miniconda3/envs/pandas-dev/lib/python3.7/site-packages/Cython/Build/Dependencies.py\", line 1225, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: pandas/_libs/parsers.pyx\r\n```\r\n\r\n</details>\r\n",
        "createdAt" : "2020-03-30T11:51:50Z",
        "updatedAt" : "2020-04-03T09:16:43Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe34a44bbc11d64a72e37c196932242c50769e6e",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +679,683 @@            char *errors = \"strict\"\n            StringPath path = _string_path(self.c_encoding)\n            list header = []\n            set unnamed_cols = set()\n"
  },
  {
    "id" : "2b63d22d-b78b-462c-b23e-d550257d5c1e",
    "prId" : 39777,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39777#pullrequestreview-602388417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a609851c-0d3c-4116-afe6-103b4a1501fd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you assert the valid values here that are allowed (or if this is not validated at a higher level could raise ValueError on an illegal value). do we have tests for same?",
        "createdAt" : "2021-03-02T22:07:01Z",
        "updatedAt" : "2021-03-09T01:56:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d8a5e66b-8606-4883-8d7c-e987e22efeb0",
        "parentId" : "a609851c-0d3c-4116-afe6-103b4a1501fd",
        "authorId" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "body" : "I will add a test in `get_handle`. That will fire for the python/c-engine.",
        "createdAt" : "2021-03-03T00:10:18Z",
        "updatedAt" : "2021-03-09T01:56:56Z",
        "lastEditedBy" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "029c61c80dbc06ede6d79bd0804104531f5f3996",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +386,390 @@            encoding_errors = encoding_errors.encode(\"utf-8\")\n        Py_INCREF(encoding_errors)\n        self.encoding_errors = PyBytes_AsString(encoding_errors)\n\n        self.parser = parser_new()"
  },
  {
    "id" : "610e5ef6-5324-47c4-9385-c064e34fa4e4",
    "prId" : 40413,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40413#pullrequestreview-631927948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e32f94a0-2951-4b89-a3ed-a7f2c9a5353e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is pretty sketch that we do this, but that's for another day",
        "createdAt" : "2021-04-09T00:08:06Z",
        "updatedAt" : "2021-05-05T13:56:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f28316bc12017db68d933ce6cf8f0a89e5d6682a",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +456,460 @@        # XXX\n        if skipfooter > 0:\n            self.parser.on_bad_lines = SKIP\n\n        self.delimiter = delimiter"
  },
  {
    "id" : "67d1506f-752a-4f72-8fd9-2b1ca77eb7d9",
    "prId" : 40649,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40649#pullrequestreview-633574120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81ba3492-9361-4c0b-8dcb-cf160430399a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a similar comment to below (e.g. for future readers what are the inference rules)",
        "createdAt" : "2021-04-12T14:01:50Z",
        "updatedAt" : "2021-04-16T03:27:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb0fef00d755ed82455914be9bf2e94b5935e390",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +709,713 @@\n                        # if wrong number of blanks or no index, not our format\n                        if (lc != unnamed_count and lc - ic > unnamed_count) or ic == 0:\n                            hr -= 1\n                            self.parser_start -= 1"
  }
]