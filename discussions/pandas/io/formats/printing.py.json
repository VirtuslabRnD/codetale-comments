[
  {
    "id" : "4e7160f6-9cb4-4f4b-93e5-e66e7138b5ad",
    "prId" : 22511,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22511#pullrequestreview-152032322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2252187f-c7d1-4c38-9eb1-211070a1eb39",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give a comment fro each if/elif",
        "createdAt" : "2018-09-04T12:21:39Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d96c98c94a5f98dd44228b2770e9c64ddaabd64",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +365,369 @@        # adjust all values to max length if needed\n        if is_justify:\n            if line_break_each_value:\n                # Justify each string in the values of head and tail, so the\n                # strings will right align when head and tail are stacked"
  },
  {
    "id" : "cc39f101-28b6-41ce-8bbe-7cd29c19ca36",
    "prId" : 22511,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22511#pullrequestreview-152087842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6a14d4d-69e2-431d-a38d-43203ec47491",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this be elif?",
        "createdAt" : "2018-09-04T12:21:53Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "be765ab2-f5a5-4a01-9b95-3d29a7377951",
        "parentId" : "a6a14d4d-69e2-431d-a38d-43203ec47491",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "No, ``if`` is correct.\r\n\r\nAfter ``if``  head and tail are of type List[Tuple[str]]. In this section  we convert them into List[str], so there will be one string for each value (each tuple in the case of MultiIndex). Also we truncate horizontally if needed.\r\n\r\nI'll add a note on this.",
        "createdAt" : "2018-09-04T14:16:55Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d96c98c94a5f98dd44228b2770e9c64ddaabd64",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +379,383 @@            # line, then don't justify\n\n        if line_break_each_value:\n            # Now head and tail are of type List[Tuple[str]]. Below we\n            # convert them into List[str], so there will be one string per"
  },
  {
    "id" : "c58b15a5-9b6f-417e-a790-e5108a68f126",
    "prId" : 22511,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22511#pullrequestreview-215946792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80dc66ce-cd09-4a98-add4-f3bb5febddcc",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Format here should be `object : type` and the description should come on the next line (applicable to all items here)",
        "createdAt" : "2019-03-19T03:29:28Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d96c98c94a5f98dd44228b2770e9c64ddaabd64",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +438,442 @@    Parameters\n    ----------\n    head : list-like of list-likes of strings\n    tail : list-like of list-likes of strings\n"
  },
  {
    "id" : "f8ae7591-5ea5-4a3b-b3f4-776e88940e69",
    "prId" : 22511,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22511#pullrequestreview-217591924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1356a6-6ce7-4ce2-a312-cf5a8aed65f5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Are there any tests that hit this being False? AFAICT added tests always assume a line break for each entry, no?",
        "createdAt" : "2019-03-20T05:10:38Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "3036c8d2-549c-4774-9885-b806ccdc6dc9",
        "parentId" : "5a1356a6-6ce7-4ce2-a312-cf5a8aed65f5",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "This function wasn't itself tested before, so I haven't made tests for this specifically. I think this is ok, as all the different repr's are tested and that's what's important, IMO.\r\n\r\nOf course, ``line_break_each_value=False`` is used in all repr's except the one for MultiIndex, so that is just the status quo before this PR.",
        "createdAt" : "2019-03-22T05:06:47Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d96c98c94a5f98dd44228b2770e9c64ddaabd64",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +266,270 @@\ndef format_object_summary(obj, formatter, is_justify=True, name=None,\n                          indent_for_name=True, line_break_each_value=False):\n    \"\"\"\n    Return the formatted obj as a unicode string"
  },
  {
    "id" : "c09999dc-29d0-482e-81c7-f3a73d6427f1",
    "prId" : 23601,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23601#pullrequestreview-180568117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this needed?",
        "createdAt" : "2018-11-10T04:38:33Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7c978ce7-18c8-430b-8b43-d93c06b3ca4c",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Without it, you'd get something like\r\n\r\n```python\r\nIn [2]: pd.core.arrays.period_array(['2000', '2001'], freq='D')\r\nOut[2]:\r\n<PeriodArray>\r\n['2000-01-01', '2001-01-01'], \r\nLength: 2, dtype: period[D]\r\n```\r\n\r\n(notice the trailing coma after the ending `]` in the data section.\r\n\r\n\r\nThat's what we want for index classes:\r\n\r\n```python\r\nIn [3]: pd.Index([1, 2, 3])\r\nOut[3]: Int64Index([1, 2, 3], dtype='int64')\r\n```\r\n\r\nbut not for EAs since we don't know if they're valid code:",
        "createdAt" : "2018-11-10T12:09:06Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "007393bb-f5e7-4a22-b204-c4a65722600a",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think this is a very strange repr \r\nwhere is this based off of? why not use parens?\r\nit’s also multi line \r\n\r\nthis is reinventing the wheel again compared to what we do for index; and somewhat arbitrary\r\n\r\nrepr is very important for consistency and this is off\r\n\r\ni would avoid the special casing and have it look a whole lot more like what we have now\r\n\r\n",
        "createdAt" : "2018-11-10T12:40:29Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "52cd185a-c6f6-4100-b7fc-f82087eff246",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "also none of this looks tested (meaning the special casing and so on)",
        "createdAt" : "2018-11-10T12:41:25Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "80e8ff33-5944-432f-8833-4b0320aaf9f2",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the valid code argument does not work here either\r\n\r\nwe already have not valid code in repr eg MultiIndex and IntervalIndex\r\n\r\nit’s very hard to guarantee this \r\n\r\nbut using parens and no angle brackets and commas between items would be a major improvement ",
        "createdAt" : "2018-11-10T12:43:33Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "98685e5a-b663-4db7-8dca-6547288a71c8",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> also none of this looks tested (meaning the special casing and so on)\r\n \r\nWhat special casing? I have 100% coverage for the diff when running it on the base repr tests.",
        "createdAt" : "2018-11-10T12:54:56Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "310a9469-11f0-4c8e-83bd-5407f446502f",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the very fact that you need a special option is the strange part.",
        "createdAt" : "2018-11-18T22:24:52Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b8cedf72-536b-4aff-ab73-0f6cdcdcd1a6",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why's that? Don't we want to reuse the common formatting code?",
        "createdAt" : "2018-11-19T12:16:20Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "665fa43a-d33d-48ba-b541-087db020f5da",
        "parentId" : "3cbd8ffa-7144-4870-90d6-4361bf901f53",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so another difference this is highliting is that EA have the attributes on another line, while the Index does not (as they are args). ",
        "createdAt" : "2018-12-02T16:37:51Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ad113b374641b6eb1f0cb7b28d7d38e24099902",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +395,399 @@\n        # right now close is either '' or ', '\n        # Now we want to include the ']', but not the maybe space.\n        close = ']' + close.rstrip(' ')\n        summary += close"
  }
]