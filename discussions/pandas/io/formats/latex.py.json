[
  {
    "id" : "62de3643-d725-40fd-b080-619e3a85ab6a",
    "prId" : 25437,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25437#pullrequestreview-215228033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d261712-905c-48ec-b6da-d47e02a5ebeb",
        "parentId" : null,
        "authorId" : "9d35d7cc-818e-4d6a-aa21-dbe273b5e112",
        "body" : "The experts can comment on what they'd prefer, but since` _write_tabular_begin` and `_write_longtable_begin` are so similar I think you could try and merge them (same with the `*_end` functions (see [here](https://github.com/tomneep/pandas/commit/b4661e61b990d937a2f9968772a93c8968e7cf04) for a quick example, but careful that I changed a test without checking the latex output was the same)",
        "createdAt" : "2019-03-04T14:05:11Z",
        "updatedAt" : "2019-09-03T18:30:02Z",
        "lastEditedBy" : "9d35d7cc-818e-4d6a-aa21-dbe273b5e112",
        "tags" : [
        ]
      },
      {
        "id" : "8f28e176-bd28-4744-a680-e7c873d0dd9a",
        "parentId" : "6d261712-905c-48ec-b6da-d47e02a5ebeb",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "That may be good.\r\n\r\nAnother note, I'd prefer that the majority of the logic be implemented in a pure function that simply builds the string.  Then in the main function `write_result` we can do something like\r\n\r\n```\r\nbuf.write(self._write_tabular_begin(column_format))\r\n```\r\n\r\nthat makes testing a bit easier, as you can isolate the construction of the string to write from the actual IO.",
        "createdAt" : "2019-03-15T20:12:57Z",
        "updatedAt" : "2019-09-03T18:30:02Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c0f99351438a3b18aca8c5640badb361ebe58f6",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +274,278 @@        self.clinebuf = [x for x in self.clinebuf if x[0] != i]\n\n    def _write_tabular_begin(self, buf, column_format):\n        \"\"\"\n        Write the beginning of a tabular environment or"
  },
  {
    "id" : "66988613-48ce-4189-b777-4dfdb2ef96e6",
    "prId" : 25437,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25437#pullrequestreview-254982906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd2ed473-e0bd-4ecd-9392-0ffe73ccc255",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add Parameters to the doc-string; ideally type annotate the args as well",
        "createdAt" : "2019-06-27T03:29:10Z",
        "updatedAt" : "2019-09-03T18:30:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c0f99351438a3b18aca8c5640badb361ebe58f6",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +275,279 @@\n    def _write_tabular_begin(self, buf, column_format):\n        \"\"\"\n        Write the beginning of a tabular environment or\n        nested table/tabular environments including caption and label."
  },
  {
    "id" : "c06b2573-5636-418e-9ae6-0cfd8c4efae6",
    "prId" : 32034,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32034#pullrequestreview-359405813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7196a3e-150e-432c-ad85-e593cdb6176d",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why do two sets of braces need to be removed?",
        "createdAt" : "2020-02-16T10:25:29Z",
        "updatedAt" : "2020-02-20T05:51:54Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "a6d6f964-6efb-48d4-ac92-1f294e262b25",
        "parentId" : "d7196a3e-150e-432c-ad85-e593cdb6176d",
        "authorId" : "90eca452-5b1d-4bd1-ba02-baf897ee8e18",
        "body" : "This actually got me as well. 2 sets of braces are needed for the final string, since I remove the `.format` and this becomes a regular string there is no need for the \"escape\" sequence of 2 braces to show 1. Is that or 4 braces with f string",
        "createdAt" : "2020-02-16T14:03:23Z",
        "updatedAt" : "2020-02-20T05:51:54Z",
        "lastEditedBy" : "90eca452-5b1d-4bd1-ba02-baf897ee8e18",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7bfe07c5d925298d25bb00108976a8dac70f5da",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +142,146 @@                    buf.write(\n                        f\"\\\\multicolumn{{{len(row)}}}{{r}}\"\n                        \"{{Continued on next page}} \\\\\\\\\\n\"\n                    )\n                    buf.write(\"\\\\midrule\\n\")"
  },
  {
    "id" : "f0fb4633-545e-4ae7-8e6c-519ed1f336e9",
    "prId" : 35668,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35668#pullrequestreview-506184743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de792f55-1fbe-4e96-bf67-2b0eef394fd1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this validated? what are the positbilities here? can you enumerate",
        "createdAt" : "2020-10-10T23:14:58Z",
        "updatedAt" : "2020-10-17T14:25:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f5ed5838-371c-4ef0-81c1-b360e8a077dd",
        "parentId" : "de792f55-1fbe-4e96-bf67-2b0eef394fd1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "or is this a latex positioning string and we don't need / want to validate explicity?",
        "createdAt" : "2020-10-10T23:15:33Z",
        "updatedAt" : "2020-10-17T14:25:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6779cb0e-2fc4-4247-8042-7e72d3076a9e",
        "parentId" : "de792f55-1fbe-4e96-bf67-2b0eef394fd1",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Yes, it is LaTeX float positioning. I think it may be a good idea to add validation in a follow-up PR. Not only for position, but also for ``column_format`` (which is the alignment of the columns).",
        "createdAt" : "2020-10-11T14:28:48Z",
        "updatedAt" : "2020-10-17T14:25:33Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd73e8fdac7a602251e3a96ff020b14a9f8be95",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +672,676 @@    label : str, optional\n        The LaTeX label to be placed inside ``\\label{}`` in the output.\n    position : str, optional\n        The LaTeX positional argument for tables, to be placed after\n        ``\\begin{}`` in the output."
  },
  {
    "id" : "47b5cd50-5606-4584-9150-c1dd4764b08d",
    "prId" : 35872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35872#pullrequestreview-476341521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24f7b56d-e308-436d-9d42-56be766b6fbf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok with these being properties, but generaly we like functions if ever an intention of adding args.",
        "createdAt" : "2020-08-27T02:27:51Z",
        "updatedAt" : "2020-09-06T17:57:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4da0a2de12fd25fe4e604da2bac86415a5b4728",
    "line" : 433,
    "diffHunk" : "@@ -1,1 +348,352 @@        \"\"\"Bottom level separator.\"\"\"\n\n    @property\n    @abstractmethod\n    def env_end(self) -> str:"
  },
  {
    "id" : "f055f7a1-6c90-4173-9af0-e72700cde685",
    "prId" : 35872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35872#pullrequestreview-476370859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79292cae-aebc-495d-b9b0-af2153087e66",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this should be a class method no?",
        "createdAt" : "2020-08-27T02:28:57Z",
        "updatedAt" : "2020-09-06T17:57:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0bc65eef-68e9-462f-bc38-491850a222f4",
        "parentId" : "79292cae-aebc-495d-b9b0-af2153087e66",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Not necessarily. At least not according to this https://refactoring.guru/design-patterns/builder/python/example",
        "createdAt" : "2020-08-27T04:06:39Z",
        "updatedAt" : "2020-09-06T17:57:21Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4da0a2de12fd25fe4e604da2bac86415a5b4728",
    "line" : 764,
    "diffHunk" : "@@ -1,1 +629,633 @@        buf.write(table_string)\n\n    @property\n    def builder(self) -> TableBuilderAbstract:\n        \"\"\"Concrete table builder."
  },
  {
    "id" : "363bc16c-085a-42ce-9702-86499fb94baa",
    "prId" : 35872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35872#pullrequestreview-483162942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d06655e-690e-4bca-bb7e-dce3b8aa95cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would inline thisin the builder function",
        "createdAt" : "2020-09-05T19:59:24Z",
        "updatedAt" : "2020-09-06T17:57:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "57756203-9c97-4126-818c-420f6b99c35b",
        "parentId" : "1d06655e-690e-4bca-bb7e-dce3b8aa95cf",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "I had to extract this method to make ``mypy`` happy.\r\n\r\nIf I refactor to this (which was originally there).\r\n\r\n```\r\n    @property\r\n    def builder(self) -> TableBuilderAbstract:\r\n         kwargs = dict(\r\n            formatter=self.fmt,\r\n            column_format=self.column_format,\r\n            multicolumn=self.multicolumn,\r\n            multicolumn_format=self.multicolumn_format,\r\n            multirow=self.multirow,\r\n            caption=self.caption,\r\n            label=self.label,\r\n            position=self.position,\r\n        )\r\n        if self.longtable:\r\n            return LongTableBuilder(**kwargs)\r\n        if any([self.caption, self.label, self.position]):\r\n            return RegularTableBuilder(**kwargs)\r\n        return TabularBuilder(**kwargs)\r\n```\r\nthen ``mypy`` complains with the following error.\r\n\r\n```\r\npandas/io/formats/latex.py:578: error: Argument 1 to \"LongTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"DataFrameFormatter\"  [arg-type]\r\npandas/io/formats/latex.py:578: error: Argument 1 to \"LongTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"Optional[str]\"  [arg-type]\r\npandas/io/formats/latex.py:578: error: Argument 1 to \"LongTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"bool\"  [arg-type]\r\npandas/io/formats/latex.py:580: error: Argument 1 to \"RegularTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"DataFrameFormatter\"  [arg-type]\r\npandas/io/formats/latex.py:580: error: Argument 1 to \"RegularTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"Optional[str]\"  [arg-type]\r\npandas/io/formats/latex.py:580: error: Argument 1 to \"RegularTableBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"bool\"  [arg-type]\r\npandas/io/formats/latex.py:581: error: Argument 1 to \"TabularBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"DataFrameFormatter\"  [arg-type]\r\npandas/io/formats/latex.py:581: error: Argument 1 to \"TabularBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"Optional[str]\"  [arg-type]\r\npandas/io/formats/latex.py:581: error: Argument 1 to \"TabularBuilder\" has incompatible type \"**Dict[str, object]\"; expected \"bool\"  [arg-type]\r\n```\r\n\r\nHonestly, typing stuff makes life more complicated, IMHO.",
        "createdAt" : "2020-09-06T15:47:38Z",
        "updatedAt" : "2020-09-06T17:57:21Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      },
      {
        "id" : "e0a5877a-f37e-4503-981a-5955f9f1470f",
        "parentId" : "1d06655e-690e-4bca-bb7e-dce3b8aa95cf",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeap typing does make things more complicated, no arg there :->",
        "createdAt" : "2020-09-06T18:10:00Z",
        "updatedAt" : "2020-09-06T18:10:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4da0a2de12fd25fe4e604da2bac86415a5b4728",
    "line" : 784,
    "diffHunk" : "@@ -1,1 +649,653 @@        )\n\n    def _select_builder(self) -> Type[TableBuilderAbstract]:\n        \"\"\"Select proper table builder.\"\"\"\n        if self.longtable:"
  }
]