[
  {
    "id" : "e38ae371-2ad5-49eb-a62d-007e66ae4f0f",
    "prId" : 21300,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21300#pullrequestreview-130527450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this actually required? If we already have a handle aren't we just round tripping here anyway by converting the handle to a name then back to a handle?",
        "createdAt" : "2018-06-04T18:48:35Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a717fb81-1380-43bd-bc93-c9cf74487150",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "body" : "Hi, I think so it's required because we need to generate a new handle from _get_handle (potentially with compression and encoding requirement) when a external handle is passed. currently when a file handle is passed, no compression is done even when specified https://github.com/pandas-dev/pandas/issues/21227",
        "createdAt" : "2018-06-04T18:55:19Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "tags" : [
        ]
      },
      {
        "id" : "88f33c9a-c74d-4d51-a3b9-ac9d0447d0eb",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Aren't we leaving a file handle open then? To illustrate:\r\n\r\n```python\r\n>>> f1 = open('foo.txt')\r\n>>> name = f1.name\r\n>>> f2, handles = _get_handle(name, 'r')\r\n>>> f2.close()\r\n>>> f1.closed\r\nFalse\r\n>>> f2.closed\r\nTrue\r\n```\r\n\r\nAFAICT with your code you eventually would close the second object but the first would stay open, no?",
        "createdAt" : "2018-06-04T19:19:45Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f944658b-f033-419d-835e-ade4d09db1f6",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "body" : "the first is up to the user to call f.close() no? hope below is a good example.\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/21300/files#diff-a29a0a64b2800c1c30a53a178d871645\r\n\r\n",
        "createdAt" : "2018-06-04T19:26:05Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "tags" : [
        ]
      },
      {
        "id" : "e592a942-e9cf-49fd-b5c5-5ef9b78b4add",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm OK I see your point, but do we have test coverage for all of the branches? It just seems a little strange to me that we are opening two handles to the same location when a handle gets passed to this function. I feel like that's asking for some strange behavior to pop up, but would feel more comfortable if the test coverage was there to hit all three branches. lmk",
        "createdAt" : "2018-06-04T21:23:56Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "6c99e0f8-2b0f-463d-b4f4-75f43287b7fc",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "body" : "see your point. though two file handles have separate BufferIO and states. added tests using file-handle as input and assert equivalence. we also have compress_size test with file-handle showing they fix #21227 \r\n\r\nwe already have tests for path and buffer IO as they are existing use cases.",
        "createdAt" : "2018-06-04T22:49:28Z",
        "updatedAt" : "2018-06-04T22:49:28Z",
        "lastEditedBy" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "tags" : [
        ]
      },
      {
        "id" : "8aa1f7d6-b5ac-43b6-ac87-c1fd1d30eb6d",
        "parentId" : "997b7290-33b2-47d2-957b-aadff8767e99",
        "authorId" : "59248465-b088-41c0-a836-e2466bf44d64",
        "body" : "According to the issue #21561 we have a bug if the file is `sys.stdout`. Basically the library creates a file named `<stdout>`and write stuff in it",
        "createdAt" : "2018-06-20T18:11:54Z",
        "updatedAt" : "2018-06-20T18:11:54Z",
        "lastEditedBy" : "59248465-b088-41c0-a836-e2466bf44d64",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e914ff8e05006c2ad6df6684c779d07f3ce67de",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +135,139 @@            # path_or_buf is path\n            path_or_buf = self.path_or_buf\n        elif hasattr(self.path_or_buf, 'name'):\n            # path_or_buf is file handle\n            path_or_buf = self.path_or_buf.name"
  }
]