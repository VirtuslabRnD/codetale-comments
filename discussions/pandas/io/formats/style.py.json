[
  {
    "id" : "c2f65df1-6b71-4bd7-b97d-03dcd68bd44a",
    "prId" : 16141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16141#pullrequestreview-77647241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how does subset make sense here? does it make sense to hide *some* columns?",
        "createdAt" : "2017-05-12T11:52:22Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0f9a2c19-4374-474c-af66-b7789215bf63",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "094bec66-3b8c-44cd-a713-86654d681dc6",
        "body" : "The idea is that you may have columns that are needed for formatting -- determining the color of a row, for example -- but you may not want to display them.  For example, lets say you had a dataframe with columns City and AvgTemp.  Avg Temp was used by Styler to color each row.  But in the final rendering, you only want to display city (colored appropriately).  AFAIK there is no way to do that right now, but with this change you could do df.style.hide_columns(['AvgTemp']).  You only want to hide AvgTemp.  ",
        "createdAt" : "2017-05-12T14:41:10Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "094bec66-3b8c-44cd-a713-86654d681dc6",
        "tags" : [
        ]
      },
      {
        "id" : "e6663d62-997a-4c64-b5a3-060683e00215",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "this is a bit unusual for pandas, but I think it's fine here. It's kind of like `drop`, except it's hiding instead of dropping.",
        "createdAt" : "2017-05-15T20:00:55Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "affcdda7-0578-46e8-a991-98823e1f09c2",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe we should support ``df.style[list_of_selected_columns]`` for showing *some* columns. (separate discussion)",
        "createdAt" : "2017-11-19T16:14:38Z",
        "updatedAt" : "2017-11-19T16:14:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb779ec02f45634f73635b7f3f97b5cd7b4d6dfb",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +809,813 @@        \"\"\"\n        Hide columns from rendering.\n\n        .. versionadded:: 0.22.0\n"
  },
  {
    "id" : "cb371a1f-0f56-4fda-b0c6-ca63005a730f",
    "prId" : 17474,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17474#pullrequestreview-61685983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f594356b-e694-41c3-a061-ec88b9565942",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a ``See Also`` here (pointing to .applymap) and the reciprical one there",
        "createdAt" : "2017-09-10T14:25:40Z",
        "updatedAt" : "2017-09-10T14:48:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "82ae1dce8f10f2ad63e393ddd963481bcf7aaf49",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +652,656 @@        Returns\n        -------\n        self : Styler\n\n        See Also"
  },
  {
    "id" : "6c88c933-9a10-4d2e-88db-066d0978ad3e",
    "prId" : 18577,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18577#pullrequestreview-92064033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d529bdf4-3c00-499c-95ab-add000b6d749",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger I had to do this work-around here to push a list-like result into a frame (which we are breaking generally in this patch, but here style is relying on this, so kind of ok with this behavior, I have to add some more tests); this is from ``pandas/tests/io/formats/test_style.test_apply_axis``\r\n\r\n. e.g.\r\n\r\n```\r\nIn [5]:         df = pd.DataFrame({'A': [0, 0], 'B': [1, 1]})\r\n   ...:         f = lambda x: ['val: {max}'.format(max=x.max()) for v in x]\r\n   ...: \r\n\r\nIn [6]: df\r\nOut[6]: \r\n   A  B\r\n0  0  1\r\n1  0  1\r\n\r\nIn [7]: df.apply(f, axis=1)\r\nOut[7]: \r\n0    [val: 1, val: 1]\r\n1    [val: 1, val: 1]\r\ndtype: object\r\n\r\nIn [8]: df.apply(f, axis=1, result_type='infer')\r\nOut[8]: \r\n        A       B\r\n0  val: 1  val: 1\r\n1  val: 1  val: 1\r\n\r\n```\r\n\r\nI am not entirely sure why you need this this way.",
        "createdAt" : "2017-12-28T23:17:02Z",
        "updatedAt" : "2018-02-07T10:59:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "768a4fba-5627-4f0a-a1cc-53eae5bceb36",
        "parentId" : "d529bdf4-3c00-499c-95ab-add000b6d749",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The above snippet is no longer correct (I mean: in the meantime we have chosen to not preserve the original columns names when a list is returned, so this will have column names [0, 1]). \r\n\r\nThis has no impact on the style code?",
        "createdAt" : "2018-01-28T20:49:52Z",
        "updatedAt" : "2018-02-07T10:59:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d933801870e40f4ef58d9f96cd0f3eab353b83e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +510,514 @@        data = self.data.loc[subset]\n        if axis is not None:\n            result = data.apply(func, axis=axis,\n                                result_type='expand', **kwargs)\n            result.columns = data.columns"
  }
]