[
  {
    "id" : "c2f65df1-6b71-4bd7-b97d-03dcd68bd44a",
    "prId" : 16141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16141#pullrequestreview-77647241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how does subset make sense here? does it make sense to hide *some* columns?",
        "createdAt" : "2017-05-12T11:52:22Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0f9a2c19-4374-474c-af66-b7789215bf63",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "094bec66-3b8c-44cd-a713-86654d681dc6",
        "body" : "The idea is that you may have columns that are needed for formatting -- determining the color of a row, for example -- but you may not want to display them.  For example, lets say you had a dataframe with columns City and AvgTemp.  Avg Temp was used by Styler to color each row.  But in the final rendering, you only want to display city (colored appropriately).  AFAIK there is no way to do that right now, but with this change you could do df.style.hide_columns(['AvgTemp']).  You only want to hide AvgTemp.  ",
        "createdAt" : "2017-05-12T14:41:10Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "094bec66-3b8c-44cd-a713-86654d681dc6",
        "tags" : [
        ]
      },
      {
        "id" : "e6663d62-997a-4c64-b5a3-060683e00215",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "this is a bit unusual for pandas, but I think it's fine here. It's kind of like `drop`, except it's hiding instead of dropping.",
        "createdAt" : "2017-05-15T20:00:55Z",
        "updatedAt" : "2017-11-18T03:03:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "affcdda7-0578-46e8-a991-98823e1f09c2",
        "parentId" : "b76ca5cf-98c3-4b44-9f4b-55731b24ba25",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe we should support ``df.style[list_of_selected_columns]`` for showing *some* columns. (separate discussion)",
        "createdAt" : "2017-11-19T16:14:38Z",
        "updatedAt" : "2017-11-19T16:14:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb779ec02f45634f73635b7f3f97b5cd7b4d6dfb",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +809,813 @@        \"\"\"\n        Hide columns from rendering.\n\n        .. versionadded:: 0.22.0\n"
  },
  {
    "id" : "cb371a1f-0f56-4fda-b0c6-ca63005a730f",
    "prId" : 17474,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17474#pullrequestreview-61685983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f594356b-e694-41c3-a061-ec88b9565942",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a ``See Also`` here (pointing to .applymap) and the reciprical one there",
        "createdAt" : "2017-09-10T14:25:40Z",
        "updatedAt" : "2017-09-10T14:48:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "82ae1dce8f10f2ad63e393ddd963481bcf7aaf49",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +652,656 @@        Returns\n        -------\n        self : Styler\n\n        See Also"
  },
  {
    "id" : "6c88c933-9a10-4d2e-88db-066d0978ad3e",
    "prId" : 18577,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18577#pullrequestreview-92064033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d529bdf4-3c00-499c-95ab-add000b6d749",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger I had to do this work-around here to push a list-like result into a frame (which we are breaking generally in this patch, but here style is relying on this, so kind of ok with this behavior, I have to add some more tests); this is from ``pandas/tests/io/formats/test_style.test_apply_axis``\r\n\r\n. e.g.\r\n\r\n```\r\nIn [5]:         df = pd.DataFrame({'A': [0, 0], 'B': [1, 1]})\r\n   ...:         f = lambda x: ['val: {max}'.format(max=x.max()) for v in x]\r\n   ...: \r\n\r\nIn [6]: df\r\nOut[6]: \r\n   A  B\r\n0  0  1\r\n1  0  1\r\n\r\nIn [7]: df.apply(f, axis=1)\r\nOut[7]: \r\n0    [val: 1, val: 1]\r\n1    [val: 1, val: 1]\r\ndtype: object\r\n\r\nIn [8]: df.apply(f, axis=1, result_type='infer')\r\nOut[8]: \r\n        A       B\r\n0  val: 1  val: 1\r\n1  val: 1  val: 1\r\n\r\n```\r\n\r\nI am not entirely sure why you need this this way.",
        "createdAt" : "2017-12-28T23:17:02Z",
        "updatedAt" : "2018-02-07T10:59:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "768a4fba-5627-4f0a-a1cc-53eae5bceb36",
        "parentId" : "d529bdf4-3c00-499c-95ab-add000b6d749",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The above snippet is no longer correct (I mean: in the meantime we have chosen to not preserve the original columns names when a list is returned, so this will have column names [0, 1]). \r\n\r\nThis has no impact on the style code?",
        "createdAt" : "2018-01-28T20:49:52Z",
        "updatedAt" : "2018-02-07T10:59:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d933801870e40f4ef58d9f96cd0f3eab353b83e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +510,514 @@        data = self.data.loc[subset]\n        if axis is not None:\n            result = data.apply(func, axis=axis,\n                                result_type='expand', **kwargs)\n            result.columns = data.columns"
  },
  {
    "id" : "a9a00c1a-6018-41a7-8397-f0073b7d09a0",
    "prId" : 19856,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19856#pullrequestreview-100540032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14760118-2379-4344-a031-3395c4e80021",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Hmmm, I'm not sure about the option affecting `Styler`. Does anyone else (@jorisvandenbossche, @chris-b1) have thoughts?\r\n\r\nAdding classes to the `Styler` is pretty easy, and you're always able to add them since you're generating the Styler. With `DataFrame._repr_html`, you don't have that option.",
        "createdAt" : "2018-03-01T12:45:53Z",
        "updatedAt" : "2018-03-01T23:05:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "63447b6a-4686-4663-bfdd-03fcb346cf1f",
        "parentId" : "14760118-2379-4344-a031-3395c4e80021",
        "authorId" : "2b2e6c6d-bc9f-49ca-8ee1-d2c72122ec57",
        "body" : "It's true this issue is solved by `df.style.set_table_attributes('class=\"tex2jax_ignore\"')`. One could argue that this PR is unnecessary because the solution is already possible in pandas.\r\n\r\nBut this solution requires knowledge of how MathJax works – something that I've learnt whilst making this PR. The new option `display.html.use_mathjax` is there to make it easier for users to find the solution.",
        "createdAt" : "2018-03-01T18:04:26Z",
        "updatedAt" : "2018-03-01T23:05:56Z",
        "lastEditedBy" : "2b2e6c6d-bc9f-49ca-8ee1-d2c72122ec57",
        "tags" : [
        ]
      },
      {
        "id" : "7e79701f-561d-46a9-b4b2-1c541f201ca7",
        "parentId" : "14760118-2379-4344-a031-3395c4e80021",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "To be clear, the changes to frames repr html are great.\r\n\r\nI just worry about injecting “noise” into Styler’s generated HTML from a config option, when it’s relatively easy to do that yourself.\r\n\r\nThat said, an extra class isn’t the worst thing in the world, and it’s simple to toggle on and off. Your current PR is probably fine. ",
        "createdAt" : "2018-03-01T18:21:16Z",
        "updatedAt" : "2018-03-01T23:05:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "30cc18b5-d67b-46d6-82a6-84eead78c7e7",
        "parentId" : "14760118-2379-4344-a031-3395c4e80021",
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "Yeah, I could see the argument for not doing it in `Styler` but I agree the PR is fine, especially where it is off by default, and is sort of an obscure thing to look up.",
        "createdAt" : "2018-03-01T18:25:00Z",
        "updatedAt" : "2018-03-01T23:05:56Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      }
    ],
    "commit" : "42224c9702da3b94bf98f2e0c17b7bea2c3826fb",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +326,330 @@            body.append(row_es)\n\n        table_attr = self.table_attributes\n        use_mathjax = get_option(\"display.html.use_mathjax\")\n        if not use_mathjax:"
  },
  {
    "id" : "336dc93f-c327-477c-9505-18c65adf6990",
    "prId" : 21263,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21263#pullrequestreview-125022080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc670814-0fab-48de-b270-ce6b986a1c28",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you also add a Raises section for the docstring?",
        "createdAt" : "2018-06-01T01:00:34Z",
        "updatedAt" : "2018-06-03T20:48:22Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "41911af6b41ecc191d0a8de29b1560b9f61b694e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +865,869 @@    def background_gradient(self, cmap='PuBu', low=0, high=0, axis=0,\n                            subset=None, text_color_threshold=0.408):\n        \"\"\"\n        Color the background in a gradient according to\n        the data in each column (optionally row)."
  },
  {
    "id" : "16edd5a8-354e-463b-9052-c94b9777bae8",
    "prId" : 21263,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21263#pullrequestreview-126763158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca53290f-f517-4f90-a1d0-8c07b25cc91c",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Add `, default 0.408`.\r\n\r\nAnd may a note as to why that's the default?",
        "createdAt" : "2018-06-06T21:38:04Z",
        "updatedAt" : "2018-06-06T21:41:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "eff61f31-33f3-4608-a054-e26cec279333",
        "parentId" : "ca53290f-f517-4f90-a1d0-8c07b25cc91c",
        "authorId" : "7f591c66-d19e-4476-8d77-26e58d5c7185",
        "body" : "We chose `0.408` to stay consistent with the Seaborn implementation. Should I ask the Seaborn author for the underlying reason, just reference seaborn, or leave the value without explanation?",
        "createdAt" : "2018-06-06T22:04:09Z",
        "updatedAt" : "2018-06-06T22:04:10Z",
        "lastEditedBy" : "7f591c66-d19e-4476-8d77-26e58d5c7185",
        "tags" : [
        ]
      },
      {
        "id" : "de98f8a2-9f30-4ad0-8f35-11bf3500eb3a",
        "parentId" : "ca53290f-f517-4f90-a1d0-8c07b25cc91c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "No worries, was just curious.",
        "createdAt" : "2018-06-07T12:47:55Z",
        "updatedAt" : "2018-06-07T12:47:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "41911af6b41ecc191d0a8de29b1560b9f61b694e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +880,884 @@        subset: IndexSlice\n            a valid slice for ``data`` to limit the style application to\n        text_color_threshold: float or int\n            luminance threshold for determining text color. Facilitates text\n            visibility across varying background colors. From 0 to 1."
  },
  {
    "id" : "32bc1cd7-fa6b-4ecb-9836-5468db5382fd",
    "prId" : 21263,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21263#pullrequestreview-126763291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "399f62ee-6f53-4f35-bc1a-3edef2139535",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Single backtick for parameter names.",
        "createdAt" : "2018-06-06T21:38:19Z",
        "updatedAt" : "2018-06-06T21:41:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a700d61d-e876-4a13-9dad-99b71d9866ee",
        "parentId" : "399f62ee-6f53-4f35-bc1a-3edef2139535",
        "authorId" : "7f591c66-d19e-4476-8d77-26e58d5c7185",
        "body" : "Thanks, I did double tick because I saw it in other places, for example for `high` and `low` in the notes section. Do you want me to update them to single tick as well? Does the same go for `data` in the subset section and the expressions in the note section?",
        "createdAt" : "2018-06-06T22:04:04Z",
        "updatedAt" : "2018-06-06T22:04:04Z",
        "lastEditedBy" : "7f591c66-d19e-4476-8d77-26e58d5c7185",
        "tags" : [
        ]
      },
      {
        "id" : "148f41b3-ee6c-470d-a2c0-0b6afa90a7fa",
        "parentId" : "399f62ee-6f53-4f35-bc1a-3edef2139535",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yes, I noticed that after posting. Probably fine to be consistent w/ the rest of the docstring here.",
        "createdAt" : "2018-06-07T12:48:16Z",
        "updatedAt" : "2018-06-07T12:48:16Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "41911af6b41ecc191d0a8de29b1560b9f61b694e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +901,905 @@        ------\n        ValueError\n            If ``text_color_threshold`` is not a value from 0 to 1.\n        \"\"\"\n        subset = _maybe_numeric_slice(self.data, subset)"
  }
]