[
  {
    "id" : "58fbcc8f-2db0-40ea-93c1-3cdcd59daa6a",
    "prId" : 36510,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36510#pullrequestreview-493609969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f48becb9-2519-4ff9-a23e-b08c3dc5981a",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "The content of this module and class StringFormatter was extracted from DataFrameFormatter.\r\nWithout substantial refactor only the parts related to console/string formatting were moved out of DataFrameFormatter.",
        "createdAt" : "2020-09-22T15:51:14Z",
        "updatedAt" : "2020-10-20T14:33:24Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b67b481b9a3df2feb415074ad68f2bd469d299c1",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@\"\"\"\nModule for formatting output data in console (to string).\n\"\"\"\nfrom shutil import get_terminal_size\nfrom typing import Iterable, List, Optional"
  },
  {
    "id" : "8d3f831c-19fd-4dd0-aa48-53fa1094f2f4",
    "prId" : 36510,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36510#pullrequestreview-494509566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da888ba9-eeb4-4e8c-9f33-b729964f5d2e",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "AFAICT the original _join_multiline didn't mutate the input.\r\n\r\noften better to type inputs as Iterable instead of List for non-mutating functions\r\n",
        "createdAt" : "2020-09-23T09:49:19Z",
        "updatedAt" : "2020-10-20T14:33:24Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "adc41ad9-527d-4389-bd7a-570d2262e71d",
        "parentId" : "da888ba9-eeb4-4e8c-9f33-b729964f5d2e",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Oh, you are right! It did not mutate strcols, but now it does. I will fix it.\r\n\r\nWhat I don't like about Iterable type is the following:\r\n- String is Iterable, so it can be confused with List/Tuple.\r\n- Cannot find len(iterable) - mypy throws\r\n```Argument 1 to \"len\" has incompatible type \"Iterable[str]\"; expected \"Sized\"  [arg-type]```\r\n\r\nSo, now I changed the type of input parameter in ``_join_multiline`` to ``Iterable[List[str]]``.",
        "createdAt" : "2020-09-23T10:00:40Z",
        "updatedAt" : "2020-10-20T14:33:24Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      },
      {
        "id" : "0a99a569-0151-4c4e-af69-503c4b17db13",
        "parentId" : "da888ba9-eeb4-4e8c-9f33-b729964f5d2e",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> * String is Iterable, so it can be confused with List/Tuple.\r\n\r\nyeah that can be a problem, but we normally add type parameters, so only Iterable[str] becomes an issue\r\n\r\n> * Cannot find len(iterable) - mypy throws\r\n\r\ncan always use Sequence if needed as Sequence is also not mutable.\r\n\r\nThere are some guidelines for stubs at https://github.com/python/typeshed/blob/master/CONTRIBUTING.md#stub-file-coding-style\r\n\r\n> avoid invariant collection types (List, Dict) in argument positions, in favor of covariant types like Mapping or Sequence\r\n\r\nat some point, the guidelines there relevant to the codebase and not just stubs should probably be added to our code style docs #33851\r\n",
        "createdAt" : "2020-09-23T10:17:43Z",
        "updatedAt" : "2020-10-20T14:33:24Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b67b481b9a3df2feb415074ad68f2bd469d299c1",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +113,117 @@\n        if self.fmt.index:\n            idx = strcols.pop(0)\n            lwidth -= np.array([self.adj.len(x) for x in idx]).max() + adjoin_width\n"
  },
  {
    "id" : "5b8de81f-a3d6-43f6-a1b5-a2dcc9c68edb",
    "prId" : 41223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41223#pullrequestreview-657451790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a36c229-4ca3-476a-88be-ddbb84ffec1b",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Nice extraction!",
        "createdAt" : "2021-05-12T04:33:14Z",
        "updatedAt" : "2021-05-12T04:46:19Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "4958e1a0d3e8f134fea4a87866a31d91e236ee20",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +76,80 @@\n    @property\n    def _adjusted_tr_col_num(self) -> int:\n        return self.fmt.tr_col_num + 1 if self.fmt.index else self.fmt.tr_col_num\n"
  }
]