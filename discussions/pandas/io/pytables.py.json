[
  {
    "id" : "5d40fbfe-c634-4a55-9dee-18333503b3e5",
    "prId" : 4698,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62175b97-f110-4a1f-acbe-ff24263ae8a0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what I meant was that to the individual table appends, you can just simply pass `dropna=False` if `dropna=True` is passed to `append_to_multiple` will achieve the same effect.\n",
        "createdAt" : "2013-08-31T14:51:36Z",
        "updatedAt" : "2013-09-03T04:34:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e2bd1d91-36cf-4d8a-8c2a-a09395ad01a5",
        "parentId" : "62175b97-f110-4a1f-acbe-ff24263ae8a0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "nvm....what you have is correct\n",
        "createdAt" : "2013-08-31T14:53:46Z",
        "updatedAt" : "2013-09-03T04:34:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e317087b0e97c0c6637ac0aac70299cdb2f64336",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +844,848 @@            data_columns = d[selector]\n\n        # ensure rows are synchronized across the tables\n        if dropna:\n            idxs = (value[cols].dropna(how='all').index for cols in d.values())"
  },
  {
    "id" : "81653f69-6b21-4a51-90fc-3928f96184e0",
    "prId" : 4822,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2847c528-0cb5-44fd-a8e6-af540f9a33ad",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "does it matter to compare to unicode? (I honestly don't know...)\n",
        "createdAt" : "2013-09-12T00:43:39Z",
        "updatedAt" : "2013-09-12T15:40:02Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "80700c97-0639-4f6c-94da-6e8e24bf07c9",
        "parentId" : "2847c528-0cb5-44fd-a8e6-af540f9a33ad",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually it does because the data is stored as bytes (and reconverted) in read back by pytables (I think)\nthese are comparing vs stored data\n",
        "createdAt" : "2013-09-12T00:53:10Z",
        "updatedAt" : "2013-09-12T15:40:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef2cfb1f9d4f89c27ca759687fc1e13a4c44f1d0",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +1738,1742 @@                    self.data = np.asarray(self.data, dtype='M8[ns]')\n\n            elif dtype == u('timedelta64'):\n                self.data = np.asarray(self.data, dtype='m8[ns]')\n            elif dtype == u('date'):"
  },
  {
    "id" : "9a94a90b-a61f-42bd-9451-a1d04f2ea3db",
    "prId" : 4822,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a150d55-86b4-46a3-ae3e-ee3037a4a6c9",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "?? why this change here too\n",
        "createdAt" : "2013-09-12T00:44:29Z",
        "updatedAt" : "2013-09-12T15:40:02Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "512a8cb7-9416-4551-b8c3-c953988100d8",
        "parentId" : "2a150d55-86b4-46a3-ae3e-ee3037a4a6c9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh just a more informative message\n",
        "createdAt" : "2013-09-12T00:53:44Z",
        "updatedAt" : "2013-09-12T15:40:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef2cfb1f9d4f89c27ca759687fc1e13a4c44f1d0",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +4034,4038 @@            raise ValueError(\"query term is not valid [{0}]\\n\"\n                             \"  all queries terms must include a reference to\\n\"\n                             \"  either an axis (e.g. index or column), or a data_columns\\n\".format(str(self)))\n\n        # convert values if we are in the table"
  },
  {
    "id" : "65da2572-8329-43b3-a0eb-3b5abf90c56e",
    "prId" : 5448,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df80cd92-b999-4f53-a0a3-9e474407eae0",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "So this branch works when you only have ascii letters/numbers in your output?  Otherwise always needs to be decoded, right?\n",
        "createdAt" : "2013-11-06T12:53:06Z",
        "updatedAt" : "2013-11-06T12:53:06Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "cbb75812-9f17-4e97-8e7a-d482fb8f4ba3",
        "parentId" : "df80cd92-b999-4f53-a0a3-9e474407eae0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no it always works with an individual decoding, just slow. the astyping to str works when the input can be safely decoded by the `astype(str)` (which is prob just a UTF-8 decode on numpy side thats in c)\n",
        "createdAt" : "2013-11-06T13:19:16Z",
        "updatedAt" : "2013-11-06T13:19:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1b209780-5f7e-4fae-8ccc-42235a5a10b9",
        "parentId" : "df80cd92-b999-4f53-a0a3-9e474407eae0",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "Okay (I meant the astyping line) sounds good.\n",
        "createdAt" : "2013-11-06T13:25:50Z",
        "updatedAt" : "2013-11-06T13:25:50Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a6939fe2575c3d34502fb19a8596b7fa2d06f94",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +3974,3978 @@    if encoding is not None and len(data):\n        try:\n            data = data.astype(str).astype(object)\n        except:\n            f = np.vectorize(lambda x: x.decode(encoding), otypes=[np.object])"
  },
  {
    "id" : "395e8a67-8b21-463e-95b3-8900874c0bf9",
    "prId" : 7788,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1b59afb-10de-41f5-b915-a3e9fb8da5a6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "say, you can store this in table format, however.\n",
        "createdAt" : "2014-07-18T15:35:26Z",
        "updatedAt" : "2014-07-18T15:36:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1fcb20506664997ac095963e39ed759883d98c1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2683,2687 @@            if i == 0:\n                if not ax.is_unique:\n                    raise ValueError(\"Columns index has to be unique for fixed format\")\n            self.write_index('axis%d' % i, ax)\n"
  }
]