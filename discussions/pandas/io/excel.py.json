[
  {
    "id" : "dc275af9-8b65-4914-95ca-cea729172fc5",
    "prId" : 4857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f321819b-663e-4fde-aefe-11962915f405",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@jmcnamara just want to bring this up again: you had mentioned that you preferred to go by columns whereas the other writers went by rows (or maybe the reverse) in order to get better performance. Are you able to do that with the current setup?\n",
        "createdAt" : "2013-09-16T21:51:38Z",
        "updatedAt" : "2013-09-22T22:43:13Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "17ba0668-e3a6-4120-a8de-6cff3a47166a",
        "parentId" : "f321819b-663e-4fde-aefe-11962915f405",
        "authorId" : "56bacb42-5a21-41c7-bce7-c4ce57a99717",
        "body" : "@jtratner I think that I'll have to leave that for a separate PR. \n\nIt is probably something that you or @jtratner could sort out more efficiently. Basically the `get_formatted_cells()` method in `format.py` returns cells in column order. Converting that to row order via `DataFrame.iterrows()` would increase enable xlsxwriter to increase it's performance by 2 and flatten its memory use.\n\nHowever, I don't know if there would be an equivalent loss of performance due to using something like `iterrows()`.\n\nAlso, the current xlsxwriter implementation is already x5 times faster than openpyxl and equivalent to xlwt so maybe that is enough for now.\n\nEither way it probably merits a separate discussion/PR.\n",
        "createdAt" : "2013-09-16T23:22:18Z",
        "updatedAt" : "2013-09-22T22:43:13Z",
        "lastEditedBy" : "56bacb42-5a21-41c7-bce7-c4ce57a99717",
        "tags" : [
        ]
      },
      {
        "id" : "3d4f9063-5bf2-400d-bf59-66870d0d2411",
        "parentId" : "f321819b-663e-4fde-aefe-11962915f405",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "If Xlsxwriter is more performant, then it should be first in the rotation\n(if it's installed)... fine to leave that for a separate issue though.\n",
        "createdAt" : "2013-09-17T00:30:52Z",
        "updatedAt" : "2013-09-22T22:43:13Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "a90953c9-c2e1-41f6-a0b2-979c10f7e936",
        "parentId" : "f321819b-663e-4fde-aefe-11962915f405",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "Also, @jmcnamara I'm hoping you'll be around to help me tweak things to\nallow Xlsxwriter to operate on rows rather than columns. (but I definitely\nget wanting to get this into the code base first)\n",
        "createdAt" : "2013-09-17T00:38:24Z",
        "updatedAt" : "2013-09-22T22:43:13Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "73f65619-d75c-48ea-83fd-92075b5daae3",
        "parentId" : "f321819b-663e-4fde-aefe-11962915f405",
        "authorId" : "56bacb42-5a21-41c7-bce7-c4ce57a99717",
        "body" : "@jtratner I'll definitely stick around and try to do some more work. :-)\n",
        "createdAt" : "2013-09-17T10:44:40Z",
        "updatedAt" : "2013-09-22T22:43:13Z",
        "lastEditedBy" : "56bacb42-5a21-41c7-bce7-c4ce57a99717",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0c290f4879a542b027b4c36a922f5ae2216ed5a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +632,636 @@        return self.book.close()\n\n    def write_cells(self, cells, sheet_name=None, startrow=0, startcol=0):\n        # Write the frame cells using xlsxwriter.\n"
  }
]