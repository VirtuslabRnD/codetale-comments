[
  {
    "id" : "8a6d89cc-af5e-450d-87bc-6c578eeecc67",
    "prId" : 28398,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28398#pullrequestreview-287614976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a44a9dbb-c192-4f40-a3a5-c6fc0e680547",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "doesnt need to be for this PR, but most/all of the PyFoo_Check calls can be replaced with their pure-python equivalents; cython will now automatically make the optimization",
        "createdAt" : "2019-09-12T04:19:47Z",
        "updatedAt" : "2019-09-12T17:28:14Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "44f192fd-4c60-4180-92a8-f7265badc25d",
        "parentId" : "a44a9dbb-c192-4f40-a3a5-c6fc0e680547",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "So basically replace this with `isinstance` checks right? I think OK as a separate PR @amunch if that's something you'd also like to tackle",
        "createdAt" : "2019-09-12T15:53:29Z",
        "updatedAt" : "2019-09-12T17:28:14Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "59a7dbc2-9186-4973-967b-efae7f6053e2",
        "parentId" : "a44a9dbb-c192-4f40-a3a5-c6fc0e680547",
        "authorId" : "8582eb6c-8955-4b2b-b30f-c0760eeb5a0a",
        "body" : "Sounds good, I will replace these checks in a separate pull request.",
        "createdAt" : "2019-09-12T18:15:07Z",
        "updatedAt" : "2019-09-12T18:15:07Z",
        "lastEditedBy" : "8582eb6c-8955-4b2b-b30f-c0760eeb5a0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3496256c076271521ab574e4e190d04e34006cb8",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +11,15 @@from cpython.object cimport PyCallable_Check\nfrom cpython.tuple cimport PyTuple_Check\nfrom cpython.unicode cimport PyUnicode_Check, PyUnicode_AsEncodedString\n\nfrom libc.stdlib cimport free, malloc"
  },
  {
    "id" : "9a553f4a-4f00-4c3a-aba8-3d14ec8b9d91",
    "prId" : 29271,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29271#pullrequestreview-308808756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b62fe710-6eeb-4df6-9ebc-ef7847e240bc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really? cython doesn't understand the else here?",
        "createdAt" : "2019-10-29T20:18:05Z",
        "updatedAt" : "2019-10-29T20:18:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8c77b062-d52e-4706-977a-3958d5ee40ae",
        "parentId" : "b62fe710-6eeb-4df6-9ebc-ef7847e240bc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Its clang giving a \"code will never be executed\" warning",
        "createdAt" : "2019-10-29T20:23:30Z",
        "updatedAt" : "2019-10-29T20:23:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ec86ab40062c149491caa38630cea194567180",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +236,240 @@            else:\n                raise TypeError(\"can't serialize {thing!r}\".format(thing=o))\n            break\n        return ret\n"
  }
]