[
  {
    "id" : "5610e16f-c877-495b-9b1b-27eef2876c8f",
    "prId" : 10249,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f343c145-85fe-4ee7-8532-0ea489e61dc9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number here\n",
        "createdAt" : "2015-06-02T13:59:07Z",
        "updatedAt" : "2015-06-07T07:53:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f41f4d47688a1b4ea601383ab249075d4cff321b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +122,126 @@    def test_dateparser_resolution_if_not_ns(self):\n        # issue 10245\n        data = \"\"\"\\\ndate,time,prn,rxstatus\n2013-11-03,19:00:00,126,00E80000"
  },
  {
    "id" : "797bc8b2-fa67-424e-a844-1c6799551f36",
    "prId" : 14862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14862#pullrequestreview-12883034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think this should actually parse as datetime and make the space a NaT. So this 'works' in that it doesn't convert as today's date, but it is not registering as missing here.",
        "createdAt" : "2016-12-12T11:38:12Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7ca788ca-5b9a-4399-8446-673dc436f8d4",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Currently it looks like `errors='ignore'` is set when parsing datetimes with `read_csv` ([example](https://github.com/pandas-dev/pandas/blob/master/pandas/io/parsers.py#L2743)). I can change this to `errors='coerce'` ",
        "createdAt" : "2016-12-12T18:19:59Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "946982bf-81ca-48e7-8afb-0577305a1c0b",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, I think we did that on purpose..\r\n\r\nthat whole clause is bogus, ``errors='ignore'`` means it will *never* raise.\r\n\r\nbut its a bit tricky, you want to try to parse, then fallback on a softer-parse if necessary.\r\n\r\ntry playing around with this and see what happens.",
        "createdAt" : "2016-12-12T18:36:07Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5c5261fe-aaf3-40d5-8acd-3ef300179d64",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Ah thanks for the insight. I'll tinker with it later tonight. ",
        "createdAt" : "2016-12-12T18:38:43Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "3b895712-8744-4b98-9712-d6a1389a90f4",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "You were correct; current tests require `errors='ignore'`. \r\n\r\nThis is tricky since `errors='ignore'` and `errors='coerce'` both terminate the parse with `NaT`s or returning the input. Would it be possible to introduce a new kwarg (e.g. `date_errors`) to pass ignore/coerce/raise, into `to_datetime` within `read_csv`? It could default to ignore.",
        "createdAt" : "2016-12-13T06:38:29Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "91387024-75a3-43ae-9b5e-63325a22f8b3",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "> Would it be possible to introduce a new kwarg (e.g. date_errors) to pass ignore/coerce/raise, into to_datetime within read_csv? It could default to ignore.\r\n\r\nThis would make the API *even* more complicated. Generally supporting non-standard datetime parsing should simply use ``pd.to_datetime`` post-read_csv.\r\n\r\n@jorisvandenbossche any thoughts here.\r\n\r\n",
        "createdAt" : "2016-12-13T11:27:17Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a4469dda-c1bd-4cd3-96d6-1f2f71736c64",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Fair point.\r\n\r\nI could clarify in the docs that if `parse_dates` cannot parse a date the column is returned untouched (which seems like the current behavior) and the user can coerce a space or any unparseable date to `NaT` post-`read_csv` with `to_datetime`",
        "createdAt" : "2016-12-13T19:32:36Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "83a7e307-4153-467d-9c13-285f12e88e7c",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah that's prob the best soln here (pls add to doc-string & a small warning/note section in io.rst if you don't mind).",
        "createdAt" : "2016-12-13T23:43:54Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "04d19cff-747c-437a-a579-237888f6c255",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yep, I agree that we should not add kwargs to read_csv for something like this. If you want the date parser, your dates should just be able to be parsed with the default settings, otherwise you can just use `to_datetime`. PR for doc clarification certainly welcome!",
        "createdAt" : "2016-12-14T11:00:49Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "448d8720-a5c1-41f2-9cfa-74b1e410be70",
        "parentId" : "92b71d00-3cef-4a74-add8-ca55025322e0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> PR for doc clarification certainly welcome!\r\n\r\nwhich you already included here :-)",
        "createdAt" : "2016-12-14T11:02:02Z",
        "updatedAt" : "2016-12-14T11:06:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "23a4cb1611240b0aeb688d053159f4a094306516",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +143,147 @@        data = \"\"\"case,opdate\n                  7,10/18/2006\n                  7,10/18/2008\n                  621, \"\"\"\n        result = read_csv(StringIO(data), parse_dates=['opdate'])"
  }
]