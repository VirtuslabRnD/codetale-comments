[
  {
    "id" : "7087c5f5-67cf-4253-8428-2c2a5815669e",
    "prId" : 5602,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e693df89-076e-46af-a9c4-6bc2bb29a675",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use self.assertTrue(len.....)\n",
        "createdAt" : "2014-04-28T01:42:55Z",
        "updatedAt" : "2014-06-17T03:58:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba5ead1e3e713fec59458ab2165959e8886e70b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +281,285 @@        else:\n            assert len(options)> 1\n\n        self.assertTrue(len(options) > 1)\n"
  },
  {
    "id" : "abce66aa-f5bd-4db3-957a-cc4f958efaf0",
    "prId" : 5602,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9387abf6-e237-43a1-9734-d33c325a43e1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't use else here\njust assertTrue that the dates are > 1\nif the call fails with a remote data error u can raise nose.SkipTest (so u will need to separate the tests)\n",
        "createdAt" : "2014-04-28T01:45:37Z",
        "updatedAt" : "2014-06-17T03:58:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba5ead1e3e713fec59458ab2165959e8886e70b",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +307,311 @@        try:\n            dates = self.aapl._get_expiry_months()\n        except RemoteDataError:\n            raise nose.SkipTest(\"RemoteDataError thrown no dates found\")\n        self.assertTrue(len(dates) > 1)"
  }
]