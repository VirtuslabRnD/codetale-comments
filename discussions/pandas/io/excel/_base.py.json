[
  {
    "id" : "5ff88c61-e343-4b27-b4c5-1f0bbca297f3",
    "prId" : 25092,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25092#pullrequestreview-202513443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01f1c85f-e997-4a0a-9b19-66694183ce3d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "What was the requirement for this change?",
        "createdAt" : "2019-02-11T22:20:13Z",
        "updatedAt" : "2019-06-28T14:48:45Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "94dd1324-4a7c-4fe9-ad72-b2e298bf6445",
        "parentId" : "01f1c85f-e997-4a0a-9b19-66694183ce3d",
        "authorId" : "e56d2a4d-ce5a-4b87-90bb-9f43725365df",
        "body" : "sheet.nrows is an abstraction leakage of xlrd, an openpyxl sheet does not have this attribute. I think checking for if there is data is more explicit end general.",
        "createdAt" : "2019-02-12T07:21:34Z",
        "updatedAt" : "2019-06-28T14:48:45Z",
        "lastEditedBy" : "e56d2a4d-ce5a-4b87-90bb-9f43725365df",
        "tags" : [
        ]
      }
    ],
    "commit" : "dddc8c5aee1ab2d4529b30e516a86fe3db750c12",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +423,427 @@            usecols = _maybe_convert_usecols(usecols)\n\n            if not data:\n                output[asheetname] = DataFrame()\n                continue"
  },
  {
    "id" : "ca511b23-b911-48d7-a418-fa39b793eadd",
    "prId" : 25153,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25153#pullrequestreview-199914659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d74100a9-33a3-435c-9550-b46b86e5a07a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Had to move this into the class as it would be a circular reference otherwise, though ideally this shouldn't be required at all in the base class",
        "createdAt" : "2019-02-05T04:50:33Z",
        "updatedAt" : "2019-02-11T00:59:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "85f2fe8d2f4c7c39f4744e442fecbbe3e538b1d5",
    "line" : 752,
    "diffHunk" : "@@ -1,1 +750,754 @@    \"\"\"\n\n    from pandas.io.excel._xlrd import _XlrdReader\n\n    _engines = {"
  },
  {
    "id" : "3710d751-b4b9-44d7-9874-06b7294498ad",
    "prId" : 25153,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25153#pullrequestreview-200888051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ca16b0b-3ae8-459d-9312-7f23730ef013",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Why do we need to create this `error` variable?",
        "createdAt" : "2019-02-07T01:28:31Z",
        "updatedAt" : "2019-02-11T00:59:28Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "85f2fe8d2f4c7c39f4744e442fecbbe3e538b1d5",
    "line" : 595,
    "diffHunk" : "@@ -1,1 +593,597 @@                    error = ValueError(\"No engine for filetype: '{ext}'\"\n                                       .format(ext=ext))\n                    raise error\n            cls = get_writer(engine)\n"
  },
  {
    "id" : "0bb908e6-e6ed-4820-9b1f-0454d793cb57",
    "prId" : 26553,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26553#pullrequestreview-243042409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2782085f-d49a-42dd-877a-7547d925a642",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This isn't a user-facing bug but trying to import any of the ExcelWriter subclasses would exhibit rather surprising behavior which causes a test failure when getting rid of the subclassing. For instance:\r\n\r\n```python\r\n>>> from pandas.io.excel._openpyxl import _OpenpyxlWriter\r\n>>> writer = _OpenpyxlWriter('foo.xlsx')\r\n>>> type(writer)\r\n<class 'pandas.io.excel._xlsxwriter._XlsxWriter'>\r\n```\r\n\r\nFrom the comment directly preceding this it appears this condition was backwards, so changed as such",
        "createdAt" : "2019-05-29T05:20:00Z",
        "updatedAt" : "2019-05-29T05:21:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "39e4d4e37dca818ce73ed06924a1a79c323bd797",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +592,596 @@        # only switch class if generic(ExcelWriter)\n\n        if cls is ExcelWriter:\n            if engine is None or (isinstance(engine, str) and\n                                  engine == 'auto'):"
  },
  {
    "id" : "bd5b24ca-7e27-4726-85a2-2180246eb19d",
    "prId" : 26736,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26736#pullrequestreview-247385968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "782167e6-02fe-4069-b4df-84239fe36fa7",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is `io.engine` ever None? Coverage here might be a little suspect for cases like:\r\n\r\n```python\r\nread_excel(ExcelFile(), engine='xlrd')\r\n```\r\n\r\nwhich I suppose should work fine (assuming xlrd is default) but may not be covered here explicitly",
        "createdAt" : "2019-06-08T16:20:21Z",
        "updatedAt" : "2019-06-10T20:55:11Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e8e22e16-ae32-4e08-994c-64857240f0cb",
        "parentId" : "782167e6-02fe-4069-b4df-84239fe36fa7",
        "authorId" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "body" : "Current behaviour is `io.engine` in this line will default to 'xlrd' since that's in the ExcelFile constuctor -> added a test case to make this more explicit.",
        "createdAt" : "2019-06-09T00:20:24Z",
        "updatedAt" : "2019-06-10T20:55:11Z",
        "lastEditedBy" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "f52a53aa8bfc9b2a8576bfd1a694743ea133f4af",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +290,294 @@    if not isinstance(io, ExcelFile):\n        io = ExcelFile(io, engine=engine)\n    elif engine and engine != io.engine:\n        raise ValueError(\"Engine should not be specified when passing \"\n                         \"an ExcelFile - ExcelFile already has the engine set\")"
  },
  {
    "id" : "5daadaf2-c36e-4be5-a80c-a4013bcfdfa5",
    "prId" : 30519,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30519#pullrequestreview-338026893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f3fb0ca-db28-43ca-ba01-7bcc4474360e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is BytesIO absolutely required here? Seems like we could treat str / bytes more consistently",
        "createdAt" : "2020-01-03T00:58:11Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "dd429b80-725a-4181-870a-8c573d3401e9",
        "parentId" : "1f3fb0ca-db28-43ca-ba01-7bcc4474360e",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "> Seems like we could treat str / bytes more consistently\r\n\r\n@WillAyd : Consistently how?\r\n\r\nI could see some refactoring of this logic (there's a lot of duplicate `load_workbook` code), but in general, I think this addition makes sense.",
        "createdAt" : "2020-01-03T01:34:20Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "48dcd472-1842-4895-b7d8-64e052069d09",
        "parentId" : "1f3fb0ca-db28-43ca-ba01-7bcc4474360e",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "We aren't wrapping str with an IO object so asking if that's really required for bytes",
        "createdAt" : "2020-01-03T01:35:33Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "aca0fef7-3b79-40b4-b11b-5b3d2efe2226",
        "parentId" : "1f3fb0ca-db28-43ca-ba01-7bcc4474360e",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Gotcha.  Thanks for clarifying!\r\n\r\n@ftruzzi : Can you confirm if `BytesIO` is needed or not?\r\n\r\nI suspect the answer is yes, but makes sense to double check for future reference.",
        "createdAt" : "2020-01-03T02:04:58Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "eefec2b3-c807-443b-b8a0-4190374d4a58",
        "parentId" : "1f3fb0ca-db28-43ca-ba01-7bcc4474360e",
        "authorId" : "53234afb-349b-4fe3-8dbe-64f563e84041",
        "body" : "Yes I think it is needed. Probably `str` works just for filenames and not for stringified objects?\r\n\r\nI had tried to treat `str` and `buffer` the same way, which could work with xlrd by passing the file contents to the `file_contents` kwarg in `xlrd.open_workbook` but I found no way to do the same thing in openpyxl and other engines.\r\n\r\nAnd just by skipping `BytesIO`, engines complain as they try to open the thing as if it was a file:\r\n```\r\nFile \"...\\xlrd\\__init__.py\", line 111, in open_workbook\r\n    with open(filename, \"rb\") as f:\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x91 in position 14: invalid start byte\r\n```\r\nand\r\n```\r\nopenpyxl.utils.exceptions.InvalidFileException: openpyxl does not support b'.relspk\\x05\\x06\\x00\\x00\\x00\\x00\\x1d\\x00\\x1d\\x00\\xe1\\x07\\x00\\x00\\x8f\\xa9\\x0e\\x00\\x00\\x00' file format, please check you can open it with Excel first. Supported formats are: .xlsx,.xlsm,.xltx,.xltm\r\n```",
        "createdAt" : "2020-01-03T10:42:37Z",
        "updatedAt" : "2020-01-03T11:16:23Z",
        "lastEditedBy" : "53234afb-349b-4fe3-8dbe-64f563e84041",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ab35b2672e2e5b134f63d370a27ec9e90c79850",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +352,356 @@            self.book = self.load_workbook(filepath_or_buffer)\n        elif isinstance(filepath_or_buffer, bytes):\n            self.book = self.load_workbook(BytesIO(filepath_or_buffer))\n        else:\n            raise ValueError("
  },
  {
    "id" : "2e1a12e3-bf1c-4bd7-9bc4-4bcc47276f80",
    "prId" : 32544,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32544#pullrequestreview-372827916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b83f4b0-8ad8-492e-9e28-b13b383c6c5e",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Would it make sense to make this an abstract method, and make child classes be explicit on how the close is performed (including when no close is performed)?",
        "createdAt" : "2020-03-11T12:50:07Z",
        "updatedAt" : "2020-03-12T02:29:39Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "deba416f-c80b-4d92-8e0c-1bb3a34d3041",
        "parentId" : "7b83f4b0-8ad8-492e-9e28-b13b383c6c5e",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "In an earlier version of this PR, this was an abstract method, but the powers that be preferred this.",
        "createdAt" : "2020-03-11T14:35:07Z",
        "updatedAt" : "2020-03-12T02:29:39Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      },
      {
        "id" : "c2b35fec-9632-41e4-b6c4-671439f0912c",
        "parentId" : "7b83f4b0-8ad8-492e-9e28-b13b383c6c5e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "We can't make a new abstract method in a bugfix release. Any child not implementing it would fail when the class is instantiated.",
        "createdAt" : "2020-03-11T14:46:36Z",
        "updatedAt" : "2020-03-12T02:29:39Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8ea7bbe38ee21bf685ef7a5cfc7a96817a56cc1",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +367,371 @@        pass\n\n    def close(self):\n        pass\n"
  },
  {
    "id" : "21d3306e-c170-44df-b669-46cc4e618d66",
    "prId" : 32911,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32911#pullrequestreview-401958995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0dd9e3b-bb15-4a06-849e-b566b8c8f8db",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Rather than this should register the writer globally\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/120e9d9fae447be2e1cea3fd83a1f19501972cca/pandas/core/config_init.py#L576",
        "createdAt" : "2020-04-22T03:45:36Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b4c190d4-3f8f-42ac-a4fa-7c802dcf0b99",
        "parentId" : "e0dd9e3b-bb15-4a06-849e-b566b8c8f8db",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "The weird thing is that this stuff does not seem to be used anywhere. Correct me if I'm wrong. I added a similar bit for the OpenOffice file format, but it did not seem to be called/tested anywhere.",
        "createdAt" : "2020-04-28T15:33:44Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e2684fd69f51ca7fa8b0b0f98d708054273ccaa",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +851,855 @@            else:\n                ext = os.path.splitext(str(path_or_buffer))[-1]\n                if ext == \".ods\":\n                    engine = \"odf\"\n        if engine not in self._engines:"
  },
  {
    "id" : "c5fd5012-b00c-47e5-a3e8-1e1a9313f241",
    "prId" : 34261,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34261#pullrequestreview-419239200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccfbf8e6-c806-42be-b671-0bdfdfca1f6c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we type this? (not sure its easy)",
        "createdAt" : "2020-05-27T12:38:57Z",
        "updatedAt" : "2020-05-29T20:47:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b7c7eee3-b28b-441a-995c-a0cb7baddf1b",
        "parentId" : "ccfbf8e6-c806-42be-b671-0bdfdfca1f6c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Out of scope for this PR I think.",
        "createdAt" : "2020-05-27T13:29:24Z",
        "updatedAt" : "2020-05-29T20:47:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3c772995-edb6-407c-bb82-5dee6535cc66",
        "parentId" : "ccfbf8e6-c806-42be-b671-0bdfdfca1f6c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure",
        "createdAt" : "2020-05-27T14:01:21Z",
        "updatedAt" : "2020-05-29T20:47:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fda069b8a960a28c75f16a6d42d727a5382562f",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +832,836 @@\n        # Could be a str, ExcelFile, Book, etc.\n        self.io = io\n        # Always a string\n        self._io = stringify_path(io)"
  },
  {
    "id" : "2d3e1d4d-6053-4405-bafc-7e195e4227f8",
    "prId" : 35029,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35029#pullrequestreview-440868878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "470c01fd-106c-472f-9422-fb67b75803bc",
        "parentId" : null,
        "authorId" : "20e5c7f7-c999-48f9-9390-465c5aeb60bf",
        "body" : "```suggestion\r\nif ext == \".xls\":\r\n    engine = \"xlrd\"\r\n```\r\nGiven that openpyxl doesn't support old `.xls` files.",
        "createdAt" : "2020-06-29T20:04:08Z",
        "updatedAt" : "2020-12-01T22:05:27Z",
        "lastEditedBy" : "20e5c7f7-c999-48f9-9390-465c5aeb60bf",
        "tags" : [
        ]
      },
      {
        "id" : "abda68b6-a659-445c-acf8-98ae0bf125a4",
        "parentId" : "470c01fd-106c-472f-9422-fb67b75803bc",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "Added",
        "createdAt" : "2020-07-01T13:28:38Z",
        "updatedAt" : "2020-12-01T22:05:27Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10a898b3a0f3d224e9f5635b62dc1e641e5152",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +954,958 @@                if ext == \".ods\":\n                    engine = \"odf\"\n\n            if (\n                import_optional_dependency("
  },
  {
    "id" : "5cd57405-16fe-442e-9f87-4f29e8cfce3d",
    "prId" : 35029,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35029#pullrequestreview-541904240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bddfa977-7e62-4a25-ba72-b730d2764882",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "obviously as much of the formatting you can do here as well",
        "createdAt" : "2020-12-01T13:46:00Z",
        "updatedAt" : "2020-12-01T22:05:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10a898b3a0f3d224e9f5635b62dc1e641e5152",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +916,920 @@           used to determine the engine.\n\n           - If ``path_or_buffer`` is an OpenDocument format (.odf, .ods, .odt),\n             then `odf <https://pypi.org/project/odfpy/>`_ will be used.\n           - Otherwise if ``path_or_buffer`` is a bytes stream, the file has the"
  },
  {
    "id" : "c4593a37-2953-4ede-b8de-d582baeb1b4d",
    "prId" : 35974,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35974#pullrequestreview-493081145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76292172-e681-42c5-a0e5-3088115c784f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this looks like its causing failures on master",
        "createdAt" : "2020-09-22T00:01:09Z",
        "updatedAt" : "2020-09-22T00:01:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "75834f78-3162-4ea5-8893-44a45c2687fe",
        "parentId" : "76292172-e681-42c5-a0e5-3088115c784f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yep: https://dev.azure.com/pandas-dev/pandas/_build/results?buildId=43000&view=logs&j=b1c7b65e-b3ce-541a-7fd5-29b4ba56ce18&t=46ecc253-e38f-5abc-2ea7-addca6b44d0a\r\n\r\n@jbrockmendel can you revert for now and we can reopen",
        "createdAt" : "2020-09-22T01:34:49Z",
        "updatedAt" : "2020-09-22T01:34:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b242ca395110d08667df6779f65a0d63b522a5fe",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +469,473 @@                skiprows_nrows = 0\n            else:\n                skiprows_nrows = len(skiprows)\n\n            data = self.get_sheet_data("
  }
]