[
  {
    "id" : "f1469b52-2f5d-4cc8-8b9b-55bb47bd4754",
    "prId" : 25427,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25427#pullrequestreview-256087954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4c10570-90ab-4d30-aa9f-7ee340f7f36f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "@detrout had to modify this method a bit for compat with other readers and to handle vertical cell merging. My extensions to your code may not be ideal so please let me know of feedback",
        "createdAt" : "2019-06-30T19:36:29Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7322f9b9-8061-4ab2-bcbd-b9e3760f7833",
        "parentId" : "b4c10570-90ab-4d30-aa9f-7ee340f7f36f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Also a lot of the complication here is due to the sparse nature of the source file. @TomAugspurger may have general insights on how to correctly parse this type of data",
        "createdAt" : "2019-06-30T19:40:11Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4026fc1f5ec58c9482339293928cda0f92143c94",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@        table = []  # type: List[List[Scalar]]\n\n        for i, sheet_row in enumerate(sheet_rows):\n            sheet_cells = [x for x in sheet_row.childNodes\n                           if x.qname in cell_names]"
  },
  {
    "id" : "777ca30a-464a-40b0-942b-5e1294353395",
    "prId" : 25427,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25427#pullrequestreview-256853567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "may want to break this up with some helper methods (e.g. leave the nested loops here ) and call into a function for a cell",
        "createdAt" : "2019-07-01T22:21:22Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c4119ee-e84d-49f5-a3f1-99d0182a235c",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The tricky thing with moving the cell-level code out is going to be the `row_span` (which signals if a particular cell is merged vertically). This gets passed to a dict whose scope is outside of the loops so that the next row iteration can know if it needs to account for a vertical merge while de-sparsifying\r\n\r\nSo if the cell-level parsing gets moved to a separate function I think we'd want to return the row_span from that or pass all of the mutable structures into that function. Not sure if that helps readability\r\n\r\n^ not objecting just a point to consider\r\n\r\n",
        "createdAt" : "2019-07-02T01:31:08Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "16d889d5-2605-4878-a9f8-c810c34912fc",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Ignore this comment - found a better way",
        "createdAt" : "2019-07-02T03:09:41Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a4e27d2b-f2e4-4cdd-9380-c2b54a933596",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Refactor up so hope this is less of an issue. The inner loops both modify containers declared outside of their respective loops so I *think* moving might make things less readable but lmk",
        "createdAt" : "2019-07-02T12:19:11Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4026fc1f5ec58c9482339293928cda0f92143c94",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@            empty_cells = 0\n            table_row = []  # type: List[Scalar]\n\n            for j, sheet_cell in enumerate(sheet_cells):\n                if sheet_cell.qname == table_cell_name:"
  },
  {
    "id" : "34ac2824-c8d9-49a5-b032-88235386ed10",
    "prId" : 30619,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30619#pullrequestreview-337725006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb46eaf3-722a-4f11-956e-bc1af80a04d4",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "remove code always True",
        "createdAt" : "2020-01-02T15:59:09Z",
        "updatedAt" : "2020-01-02T16:11:33Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "264256e1d61ddd9fc9309388b821a60450af2b5e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +157,161 @@            cell_value = float(cell.attributes.get((OFFICENS, \"value\")))\n\n            if cell_value == 0.0:  # NA handling\n                return str(cell)\n"
  }
]