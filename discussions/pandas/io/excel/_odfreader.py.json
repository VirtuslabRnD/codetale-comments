[
  {
    "id" : "f1469b52-2f5d-4cc8-8b9b-55bb47bd4754",
    "prId" : 25427,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25427#pullrequestreview-256087954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4c10570-90ab-4d30-aa9f-7ee340f7f36f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "@detrout had to modify this method a bit for compat with other readers and to handle vertical cell merging. My extensions to your code may not be ideal so please let me know of feedback",
        "createdAt" : "2019-06-30T19:36:29Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7322f9b9-8061-4ab2-bcbd-b9e3760f7833",
        "parentId" : "b4c10570-90ab-4d30-aa9f-7ee340f7f36f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Also a lot of the complication here is due to the sparse nature of the source file. @TomAugspurger may have general insights on how to correctly parse this type of data",
        "createdAt" : "2019-06-30T19:40:11Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4026fc1f5ec58c9482339293928cda0f92143c94",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@        table = []  # type: List[List[Scalar]]\n\n        for i, sheet_row in enumerate(sheet_rows):\n            sheet_cells = [x for x in sheet_row.childNodes\n                           if x.qname in cell_names]"
  },
  {
    "id" : "777ca30a-464a-40b0-942b-5e1294353395",
    "prId" : 25427,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25427#pullrequestreview-256853567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "may want to break this up with some helper methods (e.g. leave the nested loops here ) and call into a function for a cell",
        "createdAt" : "2019-07-01T22:21:22Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c4119ee-e84d-49f5-a3f1-99d0182a235c",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The tricky thing with moving the cell-level code out is going to be the `row_span` (which signals if a particular cell is merged vertically). This gets passed to a dict whose scope is outside of the loops so that the next row iteration can know if it needs to account for a vertical merge while de-sparsifying\r\n\r\nSo if the cell-level parsing gets moved to a separate function I think we'd want to return the row_span from that or pass all of the mutable structures into that function. Not sure if that helps readability\r\n\r\n^ not objecting just a point to consider\r\n\r\n",
        "createdAt" : "2019-07-02T01:31:08Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "16d889d5-2605-4878-a9f8-c810c34912fc",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Ignore this comment - found a better way",
        "createdAt" : "2019-07-02T03:09:41Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a4e27d2b-f2e4-4cdd-9380-c2b54a933596",
        "parentId" : "583cfeca-5c57-44dc-bc00-d1f8b63fdbe9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Refactor up so hope this is less of an issue. The inner loops both modify containers declared outside of their respective loops so I *think* moving might make things less readable but lmk",
        "createdAt" : "2019-07-02T12:19:11Z",
        "updatedAt" : "2019-07-02T12:42:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4026fc1f5ec58c9482339293928cda0f92143c94",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@            empty_cells = 0\n            table_row = []  # type: List[Scalar]\n\n            for j, sheet_cell in enumerate(sheet_cells):\n                if sheet_cell.qname == table_cell_name:"
  },
  {
    "id" : "34ac2824-c8d9-49a5-b032-88235386ed10",
    "prId" : 30619,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30619#pullrequestreview-337725006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb46eaf3-722a-4f11-956e-bc1af80a04d4",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "remove code always True",
        "createdAt" : "2020-01-02T15:59:09Z",
        "updatedAt" : "2020-01-02T16:11:33Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "264256e1d61ddd9fc9309388b821a60450af2b5e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +157,161 @@            cell_value = float(cell.attributes.get((OFFICENS, \"value\")))\n\n            if cell_value == 0.0:  # NA handling\n                return str(cell)\n"
  },
  {
    "id" : "66b89ef9-c73b-4315-95dd-ac70dae183b2",
    "prId" : 32911,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32911#pullrequestreview-436602050",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af24c344-2735-48a9-9d45-0b009acf8733",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is there a reason for the changes to the reader here? If solving a separate issue should do in a separate PR",
        "createdAt" : "2020-03-23T02:38:18Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f12402ec-89a0-4279-95ba-8d3820890b8a",
        "parentId" : "af24c344-2735-48a9-9d45-0b009acf8733",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "This came up when doing roundtrip tests. I had to fix this one or else every 0 in the sheet would be removed.",
        "createdAt" : "2020-03-23T16:05:06Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      },
      {
        "id" : "2087b011-00d3-4d26-9a0f-2df8db33ecd5",
        "parentId" : "af24c344-2735-48a9-9d45-0b009acf8733",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you just add a quick whatâ€™s new for this too?",
        "createdAt" : "2020-04-22T03:46:01Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7b428fc4-c5d7-4126-ab3c-6285b519f787",
        "parentId" : "af24c344-2735-48a9-9d45-0b009acf8733",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "Added",
        "createdAt" : "2020-06-24T12:34:52Z",
        "updatedAt" : "2020-06-24T12:34:52Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e2684fd69f51ca7fa8b0b0f98d708054273ccaa",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1,5 @@from typing import List, cast\n\nimport numpy as np\n\nfrom pandas._typing import FilePathOrBuffer, Scalar"
  },
  {
    "id" : "422bb9ba-54e7-4548-839a-c64df77fd88c",
    "prId" : 32911,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32911#pullrequestreview-427535113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3f77c5e-87ba-46fe-afba-09a18ff2cb2d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are there tests for NA handling?",
        "createdAt" : "2020-04-26T20:48:06Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5983ce99-96e5-409e-a6db-f43e5665e97a",
        "parentId" : "b3f77c5e-87ba-46fe-afba-09a18ff2cb2d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do these exist?",
        "createdAt" : "2020-05-28T23:24:29Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "27f645ac-fa83-4ffd-8bb8-aa6d441116f6",
        "parentId" : "b3f77c5e-87ba-46fe-afba-09a18ff2cb2d",
        "authorId" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "body" : "Yes: test_readers.py::TestReaders::test_excel_cell_error_na",
        "createdAt" : "2020-06-09T20:50:40Z",
        "updatedAt" : "2020-06-24T12:34:28Z",
        "lastEditedBy" : "92af78be-4738-4bc6-b40e-4ef15a6e8b70",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e2684fd69f51ca7fa8b0b0f98d708054273ccaa",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +151,155 @@        from odf.namespaces import OFFICENS\n\n        if str(cell) == \"#N/A\":\n            return np.nan\n"
  },
  {
    "id" : "ffea9126-142b-46cc-859c-5a926d83b741",
    "prId" : 33233,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33233#pullrequestreview-386732134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50553b3d-7da2-4333-bad8-8f12005e06a0",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you just add a quick docstring as to why this required? i.e. that it preserves spaces",
        "createdAt" : "2020-04-02T19:29:31Z",
        "updatedAt" : "2020-04-03T17:07:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7894eda09455fa14b4dd2e4dcbdc48e35f6810b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +189,193 @@        a run length encoded sequence of space characters.\n        \"\"\"\n        from odf.element import Text, Element\n        from odf.text import S, P\n        from odf.namespaces import TEXTNS"
  },
  {
    "id" : "b0533cda-e14c-4da6-9f88-15335621e34f",
    "prId" : 36175,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36175#pullrequestreview-485184018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77747a56-afa4-4236-9855-bfdb9a768059",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is there any reason to call str(fragment) instead of always just calling `self._get_cell_string_value(fragment)`?",
        "createdAt" : "2020-09-09T15:19:44Z",
        "updatedAt" : "2020-09-11T20:25:11Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "21ad362d-6e0e-48c6-b404-3edbcb55b7ff",
        "parentId" : "77747a56-afa4-4236-9855-bfdb9a768059",
        "authorId" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "body" : "then we'd need to handle the `str` method for all the different cases which would require going into the spec. `odfpy` already has the str implementations done. the only case that was problematic was the multiple spaces that was addressed in the previous linked PR.",
        "createdAt" : "2020-09-09T16:14:54Z",
        "updatedAt" : "2020-09-11T20:25:11Z",
        "lastEditedBy" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e6b2e1809f2a96414530dc4004656d175e781ac",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +217,221 @@                    value.append(self._get_cell_string_value(fragment))\n            else:\n                value.append(str(fragment))\n        return \"\".join(value)"
  },
  {
    "id" : "f1031b96-ddbe-48d3-9a69-f0a9652bf93c",
    "prId" : 36175,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36175#pullrequestreview-486266069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff9c4f0e-be42-4f2d-89cb-8bbaa3551459",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "As a reader it isn't clear to me what this means; is this a bug that needs to be fixed upstream?",
        "createdAt" : "2020-09-10T19:16:26Z",
        "updatedAt" : "2020-09-11T20:25:11Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a7b8f6e6-9e79-429b-9233-96e62adc611b",
        "parentId" : "ff9c4f0e-be42-4f2d-89cb-8bbaa3551459",
        "authorId" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "body" : "before #33233, the value was `str(cell)` which relied on the upstream odfpy implementation.\r\n\r\n#33233 attempted to fix cases where multiple spaces was getting skipped in the output. That is because odfpy's str implementations for Nodes/Elements that are of that specific type (`from odf.text import S`) does not include the actual number of spaces. This imo should have been addressed upstream.\r\n\r\n#33233 also introduced the bug that is causing the current UnboundLocalError as one line is misaligned. But fixing the misalignment adds in more bugs. With just the indentation fix, the output will still be missing certain fragments from the cell (for the file in #36122).\r\n\r\nThis was my original reason for doing a monkeypatch that patched `__str__` implementation of the `Element` nodes to include the `S` spaces Node. I changed the monkeypatch but instead changed the implementation of `_get_cell_string_value` to have the same behavior as the monkeypatch. It still relies on `odfpy`'s str implementation for all other Element types except for the Space Node, otherwise it pretty much mirrors `Element.__str__` from odfpy.\r\n\r\nSorry for the wall of text.",
        "createdAt" : "2020-09-10T19:58:26Z",
        "updatedAt" : "2020-09-11T20:25:11Z",
        "lastEditedBy" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e6b2e1809f2a96414530dc4004656d175e781ac",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +212,216 @@                    value.append(\" \" * spaces)\n                else:\n                    # recursive impl needed in case of nested fragments\n                    # with multiple spaces\n                    # https://github.com/pandas-dev/pandas/pull/36175#discussion_r484639704"
  }
]