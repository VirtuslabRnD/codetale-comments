[
  {
    "id" : "d8ff93ac-17fa-4434-9a7f-82e04e1229d8",
    "prId" : 952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b44d367-d464-4ade-980e-84b95ffa3ea2",
        "parentId" : null,
        "authorId" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "body" : "I'd be less strict with this first check - there might be situations where you want to pass a generator rather than a list. I'd do `self.colspecs = list(colspecs)`, and let it handle anything that can be turned into a list.\n",
        "createdAt" : "2012-03-22T15:20:30Z",
        "updatedAt" : "2012-03-24T22:50:19Z",
        "lastEditedBy" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "tags" : [
        ]
      },
      {
        "id" : "e750171b-737f-463a-a536-d761bdddfbc7",
        "parentId" : "4b44d367-d464-4ade-980e-84b95ffa3ea2",
        "authorId" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "body" : "Good idea. WIll do.\n",
        "createdAt" : "2012-03-22T16:07:00Z",
        "updatedAt" : "2012-03-24T22:50:19Z",
        "lastEditedBy" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "tags" : [
        ]
      },
      {
        "id" : "14d4ce79-4580-4613-984b-993fb7185b14",
        "parentId" : "4b44d367-d464-4ade-980e-84b95ffa3ea2",
        "authorId" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "body" : "Done.\n",
        "createdAt" : "2012-03-24T16:03:14Z",
        "updatedAt" : "2012-03-24T22:50:20Z",
        "lastEditedBy" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e08b52e4eedba54b7c19f6078ac6ed1e0393a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +672,676 @@        self.filler = filler # Empty characters between fields.\n\n        assert isinstance(colspecs, (tuple, list))\n        for colspec in colspecs:\n            assert isinstance(colspec, (tuple, list))"
  },
  {
    "id" : "072cfbb8-2e7c-4a72-850e-cd84b7efe9dc",
    "prId" : 952,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "472d26a6-7fef-4a45-a758-45725f1615e1",
        "parentId" : null,
        "authorId" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "body" : "I'm not wild on the use of `locals()` for these, it seems like unnecessary magic.  But maybe I'm being overly picky.\n",
        "createdAt" : "2012-03-24T21:19:37Z",
        "updatedAt" : "2012-03-24T22:50:20Z",
        "lastEditedBy" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "tags" : [
        ]
      },
      {
        "id" : "50e1e589-a825-432c-b193-b6e7667a59c0",
        "parentId" : "472d26a6-7fef-4a45-a758-45725f1615e1",
        "authorId" : "55206695-bb42-4d72-886f-f5370a77363e",
        "body" : "Well, the alternative here is to either write out `kw=kw` for each keyword argument or to have `**kwds` which makes the signature in IPython less attractive. Not sure what's the best solution-- using locals doesn't strike me as so bad\n",
        "createdAt" : "2012-03-24T21:41:35Z",
        "updatedAt" : "2012-03-24T22:50:20Z",
        "lastEditedBy" : "55206695-bb42-4d72-886f-f5370a77363e",
        "tags" : [
        ]
      },
      {
        "id" : "2da9b9ad-fd5f-453c-9567-39ce3d75c4c7",
        "parentId" : "472d26a6-7fef-4a45-a758-45725f1615e1",
        "authorId" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "body" : "Having to enumerate all the paramters is both error-prone, makes it difficult to extend the other functions, and it hides the differences between the calls to _read(). I wish there was a method to get just the args, but there isn't. \n",
        "createdAt" : "2012-03-24T22:04:31Z",
        "updatedAt" : "2012-03-24T22:50:20Z",
        "lastEditedBy" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "tags" : [
        ]
      },
      {
        "id" : "c1b5ddfd-e95c-4c44-a656-e851e4ec39a9",
        "parentId" : "472d26a6-7fef-4a45-a758-45725f1615e1",
        "authorId" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "body" : "Indeed. I think PEP 362 is aimed at this sort of thing - you'd use `**kwargs`, and construct a more meaningful function signature for introspection - but that's still a work in progress.\n",
        "createdAt" : "2012-03-24T22:45:30Z",
        "updatedAt" : "2012-03-24T22:50:20Z",
        "lastEditedBy" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "tags" : [
        ]
      },
      {
        "id" : "871b25ec-37e0-4371-b768-8e95fd29bf3b",
        "parentId" : "472d26a6-7fef-4a45-a758-45725f1615e1",
        "authorId" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "body" : "Ideally it would be like LISP and a :as variable could be assigned to the set of kwargs. But it's Python. Whatever. We'll eventually end up with LISP again.\n",
        "createdAt" : "2012-03-24T22:53:28Z",
        "updatedAt" : "2012-03-24T22:53:28Z",
        "lastEditedBy" : "b74e9201-b200-4bc3-b475-a572ab0ad62b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e08b52e4eedba54b7c19f6078ac6ed1e0393a7",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +149,153 @@             delimiter=None,\n             encoding=None):\n    kwds = locals()\n\n    # Alias sep -> delimiter."
  }
]