[
  {
    "id" : "78091a25-a1af-4f26-b869-49f71ba246c7",
    "prId" : 6745,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1f2ff93-5f87-4ba9-a77f-25eaddd54167",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "In theory this would fail if duplicate items (prob not tested nor likely though)\n",
        "createdAt" : "2014-04-18T23:34:44Z",
        "updatedAt" : "2014-04-25T13:50:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1da304a3-fb5c-4b86-88c9-886d96aa32e3",
        "parentId" : "f1f2ff93-5f87-4ba9-a77f-25eaddd54167",
        "authorId" : "413be534-cedb-4df7-abda-cde26db33acd",
        "body" : "There were several places like this, all of which were refactored to be functionally equivalent, whenever old code would fail, new code should fail too. I figured that fixing non-trivial duplicate columns issues is better done in separate PRs, this one is already huge.\n",
        "createdAt" : "2014-04-19T07:47:24Z",
        "updatedAt" : "2014-04-25T13:50:55Z",
        "lastEditedBy" : "413be534-cedb-4df7-abda-cde26db33acd",
        "tags" : [
        ]
      },
      {
        "id" : "3a4b192d-41af-4b96-9b09-80b72f326709",
        "parentId" : "f1f2ff93-5f87-4ba9-a77f-25eaddd54167",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "agreed\n",
        "createdAt" : "2014-04-19T08:22:27Z",
        "updatedAt" : "2014-04-25T13:50:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f51235aef9bbb50632b569d9e0c104816e5e31a0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +486,490 @@            return make_block(values=values,\n                              klass=getattr(internals, b['klass']),\n                              placement=axes[0].get_indexer(b['items']))\n\n        blocks = [create_block(b) for b in obj['blocks']]"
  },
  {
    "id" : "18a83647-d8b7-4ae7-a0fe-f33b22f8c283",
    "prId" : 9783,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21644c48-e3f2-4a80-a9f6-0737616093d4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, no longer need to encode? (honestly I don't remember why I did that in the first place).\n",
        "createdAt" : "2015-04-02T20:44:03Z",
        "updatedAt" : "2015-04-02T20:44:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9092ebcf-b762-4e60-bef9-ecc1eb6cfdf2",
        "parentId" : "21644c48-e3f2-4a80-a9f6-0737616093d4",
        "authorId" : "756724d5-7da1-49b1-b97c-5caab0c27186",
        "body" : "Actually, I moved the encode higher up to line 237.  For some reason, type(values) was unicode.  Both zlib.decompress and blosc.decompress do not take unicode and only accept encoded strings.\n",
        "createdAt" : "2015-04-03T01:37:41Z",
        "updatedAt" : "2015-04-03T01:37:41Z",
        "lastEditedBy" : "756724d5-7da1-49b1-b97c-5caab0c27186",
        "tags" : [
        ]
      }
    ],
    "commit" : "702be31ec71b2fe4ec40b72b9bc06804fd1a7373",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +248,252 @@\n    # from a string\n    return np.fromstring(values, dtype=dtype)\n\n"
  }
]