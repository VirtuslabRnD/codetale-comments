[
  {
    "id" : "e70342c3-bc85-4725-a201-bbb9997084b6",
    "prId" : 10649,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2882b8f1-09e6-4d94-b365-dc233a3126b6",
        "parentId" : null,
        "authorId" : "d0080aab-a8b1-4e6c-b4d4-d9cbccfb466e",
        "body" : "You can also do `compression = req.headers['Content-Encoding']` here, if it's being served as a gzip encoded.\n",
        "createdAt" : "2015-07-22T14:26:44Z",
        "updatedAt" : "2015-07-24T13:27:57Z",
        "lastEditedBy" : "d0080aab-a8b1-4e6c-b4d4-d9cbccfb466e",
        "tags" : [
        ]
      },
      {
        "id" : "ecbe037e-46c7-4056-9e30-5c060daf7611",
        "parentId" : "2882b8f1-09e6-4d94-b365-dc233a3126b6",
        "authorId" : "8905a4e5-fb85-4ec6-a2cc-f3d35a89a2ce",
        "body" : "Yeah, that's a great idea.  I couldn't set a Content-Encoding header on a file in github, but I can in s3, so I'll add that code in and a new test.\n",
        "createdAt" : "2015-07-22T15:45:56Z",
        "updatedAt" : "2015-07-24T13:27:57Z",
        "lastEditedBy" : "8905a4e5-fb85-4ec6-a2cc-f3d35a89a2ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92bd760797c2bb63041e46f7ab6ab74f9521869",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +142,146 @@\n    if _is_url(filepath_or_buffer):\n        req = _urlopen(str(filepath_or_buffer))\n        if compression == 'infer':\n            content_encoding = req.headers.get('Content-Encoding', None)"
  },
  {
    "id" : "06115a48-035a-4bc8-b375-29d0ad3faa40",
    "prId" : 20394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20394#pullrequestreview-104791837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57952950-af48-4cba-a80d-be8579905c91",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I personally like this location.  I would keep it here.",
        "createdAt" : "2018-03-18T10:07:08Z",
        "updatedAt" : "2018-03-22T11:48:14Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebd8e6f4cf63eb0b4cdd7255b9fbed9f35463b42",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +429,433 @@\n\nclass BytesZipFile(ZipFile, BytesIO):\n    \"\"\"\n    Wrapper for standard library class ZipFile and allow the returned file-like"
  },
  {
    "id" : "18cb037b-f896-44b9-94c2-eb8911800423",
    "prId" : 20394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20394#pullrequestreview-105309154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30946382-1607-42c2-bc6e-26f3483451d0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a little bit more to this class doc-strings. e.g. why its needed.",
        "createdAt" : "2018-03-20T00:05:17Z",
        "updatedAt" : "2018-03-22T11:48:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "842e61f4-fb45-49b3-9c5b-71f585e1b3e2",
        "parentId" : "30946382-1607-42c2-bc6e-26f3483451d0",
        "authorId" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "body" : "added. we currently don't have ability to write zip compressed pickle, json, csv, only read them. standard library ZipFile isn't designed exactly to produce a writable file handle, hence the custom class.",
        "createdAt" : "2018-03-20T11:33:32Z",
        "updatedAt" : "2018-03-22T11:48:14Z",
        "lastEditedBy" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebd8e6f4cf63eb0b4cdd7255b9fbed9f35463b42",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +429,433 @@\n\nclass BytesZipFile(ZipFile, BytesIO):\n    \"\"\"\n    Wrapper for standard library class ZipFile and allow the returned file-like"
  },
  {
    "id" : "5ff0bdbc-e141-4d43-9f6e-c2b789e0edb0",
    "prId" : 21144,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21144#pullrequestreview-123537481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "920b844f-f5ac-47d1-b1da-7c0b68fd5ad6",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Can we add tests and a `whatsnew` for this?",
        "createdAt" : "2018-05-21T06:50:13Z",
        "updatedAt" : "2018-05-29T10:40:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "08390fd8-86f3-441a-be0a-cf98e7dff0eb",
        "parentId" : "920b844f-f5ac-47d1-b1da-7c0b68fd5ad6",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Also, because you are modifying the default behavior, I'm not sure if we need a deprecation cycle for this (to be safe, we should I would imagine).",
        "createdAt" : "2018-05-21T06:51:21Z",
        "updatedAt" : "2018-05-29T10:40:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "ea93700e-4264-453e-bd6b-343c7c45ef47",
        "parentId" : "920b844f-f5ac-47d1-b1da-7c0b68fd5ad6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no this is a bug",
        "createdAt" : "2018-05-21T10:49:13Z",
        "updatedAt" : "2018-05-29T10:40:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e14dad3f-0548-448d-9dfc-cf63c1c4ecdd",
        "parentId" : "920b844f-f5ac-47d1-b1da-7c0b68fd5ad6",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Fair enough, though tests and `whatsnew` are still needed (just to be clear).",
        "createdAt" : "2018-05-21T10:50:31Z",
        "updatedAt" : "2018-05-29T10:40:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "9494f2db-6e3e-48f7-9aa2-d565d82cfd9a",
        "parentId" : "920b844f-f5ac-47d1-b1da-7c0b68fd5ad6",
        "authorId" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "body" : "thanks. added whatsnew and tests.",
        "createdAt" : "2018-05-25T23:41:10Z",
        "updatedAt" : "2018-05-29T10:40:24Z",
        "lastEditedBy" : "34a86a6a-3d79-42bc-a1d1-8da4b8916a25",
        "tags" : [
        ]
      }
    ],
    "commit" : "974b063568b8cdebd20290dfb5ddbc0348ac3e68",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +441,445 @@        if mode in ['wb', 'rb']:\n            mode = mode.replace('b', '')\n        super(BytesZipFile, self).__init__(file, mode, compression, **kwargs)\n\n    def write(self, data):"
  },
  {
    "id" : "a3a31949-ad68-4362-8401-e01ff8267f74",
    "prId" : 25886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25886#pullrequestreview-219410594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "261820a7-754b-4a08-a84d-fbb305551f9f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we remove the need for this class?",
        "createdAt" : "2019-03-26T21:48:03Z",
        "updatedAt" : "2019-03-28T18:57:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bcb240c5-b333-4495-b132-17dbc0022548",
        "parentId" : "261820a7-754b-4a08-a84d-fbb305551f9f",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "<strike>Nope, done.</strike>\r\n\r\nNot entirely (note how it drops the \"encoding\" kwarg, which doesn't happen if we pass it straight to `csv.reader`), and it seemed to cause some weird failures.\r\n\r\nWe could just move it elsewhere though since it isn't really that \"common\" in the IO directory.  Or just leave as is for now.",
        "createdAt" : "2019-03-26T23:10:10Z",
        "updatedAt" : "2019-03-28T18:57:31Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8518fe0d-977e-4bbf-b9a0-ed1dbd619e31",
        "parentId" : "261820a7-754b-4a08-a84d-fbb305551f9f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment around why we need these",
        "createdAt" : "2019-03-27T11:48:24Z",
        "updatedAt" : "2019-03-28T18:57:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad97232d55650fff84d16417337664794ab736aa",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +495,499 @@# for \"dropping\" the \"encoding\" argument from our I/O arguments when\n# creating a Unicode I/O object.\ndef UnicodeReader(f, dialect=csv.excel, encoding=\"utf-8\", **kwds):\n    return csv.reader(f, dialect=dialect, **kwds)\n"
  },
  {
    "id" : "afa4eed2-3774-4056-9bec-d27426a5c3c9",
    "prId" : 25886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25886#pullrequestreview-219270946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e00d58ef-e29f-4872-82c0-1ae3df986cd0",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Do you know why these need noqa now but not previously?",
        "createdAt" : "2019-03-27T05:01:43Z",
        "updatedAt" : "2019-03-28T18:57:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "8b295e47-3a1a-4c7f-8c0f-2a59cae3a7f3",
        "parentId" : "e00d58ef-e29f-4872-82c0-1ae3df986cd0",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Probably because `flake8` got confused by the conditional importing we had before (notice how the `noqa` is on the last import of `URLError` before this change).",
        "createdAt" : "2019-03-27T05:12:59Z",
        "updatedAt" : "2019-03-28T18:57:31Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad97232d55650fff84d16417337664794ab736aa",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@import mmap\nimport os\nfrom urllib.error import URLError  # noqa\nfrom urllib.parse import (  # noqa\n    urlencode, urljoin, urlparse as parse_url, uses_netloc, uses_params,"
  },
  {
    "id" : "ab618d2a-fba0-45fc-8e82-f2fea1b8d0bd",
    "prId" : 26024,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26024#pullrequestreview-233798282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "007451ba-9014-4a44-bba6-f8c4989d249c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Any reason to return compression and compression_args here? The former will always match whatever is being passed to the function anyway so seems like we could move the `isinstance` check outside of this function and only call this method when `compression` is a dict",
        "createdAt" : "2019-05-05T21:22:52Z",
        "updatedAt" : "2019-08-25T20:17:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d1deeee79e5520279dfb169acaeac371b0afbd9",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +299,303 @@    else:\n        compression_args = {}\n    return compression, compression_args\n\n"
  },
  {
    "id" : "1178c0ef-fb42-492a-af5a-6ba7371d37d9",
    "prId" : 26024,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26024#pullrequestreview-233798282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23baa184-33b6-4053-9365-5b8fb62a6d3f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Related to comment above, I think it would make sense to do the isinstance check before calling this method, unless you think there is a reason why we would ever need this method to do anything with a `str` passed through as an argument",
        "createdAt" : "2019-05-05T21:24:01Z",
        "updatedAt" : "2019-08-25T20:17:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d1deeee79e5520279dfb169acaeac371b0afbd9",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +418,422 @@    is_path = isinstance(path_or_buf, str)\n\n    compression, compression_args = _get_compression_method(compression)\n    if is_path:\n        compression = _infer_compression(path_or_buf, compression)"
  },
  {
    "id" : "01966f8d-61fd-4b96-80ff-d2ba0629721c",
    "prId" : 26024,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26024#pullrequestreview-279351532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11fc9d29-259e-40f1-a778-329947b7e47d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Couldn't annotate this particular argument due to a minor bug in typeshed. Fixed on master so maybe something we can come back to soon (typeshed updates are pretty quick)\r\n\r\nsee https://github.com/python/typeshed/pull/3125",
        "createdAt" : "2019-08-25T20:19:38Z",
        "updatedAt" : "2019-08-25T20:19:50Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d1deeee79e5520279dfb169acaeac371b0afbd9",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +360,364 @@    path_or_buf,\n    mode: str,\n    encoding=None,\n    compression: Optional[Union[str, Dict[str, Any]]] = None,\n    memory_map: bool = False,"
  }
]