[
  {
    "id" : "977e03a0-8e66-4ecd-9d96-8f1874ddc13d",
    "prId" : 4770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76cf13f2-d5ba-4e30-af37-3c430f7459dd",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "(default True)\n",
        "createdAt" : "2013-10-02T11:10:02Z",
        "updatedAt" : "2013-10-03T02:03:27Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "feda49a1-d4d3-49c1-9ee4-8ce66bab775e",
        "parentId" : "76cf13f2-d5ba-4e30-af37-3c430f7459dd",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "I removed the `default your-default-value-here` bc u can see them in the function signature. can put them back if you think that's a bad idea\n",
        "createdAt" : "2013-10-02T13:22:41Z",
        "updatedAt" : "2013-10-03T02:03:27Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bea34eb10fa5536caf6227dfbbc4744937d5e98f",
    "line" : 552,
    "diffHunk" : "@@ -1,1 +785,789 @@        See :func:`~pandas.read_csv` for details.\n\n    tupleize_cols : bool, optional\n        If ``False`` try to parse multiple header rows into a\n        :class:`~pandas.MultiIndex`, otherwise return raw tuples. Defaults to"
  },
  {
    "id" : "8fdb4674-f391-494f-aa1e-7adaa03edf1a",
    "prId" : 7323,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49b6e71b-74fb-47e4-a353-6d4e6fc597e9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this default to `None`, then set to `utf-8`? (or just not set and leave as `None`)\n",
        "createdAt" : "2014-06-03T15:36:15Z",
        "updatedAt" : "2014-06-04T14:00:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7af162fd-762a-4846-9fc2-8142cf22920f",
        "parentId" : "49b6e71b-74fb-47e4-a353-6d4e6fc597e9",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "it defaults to `None` (from the `read_html` entry point) because I didn't want to enforce an encoding if `bs4` or `lxml` can parse it from HTML meta information.\n",
        "createdAt" : "2014-06-03T15:38:17Z",
        "updatedAt" : "2014-06-04T14:00:46Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "83cb3a8e-1d30-4b98-96f0-fda5b215f907",
        "parentId" : "49b6e71b-74fb-47e4-a353-6d4e6fc597e9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k...sounds good\n",
        "createdAt" : "2014-06-03T15:41:50Z",
        "updatedAt" : "2014-06-04T14:00:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "341ace642786c8d9268e2995312ccf021b66cf55",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +169,173 @@    functionality.\n    \"\"\"\n    def __init__(self, io, match, attrs, encoding):\n        self.io = io\n        self.match = match"
  },
  {
    "id" : "5eb92393-a6c6-4d5b-930d-a98d35d90209",
    "prId" : 20047,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20047#pullrequestreview-102144408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfd6dd18-f2fc-4fb4-a45e-d365322b9746",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I didn't add encoding as part of this change but it looks to have been undocumented from whenever it was added. Tossed something in there for now, assuming the sprint this weekend may address in more detail.\r\n\r\nThe docstrings throughout this module I think technically violate the standard by introducing blank space in between each parameter, but figured better left to the sprint than tossing in this change",
        "createdAt" : "2018-03-07T23:57:59Z",
        "updatedAt" : "2018-03-09T16:31:16Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3093879826e9970eb87581889333b5e639637bc3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +161,165 @@        List of HTML <table> element attributes to match.\n\n    encoding : str\n        Encoding to be used by parser\n"
  },
  {
    "id" : "2380b6ad-2cd6-43f3-8c97-bddbe8f66344",
    "prId" : 20047,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20047#pullrequestreview-102515617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb5ea93a-490e-4ec1-b716-5bd16656bdef",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versionadded tag",
        "createdAt" : "2018-03-09T00:56:21Z",
        "updatedAt" : "2018-03-09T16:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3093879826e9970eb87581889333b5e639637bc3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +165,169 @@\n    displayed_only : bool\n        Whether or not items with \"display:none\" should be ignored\n\n        .. versionadded:: 0.23.0"
  },
  {
    "id" : "152f6dee-a3b9-47aa-b1d5-4de33701b896",
    "prId" : 20047,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20047#pullrequestreview-102515617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8501294-b1a9-4cfc-a4ba-f430ed80a87e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add this to the attributes list",
        "createdAt" : "2018-03-09T00:56:38Z",
        "updatedAt" : "2018-03-09T16:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3093879826e9970eb87581889333b5e639637bc3",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +201,205 @@        * :func:`_parse_tfoot`\n    See each method's respective documentation for details on their\n    functionality.\n    \"\"\"\n"
  },
  {
    "id" : "640c76d1-60c9-42bf-955a-f67a5ca47833",
    "prId" : 20293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20293#pullrequestreview-102920610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "861317dc-1791-4b1c-8896-12eb2afe69ec",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This conditional is required for Py27 compat - in Python3 you can simply provide a call to urlopen on self.io directly as an argument to parse (i.e. without explicitly using the context manager)",
        "createdAt" : "2018-03-12T04:16:13Z",
        "updatedAt" : "2018-03-13T23:39:00Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "50d072dbdce2bd44d1b83044743c1e511f7c1f25",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +609,613 @@        try:\n            if _is_url(self.io):\n                with urlopen(self.io) as f:\n                    r = parse(f, parser=parser)\n            else:"
  },
  {
    "id" : "3c369bec-8f05-459f-a7d5-70479c43b975",
    "prId" : 20293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20293#pullrequestreview-102921118",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "566dbcd2-eb57-4fb9-925c-6433b6f637c5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This is a change in behavior giving lxml a little more power to work through malformed HTML. May or may not be acceptable (see other comments)",
        "createdAt" : "2018-03-12T04:23:03Z",
        "updatedAt" : "2018-03-13T23:39:00Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "50d072dbdce2bd44d1b83044743c1e511f7c1f25",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +605,609 @@        from lxml.html import parse, fromstring, HTMLParser\n        from lxml.etree import XMLSyntaxError\n        parser = HTMLParser(recover=True, encoding=self.encoding)\n\n        try:"
  },
  {
    "id" : "4d49378c-2a82-4f22-aba0-94191f1fcc83",
    "prId" : 20293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20293#pullrequestreview-102921716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3e0f774-5cfd-4991-9eca-451f1f90c24e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Because `_parse_td` with this parser doesn't really differentiate between `td` and `th` elements it was incorrectly parsing headers for things like `spam.html` where `td` and `th` elements are intermixed in the header. Hence to make the parsing more robust and pass the tests, I added an initial search for `th` elements before falling back to the existing behavior.\r\n\r\nEven with that I'd argue it's confusing that `_parse_td` is implemented to return `td` and `th` elements and should be refactored to more clearly delineate, but I am trying to minimize behavior change with this PR",
        "createdAt" : "2018-03-12T04:31:10Z",
        "updatedAt" : "2018-03-13T23:39:00Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "50d072dbdce2bd44d1b83044743c1e511f7c1f25",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +649,653 @@        if thead:\n            # Grab any directly descending table headers first\n            ths = thead[0].xpath('./th')\n            if ths:\n                cols = [_remove_whitespace(x.text_content()) for x in ths]"
  }
]