[
  {
    "id" : "37c7d04f-c13c-4ab5-9878-45f2ade9d542",
    "prId" : 8767,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7011421-3332-4f03-a2bd-53bf7477ec17",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "What is the connection between the need for checking for duplicate data and the fact that the labels are stringified?\n",
        "createdAt" : "2014-11-10T19:19:11Z",
        "updatedAt" : "2014-11-12T16:10:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "73284236-5f69-4e71-be40-21e7cb94819d",
        "parentId" : "e7011421-3332-4f03-a2bd-53bf7477ec17",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "String representations could conflict with either each other,  if two objects have the same str, or a stringified value could conflict with an existing cat label.  For example,  if categorical labels contained 1 and \"1\" .\n",
        "createdAt" : "2014-11-10T19:28:20Z",
        "updatedAt" : "2014-11-12T16:10:50Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "204b50e5a30644179188ef06641d4c0e095c5bcf",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +343,347 @@Stata value labels (pandas categories) must be strings. Column {0} contains\nnon-string labels which will be converted to strings.  Please check that the\nStata data file created has not lost information due to duplicate labels.\n\"\"\"\n"
  },
  {
    "id" : "1510e52c-0f36-4c7a-a001-ddac58751406",
    "prId" : 9493,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "869cbbda-6d87-4f50-9694-6189c2ff4721",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "where is this dict created?\n",
        "createdAt" : "2015-02-25T11:27:27Z",
        "updatedAt" : "2015-03-01T17:33:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1ced6a18-e83a-49ca-a771-0ab99c8ea6d1",
        "parentId" : "869cbbda-6d87-4f50-9694-6189c2ff4721",
        "authorId" : "93ca2085-5eaf-4159-bea0-95755b4e0e48",
        "body" : "I create it just a few lines above.  That way it won't exist as an attribute unless the file version is >= 117.\n\nAlternatively, we could create it in init and let it be empty when not applicable.\n",
        "createdAt" : "2015-02-25T13:39:26Z",
        "updatedAt" : "2015-03-01T17:33:02Z",
        "lastEditedBy" : "93ca2085-5eaf-4159-bea0-95755b4e0e48",
        "tags" : [
        ]
      }
    ],
    "commit" : "709c034b817f3ec6b6326d9d08e4ed14378bca0f",
    "line" : 428,
    "diffHunk" : "@@ -1,1 +1245,1249 @@            if typ == 130:\n                va = va[0:-1].decode(self._encoding or self._default_encoding)\n            self.GSO[v_o] = va\n\n    # legacy"
  },
  {
    "id" : "cd4c016c-5ff3-4853-9595-acdd9360a566",
    "prId" : 9493,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b6f56dd-84d5-4f5d-bde9-a93029535ed9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can prob dispense with `_first_chunk` and just use `_dtype is not None` as the test (and `_dtype` should be initialized to `None` in the constructor)\n",
        "createdAt" : "2015-02-25T11:31:11Z",
        "updatedAt" : "2015-03-01T17:33:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "709c034b817f3ec6b6326d9d08e4ed14378bca0f",
    "line" : 549,
    "diffHunk" : "@@ -1,1 +1334,1338 @@                    dtype.append(('s' + str(i), 'S' + str(typ)))\n            dtype = np.dtype(dtype)\n            self._dtype = dtype\n\n        # Read data"
  },
  {
    "id" : "94360855-db4f-4def-80b8-5607d29adad6",
    "prId" : 19510,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19510#pullrequestreview-94036839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70d28364-e838-41d8-952d-8e123268a1f5",
        "parentId" : null,
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Was there a preference stated recently to use `{}` rather than `dict()`?",
        "createdAt" : "2018-02-04T16:06:46Z",
        "updatedAt" : "2018-02-06T11:20:24Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      },
      {
        "id" : "3bd30837-891a-4203-adfc-463e4056146b",
        "parentId" : "70d28364-e838-41d8-952d-8e123268a1f5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah can use ``{}``",
        "createdAt" : "2018-02-04T16:09:09Z",
        "updatedAt" : "2018-02-06T11:20:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "018648eb-8cda-448c-b728-eb53cef0fef9",
        "parentId" : "70d28364-e838-41d8-952d-8e123268a1f5",
        "authorId" : "d9b950d3-f064-4550-9e8a-1082eefae60f",
        "body" : "`dict()` is internally consistent with the function.",
        "createdAt" : "2018-02-05T15:48:45Z",
        "updatedAt" : "2018-02-06T11:20:24Z",
        "lastEditedBy" : "d9b950d3-f064-4550-9e8a-1082eefae60f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea8d1077a20726a9cf405d418776388ade739a52",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1348,1352 @@            # Value labels are not supported in version 108 and earlier.\n            self._value_labels_read = True\n            self.value_label_dict = dict()\n            return\n"
  },
  {
    "id" : "ba0eb3b1-91d4-4b3e-bccb-29e4f8bdfb65",
    "prId" : 20844,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20844#pullrequestreview-116539388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94cc5754-394c-4706-88b1-b30d11298a11",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe add a blank line before comments, easier to read",
        "createdAt" : "2018-05-01T10:33:22Z",
        "updatedAt" : "2018-05-01T18:57:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d54ded3b07126c5117b0661fed84afe6ffa0452",
    "line" : 861,
    "diffHunk" : "@@ -1,1 +2743,2747 @@        bio.write(self._tag(byteorder == \">\" and \"MSF\" or \"LSF\", 'byteorder'))\n        # number of vars, 2 bytes\n        assert self.nvar < 2 ** 16\n        bio.write(self._tag(struct.pack(byteorder + \"H\", self.nvar), 'K'))\n        # number of obs, 4 bytes"
  },
  {
    "id" : "5093000f-96c6-41f7-af47-eac43fc1a279",
    "prId" : 25968,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25968#pullrequestreview-222023911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11b60b82-2376-4b66-afc9-76c1bbade61e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Maybe add ref to GH issue here?",
        "createdAt" : "2019-04-03T02:22:58Z",
        "updatedAt" : "2019-04-04T21:18:29Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "aa103033-0eef-4eb3-b64d-501a66a8396a",
        "parentId" : "11b60b82-2376-4b66-afc9-76c1bbade61e",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Hmm...I'm generally hesitant to include GitHub references in user-facing code.\r\n\r\nThe error message should be able to stand on its own.\r\n\r\nThat being said, a comment referencing the issue (for developer reference) would be fine.",
        "createdAt" : "2019-04-03T06:29:44Z",
        "updatedAt" : "2019-04-04T21:18:29Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "479a82a7a1046435540cb85f1826471c4fad487d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1727,1731 @@Either read the file with `convert_categoricals` set to False or use the\nlow level interface in `StataReader` to separately read the values and the\nvalue_labels.\n\nThe repeated labels are:"
  },
  {
    "id" : "c083df7d-bd72-4f5a-a28f-251071122c45",
    "prId" : 29923,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29923#pullrequestreview-324924755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa6eff4e-f807-44ab-ae50-a153a33ee432",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "A last one missing here, else looks good.",
        "createdAt" : "2019-12-01T07:56:50Z",
        "updatedAt" : "2019-12-01T07:56:50Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea9cb6dc8997167136ce5d2569818f9b142d671",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +2993,2997 @@        if self._map is None:\n            self._map = dict(\n                (\n                    (\"stata_data\", 0),\n                    (\"map\", self._file.tell()),"
  },
  {
    "id" : "f71979b9-9671-41c9-b762-0eff5cc75940",
    "prId" : 30285,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30285#pullrequestreview-336975620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e31949c-dab7-447a-8b25-820a6b47975a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this a change? or just a doc update?",
        "createdAt" : "2019-12-26T23:06:25Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5853d292-075f-470a-9fd3-20fb440e099e",
        "parentId" : "2e31949c-dab7-447a-8b25-820a6b47975a",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "No, the docstring was just wrong. ",
        "createdAt" : "2019-12-29T21:18:34Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ef4ecf49c0bee31a93f66782b1d514e0743e1fc",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +600,604 @@    Parameters\n    ----------\n    catarray : Categorical\n        Categorical Series to encode\n    encoding : {\"latin-1\", \"utf-8\"}"
  },
  {
    "id" : "1d05871a-38dd-4522-a9f6-14e2ec182a88",
    "prId" : 30285,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30285#pullrequestreview-336975662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "646c4781-89d1-4675-aa93-3d13b168cf77",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you update doc-string",
        "createdAt" : "2019-12-26T23:06:58Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a32bb86a-d0ac-4d0d-96d1-a98a79efb675",
        "parentId" : "646c4781-89d1-4675-aa93-3d13b168cf77",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Added",
        "createdAt" : "2019-12-29T21:19:38Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ef4ecf49c0bee31a93f66782b1d514e0743e1fc",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +671,675 @@            Bytes containing the formatted value label\n        \"\"\"\n        encoding = self._encoding\n        bio = BytesIO()\n        null_byte = b\"\\x00\""
  },
  {
    "id" : "57255f59-be47-42ab-b7ba-e6ebebe5402a",
    "prId" : 30285,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30285#pullrequestreview-336975657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a847c6ce-9c0e-4f71-81b3-c9096f615126",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string here",
        "createdAt" : "2019-12-26T23:07:51Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "60b65aa0-5ad2-4ec8-b529-9169a472c7c4",
        "parentId" : "a847c6ce-9c0e-4f71-81b3-c9096f615126",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Added",
        "createdAt" : "2019-12-29T21:19:29Z",
        "updatedAt" : "2019-12-31T16:38:11Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ef4ecf49c0bee31a93f66782b1d514e0743e1fc",
    "line" : 456,
    "diffHunk" : "@@ -1,1 +2151,2155 @@        pass\n\n    def _validate_variable_name(self, name):\n        \"\"\"\n        Validate variable names for Stata export."
  },
  {
    "id" : "be268238-995e-45f7-9d4d-9159cd5b9507",
    "prId" : 30959,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30959#pullrequestreview-342288319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f07ab0-f30e-4a7d-9088-fbcc670905ad",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you annotate new functions?",
        "createdAt" : "2020-01-13T16:51:42Z",
        "updatedAt" : "2020-01-14T09:15:52Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e2c1c2c8-1a0a-472b-a7e2-26e3f0b2604a",
        "parentId" : "32f07ab0-f30e-4a7d-9088-fbcc670905ad",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Can you take a look at what I used and see if it looks right?",
        "createdAt" : "2020-01-13T18:12:31Z",
        "updatedAt" : "2020-01-14T09:15:52Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      },
      {
        "id" : "f93ba43c-bb7d-4961-8e01-d6979da01346",
        "parentId" : "32f07ab0-f30e-4a7d-9088-fbcc670905ad",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "annotations are not blocking here, nice to have sure",
        "createdAt" : "2020-01-14T04:42:26Z",
        "updatedAt" : "2020-01-14T09:15:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4eaecd4a5c9dc092367529a9c5a3e07ce961f5d",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +3263,3267 @@    _encoding = \"utf-8\"\n\n    def __init__(\n        self,\n        fname: FilePathOrBuffer,"
  },
  {
    "id" : "e97eece4-d73f-487e-9d0a-2deffbfa46f3",
    "prId" : 30959,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30959#pullrequestreview-342353737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f98536-838d-403d-98f8-1131c5707a0c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "all this hit in tests?",
        "createdAt" : "2020-01-14T04:42:52Z",
        "updatedAt" : "2020-01-14T09:15:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d7ceeda2-9a1d-4b42-956c-58aa5ab90be5",
        "parentId" : "d1f98536-838d-403d-98f8-1131c5707a0c",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Yes, all branches are hit. ",
        "createdAt" : "2020-01-14T08:23:34Z",
        "updatedAt" : "2020-01-14T09:15:52Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4eaecd4a5c9dc092367529a9c5a3e07ce961f5d",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +3277,3281 @@    ):\n        if version is None:\n            version = 118 if data.shape[1] <= 32767 else 119\n        elif version not in (118, 119):\n            raise ValueError(\"version must be either 118 or 119.\")"
  },
  {
    "id" : "0419f85a-e1b3-4556-ba41-f2f6b1068334",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-343876499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b0717df-fa8d-4b70-84c5-ad3f702d3dbd",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "```suggestion\r\n    def value(self) -> float:\r\n```",
        "createdAt" : "2020-01-16T12:35:42Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 353,
    "diffHunk" : "@@ -1,1 +773,777 @@\n    @property\n    def value(self) -> Union[int, float]:\n        \"\"\"\n        The binary representation of the missing value."
  },
  {
    "id" : "ee40f97f-661d-4be5-a33d-164a0d0820ed",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-344279422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8abd3211-82c1-42da-bc94-19f2ca2af7b5",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "```suggestion\r\n    def get_base_missing_value(cls, dtype: np.dtype) -> float:\r\n```",
        "createdAt" : "2020-01-16T12:36:17Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "f0c0f9e6-b238-4626-a41b-9146e1caf5a4",
        "parentId" : "8abd3211-82c1-42da-bc94-19f2ca2af7b5",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think we should keep the Union here as well; it doesn't make a difference to mypy it does make a difference to the reader",
        "createdAt" : "2020-01-16T17:55:37Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "232f88f0-1dd7-47d7-bcba-047953b0bc1e",
        "parentId" : "8abd3211-82c1-42da-bc94-19f2ca2af7b5",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "This is enough of a nudge for me to go with what I also like better ",
        "createdAt" : "2020-01-16T23:17:27Z",
        "updatedAt" : "2020-01-24T10:35:49Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 371,
    "diffHunk" : "@@ -1,1 +798,802 @@\n    @classmethod\n    def get_base_missing_value(cls, dtype: np.dtype) -> Union[int, float]:\n        if dtype == np.int8:\n            value = cls.BASE_MISSING_VALUES[\"int8\"]"
  },
  {
    "id" : "307f9b5b-2972-46a0-ac8a-e1bc55501f85",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-344069068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdc53857-f873-405a-a281-d70d807dff32",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "```suggestion\r\ndef _pad_bytes(name: str, length: int) -> str:\r\n```\r\n\r\nI *think* binary data would fail here looking at the implementation. Name might be a holder over from Py27",
        "createdAt" : "2020-01-16T16:44:15Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b7afc1fb-bc61-4b1b-b2d1-a8ef72e5ab69",
        "parentId" : "fdc53857-f873-405a-a281-d70d807dff32",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Both still work. It either pads with \"\\x00\" of b\"\\x00\" depending on type. Definitely left-overish from 27.\r\n\r\n```\r\ndef _pad_bytes(name: AnyStr, length: int) -> AnyStr:\r\n    \"\"\"\r\n    Take a char string and pads it with null bytes until it's length chars.\r\n    \"\"\"\r\n    if isinstance(name, bytes):\r\n        return name + b\"\\x00\" * (length - len(name))\r\n    return name + \"\\x00\" * (length - len(name))\r\n```",
        "createdAt" : "2020-01-16T16:58:34Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 948,
    "diffHunk" : "@@ -1,1 +1888,1892 @@\n\ndef _pad_bytes(name: AnyStr, length: int) -> AnyStr:\n    \"\"\"\n    Take a char string and pads it with null bytes until it's length chars."
  },
  {
    "id" : "266fc3a1-e59f-4261-ae6a-24adc8ec8e27",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-344068029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d69a7d2-2f5a-4338-af46-059ac16f74d6",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "If possible to add subtypes to Dict would be very helpful",
        "createdAt" : "2020-01-16T16:44:28Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "3d77a6e5-fd4c-4c79-aee0-6676b432f971",
        "parentId" : "5d69a7d2-2f5a-4338-af46-059ac16f74d6",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "Thanks, added.",
        "createdAt" : "2020-01-16T16:57:09Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 966,
    "diffHunk" : "@@ -1,1 +1922,1926 @@\n\ndef _maybe_convert_to_int_keys(convert_dates: Dict, varlist: List[Label]) -> Dict:\n    new_dict = {}\n    for key in convert_dates:"
  },
  {
    "id" : "3fa97d99-e641-4374-8085-317b3e79b584",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-344067926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e37fe062-e41f-4f50-92ea-5007a2cff06a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you use `Dtype` from pandas._typing here?",
        "createdAt" : "2020-01-16T16:45:05Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "3768cb4b-1d1c-4a09-9cb4-c38907521386",
        "parentId" : "e37fe062-e41f-4f50-92ea-5007a2cff06a",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "I'm not sure this is correct here since Extension dtypes are not supported.",
        "createdAt" : "2020-01-16T16:57:03Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 1387,
    "diffHunk" : "@@ -1,1 +2624,2628 @@\n\ndef _dtype_to_stata_type_117(dtype: np.dtype, column: Series, force_strl: bool) -> int:\n    \"\"\"\n    Converts dtype types to stata types. Returns the byte of the given ordinal."
  },
  {
    "id" : "cbb3eb2a-e4cf-4cda-9bcc-fc18876e552e",
    "prId" : 31072,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31072#pullrequestreview-344276694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ed9f05a-2947-4414-a73d-ca6958cace35",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Are there any sources that this would hit which define `read` but don't inherit from IOBase? Somewhat wary of making a change like this",
        "createdAt" : "2020-01-16T17:58:31Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "0608bf8c-32c6-4c23-8d9c-5f32169de31e",
        "parentId" : "6ed9f05a-2947-4414-a73d-ca6958cace35",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "I rolled this one back because I can't guarantee that this isn't a restriction over `hasattr(\"write\")`.",
        "createdAt" : "2020-01-16T23:10:04Z",
        "updatedAt" : "2020-01-24T10:35:48Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ef253c441521e34692a2a4904157638fa0af790",
    "line" : 418,
    "diffHunk" : "@@ -1,1 +1025,1029 @@        if isinstance(path_or_buf, (str, bytes)):\n            self.path_or_buf = open(path_or_buf, \"rb\")\n        elif isinstance(path_or_buf, IOBase):\n            # Copy to BytesIO, and ensure no encoding\n            contents = path_or_buf.read()"
  },
  {
    "id" : "e76b0b7e-f82a-47cd-b994-0822c05d3af1",
    "prId" : 31813,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31813#pullrequestreview-355618858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83880894-932d-4270-bfe6-9dc8194bea5b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we make a note to refactor this; this seems a bit fishy; cc @bashtage ",
        "createdAt" : "2020-02-09T16:44:06Z",
        "updatedAt" : "2020-02-09T16:44:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c6e3905c417d140e8c97f6e9f090a4e86ad9991",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1679,1683 @@\n                    loc = missing_loc[umissing_loc == j]\n                    if loc.ndim == 2 and loc.shape[1] == 1:\n                        # GH#31813 avoid trying to set Series values with wrong\n                        #  dimension"
  },
  {
    "id" : "90c44f43-5900-4dbf-a56e-d95176da1333",
    "prId" : 32781,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32781#pullrequestreview-376974550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba74e1b3-f9e9-4c1e-aead-c7586814f8af",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Since we are converting to object here, this also shouldn't matter",
        "createdAt" : "2020-03-18T13:04:06Z",
        "updatedAt" : "2020-03-20T01:19:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fe615d72-8d30-4bb4-b8c6-856a60346fb2",
        "parentId" : "ba74e1b3-f9e9-4c1e-aead-c7586814f8af",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah, this PR is aimed at invariant cases",
        "createdAt" : "2020-03-18T15:26:24Z",
        "updatedAt" : "2020-03-20T01:19:26Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "86e8ac7ad2c9dccf8776b6abcfd5f3b4ca313c62",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1957,1961 @@        # not memory efficient, what else could we\n        # do?\n        itemsize = max_len_string_array(ensure_object(column._values))\n        return max(itemsize, 1)\n    elif dtype == np.float64:"
  },
  {
    "id" : "c84830dd-991f-4cb8-9abf-f00604b27fb3",
    "prId" : 34128,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34128#pullrequestreview-422730988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "891d6286-bdbb-4f9a-a4ad-ebf21e89fda5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you *could* do a pass over the file to collect the categories then re-read them (is this relatively cheap to do?)",
        "createdAt" : "2020-05-25T22:23:18Z",
        "updatedAt" : "2020-06-02T14:25:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2c833c58-f8c5-4c8a-8268-c1cfa247a15b",
        "parentId" : "891d6286-bdbb-4f9a-a4ad-ebf21e89fda5",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "It could be pretty expensive if the file as 10M rows and many columns.  \r\n\r\nOne *could* write a function that only gets the values of specific variables without reading the entire file contents, which would be faster than full passes. But more work.  Maybe leave this open and I'll see how hard this special case it. ",
        "createdAt" : "2020-05-26T07:01:12Z",
        "updatedAt" : "2020-06-02T14:25:53Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      },
      {
        "id" : "ceb8d26e-f088-49c4-8d06-6fed6cf704db",
        "parentId" : "891d6286-bdbb-4f9a-a4ad-ebf21e89fda5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "kk, lgtm otherwise, (just rebase to fix the conflict), ping when ready.",
        "createdAt" : "2020-05-26T23:06:01Z",
        "updatedAt" : "2020-06-02T14:25:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d4d4b375-2355-4b39-a711-ecb76f60b434",
        "parentId" : "891d6286-bdbb-4f9a-a4ad-ebf21e89fda5",
        "authorId" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "body" : "I've thought through this issue and I've concluded that it isn't \"safe\" to try and read all categories first.  Worse case is that a column has random values so that all values are distinct. This would require storing the entire column. If a single column exceeds the memory of the machine being used, then it will crash.\r\n\r\nThis is a pretty extreme scenario, but can't be ruled out. It seems best to warn users that they might need to \"glue\" their categoricals together themselves.  I expect in most cases that users will have fully labeled columns and so will not see this warning.\r\n",
        "createdAt" : "2020-06-02T14:22:41Z",
        "updatedAt" : "2020-06-02T14:25:53Z",
        "lastEditedBy" : "99f74c82-c3ba-477d-8b70-f12c41bd8ded",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa173aa4d58bd2d677cfc3f497bf9ef011279aa7",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +1815,1819 @@                    # varying across chunks.\n                else:\n                    if self._chunksize is not None:\n                        # warn is using an iterator\n                        warnings.warn("
  },
  {
    "id" : "f77a65d7-6b1b-462a-b417-c5eea63bb362",
    "prId" : 34128,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34128#pullrequestreview-513080415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7553aacb-440b-4c52-b722-ed0fbb957547",
        "parentId" : null,
        "authorId" : "0497ff0f-9ae3-4892-85e6-b6bd7f85167b",
        "body" : "This breaks when `read_stata()` is passed `iterator=True` but no chunksize, #37280",
        "createdAt" : "2020-10-20T19:52:21Z",
        "updatedAt" : "2020-10-20T19:52:21Z",
        "lastEditedBy" : "0497ff0f-9ae3-4892-85e6-b6bd7f85167b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa173aa4d58bd2d677cfc3f497bf9ef011279aa7",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1523,1527 @@            raise ValueError(\n                \"chunksize must be set to a positive integer to use as an iterator.\"\n            )\n        return self.read(nrows=self._chunksize or 1)\n"
  },
  {
    "id" : "caa1c990-67d0-4323-8f9b-dc424d94676e",
    "prId" : 35381,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35381#pullrequestreview-463578924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ac3c340-c269-46f9-9c81-adce14008c29",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "What motivates this change? Is it fsspec files not inheriting from io.IOBase? Should they?",
        "createdAt" : "2020-08-04T18:35:25Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a8a6b082-7607-4c8a-94f5-cd919dffa9e1",
        "parentId" : "0ac3c340-c269-46f9-9c81-adce14008c29",
        "authorId" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "body" : "The do not in general, since they might come from external libraries I have no control over (e.g., paramiko); `AbstractBufferedFile` *does* inherit from IOBase.",
        "createdAt" : "2020-08-06T14:36:09Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "tags" : [
        ]
      },
      {
        "id" : "54a2da69-8630-4480-b8fa-8aae376ec68e",
        "parentId" : "0ac3c340-c269-46f9-9c81-adce14008c29",
        "authorId" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "body" : "I suppose I could make a mixin class for all such cases, but not in time for this.",
        "createdAt" : "2020-08-06T14:36:44Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "tags" : [
        ]
      },
      {
        "id" : "91c07d15-5a92-4471-b11b-b9f4f552baf6",
        "parentId" : "0ac3c340-c269-46f9-9c81-adce14008c29",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Ok, thanks.\r\n\r\nI think (@gfyoung can correct me if I'm wrong) that we should probably use `pandas.core.dtypes.inference.is_file_like` here.",
        "createdAt" : "2020-08-06T14:56:55Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "bf4ae3d5-46e3-455a-9d01-1f321457591a",
        "parentId" : "0ac3c340-c269-46f9-9c81-adce14008c29",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah this is ok (though agree maybe we can use is_file_like), but not a blocker",
        "createdAt" : "2020-08-07T20:02:02Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "afdc0309d15e28dcd88ba4646d29a3e91413a948",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1076,1080 @@        if isinstance(path_or_buf, (str, bytes)):\n            self.path_or_buf = open(path_or_buf, \"rb\")\n        elif hasattr(path_or_buf, \"read\"):\n            # Copy to BytesIO, and ensure no encoding\n            pb: Any = path_or_buf"
  },
  {
    "id" : "0de4ef92-e37c-4430-bea0-e558aed53823",
    "prId" : 35381,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35381#pullrequestreview-463591010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5677b4-8951-42c2-904c-a07f61d0ed99",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can also add Compression to typing.py ",
        "createdAt" : "2020-08-07T19:33:33Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c6e26eed-c2a4-465c-a909-2d0d86b59c7a",
        "parentId" : "1f5677b4-8951-42c2-904c-a07f61d0ed99",
        "authorId" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "body" : "This wasn't me, but the styling; compression as a kwarg has different types in different places (most often str, but also `Optional[Union[str, Mapping[str, Any]]]`, which is similar), so I don't think there's a useful common type to be made.",
        "createdAt" : "2020-08-07T20:11:51Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "tags" : [
        ]
      },
      {
        "id" : "44cb9ede-7406-4408-9de5-d07f83eeae3b",
        "parentId" : "1f5677b4-8951-42c2-904c-a07f61d0ed99",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm interesting, we ought to fix that. can you create an issue about this?",
        "createdAt" : "2020-08-07T20:14:17Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "066774a2-98bd-4edf-9f8d-5e7e4245cf2f",
        "parentId" : "1f5677b4-8951-42c2-904c-a07f61d0ed99",
        "authorId" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "body" : "I'm not certain it's wrong - sometimes the args is required, but could be None, other times it's not required, but the default value can be None or str (e.g., \"infer\"). ",
        "createdAt" : "2020-08-07T20:26:11Z",
        "updatedAt" : "2020-08-10T13:44:29Z",
        "lastEditedBy" : "91bd3e12-470c-4417-ac08-5f387012a9be",
        "tags" : [
        ]
      }
    ],
    "commit" : "afdc0309d15e28dcd88ba4646d29a3e91413a948",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +1939,1943 @@def _open_file_binary_write(\n    fname: FilePathOrBuffer,\n    compression: Union[str, Mapping[str, str], None],\n    storage_options: StorageOptions = None,\n) -> Tuple[BinaryIO, bool, Optional[Union[str, Mapping[str, str]]]]:"
  }
]