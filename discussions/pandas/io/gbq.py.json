[
  {
    "id" : "a1588e03-2b2b-40c4-8038-7afbab05b19b",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb4f0952-a958-4386-a050-1d2d038726c0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are you adding all of these exceptions? If an exception happens, just have it raise directly. No need to cover over the API. Only really useful exceptions should be done as custom. \n",
        "createdAt" : "2015-09-09T23:12:45Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +96,100 @@    pass\n\n\nclass GbqConnector(object):\n"
  },
  {
    "id" : "5d1c4f0b-6065-4a4e-8ebc-ec661dca89af",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "235871e1-603e-474e-a43c-ad0aca3351a9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so this is a legitimate (and useful) custom exception. \n",
        "createdAt" : "2015-09-09T23:14:36Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +178,182 @@                    print(error_message)\n                else:\n                    raise StreamingInsertError(error_message + '\\nEnable verbose logging to see all errors')\n\n        raise StreamingInsertError"
  },
  {
    "id" : "a4fee343-548e-43ff-9a90-396c4dfd2c29",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9497f12d-e1d8-42a6-8a54-1aeab8d878cc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can certainly _catch_ exceptions raised within gbq, but usually best just to let them bubble up, unless you can actually handle them (e.g. if the credentials are screwed up, then nothing you can do, so don't even catch it in the first place). \n\nAll that said if their is an exception (or family) of exceptions that could use a more intuitve error message then pls do so.\n",
        "createdAt" : "2015-09-09T23:16:14Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +200,204 @@        try:\n            query_reply = job_collection.insert(projectId=self.project_id, body=job_data).execute()\n        except AccessTokenRefreshError:\n            raise AccessDenied(\"The credentials have been revoked or expired, please re-run the application \"\n                                        \"to re-authorize\")"
  },
  {
    "id" : "60e61c2e-0bd4-4e09-9e8a-8f7175eb1198",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "later enhancement I would print the time on the message as well\n",
        "createdAt" : "2015-09-11T15:47:52Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "892ecb95-69c7-43fc-8bcd-a42f9f5c2a8a",
        "parentId" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "much futher enhancement (future PR), `verbose` could be a callable, which you would execute with the message (rather than actual print statements)\n",
        "createdAt" : "2015-09-11T15:48:48Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6de05f51-d60b-476c-ab01-33eed7ae95e5",
        "parentId" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "authorId" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "body" : "Sounds good. I have a few PRs for the release after 0.17.0\n",
        "createdAt" : "2015-09-11T16:09:49Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +210,214 @@        while not query_reply.get('jobComplete', False):\n            if verbose:\n                print('Waiting for job to complete...')\n            try:\n                query_reply = job_collection.getQueryResults(projectId=job_reference['projectId'],"
  },
  {
    "id" : "aaface01-97e1-44a2-acfe-f0d184730734",
    "prId" : 13458,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53f1c1b7-d5ab-4220-afe7-56ea9fe5af6b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "IOW the ci should be testing the original one & the new one (in different builds); so at least import checking should work.\n",
        "createdAt" : "2016-06-16T12:20:46Z",
        "updatedAt" : "2016-07-06T23:43:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d4abb45d-5a8f-49e4-808c-481a5ceba3fa",
        "parentId" : "53f1c1b7-d5ab-4220-afe7-56ea9fe5af6b",
        "authorId" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "body" : "For python 2.7, we are using `google-api-python-client==1.2` . That is already done in requirements-2.7.pip\n\ngoogle-api-python-client version 1.2 doesn't support module googleapiclient (This was before apiclient was deprecated). \n\nIn CI, we will test the original one when we run python 2.7, and the new one when we run python 3.4 \n",
        "createdAt" : "2016-06-17T03:03:08Z",
        "updatedAt" : "2016-07-06T23:43:08Z",
        "lastEditedBy" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "tags" : [
        ]
      },
      {
        "id" : "203bff2e-5245-435d-a67f-8d011b999a56",
        "parentId" : "53f1c1b7-d5ab-4220-afe7-56ea9fe5af6b",
        "authorId" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "body" : "I added a test to confirm that `import googleapiclient` raises an import exception when running under python 2.7 (google-api-python-client==1.2)\n\n```\n    def test_import_google_api_python_client(self):\n        if compat.PY2:\n            with tm.assertRaises(ImportError):\n                from googleapiclient.discovery import build  # noqa\n                from googleapiclient.errors import HttpError  # noqa\n            from apiclient.discovery import build  # noqa\n            from apiclient.errors import HttpError  # noqa\n        else:\n            from googleapiclient.discovery import build  # noqa\n            from googleapiclient.errors import HttpError  # noqa\n```\n\nI manually downgraded my google api python client to 1.2 and ran all unit tests locally to confirm that the old code still works using `apiclient` not `googleapiclient`. \n\n```\ntony@tonypc:~/parthea-pandas/pandas/io/tests$ nosetests test_gbq.py -v\ntest_import_google_api_python_client (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_corrupted_private_key_json_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_empty_private_key_file_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_empty_private_key_json_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_invalid_private_key_json_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_read_gbq_with_private_key_json_wrong_types_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_return_bigquery_booleans_as_python_booleans (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_return_bigquery_floats_as_python_floats (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_return_bigquery_integers_as_python_floats (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_return_bigquery_strings_as_python_strings (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_return_bigquery_timestamps_as_numpy_datetime (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_that_parse_data_works_properly (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_to_gbq_should_fail_if_invalid_table_name_passed (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_to_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.GBQUnitTests) ... ok\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration) ... ok\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration) ... ok\ntest_bad_project_id (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_bad_table_name (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order_plus_index (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_download_dataset_larger_than_200k_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_index_column (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_malformed_query (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_arbitrary_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_empty_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_false_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_timestamp_unix_epoch (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_true_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_read_as_service_account_with_key_contents (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_read_as_service_account_with_key_path (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_unicode_string_conversion_and_normalization (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_zero_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_create_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_create_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_exists (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_generate_schema (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_google_upload_errors_should_raise_exception (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table_zero_results (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_table_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_append (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_fail (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_replace (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_as_service_account_with_key_contents (pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents) ... ok\ntest_upload_data_as_service_account_with_key_path (pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath) ... ok\npandas.io.tests.test_gbq.test_requirements ... ok\npandas.io.tests.test_gbq.test_generate_bq_schema_deprecated ... ok\n\n----------------------------------------------------------------------\nRan 74 tests in 396.056s\n\nOK\n\n```\n",
        "createdAt" : "2016-06-17T03:06:00Z",
        "updatedAt" : "2016-07-06T23:43:08Z",
        "lastEditedBy" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a987e52ed0a10403b6b12e131e8923b2bf93cd1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +272,276 @@        import httplib2\n        try:\n            from googleapiclient.discovery import build\n        except:\n            from apiclient.discovery import build"
  },
  {
    "id" : "7492b445-2efa-4f8b-8b81-87139889bc36",
    "prId" : 18202,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18202#pullrequestreview-76435158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8979690b-84f9-4a22-9e65-0728decb4969",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Did you have a problem with this? (as the docstring is a raw string, it should work like that?)",
        "createdAt" : "2017-11-14T10:17:36Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "301af303-5691-46b5-9fa2-b47ae63fa9bc",
        "parentId" : "8979690b-84f9-4a22-9e65-0728decb4969",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yes, and I'm beginning to suspect it's a bug in numpydoc master but will confirm.\r\n\r\nThe warning was about starting, but not ending, and emphasis",
        "createdAt" : "2017-11-14T14:30:32Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "34834fae25bd7ea1eb6a364c9d2c841e0837eb38",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +76,80 @@        <https://cloud.google.com/bigquery/sql-reference/>`__\n\n    `**kwargs` : Arbitrary keyword arguments\n        configuration (dict): query config parameters for job processing.\n        For example:"
  },
  {
    "id" : "3c8c896f-2874-4076-b61c-a19bf0c953e3",
    "prId" : 18548,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18548#pullrequestreview-80044234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6f5f9ef-dca3-410e-ab65-8aec919ba10c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "So need to have a section in the pandas-gbq docs on how to deal with < 0.3.0 (IOW list the deps and such).\r\n\r\nAlso I would remove the referenes here tot the google cloud library itself, you just need to install pandas-gbq, which depending the installed version has different requirements.\r\n\r\nalso there is a referene in install.rst to pandas-gbq, see if it needs updating.",
        "createdAt" : "2017-11-29T00:00:32Z",
        "updatedAt" : "2017-11-30T00:13:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6b13151f-673c-4ad7-9433-cc555140243a",
        "parentId" : "b6f5f9ef-dca3-410e-ab65-8aec919ba10c",
        "authorId" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "body" : "Done, done, and done.",
        "createdAt" : "2017-11-30T00:22:35Z",
        "updatedAt" : "2017-11-30T00:22:35Z",
        "lastEditedBy" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "135d2f86b70aa75ae11bbf59ffeae87afe61e082",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +30,34 @@    and read results into a pandas DataFrame.\n\n    This function requires the `pandas-gbq package\n    <https://pandas-gbq.readthedocs.io>`__.\n"
  },
  {
    "id" : "3a34270e-fc8b-43db-b2e4-70c4253733e7",
    "prId" : 21628,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21628#pullrequestreview-132095814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6c8526-3bb2-4324-b66a-1981caca68d9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think these break linting, need a ``#noqa`` I think",
        "createdAt" : "2018-06-25T22:13:52Z",
        "updatedAt" : "2018-06-26T16:49:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "65eb5d6f-a4f0-48af-afbc-c45e2d6997f2",
        "parentId" : "af6c8526-3bb2-4324-b66a-1981caca68d9",
        "authorId" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "body" : "Adding `# noqa` breaks the link. Sphinx generates a link like `pandas/doc/build/html/generated_single/pandas.read_gbq.html#noqahttp://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server` when I add this.\r\n\r\nI do not get any lint errors when I run `git diff upstream/master -u -- \"*.py\" | flake8 --diff` and `scripts/validate_docstrings.py pandas.read_gbq` also passes.",
        "createdAt" : "2018-06-26T16:39:08Z",
        "updatedAt" : "2018-06-26T16:51:24Z",
        "lastEditedBy" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "7330463aba3cfab74189faa086ae6ca0a3c5e7cb",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +59,63 @@        when getting user credentials.\n\n        .. _local webserver flow:\n            http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server\n        .. _console flow:"
  },
  {
    "id" : "2c6e42a5-fadb-4ee3-9559-4c08bb04eb8b",
    "prId" : 22557,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22557#pullrequestreview-152157447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8419b72-6b97-442b-a4cc-1e0b1e8bfff7",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Do we have a good way to test this by any chance?",
        "createdAt" : "2018-09-01T22:03:44Z",
        "updatedAt" : "2018-09-17T23:03:09Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "5119c577-7694-4abf-8f07-a88c26573307",
        "parentId" : "b8419b72-6b97-442b-a4cc-1e0b1e8bfff7",
        "authorId" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "body" : "I've got a test in the pandas-gbq repo:\r\n\r\nhttps://github.com/pydata/pandas-gbq/blob/998b6cfe953613bf5ada6253a7d3550837a2d169/tests/unit/test_gbq.py#L367-L369\r\n\r\nI suppose I should include a similar test here?",
        "createdAt" : "2018-09-02T22:02:57Z",
        "updatedAt" : "2018-09-17T23:03:09Z",
        "lastEditedBy" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "tags" : [
        ]
      },
      {
        "id" : "7a7a21ca-7668-49f1-8e71-e0b5dadffa67",
        "parentId" : "b8419b72-6b97-442b-a4cc-1e0b1e8bfff7",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "If it's possible to include in some shape or form, I would definitely be 👍 for it.",
        "createdAt" : "2018-09-02T22:06:01Z",
        "updatedAt" : "2018-09-17T23:03:09Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "7de8eaec-2938-4cb9-a1bf-af7b7148507d",
        "parentId" : "b8419b72-6b97-442b-a4cc-1e0b1e8bfff7",
        "authorId" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "body" : "Added in https://github.com/pandas-dev/pandas/pull/22557/commits/07c2eb80875f73fbed8a38b84cd0d5f34246868c",
        "createdAt" : "2018-09-04T16:49:12Z",
        "updatedAt" : "2018-09-17T23:03:09Z",
        "lastEditedBy" : "123c1393-2602-4758-a036-a9a25697e7fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd18b7d0365ab4e81ad9d7e2b32985c4fd71627a",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +125,129 @@            stacklevel=2,\n        )\n\n    return pandas_gbq.read_gbq(\n        query, project_id=project_id, index_col=index_col,"
  },
  {
    "id" : "a4f77796-f924-4044-be0d-fe773a9f057c",
    "prId" : 22557,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22557#pullrequestreview-155712396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e70bccb5-1cf0-437e-9eb3-7c5d10430016",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versionchanged (0.24.0)",
        "createdAt" : "2018-09-15T12:22:50Z",
        "updatedAt" : "2018-09-17T23:03:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd18b7d0365ab4e81ad9d7e2b32985c4fd71627a",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +68,72 @@        *New in version 0.2.0 of pandas-gbq*.\n    dialect : str, default 'legacy'\n        Note: The default value is changing to 'standard' in a future verion.\n\n        SQL syntax dialect to use. Value can be one of:"
  }
]