[
  {
    "id" : "a1588e03-2b2b-40c4-8038-7afbab05b19b",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb4f0952-a958-4386-a050-1d2d038726c0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are you adding all of these exceptions? If an exception happens, just have it raise directly. No need to cover over the API. Only really useful exceptions should be done as custom. \n",
        "createdAt" : "2015-09-09T23:12:45Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +96,100 @@    pass\n\n\nclass GbqConnector(object):\n"
  },
  {
    "id" : "5d1c4f0b-6065-4a4e-8ebc-ec661dca89af",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "235871e1-603e-474e-a43c-ad0aca3351a9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so this is a legitimate (and useful) custom exception. \n",
        "createdAt" : "2015-09-09T23:14:36Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +178,182 @@                    print(error_message)\n                else:\n                    raise StreamingInsertError(error_message + '\\nEnable verbose logging to see all errors')\n\n        raise StreamingInsertError"
  },
  {
    "id" : "a4fee343-548e-43ff-9a90-396c4dfd2c29",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9497f12d-e1d8-42a6-8a54-1aeab8d878cc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can certainly _catch_ exceptions raised within gbq, but usually best just to let them bubble up, unless you can actually handle them (e.g. if the credentials are screwed up, then nothing you can do, so don't even catch it in the first place). \n\nAll that said if their is an exception (or family) of exceptions that could use a more intuitve error message then pls do so.\n",
        "createdAt" : "2015-09-09T23:16:14Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +200,204 @@        try:\n            query_reply = job_collection.insert(projectId=self.project_id, body=job_data).execute()\n        except AccessTokenRefreshError:\n            raise AccessDenied(\"The credentials have been revoked or expired, please re-run the application \"\n                                        \"to re-authorize\")"
  },
  {
    "id" : "60e61c2e-0bd4-4e09-9e8a-8f7175eb1198",
    "prId" : 10857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "later enhancement I would print the time on the message as well\n",
        "createdAt" : "2015-09-11T15:47:52Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "892ecb95-69c7-43fc-8bcd-a42f9f5c2a8a",
        "parentId" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "much futher enhancement (future PR), `verbose` could be a callable, which you would execute with the message (rather than actual print statements)\n",
        "createdAt" : "2015-09-11T15:48:48Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6de05f51-d60b-476c-ab01-33eed7ae95e5",
        "parentId" : "e3e9e63b-10cc-4536-85ec-3869bdce0342",
        "authorId" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "body" : "Sounds good. I have a few PRs for the release after 0.17.0\n",
        "createdAt" : "2015-09-11T16:09:49Z",
        "updatedAt" : "2015-09-13T16:30:46Z",
        "lastEditedBy" : "8c77c5aa-49c6-48ed-b2d2-013c7787503b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2622cb313072f3a02c0c8752a0496a518eb057b1",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +210,214 @@        while not query_reply.get('jobComplete', False):\n            if verbose:\n                print('Waiting for job to complete...')\n            try:\n                query_reply = job_collection.getQueryResults(projectId=job_reference['projectId'],"
  }
]