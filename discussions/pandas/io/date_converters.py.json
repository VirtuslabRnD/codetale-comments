[
  {
    "id" : "a8015905-e795-474e-a7fd-23cbe55a12bb",
    "prId" : 3730,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "This looks more like a `ValueError` or `TypeError` than an `AssertionError`...depends on what calls it.\n",
        "createdAt" : "2013-09-23T04:28:09Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "8c84f2c3-1ad9-4090-89b4-3a63d5e3211e",
        "parentId" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "I can't get this to trigger from user facing code ... it's only called when you pass both a custom `date_parser` and `parse_dates` is a list. Leaving this and the one below as is.\n",
        "createdAt" : "2013-09-28T16:21:05Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "70a15644-4375-4b28-bbba-595c6603f63b",
        "parentId" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "sounds good. Might be nice to add a `# pragma: no cover` so it's clear why it's not tested. :)\n",
        "createdAt" : "2013-09-28T16:22:59Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "23a2a497-76c4-4e2f-a521-6f6877e621e6",
        "parentId" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "let me run coverage and see what comes up\n",
        "createdAt" : "2013-09-28T16:24:12Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "6b26a8a6-803c-497a-acbe-daaf4e65cf84",
        "parentId" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "okay, not a big deal at all. I have no opinion whether it's necessary to unittest exceptions on an internal function.\n",
        "createdAt" : "2013-09-28T16:48:31Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "902b23c2-2a44-48a1-8c76-bc6de136ebd0",
        "parentId" : "3451ba7f-038e-4456-a890-6e09c31d8470",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "yeah i abandoned that \n",
        "createdAt" : "2013-09-28T16:49:52Z",
        "updatedAt" : "2013-09-28T19:19:16Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c853fcd6e411e6a7c4c4cd254fc2f1eb4d4730d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +49,53 @@def _check_columns(cols):\n    if not len(cols):\n        raise AssertionError(\"There must be at least 1 column\")\n\n    head, tail = cols[0], cols[1:]"
  }
]