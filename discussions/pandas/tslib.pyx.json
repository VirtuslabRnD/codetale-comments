[
  {
    "id" : "c0b1386d-467b-47e8-a3fa-793e72b69c59",
    "prId" : 4562,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "456314cd-7230-4590-929c-aab531a10131",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "FYI I think you can just declare this function: `cdef accessor get_accessor_func(int code) except -1:` and then an exception occuring int the cdef'd function will propogate up the stack\n",
        "createdAt" : "2013-08-14T13:07:54Z",
        "updatedAt" : "2013-08-15T17:08:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee4d9322c2e598bce4b5455e2f8f0a8a43b11c5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2420,2424 @@def get_period_field(int code, int64_t value, int freq):\n    cdef accessor f = _get_accessor_func(code)\n    if f is NULL:\n        raise ValueError('Unrecognized period code: %d' % code)\n    return f(value, freq)"
  },
  {
    "id" : "aa596667-2679-40ad-b84e-e731b236d067",
    "prId" : 4706,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2e76005-c1c1-4a96-85eb-03adcaaacc42",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "can you write a vbench for localization? there are quite a lot of API calls here. Some of these functions are exposed in numpy's C API, which might be worth investigating down the line for potential speed ups.\n",
        "createdAt" : "2013-09-26T01:31:48Z",
        "updatedAt" : "2013-10-02T00:54:47Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ea6c86dccd19714902e5de8b883d50c0705b45",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1704,1708 @@            \n           \n    if infer_dst:\n        dst_hours = np.empty(n, dtype=np.int64)\n        dst_hours.fill(NPY_NAT)"
  },
  {
    "id" : "6494ddb0-b9e5-41a6-9c67-8c2eefeb527a",
    "prId" : 5342,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeea68f9-5ef6-4b55-918b-d6723064bbb6",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "neat, didn't know you could use decorators in Cython at all...\n",
        "createdAt" : "2013-10-26T21:53:23Z",
        "updatedAt" : "2013-10-26T21:53:23Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "c1459682-2e2d-487e-a00e-24be6b019bac",
        "parentId" : "aeea68f9-5ef6-4b55-918b-d6723064bbb6",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "yep u can use them to tell cython not to check array bounds too, for example.\n",
        "createdAt" : "2013-10-27T22:01:20Z",
        "updatedAt" : "2013-10-27T22:01:20Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "3185fb00-0fd9-4a75-9981-69a40e73fd28",
        "parentId" : "aeea68f9-5ef6-4b55-918b-d6723064bbb6",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "ah, right the 'fake' cython decorators.\n",
        "createdAt" : "2013-10-27T22:03:29Z",
        "updatedAt" : "2013-10-27T22:03:29Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "0372cb4f-84d6-4072-91fc-8328183f9aa0",
        "parentId" : "aeea68f9-5ef6-4b55-918b-d6723064bbb6",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "they are real. like u said, cython implements decorators. i think cython is a superset of python so all of python is implemented, with the exception of assignment in the body of a class.\n",
        "createdAt" : "2013-10-27T22:04:50Z",
        "updatedAt" : "2013-10-27T22:04:50Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bfbe89387470e96f238cde232966a22fd0a63b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +141,145 @@        return cls(datetime.fromordinal(ordinal),offset=offset,tz=tz)\n\n    @classmethod\n    def now(cls, tz=None):\n        \"\"\" compat now with datetime \"\"\""
  },
  {
    "id" : "432862d9-b39f-4833-b93e-bd3181a0f807",
    "prId" : 5342,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2969c00c-7d3e-4784-ba30-093913d17b6b",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@cpcloud so is this the right option here? Or should it just be \"`cls('now')`\"?\n",
        "createdAt" : "2013-10-27T22:04:11Z",
        "updatedAt" : "2013-10-27T22:04:11Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "99b6fefd-2b57-4336-a5c3-8820c08200e5",
        "parentId" : "2969c00c-7d3e-4784-ba30-093913d17b6b",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "it's fine the way it is and that would depend on `dateutil` parsing i think. i'd prefer to just depend on stdlib here ... but not super strong about it.\n",
        "createdAt" : "2013-10-27T22:09:26Z",
        "updatedAt" : "2013-10-27T22:09:26Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "10b18195-e00d-4f77-bfd8-ce012db2085e",
        "parentId" : "2969c00c-7d3e-4784-ba30-093913d17b6b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is what `datetime` does\n",
        "createdAt" : "2013-10-27T22:15:34Z",
        "updatedAt" : "2013-10-27T22:15:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "633a51fb-42e4-4f3f-b374-7b4b61395aef",
        "parentId" : "2969c00c-7d3e-4784-ba30-093913d17b6b",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "yep ... looks good to me\n",
        "createdAt" : "2013-10-27T22:16:04Z",
        "updatedAt" : "2013-10-27T22:16:04Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "82bfbe89387470e96f238cde232966a22fd0a63b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +146,150 @@        if isinstance(tz, basestring):\n            tz = pytz.timezone(tz)\n        return cls(datetime.now(tz))\n\n    @classmethod"
  }
]