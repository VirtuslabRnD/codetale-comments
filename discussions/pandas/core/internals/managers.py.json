[
  {
    "id" : "5a81f5c3-ac13-4d44-9fe8-dac37cb71f6a",
    "prId" : 22325,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22325#pullrequestreview-162454603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "272215b4-98f4-4d39-af5a-410b275e7049",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "again, special casing sparse here, but should probably handle all EAs the same.",
        "createdAt" : "2018-08-13T20:15:46Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "f02f4d35-bb4b-44c9-b97e-b01f8032808a",
        "parentId" : "272215b4-98f4-4d39-af5a-410b275e7049",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a reason you cannot do this?",
        "createdAt" : "2018-09-04T12:36:32Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c6dbd085-922e-46e1-9e7a-cdacfb13442c",
        "parentId" : "272215b4-98f4-4d39-af5a-410b275e7049",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "any answer here?",
        "createdAt" : "2018-10-05T11:19:13Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0d256911-cdb9-4005-9f1e-7a9999afe549",
        "parentId" : "272215b4-98f4-4d39-af5a-410b275e7049",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "https://github.com/pandas-dev/pandas/issues/22791\r\n\r\nIn general, we don't know what the `dtype` should be. We'll need EAs to tell us their \"preferred\" numpy dtype, without having to convert head of time. So it's solvable, we just have to add it to the interface.",
        "createdAt" : "2018-10-08T12:53:27Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aad8e1976bcbfb694d3591a5f9143ab7316f5bd",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +791,795 @@        # TODO: https://github.com/pandas-dev/pandas/issues/22791\n        # Give EAs some input on what happens here. Sparse needs this.\n        if is_sparse(dtype):\n            dtype = dtype.subtype\n        elif is_extension_array_dtype(dtype):"
  },
  {
    "id" : "ee48689c-c421-4d15-809c-b05870ae2720",
    "prId" : 22785,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22785#pullrequestreview-158018410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d324bc85-13f0-4b91-9cd7-1b9c95e57048",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do people find this confusing? I can either\r\n\r\n1. duplicate the for loop, using `list.append` for EAs and inserting into `result` for other\r\n2. use lists everywhere\r\n3. use this\r\n\r\nI chose this implementation because I assume it's slightly for wide dataframes with a numpy type, compared to building a list an then `np.asarray(result)` at the end.",
        "createdAt" : "2018-09-20T16:28:50Z",
        "updatedAt" : "2018-09-26T11:39:43Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b1d70e6c-99ca-4a11-ac79-a65681ad7ba0",
        "parentId" : "d324bc85-13f0-4b91-9cd7-1b9c95e57048",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This implementation looks good to me",
        "createdAt" : "2018-09-24T09:00:51Z",
        "updatedAt" : "2018-09-26T11:39:43Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "78dd81e7c74345c1525b2ea7a623415a6c602f87",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +913,917 @@        if is_extension_array_dtype(dtype):\n            # we'll eventually construct an ExtensionArray.\n            result = np.empty(n, dtype=object)\n        else:\n            result = np.empty(n, dtype=dtype)"
  },
  {
    "id" : "982d70b3-b95d-41fb-8774-9300b1b070ee",
    "prId" : 22785,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22785#pullrequestreview-158018410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef58735c-006b-4641-9d5b-d3219990d1be",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this gauaranteed to be 1d at this point?",
        "createdAt" : "2018-09-23T12:29:08Z",
        "updatedAt" : "2018-09-26T11:39:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "917888d4-a298-454d-8f43-2fe25347ae90",
        "parentId" : "ef58735c-006b-4641-9d5b-d3219990d1be",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "`result`  is created a few lines above with `np.empty(n, dtype=object)`, so I assume yes",
        "createdAt" : "2018-09-24T09:01:31Z",
        "updatedAt" : "2018-09-26T11:39:43Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "78dd81e7c74345c1525b2ea7a623415a6c602f87",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +924,928 @@\n        if is_extension_array_dtype(dtype):\n            result = dtype.construct_array_type()._from_sequence(\n                result, dtype=dtype\n            )"
  }
]