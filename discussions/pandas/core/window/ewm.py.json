[
  {
    "id" : "0853a71a-3d52-47b0-8fe9-307ada9d0f37",
    "prId" : 32212,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32212#pullrequestreview-365196365",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef9485ed-b7d8-4f69-8490-2e3354d879df",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Is this change in the formula based on the code?",
        "createdAt" : "2020-02-26T19:23:20Z",
        "updatedAt" : "2020-03-07T18:39:03Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "bc5f9b9b-2db3-490e-a8c1-1855c89f1b61",
        "parentId" : "ef9485ed-b7d8-4f69-8490-2e3354d879df",
        "authorId" : "a8c84295-5321-4fae-9bd7-73e358b67c6f",
        "body" : "The code uses `1 - np.exp(np.log(0.5) / halflife)`.\r\nI just felt that `-ln(2)` is aesphetically more pleasing than `log(0.5)`.\r\nIt is typically presented like that: https://en.wikipedia.org/wiki/Exponential_decay",
        "createdAt" : "2020-02-26T19:47:26Z",
        "updatedAt" : "2020-03-07T18:39:03Z",
        "lastEditedBy" : "a8c84295-5321-4fae-9bd7-73e358b67c6f",
        "tags" : [
        ]
      },
      {
        "id" : "e31bb85f-d229-4290-a2b1-51d0647513da",
        "parentId" : "ef9485ed-b7d8-4f69-8490-2e3354d879df",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I don't have a preference, I was a bit confused about the change of the base of the logarithm. I think the original one can be misleading, I think it's possible to assume base 10.\r\n\r\nIn any case, your version looks good.",
        "createdAt" : "2020-02-26T19:53:48Z",
        "updatedAt" : "2020-03-07T18:39:03Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb5de6d451b00bab003d58ee0256478824602042",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +47,51 @@    halflife : float, optional\n        Specify decay in terms of half-life,\n        :math:`\\alpha = 1 - \\exp\\left(-\\ln(2) / halflife\\right)`, for\n        :math:`halflife > 0`.\n    alpha : float, optional"
  },
  {
    "id" : "7192b443-ea49-4169-95d3-96e8e8184568",
    "prId" : 34839,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34839#pullrequestreview-432776221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc87c2b1-5c24-4bd3-9a56-ffacf7d6a021",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add versionadded tag",
        "createdAt" : "2020-06-17T21:06:05Z",
        "updatedAt" : "2020-07-06T21:33:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1debd809d7b1406ed0ffd8711ad2957cc4e9a664",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +87,91 @@        If ``times`` is specified, the time unit (str or timedelta) over which an\n        observation decays to half its value. Only applicable to ``mean()``\n        and halflife value will not apply to the other functions.\n\n        .. versionadded:: 1.1.0"
  },
  {
    "id" : "8d31d294-a82c-41fb-ac37-6bcb543f3506",
    "prId" : 34839,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34839#pullrequestreview-432776221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "984d88e9-ead5-4423-b6b3-300f3e3e4575",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add versionadded ",
        "createdAt" : "2020-06-17T21:06:13Z",
        "updatedAt" : "2020-07-06T21:33:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1debd809d7b1406ed0ffd8711ad2957cc4e9a664",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +142,146 @@        ``datetime64[ns]`` dtype.\n\n        If str, the name of the column in the DataFrame representing the times.\n\n        If 1-D array like, a sequence with the same shape as the observations."
  },
  {
    "id" : "0a79d41f-7dfd-4c5d-b249-95b861889f64",
    "prId" : 34839,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34839#pullrequestreview-433830127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32dc4a24-56e2-4f72-885f-9f26be4f2818",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we need to do this?",
        "createdAt" : "2020-06-17T21:06:45Z",
        "updatedAt" : "2020-07-06T21:33:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9cdaefb1-cc44-46bd-b64c-686454364c0a",
        "parentId" : "32dc4a24-56e2-4f72-885f-9f26be4f2818",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "We want to avoid raising a ValueError in the center of mass calculation if the user only specifies half life which we want to disregard in this branch.",
        "createdAt" : "2020-06-19T06:23:53Z",
        "updatedAt" : "2020-07-06T21:33:06Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1debd809d7b1406ed0ffd8711ad2957cc4e9a664",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +232,236 @@            # Halflife is no longer applicable when calculating COM\n            # But allow COM to still be calculated if the user passes other decay args\n            if common.count_not_none(com, span, alpha) > 0:\n                self.com = get_center_of_mass(com, span, None, alpha)\n            else:"
  },
  {
    "id" : "cf746209-76ae-4780-b855-51ac1dd55d75",
    "prId" : 37091,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37091#pullrequestreview-509571190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec2556b-67e3-4ce7-b6e2-9ecd79dc4a28",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "for clarify should make this `wrap_result_1d`, but can be in the future",
        "createdAt" : "2020-10-15T16:40:17Z",
        "updatedAt" : "2020-10-15T16:40:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a68ab91bdebfeef070381a69acdf001dd9fe97c2",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +65,69 @@\n\ndef wrap_result(obj: \"Series\", result: np.ndarray) -> \"Series\":\n    \"\"\"\n    Wrap a single 1D result."
  }
]