[
  {
    "id" : "19efaac5-29bc-4ae2-8d51-9dbff6496f99",
    "prId" : 30937,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30937#pullrequestreview-342283547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98ea057e-c999-4557-b765-bf9808659ee9",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this totally equivalent? I get the impression previously should have been *args and **kwargs so a little strange as is, but I don't think converting to `None` is totally the same?",
        "createdAt" : "2020-01-13T17:16:21Z",
        "updatedAt" : "2020-01-15T06:36:57Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d277b140-6e0e-4cc1-8f07-b15a5d9da67b",
        "parentId" : "98ea057e-c999-4557-b765-bf9808659ee9",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Previously the docs described `rolling/expanding.apply` being able to take *args, **kwargs: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.window.Expanding.apply.html\r\n\r\nBut in actuality, the arguments were `args=(), kwargs={}`: https://github.com/pandas-dev/pandas/blob/0.25.x/pandas/core/window.py#L2128\r\n\r\nSince the docs were incorrect, and the prior arguments has a mutable default argument, I changed `rolling.apply` to be  `args=None, kwargs=None` (later converting to `args=(), kwargs={}` internally if still `None`), and I am doing the same here for `expanding.apply`.\r\n\r\nSo _slightly_ changing the behavior, but taking advantage of the fact the docs were incorrect in the first place.",
        "createdAt" : "2020-01-14T04:16:19Z",
        "updatedAt" : "2020-01-15T06:36:57Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ab92299677f6fc3e7b510fbe73aea2ba309d1b8",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +156,160 @@        engine: str = \"cython\",\n        engine_kwargs: Optional[Dict[str, bool]] = None,\n        args=None,\n        kwargs=None,\n    ):"
  },
  {
    "id" : "97d0934c-13c0-4c3a-ae81-95482e2b25d4",
    "prId" : 37091,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37091#pullrequestreview-508472359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfe46428-4fe0-4471-828a-d106aee957a5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we actually allow other to be a non-frame/series?",
        "createdAt" : "2020-10-14T12:23:28Z",
        "updatedAt" : "2020-10-15T06:06:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e5e64469-9fc3-4c5d-9a45-0e8cce3b12b5",
        "parentId" : "dfe46428-4fe0-4471-828a-d106aee957a5",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Yeah we have tests where `other` is an ndarray",
        "createdAt" : "2020-10-14T15:30:25Z",
        "updatedAt" : "2020-10-15T06:06:46Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a68ab91bdebfeef070381a69acdf001dd9fe97c2",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +253,257 @@    def cov(\n        self,\n        other: Optional[Union[np.ndarray, FrameOrSeries]] = None,\n        pairwise: Optional[bool] = None,\n        ddof: int = 1,"
  },
  {
    "id" : "9f894ef8-9e31-46ff-a792-d84d6d1539ff",
    "prId" : 39219,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39219#pullrequestreview-571504039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae15e323-ded4-4156-b45a-9f74d869e5f2",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "count does not have any parameters\r\n\r\n```\r\ncount(self)\r\n    Calculate the expanding count of non NaN observations.\r\n\r\n    Parameters\r\n    ----------\r\n\r\n    **kwargs\r\n        For function compatibility and will not have an effect on the result.\r\n```",
        "createdAt" : "2021-01-19T17:55:06Z",
        "updatedAt" : "2021-01-28T07:33:18Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c30c2669e493f293f47cc1eea16858c548d3a53",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +140,144 @@        agg_method=\"count\",\n    )\n    def count(self):\n        return super().count()\n"
  },
  {
    "id" : "b584a0f0-8f49-455f-9a2c-8879e1cf21e5",
    "prId" : 39219,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39219#pullrequestreview-571531763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "687968aa-03f2-4861-af3a-25e72bb06aed",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "OT i don't think *args should be used after the keyword argument ddof, mypy normally complains about the function receiving multiple values for argument.",
        "createdAt" : "2021-01-19T18:30:53Z",
        "updatedAt" : "2021-01-28T07:33:18Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c30c2669e493f293f47cc1eea16858c548d3a53",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +317,321 @@        agg_method=\"std\",\n    )\n    def std(self, ddof: int = 1, *args, **kwargs):\n        nv.validate_expanding_func(\"std\", args, kwargs)\n        return super().std(ddof=ddof, **kwargs)"
  }
]