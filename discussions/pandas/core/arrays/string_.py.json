[
  {
    "id" : "26f1f639-897f-49d9-8b29-c19c2171aa5e",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-288808222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbc706ea-ee89-41fb-9fb2-a88e89cb8be2",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Would we consider just failing here if non-string / NA data makes its way through? Not sure our `None` / NA handling is consistent enough to introduce this",
        "createdAt" : "2019-09-09T16:28:31Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f9ed0b9b-1764-48e8-b38a-63679670c5dc",
        "parentId" : "dbc706ea-ee89-41fb-9fb2-a88e89cb8be2",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> Would we consider just failing here if non-string / NA data makes its way through?\r\n\r\nIt's a bit hidden, but we do fail here.\r\n\r\n```pytb\r\nIn [4]: pd.arrays.StringArray._from_sequence(['a', 'b', 1])\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-4-26199d15894d> in <module>\r\n----> 1 pd.arrays.StringArray._from_sequence(['a', 'b', 1])\r\n\r\n~/sandbox/pandas/pandas/core/arrays/string_.py in _from_sequence(cls, scalars, dtype, copy)\r\n    134         if dtype:\r\n    135             assert dtype == \"string\"\r\n--> 136         result = super()._from_sequence(scalars, dtype=object, copy=copy)\r\n    137         # convert None to np.nan\r\n    138         # TODO: it would be nice to do this in _validate / lib.is_string_array\r\n\r\n~/sandbox/pandas/pandas/core/arrays/numpy_.py in _from_sequence(cls, scalars, dtype, copy)\r\n    149         if copy and result is scalars:\r\n    150             result = result.copy()\r\n--> 151         return cls(result)\r\n    152\r\n    153     @classmethod\r\n\r\n~/sandbox/pandas/pandas/core/arrays/string_.py in __init__(self, values, copy)\r\n    123         super().__init__(values, copy=copy)\r\n    124         self._dtype = StringDtype()\r\n--> 125         self._validate()\r\n    126\r\n    127     def _validate(self):\r\n\r\n~/sandbox/pandas/pandas/core/arrays/string_.py in _validate(self)\r\n    128         \"\"\"Validate that we only store NA or strings.\"\"\"\r\n    129         if len(self._ndarray) and not lib.is_string_array(self._ndarray, skipna=True):\r\n--> 130             raise ValueError(\"Must provide strings\")\r\n    131\r\n    132     @classmethod\r\n\r\nValueError: Must provide strings\r\n\r\n```\r\n\r\nThis is through `StringArray._validate()`, which is called at the end of `StringArray.__init__`.",
        "createdAt" : "2019-09-16T18:12:10Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +176,180 @@        # TODO: it would be nice to do this in _validate / lib.is_string_array\n        # We are already doing a scan over the values there.\n        result[result.isna()] = np.nan\n        return result\n"
  },
  {
    "id" : "5647fcc9-3a15-4247-bc6c-46debc762d06",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290216713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41008a42-880b-4778-aa67-2f74ceab7247",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "what does this branch do?",
        "createdAt" : "2019-09-18T20:49:39Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7c63c4f1-ca82-4413-8416-32153d5e297d",
        "parentId" : "41008a42-880b-4778-aa67-2f74ceab7247",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Raises on invalid input.",
        "createdAt" : "2019-09-19T11:27:54Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@        if string == \"string\":\n            return cls()\n        return super().construct_from_string(string)\n\n    @classmethod"
  },
  {
    "id" : "161c24aa-ee80-4b4c-bd69-65aae82b23f9",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290602366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bd066e0-1212-4002-8090-aaeebf7decd5",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is this a pattern we use elsewhere?  i would have guessed that Series/Index would not be allowed here.",
        "createdAt" : "2019-09-18T20:52:41Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "65f402a8-42a8-4a24-9cc7-236207505ec7",
        "parentId" : "2bd066e0-1212-4002-8090-aaeebf7decd5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "also wont extract_array be redundant with the check on 149-150?",
        "createdAt" : "2019-09-18T20:53:13Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "debdd12b-4439-4dde-9901-03d1d7b234d6",
        "parentId" : "2bd066e0-1212-4002-8090-aaeebf7decd5",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : ">  i would have guessed that Series/Index would not be allowed here.\r\n\r\nWhy's that? Generally, the type on `value` is Sequence.\r\n\r\n>  also wont extract_array be redundant with the check on 149-150?\r\n\r\nYep.",
        "createdAt" : "2019-09-19T12:38:55Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "0d4425fb-a878-4b7f-87d7-60866a28c569",
        "parentId" : "2bd066e0-1212-4002-8090-aaeebf7decd5",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "We actually do need the second check for `type(self)`. `extract_numpy=True` only extracts ndarrays from PandasArray, not from subclasses (which I think is the desired behavior).",
        "createdAt" : "2019-09-19T14:18:53Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +184,188 @@\n    def __setitem__(self, key, value):\n        value = extract_array(value, extract_numpy=True)\n        if isinstance(value, type(self)):\n            # extract_array doesn't extract PandasArray subclasses"
  },
  {
    "id" : "cb31b70f-9778-4514-9da6-77d7aed1b674",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-290612164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "162bfefd-1181-4e25-ae30-79192ae18c80",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "could adapt is_valid_na_for_dtype",
        "createdAt" : "2019-09-18T20:53:54Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e143ac3a-1fd4-4c87-b7d8-f3fdadf807c9",
        "parentId" : "162bfefd-1181-4e25-ae30-79192ae18c80",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'd prefer to keep it local to the method using it until we have another need for the same check.",
        "createdAt" : "2019-09-19T14:31:26Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +201,205 @@                raise ValueError(\n                    \"Cannot set non-string value '{}' into a StringArray.\".format(value)\n                )\n        else:\n            if not is_array_like(value):"
  },
  {
    "id" : "7023936d-e66d-4edb-89ae-c5ca2ead7db8",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-291824138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc14c582-695b-4590-849f-d908bc01899a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "my comment above, should we allow multiple of these? e.g. str",
        "createdAt" : "2019-09-23T14:44:29Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@        \"\"\"\n        The alias for StringDtype is ``'string'``.\n        \"\"\"\n        return \"string\"\n"
  },
  {
    "id" : "41e03b44-01fe-4b5c-814f-f19b5058302e",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-291852038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5014ace9-bde8-4278-9403-03914f7f0e81",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "IIRC we tend to preserve ``None`` as the missing value token if a user passes an ``object`` array (rather than replacing as ``np.nan``, so am surprised this doesn't break any tests. (note that I have always found this to be weird :->)",
        "createdAt" : "2019-09-23T14:46:38Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a675ed07-a00e-4987-af6d-5384b5712445",
        "parentId" : "5014ace9-bde8-4278-9403-03914f7f0e81",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yeah. I think no tests break since the `.str.<method>` tests just preserve `np.nan` or `None` through ops. And I'm *only* allowing `np.nan` here, which gets preserved.\r\n\r\nI really don't think we want to allow `np.nan` or `None` here. It is indeed weird that we allow both.",
        "createdAt" : "2019-09-23T15:11:23Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +176,180 @@        # TODO: it would be nice to do this in _validate / lib.is_string_array\n        # We are already doing a scan over the values there.\n        result[result.isna()] = np.nan\n        return result\n"
  },
  {
    "id" : "be76831f-b348-425a-9cd0-bc331504b761",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-291824138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2227e649-4d4d-4817-8b4c-1812fcc68973",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same question as @jbrockmendel above, might be nice to have some helper functions to do this (as IIIRC we do this elsewhere), but clearly can be a followup",
        "createdAt" : "2019-09-23T14:53:04Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +202,206 @@                    \"Cannot set non-string value '{}' into a StringArray.\".format(value)\n                )\n        else:\n            if not is_array_like(value):\n                value = np.asarray(value, dtype=object)"
  },
  {
    "id" : "6d2d2c76-d899-4145-a314-3fc6c0cbb82c",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-292057843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e573cb0-c80e-4adf-9da5-01a33d863d8e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doesn't object dtype allow sum? ",
        "createdAt" : "2019-09-23T14:53:21Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6bcb4f2d-10a1-4bdc-9668-93a9defa7356",
        "parentId" : "6e573cb0-c80e-4adf-9da5-01a33d863d8e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Kinda. Seems to be broken when there are any `NA` values present.\r\n\r\nWant me to implement it here? Shouldn't be more that ~10 LOC + tests.",
        "createdAt" : "2019-09-23T15:13:35Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "61c59126-00f6-4ef8-b844-8f1131a0a696",
        "parentId" : "6e573cb0-c80e-4adf-9da5-01a33d863d8e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I *think* it works now (but of course with no nans); doesn't have to be here (but if easy sure)",
        "createdAt" : "2019-09-23T15:35:40Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "40f2017f-0544-4fdd-934f-d1f6649c81b1",
        "parentId" : "6e573cb0-c80e-4adf-9da5-01a33d863d8e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Added `.sum`. object also supports `.cumsum()`, but that's not implemented for EAs yet (open PR). ",
        "createdAt" : "2019-09-23T21:13:48Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +223,227 @@\n    def _reduce(self, name, skipna=True, **kwargs):\n        raise TypeError(\"Cannot perform reduction '{}' with string dtype\".format(name))\n\n    def value_counts(self, dropna=False):"
  },
  {
    "id" : "4db0a473-aa72-4c5b-9c6f-3bc6f5427457",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-297223038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb02aa88-1f86-4656-8f77-ffae8ebe9993",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this pass if you passing a StringArray itself? (and do we infer correctly in is_string_array)?",
        "createdAt" : "2019-10-02T12:17:08Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a495d08d-f5fe-4365-9e2a-62df578ac88d",
        "parentId" : "fb02aa88-1f86-4656-8f77-ffae8ebe9993",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> does this pass if you passing a StringArray itself? \r\n\r\nDone.\r\n\r\n> and do we infer correctly in is_string_array\r\n\r\nWe (Cython) actually raises on `lib.is_string_array(StringArray)` since it's expecting an ndarray. Not sure what's best here. IIUC, we only use `len(values)` and `values.dtype`.\r\n",
        "createdAt" : "2019-10-04T01:02:09Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@\n    def _validate(self):\n        \"\"\"Validate that we only store NA or strings.\"\"\"\n        if len(self._ndarray) and not lib.is_string_array(self._ndarray, skipna=True):\n            raise ValueError("
  },
  {
    "id" : "379fc7ce-e6e8-4b08-9cd3-f1a83efc5464",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-296201453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fabc02a-c1e3-49d5-93d7-96ad5b5e69f4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in the future we can change this impl to be a a Dictionary encoded type I think (which Categorical will subclass), but for a different day",
        "createdAt" : "2019-10-02T12:19:08Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "66611fb4-b51b-4ec3-a290-1665e243ee63",
        "parentId" : "5fabc02a-c1e3-49d5-93d7-96ad5b5e69f4",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We can discuss this at https://github.com/pandas-dev/pandas/issues/20899",
        "createdAt" : "2019-10-02T12:30:32Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +176,180 @@        # TODO: it would be nice to do this in _validate / lib.is_string_array\n        # We are already doing a scan over the values there.\n        result[result.isna()] = np.nan\n        return result\n"
  },
  {
    "id" : "1a1d3872-beca-4895-a1c0-84bbb55f976e",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-297223117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7bb79aa-befe-4987-94a0-487c76484256",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have sufficient testing to properly handle 'string' in pandas_dtype? (I think yes but confirming)",
        "createdAt" : "2019-10-02T12:19:40Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7fe1c0f9-977b-4055-a13f-8535340f5ed3",
        "parentId" : "b7bb79aa-befe-4987-94a0-487c76484256",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yep, I think so.",
        "createdAt" : "2019-10-04T01:02:33Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +215,219 @@\n    def astype(self, dtype, copy=True):\n        dtype = pandas_dtype(dtype)\n        if isinstance(dtype, StringDtype):\n            if copy:"
  },
  {
    "id" : "49b9b9bf-c538-4d4f-98e7-d2f97cba8c79",
    "prId" : 27949,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27949#pullrequestreview-296200516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f3177d-4644-4bf3-81f0-4b864817ccfa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should add value_counts to the base EA class, any idea why we don't have this? (if you can create an issue)",
        "createdAt" : "2019-10-02T12:21:10Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f3173d72-b61e-4538-9633-5f0724ee0d4f",
        "parentId" : "d1f3177d-4644-4bf3-81f0-4b864817ccfa",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "See https://github.com/pandas-dev/pandas/issues/22843, where I actually argue to remove it",
        "createdAt" : "2019-10-02T12:28:37Z",
        "updatedAt" : "2019-10-04T14:03:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e92cded0ca1e3747d02b417d27d4d7d039fe1b4",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +225,229 @@        raise TypeError(\"Cannot perform reduction '{}' with string dtype\".format(name))\n\n    def value_counts(self, dropna=False):\n        from pandas import value_counts\n"
  }
]