[
  {
    "id" : "2d8148ca-6888-43ed-8eed-7848d0649aee",
    "prId" : 19902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19902#pullrequestreview-105570267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bf56c33-bd1b-4450-83d3-1d107bbc0ffc",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Do we want this for our arrays? \r\nI am not sure this should be called `.values`. \r\nAnd we already have `_ndarray_values` ?",
        "createdAt" : "2018-03-20T14:01:32Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "53a62ec6-b225-42eb-9fc7-13f48a33dd3a",
        "parentId" : "2bf56c33-bd1b-4450-83d3-1d107bbc0ffc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is a good question, and I think relates to the inheritance vs composition question.  As with several other comments, the narrow-context answer is that this PR is designed to involve essentially zero _changes_ to behavior, is just moving methods/properties from their existing locations in the index classes.\r\n\r\nAs for questions about whether a method/property is needed in the array classes, these are all going to be needed by the arithmetic/comparison methods (ported in a later pass)",
        "createdAt" : "2018-03-20T23:16:57Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a684c2d6d939d372a18bfa7788258762420ccb5c",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@    def values(self):\n        \"\"\" return the underlying data as an ndarray \"\"\"\n        return self._data.view(np.ndarray)\n\n    @property"
  },
  {
    "id" : "bd887467-539a-473a-b4cf-4421fc25f788",
    "prId" : 19902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19902#pullrequestreview-105358025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ac8e347-082a-4c30-95d0-150f9b5c9935",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "same: is this needed on the arrays?",
        "createdAt" : "2018-03-20T14:11:21Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "a684c2d6d939d372a18bfa7788258762420ccb5c",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\n    @property  # NB: override with cache_readonly in immutable subclasses\n    def hasnans(self):\n        \"\"\" return if I have any nans; enables various perf speedups \"\"\"\n        return self._isnan.any()"
  },
  {
    "id" : "20e361be-4e9e-4d27-8920-567835fe33e3",
    "prId" : 19902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19902#pullrequestreview-105570329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b141f30-73ec-43ed-8c63-ad1d15ee13e1",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this should be `isna()` ?",
        "createdAt" : "2018-03-20T14:12:22Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "80ae4802-11ba-4c37-9ba5-1f14481aceed",
        "parentId" : "9b141f30-73ec-43ed-8c63-ad1d15ee13e1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I'm open to the name-change.  This is the existing name.",
        "createdAt" : "2018-03-20T23:17:16Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a684c2d6d939d372a18bfa7788258762420ccb5c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\n    @property  # NB: override with cache_readonly in immutable subclasses\n    def _isnan(self):\n        \"\"\" return if each value is nan\"\"\"\n        return (self.asi8 == iNaT)"
  },
  {
    "id" : "fa55e9f3-1d48-41f2-87ed-0a59db86aaf6",
    "prId" : 19902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19902#pullrequestreview-105358025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de5ffbd0-21e2-4ed3-9bca-7335db3f3349",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "how is this different from `fillna` ?",
        "createdAt" : "2018-03-20T14:12:44Z",
        "updatedAt" : "2018-07-02T22:07:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "a684c2d6d939d372a18bfa7788258762420ccb5c",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@        return self._isnan.any()\n\n    def _maybe_mask_results(self, result, fill_value=None, convert=None):\n        \"\"\"\n        Parameters"
  },
  {
    "id" : "b45e21ea-3526-4d6c-a9f6-f07680ca2846",
    "prId" : 21782,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21782#pullrequestreview-135205285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b787463-695b-4ac4-ba4e-f5c725c1bf6a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so for future, any methods that we implement in the sub classes but not here, should be an AbstractMethodError (not specific to this comment, just generally)",
        "createdAt" : "2018-07-07T14:04:35Z",
        "updatedAt" : "2018-07-07T14:07:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10e5559785dafd7b0c703e680a27344b08655053",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +34,38 @@        raise com.AbstractMethodError(self)\n\n    def _box_values(self, values):\n        \"\"\"\n        apply box func to passed values"
  },
  {
    "id" : "438625b6-24f3-4754-8ddf-e2b5b2be84a0",
    "prId" : 21803,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21803#pullrequestreview-135232443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5d5b335-4650-40d7-973b-f079fd1ea793",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't need the else here",
        "createdAt" : "2018-07-07T22:33:58Z",
        "updatedAt" : "2018-07-07T23:28:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4170ba77-f468-4062-ab95-2ac5e5a211a9",
        "parentId" : "a5d5b335-4650-40d7-973b-f079fd1ea793",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is the existing `__getitem__` moved verbatim.  Can de-indent in the next pass.",
        "createdAt" : "2018-07-07T23:23:55Z",
        "updatedAt" : "2018-07-07T23:28:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3f33cdb5-abf9-405b-8ff3-b8b05c2b28b7",
        "parentId" : "a5d5b335-4650-40d7-973b-f079fd1ea793",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "thanks!",
        "createdAt" : "2018-07-08T12:56:07Z",
        "updatedAt" : "2018-07-08T12:56:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "192c9200e690b69e2e3d4cb7f4d9b041854be9e3",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +109,113 @@            val = getitem(key)\n            return self._box_func(val)\n        else:\n            if com.is_bool_indexer(key):\n                key = np.asarray(key)"
  },
  {
    "id" : "a769e9e1-1d8d-4cce-997d-bf0566dadf06",
    "prId" : 21815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21815#pullrequestreview-135239718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7131f534-ab61-460a-b963-1acbe1effebc",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just de-indenting this block, requested on the previous PR.",
        "createdAt" : "2018-07-08T17:26:23Z",
        "updatedAt" : "2018-07-08T17:26:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9358611e0cf47b231bdd0f6cbeeef4c73302eb",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +114,118 @@            val = getitem(key)\n            return self._box_func(val)\n\n        if com.is_bool_indexer(key):\n            key = np.asarray(key)"
  },
  {
    "id" : "2c7899cc-c952-474b-b819-a4789cd20284",
    "prId" : 21815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21815#pullrequestreview-135239735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "995f19a5-88b4-42bc-8e20-6fde55a5e480",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`self.astype('O')` is used a few times, so that's the only one we need for now",
        "createdAt" : "2018-07-08T17:26:57Z",
        "updatedAt" : "2018-07-08T17:26:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9358611e0cf47b231bdd0f6cbeeef4c73302eb",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +150,154 @@        if is_object_dtype(dtype):\n            return self._box_values(self.asi8)\n        return super(DatetimeLikeArrayMixin, self).astype(dtype, copy)\n\n    # ------------------------------------------------------------------"
  },
  {
    "id" : "29664c7f-a0af-449e-a105-ae6a75214c2a",
    "prId" : 21815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21815#pullrequestreview-135247031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d8c642b-7e0f-4cfb-bd5e-6f78db1a5a77",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "at some point pls add a doc-string",
        "createdAt" : "2018-07-08T22:01:48Z",
        "updatedAt" : "2018-07-08T22:03:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9358611e0cf47b231bdd0f6cbeeef4c73302eb",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +148,152 @@\n    def astype(self, dtype, copy=True):\n        if is_object_dtype(dtype):\n            return self._box_values(self.asi8)\n        return super(DatetimeLikeArrayMixin, self).astype(dtype, copy)"
  },
  {
    "id" : "f8c691a4-f202-414b-9180-67fcdc2e727f",
    "prId" : 21872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21872#pullrequestreview-136505995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a1af072-a399-48db-95eb-6d1f88683536",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Yes, if you can.",
        "createdAt" : "2018-07-12T05:23:09Z",
        "updatedAt" : "2018-07-12T19:19:26Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "935ac7b2b48a98ead0e2140ce3a681649184a18a",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +54,58 @@\n    name = '__{name}__'.format(name=op.__name__)\n    # TODO: docstring?\n    return compat.set_function_name(cmp_method, name, cls)\n"
  },
  {
    "id" : "f7627ef1-db6a-4547-98c3-1a02430ba2b5",
    "prId" : 21872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21872#pullrequestreview-136718176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d15742ca-3ddd-4a81-96b6-aaa98a7f8055",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "\"8 aware arrays\" ?",
        "createdAt" : "2018-07-12T05:23:37Z",
        "updatedAt" : "2018-07-12T19:19:26Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "5bf56bb3-e4e6-49dd-b9c8-159d48a5d5ef",
        "parentId" : "d15742ca-3ddd-4a81-96b6-aaa98a7f8055",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is the existing docstring in indexes.datetimelike.  I'm open to suggestions.",
        "createdAt" : "2018-07-12T15:57:16Z",
        "updatedAt" : "2018-07-12T19:19:26Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "935ac7b2b48a98ead0e2140ce3a681649184a18a",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +477,481 @@        \"\"\"\n        We have been called because a comparison between\n        8 aware arrays. numpy >= 1.11 will\n        now warn about NaT comparisons\n        \"\"\""
  },
  {
    "id" : "931b1c35-bcb8-4b46-b36a-cdc7f99ca2da",
    "prId" : 21872,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21872#pullrequestreview-136506084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ece46183-e4cd-4a92-9c34-2e01be971a92",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "docstring",
        "createdAt" : "2018-07-12T05:23:59Z",
        "updatedAt" : "2018-07-12T19:19:26Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "935ac7b2b48a98ead0e2140ce3a681649184a18a",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +527,531 @@# Shared Constructor Helpers\n\ndef validate_periods(periods):\n    \"\"\"\n    If a `periods` argument is passed to the Datetime/Timedelta Array/Index"
  },
  {
    "id" : "3258c594-d12c-47c0-a2a4-4f7d882bb76e",
    "prId" : 21926,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21926#pullrequestreview-139088132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4fc17ed-388b-483e-a9e4-8f2ae07f84d2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do this ?",
        "createdAt" : "2018-07-17T12:13:18Z",
        "updatedAt" : "2018-07-19T15:51:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "18edebf1-b4aa-4c16-8d29-3abca32e6262",
        "parentId" : "f4fc17ed-388b-483e-a9e4-8f2ae07f84d2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you update this",
        "createdAt" : "2018-07-20T12:50:49Z",
        "updatedAt" : "2018-07-20T12:51:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fbbe40b3-8524-4900-910d-3bfd80e9df1c",
        "parentId" : "f4fc17ed-388b-483e-a9e4-8f2ae07f84d2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Already done",
        "createdAt" : "2018-07-20T13:48:09Z",
        "updatedAt" : "2018-07-20T13:48:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "8db496db-8a9b-40cf-b6d4-9180c8578799",
        "parentId" : "f4fc17ed-388b-483e-a9e4-8f2ae07f84d2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, does tz_compare not take None as an arg? hmm make should add the check there? as I don't think we check for None's elsewhere (not really sure about this)",
        "createdAt" : "2018-07-20T13:59:46Z",
        "updatedAt" : "2018-07-20T13:59:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b7e7853d-c918-43d2-baa1-a6ddc04e47ac",
        "parentId" : "f4fc17ed-388b-483e-a9e4-8f2ae07f84d2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "None-tz comparisons are a pretty special case that get handled separately.  I’m OK with tzcompare not taking None.",
        "createdAt" : "2018-07-20T14:47:52Z",
        "updatedAt" : "2018-07-20T14:47:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a72f980688a0556f95119b547b2936fa6b49697a",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +644,648 @@            dtype = DatetimeTZDtype.construct_from_string(dtype)\n            dtz = getattr(dtype, 'tz', None)\n            if dtz is not None:\n                if tz is not None and not timezones.tz_compare(tz, dtz):\n                    raise ValueError(\"cannot supply both a tz and a dtype\""
  },
  {
    "id" : "39f51dec-1e27-45dd-b0d9-968d7ff37a0a",
    "prId" : 21926,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21926#pullrequestreview-139043247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f6726c3-e161-4fb2-957b-5323a07def56",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do absolute imports",
        "createdAt" : "2018-07-18T10:34:40Z",
        "updatedAt" : "2018-07-19T15:51:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4981353b-e271-4733-8766-996cafd95e2b",
        "parentId" : "3f6726c3-e161-4fb2-957b-5323a07def56",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Tried it, causes import-time errors",
        "createdAt" : "2018-07-18T16:36:07Z",
        "updatedAt" : "2018-07-19T15:51:16Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f7d9eb05-f5ab-4a9c-a3eb-347309d03aed",
        "parentId" : "3f6726c3-e161-4fb2-957b-5323a07def56",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i see, we import in __init__ all of the extension arrays which import this. hmm.",
        "createdAt" : "2018-07-20T12:50:25Z",
        "updatedAt" : "2018-07-20T12:51:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a72f980688a0556f95119b547b2936fa6b49697a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +30,34 @@from pandas.core.algorithms import checked_add_with_arr\n\nfrom .base import ExtensionOpsMixin\n\n"
  },
  {
    "id" : "889cec63-56dd-497a-9992-d5264a45a2ef",
    "prId" : 22697,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22697#pullrequestreview-156318299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21de23ae-68e8-4de1-8e54-9bd1976aed82",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "versionchanged -> 0.24.0",
        "createdAt" : "2018-09-18T11:25:52Z",
        "updatedAt" : "2018-09-19T21:51:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9bbfe8a57aa33e41a31b1413075b3ac7024daed",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +536,540 @@        periods : int\n            Number of periods (or increments) to shift by,\n            can be positive or negative.\n\n            .. versionchanged:: 0.24.0"
  },
  {
    "id" : "91013921-1187-4113-92a0-4cd5cacd2951",
    "prId" : 22697,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22697#pullrequestreview-156318299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdebd765-5839-460c-af42-d15e4ff4e5f8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you edit the Series.shift to add a See Also back to here",
        "createdAt" : "2018-09-18T11:26:25Z",
        "updatedAt" : "2018-09-19T21:51:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9bbfe8a57aa33e41a31b1413075b3ac7024daed",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +551,555 @@\n        See Also\n        --------\n        Index.shift : Shift values of Index.\n        \"\"\""
  },
  {
    "id" : "bd441e04-c0aa-4f26-8046-af51dc1dfa49",
    "prId" : 22699,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22699#pullrequestreview-155976572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f343b64-8870-4cea-ac26-853a2820dcab",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Not fully related to this change, but do we actually want to ignore the warning here? Shouldn't we rather fix it if numpy will do something differently in the future?",
        "createdAt" : "2018-09-17T12:04:07Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7cbfd274-24f4-4cc7-8673-f4865bd3a890",
        "parentId" : "6f343b64-8870-4cea-ac26-853a2820dcab",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Added to https://github.com/pandas-dev/pandas/issues/22698",
        "createdAt" : "2018-09-17T15:14:05Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4990fc2d984b536e5c7c97ad55d4f550ae661867",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@        # comparisons, this will raise in the future\n        with warnings.catch_warnings(record=True):\n            warnings.filterwarnings(\"ignore\", \"elementwise\", FutureWarning)\n            with np.errstate(all='ignore'):\n                result = op(self.values, np.asarray(other))"
  }
]