[
  {
    "id" : "dc61abfb-f31b-4f82-be25-7c1a328ddb8d",
    "prId" : 21798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21798#pullrequestreview-135213204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08c6046f-0c26-4e13-8d86-5d1f543b8407",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in the future can you add some comments / doc-string here",
        "createdAt" : "2018-07-07T19:59:40Z",
        "updatedAt" : "2018-07-07T20:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "759ebc28233092ae55d6f30ab0e620c648272b19",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +37,41 @@\ndef _period_array_cmp(opname, cls):\n    \"\"\"\n    Wrap comparison operations to convert Period-like to PeriodDtype\n    \"\"\""
  },
  {
    "id" : "a7920da3-0bba-41f7-9baf-7e13c98b9aed",
    "prId" : 21798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21798#pullrequestreview-135213204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3436b59e-9a2c-4468-aebc-edeea9bdd2a6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this use ExtensionOpsMixin ?",
        "createdAt" : "2018-07-07T20:00:53Z",
        "updatedAt" : "2018-07-07T20:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "759ebc28233092ae55d6f30ab0e620c648272b19",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +302,306 @@                                               freqstr=self.freqstr))\n\n    @classmethod\n    def _add_comparison_methods(cls):\n        \"\"\" add in comparison methods \"\"\""
  },
  {
    "id" : "ce8efe3b-8954-43f1-ba33-8404dec9e1d0",
    "prId" : 21815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21815#pullrequestreview-135242101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "268d12d8-a43c-40ce-a525-f71626b3db66",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "maybe add a todo comment to convert this to init once the Mixin is converted to proper array",
        "createdAt" : "2018-07-08T18:58:48Z",
        "updatedAt" : "2018-07-08T18:59:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9358611e0cf47b231bdd0f6cbeeef4c73302eb",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +116,120 @@    _attributes = [\"freq\"]\n\n    def __new__(cls, values, freq=None, **kwargs):\n        if is_period_dtype(values):\n            # PeriodArray, PeriodIndex"
  },
  {
    "id" : "7d028ec3-2da1-42e1-bd7f-acd1307cb1f8",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3f79618-60b2-4d4d-a0be-d9b58920c42b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "minor nit on using privatized cython functions here (later PR)",
        "createdAt" : "2018-07-11T00:00:23Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +9,13 @@from pandas._libs.tslibs.period import (\n    Period, IncompatibleFrequency, DIFFERENT_FREQ_INDEX,\n    get_period_field_arr, period_asfreq_arr, _quarter_to_myear)\nfrom pandas._libs.tslibs import period as libperiod\nfrom pandas._libs.tslibs.timedeltas import delta_to_nanoseconds"
  },
  {
    "id" : "52b3b2ce-fe39-4ca5-8005-50e8e883a964",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41c3a54b-1503-49f5-8d31-e75e6b06151f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future pls add doc-string",
        "createdAt" : "2018-07-11T00:00:35Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +162,166 @@\n    @classmethod\n    def _generate_range(cls, start, end, periods, freq, fields):\n        if freq is not None:\n            freq = Period._maybe_convert_freq(freq)"
  },
  {
    "id" : "dc4dade8-2d2b-40fe-8b6b-a13e3f961e2c",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78d05486-6dda-45ff-8cda-e1b36a014a84",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future doc-string & comments",
        "createdAt" : "2018-07-11T00:00:50Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +400,404 @@\ndef _get_ordinal_range(start, end, periods, freq, mult=1):\n    if com._count_not_none(start, end, periods) != 2:\n        raise ValueError('Of the three parameters: start, end, and periods, '\n                         'exactly two must be specified')"
  },
  {
    "id" : "d8dedc2c-7d6a-430c-8b59-0ff896e06757",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f31ab383-0dd1-44fb-bdd0-21f70910244a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future doc-string & comments",
        "createdAt" : "2018-07-11T00:01:02Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +444,448 @@\ndef _range_from_fields(year=None, month=None, quarter=None, day=None,\n                       hour=None, minute=None, second=None, freq=None):\n    if hour is None:\n        hour = 0"
  },
  {
    "id" : "5c3b8dcd-e1a9-48e2-a472-4b36772c8e14",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea81fe24-f680-465d-9d81-503e2f771f30",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doc-string ",
        "createdAt" : "2018-07-11T00:01:10Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +480,484 @@\n\ndef _make_field_arrays(*fields):\n    length = None\n    for x in fields:"
  },
  {
    "id" : "78ea0cdd-d52e-4590-9b15-07e92fc1ce0d",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-159752806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbca4bd-483c-4d91-a183-452cc9f70da2",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe mention what this `freq` is (physically)? An Offset subclass ?",
        "createdAt" : "2018-09-28T07:53:44Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +146,150 @@    called \"ordinals\" and represent some kind of offset from a base.\n\n    The `freq` indicates the span covered by each element of the array.\n    All elements in the PeriodArray have the same `freq`.\n"
  },
  {
    "id" : "09e35ecb-50c9-4a23-9986-7918ca2249cb",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164131978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "087d1953-c2a6-4f18-928b-4e91a69f7917",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is temporary no? (once DatetimeArray is done as well, we don't have this complex inheritance anymore?)",
        "createdAt" : "2018-10-12T08:30:30Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 732,
    "diffHunk" : "@@ -1,1 +745,749 @@        # We have DatetimeLikeArrayMixin ->\n        #     super(...), which ends up being... DatetimeIndexOpsMixin?\n        # this is complicated.\n        # need a pandas_astype(arr, dtype).\n        from pandas import Categorical"
  },
  {
    "id" : "a03445f8-0e06-422d-bbcc-6112fd35fca7",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166557710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we also accept strings here? Or have a separate function for that (something like `to_period` similar as we have `to_datetime`)",
        "createdAt" : "2018-10-12T08:33:53Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "cb15181e-4c0c-4a71-913b-31b617f2b8dc",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should prob have a separate function (there is already an issue for this). as you get into cases where you can have formatting, eg.. ``2012Q1`` and provide fromat strings.",
        "createdAt" : "2018-10-19T12:39:04Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7838de12-4be9-4939-b25f-0e3b4b9a1e38",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "though would not be averse to actually calling ``to_period`` here with a default format on an inferred string type.",
        "createdAt" : "2018-10-19T12:39:47Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca346285-e123-4e1c-a77c-7b7e986e8526",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In any case, adding the ability of parsing strings is out of scope for this PR I would say, so we can discuss later where to add it.",
        "createdAt" : "2018-10-19T14:04:55Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4c210601-d45d-4e70-bf22-178eb8583211",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This already works. I'll add an example.\r\n\r\n```\r\nIn [6]: pd.core.arrays.period_array(['2012Q1', '2013Q1'], freq='Q')\r\nOut[6]:\r\n<PeriodArray>\r\n['2012Q1', '2013Q1']\r\nLength: 2, dtype: period[Q-DEC]\r\n```\r\n\r\nI'm not sure what's required for `freq` to be inferred correctly, but `libperiod.extract_freq` and `libperiod.extract_ordinals` are doing all the heavy lifting here.",
        "createdAt" : "2018-10-19T14:38:31Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "106dd5c8-fd9e-45ef-b62a-f9ff27f682e8",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, cool, didn't know that :) \r\n(it's of course limited to standard formatted strings I suppose?)",
        "createdAt" : "2018-10-19T14:45:19Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 884,
    "diffHunk" : "@@ -1,1 +895,899 @@    # type: (Sequence[Optional[Period]], Optional[Tick]) -> PeriodArray\n    \"\"\"\n    Construct a new PeriodArray from a sequence of Period scalars.\n\n    Parameters"
  },
  {
    "id" : "36c53321-e08f-432b-82f1-6210116b421c",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164469537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c06eeb38-6a2a-4131-a7d8-8e22e1ee0366",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "docstring update?",
        "createdAt" : "2018-10-13T17:05:33Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 713,
    "diffHunk" : "@@ -1,1 +726,730 @@    def repeat(self, repeats, *args, **kwargs):\n        \"\"\"\n        Repeat elements of a Categorical.\n\n        See also"
  },
  {
    "id" : "dfd90678-c911-47a7-8d58-05b69728a9a1",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164469568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae65869-2e1a-4023-9567-01fff05fcc74",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`return self._isnan`",
        "createdAt" : "2018-10-13T17:06:41Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 434,
    "diffHunk" : "@@ -1,1 +404,408 @@\n    def isna(self):\n        return self._data == iNaT\n\n    def fillna(self, value=None, method=None, limit=None):"
  },
  {
    "id" : "29f6c5e0-6cf7-4ce9-9066-b800241d700f",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164484438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dcc1584-cb97-4eee-95f9-5ddcf630ab2b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "If fromordinals became simplenew, wouldn’t this be valid for all 3 datetimelike?",
        "createdAt" : "2018-10-14T04:33:26Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 469,
    "diffHunk" : "@@ -1,1 +439,443 @@        else:\n            new_values = self.copy()\n        return new_values\n\n    def copy(self, deep=False):"
  },
  {
    "id" : "dcba376b-d6cc-496e-8692-81feab3b8f21",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166118528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce40f776-ec52-4e3d-bc32-0a9f726e7d98",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Same question as on other PR: is this needed? Where is it used? (in any case not in this file)",
        "createdAt" : "2018-10-15T07:32:32Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "755dabc6-36f5-490e-9c62-1a84d1c9655d",
        "parentId" : "ce40f776-ec52-4e3d-bc32-0a9f726e7d98",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would just add these",
        "createdAt" : "2018-10-18T14:27:35Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 711,
    "diffHunk" : "@@ -1,1 +724,728 @@                                            freqstr=self.freqstr))\n\n    def repeat(self, repeats, *args, **kwargs):\n        \"\"\"\n        Repeat elements of a Categorical."
  },
  {
    "id" : "3baead80-4760-4e15-9076-2843fabb3298",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166153502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There are a few places in this file where `asi8` gets calculated as `asi8 = self._ndarray_values.view('i8')`, which can be updated. \r\n\r\nFurther, `asi8` gets inherited from datetimelike as `self.values.view('i8')` (and `self.values` itself is already `self._data.view(np.ndarray)`), which does not seem to be necessary for PeriodArray? If we keep the `asi8` property, I would overwrite it here to more directly return the ordinals, that will be clearer in the code I think.",
        "createdAt" : "2018-10-18T12:40:20Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "833beeba-065e-4908-a0ac-a1441327f23f",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think this was an attempt to remove `PeriodArray.asi8`. But, I suppose that's a useful property (unlike `.base` and `.flags`).",
        "createdAt" : "2018-10-18T14:34:47Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fad2d749-78ef-4107-a1ed-d4b385a458cd",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "To be clear the choice is between\r\n\r\n1. Implementing `PeriodArray.view` and re-using `DatetimelikeArrayMixin.asi8`\r\n2. Implementing `PeriodArray.asi8` as `return self._ndarary_values`.\r\n\r\nI think 2 is better.",
        "createdAt" : "2018-10-18T14:46:02Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a922e5b1-549f-4d57-837f-9bfbad57079c",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Agreed\r\n\r\n(or as `return self._data`, one level of redirection less)",
        "createdAt" : "2018-10-18T14:48:16Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9feebad8-066f-4874-bd2e-5807f5579b4f",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "-1 on `self._data`.  I think `asi8` is the most explicit option",
        "createdAt" : "2018-10-18T15:23:06Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 393,
    "diffHunk" : "@@ -1,1 +363,367 @@                raise IncompatibleFrequency(msg)\n\n            value = value.asi8\n        elif isinstance(value, Period):\n"
  },
  {
    "id" : "a9e6c59b-05f2-4a5c-91bc-6a7276e425bd",
    "prId" : 22961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22961#pullrequestreview-161365898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b2b9db4-7dfc-4c2c-996a-a105791d58c6",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Probably a warning, right? Maybe push the one that's in `DatetimeIndex.to_period` down here? That can be a separate PR though, since there may be other places calling PeriodArray with a tz-aware `values`.",
        "createdAt" : "2018-10-03T20:59:59Z",
        "updatedAt" : "2018-10-05T03:31:22Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "9ddc7ac4-c3b4-4189-8b9e-d5f9eca01fd8",
        "parentId" : "1b2b9db4-7dfc-4c2c-996a-a105791d58c6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think so, yah.\r\n\r\nIf it doesn't mess up your plans too much, after this I'd like to do a PR cleaning up some of the duplicated/convoluted constructors in (Period|Datetime|Timedelta)(Index|ArrayMixin).  I think making some helper functions etc before the bigger refactor would help focus attention during the latter.",
        "createdAt" : "2018-10-03T21:16:01Z",
        "updatedAt" : "2018-10-05T03:31:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "927e4bdc4e258ca0d2015451a9138309ce2ccc90",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +130,134 @@\n        elif is_datetime64_dtype(values):\n            # TODO: what if it has tz?\n            values = dt64arr_to_periodarr(values, freq)\n"
  },
  {
    "id" : "f9765280-2323-48a4-b1bf-d3a2208e8a6d",
    "prId" : 22961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22961#pullrequestreview-162260904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are you able to put these at the top?",
        "createdAt" : "2018-10-06T15:21:04Z",
        "updatedAt" : "2018-10-06T15:24:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c97649f-62dd-4eac-94a2-ad4efeb46df8",
        "parentId" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think that's fragile.  This mirrors the existing runtime import in the PeriodIndex method.",
        "createdAt" : "2018-10-06T15:35:27Z",
        "updatedAt" : "2018-10-06T15:35:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9098921e-5616-4ae4-b9eb-9bc708e5ea35",
        "parentId" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine, yeah definitly appreciate making the import hierarchy nicer",
        "createdAt" : "2018-10-06T15:39:21Z",
        "updatedAt" : "2018-10-06T15:39:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "927e4bdc4e258ca0d2015451a9138309ce2ccc90",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +295,299 @@        DatetimeArray/Index\n        \"\"\"\n        from pandas.core.arrays.datetimes import DatetimeArrayMixin\n\n        how = libperiod._validate_end_alias(how)"
  },
  {
    "id" : "56d1bbac-4f53-4e81-bf8d-759e8335eb6f",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-163146007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "229efc4b-f4da-44c1-8744-c9a0da818d24",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Looking at this and some of the other methods in the datetime/timedelta/period array mixins, I think some de-duplication can be done on the next pass",
        "createdAt" : "2018-10-10T00:17:35Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +404,408 @@            return self._shallow_copy(new_values)\n        else:  # pragma: no cover\n            raise TypeError(type(other).__name__)\n\n    @deprecate_kwarg(old_arg_name='n', new_arg_name='periods')"
  },
  {
    "id" : "447f69cd-bb0c-447e-b935-31a01a9b3cfd",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-164506031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9543baf-4ebd-4b57-b185-f78ff10065b9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add a doc string here",
        "createdAt" : "2018-10-14T16:53:59Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +501,505 @@        IncompatibleFrequency\n        \"\"\"\n        assert isinstance(self.freq, Tick)  # checked by calling function\n        own_offset = frequencies.to_offset(self.freq.rule_code)\n        base_nanos = delta_to_nanoseconds(own_offset)"
  },
  {
    "id" : "c250985f-cd09-47b2-8994-119ab51b9292",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-164506044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8620127c-cfe7-4733-86b8-fde26eb1517a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u comments these cases a bit",
        "createdAt" : "2018-10-14T16:54:18Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +508,512 @@            nanos = delta_to_nanoseconds(other)\n\n        elif isinstance(other, np.ndarray):\n            # numpy timedelta64 array; all entries must be compatible\n            assert other.dtype.kind == 'm'"
  },
  {
    "id" : "86473e11-9544-46ed-8dbc-f956a3c1a031",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-163874255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558d4ab7-7be2-42a3-8105-fc02ac9189f8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Ideally I'd like to get rid of `_from_ordinals` and have `_simple_new` be the lowest-level constructor like with all the other classes.  This turns out to be infeasible ATM because a bunch of parent class methods operate on `.values` instead of `._ndarray_values` and end up passing object-dtype to `_shallow_copy`.  This is being split off of a branch that is trying to avoid that.",
        "createdAt" : "2018-10-11T15:22:24Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +157,161 @@\n    @classmethod\n    def _from_ordinals(cls, values, freq=None, **kwargs):\n        \"\"\"\n        Values should be int ordinals"
  },
  {
    "id" : "6f53b1d7-dd2d-416d-93a3-476ba397cd57",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-164075168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "was this causing bugs that kwargs was not passed?",
        "createdAt" : "2018-10-11T15:34:20Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6bccf616-83ec-442b-bfc5-bbb6cadced47",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is necessary in order to allow `PeriodIndex` to inherit `_simple_new` from `PeriodArrayMixin`.\r\n\r\nThe PeriodIndex constructors in particular (but also DatetimeIndex and TimedeltaIndex) are really messy and complicated.  Inheriting methods and deleting as much as possible makes it easier for me to simplify them, even if some of that will end up getting copy/pasted down the road if/when inheritance is replaced.",
        "createdAt" : "2018-10-11T17:29:17Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d9a77db7-0b56-4d3b-9fc5-40c8bd6fd9b5",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you then move the implementation and share it by calling the other class instead of inheriting? ",
        "createdAt" : "2018-10-11T17:46:01Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fa1ae481-a926-46aa-8cef-72a20bf4d178",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Do you mean moving the `_from_ordinals` implementation?  We need both because the Index version sets self.name and calls _reset_identity",
        "createdAt" : "2018-10-11T17:59:52Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c3c386ab-0a78-48e6-b70d-922940d0482b",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I meant in PeriodIndex._simple_new calling PeriodArrayMixin._simple_new, similar as you did in one of the previous PRs (didn't look at the code, so don't know if that is possible in this case)",
        "createdAt" : "2018-10-11T18:07:20Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6bad99e6-4abf-4f39-b280-6ced1fde483d",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think I get what you're saying, will give it a shot",
        "createdAt" : "2018-10-11T18:41:19Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "595204df-c30f-4577-b3a1-17944a8d3d41",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Did anything come of this, one way or the other?",
        "createdAt" : "2018-10-12T01:35:46Z",
        "updatedAt" : "2018-10-12T01:37:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fc362620-941b-458c-8b3b-28944ea6ee93",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.  In an earlier commit I deleted PeriodIndex._simple_new and retained PeriodIndex._from_ordinals.  Now that has been reversed, and its non-trivially nicer.",
        "createdAt" : "2018-10-12T01:56:56Z",
        "updatedAt" : "2018-10-12T01:56:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +154,158 @@            return cls(values, freq=freq, **kwargs)\n\n        return cls._from_ordinals(values, freq=freq, **kwargs)\n\n    @classmethod"
  },
  {
    "id" : "1dba7a8f-d76e-4243-8964-15306fe3e69a",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-164302623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why do you want to share this? Once we actually don't inherit it anymore, we will need to add it back to PeriodIndex",
        "createdAt" : "2018-10-11T15:35:27Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "bf57541c-0bc1-4acf-8988-11b199e407bc",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think the signature should match across index classes, and hopefully the implementation can be shared.",
        "createdAt" : "2018-10-12T01:37:24Z",
        "updatedAt" : "2018-10-12T01:38:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "d0ed1d58-e055-4754-ad98-502f7a5a79eb",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But this one is about `_from_ordinals`, which will not be shared across index classes as it is Period-specific",
        "createdAt" : "2018-10-12T07:48:18Z",
        "updatedAt" : "2018-10-12T07:48:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "898a55c1-acc9-4963-9c52-39c7ad9a6784",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think we're moving towards getting rid of `_from_ordinals` in order to make PeriodIndex work like all the others.  To do that, we need to simplify _simple_new, which means fixing the places where inappropriate `values` get passed to it, i.e. #23095.",
        "createdAt" : "2018-10-12T15:48:06Z",
        "updatedAt" : "2018-10-12T15:48:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +163,167 @@        \"\"\"\n        # **kwargs are included so that the signature matches PeriodIndex,\n        #  letting us share _simple_new\n\n        values = np.array(values, dtype='int64', copy=False)"
  },
  {
    "id" : "ac6661bc-7002-40b2-abe0-83292ef3f744",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-169057903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you elaborate on the TODO?",
        "createdAt" : "2018-10-26T01:16:03Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2cdfebc7-1331-4af8-b7f4-1d668ad78a89",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think this was introduced in the PeriodArray rebase, so I'm not yet sure what needs to be done.  All I know ATM is that it the `freq` kwarg is ignored.",
        "createdAt" : "2018-10-26T01:26:34Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "67f83c1a-4d0f-421d-a9cd-e252a762b711",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "fleshed this out a bit",
        "createdAt" : "2018-10-26T01:29:37Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ae2eb0d8-7ccc-421b-9e9f-a6abcfaa84f2",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I still don't understand the comment. It says \"don't silently ignore\", but it raises an error so that is not silently?\r\n\r\nBut looking at the code, I don't see the argument used anywhere (except for in DatetimeLikeArray.shift, but that is overridden in PeriodArray.shift). \r\nSo I would rather simply remove this here.",
        "createdAt" : "2018-10-26T10:18:19Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "dc6edbe7-e73e-44d4-b500-1716701dcf75",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I added the raising because I figured it is better than silently ignoring, but I do not know what the ideal behavior is.  @TomAugspurger I think you added this behavior recently, can you clarify?\r\n",
        "createdAt" : "2018-10-26T14:40:46Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "fe3be4da-7a60-4b78-b22e-f1c65fee419b",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This looks fine as is. I would prefer that the signature matches between the subclasses. Raising if it's specified seems better than ignoring.\r\n\r\nI notice now that the positional argument should be `periods`, not `n`. I can fix that after.",
        "createdAt" : "2018-10-26T14:53:24Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "ae9f09c3-be9d-4f92-adaf-ba0bdab103c4",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I guess the TODO can be removed, and the error message updated, and maybe changed to a TypeError.",
        "createdAt" : "2018-10-26T14:56:18Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5ec5aea7-90a3-4b4d-8e04-bdd8c7cc5f25",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Should the docstring be updated?  I'm inclined to leave this for the next pass.",
        "createdAt" : "2018-10-26T16:53:18Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f71c841c-5eb3-4713-affd-388d54a9a6a8",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Fine by me.",
        "createdAt" : "2018-10-26T19:54:26Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "95ea10eb-8b18-494b-8053-f9febb968fa3",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I would just update/remove the comment here (since it is here that you add it, and the comment is not correct)",
        "createdAt" : "2018-10-27T09:03:01Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "25f7ae25-b3ce-44e3-a30f-c5fb3ecacae5",
        "parentId" : "043911c9-b334-445b-9f86-a66d3c35ab5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Done (pushing shortly)",
        "createdAt" : "2018-10-27T14:44:50Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +494,498 @@            Frequency increment to shift by.\n        \"\"\"\n        if freq is not None:\n            raise TypeError(\"`freq` argument is not supported for \"\n                            \"{cls}._time_shift\""
  },
  {
    "id" : "9ce4aee2-ed3c-4d9b-9008-e2f85d499da3",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-169058930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "791f899f-a24f-40c6-a38a-5b87a5b7e888",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this is simply moved? (or is also the code changed?)",
        "createdAt" : "2018-10-26T10:23:22Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f6424652-e974-4200-9f2c-fbb06056a9c7",
        "parentId" : "791f899f-a24f-40c6-a38a-5b87a5b7e888",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is a new function that is similar-but-not-identical to _maybe_convert_timedelta.  The latter is no longer needed by the Array, so is moved back to the Index.",
        "createdAt" : "2018-10-26T14:42:13Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1614fb83-d166-4948-9746-62203b2e95cf",
        "parentId" : "791f899f-a24f-40c6-a38a-5b87a5b7e888",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Sorry, I was not talking about `_maybe_convert_timedelta`, but the existing `_check_timedeltalike_freq_compat`, which, according to the diff here already existed in this file, but is simply moved (or also adapted?). \r\nIf there is a good reason to move it within the file (eg to a more logical order), that's fine, otherwise I would keep it where it was above to have a smaller diff.",
        "createdAt" : "2018-10-27T09:10:14Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f77dccf5-2374-4fdc-947d-4c20f7901e7b",
        "parentId" : "791f899f-a24f-40c6-a38a-5b87a5b7e888",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The PeriodArray PR moved the arithmetic functions, which this belongs adjacent to.  This moves it to keep it with the arithmetic functions.",
        "createdAt" : "2018-10-27T14:36:15Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d5bba889-eb2e-4c61-8f0f-539ed3b87eff",
        "parentId" : "791f899f-a24f-40c6-a38a-5b87a5b7e888",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, that's a good reason!",
        "createdAt" : "2018-10-27T15:12:41Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +805,809 @@        return type(self)(new_ordinals, freq=self.freq)\n\n    def _check_timedeltalike_freq_compat(self, other):\n        \"\"\"\n        Arithmetic operations with timedelta-like scalars or array `other`"
  },
  {
    "id" : "8352c53f-ca09-4e1e-b155-964c322123d8",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-169058280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c68779de-fc1f-408c-acc9-b91afe4414f4",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The superclass version seems to return integers, but this an actual PeriodArray?\r\n\r\nCan you add a comment indicating the types?",
        "createdAt" : "2018-10-26T10:28:27Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6d4f2f67-40e8-40bd-95e6-f044eef5bf1d",
        "parentId" : "c68779de-fc1f-408c-acc9-b91afe4414f4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> The superclass version seems to return integers, but this an actual PeriodArray?\r\n\r\nBoth this and the superclass version return i8 array.  The superclass has a brief docstring to that effect.",
        "createdAt" : "2018-10-26T14:43:48Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "eceb8bd3-df10-4bb3-ab2a-f1b6ca84181c",
        "parentId" : "c68779de-fc1f-408c-acc9-b91afe4414f4",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you then add a comment on this function indicating the types? That really makes it easier to read through this code\r\n\r\nBut, to my original question: this function uses `_addsub_int_array`, which is defined a little bit above to return a PeriodArray, and not a i8 array. \r\nI assume in practice this is not really a problem, because the code that converts the i8 array to PeriodArray, will also accept a PeriodArray. ",
        "createdAt" : "2018-10-27T09:06:36Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e00340a2-7233-4a08-b322-1562e2cb8635",
        "parentId" : "c68779de-fc1f-408c-acc9-b91afe4414f4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Good catch, I must have lost track of this somewhere in the rebase process.  Fixed to correctly return an i8 array, and brief docstrings added indicating types.",
        "createdAt" : "2018-10-27T14:55:18Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +766,770 @@        return ordinals\n\n    def _add_delta_tdi(self, other):\n        \"\"\"\n        Parameters"
  },
  {
    "id" : "cd65cb18-60db-4de5-923f-5f7e251c9a9d",
    "prId" : 23425,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23425#pullrequestreview-170529274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c5c2cef-4990-4fe6-bc51-d341f2f906ba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a test that needs this? I agree should set it....",
        "createdAt" : "2018-11-01T00:54:42Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3b1630a1-6104-485e-81ef-5739f61ee481",
        "parentId" : "7c5c2cef-4990-4fe6-bc51-d341f2f906ba",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.  IIRC it was timedelta64 -  TimedeltaIndex",
        "createdAt" : "2018-11-01T01:25:37Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3d38d29f83b08c78031febfd18ee31a0f06114",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +151,155 @@    \"\"\"\n    # array priority higher than numpy scalars\n    __array_priority__ = 1000\n    _attributes = [\"freq\"]\n    _typ = \"periodarray\"  # ABCPeriodArray"
  },
  {
    "id" : "68feb209-a9b0-48da-a48a-7b5ce007bfbe",
    "prId" : 23460,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23460#pullrequestreview-171295781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2f2656-0ba9-40d6-8853-802fc88171b8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not necessarily for this PR, but it isn't obvious when to use this versus just `to_offset`.  Should be clarified and possibly de-duplicated.  (and i think de-method-ed)",
        "createdAt" : "2018-11-02T22:48:10Z",
        "updatedAt" : "2018-11-02T22:48:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f765d21f9e9a40b6212778bffe3f78c9e0477ca2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +974,978 @@            data, freq = data._values, data.dt.freq\n\n    freq = Period._maybe_convert_freq(freq)\n\n    if isinstance(data, (ABCIndexClass, ABCSeries)):"
  },
  {
    "id" : "ccec073e-7bb8-453c-b202-20cc3e72f7a3",
    "prId" : 23587,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23587#pullrequestreview-173223671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5a7dac-507e-4abc-96ec-f1da1dac566d",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "unchanged, just moved up into the correct section",
        "createdAt" : "2018-11-08T23:46:03Z",
        "updatedAt" : "2018-11-12T10:53:40Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7211f79c0ce4e1f8c9a035ce0c00364885d29c8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +323,327 @@        return self.to_timestamp(how='end')\n\n    def to_timestamp(self, freq=None, how='start'):\n        \"\"\"\n        Cast to DatetimeArray/Index."
  },
  {
    "id" : "27777e20-450f-45d0-8c15-ce5eec030255",
    "prId" : 23593,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23593#pullrequestreview-186053530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c1ccdfb-183e-477b-bb66-3bc9718a8ca6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comment as above",
        "createdAt" : "2018-12-18T12:56:03Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4120586e626a4d3815a7f69132af70429a54dea8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +284,288 @@\n    def __array__(self, dtype=None):\n        # overriding DatetimelikeArray\n        return np.array(list(self), dtype=object)\n"
  },
  {
    "id" : "c416ed45-36a8-4bb6-a393-d73dd0ced328",
    "prId" : 23593,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23593#pullrequestreview-189441795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "190b79eb-02b7-4190-8042-ae76f2a25038",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should raise if dtype is not in [None, object]",
        "createdAt" : "2019-01-04T16:37:38Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "44e387d1-b5eb-47d6-9577-ba156f941700",
        "parentId" : "190b79eb-02b7-4190-8042-ae76f2a25038",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why would we raise, instead of NumPy?\r\n\r\n```python\r\nIn [11]: pdarr = pd.period_range('2000', periods=4).array\r\n\r\nIn [13]: np.asarray(pdser, dtype=float)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-13-60d3e286ef87> in <module>\r\n----> 1 np.asarray(pdser, dtype=float)\r\n\r\n~/sandbox/numpy/numpy/core/numeric.py in asarray(a, dtype, order)\r\n    531\r\n    532     \"\"\"\r\n--> 533     return array(a, dtype, copy=False, order=order)\r\n    534\r\n    535\r\n\r\nTypeError: float() argument must be a string or a number, not 'Period'\r\n\r\nIn [14]: np.asarray(pdser, dtype=str)\r\nOut[14]:\r\narray(['2000-01-01', '2000-01-02', '2000-01-03', '2000-01-04'],\r\n      dtype='<U64')\r\n\r\n```\r\n\r\nI'd rather we have less code to worry about :)",
        "createdAt" : "2019-01-04T16:43:53Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4ecf1797-e7eb-4970-b9c5-9f50e7e4e0c1",
        "parentId" : "190b79eb-02b7-4190-8042-ae76f2a25038",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you are ignoreing the dtype, you *must* raise if its not in a prescribe type, because you are NOT dispatching to np.nparray here",
        "createdAt" : "2019-01-04T16:47:48Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4120586e626a4d3815a7f69132af70429a54dea8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +286,290 @@        # overriding DatetimelikeArray\n        return np.array(list(self), dtype=object)\n\n    # --------------------------------------------------------------------\n    # Vectorized analogues of Period properties"
  },
  {
    "id" : "1e08a3d2-cd91-4b1b-b5dd-82cd7a7353b0",
    "prId" : 23601,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23601#pullrequestreview-180568117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd76e20d-d910-499b-892c-d4724bcf01bb",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "why not `str` like on the line above?",
        "createdAt" : "2018-11-15T13:13:11Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "11a87f98-d0ea-4d18-923d-c0609f1f27d7",
        "parentId" : "bd76e20d-d910-499b-892c-d4724bcf01bb",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This was to support quoting the periods in the array repr but not in the Series. If we want to quote in both places (or not) then we can have just a single one.\r\n\r\nPeriodIndex does quote.",
        "createdAt" : "2018-11-15T14:18:12Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5edcfbd9-60e0-4635-8abe-1c91756a1034",
        "parentId" : "bd76e20d-d910-499b-892c-d4724bcf01bb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see my comment above",
        "createdAt" : "2018-11-18T22:23:33Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "58de36c1-8a02-4f50-b2c7-d7be28bf4091",
        "parentId" : "bd76e20d-d910-499b-892c-d4724bcf01bb",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "https://github.com/pandas-dev/pandas/pull/23601#issuecomment-439882626",
        "createdAt" : "2018-11-20T14:48:33Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "23e45955-87d4-4b5a-b844-8236694dd4f0",
        "parentId" : "bd76e20d-d910-499b-892c-d4724bcf01bb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this the same as what DatetimeArray / Timedeltarray will do? ",
        "createdAt" : "2018-12-02T16:34:57Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ad113b374641b6eb1f0cb7b28d7d38e24099902",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +345,349 @@        if boxed:\n            return str\n        return \"'{}'\".format\n\n    def __setitem__("
  },
  {
    "id" : "decb77f9-e3ca-46d1-8b1a-9389b0d238d0",
    "prId" : 24128,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24128#pullrequestreview-182941176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "858acef6-4141-4e89-a4c0-3ca296b18191",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "add to docstring. Note that the default is `NaT`",
        "createdAt" : "2018-12-08T02:27:14Z",
        "updatedAt" : "2018-12-26T00:16:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "56f3eaa5-c1f3-4ed3-896f-fab1677e94a1",
        "parentId" : "858acef6-4141-4e89-a4c0-3ca296b18191",
        "authorId" : "bf1e9aa3-448f-4bfb-ae6e-ae0babf94b7c",
        "body" : "added",
        "createdAt" : "2018-12-08T11:17:19Z",
        "updatedAt" : "2018-12-26T00:16:53Z",
        "lastEditedBy" : "bf1e9aa3-448f-4bfb-ae6e-ae0babf94b7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a03cbf5e4afe65c8b6fe8a1eb1eee517d0fc5913",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +454,458 @@    # --------------------------------------------------------------------\n\n    def shift(self, periods=1, fill_value=None):\n        \"\"\"\n        Shift values by desired number."
  },
  {
    "id" : "4b324a14-ebad-4ec6-8393-dd37b0f32502",
    "prId" : 24128,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24128#pullrequestreview-187802952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c38e8f96-7bb7-42b4-aca4-e5511e171b45",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "need a blank line here",
        "createdAt" : "2018-12-25T17:30:15Z",
        "updatedAt" : "2018-12-26T00:16:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a03cbf5e4afe65c8b6fe8a1eb1eee517d0fc5913",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +470,474 @@        fill_value : optional, default NaT\n\n            .. versionadded:: 0.24.0\n\n        Returns"
  },
  {
    "id" : "736def24-afcd-487f-beaf-2014d84cf0f0",
    "prId" : 24283,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24283#pullrequestreview-185388535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00c418c0-652f-487a-adb2-efa53f4fa57c",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "`PeriodArray.__setitem__` is being removed, so I was hoping to not change these.",
        "createdAt" : "2018-12-16T13:53:30Z",
        "updatedAt" : "2018-12-16T13:53:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a72f6ce76a3bde7fcc9f49578d41f9a1d7e120da",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +372,376 @@            value = period_array(value)\n\n            if self.freqstr != value.freqstr:\n                _raise_on_incompatible(self, value)\n"
  },
  {
    "id" : "649537fc-99da-4739-899d-402fdd206369",
    "prId" : 24364,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24364#pullrequestreview-186788632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d61dcb7b-321c-4b10-8a0e-1483674961a7",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not from #24024, but @jreback  commented there asking for this change.",
        "createdAt" : "2018-12-19T23:04:16Z",
        "updatedAt" : "2018-12-20T00:45:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc3a301a04073e8d34eeea68c895e7313a5f9b27",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +984,988 @@    \"\"\"\n    if data.dtype != np.dtype('M8[ns]'):\n        raise ValueError('Wrong dtype: {dtype}'.format(dtype=data.dtype))\n\n    if freq is None:"
  },
  {
    "id" : "c85d88da-39af-4ad9-a09d-220e52da92b3",
    "prId" : 25526,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25526#pullrequestreview-212612677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "409a3e34-aefa-4dc8-8e06-286376288e58",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so maybe a Raises section showing IncompatibleFrequecy",
        "createdAt" : "2019-03-10T17:21:17Z",
        "updatedAt" : "2019-03-10T17:21:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "895b13d13b15e4a135249076c2ffdab86cd8e5af",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +108,112 @@        A PeriodDtype instance from which to extract a `freq`. If both\n        `freq` and `dtype` are specified, then the frequencies must match.\n    copy : bool, default False\n        Whether to copy the ordinals before storing.\n"
  },
  {
    "id" : "b08f386f-6a23-439a-9de0-76be3edbd021",
    "prId" : 25789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25789#pullrequestreview-216438512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a94bbd57-44ee-4d06-a197-f6cb5f59ee01",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Comment explains it, but just to clarify this PR doesn't necessarily check that comments are correct as much as gets them to pass linting. I figure it makes sense to validate the comments themselves when moving over to Py3 syntax, so this was the quick way of getting this to pass",
        "createdAt" : "2019-03-19T21:51:45Z",
        "updatedAt" : "2019-03-19T23:03:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "739bcab3316918638afc19392204f37cf35bb477",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +543,547 @@        # type: (...) -> PeriodArray\n\n        # TODO: ABCIndexClass is a valid type for other but had to be excluded\n        # due to length of Py2 compatability comment; add back in once migrated\n        # to Py3 syntax"
  },
  {
    "id" : "0dd9e6b6-fe6f-45e7-a769-278e97f8f1f2",
    "prId" : 25829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25829#pullrequestreview-220834092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87e02750-16dc-4998-b4bf-46f4105d4a24",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Any reason for removing the type for ndarray?",
        "createdAt" : "2019-03-28T05:25:33Z",
        "updatedAt" : "2019-03-28T13:26:36Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "3c81a9cd-b0c7-4ab6-929c-b847eb3a1c3b",
        "parentId" : "87e02750-16dc-4998-b4bf-46f4105d4a24",
        "authorId" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "body" : "During my testing at the time (before you added mypy.ini and the rest of the type checking framework to the project), mypy was throwing an error that suggested that ndarrays couldn't take a subscript, so I dropped it. I probably had something in my testing environment set up incorrectly (or maybe more strictly, not sure), because it doesn't throw that error with the current mypy.ini minus the blacklist. Will add it back.",
        "createdAt" : "2019-03-28T12:47:15Z",
        "updatedAt" : "2019-03-28T13:26:36Z",
        "lastEditedBy" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "tags" : [
        ]
      },
      {
        "id" : "b4c10bb7-0472-495b-9c44-b8302cfd9ca0",
        "parentId" : "87e02750-16dc-4998-b4bf-46f4105d4a24",
        "authorId" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "body" : "Wait, it wasn't mypy. `code_checks doctests` throws \r\n```\r\n...pandas/core/arrays/period.py\", line 545, in PeriodArray\r\n    other: Union[ExtensionArray, np.ndarray[int], ABCIndexClass],\r\nTypeError: 'type' object is not subscriptable\r\n```",
        "createdAt" : "2019-03-28T13:07:09Z",
        "updatedAt" : "2019-03-28T13:26:36Z",
        "lastEditedBy" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "tags" : [
        ]
      },
      {
        "id" : "3d28abc6-f4da-4b31-852c-6a465e0d0eb1",
        "parentId" : "87e02750-16dc-4998-b4bf-46f4105d4a24",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Gotcha. Kind of strange this throws an error now but not before. Something to revisit later",
        "createdAt" : "2019-03-30T19:21:01Z",
        "updatedAt" : "2019-03-30T19:21:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "23aba8a5d19246b88c60c9fb0677036ad72488c3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +543,547 @@    def _addsub_int_array(\n            self,\n            other: Union[ExtensionArray, np.ndarray, ABCIndexClass],\n            op: Callable[[Any], Any]\n    ) -> ABCPeriodArray:"
  },
  {
    "id" : "7cbb0d19-5ed6-4a7a-853a-08392664e8b1",
    "prId" : 26071,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26071#pullrequestreview-231478887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7ac5c74-59ce-459d-9c68-997509cb98ec",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think want to refactor this entire condition to look as follows:\r\n\r\n```python\r\ndtype = None  # type: Optional[PeriodDtype]\r\nif freq:\r\n    dtype = PeriodDtype(freq)\r\n```\r\n\r\nFWIW this is actually called out as one of the rationales for Variable Annotations in PEP 526:\r\n\r\nhttps://www.python.org/dev/peps/pep-0526/#rationale\r\n\r\nSince we are still supporting 3.5 though can't necessarily use the syntax described there",
        "createdAt" : "2019-04-18T20:28:27Z",
        "updatedAt" : "2019-04-29T18:59:59Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d07167e6-bd4f-4895-ac59-11cb9a67292b",
        "parentId" : "e7ac5c74-59ce-459d-9c68-997509cb98ec",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Actually I think OK to ignore my comment above. We might want to revisit after dropping Py35 support if we can add a variable annotation but don't think worth changing code around now if this works for the type checker",
        "createdAt" : "2019-04-18T23:10:26Z",
        "updatedAt" : "2019-04-29T18:59:59Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a0b3af39-63ea-4037-9715-7e202435949b",
        "parentId" : "e7ac5c74-59ce-459d-9c68-997509cb98ec",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here on why this is needed",
        "createdAt" : "2019-04-28T17:45:16Z",
        "updatedAt" : "2019-04-29T19:00:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f840e9da2ed3898dd78baace69b49e6db1048c6",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +782,786 @@    if freq:\n        # typed Optional here because the else block below assigns None\n        dtype = PeriodDtype(freq)  # type: Optional[PeriodDtype]\n    else:\n        dtype = None"
  }
]