[
  {
    "id" : "dc61abfb-f31b-4f82-be25-7c1a328ddb8d",
    "prId" : 21798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21798#pullrequestreview-135213204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08c6046f-0c26-4e13-8d86-5d1f543b8407",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in the future can you add some comments / doc-string here",
        "createdAt" : "2018-07-07T19:59:40Z",
        "updatedAt" : "2018-07-07T20:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "759ebc28233092ae55d6f30ab0e620c648272b19",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +37,41 @@\ndef _period_array_cmp(opname, cls):\n    \"\"\"\n    Wrap comparison operations to convert Period-like to PeriodDtype\n    \"\"\""
  },
  {
    "id" : "a7920da3-0bba-41f7-9baf-7e13c98b9aed",
    "prId" : 21798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21798#pullrequestreview-135213204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3436b59e-9a2c-4468-aebc-edeea9bdd2a6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this use ExtensionOpsMixin ?",
        "createdAt" : "2018-07-07T20:00:53Z",
        "updatedAt" : "2018-07-07T20:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "759ebc28233092ae55d6f30ab0e620c648272b19",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +302,306 @@                                               freqstr=self.freqstr))\n\n    @classmethod\n    def _add_comparison_methods(cls):\n        \"\"\" add in comparison methods \"\"\""
  },
  {
    "id" : "ce8efe3b-8954-43f1-ba33-8404dec9e1d0",
    "prId" : 21815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21815#pullrequestreview-135242101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "268d12d8-a43c-40ce-a525-f71626b3db66",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "maybe add a todo comment to convert this to init once the Mixin is converted to proper array",
        "createdAt" : "2018-07-08T18:58:48Z",
        "updatedAt" : "2018-07-08T18:59:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9358611e0cf47b231bdd0f6cbeeef4c73302eb",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +116,120 @@    _attributes = [\"freq\"]\n\n    def __new__(cls, values, freq=None, **kwargs):\n        if is_period_dtype(values):\n            # PeriodArray, PeriodIndex"
  },
  {
    "id" : "7d028ec3-2da1-42e1-bd7f-acd1307cb1f8",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3f79618-60b2-4d4d-a0be-d9b58920c42b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "minor nit on using privatized cython functions here (later PR)",
        "createdAt" : "2018-07-11T00:00:23Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +9,13 @@from pandas._libs.tslibs.period import (\n    Period, IncompatibleFrequency, DIFFERENT_FREQ_INDEX,\n    get_period_field_arr, period_asfreq_arr, _quarter_to_myear)\nfrom pandas._libs.tslibs import period as libperiod\nfrom pandas._libs.tslibs.timedeltas import delta_to_nanoseconds"
  },
  {
    "id" : "52b3b2ce-fe39-4ca5-8005-50e8e883a964",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41c3a54b-1503-49f5-8d31-e75e6b06151f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future pls add doc-string",
        "createdAt" : "2018-07-11T00:00:35Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +162,166 @@\n    @classmethod\n    def _generate_range(cls, start, end, periods, freq, fields):\n        if freq is not None:\n            freq = Period._maybe_convert_freq(freq)"
  },
  {
    "id" : "dc4dade8-2d2b-40fe-8b6b-a13e3f961e2c",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78d05486-6dda-45ff-8cda-e1b36a014a84",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future doc-string & comments",
        "createdAt" : "2018-07-11T00:00:50Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +400,404 @@\ndef _get_ordinal_range(start, end, periods, freq, mult=1):\n    if com._count_not_none(start, end, periods) != 2:\n        raise ValueError('Of the three parameters: start, end, and periods, '\n                         'exactly two must be specified')"
  },
  {
    "id" : "d8dedc2c-7d6a-430c-8b59-0ff896e06757",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f31ab383-0dd1-44fb-bdd0-21f70910244a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future doc-string & comments",
        "createdAt" : "2018-07-11T00:01:02Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +444,448 @@\ndef _range_from_fields(year=None, month=None, quarter=None, day=None,\n                       hour=None, minute=None, second=None, freq=None):\n    if hour is None:\n        hour = 0"
  },
  {
    "id" : "5c3b8dcd-e1a9-48e2-a472-4b36772c8e14",
    "prId" : 21845,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21845#pullrequestreview-136051889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea81fe24-f680-465d-9d81-503e2f771f30",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doc-string ",
        "createdAt" : "2018-07-11T00:01:10Z",
        "updatedAt" : "2018-07-11T02:40:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f93c21a0a7cb6633eef5e24fc4dae2b142a653",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +480,484 @@\n\ndef _make_field_arrays(*fields):\n    length = None\n    for x in fields:"
  },
  {
    "id" : "78ea0cdd-d52e-4590-9b15-07e92fc1ce0d",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-159752806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbca4bd-483c-4d91-a183-452cc9f70da2",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe mention what this `freq` is (physically)? An Offset subclass ?",
        "createdAt" : "2018-09-28T07:53:44Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +146,150 @@    called \"ordinals\" and represent some kind of offset from a base.\n\n    The `freq` indicates the span covered by each element of the array.\n    All elements in the PeriodArray have the same `freq`.\n"
  },
  {
    "id" : "09e35ecb-50c9-4a23-9986-7918ca2249cb",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164131978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "087d1953-c2a6-4f18-928b-4e91a69f7917",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is temporary no? (once DatetimeArray is done as well, we don't have this complex inheritance anymore?)",
        "createdAt" : "2018-10-12T08:30:30Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 732,
    "diffHunk" : "@@ -1,1 +745,749 @@        # We have DatetimeLikeArrayMixin ->\n        #     super(...), which ends up being... DatetimeIndexOpsMixin?\n        # this is complicated.\n        # need a pandas_astype(arr, dtype).\n        from pandas import Categorical"
  },
  {
    "id" : "a03445f8-0e06-422d-bbcc-6112fd35fca7",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166557710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we also accept strings here? Or have a separate function for that (something like `to_period` similar as we have `to_datetime`)",
        "createdAt" : "2018-10-12T08:33:53Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "cb15181e-4c0c-4a71-913b-31b617f2b8dc",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should prob have a separate function (there is already an issue for this). as you get into cases where you can have formatting, eg.. ``2012Q1`` and provide fromat strings.",
        "createdAt" : "2018-10-19T12:39:04Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7838de12-4be9-4939-b25f-0e3b4b9a1e38",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "though would not be averse to actually calling ``to_period`` here with a default format on an inferred string type.",
        "createdAt" : "2018-10-19T12:39:47Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca346285-e123-4e1c-a77c-7b7e986e8526",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In any case, adding the ability of parsing strings is out of scope for this PR I would say, so we can discuss later where to add it.",
        "createdAt" : "2018-10-19T14:04:55Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4c210601-d45d-4e70-bf22-178eb8583211",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This already works. I'll add an example.\r\n\r\n```\r\nIn [6]: pd.core.arrays.period_array(['2012Q1', '2013Q1'], freq='Q')\r\nOut[6]:\r\n<PeriodArray>\r\n['2012Q1', '2013Q1']\r\nLength: 2, dtype: period[Q-DEC]\r\n```\r\n\r\nI'm not sure what's required for `freq` to be inferred correctly, but `libperiod.extract_freq` and `libperiod.extract_ordinals` are doing all the heavy lifting here.",
        "createdAt" : "2018-10-19T14:38:31Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "106dd5c8-fd9e-45ef-b62a-f9ff27f682e8",
        "parentId" : "2ec9a6eb-9d48-4552-945f-348583b2724e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, cool, didn't know that :) \r\n(it's of course limited to standard formatted strings I suppose?)",
        "createdAt" : "2018-10-19T14:45:19Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 884,
    "diffHunk" : "@@ -1,1 +895,899 @@    # type: (Sequence[Optional[Period]], Optional[Tick]) -> PeriodArray\n    \"\"\"\n    Construct a new PeriodArray from a sequence of Period scalars.\n\n    Parameters"
  },
  {
    "id" : "36c53321-e08f-432b-82f1-6210116b421c",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164469537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c06eeb38-6a2a-4131-a7d8-8e22e1ee0366",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "docstring update?",
        "createdAt" : "2018-10-13T17:05:33Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 713,
    "diffHunk" : "@@ -1,1 +726,730 @@    def repeat(self, repeats, *args, **kwargs):\n        \"\"\"\n        Repeat elements of a Categorical.\n\n        See also"
  },
  {
    "id" : "dfd90678-c911-47a7-8d58-05b69728a9a1",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164469568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae65869-2e1a-4023-9567-01fff05fcc74",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`return self._isnan`",
        "createdAt" : "2018-10-13T17:06:41Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 434,
    "diffHunk" : "@@ -1,1 +404,408 @@\n    def isna(self):\n        return self._data == iNaT\n\n    def fillna(self, value=None, method=None, limit=None):"
  },
  {
    "id" : "29f6c5e0-6cf7-4ce9-9066-b800241d700f",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-164484438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dcc1584-cb97-4eee-95f9-5ddcf630ab2b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "If fromordinals became simplenew, wouldn’t this be valid for all 3 datetimelike?",
        "createdAt" : "2018-10-14T04:33:26Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 469,
    "diffHunk" : "@@ -1,1 +439,443 @@        else:\n            new_values = self.copy()\n        return new_values\n\n    def copy(self, deep=False):"
  },
  {
    "id" : "dcba376b-d6cc-496e-8692-81feab3b8f21",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166118528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce40f776-ec52-4e3d-bc32-0a9f726e7d98",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Same question as on other PR: is this needed? Where is it used? (in any case not in this file)",
        "createdAt" : "2018-10-15T07:32:32Z",
        "updatedAt" : "2018-10-25T13:49:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "755dabc6-36f5-490e-9c62-1a84d1c9655d",
        "parentId" : "ce40f776-ec52-4e3d-bc32-0a9f726e7d98",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would just add these",
        "createdAt" : "2018-10-18T14:27:35Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 711,
    "diffHunk" : "@@ -1,1 +724,728 @@                                            freqstr=self.freqstr))\n\n    def repeat(self, repeats, *args, **kwargs):\n        \"\"\"\n        Repeat elements of a Categorical."
  },
  {
    "id" : "3baead80-4760-4e15-9076-2843fabb3298",
    "prId" : 22862,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22862#pullrequestreview-166153502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There are a few places in this file where `asi8` gets calculated as `asi8 = self._ndarray_values.view('i8')`, which can be updated. \r\n\r\nFurther, `asi8` gets inherited from datetimelike as `self.values.view('i8')` (and `self.values` itself is already `self._data.view(np.ndarray)`), which does not seem to be necessary for PeriodArray? If we keep the `asi8` property, I would overwrite it here to more directly return the ordinals, that will be clearer in the code I think.",
        "createdAt" : "2018-10-18T12:40:20Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "833beeba-065e-4908-a0ac-a1441327f23f",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think this was an attempt to remove `PeriodArray.asi8`. But, I suppose that's a useful property (unlike `.base` and `.flags`).",
        "createdAt" : "2018-10-18T14:34:47Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fad2d749-78ef-4107-a1ed-d4b385a458cd",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "To be clear the choice is between\r\n\r\n1. Implementing `PeriodArray.view` and re-using `DatetimelikeArrayMixin.asi8`\r\n2. Implementing `PeriodArray.asi8` as `return self._ndarary_values`.\r\n\r\nI think 2 is better.",
        "createdAt" : "2018-10-18T14:46:02Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a922e5b1-549f-4d57-837f-9bfbad57079c",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Agreed\r\n\r\n(or as `return self._data`, one level of redirection less)",
        "createdAt" : "2018-10-18T14:48:16Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9feebad8-066f-4874-bd2e-5807f5579b4f",
        "parentId" : "cd1bf128-f8df-4fcc-8949-d93a6bcf957d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "-1 on `self._data`.  I think `asi8` is the most explicit option",
        "createdAt" : "2018-10-18T15:23:06Z",
        "updatedAt" : "2018-10-25T13:49:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4065bdb2505d219c0bb0d32e55cd65897d550d7c",
    "line" : 393,
    "diffHunk" : "@@ -1,1 +363,367 @@                raise IncompatibleFrequency(msg)\n\n            value = value.asi8\n        elif isinstance(value, Period):\n"
  },
  {
    "id" : "a9e6c59b-05f2-4a5c-91bc-6a7276e425bd",
    "prId" : 22961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22961#pullrequestreview-161365898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b2b9db4-7dfc-4c2c-996a-a105791d58c6",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Probably a warning, right? Maybe push the one that's in `DatetimeIndex.to_period` down here? That can be a separate PR though, since there may be other places calling PeriodArray with a tz-aware `values`.",
        "createdAt" : "2018-10-03T20:59:59Z",
        "updatedAt" : "2018-10-05T03:31:22Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "9ddc7ac4-c3b4-4189-8b9e-d5f9eca01fd8",
        "parentId" : "1b2b9db4-7dfc-4c2c-996a-a105791d58c6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think so, yah.\r\n\r\nIf it doesn't mess up your plans too much, after this I'd like to do a PR cleaning up some of the duplicated/convoluted constructors in (Period|Datetime|Timedelta)(Index|ArrayMixin).  I think making some helper functions etc before the bigger refactor would help focus attention during the latter.",
        "createdAt" : "2018-10-03T21:16:01Z",
        "updatedAt" : "2018-10-05T03:31:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "927e4bdc4e258ca0d2015451a9138309ce2ccc90",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +130,134 @@\n        elif is_datetime64_dtype(values):\n            # TODO: what if it has tz?\n            values = dt64arr_to_periodarr(values, freq)\n"
  },
  {
    "id" : "f9765280-2323-48a4-b1bf-d3a2208e8a6d",
    "prId" : 22961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22961#pullrequestreview-162260904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are you able to put these at the top?",
        "createdAt" : "2018-10-06T15:21:04Z",
        "updatedAt" : "2018-10-06T15:24:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c97649f-62dd-4eac-94a2-ad4efeb46df8",
        "parentId" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think that's fragile.  This mirrors the existing runtime import in the PeriodIndex method.",
        "createdAt" : "2018-10-06T15:35:27Z",
        "updatedAt" : "2018-10-06T15:35:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9098921e-5616-4ae4-b9eb-9bc708e5ea35",
        "parentId" : "a96aceb7-3aaf-4e8a-8fa4-1457c9b140c2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine, yeah definitly appreciate making the import hierarchy nicer",
        "createdAt" : "2018-10-06T15:39:21Z",
        "updatedAt" : "2018-10-06T15:39:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "927e4bdc4e258ca0d2015451a9138309ce2ccc90",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +295,299 @@        DatetimeArray/Index\n        \"\"\"\n        from pandas.core.arrays.datetimes import DatetimeArrayMixin\n\n        how = libperiod._validate_end_alias(how)"
  },
  {
    "id" : "56d1bbac-4f53-4e81-bf8d-759e8335eb6f",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-163146007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "229efc4b-f4da-44c1-8744-c9a0da818d24",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Looking at this and some of the other methods in the datetime/timedelta/period array mixins, I think some de-duplication can be done on the next pass",
        "createdAt" : "2018-10-10T00:17:35Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +404,408 @@            return self._shallow_copy(new_values)\n        else:  # pragma: no cover\n            raise TypeError(type(other).__name__)\n\n    @deprecate_kwarg(old_arg_name='n', new_arg_name='periods')"
  },
  {
    "id" : "447f69cd-bb0c-447e-b935-31a01a9b3cfd",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-164506031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9543baf-4ebd-4b57-b185-f78ff10065b9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add a doc string here",
        "createdAt" : "2018-10-14T16:53:59Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +501,505 @@        IncompatibleFrequency\n        \"\"\"\n        assert isinstance(self.freq, Tick)  # checked by calling function\n        own_offset = frequencies.to_offset(self.freq.rule_code)\n        base_nanos = delta_to_nanoseconds(own_offset)"
  },
  {
    "id" : "c250985f-cd09-47b2-8994-119ab51b9292",
    "prId" : 23031,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23031#pullrequestreview-164506044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8620127c-cfe7-4733-86b8-fde26eb1517a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u comments these cases a bit",
        "createdAt" : "2018-10-14T16:54:18Z",
        "updatedAt" : "2018-10-14T18:30:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed50b9f92c6f04c1fba452a27a76b26c2e8231c1",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +508,512 @@            nanos = delta_to_nanoseconds(other)\n\n        elif isinstance(other, np.ndarray):\n            # numpy timedelta64 array; all entries must be compatible\n            assert other.dtype.kind == 'm'"
  },
  {
    "id" : "86473e11-9544-46ed-8dbc-f956a3c1a031",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-163874255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "558d4ab7-7be2-42a3-8105-fc02ac9189f8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Ideally I'd like to get rid of `_from_ordinals` and have `_simple_new` be the lowest-level constructor like with all the other classes.  This turns out to be infeasible ATM because a bunch of parent class methods operate on `.values` instead of `._ndarray_values` and end up passing object-dtype to `_shallow_copy`.  This is being split off of a branch that is trying to avoid that.",
        "createdAt" : "2018-10-11T15:22:24Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +157,161 @@\n    @classmethod\n    def _from_ordinals(cls, values, freq=None, **kwargs):\n        \"\"\"\n        Values should be int ordinals"
  },
  {
    "id" : "6f53b1d7-dd2d-416d-93a3-476ba397cd57",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-164075168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "was this causing bugs that kwargs was not passed?",
        "createdAt" : "2018-10-11T15:34:20Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6bccf616-83ec-442b-bfc5-bbb6cadced47",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is necessary in order to allow `PeriodIndex` to inherit `_simple_new` from `PeriodArrayMixin`.\r\n\r\nThe PeriodIndex constructors in particular (but also DatetimeIndex and TimedeltaIndex) are really messy and complicated.  Inheriting methods and deleting as much as possible makes it easier for me to simplify them, even if some of that will end up getting copy/pasted down the road if/when inheritance is replaced.",
        "createdAt" : "2018-10-11T17:29:17Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d9a77db7-0b56-4d3b-9fc5-40c8bd6fd9b5",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you then move the implementation and share it by calling the other class instead of inheriting? ",
        "createdAt" : "2018-10-11T17:46:01Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fa1ae481-a926-46aa-8cef-72a20bf4d178",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Do you mean moving the `_from_ordinals` implementation?  We need both because the Index version sets self.name and calls _reset_identity",
        "createdAt" : "2018-10-11T17:59:52Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c3c386ab-0a78-48e6-b70d-922940d0482b",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I meant in PeriodIndex._simple_new calling PeriodArrayMixin._simple_new, similar as you did in one of the previous PRs (didn't look at the code, so don't know if that is possible in this case)",
        "createdAt" : "2018-10-11T18:07:20Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6bad99e6-4abf-4f39-b280-6ced1fde483d",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think I get what you're saying, will give it a shot",
        "createdAt" : "2018-10-11T18:41:19Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "595204df-c30f-4577-b3a1-17944a8d3d41",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Did anything come of this, one way or the other?",
        "createdAt" : "2018-10-12T01:35:46Z",
        "updatedAt" : "2018-10-12T01:37:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fc362620-941b-458c-8b3b-28944ea6ee93",
        "parentId" : "19eda419-a397-43e2-ad0c-ff193e71f13c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.  In an earlier commit I deleted PeriodIndex._simple_new and retained PeriodIndex._from_ordinals.  Now that has been reversed, and its non-trivially nicer.",
        "createdAt" : "2018-10-12T01:56:56Z",
        "updatedAt" : "2018-10-12T01:56:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +154,158 @@            return cls(values, freq=freq, **kwargs)\n\n        return cls._from_ordinals(values, freq=freq, **kwargs)\n\n    @classmethod"
  },
  {
    "id" : "1dba7a8f-d76e-4243-8964-15306fe3e69a",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-164302623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why do you want to share this? Once we actually don't inherit it anymore, we will need to add it back to PeriodIndex",
        "createdAt" : "2018-10-11T15:35:27Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "bf57541c-0bc1-4acf-8988-11b199e407bc",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think the signature should match across index classes, and hopefully the implementation can be shared.",
        "createdAt" : "2018-10-12T01:37:24Z",
        "updatedAt" : "2018-10-12T01:38:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "d0ed1d58-e055-4754-ad98-502f7a5a79eb",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But this one is about `_from_ordinals`, which will not be shared across index classes as it is Period-specific",
        "createdAt" : "2018-10-12T07:48:18Z",
        "updatedAt" : "2018-10-12T07:48:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "898a55c1-acc9-4963-9c52-39c7ad9a6784",
        "parentId" : "cd6a0960-85a0-490a-b39b-962f2cae6b0c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think we're moving towards getting rid of `_from_ordinals` in order to make PeriodIndex work like all the others.  To do that, we need to simplify _simple_new, which means fixing the places where inappropriate `values` get passed to it, i.e. #23095.",
        "createdAt" : "2018-10-12T15:48:06Z",
        "updatedAt" : "2018-10-12T15:48:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +163,167 @@        \"\"\"\n        # **kwargs are included so that the signature matches PeriodIndex,\n        #  letting us share _simple_new\n\n        values = np.array(values, dtype='int64', copy=False)"
  }
]