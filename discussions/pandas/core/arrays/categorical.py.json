[
  {
    "id" : "69cbe633-3b10-4080-8210-35361f6aa20a",
    "prId" : 19268,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19268#pullrequestreview-90190408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d47dbe6a-3156-468d-9bd7-8b52ca9212f1",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "By having our internal arrays inherit from `PandasObject`, they also get a `_constructor` method. So we should either make sure this is never used (apart from in methods inside the array itself), or add this to the interface (my preference would be the first)",
        "createdAt" : "2018-01-19T09:47:02Z",
        "updatedAt" : "2018-02-01T20:55:34Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "98c9a0c7-475b-4bf0-839d-2271c4265c01",
        "parentId" : "d47dbe6a-3156-468d-9bd7-8b52ca9212f1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah, the methods in PandasObject needs to be ABC in the ExtensionArray ",
        "createdAt" : "2018-01-19T11:20:19Z",
        "updatedAt" : "2018-02-01T20:55:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f38f40d7-e3ac-4ae0-9d0d-0b86a882f2b2",
        "parentId" : "d47dbe6a-3156-468d-9bd7-8b52ca9212f1",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "On the other hand, I don't think all methods/attributes of PandasObject should be added to the public ExtensionArray (to keep those internal + to not clutter the ExtensionArray API)",
        "createdAt" : "2018-01-19T12:35:02Z",
        "updatedAt" : "2018-02-01T20:55:34Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fb8eea74-3b61-4947-8435-6fd51c08b189",
        "parentId" : "d47dbe6a-3156-468d-9bd7-8b52ca9212f1",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "FYI, I'm consistently testing these changes against\r\n\r\n1. An implementation of `IntervalArary`: https://github.com/TomAugspurger/pandas/compare/pandas-array-interface-3...TomAugspurger:pandas-array-upstream+interval?expand=1\r\n2. A branch on pandas-ip: https://github.com/ContinuumIO/pandas-ip/tree/pandas-array-upstream-compat\r\n\r\nNeither inherit from `PandasObject` at the moment, so we're OK.",
        "createdAt" : "2018-01-19T17:45:13Z",
        "updatedAt" : "2018-02-01T20:55:34Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "34134f2f9633cca26b4efd382475927c1eb3fe5a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +151,155 @@\n\nclass Categorical(ExtensionArray, PandasObject):\n    \"\"\"\n    Represents a categorical variable in classic R / S-plus fashion"
  },
  {
    "id" : "d17b4313-81b6-443d-8098-35316e6e5316",
    "prId" : 19269,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19269#pullrequestreview-89188073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10261b04-23a5-4f80-95ee-4aa681a0214e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Note: I changed this from `except Exception` for the linter.",
        "createdAt" : "2018-01-16T16:07:34Z",
        "updatedAt" : "2018-01-18T11:54:47Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b0812060-0063-45c3-9e78-bfdd3fd04db9",
        "parentId" : "10261b04-23a5-4f80-95ee-4aa681a0214e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "+1",
        "createdAt" : "2018-01-16T17:51:21Z",
        "updatedAt" : "2018-01-18T11:54:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70da106b38afefe9d31824f870017ab1d9e8aa20",
    "line" : 558,
    "diffHunk" : "@@ -1,1 +556,560 @@        try:\n            codes = np.asarray(codes, np.int64)\n        except (ValueError, TypeError):\n            raise ValueError(\n                \"codes need to be convertible to an arrays of integers\")"
  },
  {
    "id" : "7312ef5d-d905-4b90-abaf-18773a7359a3",
    "prId" : 19684,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19684#pullrequestreview-97192117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9d9348b-ee72-45c7-91e5-22094d6e5f36",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Note, I added this keyword since it's *possible* have a tuple / list for a `category`.",
        "createdAt" : "2018-02-13T20:40:59Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3c2a1808-9646-42b7-ab05-303971a1e2da",
        "parentId" : "b9d9348b-ee72-45c7-91e5-22094d6e5f36",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Do we need to add a test for this? (I mean filling a categorical with such categories, so the purpose of `validate_scalar_dict_value=False` is exercised)",
        "createdAt" : "2018-02-16T14:22:10Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc1f9606204e126723867024fbf35f953dcf31c7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1611,1615 @@        filled : Categorical with NA/NaN filled\n        \"\"\"\n        value, method = validate_fillna_kwargs(\n            value, method, validate_scalar_dict_value=False\n        )"
  }
]