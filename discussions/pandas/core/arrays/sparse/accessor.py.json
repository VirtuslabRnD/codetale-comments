[
  {
    "id" : "f7403123-a9d7-4192-9473-7da317c72781",
    "prId" : 32825,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32825#pullrequestreview-377657269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "010012af-b336-4e9a-9c28-cbd452295fdd",
        "parentId" : null,
        "authorId" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "body" : "FWIW, also tried with a generator here to avoid pre-allocating all the arrays, but it doesn't really matter. Most of the remaining run time is in `DataFrame._from_arrays`.",
        "createdAt" : "2020-03-19T12:06:29Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d750eb45f80902b87a8bfb0ebb3a8fe025146c60",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +248,252 @@            idx = IntIndex(n_rows, indices[sl], check_integrity=False)\n            arr = SparseArray._simple_new(array_data[sl], idx, dtype)\n            arrays.append(arr)\n        return DataFrame._from_arrays(\n            arrays, columns=columns, index=index, verify_integrity=False"
  },
  {
    "id" : "7134d745-99cd-4660-a8e7-6bed29775b47",
    "prId" : 32825,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32825#pullrequestreview-377740443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0002e106-fe55-4441-9e97-df2a263d2ace",
        "parentId" : null,
        "authorId" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "body" : "It might be already done in `tocsc`, but that's a scipy implementation detail, and it doesn't really cost much. We need to make sure indices are sorted, since we create `IntIndex` with `check_integrity=False` that used to check for this.",
        "createdAt" : "2020-03-19T12:08:14Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "tags" : [
        ]
      },
      {
        "id" : "241b47f9-141d-476f-a61e-4ceeb82dc05c",
        "parentId" : "0002e106-fe55-4441-9e97-df2a263d2ace",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe add a comment about that inline?",
        "createdAt" : "2020-03-19T13:54:26Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "d750eb45f80902b87a8bfb0ebb3a8fe025146c60",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +238,242 @@        # Indices may already be sorted in scipy in which case this adds\n        # a small overhead.\n        data.sort_indices()\n        indices = data.indices\n        indptr = data.indptr"
  },
  {
    "id" : "df63150a-2eec-408d-9436-da9f77f7b9a4",
    "prId" : 32825,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32825#pullrequestreview-377658428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81d198e8-4465-42c3-9841-c483de7c25f0",
        "parentId" : null,
        "authorId" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "body" : "Could be `tocsc(copy=False)` for newer scipy versions, but the gain in performance is minimal anyway with respect to the total runtime.",
        "createdAt" : "2020-03-19T12:08:53Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d750eb45f80902b87a8bfb0ebb3a8fe025146c60",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +231,235 @@        from pandas._libs.sparse import IntIndex\n\n        data = data.tocsc()\n        index, columns = cls._prep_index(data, index, columns)\n        n_rows, n_columns = data.shape"
  },
  {
    "id" : "0f1b9280-2243-49df-af2f-d4d0524033da",
    "prId" : 32825,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32825#pullrequestreview-378993213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "defcefde-72e7-4283-b4db-a54ae3df943d",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think the problem is that this `_pre_index` doesn't actually return Index objects when columns or index is not None (and passing actual Index objects is required when doing `verify_integrity=False`)",
        "createdAt" : "2020-03-22T10:53:42Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fd79d671-10c9-4585-9e28-37a8526664f2",
        "parentId" : "defcefde-72e7-4283-b4db-a54ae3df943d",
        "authorId" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "body" : "OK, I see. Thanks for confirming that passing duplicate columns names in an Index object is expected to work in `_from_arrays`. Will look into it. Thanks Joris!",
        "createdAt" : "2020-03-22T10:58:42Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "021d01df-a487-48a6-a91d-4a42dce73f5c",
        "tags" : [
        ]
      },
      {
        "id" : "5dddb91e-f0c3-4a58-9c9b-e5a29a753331",
        "parentId" : "defcefde-72e7-4283-b4db-a54ae3df943d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "That seems to be it, as doing `pd.DataFrame.sparse.from_spmatrix(mat, columns=pd.Index(['a', 'a']))` instead of `pd.DataFrame.sparse.from_spmatrix(mat, columns=['a', 'a'])` works. \r\n\r\nYou can add in here a `ensure_index` call on both index and columns. (`from pandas.core.indexes.api import ensure_index`)",
        "createdAt" : "2020-03-22T11:00:59Z",
        "updatedAt" : "2020-03-22T14:12:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "d750eb45f80902b87a8bfb0ebb3a8fe025146c60",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +232,236 @@\n        data = data.tocsc()\n        index, columns = cls._prep_index(data, index, columns)\n        n_rows, n_columns = data.shape\n        # We need to make sure indices are sorted, as we create"
  }
]