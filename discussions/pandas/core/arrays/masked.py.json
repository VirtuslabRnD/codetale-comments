[
  {
    "id" : "f98a7c34-9509-42ab-a1d3-00de130bbfde",
    "prId" : 30789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30789#pullrequestreview-339394992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34b04ffc-7916-46ee-9ba2-5650b2b4637c",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I suspect IntegerArray has some `isna().any()` that can be updated to use this property.",
        "createdAt" : "2020-01-07T17:39:48Z",
        "updatedAt" : "2020-01-08T07:20:16Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86a6f11f4b5e2d64533c44bd23a5ea082f08bd4",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +153,157 @@\n    @property\n    def _hasna(self) -> bool:\n        # Note: this is expensive right now! The hope is that we can\n        # make this faster by having an optional mask, but not have to change"
  },
  {
    "id" : "abbe9926-8d2f-4508-84b2-c5fe27c72c2a",
    "prId" : 30789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30789#pullrequestreview-339402854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e35f5781-d369-4727-b81f-21f2a96d8b59",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Possibly out of scope, but I see the same optimization issue we had with Categorical. Can you convert `item` to an ndarray before doing this `elif`? Or do you want to keep this as a straight refactor, and do that as a followup?",
        "createdAt" : "2020-01-07T17:41:19Z",
        "updatedAt" : "2020-01-08T07:20:16Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4e5a5898-6ebe-493a-8a96-0260e66e2352",
        "parentId" : "e35f5781-d369-4727-b81f-21f2a96d8b59",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, I also noted that on the PR (https://github.com/pandas-dev/pandas/pull/30747#issuecomment-571278131), I think it is still worth thinking this through if we need a more general \"check\" function (https://github.com/pandas-dev/pandas/issues/30744#issuecomment-571276333, #30738)",
        "createdAt" : "2020-01-07T17:54:21Z",
        "updatedAt" : "2020-01-08T07:20:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86a6f11f4b5e2d64533c44bd23a5ea082f08bd4",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@            return self._data[item]\n\n        elif com.is_bool_indexer(item):\n            item = check_bool_array_indexer(self, item)\n"
  },
  {
    "id" : "0780ffb3-f740-467d-88b1-05e7431603bb",
    "prId" : 30789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30789#pullrequestreview-339399953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80cb61b9-db5c-4d58-9b25-ffc7e5f2a7c0",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "could do _validate_fill_value like DTA/TDA/PA to avoid allowing e.g. NaT here",
        "createdAt" : "2020-01-07T17:48:53Z",
        "updatedAt" : "2020-01-08T07:20:16Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86a6f11f4b5e2d64533c44bd23a5ea082f08bd4",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@        # we always fill with 1 internally\n        # to avoid upcasting\n        data_fill_value = self._internal_fill_value if isna(fill_value) else fill_value\n        result = take(\n            self._data, indexer, fill_value=data_fill_value, allow_fill=allow_fill"
  },
  {
    "id" : "060baf64-a828-4a9e-95aa-ba099c5d20d8",
    "prId" : 30789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30789#pullrequestreview-339864005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87a81ca2-812c-46c0-8058-843a0a68fcda",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "would remove / modify these comments",
        "createdAt" : "2020-01-08T13:34:10Z",
        "updatedAt" : "2020-01-08T13:34:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e86a6f11f4b5e2d64533c44bd23a5ea082f08bd4",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +177,181 @@\n    def take(self, indexer, allow_fill=False, fill_value=None):\n        # we always fill with 1 internally\n        # to avoid upcasting\n        data_fill_value = self._internal_fill_value if isna(fill_value) else fill_value"
  }
]