[
  {
    "id" : "8f64cc87-2990-4f71-ada5-e67b740d7638",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-434663909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fe87188-8edc-4c8c-8046-dcb12659cd71",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can move to a mixin with this being `self._construct_array_type()`?",
        "createdAt" : "2020-05-29T18:29:15Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "44c482ce-b297-4523-b4ae-0cae7a2abab7",
        "parentId" : "7fe87188-8edc-4c8c-8046-dcb12659cd71",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, listed as follow-up item",
        "createdAt" : "2020-06-22T07:34:39Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@        for arr in chunks:\n            data, mask = pyarrow_array_to_numpy_and_mask(arr, dtype=self.type)\n            float_arr = FloatingArray(data.copy(), ~mask, copy=False)\n            results.append(float_arr)\n"
  },
  {
    "id" : "63fec775-b52a-43e8-a3c3-f0005554bd97",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-434663909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "025b3f26-3208-421a-bbc6-25b0d78df99e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Need to think about ops involving a mix of our extension arrays something like\r\n\r\n```python\r\nnp.add(FloatingArray, IntegerArray)\r\n```\r\n\r\nHow feasible is an `__array_ufunc__` on a base class of FloatingArray & IntegerArray?",
        "createdAt" : "2020-05-29T18:33:13Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "11e4684e-059a-4859-9995-8c2d9131574b",
        "parentId" : "025b3f26-3208-421a-bbc6-25b0d78df99e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, right now you get a TypeError when calling numpy ufuncs on a mixture of integer / floating arrays. Noted that as a follow-up item.",
        "createdAt" : "2020-06-22T07:37:52Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +290,294 @@        return cls._from_sequence(scalars, dtype, copy)\n\n    _HANDLED_TYPES = (np.ndarray, numbers.Number)\n\n    def __array_ufunc__(self, ufunc, method: str, *inputs, **kwargs):"
  },
  {
    "id" : "1fe5d489-d58e-4ebe-976d-27234c645689",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-491977980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0306afd-d676-4b64-bdad-428cc6957d6e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is it possible to share this code with the integer implementation? Wondering if we shouldn't have a numeric base class instead of copy / pasting",
        "createdAt" : "2020-05-29T18:36:26Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7ca0c53c-f930-426f-b0b9-f2de4ce7f6fd",
        "parentId" : "f0306afd-d676-4b64-bdad-428cc6957d6e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "to @WillAyd point; it makes sense to just add things that are already not in the super class (or put them there if possible) notw that we have multiple arrays classes that can share; it might be worth creating a NumericArray that is the parent of Integer and Floating (and inherits from BaseMaskedArray)",
        "createdAt" : "2020-09-19T01:38:32Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0c79be8e-3675-41b4-863e-ef6112cc9d2c",
        "parentId" : "f0306afd-d676-4b64-bdad-428cc6957d6e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "And I already answered extensively on this here: https://github.com/pandas-dev/pandas/pull/34307#issuecomment-636829484",
        "createdAt" : "2020-09-19T07:15:35Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@    \"\"\"\n    # if values is floating numpy array, preserve it's dtype\n    if dtype is None and hasattr(values, \"dtype\"):\n        if is_float_dtype(values.dtype):\n            dtype = values.dtype"
  },
  {
    "id" : "ffef1e62-72bc-412d-8274-81879102c787",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-499371121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0febdb4-7d9d-465d-b53d-23cbb4dd2218",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why just float32 & float64? Does NumPy always have Float16 and Float128 available?",
        "createdAt" : "2020-09-18T20:15:19Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "f1d909cf-1e7e-4d36-972a-0f14c7ec4c87",
        "parentId" : "a0febdb4-7d9d-465d-b53d-23cbb4dd2218",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have almost no support for float16 (e.g. no algos support) and float128 is platform specific (IIRC)",
        "createdAt" : "2020-09-30T12:27:59Z",
        "updatedAt" : "2020-09-30T12:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 602,
    "diffHunk" : "@@ -1,1 +600,604 @@\n@register_extension_dtype\nclass Float32Dtype(FloatingDtype):\n    type = np.float32\n    name = \"Float32\""
  },
  {
    "id" : "027ff63f-ffdb-4135-8fd0-a8c8829437d6",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-491977808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c22e430-1b39-438d-b06c-9288d8dea32a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should e in the BaseMaskedArray class",
        "createdAt" : "2020-09-19T01:36:06Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "42d89cb4-94bc-4d0e-9490-7315760c6243",
        "parentId" : "1c22e430-1b39-438d-b06c-9288d8dea32a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> should be in the BaseMaskedArray class\r\n\r\nThere would be nothing else using it, as the Integer/Boolean also have custom implementations. It needs some refactor to be able to share.",
        "createdAt" : "2020-09-19T07:12:21Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@    \"\"\"\n\n    def __repr__(self) -> str:\n        return f\"{self.name}Dtype()\"\n"
  },
  {
    "id" : "b69f7095-e6e6-40d2-9021-30dff8bd5e91",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-491850195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09e93eda-c4e7-48cb-af5d-478a1049f1cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ideally also push to the super-class (looks doable if you use self.construct_array_type",
        "createdAt" : "2020-09-19T01:37:16Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +88,92 @@\n        pyarrow_type = pyarrow.from_numpy_dtype(self.type)\n        if not array.type.equals(pyarrow_type):\n            array = array.cast(pyarrow_type)\n"
  },
  {
    "id" : "2a8c887f-e894-4f15-a2ed-861b8aa8f5c5",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-499371121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09ec1ebb-9a97-48cb-b871-43c6ce472c96",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we actually need to copy?",
        "createdAt" : "2020-09-30T12:24:51Z",
        "updatedAt" : "2020-09-30T12:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@        for arr in chunks:\n            data, mask = pyarrow_array_to_numpy_and_mask(arr, dtype=self.type)\n            float_arr = FloatingArray(data.copy(), ~mask, copy=False)\n            results.append(float_arr)\n"
  },
  {
    "id" : "ecbc64bb-779f-489a-a61e-3ae67e56b901",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-499371121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6c41390-6f7e-4d55-a9b2-afc069bee180",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "elif",
        "createdAt" : "2020-09-30T12:27:02Z",
        "updatedAt" : "2020-09-30T12:31:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +375,379 @@            return self.copy() if copy else self\n        # if we are astyping to another nullable masked dtype, we can fastpath\n        if isinstance(dtype, BaseMaskedDtype):\n            # TODO deal with NaNs\n            data = self._data.astype(dtype.numpy_dtype, copy=copy)"
  },
  {
    "id" : "4d3db081-b022-49ec-b1d5-7c5e6a507fed",
    "prId" : 40268,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40268#pullrequestreview-605793178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04fb65f5-ecf1-470f-9949-302f13b82509",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "could do a cast here since we have all FloatingDtype",
        "createdAt" : "2021-03-06T16:06:59Z",
        "updatedAt" : "2021-03-06T16:06:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "81d554fe-b38c-4d16-b639-dc24416a4de3",
        "parentId" : "04fb65f5-ecf1-470f-9949-302f13b82509",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "just wanted to get the messages up-to-date in this PR to help with https://github.com/MarcoGorelli/pyladies-sprint-March-2021/issues/5 (and subsequent reviews). any fixes to be done separately",
        "createdAt" : "2021-03-06T17:35:30Z",
        "updatedAt" : "2021-03-06T17:35:30Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "e64c5fbb-02e7-4d8c-995a-5314c99a4f4c",
        "parentId" : "04fb65f5-ecf1-470f-9949-302f13b82509",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "works for me",
        "createdAt" : "2021-03-06T22:38:39Z",
        "updatedAt" : "2021-03-06T22:38:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c9a2ac9afa3d786fa2799f23f6dea1b21dcc862",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +79,83 @@            return None\n        np_dtype = np.find_common_type(\n            # error: Item \"ExtensionDtype\" of \"Union[Any, ExtensionDtype]\" has no\n            # attribute \"numpy_dtype\"\n            [t.numpy_dtype for t in dtypes],  # type: ignore[union-attr]"
  }
]