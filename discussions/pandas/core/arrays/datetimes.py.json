[
  {
    "id" : "c56eefe7-f288-4d31-af52-421530393d51",
    "prId" : 21721,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21721#pullrequestreview-134478819",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7a55bd9-a217-407b-a086-0715dfd0021b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Does this only make sense if `tz_convert` requires its input to be sorted?  I don't think it does.",
        "createdAt" : "2018-07-04T20:51:34Z",
        "updatedAt" : "2018-07-05T14:57:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9053bcd7-d595-4aa6-ba22-48b44c35c8f8",
        "parentId" : "f7a55bd9-a217-407b-a086-0715dfd0021b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah not sure why that indexer is there",
        "createdAt" : "2018-07-04T22:54:07Z",
        "updatedAt" : "2018-07-05T14:57:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3072b23b-addc-44fe-b7d8-9c4de9fb7be9",
        "parentId" : "f7a55bd9-a217-407b-a086-0715dfd0021b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "In the next pass I'll see if this can be simplified.",
        "createdAt" : "2018-07-04T23:03:22Z",
        "updatedAt" : "2018-07-05T14:57:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "70e404734aefd82a62d0eecde2633966bbcd9e01",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +124,128 @@        values = self.asi8\n        indexer = values.argsort()\n        result = conversion.tz_convert(values.take(indexer), utc, self.tz)\n\n        n = len(indexer)"
  },
  {
    "id" : "dbc4d883-3fe2-4b39-a114-4baab7494fff",
    "prId" : 21776,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21776#pullrequestreview-135096324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6b5359f-f503-44dc-baed-de5acb160865",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "todo update doc-string",
        "createdAt" : "2018-07-06T17:30:27Z",
        "updatedAt" : "2018-07-06T17:31:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "74ac363810314216a757336d4a9cc9c8d99c1892",
    "line" : 447,
    "diffHunk" : "@@ -1,1 +555,559 @@        \"\"\")\n\n    def to_julian_date(self):\n        \"\"\"\n        Convert DatetimeIndex to float64 ndarray of Julian Dates."
  },
  {
    "id" : "91f833bb-29d3-45f0-a12f-a6adc4a36fac",
    "prId" : 21782,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21782#pullrequestreview-135190341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34e7774d-e542-452e-96af-b7ea9fffbf43",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "changed from existing version on DatetimeIndex where it says \r\n\r\n```\r\n        Returns\r\n        -------\r\n        Timestamps : ndarray\r\n```",
        "createdAt" : "2018-07-07T01:55:57Z",
        "updatedAt" : "2018-07-07T01:55:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "10e5559785dafd7b0c703e680a27344b08655053",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +117,121 @@        Yields\n        -------\n        tstamp : Timestamp\n        \"\"\"\n"
  },
  {
    "id" : "2e4c5a45-ece0-46ad-9a26-087d58bc1392",
    "prId" : 21803,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21803#pullrequestreview-135217487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8120adff-37ca-476a-84b5-00dc9b6e651f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this condition could actually be handled to by ``to_offset`` (future PR) (except for the not-None part)",
        "createdAt" : "2018-07-07T22:35:45Z",
        "updatedAt" : "2018-07-07T23:28:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e5b28f3e-81f1-44e1-9f13-56ab65f2064c",
        "parentId" : "8120adff-37ca-476a-84b5-00dc9b6e651f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, I anticipate _most_ of the existing constructors will be moved from the Index subclasses to the Array subclasses; for now I just need something that works for the cases that are called internally.",
        "createdAt" : "2018-07-07T23:24:41Z",
        "updatedAt" : "2018-07-07T23:28:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "192c9200e690b69e2e3d4cb7f4d9b041854be9e3",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +105,109 @@\n    def __new__(cls, values, freq=None, tz=None):\n        if (freq is not None and not isinstance(freq, DateOffset) and\n                freq != 'infer'):\n            freq = to_offset(freq)"
  },
  {
    "id" : "0b52012c-5b59-4c2b-8e04-d6b1599dcef0",
    "prId" : 22016,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22016#pullrequestreview-139269081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b891c282-2222-4494-865f-d489b8464741",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "One of two things changed from the existing version.  ATM this is:\r\n\r\n```\r\n                index = tools.to_datetime(np.linspace(start.value,\r\n                                                      end.value, periods),\r\n                                          utc=True)\r\n                index = index.tz_convert(tz)\r\n```\r\n\r\nChanged to avoid the dependency on `tools`.",
        "createdAt" : "2018-07-21T21:02:50Z",
        "updatedAt" : "2018-07-25T19:12:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e33ff43416efb0a564b34df2b92e5f4109563321",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +294,298 @@                end = end.tz_localize(tz)\n                arr = np.linspace(start.value, end.value, periods)\n                index = cls._simple_new(arr.astype('M8[ns]'), freq=None, tz=tz)\n\n        if not left_closed and len(index) and index[0] == start:"
  },
  {
    "id" : "db74583c-5e21-46b0-bc62-5cd8b2b48eb0",
    "prId" : 22074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22074#pullrequestreview-141321422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03d42ab1-a901-4163-8ab8-3849f6f2a14b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "since we do this all over the place, thing about making a type for this (for in internal use only), and/or maybe a ``is_datetime_scalar`` or something, just so we are consistent",
        "createdAt" : "2018-07-28T12:56:43Z",
        "updatedAt" : "2018-07-30T19:03:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d8670696-35de-4493-be55-7698bfb065a1",
        "parentId" : "03d42ab1-a901-4163-8ab8-3849f6f2a14b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I've got a branch going looking at `core.dtypes.common` (inspired by noticing the footgun status if `is_datetimelike`), will look at this there so I can get all the places it is used in one swoop.",
        "createdAt" : "2018-07-28T16:36:46Z",
        "updatedAt" : "2018-07-30T19:03:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac9102d8b2200f9144a88fc3ac94148a329d3d4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +101,105 @@\n        if isinstance(other, (datetime, np.datetime64, compat.string_types)):\n            if isinstance(other, (datetime, np.datetime64)):\n                # GH#18435 strings get a pass from tzawareness compat\n                self._assert_tzawareness_compat(other)"
  },
  {
    "id" : "4942b539-e86c-4736-987d-74a9f6199b95",
    "prId" : 22074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22074#pullrequestreview-141321387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81c792dd-d0d0-4f80-9791-59d53e55399e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "huh? why don't you just implement and raise NotIMplemented?",
        "createdAt" : "2018-07-28T12:57:27Z",
        "updatedAt" : "2018-07-30T19:03:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6b3393b5-7b2e-435d-a32d-adfc6dd941a9",
        "parentId" : "81c792dd-d0d0-4f80-9791-59d53e55399e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is is a quirk of the stdlib `datetime` implementation.  `datetime == other` will return `NotImplemented` instead of raising `TypeError` iff `other` has a `timetuple` attribute.",
        "createdAt" : "2018-07-28T16:35:13Z",
        "updatedAt" : "2018-07-30T19:03:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac9102d8b2200f9144a88fc3ac94148a329d3d4",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +163,167 @@    _object_ops = ['weekday_name', 'freq', 'tz']\n\n    # dummy attribute so that datetime.__eq__(DatetimeArray) defers\n    # by returning NotImplemented\n    timetuple = None"
  },
  {
    "id" : "86cf9cd2-a5c6-4760-9293-71e5d1a6510f",
    "prId" : 22288,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22288#pullrequestreview-151481483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38228b51-a1ae-4038-ba3b-b62bd47aca3e",
        "parentId" : null,
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "can do `dtype='M8[ns]'` in the linspace call",
        "createdAt" : "2018-08-26T13:09:12Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      },
      {
        "id" : "f1f4fbdb-7cb4-4447-8d89-b3dca823fc7a",
        "parentId" : "38228b51-a1ae-4038-ba3b-b62bd47aca3e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do this (does it work?)",
        "createdAt" : "2018-08-31T10:28:27Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "37b261e1-8093-46e9-8a10-68bb354f60fa",
        "parentId" : "38228b51-a1ae-4038-ba3b-b62bd47aca3e",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This failed on the numpy compat build unfortunately.",
        "createdAt" : "2018-08-31T17:17:04Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed681c9bba45ac2f939e85951127de569ae28c7",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +282,286 @@        else:\n            # Create a linearly spaced date_range in local time\n            arr = np.linspace(start.value, end.value, periods)\n            index = cls._simple_new(\n                arr.astype('M8[ns]', copy=False), freq=None, tz=tz"
  },
  {
    "id" : "408790e0-2cb5-4a15-bf63-9bc1225aecec",
    "prId" : 22288,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22288#pullrequestreview-152030834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0db0c665-8f18-474a-94e4-82c5959a0c3a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "e.g. figure out localize_args here (from a passed freq)",
        "createdAt" : "2018-09-04T11:58:57Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed681c9bba45ac2f939e85951127de569ae28c7",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +1326,1330 @@    -------\n    ts : Timestamp\n    \"\"\"\n    # Make sure start and end are timezone localized if:\n    # 1) freq = a Timedelta-like frequency (Tick)"
  },
  {
    "id" : "0a796fdb-2561-44a6-81e4-25f9acf0f9ff",
    "prId" : 22544,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22544#pullrequestreview-152287708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Where is pandas making the default English? Haven't looked in detail but assumed this would be system dependent",
        "createdAt" : "2018-09-02T17:58:18Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "a3e03776-3d94-4640-b124-4be6cf12cd49",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "I would expect that to be system independent (when programming, I'd rather have predictable results).\r\n\r\nCode is implemented in `get_date_name_field()`:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/86e8f23be6d8496cb39ee836b5b02f5c91fda0ba/pandas/_libs/tslibs/fields.pyx#L102-L103\r\nhttps://github.com/pandas-dev/pandas/blob/86e8f23be6d8496cb39ee836b5b02f5c91fda0ba/pandas/_libs/tslibs/fields.pyx#L117-L118\r\n\r\n`DAYS_FULL` and `MONTHS_FULL` are hard-coded in Pandas:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/86e8f23be6d8496cb39ee836b5b02f5c91fda0ba/pandas/_libs/tslibs/ccalendar.pyx#L39-L48",
        "createdAt" : "2018-09-02T19:35:28Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "ef1dbc14-baeb-46df-9222-bc9e7b9ad7cc",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "The idea was for `day_name` to replace the depreciated `weekday_name` which defaulted to hardcoded english names (without localization support).",
        "createdAt" : "2018-09-03T22:11:18Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "d3418db8-cf52-4217-a719-d4c1371e1557",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "agree this should say the default is based on the locale",
        "createdAt" : "2018-09-04T11:42:21Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f9c12d76-1795-4fc6-a7b3-e5e034ad1911",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback As you can see in the code snippets above, it is not based on the locale. The default is always English.",
        "createdAt" : "2018-09-04T11:45:01Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "1c68cde5-2d05-44e1-bdfa-b6865b16d7c0",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure it does, just pass a locale name",
        "createdAt" : "2018-09-04T11:47:08Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c295985a-6360-440f-9b00-daa7d5413bcc",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback Sorry, I do not understand your last comment. Are you still saying when no locale is passed as parameter then the default behavior is to use the system locale instead of always English? Or are you saying the default locale (English) should be specified instead of `locale=None` in the method declaration?\r\n\r\nI am confused because it seemed to me you first asked to change the docstring to state that the default was the system locale instead of English (which is not true).",
        "createdAt" : "2018-09-04T11:59:26Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "b94f4bbb-7ec3-485c-9b6e-25710c82ad1b",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why don't you try both ways and see",
        "createdAt" : "2018-09-04T12:01:57Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "19c99487-6f2e-43d9-bc27-51ab7072f4e1",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback Which both ways? Could you be more explicit about what you are trying to say? Explicit is better than implicit and words are free. :stuck_out_tongue_winking_eye: \r\n\r\nI tried changing the system locale and verified the default behavior was to use English. Maybe I did something wrong, in which case, could you provide a better way to verify it? Also, I searched through the Pandas code and it seemed to me (as shown above), that the default is English, not system locale.",
        "createdAt" : "2018-09-04T12:11:14Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "02a6126a-be4b-4ad2-a1f8-39c2a6a45129",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fully tested, why don't you have a look, just grep for day_name and see",
        "createdAt" : "2018-09-04T12:23:30Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a457cff6-9c7f-4c4b-a91e-57756f37718d",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback Yeah, the tests seem to verify the same behavior: when locale is `None`, the default is always English, not system locale. I still do not get what you are trying to tell me then... :cry:",
        "createdAt" : "2018-09-04T12:41:44Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "e181379c-a389-4e4e-99f0-b5a07fc51a57",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you show here what you are running exactly",
        "createdAt" : "2018-09-04T12:45:49Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9a089823-703d-450b-a573-d6b82a642b2f",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback I do not think the code I am running is relevant here. Unless you refer to a trivial example like the one I added in the docstring (but why would you need that?):\r\n\r\n```python\r\nidx = pd.DatetimeIndex(start='2018-09-02', freq='D', periods=3)\r\nidx.day_name()\r\n```\r\n\r\nCan you explain why you still say the default when `locale=None` is based on the system's locale? I checked the tests, the code and the behavior and everything seems to prove otherwise: the default when `locale=None` is English, and hence the proposed docstring. Did you check anything?",
        "createdAt" : "2018-09-04T13:56:35Z",
        "updatedAt" : "2018-09-04T17:37:26Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "a6b46dc2-448b-400a-8924-989031c96770",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@jreback If you tell me exactly what changes to the current docstring you have on your mind (it seems other reviewers are okay with it), I may better understand what you are saying. :heart:",
        "createdAt" : "2018-09-04T17:43:21Z",
        "updatedAt" : "2018-09-04T17:46:19Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "12ce9038-d31c-460d-ba93-6aee2ef03640",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "@Peque @jreback The default locale is English as `day_name` is meant to replace `weekday_name` which defaulted to english. So the docstring here is correct.\r\n\r\n@Peque feel free to open up a new issue suggesting that `day_name` and `month_name` should default to system locale. This would be an API change.",
        "createdAt" : "2018-09-04T18:34:56Z",
        "updatedAt" : "2018-09-04T18:34:56Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "7d06fa89-12aa-432c-8b05-c666e79c2afd",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "body" : "@mroeschke Yeah, but I do prefer the current behavior, so I would rather not open that issue (and note I am not a native English speaker nor live in an English country).\r\n\r\nWhen programming, I prefer everything in English by default. :stuck_out_tongue_winking_eye: ",
        "createdAt" : "2018-09-04T23:07:40Z",
        "updatedAt" : "2018-09-04T23:07:40Z",
        "lastEditedBy" : "8d2a3b12-73f9-4428-b3c5-ad2026cb2d6b",
        "tags" : [
        ]
      },
      {
        "id" : "dbbff941-c5fc-4b19-a8ea-b60c7375fe25",
        "parentId" : "aad4c20b-d8f7-43f3-8468-96e4528f9b5f",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Gotcha @Peque. I hold a similar opinion for API transition sake.\r\n\r\nTherefore, I think there's no action with this docstring here as far as I'm concerned. ",
        "createdAt" : "2018-09-04T23:18:12Z",
        "updatedAt" : "2018-09-04T23:18:12Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1216484685f6b29f479be59ad9ea4d078149a17b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +800,804 @@        locale : str, optional\n            Locale determining the language in which to return the month name.\n            Default is English locale.\n\n        Returns"
  },
  {
    "id" : "8bf1375f-5d69-41be-84fa-d35827dad95a",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-163839627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ec1a157-d27a-4619-b18f-1890bc454ba0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you reuse the explanation about what a non-existent time is that is in the `errors` keyword below?\r\n\r\n(and idem for the other occurences of this in docstrings)",
        "createdAt" : "2018-10-11T14:22:11Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +644,648 @@            where clocks moved forward due to DST.\n\n            - 'shift' will shift the nonexistent times forward to the closest\n              existing time\n            - 'NaT' will return NaT where there are nonexistent times"
  },
  {
    "id" : "1113bcac-6d1d-46d6-a0b6-0da4e3aa75aa",
    "prId" : 23051,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23051#pullrequestreview-162775520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7a43ba4-cdd6-4dcb-9768-daeab209b649",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "you need a blank line before `Returns`",
        "createdAt" : "2018-10-09T08:46:52Z",
        "updatedAt" : "2018-10-26T01:18:19Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e0f2425daf34c17f9d777e34ce4bd1e5fc0f70b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1002,1006 @@        Indicates whether the date is the {first_or_last} day of the month.\n\n        Returns\n        -------\n        Series or array"
  },
  {
    "id" : "0a3fa668-832b-452a-9276-02bed71bd1b4",
    "prId" : 23051,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23051#pullrequestreview-162775520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8473cdaa-6499-4c8c-b9a9-7fa880a41005",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Missing blank line before `Examples`.",
        "createdAt" : "2018-10-09T10:07:33Z",
        "updatedAt" : "2018-10-26T01:18:19Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e0f2425daf34c17f9d777e34ce4bd1e5fc0f70b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1015,1019 @@            is the last day of the month.\n\n        Examples\n        --------\n        This method is available on Series with datetime values under"
  },
  {
    "id" : "ac3ddaed-9db6-4ebd-bec2-07f8f136e3ae",
    "prId" : 23093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23093#pullrequestreview-164015080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46cd2d83-7874-4818-b7d8-807c9ce8d4e0",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Moved these checks here from inside `__new__`",
        "createdAt" : "2018-10-11T15:19:58Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "24366847-e7f0-44a6-b79b-dbf8906df01b",
        "parentId" : "46cd2d83-7874-4818-b7d8-807c9ce8d4e0",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "+1, as long as we're OK with ignoring gibberish arguments when there not actually used (which seems to be what we do right now).\r\n\r\n```python\r\n\r\nIn [9]: idx = pd.PeriodIndex(['2000', '2001'], freq='D')\r\n\r\nIn [10]: pd.PeriodIndex(idx, start='foo')\r\nOut[10]: PeriodIndex(['2000-01-01', '2001-01-01'], dtype='period[D]', freq='D')\r\n```",
        "createdAt" : "2018-10-11T21:05:18Z",
        "updatedAt" : "2018-10-11T22:13:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "04c75ca93ebaf693f9a60c7ff609806300083f88",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +228,232 @@            raise ValueError('Must provide freq argument if no data is '\n                             'supplied')\n\n        if com.count_not_none(start, end, periods, freq) != 3:\n            raise ValueError('Of the four parameters: start, end, periods, '"
  },
  {
    "id" : "6823cb2a-2bf3-4ba5-b010-083e2c566d97",
    "prId" : 23113,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23113#pullrequestreview-164568714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6777b75-04e5-4b12-9b92-e24f38b1f6bd",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I find this a rather \"obscure\" method (meaning, not directly sure how it would be useful for me as a user). But I am also not a frequent user of periods/offsets, so difficult to say (and maybe a good example in the docstring might already help). \r\n\r\nSo what I want to say: in case this is indeed rather for internal use, I would not make it a public method on the array class (but can still do the move but make it for example private here)",
        "createdAt" : "2018-10-13T08:47:02Z",
        "updatedAt" : "2018-10-18T20:51:09Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "1da2e8e1-f942-4836-8235-6963b1b772ef",
        "parentId" : "e6777b75-04e5-4b12-9b92-e24f38b1f6bd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is used indirectly in DatetimeIndex + DateOffset, so will be needed for DatetimeArray + DateOffset.",
        "createdAt" : "2018-10-13T16:30:06Z",
        "updatedAt" : "2018-10-18T20:51:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b12cd336-2afa-448a-9846-13bcd09f73b0",
        "parentId" : "e6777b75-04e5-4b12-9b92-e24f38b1f6bd",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we might want to make this private, i dont' think we need to expose to the user",
        "createdAt" : "2018-10-14T13:26:38Z",
        "updatedAt" : "2018-10-18T20:51:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "13272d82-0674-4f85-a98c-5800d57c649d",
        "parentId" : "e6777b75-04e5-4b12-9b92-e24f38b1f6bd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I privatized this earlier today, but have now changed my mind.  For DateOffset arithmetic to work \"for free\" it needs to have the same name.  We can revisit this later if needbe.",
        "createdAt" : "2018-10-14T22:25:52Z",
        "updatedAt" : "2018-10-18T20:51:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "62c835d0-8ba3-474e-915f-d8b6d5b4639d",
        "parentId" : "e6777b75-04e5-4b12-9b92-e24f38b1f6bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, can you then add a comment like `TODO(EA): make this private`, for once we do the actual split (because I suppose then this is no longer a problem?)",
        "createdAt" : "2018-10-15T06:55:53Z",
        "updatedAt" : "2018-10-18T20:51:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d8bc1acb8759c1e069a7761d2604369ec011e50",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +825,829 @@        Calculate TimedeltaArray of difference between index\n        values and index converted to PeriodArray at specified\n        freq. Used for vectorized offsets\n\n        Parameters"
  },
  {
    "id" : "3d0a9628-7be9-4efa-8464-24f4882d5fbd",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-168500637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Much less verbose than the old 522-526.  Not sure if there was a reason for the old version.",
        "createdAt" : "2018-10-18T00:06:43Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "14d24794-5c71-443b-a4ce-5fbac43c00b5",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why does this use `type(self)(new_values)`, while the PeriodArrayMixin version uses `self._shallow_copy`? Is that necessary due to inconsistent constructors, or can we standardize?",
        "createdAt" : "2018-10-19T13:54:19Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "54f2affe-d014-498d-9da1-cfc915f01eb1",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because shallow_copy doesn't allow `freq='infer'`",
        "createdAt" : "2018-10-19T14:15:00Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "aa8c620b-98c1-4aa5-b0e3-873cf144fc7b",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you, regardless of the docstring appender, add a single line comment like `# add a timedelta-like or DateOffset, yielding a ...` (as is done for some of the others as well). \r\nThat at least makes reading the code a bit easier.",
        "createdAt" : "2018-10-19T18:58:25Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "766ce864-9c2c-4caf-8495-6400317efd66",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jbrockmendel related to your initial comment. If I do the following (mimicking the old and new code):\r\n\r\n```\r\nIn [15]: new_values = np.array([1, 2, 3], dtype='datetime64[ns]')\r\n\r\nIn [16]: pd.DatetimeIndex(new_values, tz='Europe/Brussels')\r\nOut[16]: \r\nDatetimeIndex(['1970-01-01 00:00:00.000000001+01:00',\r\n               '1970-01-01 00:00:00.000000002+01:00',\r\n               '1970-01-01 00:00:00.000000003+01:00'],\r\n              dtype='datetime64[ns, Europe/Brussels]', freq=None)\r\n\r\nIn [17]: pd.DatetimeIndex(new_values, tz='UTC').tz_convert('Europe/Brussels')\r\nOut[17]: \r\nDatetimeIndex(['1970-01-01 01:00:00.000000001+01:00',\r\n               '1970-01-01 01:00:00.000000002+01:00',\r\n               '1970-01-01 01:00:00.000000003+01:00'],\r\n              dtype='datetime64[ns, Europe/Brussels]', freq=None)\r\n```\r\n\r\nis not giving the same result (or did I do something wrong in the example? I assumed that `self.tz` was 'Europe/Brussels')\r\n\r\nBut that is just from looking at the small piece of code here in the diff, not the broader picture where and how it is called etc.",
        "createdAt" : "2018-10-19T19:07:17Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0dbe4d54-7105-43a7-887f-48f65b15ad53",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@jorisvandenbossche turns out I had it right the first time.  The problem with the example you gave is that you're passing `M8[ns]` instead of `i8`.\r\n\r\n```\r\nIn [3]: new_values = np.array([1, 2, 3])\r\n\r\nIn [4]: pd.DatetimeIndex(new_values, tz='Europe/Brussels')\r\nOut[4]: \r\nDatetimeIndex(['1970-01-01 01:00:00.000000001+01:00',\r\n               '1970-01-01 01:00:00.000000002+01:00',\r\n               '1970-01-01 01:00:00.000000003+01:00'],\r\n              dtype='datetime64[ns, Europe/Brussels]', freq=None)\r\n\r\nIn [5]: pd.DatetimeIndex(new_values, tz='UTC').tz_convert('Europe/Brussels')\r\nOut[5]: \r\nDatetimeIndex(['1970-01-01 01:00:00.000000001+01:00',\r\n               '1970-01-01 01:00:00.000000002+01:00',\r\n               '1970-01-01 01:00:00.000000003+01:00'],\r\n              dtype='datetime64[ns, Europe/Brussels]', freq=None)\r\n```",
        "createdAt" : "2018-10-20T00:04:34Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "cd869180-fdf7-4b5c-9ec5-f539ed89d9ae",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah ... subtle difference :) \r\nThen the docstring of `_add_delta` is incorrect I think.",
        "createdAt" : "2018-10-22T13:00:21Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "1ae15c86-4954-44d6-9183-bd84198b36e3",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> Then the docstring of _add_delta is incorrect I think.\r\n\r\nCan you elaborate on this?",
        "createdAt" : "2018-10-22T16:05:32Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "bc58ac13-2f0f-4f99-a6a5-007c2423b437",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Can you elaborate on this?\r\n\r\nAdded a comment on the relevant line",
        "createdAt" : "2018-10-22T19:04:28Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "44b54e07-b5dd-4325-85df-c85ac2d0e81a",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Can you, regardless of the docstring appender, add a single line comment like # add a timedelta-like or DateOffset, yielding a ... (as is done for some of the others as well).\r\nThat at least makes reading the code a bit easier.\r\n\r\nCan you do this one?",
        "createdAt" : "2018-10-22T19:16:07Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "06305826-29d1-4153-bf6d-40bc06cde42a",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you do this one?",
        "createdAt" : "2018-10-25T17:21:45Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9ac80a1c-52ec-4733-9c49-0fdd85b8e18d",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "My bad; this got lost in the shuffle.  I'll look at this now.",
        "createdAt" : "2018-10-25T17:24:32Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "71cf9970-0bd2-4340-bfd0-e6bfafcabd7a",
        "parentId" : "94da5523-a32a-44e3-9d2e-3333753cdec8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just updated.  It's much less pretty than before, but more Technically Correct.",
        "createdAt" : "2018-10-25T17:32:39Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +501,505 @@        \"\"\"\n        new_values = dtl.DatetimeLikeArrayMixin._add_delta(self, delta)\n        return type(self)(new_values, tz=self.tz, freq='infer')\n\n    # -----------------------------------------------------------------"
  },
  {
    "id" : "500bfa4c-efa3-438f-aafb-7839b258e739",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-167178084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "297d958a-4b5e-4376-9324-5ce28a65e7b8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add an assert on the dtype",
        "createdAt" : "2018-10-23T01:49:40Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +430,434 @@            raise ValueError(\"cannot add indices of unequal length\")\n\n        if isinstance(other, np.ndarray):\n            assert is_datetime64_dtype(other)\n            other = type(self)(other)"
  },
  {
    "id" : "da087532-5b7e-4d96-a7d4-d90707d01688",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-167184826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d145a24c-6b21-421a-a17a-df95beef316e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is always a scalar other?",
        "createdAt" : "2018-10-23T01:50:16Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6352dd92-8d72-40ca-9fbf-bbfa537aa744",
        "parentId" : "d145a24c-6b21-421a-a17a-df95beef316e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes",
        "createdAt" : "2018-10-23T02:18:52Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +469,473 @@    def _sub_datetimelike_scalar(self, other):\n        # subtract a datetime from myself, yielding a ndarray[timedelta64[ns]]\n        assert isinstance(other, (datetime, np.datetime64))\n        assert other is not NaT\n        other = Timestamp(other)"
  },
  {
    "id" : "86c3a5ef-7650-4a15-925c-b4401c6f3eaa",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-168643147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6a5ebc2-a1d9-4682-a889-38aeef86a2a3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this correct?",
        "createdAt" : "2018-10-26T01:15:20Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +76,80 @@        if field in self._object_ops:\n            result = fields.get_date_name_field(values, field)\n            result = self._maybe_mask_results(result, fill_value=None)\n\n        else:"
  },
  {
    "id" : "1f8347ff-7914-4783-aa2f-cc15128762e7",
    "prId" : 23215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23215#pullrequestreview-168649012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f4c455b-b23d-4bd3-9ecc-345254156b26",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this correct?",
        "createdAt" : "2018-10-26T01:15:46Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e9793475-aa28-48c2-9ea7-4cda674d2c0d",
        "parentId" : "3f4c455b-b23d-4bd3-9ecc-345254156b26",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You asked me to change the default for `fill_value` from `None` to `iNaT`, so places that used to not pass anything are updated to pass `None`.",
        "createdAt" : "2018-10-26T01:23:35Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "78aa71f9-51e0-44de-8dd6-9debe166cda9",
        "parentId" : "3f4c455b-b23d-4bd3-9ecc-345254156b26",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm yeah i c. maybe it would be better to infer based on the type of result? I just don't lke having to specific this at all (and here it shoud be np.nan anyhow). IOW it can either be ``iNaT`` if its a datetimelike op, else its ``np.nan`` if the result is object / float.",
        "createdAt" : "2018-10-26T01:35:14Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c8a913ea-eebb-465d-aae3-09c1d9edbe1f",
        "parentId" : "3f4c455b-b23d-4bd3-9ecc-345254156b26",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I was thinking of doing something similar in the next pass",
        "createdAt" : "2018-10-26T01:38:10Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "12cdaad6-7171-4a49-891d-2697ab98fd84",
        "parentId" : "3f4c455b-b23d-4bd3-9ecc-345254156b26",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k cool",
        "createdAt" : "2018-10-26T01:58:20Z",
        "updatedAt" : "2018-10-28T05:23:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0466b9c8efd2f38f61a79fdf90464ee71ae72750",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +882,886 @@        result = fields.get_date_name_field(values, 'month_name',\n                                            locale=locale)\n        result = self._maybe_mask_results(result, fill_value=None)\n        return result\n"
  },
  {
    "id" : "d4eaf00f-d0ea-4825-82ba-2711aa6ec083",
    "prId" : 23430,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23430#pullrequestreview-171466934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "765228aa-d1ae-4bd1-ac00-169664aa78bd",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why self.asi8 and not self or self._data here? Simple_new doesn't take M8 values?",
        "createdAt" : "2018-11-02T14:22:23Z",
        "updatedAt" : "2018-11-02T14:22:35Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "997f89b3-e6be-4b64-b47c-29fd6bb77cf3",
        "parentId" : "765228aa-d1ae-4bd1-ac00-169664aa78bd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`_simple_new(int64values, tz=tz)` will get you the same thing as `__new__(int64values, tz=tz)`, but the same is _not_ true with M8 values.  I find that really helpful.",
        "createdAt" : "2018-11-02T14:58:49Z",
        "updatedAt" : "2018-11-02T14:58:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "63c2d2d8-2a28-4b56-bcc2-236435bafb07",
        "parentId" : "765228aa-d1ae-4bd1-ac00-169664aa78bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "You are referring to the timezone difference you mentioned earlier?\r\n\r\nI personally find that very confusing that `DatetimeArray(self._data, tz=..)` and `DatetimeArray(self._data.view(int), tz=..)` do not give the same. To the extent possible, I would not repeat this pattern for our Arrays? \r\n(of course, in the DatetimeIndex constructor we cannot just change it, unless we want to deprecate that first).",
        "createdAt" : "2018-11-05T09:22:51Z",
        "updatedAt" : "2018-11-05T09:22:52Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0f02db0b09775c69d972ae8e25c2b630cef54f5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +587,591 @@\n        # No conversion since timestamps are all UTC to begin with\n        return self._simple_new(self.asi8, tz=tz, freq=self.freq)\n\n    def tz_localize(self, tz, ambiguous='raise', nonexistent='raise',"
  },
  {
    "id" : "71e42386-e657-4d0e-8305-5bc439dd63bf",
    "prId" : 23502,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23502#pullrequestreview-171415751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "649619f4-5a67-4c8b-aad7-1c17cce05833",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Comment in previous line should be removed, will update",
        "createdAt" : "2018-11-05T05:13:36Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7064d5ffa495deeb8605eed9569d1d8a9a34a",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +118,122 @@        else:\n            if isinstance(other, list):\n                try:\n                    other = type(self)(other)\n                except ValueError:"
  },
  {
    "id" : "47f0494f-2327-420b-a010-0fdbc67d0f31",
    "prId" : 23502,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23502#pullrequestreview-172571377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f45ad7da-fb14-4afb-ac59-f6a24a7a13cf",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "`isna(other)` ?",
        "createdAt" : "2018-11-05T11:06:05Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "718d30aa-af0a-4367-8b8d-f9525ff20c45",
        "parentId" : "f45ad7da-fb14-4afb-ac59-f6a24a7a13cf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It turns out that `isna(DatetimeArray)` doesn't work at the moment.  I want to keep the footprint of these PRs contained as long as possible, so chose to avoid changing it for now.",
        "createdAt" : "2018-11-05T17:58:04Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7db8d62d-b0b8-4baf-8aa0-60c2b76de29f",
        "parentId" : "f45ad7da-fb14-4afb-ac59-f6a24a7a13cf",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But you are adding the `isna` method in this PR (to DatetimelikeArrayMixin above), shouldn't it then work?",
        "createdAt" : "2018-11-07T10:06:43Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "cb1b0d83-98e0-4453-951c-ca8d96b6d085",
        "parentId" : "f45ad7da-fb14-4afb-ac59-f6a24a7a13cf",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "`isna(other)` may not work until `DatetimelikeArray(mixin)` inherits from ExtensionArray. I suspect there's a check in `isna` that only dispatches for EAs.",
        "createdAt" : "2018-11-07T14:32:32Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a20cc3a2-50a6-42e8-8b64-3511e27abbfa",
        "parentId" : "f45ad7da-fb14-4afb-ac59-f6a24a7a13cf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> isna(other) may not work until `DatetimelikeArray(mixin)` inherits from ExtensionArray. I suspect there's a check in `isna` that only dispatches for EAs.\r\n\r\nGenerally right.  The check also catches a couple other things.",
        "createdAt" : "2018-11-07T16:15:44Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7064d5ffa495deeb8605eed9569d1d8a9a34a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +141,145 @@                    other = type(self)(other)\n                result = meth(self, other)\n                o_mask = other._isnan\n\n            result = com.values_from_object(result)"
  },
  {
    "id" : "9e8507cc-8473-45af-aad8-cfc3b3b12a36",
    "prId" : 23502,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23502#pullrequestreview-173202072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4f01206-36df-432c-a744-3c8d25aa0885",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Are there tests in here that need this?",
        "createdAt" : "2018-11-07T09:49:04Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "128b8b13-75f1-4d91-901e-45fc87ec78b8",
        "parentId" : "f4f01206-36df-432c-a744-3c8d25aa0885",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do we eventually want this on DatetimelikeArray (the most base class) so that all the arrays inherit the same value? It looks like PeriodArray doesn't define it or `__array_ufunc__` yet (there's an open issue IIRC).\r\n\r\nI don't see any tests between `op(ndarray, datetimearray)`, but I may be missing them.",
        "createdAt" : "2018-11-07T14:37:59Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "611b9aef-29ca-4b06-8c8f-4b8f22eeb1b5",
        "parentId" : "f4f01206-36df-432c-a744-3c8d25aa0885",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> I don't see any tests between op(ndarray, datetimearray), but I may be missing them.\r\n\r\n`tests.arrays.test_datetimes.test_cmp_dt64_arraylike_tznaive`.  The fact that it isn't obvious suggests it can be made more clear.  I'll see what I can do.",
        "createdAt" : "2018-11-07T16:24:48Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "93f49cbe-2eed-4888-b156-1afe78ad801c",
        "parentId" : "f4f01206-36df-432c-a744-3c8d25aa0885",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Or I just can't reed well. Looks good.",
        "createdAt" : "2018-11-08T22:27:39Z",
        "updatedAt" : "2018-11-08T23:58:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7064d5ffa495deeb8605eed9569d1d8a9a34a",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +177,181 @@\n    # ensure that operations with numpy arrays defer to our implementation\n    __array_priority__ = 1000\n\n    # -----------------------------------------------------------------"
  },
  {
    "id" : "a4e2be50-8edb-409c-9f22-e1c7852eff62",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-171851088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e04388c-29ed-498b-bf57-3c55a6a642a5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can .astype(dtype) if not None, then coerce to ndarray",
        "createdAt" : "2018-11-06T01:59:56Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "91864f26-daf8-4c53-8158-05cb2634d125",
        "parentId" : "8e04388c-29ed-498b-bf57-3c55a6a642a5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "That makes sense.  For the time being I think matching the `Index.__array__` behavior makes sense (in part because this is overriding `Index.__array__` on `DatetimeIndex`",
        "createdAt" : "2018-11-06T03:04:59Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "81eec240-4924-4b48-bb15-fb6ea11e98c2",
        "parentId" : "8e04388c-29ed-498b-bf57-3c55a6a642a5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sgtm. I *think* we are generally ignoring dtyep here anyhow (and AFAIR dtype is None always), unless explicity passed (llke you did)",
        "createdAt" : "2018-11-06T03:10:30Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +395,399 @@        elif is_int64_dtype(dtype):\n            return self.asi8\n\n        # TODO: warn that conversion may be lossy?\n        return self._data.view(np.ndarray)  # follow Index.__array__"
  },
  {
    "id" : "7c1625e2-6aee-4bb4-98fa-f36a3194f4c6",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-172101614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eca43add-eb92-4547-b908-f5518b465a9a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this actually tested? use ``is_int64_dtype`` here",
        "createdAt" : "2018-11-06T03:40:29Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "03c7c213-e0f0-4a68-ba53-a2219935df50",
        "parentId" : "eca43add-eb92-4547-b908-f5518b465a9a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "it is now, and done.",
        "createdAt" : "2018-11-06T16:14:46Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +394,398 @@            return np.array(list(self), dtype=object)\n        elif is_int64_dtype(dtype):\n            return self.asi8\n\n        # TODO: warn that conversion may be lossy?"
  },
  {
    "id" : "b868e1e1-7aad-445a-9291-ed9134693f1b",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-172951141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fbfb472-73df-43c2-ae66-b22c4f18e32d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "am a little bit hesistant to make this change as we should make this more generally rather than piecemeal (e.g. not just for DTI), but for all Index types.",
        "createdAt" : "2018-11-07T14:01:44Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea316622-3d0b-4612-8c0b-303b74cbeade",
        "parentId" : "6fbfb472-73df-43c2-ae66-b22c4f18e32d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think you're right that we do need to take a close look at all of the `__array__` methods (also `view` and `astype`), and we will as the DTA/TDA sequence of PRs progresses.  Most of that is out of scope for this PR.",
        "createdAt" : "2018-11-07T16:07:43Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d0eee205-23d5-4705-a709-9bb73b0978e2",
        "parentId" : "6fbfb472-73df-43c2-ae66-b22c4f18e32d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jreback Note that this is not Index, but Array. Index is correctly converting to M8[ns], while on Array it is currently actually giving object dtype, which I would say is a bug.\r\n\r\nBut you are right that this should be fixed for all Array classes",
        "createdAt" : "2018-11-07T18:03:48Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f04f85ab-5b70-4f87-ae32-f8521da24859",
        "parentId" : "6fbfb472-73df-43c2-ae66-b22c4f18e32d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I guess ok to do here. Can you create an issue to test / resolve this generally. Its not great that it works for one subclass but not the others.",
        "createdAt" : "2018-11-08T13:22:45Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +397,401 @@\n        # TODO: warn that conversion may be lossy?\n        return self._data.view(np.ndarray)  # follow Index.__array__\n\n    def __iter__(self):"
  },
  {
    "id" : "310d9f15-3588-4b17-9087-dc203fac79d0",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-173035919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7993c7cf-f8df-464d-85f6-191299d8bca2",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Other question: what is the `.view(np.ndarray)` part doing if it is already an array? Can we remove it?",
        "createdAt" : "2018-11-08T15:01:39Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "453bfb7e-9bce-4d63-821f-e9874ab0a6d2",
        "parentId" : "7993c7cf-f8df-464d-85f6-191299d8bca2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It can probably be removed; this is taken directly from the `Index.__array__` implementation, so I think the maybe-removing this should be done at the same time those methods are overhauled (ill be opening an Issue shortly)",
        "createdAt" : "2018-11-08T16:05:58Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +397,401 @@\n        # TODO: warn that conversion may be lossy?\n        return self._data.view(np.ndarray)  # follow Index.__array__\n\n    def __iter__(self):"
  },
  {
    "id" : "1d4b010c-a68a-4e43-b29b-18feeeacb028",
    "prId" : 23524,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23524#pullrequestreview-173420686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3856e33-1274-4fc1-ac0e-4fe098828bae",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think we can remove this elif branch. Numpy will afterwards convert the M8[ns] data to int, and in that way ensure the semantics of `np.asarray` regarding copy/no copy is followed.",
        "createdAt" : "2018-11-09T09:57:44Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "89b5102c-5e34-46bc-8087-cf3dd67c7887",
        "parentId" : "f3856e33-1274-4fc1-ac0e-4fe098828bae",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jbrockmendel I opened https://github.com/pandas-dev/pandas/pull/23593, a PR doing the `__array__` for all datetimelike EAs, not only DatetimeArray (but so there is a bit of overlap with this PR)",
        "createdAt" : "2018-11-09T10:54:31Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "297e4c7f-c0ee-46dd-a262-8900e2bdfefc",
        "parentId" : "f3856e33-1274-4fc1-ac0e-4fe098828bae",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Great, I'll take a look at 23593.",
        "createdAt" : "2018-11-09T14:00:03Z",
        "updatedAt" : "2018-11-09T16:43:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc7f5cd66bea1266994f93d0ef93d3ef434a0fdf",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +394,398 @@            return np.array(list(self), dtype=object)\n        elif is_int64_dtype(dtype):\n            return self.asi8\n\n        # TODO: warn that conversion may be lossy?"
  },
  {
    "id" : "32bcf85d-b252-4f14-8454-94818272122a",
    "prId" : 23539,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23539#pullrequestreview-172524333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bae80bf-b31f-405f-be70-e988b41c572b",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Just curious, why can we drop the `if`-logic?",
        "createdAt" : "2018-11-07T05:50:12Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "bd338fc4-af0b-4d94-bd74-df65da6f1fe6",
        "parentId" : "5bae80bf-b31f-405f-be70-e988b41c572b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "because it is unnecessary.  if `inferred` is `None`, then we're setting `result.freq=None` which is what it should be anyway.  It isn't a big deal, but these 4 lines are repeated 4 times and after looking at these for weeks I find it an eyesore.",
        "createdAt" : "2018-11-07T14:50:00Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "898444f17553dbb7ed012fbdfd49f1b2864f9466",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +235,239 @@        result = cls._simple_new(values, freq=freq, tz=tz)\n        if freq_infer:\n            result.freq = to_offset(result.inferred_freq)\n\n        # NB: Among other things not yet ported from the DatetimeIndex"
  }
]