[
  {
    "id" : "766ae637-a9bd-46c9-9043-47c969590526",
    "prId" : 24255,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24255#pullrequestreview-187625636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4294ce9e-2551-4a91-ae0b-063a3c872609",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comment on why you need this",
        "createdAt" : "2018-12-23T16:06:31Z",
        "updatedAt" : "2018-12-23T16:47:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43d3d8344fd282104ea66f6e87c6165cad39187c",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@            # If the range is sufficiently large, np.arange may overflow\n            #  and incorrectly return an empty array if not caught.\n            try:\n                values = np.arange(b, e, stride, dtype=np.int64)\n            except FloatingPointError:"
  },
  {
    "id" : "bd92a163-5e23-4425-9a2d-dd426d8940d7",
    "prId" : 24255,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24255#pullrequestreview-187627819",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8878bfc2-77b6-4d22-9cff-50007ee756da",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "isn't this case already hendled in _generate_range_overflow_safe_signed? l169",
        "createdAt" : "2018-12-23T16:11:08Z",
        "updatedAt" : "2018-12-23T16:47:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "573ce709-d7af-4b8f-afcb-4413fac1ea6c",
        "parentId" : "8878bfc2-77b6-4d22-9cff-50007ee756da",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No.  The check on 169 is specific to the case where periods * stride doesn't overflow int64 bounds.  The check here on 127 is for the case where it does.\r\n\r\nThat said, this check could be removed.  It is a fast-path to fail early.",
        "createdAt" : "2018-12-23T16:47:45Z",
        "updatedAt" : "2018-12-23T16:47:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ebedacc6-6bc5-4554-8482-8dd6a522b94a",
        "parentId" : "8878bfc2-77b6-4d22-9cff-50007ee756da",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k make sure that all of these paths are hit and tested - make as simple as possible",
        "createdAt" : "2018-12-23T16:49:15Z",
        "updatedAt" : "2018-12-23T16:49:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "79265bae-8cbe-472e-a0c5-87009d1adf8b",
        "parentId" : "8878bfc2-77b6-4d22-9cff-50007ee756da",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just double-checked: every branch in here is hit in the tests",
        "createdAt" : "2018-12-23T17:29:58Z",
        "updatedAt" : "2018-12-23T17:29:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "43d3d8344fd282104ea66f6e87c6165cad39187c",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@            endpoint, periods, stride, side)\n\n    elif ((endpoint > 0 and side == 'start' and stride > 0) or\n          (endpoint < 0 and side == 'end' and stride > 0)):\n        # no chance of not-overflowing"
  },
  {
    "id" : "7f7a7b6b-33fe-490a-b120-935915e164f7",
    "prId" : 33498,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33498#pullrequestreview-394900784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb0332b4-8979-4d1c-b59c-ad831d0fa688",
        "parentId" : null,
        "authorId" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "body" : "@jbrockmendel: Instead of doing the following in the calling function I am handling `start` and `end` here. Indeed to be able to call `generate_regular_range` directly without duplicating too much code `generate_regular_range` now support `Timedelta` or `Timestamp` for `start`/`end` arguments.\r\n\r\nTherefore I removed the wrappers functions that I added in a previous commit (`generate_timestamps_range` and `generate_timedeltas_range`).\r\n\r\nEDIT:  for more clarity `generate_regular_range` has been renamed into `generate_time_range`.",
        "createdAt" : "2020-04-16T14:52:04Z",
        "updatedAt" : "2020-05-09T16:24:22Z",
        "lastEditedBy" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "tags" : [
        ]
      },
      {
        "id" : "3ba4ac65-59c7-4cbc-92b9-cfe8e9956dde",
        "parentId" : "eb0332b4-8979-4d1c-b59c-ad831d0fa688",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "thanks",
        "createdAt" : "2020-04-16T18:37:21Z",
        "updatedAt" : "2020-05-09T16:24:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "71438d6f7509191d532b60dbb6359b4c0bb87f24",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +40,44 @@    start = start.value if start is not None else None\n    end = end.value if end is not None else None\n    stride = freq.nanos\n\n    if periods is None:"
  },
  {
    "id" : "68d30609-dc50-43d1-9c4d-a0912bf9cc66",
    "prId" : 39308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39308#pullrequestreview-572801982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "844ed9fb-dd18-4327-8021-9fab28ac0ec9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can't this wrap around? (i mean you don't want it too)",
        "createdAt" : "2021-01-21T00:14:41Z",
        "updatedAt" : "2021-01-21T00:14:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9c7e6ace-605f-49c0-9188-6b746a191485",
        "parentId" : "844ed9fb-dd18-4327-8021-9fab28ac0ec9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "the np.errstate on L155 prevents that",
        "createdAt" : "2021-01-21T00:18:07Z",
        "updatedAt" : "2021-01-21T00:18:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b91fa26b3bd12ebe032b29b5b5201450f2cb098",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +158,162 @@            # easy case with no overflows\n            result = np.int64(endpoint) + addend\n            if result == iNaT:\n                # Putting this into a DatetimeArray/TimedeltaArray\n                #  would incorrectly be interpreted as NaT"
  }
]