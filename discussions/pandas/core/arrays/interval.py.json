[
  {
    "id" : "7c543cff-baf4-4b58-9685-138a31163518",
    "prId" : 17753,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17753#pullrequestreview-256472980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3526de88-4845-4951-8045-9bb5d0bf5110",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "I should be able to implement this in the next day or two if we want to get it in for 0.25.0; it should be relatively straight-forward and we have good testing infrastructure from `overlaps` that could be partially reused.",
        "createdAt" : "2019-07-01T17:37:26Z",
        "updatedAt" : "2019-07-01T17:39:33Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "30c77f0620344ed8bbc482ef8d19ee9030b48d9a",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1057,1061 @@        if isinstance(other, Interval):\n            raise NotImplementedError(\n                'contains not implemented for two intervals'\n            )\n"
  },
  {
    "id" : "0d801170-9b5a-4eb2-bff1-918f473228d4",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-110362746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45f1fb43-bf91-4028-ba84-1b4e365abe92",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is SO duplicating II\r\nhave to do something about this - this is a technical debt nightmare \r\n",
        "createdAt" : "2018-04-04T17:05:35Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a7febf35-2750-4463-9cfa-5ed3bfb0378b",
        "parentId" : "45f1fb43-bf91-4028-ba84-1b4e365abe92",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Did you see IntervalIndex._simple_new? There isn't any duplicated code between the two.",
        "createdAt" : "2018-04-04T17:14:42Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1c8e4c13-ccd6-4d74-bac9-8e6b8d34b1bd",
        "parentId" : "45f1fb43-bf91-4028-ba84-1b4e365abe92",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so EA takes a different take on construction that in Index. Where we use _simple_new and _shalllow_copy, but conceptually these are the same things. Would be ok with changing the spellings inside Index to conform this. This is my main objection generally. We spell things one way and a different way in EA, this is so confusing.",
        "createdAt" : "2018-04-05T16:01:08Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e39baec6-4c31-4fd7-aac1-0a3be4a8e5a5",
        "parentId" : "45f1fb43-bf91-4028-ba84-1b4e365abe92",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jreback Can you elaborate on this comment (as you say this is your main objection, but I don't fully understand it).\r\n\r\nSo `IntervalArray._simple_new` construct from left/right, while `IntervalIndex._simple_new` now constructs from values (IntervalArray), while previously it constructed from left/right. So yes, this is different between array and index, but, for IntervalIndex it is now more consistent with the base Index._simple_new (which constructs from values), so I think that is a good thing. ",
        "createdAt" : "2018-04-09T08:29:17Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +146,150 @@\n        closed = closed or 'right'\n        left = _ensure_index(left, copy=copy)\n        right = _ensure_index(right, copy=copy)\n"
  },
  {
    "id" : "c28dfb95-3f6f-4254-93c4-9d9809153669",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-110646900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f77d61a-3aeb-475f-99d0-d2c4a65f9b9f",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Should this support the case where `value` is `np.nan`?  Doesn't look like that currently works.",
        "createdAt" : "2018-04-05T00:35:33Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "f89d5707-f9a6-4660-8a53-40f47f9aa25e",
        "parentId" : "5f77d61a-3aeb-475f-99d0-d2c4a65f9b9f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yes, it currently fails. I'll see what can be done.",
        "createdAt" : "2018-04-06T15:10:39Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "60487b58-e468-4734-bdeb-3d1d63a61f71",
        "parentId" : "5f77d61a-3aeb-475f-99d0-d2c4a65f9b9f",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Looks like there's also something strange going on with datetime data:\r\n```python-traceback\r\nIn [2]: ia = pd.interval_range(pd.Timestamp('20180101'), periods=3).values\r\n\r\nIn [3]: ia\r\nOut[3]:\r\nIntervalArray([(2018-01-01, 2018-01-02], (2018-01-02, 2018-01-03], (2018-01-03, 2018-01-04]],\r\n              closed='right',\r\n              dtype='interval[datetime64[ns]]')\r\n\r\nIn [4]: new_iv = pd.Interval(pd.Timestamp('20180101'), pd.Timestamp('20180105'))\r\n\r\nIn [5]: new_iv\r\nOut[5]: Interval('2018-01-01', '2018-01-05', closed='right')\r\n\r\nIn [6]: ia[0] = new_iv\r\n\r\nIn [7]: ia\r\nOut[7]: ---------------------------------------------------------------------------\r\nValueError: left side of interval must be <= right side\r\n\r\nIn [8]: ia.left\r\nOut[8]: DatetimeIndex(['2018-01-01', '2018-01-05', '2018-01-03'], dtype='datetime64[ns]', freq='D')\r\n\r\nIn [9]: ia.right\r\nOut[9]: DatetimeIndex(['2018-01-05', '2018-01-03', '2018-01-04'], dtype='datetime64[ns]', freq='D')\r\n```",
        "createdAt" : "2018-04-09T23:07:47Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 455,
    "diffHunk" : "@@ -1,1 +453,457 @@        return self._shallow_copy(left, right)\n\n    def __setitem__(self, key, value):\n        # na value: need special casing to set directly on numpy arrays\n        needs_float_conversion = False"
  },
  {
    "id" : "1818de21-a601-4c59-9076-79327c3e4593",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109767466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7cbe9b8-c82b-4788-b0b0-c4eeb5517619",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so there is lots of copying of other code because you can't share the Index base things for this. You need prob push some of this code (e.g. formatting) to something like IndexOpsMixin (or the like). and use that here.",
        "createdAt" : "2018-04-05T16:06:55Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 821,
    "diffHunk" : "@@ -1,1 +819,823 @@                tail = [formatter(x) for x in self]\n                summary = '[{tail}]'.format(tail=', '.join(tail))\n\n        return summary\n"
  },
  {
    "id" : "897784f1-76ff-463c-beea-e67de36f625b",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-135823068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1954760c-e890-47b1-b990-3fc17252732b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did we default this before here? (e.g. this should be filled in I think by now). maybe assert that it is not None here (and push the default higher up). IOW don't want to have in too many places.",
        "createdAt" : "2018-04-14T14:02:31Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "61ade145-aa79-42b3-b4da-86fd4c7cb75d",
        "parentId" : "1954760c-e890-47b1-b990-3fc17252732b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I believe closed should always be not-None here by-definition? ",
        "createdAt" : "2018-07-10T10:13:35Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3d123c51-ba5c-432e-ad32-ea394a936855",
        "parentId" : "1954760c-e890-47b1-b990-3fc17252732b",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "There are a couple corner cases: empty data and purely NA data.  In both cases, the inferred `closed` will be `None`, so if `closed` is also not passed to the constructor it will be `None` here.",
        "createdAt" : "2018-07-10T13:29:49Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@        result = IntervalMixin.__new__(cls)\n\n        closed = closed or 'right'\n        left = _ensure_index(left, copy=copy)\n        right = _ensure_index(right, copy=copy)"
  },
  {
    "id" : "5bf2a47a-0e39-4360-92d9-d944b16d763b",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-112208496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f20a147-9ed0-4912-95e1-44185c41ac13",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yep",
        "createdAt" : "2018-04-14T14:07:36Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 793,
    "diffHunk" : "@@ -1,1 +791,795 @@\n        # TODO: integrate with categorical and make generic\n        # name argument is unused here; just for compat with base / categorical\n        n = len(self)\n        max_seq_items = min((get_option("
  },
  {
    "id" : "f2fe621f-b1fe-4186-b448-a3a7235d4abe",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-112208496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f865215b-5be6-4ea4-a92b-1abbbd9687be",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move these 2 up near nbytes",
        "createdAt" : "2018-04-14T14:08:00Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 924,
    "diffHunk" : "@@ -1,1 +922,926 @@            return self.left + 0.5 * self.length\n\n    @property\n    def is_non_overlapping_monotonic(self):\n        \"\"\""
  },
  {
    "id" : "359e4331-d1a8-49a3-9025-e9efc7e335da",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-135245141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4fe04a3-c745-402a-a80a-e167e816a76a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can do in a followup (though prob easy here) to use\r\n``format_object_summary`` from ``pandas.core.formats.printing`` as this is vastly simplified",
        "createdAt" : "2018-07-08T20:57:37Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c93440b1-794c-47da-94c4-d8208e089262",
        "parentId" : "f4fe04a3-c745-402a-a80a-e167e816a76a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "its used generally for all Indexes now",
        "createdAt" : "2018-07-08T20:57:46Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 791,
    "diffHunk" : "@@ -1,1 +789,793 @@\n    def _format_data(self):\n\n        # TODO: integrate with categorical and make generic\n        # name argument is unused here; just for compat with base / categorical"
  },
  {
    "id" : "2710ca91-e8e4-4650-bee8-d6f5a173c30d",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-135672087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54cbf2f2-fdef-4b8f-a8f4-b9ab8c49c53b",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Should we make `IntervalArray.closed` a setter as well?",
        "createdAt" : "2018-07-10T02:55:32Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "67ed2f01-f664-4cd2-a5ef-33e68ecc99d9",
        "parentId" : "54cbf2f2-fdef-4b8f-a8f4-b9ab8c49c53b",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "I don't think this would be a problem with the current implementation, but #19371 makes me a bit hesitant since it'd make a `closed` setter a (limited) `dtype` setter.",
        "createdAt" : "2018-07-10T04:40:14Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 892,
    "diffHunk" : "@@ -1,1 +890,894 @@\n    @Appender(_interval_shared_docs['set_closed'] % _shared_docs_kwargs)\n    def set_closed(self, closed):\n        if closed not in _VALID_CLOSED:\n            msg = \"invalid option for 'closed': {closed}\""
  },
  {
    "id" : "ce1edaa3-ca64-4067-8d2a-e4bdbd8de593",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-135830707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b917a039-9f7a-451d-8a0c-f826b62e624f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not sure I am clear why this is problematic. is there a failure possible when updating the 2nd one?",
        "createdAt" : "2018-07-10T10:16:44Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a54524c-4be1-44c4-b540-5a195c89d680",
        "parentId" : "b917a039-9f7a-451d-8a0c-f826b62e624f",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Without the forcing the copy I'm seeing `test_setitem_sequence` fail:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/1dd05ccf56b163dc51786e4f5ce76b279cc0dec3/pandas/tests/extension/base/setitem.py#L17-L23",
        "createdAt" : "2018-07-10T13:46:37Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 486,
    "diffHunk" : "@@ -1,1 +484,488 @@\n        # Need to ensure that left and right are updated atomically, so we're\n        # forced to copy, update the copy, and swap in the new values.\n        left = self.left.copy(deep=True)\n        if needs_float_conversion:"
  },
  {
    "id" : "10ded839-e757-4b04-9913-ffb78c4002c8",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-140211239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "228d21b0-71dc-4f02-8f2f-ad2c67c956c3",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jschendel a bit after the fact, but I don't think that we should add this to `IntervalArray`. We deprecated `itemsize` some time ago for Series/Index (https://github.com/pandas-dev/pandas/pull/20721). \r\nJust noticed this because we get the warning during the test:\r\n\r\n```\r\npandas/tests/indexes/interval/test_interval.py::TestIntervalIndex::()::test_itemsize\r\n  /home/travis/build/pandas-dev/pandas/pandas/core/arrays/interval.py:694: FutureWarning: Int64Index.itemsize is deprecated and will be removed in a future version\r\n    return self.left.itemsize + self.right.itemsize\r\n```",
        "createdAt" : "2018-07-24T08:54:33Z",
        "updatedAt" : "2018-07-24T08:54:34Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d7643510-16ba-41e4-96de-f0b44e463a41",
        "parentId" : "228d21b0-71dc-4f02-8f2f-ad2c67c956c3",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "This was originally part of `IntervalIndex` and is currently what `IntervalIndex` calls under the hood, so if we remove it from `IntervalArray` we'd need to add it back `IntervalIndex`.  Can certainly do that, unless there's some objection based on it making the two inconsistent.  Removing it from `IntervalArray` seems like the best course of action though.",
        "createdAt" : "2018-07-24T23:59:32Z",
        "updatedAt" : "2018-07-24T23:59:32Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "055a16ca-176c-4ef6-9d86-0bdf005781e5",
        "parentId" : "228d21b0-71dc-4f02-8f2f-ad2c67c956c3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, removing it from `IntervalArray` is the best way forward I think. \r\nAlso, on `IntervalIndex` it should be deprecated (now it is deprecated on the base IndexOpsMixin class, but by overriding it in IntervalIndex, it lost that deprecation. But apparently IntervalIndex is the only index that is not tested in the base tests, so this 'regression' was not catched by the tests).",
        "createdAt" : "2018-07-25T08:31:37Z",
        "updatedAt" : "2018-07-25T08:31:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "cd73a192-1be4-4df2-bf78-34b4a5b18334",
        "parentId" : "228d21b0-71dc-4f02-8f2f-ad2c67c956c3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Opened https://github.com/pandas-dev/pandas/issues/22049 so we don't loose track of this discussion",
        "createdAt" : "2018-07-25T08:33:58Z",
        "updatedAt" : "2018-07-25T08:33:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 694,
    "diffHunk" : "@@ -1,1 +692,696 @@    @property\n    def itemsize(self):\n        return self.left.itemsize + self.right.itemsize\n\n    def take(self, indices, allow_fill=False, fill_value=None, axis=None,"
  },
  {
    "id" : "c7855c50-fe9e-40d2-a46a-4826712807ff",
    "prId" : 22939,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22939#pullrequestreview-162265217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17922129-a783-460f-acc7-81a08f7dfacd",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add some examples to the docstring",
        "createdAt" : "2018-10-04T06:59:13Z",
        "updatedAt" : "2018-10-18T05:37:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0d0dc560-0898-47dc-80f6-27c124a4f21d",
        "parentId" : "17922129-a783-460f-acc7-81a08f7dfacd",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-10-06T18:03:29Z",
        "updatedAt" : "2018-10-18T05:37:18Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a765e93af569b9256835631fbbeb73f2b2bd77e2",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +1063,1067 @@        --------\n        Interval.overlaps : Check whether two Interval objects overlap.\n    \"\"\"\n\n    @Appender(_interval_shared_docs['overlaps'] % _shared_docs_kwargs)"
  },
  {
    "id" : "5f1f47d5-95c3-4746-83e4-7a847b9e8122",
    "prId" : 22939,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22939#pullrequestreview-168185605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2af7bfc-0eb0-412d-94df-7419cc6b3bfa",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do we intend to eventually support `IntervalArray.overlaps(IntervalArray)`, where the arrays are the same shape?",
        "createdAt" : "2018-10-24T11:21:26Z",
        "updatedAt" : "2018-10-24T11:21:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "bc46ff7d-a624-4cb4-b95e-445b05ae2fb2",
        "parentId" : "c2af7bfc-0eb0-412d-94df-7419cc6b3bfa",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "There was discussion about this in #18975 but no consensus on the behavior.  I'd be open to implementing it if there is demand. I could see adding a `how` parameter that accepts `{'any', 'all', 'pairwise'}`  to determine the behavior (e.g. for `'any'`/`'all'` the boolean indicates if the given interval overlaps any/all of the intervals in the supplied array, and `'pairwise'` requiring the lengths to be the same and indicating if the nth element overlaps the nth element of the supplied array.\r\n\r\nI don't have a use case for `IntervalArray.overlaps(IntervalArray)` though, so not entirely sure what portions of the above are practically useful, if any, or if some other behavior would be more commonly used.  The `'pairwise'` option would be straightforward to implement, with the other two maybe requiring some care to implement in a performant manner.",
        "createdAt" : "2018-10-25T02:06:51Z",
        "updatedAt" : "2018-10-25T02:06:52Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a765e93af569b9256835631fbbeb73f2b2bd77e2",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1068,1072 @@    def overlaps(self, other):\n        if isinstance(other, (IntervalArray, ABCIntervalIndex)):\n            raise NotImplementedError\n        elif not isinstance(other, Interval):\n            msg = '`other` must be Interval-like, got {other}'"
  },
  {
    "id" : "e987179c-d8bb-4f72-8af1-ba2c8b0e35e9",
    "prId" : 23157,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23157#pullrequestreview-167831573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "540e1a56-e461-4bc0-99da-2f9ba71cb47c",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think we should keep this out of the docs until we know if or how to expose this publicly (which will in any case not be `pd.core.arrays.IntervalArray`)",
        "createdAt" : "2018-10-15T09:26:57Z",
        "updatedAt" : "2018-10-18T03:48:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "30f26f4c-0187-4016-bc54-c45019e2483c",
        "parentId" : "540e1a56-e461-4bc0-99da-2f9ba71cb47c",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "`ci/code_checks.sh` won't check the `IntervalArray` docstring if the Examples section is missing.  I've added a TODO note to myself to modify the example once `IntervalArray` has been made public; can open an issue for it as well if need be.\r\n\r\nThe issue for making extension arrays public has a milestone of 0.24.0, so I should be able to address this prior to release, and it should just be a matter of pasting the updated call. Can remove the example though, if you'd still prefer that approach.",
        "createdAt" : "2018-10-16T06:00:42Z",
        "updatedAt" : "2018-10-18T03:48:50Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "5086286b-3cc7-4650-9560-9b4a80c64544",
        "parentId" : "540e1a56-e461-4bc0-99da-2f9ba71cb47c",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "ping @jorisvandenbossche : thoughts on the above?",
        "createdAt" : "2018-10-24T01:58:14Z",
        "updatedAt" : "2018-10-24T01:58:14Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "2b6d4de9-9512-485a-9d52-1261c1abc9c5",
        "parentId" : "540e1a56-e461-4bc0-99da-2f9ba71cb47c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, let's decide about it / clean-up later",
        "createdAt" : "2018-10-24T10:16:08Z",
        "updatedAt" : "2018-10-24T10:16:08Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "af757a0d13ed48bca644047d176d46620672c612",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +111,115 @@    ``Interval`` objects:\n\n    >>> pd.core.arrays.IntervalArray([pd.Interval(0, 1), pd.Interval(1, 5)])\n    IntervalArray([(0, 1], (1, 5]],\n                  closed='right',"
  },
  {
    "id" : "6c38d9be-660e-41a7-89bf-672863de967f",
    "prId" : 24395,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24395#pullrequestreview-187581306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd2f50bd-3002-4a06-a6d5-13a18837e54d",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "The base class implementation works for `IntervalArray` as well, but a couple off-the-cuff timings had this implementation 1.5x - 2x faster.",
        "createdAt" : "2018-12-22T05:38:34Z",
        "updatedAt" : "2018-12-23T21:02:25Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "88ab2853eb56bcb8c595680cc33449534a84f5f6",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1003,1007 @@\n    @Appender(_extension_array_shared_docs['repeat'] % _shared_docs_kwargs)\n    def repeat(self, repeats, *args, **kwargs):\n        nv.validate_repeat(args, kwargs)\n        left_repeat = self.left.repeat(repeats)"
  }
]