[
  {
    "id" : "bb85392f-205a-4b11-a5f3-01b6d33550b7",
    "prId" : 4502,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6ec70f7-0d98-4aac-8c6e-a59b908b7743",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe? add `raise_on_error=False`, which you could automatically just exclude non-numeric\n\nor just do it by definition; I think we do this is for example describe (it should just work); \n",
        "createdAt" : "2013-08-26T12:41:42Z",
        "updatedAt" : "2013-08-26T12:41:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bd8e2dde-5c5d-4e67-a0e7-af02f098ebf5",
        "parentId" : "a6ec70f7-0d98-4aac-8c6e-a59b908b7743",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "I think Categorical was the thing that throws.\n\nIs there a neat way to just include only numerics from a Series?\n\nMaybe call `numeric_only` like groupby: https://github.com/pydata/pandas/commit/dda23636354136f753561ead07bdbe88b21fa5ae. Not sure it should be default though.\n",
        "createdAt" : "2013-08-26T12:49:16Z",
        "updatedAt" : "2013-08-26T12:49:16Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      },
      {
        "id" : "aceb43ca-7daf-4aea-9a41-3f46fbf030c4",
        "parentId" : "a6ec70f7-0d98-4aac-8c6e-a59b908b7743",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "going to push somethign to enable `_get_numeric_data/_get_bool_data` in all NDFrame shortly\n",
        "createdAt" : "2013-08-26T13:11:57Z",
        "updatedAt" : "2013-08-26T13:11:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "85f191cbdca7f1d83aab05e226cb921b03e9b638",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +149,153 @@\n\ndef value_counts(values, sort=True, ascending=False, normalize=False, bins=None):\n    \"\"\"\n    Compute a histogram of the counts of non-null values"
  },
  {
    "id" : "02b847af-cd96-4bb2-9f09-311b4bccc738",
    "prId" : 7424,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df762937-e2dc-4843-9d48-ecc999cdb075",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think this should be `True`?\n",
        "createdAt" : "2014-06-17T12:51:17Z",
        "updatedAt" : "2014-06-17T12:51:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "26139f3804cdc25d29325972a24c55e10cd2567f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +185,189 @@        Rather than count values, group them into half-open bins,\n        convenience for pd.cut, only works with numeric data\n    dropna : boolean, default False\n        Don't include counts of NaN\n"
  },
  {
    "id" : "7a0329c2-c1e3-4f4c-933d-3bc0c14cde58",
    "prId" : 15929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15929#pullrequestreview-31449836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c06416c-b949-4b43-b55e-4f84787fca28",
        "parentId" : null,
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "Not a big deal, but seems a little strange that `value_counts_...` and `duplicated_...` are free functions and not based on hashtable classes? Would unify the the dispatch.",
        "createdAt" : "2017-04-06T22:33:19Z",
        "updatedAt" : "2017-04-06T23:06:38Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      },
      {
        "id" : "df70e4d9-88e9-41f7-891c-b0d5337dd04b",
        "parentId" : "7c06416c-b949-4b43-b55e-4f84787fca28",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not sure what you mean. These are cython functions.",
        "createdAt" : "2017-04-06T22:55:32Z",
        "updatedAt" : "2017-04-06T23:06:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "76653eb6e4a63152c5a6ceaad2d8d4af6a667415",
    "line" : 576,
    "diffHunk" : "@@ -1,1 +585,589 @@\n        # TODO: handle uint8\n        f = getattr(htable, \"value_count_{dtype}\".format(dtype=ndtype))\n        keys, counts = f(values, dropna)\n"
  },
  {
    "id" : "67b5588a-122a-48e9-8ca0-456e3d34c574",
    "prId" : 15929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15929#pullrequestreview-31551694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d4a94f4-6876-4cb7-973f-0591ed125504",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is exposed at the top-level, so can you keep the docstring of `unique` ? (put it in `unique1D`)",
        "createdAt" : "2017-04-07T12:40:33Z",
        "updatedAt" : "2017-04-07T12:47:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b688e0d9-7291-472c-91f9-47a355e18e83",
        "parentId" : "9d4a94f4-6876-4cb7-973f-0591ed125504",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes, i'll push it.",
        "createdAt" : "2017-04-07T12:49:42Z",
        "updatedAt" : "2017-04-07T12:49:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "76653eb6e4a63152c5a6ceaad2d8d4af6a667415",
    "line" : 360,
    "diffHunk" : "@@ -1,1 +279,283 @@\n\nunique = unique1d\n\n"
  },
  {
    "id" : "6d8a9628-06fd-4d24-97e5-1b4a59dcd49a",
    "prId" : 15929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15929#pullrequestreview-34527475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7817fc9c-7b5b-489c-9ccd-ab52dd997656",
        "parentId" : null,
        "authorId" : "e415801c-69ed-4339-9d12-a31599b4bb41",
        "body" : "EDIT: The better way seems to be returning `f, values` here",
        "createdAt" : "2017-04-25T05:38:42Z",
        "updatedAt" : "2017-04-25T05:38:42Z",
        "lastEditedBy" : "e415801c-69ed-4339-9d12-a31599b4bb41",
        "tags" : [
        ]
      },
      {
        "id" : "391a4da5-94fb-45bd-9d32-b68c77085876",
        "parentId" : "7817fc9c-7b5b-489c-9ccd-ab52dd997656",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "thanks\r\nhttps://github.com/pandas-dev/pandas/pull/16128",
        "createdAt" : "2017-04-25T10:47:05Z",
        "updatedAt" : "2017-04-25T10:47:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "76653eb6e4a63152c5a6ceaad2d8d4af6a667415",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +213,217 @@        if lib.infer_dtype(values) in ['string']:\n            try:\n                f = func_map['string']\n            except KeyError:\n                pass"
  },
  {
    "id" : "8d4b4c72-1b5f-4788-9a9a-939e10efadf6",
    "prId" : 17006,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17006#pullrequestreview-50779661",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "951a8f83-78fb-40e8-ab7d-5a7fd013a0ea",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "check perf on some of the algos\r\nesp isin\r\n",
        "createdAt" : "2017-07-18T09:17:32Z",
        "updatedAt" : "2017-07-18T09:17:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "13b4c5b0-d404-4a86-a8e8-512924d25d2a",
        "parentId" : "951a8f83-78fb-40e8-ab7d-5a7fd013a0ea",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I didn't see any noticeable perf degradations on my machine.",
        "createdAt" : "2017-07-18T14:53:34Z",
        "updatedAt" : "2017-07-18T14:53:35Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "a653d9cc-beda-462e-9663-9ed69945c08b",
        "parentId" : "951a8f83-78fb-40e8-ab7d-5a7fd013a0ea",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did you run the asv? this can degrade as its in a critical path. notice there is *already* a check for object type later on. This function  receives LOTS of input.",
        "createdAt" : "2017-07-18T23:30:46Z",
        "updatedAt" : "2017-07-18T23:30:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9f257dfa-1742-4bbb-8b71-be5987a55358",
        "parentId" : "951a8f83-78fb-40e8-ab7d-5a7fd013a0ea",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Not quite: the existing check is for the `values`.  This is for the `dtype` specified.  This is essentially an `O(1)` operation.\r\n\r\nAnd yes, I did check performance (see my comment above), and I didn't see any issues on my machine.",
        "createdAt" : "2017-07-19T00:35:51Z",
        "updatedAt" : "2017-07-19T00:36:03Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2cec7774896545169f39b36d7c13a42a69c1a35",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +66,70 @@    # we check some simple dtypes first\n    try:\n        if is_object_dtype(dtype):\n            return _ensure_object(np.asarray(values)), 'object', 'object'\n        if is_bool_dtype(values) or is_bool_dtype(dtype):"
  }
]