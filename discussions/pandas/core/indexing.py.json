[
  {
    "id" : "27211d1a-7293-4287-99db-b8feec1a910b",
    "prId" : 4515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7e8ad3c-add9-4fd8-81b3-5dc88fd7b880",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@jreback is this supposed to return `None`?\n",
        "createdAt" : "2013-09-06T01:20:19Z",
        "updatedAt" : "2013-09-06T01:20:19Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "c1ace866-fb2f-4655-925c-d3e7bfad1197",
        "parentId" : "e7e8ad3c-add9-4fd8-81b3-5dc88fd7b880",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no...they will just raise if needed\n",
        "createdAt" : "2013-09-06T02:37:58Z",
        "updatedAt" : "2013-09-06T02:37:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "00b6c8990bbc906171f17148649a88717f12c930",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +992,996 @@\n    def _has_valid_setitem_indexer(self, indexer):\n        self._has_valid_positional_setitem_indexer(indexer)\n\n    def _getitem_tuple(self, tup):"
  },
  {
    "id" : "74baa006-e215-4249-a4aa-a2e9ef5c0652",
    "prId" : 4515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed92cd6a-ab43-410c-8d12-7c281def57a3",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "I guess it's just inconsistent with this method. No big deal.\n",
        "createdAt" : "2013-09-06T03:22:11Z",
        "updatedAt" : "2013-09-06T03:22:11Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "00b6c8990bbc906171f17148649a88717f12c930",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +104,108 @@\n    def _has_valid_setitem_indexer(self, indexer):\n        return True\n\n    def _has_valid_positional_setitem_indexer(self, indexer):"
  },
  {
    "id" : "58c2748a-0d4b-42e7-ae7c-654e15ed1e25",
    "prId" : 9741,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "874ab920-5f83-43b5-953d-5d3f8e5b7bbf",
        "parentId" : null,
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "you have a lot in the `try` block here. Can you use an `else` clause to limit the amount of code the attribute error checks?\n",
        "createdAt" : "2015-04-09T00:51:01Z",
        "updatedAt" : "2015-04-20T11:19:36Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "db968f0f-9b67-47e2-bea4-defcd63f3de9",
        "parentId" : "874ab920-5f83-43b5-953d-5d3f8e5b7bbf",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you realize all of this code was just moved from indexing it's not new\nbut will see what I can do\n",
        "createdAt" : "2015-04-09T00:55:14Z",
        "updatedAt" : "2015-04-20T11:19:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c468ca78-0f63-4e89-953a-f90c2289d2cd",
        "parentId" : "874ab920-5f83-43b5-953d-5d3f8e5b7bbf",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "OK, OK :)\n",
        "createdAt" : "2015-04-09T00:59:22Z",
        "updatedAt" : "2015-04-20T11:19:36Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecf8514cf14a12511368abf0e61373775cc65c6d",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +965,969 @@                    return result\n\n                except AttributeError:\n\n                    # Series"
  },
  {
    "id" : "cbb61b97-83d2-46aa-ac82-65d68bc7224c",
    "prId" : 10838,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/10838#pullrequestreview-273437412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e653741b-d4db-4652-a86e-554f96ef4693",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@jreback looks like this is intended for Panel, but is still reached.  Any chance it is unnecessary?  Or more specifically, I'd like to rule out the possibility of `take_split_path = True` being set on 224 for `Series`.  Is that unreachable for some reason?",
        "createdAt" : "2019-07-11T19:43:12Z",
        "updatedAt" : "2019-07-11T19:43:12Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "06508ae4-3f39-483b-bd97-8b43c9389495",
        "parentId" : "e653741b-d4db-4652-a86e-554f96ef4693",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "umm maybe, the whole take_split_path is based on the notion that we have a block  of a single type and we are indexing into it for smaller number of columns than the whole block so we *might* need to split it before we index. fairly dense & complicated, but necessary in some way.\r\n\r\nto answer your question though, I agree you might be able to remove this entire clause.",
        "createdAt" : "2019-07-11T20:28:11Z",
        "updatedAt" : "2019-07-11T20:28:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bc260497-0a22-476c-b8eb-4ed73b89c180",
        "parentId" : "e653741b-d4db-4652-a86e-554f96ef4693",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Apparently there was still a use case: https://github.com/pandas-dev/pandas/pull/27855",
        "createdAt" : "2019-08-10T19:45:05Z",
        "updatedAt" : "2019-08-10T19:45:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f07e582aef5a3ca6e3f406c56c38a8b26b6c69d9",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +224,228 @@                    take_split_path = True\n                    break\n\n        if isinstance(indexer, tuple):\n            nindexer = []"
  },
  {
    "id" : "252bbadd-4260-460c-9533-9b75ee1fc452",
    "prId" : 17956,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17956#pullrequestreview-71356884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11a109ee-80ac-4925-9c72-b43b4847248e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did you reverse these on purpose?",
        "createdAt" : "2017-10-23T17:33:52Z",
        "updatedAt" : "2017-10-27T11:09:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0d189361-c0fc-4265-b3c1-33ec0429a882",
        "parentId" : "11a109ee-80ac-4925-9c72-b43b4847248e",
        "authorId" : "7c84fc55-a848-4ca2-a014-28c856c6d6e2",
        "body" : "Yes, so that we can use `functools.partial(indexer, name)` to shave a few % more. If that's not important, I can revert to the original order.",
        "createdAt" : "2017-10-23T19:56:56Z",
        "updatedAt" : "2017-10-27T11:09:20Z",
        "lastEditedBy" : "7c84fc55-a848-4ca2-a014-28c856c6d6e2",
        "tags" : [
        ]
      },
      {
        "id" : "132d509a-4af0-413e-ac45-b6bee2aff275",
        "parentId" : "11a109ee-80ac-4925-9c72-b43b4847248e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok this is not a big deal to reverse.",
        "createdAt" : "2017-10-23T23:09:46Z",
        "updatedAt" : "2017-10-27T11:09:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "efe021daebcca3d706aa8ced3eb90c2e12c41fb4",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +93,97 @@\n    def __call__(self, axis=None):\n        # we need to return a copy of ourselves\n        new_self = self.__class__(self.name, self.obj)\n"
  },
  {
    "id" : "c58a5fa9-2ded-4ca3-9f15-ecf9d4da85eb",
    "prId" : 20219,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20219#pullrequestreview-102865550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c342d3c-2d6f-4f77-a748-00a0fd4f11ec",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this also works on a Series, can you re-word to accomodate",
        "createdAt" : "2018-03-10T21:48:52Z",
        "updatedAt" : "2018-03-11T12:42:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8d690dae-0757-4ded-8aac-ae304d951edd",
        "parentId" : "2c342d3c-2d6f-4f77-a748-00a0fd4f11ec",
        "authorId" : "c11b0217-90c0-40f2-9f60-68651d6a0b9e",
        "body" : "Great point, I specified that `iat` works for both a `DataFrame` and a `Series` (below the comment, so Github isn't collapsing it here). Let me know if you want be to reword it any differently. I also added an example for using it on `Series`. ",
        "createdAt" : "2018-03-10T22:56:06Z",
        "updatedAt" : "2018-03-11T12:42:56Z",
        "lastEditedBy" : "c11b0217-90c0-40f2-9f60-68651d6a0b9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa387ad59a62562c94cce30a4737994b994a8396",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1924,1928 @@    Access a single value for a row/column pair by integer position.\n\n    Similar to ``iloc``, in that both provide integer-based lookups. Use\n    ``iat`` if you only need to get or set a single value in a DataFrame\n    or Series."
  },
  {
    "id" : "f6a0f8ff-e47b-4386-a5e9-9ccaf84f5fa6",
    "prId" : 20228,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20228#pullrequestreview-103206806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99758b10-d143-4ee5-a0a2-0f7443d1c51b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add Series.iloc",
        "createdAt" : "2018-03-11T14:30:01Z",
        "updatedAt" : "2018-07-07T19:56:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "645ced63-8393-49a4-a362-3942ce52c4fb",
        "parentId" : "99758b10-d143-4ee5-a0a2-0f7443d1c51b",
        "authorId" : "e489c7ff-5ce0-45ee-863e-a48295e6f249",
        "body" : "added Series.iloc",
        "createdAt" : "2018-03-11T18:29:21Z",
        "updatedAt" : "2018-07-07T19:56:36Z",
        "lastEditedBy" : "e489c7ff-5ce0-45ee-863e-a48295e6f249",
        "tags" : [
        ]
      },
      {
        "id" : "1bf05b2f-323b-4bac-a524-46210965aa50",
        "parentId" : "99758b10-d143-4ee5-a0a2-0f7443d1c51b",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you look at other PRs for those accessors to have a consistent way to reference them? See eg https://github.com/pandas-dev/pandas/pull/20229/files, They use:\r\n\r\n```\r\n    DateFrame.at : Access a single value for a row/column label pair\r\n    DateFrame.iloc : Access group of rows and columns by integer position(s)\r\n    Series.loc : Access group of values using labels\r\n```",
        "createdAt" : "2018-03-12T17:06:42Z",
        "updatedAt" : "2018-07-07T19:56:36Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "33219c6e-4766-4dba-8518-06212306aeae",
        "parentId" : "99758b10-d143-4ee5-a0a2-0f7443d1c51b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@tuhinmahmud make sure to pull my changes before looking into this. ",
        "createdAt" : "2018-03-12T20:27:59Z",
        "updatedAt" : "2018-07-07T19:56:36Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "329b05b0c67587836e906f4592b1aaf285cbebf3",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1952,1956 @@    --------\n    DataFrame.iat : Fast integer location scalar accessor.\n    DataFrame.loc : Purely label-location based indexer for selection by label.\n    Series.iloc : Purely integer-location based indexing for\n                   selection by position."
  }
]