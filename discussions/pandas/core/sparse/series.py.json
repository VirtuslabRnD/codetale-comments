[
  {
    "id" : "9932cde7-162c-4196-b56a-aecdd9accd48",
    "prId" : 17352,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17352#pullrequestreview-65573836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7b76c53-6b52-4195-94e3-1ad0d47281dc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same as above ``convert=None``",
        "createdAt" : "2017-09-27T10:36:54Z",
        "updatedAt" : "2017-10-01T06:13:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "eff7d792-6717-4b56-9270-b35683f6d8cf",
        "parentId" : "f7b76c53-6b52-4195-94e3-1ad0d47281dc",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Same answer as above.",
        "createdAt" : "2017-09-27T14:57:59Z",
        "updatedAt" : "2017-10-01T06:13:13Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "9325f21581d3ece0ba68ea2d7a029b59257de7d5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +608,612 @@\n        if not convert:\n            msg = (\"The 'convert' parameter is deprecated \"\n                   \"and will be removed in a future version.\")\n            warnings.warn(msg, FutureWarning, stacklevel=2)"
  },
  {
    "id" : "7412689c-fe42-47f4-9390-d015be7f1b06",
    "prId" : 22325,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22325#pullrequestreview-146138745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b12454eb-e092-44cd-8b12-ec9e19b7b5d4",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "or rather deprecate instead of putting effort in refactoring / sharing code with Series ?",
        "createdAt" : "2018-08-14T15:37:17Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "49a84f83-d2b2-47e1-b507-634c469936b8",
        "parentId" : "b12454eb-e092-44cd-8b12-ec9e19b7b5d4",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "You mean deprecate SparseSeries entirely? Yes, that seems like the best path forward.",
        "createdAt" : "2018-08-14T16:07:35Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aad8e1976bcbfb694d3591a5f9143ab7316f5bd",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +69,73 @@                 fill_value=None, name=None, dtype=None, copy=False,\n                 fastpath=False):\n        # TODO: Most of this should be refactored and shared with Series\n        # 1. BlockManager -> array\n        # 2. Series.index, Series.name, index, name reconciliation"
  },
  {
    "id" : "e599d212-bb17-4596-a18a-b081ee3df702",
    "prId" : 22325,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22325#pullrequestreview-163769358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jreback @jbrockmendel do we have any kind of \"dispatch unary ops to EA / ndarray\" code anywhere?",
        "createdAt" : "2018-09-26T14:15:01Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "6f2c279c-1eac-4f89-a18d-201b1345f95f",
        "parentId" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not that I'm aware of.  I think it would be a useful pattern, wouldn't need to be limited to unary ops.\r\n\r\nIn the arithmetic ops stuff there are a bunch of places where code could be shared/simplified if the `_constructor` call below were somehow generalized to work for both `DataFrame` and `SparseDataFrame`.  I think that may be the sticking point here too.",
        "createdAt" : "2018-09-26T20:03:02Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "522a7c44-6437-41fa-a129-278a8de35e2d",
        "parentId" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Well, hopefully SparseDataFrame can be deleted entirely :)",
        "createdAt" : "2018-09-26T20:11:28Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fad3aade-7047-45a7-b7f6-2976743ac8e0",
        "parentId" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> Well, hopefully SparseDataFrame can be deleted entirely :)\r\n\r\n+1",
        "createdAt" : "2018-09-26T23:44:40Z",
        "updatedAt" : "2018-10-13T08:12:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "42d7ef0c-184b-463c-8bdd-98023bdeeee2",
        "parentId" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I will open an issue about this, as the same problem happens for eg integer array:\r\n\r\n```\r\nIn [161]: s = pd.Series([1, 2, 3], dtype='Int64')\r\n\r\nIn [162]: -s\r\nOut[162]: \r\n0    -1\r\n1    -2\r\n2    -3\r\ndtype: object\r\n```",
        "createdAt" : "2018-10-11T11:25:46Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e583f440-4edd-4fbe-854d-c68348135d75",
        "parentId" : "3826fdcb-e7e6-45c1-92af-e92675e8a0a1",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "https://github.com/pandas-dev/pandas/issues/23087\r\n\r\nwill \"resolve\" this comment again",
        "createdAt" : "2018-10-11T11:31:57Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aad8e1976bcbfb694d3591a5f9143ab7316f5bd",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +138,142 @@\n    # unary ops\n    # TODO: See if this can be shared\n    def __pos__(self):\n        result = self.values.__pos__()"
  },
  {
    "id" : "ddf06e65-97b6-4c19-af36-0b4b63780803",
    "prId" : 22325,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22325#pullrequestreview-163618944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63ee17c6-d0f7-4adb-85f3-d74ebe7aa8d4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is only valid for new numpies, are you skipping somewhere?",
        "createdAt" : "2018-10-09T12:21:10Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b2c9bcc2-475c-465b-81d3-7e25212fd83c",
        "parentId" : "63ee17c6-d0f7-4adb-85f3-d74ebe7aa8d4",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "`SparseSeries__array_ufunc__` is only called from newer versions, no need to skip since this won't be called from older ones.",
        "createdAt" : "2018-10-09T13:40:15Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c4055789-7e90-44aa-9409-6cf274644b6d",
        "parentId" : "63ee17c6-d0f7-4adb-85f3-d74ebe7aa8d4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how is this?",
        "createdAt" : "2018-10-10T12:16:33Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0d32d9d6-155b-42c4-873c-802c37dfab2f",
        "parentId" : "63ee17c6-d0f7-4adb-85f3-d74ebe7aa8d4",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "For NumPy>=1.13, doing `ufunc(array)` first looks for `__array_ufunc__`. If that's defined on the class, it's called instead of the `__array__`, `__array_prepare__`, etc.\r\n\r\nNumPy < 1.13 don't know about `__array_ufunc__` so they're never called when you do `ufunc(array)`. In other words, the only way you get into `__array_ufunc__` is if you're in numpy>=1.13, so it's safe to directly call the `__array_ufunc__` from within another `__array_ufunc__`.",
        "createdAt" : "2018-10-10T12:26:51Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b3ae6cde-2b21-4cf3-8afb-0268f5d31d32",
        "parentId" : "63ee17c6-d0f7-4adb-85f3-d74ebe7aa8d4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i c ok then",
        "createdAt" : "2018-10-11T01:19:16Z",
        "updatedAt" : "2018-10-13T08:12:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aad8e1976bcbfb694d3591a5f9143ab7316f5bd",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +111,115 @@            for x in inputs\n        )\n        result = self.values.__array_ufunc__(ufunc, method, *inputs, **kwargs)\n        return self._constructor(result, index=self.index,\n                                 sparse_index=self.sp_index,"
  },
  {
    "id" : "df054736-78ba-4c5a-b3a5-f898d34ea091",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-238219915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e9b40b2-1a27-41c8-8732-9a469d6fbd81",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In this message, since it is shown in the constructor, you could even directly give the alternative of `pd.Series(pd.SparseArray(...))` ?",
        "createdAt" : "2019-05-16T08:40:56Z",
        "updatedAt" : "2019-05-28T20:38:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +41,45 @@See http://pandas.pydata.org/pandas-docs/stable/\\\nuser_guide/sparse.html#migrating for more.\n\"\"\"\n\n"
  },
  {
    "id" : "9d6299b2-839d-43cc-8a42-d3b6ea5b59df",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-243273972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54650904-5bf1-4f33-9bd4-7f4f13d1e908",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "typo",
        "createdAt" : "2019-05-29T13:51:03Z",
        "updatedAt" : "2019-05-29T13:51:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +47,51 @@    \"\"\"Data structure for labeled, sparse floating point data\n\n    .. deprectaed:: 0.25.0\n\n       Use a Series with sparse values instead."
  }
]