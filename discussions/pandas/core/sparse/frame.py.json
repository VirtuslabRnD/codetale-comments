[
  {
    "id" : "0750b088-37f7-4176-8cc0-58a5d0c6b4e7",
    "prId" : 17000,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17000#pullrequestreview-50481574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0e91ac1-83db-4c2d-a5eb-b403ef50c863",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Should we add a comment about why we don't use `np.full` ?",
        "createdAt" : "2017-07-17T23:46:37Z",
        "updatedAt" : "2017-07-17T23:46:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "499f67f9-f24c-430e-b7dc-38b0e314274a",
        "parentId" : "c0e91ac1-83db-4c2d-a5eb-b403ef50c863",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no, we don't use np.full anywhere in the code base at all (because its not compat with older numpy). you can add that in the numpy compat issue though (e.g. to use it once we move away from 1.7)",
        "createdAt" : "2017-07-17T23:51:43Z",
        "updatedAt" : "2017-07-17T23:51:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f3f03bfb-cfbc-40e3-85e4-0c136185eb3e",
        "parentId" : "c0e91ac1-83db-4c2d-a5eb-b403ef50c863",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Makes sense, and I see that you already added it in anticipation. :smile: ",
        "createdAt" : "2017-07-18T00:12:21Z",
        "updatedAt" : "2017-07-18T00:12:21Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bfd725e4eb13bc24074542e53522085bea6c8a3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +164,168 @@        # TODO: figure out how to handle this case, all nan's?\n        # add in any other columns we want to have (completeness)\n        nan_arr = np.empty(len(index), dtype='float64')\n        nan_arr.fill(np.nan)\n        nan_arr = sp_maker(nan_arr)"
  },
  {
    "id" : "f85bb7ba-93a7-4c57-a06b-78d1bb0a56d8",
    "prId" : 23060,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23060#pullrequestreview-168844600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcdd39da-985e-4644-973c-9f886995e589",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should these be isna checks?",
        "createdAt" : "2018-10-11T00:56:22Z",
        "updatedAt" : "2018-10-28T05:18:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9b799488-efb3-4971-98d3-c3dc8965ab20",
        "parentId" : "bcdd39da-985e-4644-973c-9f886995e589",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "At first I thought so, but the module-level docstring says only float64 is supported, so I kept the behavior as-is.  I think the overall takeaway is that this isn't especially well-maintained, and we should all look forward to Sparse EA.",
        "createdAt" : "2018-10-11T01:36:18Z",
        "updatedAt" : "2018-10-28T05:18:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "2245ed36-54c8-4d3e-af6c-c5dc4cc8ead4",
        "parentId" : "bcdd39da-985e-4644-973c-9f886995e589",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can this be amendednow that that Sparse EA is here? (followup ok too)",
        "createdAt" : "2018-10-26T01:38:20Z",
        "updatedAt" : "2018-10-28T05:18:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "968e3548-ae44-44d2-b5d3-7c8b31843f80",
        "parentId" : "bcdd39da-985e-4644-973c-9f886995e589",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I would recommend holding off on changing it.\r\n\r\n1. SparseDataFrame may be going away, so why bother.\r\n2. We may have to change the `default_fill_value` if we want its type to match that of `sp_values` (https://github.com/pandas-dev/pandas/issues/23124#issuecomment-432791397)",
        "createdAt" : "2018-10-26T11:27:04Z",
        "updatedAt" : "2018-10-28T05:18:19Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "6832c1aa-ed18-4c46-8bf6-5d84eb05414c",
        "parentId" : "bcdd39da-985e-4644-973c-9f886995e589",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Sounds good, thanks.",
        "createdAt" : "2018-10-26T14:16:50Z",
        "updatedAt" : "2018-10-28T05:18:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c43137380768f09b64e4de19bab5d03f98479e34",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +636,640 @@                # TOOD: won't this evaluate as False if both are np.nan?\n                fill_value = own_default\n            elif np.isnan(own_default) and not np.isnan(other_default):\n                fill_value = other_default\n            elif not np.isnan(own_default) and np.isnan(other_default):"
  },
  {
    "id" : "34e5b643-4afb-484c-b055-4aca76dcf134",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-243284275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea4f4893-b057-44da-b577-b043fffca46f",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "same here",
        "createdAt" : "2019-05-29T14:06:24Z",
        "updatedAt" : "2019-05-29T14:06:24Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +43,47 @@    objects\n\n    .. deprectaed:: 0.25.0\n\n       Use a DataFrame with sparse values instead."
  },
  {
    "id" : "9484800e-dd07-4957-b894-d8b9c5649d46",
    "prId" : 27302,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27302#pullrequestreview-259763928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f45e22e9-04ee-46e1-a3ac-7c3ea49cc85b",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is a dict acceptable here at all? Think we allow that for normal DataFrame fillna",
        "createdAt" : "2019-07-09T03:18:04Z",
        "updatedAt" : "2019-07-09T14:34:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "451c4c3d-9a7a-4aab-9a3c-17ab142f16ff",
        "parentId" : "f45e22e9-04ee-46e1-a3ac-7c3ea49cc85b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@TomAugspurger are there cases where non-scalar is accepted?  I was getting errors in another branch caused by zero-dim ndarray getting through here.",
        "createdAt" : "2019-07-09T14:35:42Z",
        "updatedAt" : "2019-07-09T14:35:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4bac6090-c182-4e00-b506-08f07e2a7e98",
        "parentId" : "f45e22e9-04ee-46e1-a3ac-7c3ea49cc85b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I don't believe we allow this (nor should)",
        "createdAt" : "2019-07-09T21:15:12Z",
        "updatedAt" : "2019-07-09T21:15:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c30a07fd31875c6ac8f67a69cc523ab08f7c24a5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +76,80 @@        copy=False,\n    ):\n        if not is_scalar(default_fill_value):\n            raise ValueError(\"'default_fill_value' must be a scalar\")\n"
  }
]