[
  {
    "id" : "222c7a36-321e-40b8-bb4a-649ca73c579f",
    "prId" : 24092,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24092#pullrequestreview-181417367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d692edfc-1d90-4c52-9fc5-f8182ebad18e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I *think* this is OK to do... `_sparse_series_to_coo` is the only caller, and it uses `_get_level_number(x)` to go from maybe labels to numbers.",
        "createdAt" : "2018-12-04T18:42:45Z",
        "updatedAt" : "2018-12-04T21:29:36Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce0e25cc37101a063cd8923dc7a3f5c8d69d1e4c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +59,63 @@\n        def _get_index_subset_to_coord_dict(index, subset, sort_labels=False):\n            ilabels = list(zip(*[index._get_level_values(i) for i in subset]))\n            labels_to_i = _get_label_to_i_dict(ilabels,\n                                               sort_labels=sort_labels)"
  },
  {
    "id" : "c80287de-395d-468a-a35b-ae66e04acf44",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-243009882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "234a8b40-dc84-4a7e-a0ba-388cbe608cb6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string here (types too if you can!)",
        "createdAt" : "2019-05-19T17:59:22Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "52d97e26-da3d-4024-94b9-8e81592b2911",
        "parentId" : "234a8b40-dc84-4a7e-a0ba-388cbe608cb6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Done. I'm not really sure on two things\r\n\r\n1. The type for A is `'scipy.sparse.coo.coo_matrix'`, but we can't import sparse.\r\n2. The return type is `Union[Series, SparseSeries]` but importing SparseSeries would cause a circular import\r\n\r\nso I left types off for those.",
        "createdAt" : "2019-05-20T19:09:52Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "619ccf75-c9bc-41dd-804a-df2484bb77e9",
        "parentId" : "234a8b40-dc84-4a7e-a0ba-388cbe608cb6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "1. can't you just use the string? (I think that works)\r\n2. same use the string",
        "createdAt" : "2019-05-26T15:29:14Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "82b85f32-f2b6-4644-bc1c-d15b85900457",
        "parentId" : "234a8b40-dc84-4a7e-a0ba-388cbe608cb6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can you? Are these types actually checked in our CI? I'd rather not introduce invalid types.",
        "createdAt" : "2019-05-28T14:05:58Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "6541eab7-7eb1-4770-a6dd-5072b57e5c6e",
        "parentId" : "234a8b40-dc84-4a7e-a0ba-388cbe608cb6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes they *should* be",
        "createdAt" : "2019-05-29T02:14:05Z",
        "updatedAt" : "2019-05-29T02:14:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +120,124 @@                          sparse_series: bool = True):\n    \"\"\"\n    Convert a scipy.sparse.coo_matrix to a SparseSeries.\n\n    Parameters"
  },
  {
    "id" : "c4214c60-aac6-49bf-b501-cd6b61f7c9c1",
    "prId" : 26137,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26137#pullrequestreview-242044682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4249d47-6b61-4c2f-898b-c7128e641c0e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why exactly do you need sparse_series flag? why can't we just do the astype *after* calling this routine?",
        "createdAt" : "2019-05-19T17:59:55Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "add8b7b2-56c4-40ca-a597-3a455714f439",
        "parentId" : "c4249d47-6b61-4c2f-898b-c7128e641c0e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This is called from both Series.sparse and SparseSeries.\r\n\r\nPreviously, this went coo_matrix -> SparseSeries -> Series[sparse], which caused an undesired warning for `Series.sparse.from_coo()`. Once SparseSeries is gone we can remove the keyword.",
        "createdAt" : "2019-05-20T19:05:52Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "ae86f7d4-1864-4fb9-89e4-bc3a53a1d449",
        "parentId" : "c4249d47-6b61-4c2f-898b-c7128e641c0e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok can you add a todo about this then, this is not obvious at all",
        "createdAt" : "2019-05-26T15:29:54Z",
        "updatedAt" : "2019-05-28T20:38:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "12d8d8300a3fdaa3ae8d0a2e0d3911e085910426",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +136,140 @@    s = Series(A.data, MultiIndex.from_arrays((A.row, A.col)))\n    s = s.sort_index()\n    if sparse_series:\n        # TODO(SparseSeries): remove this and the sparse_series keyword.\n        # This is just here to avoid a DeprecationWarning when"
  }
]