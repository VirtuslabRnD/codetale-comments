[
  {
    "id" : "cefe508e-9809-4019-ade7-46ea75523932",
    "prId" : 4144,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27fa5ab3-716c-4b7c-a75a-c3a711228c98",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "u could do `frame.columns.name or 'variable'` too :)\n",
        "createdAt" : "2013-07-06T02:00:14Z",
        "updatedAt" : "2013-07-06T02:00:14Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "cc067021-3017-4478-a567-92bbf7b86011",
        "parentId" : "27fa5ab3-716c-4b7c-a75a-c3a711228c98",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "...but just in case they had named their column False(y) :)\n",
        "createdAt" : "2013-07-06T07:42:12Z",
        "updatedAt" : "2013-07-06T07:42:12Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "920ef814e3b7fcecb3e4de9d4107f6e4753fe531",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +654,658 @@\n    if var_name is None:\n        var_name = frame.columns.name if frame.columns.name is not None else 'variable'\n\n    N, K = frame.shape"
  },
  {
    "id" : "f45adc05-03ec-4933-a7c6-9e2bde8dce8f",
    "prId" : 7041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ef82652-eb31-465e-8952-46ca64a5ede7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what does this fail with? (before the change)\n",
        "createdAt" : "2014-05-05T11:48:01Z",
        "updatedAt" : "2014-05-10T14:19:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8db4a63e-6c29-4683-bd11-cd5272154930",
        "parentId" : "3ef82652-eb31-465e-8952-46ca64a5ede7",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Resulted in `ValueError` because `PeriodIndex` cannot be created without `freq`.\n",
        "createdAt" : "2014-05-05T11:54:41Z",
        "updatedAt" : "2014-05-10T14:19:32Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "76d33a17df69f6b6f22cae11658ba9a99717445a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +83,87 @@\n        def _make_index(lev, lab):\n            if isinstance(lev, PeriodIndex):\n                i = lev.copy()\n            else:"
  },
  {
    "id" : "b9a1d1f0-ee51-444f-b87c-3954696b6975",
    "prId" : 7770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc806046-4795-43f4-8c2b-262d29a08e6c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "raise `ValueError` on the fall thru (e.g. i guess this is a list of mixed ints/names), pls add a test for this too\n",
        "createdAt" : "2014-07-17T13:12:52Z",
        "updatedAt" : "2014-07-21T02:10:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "782afbebc658fc699e133a5e0bc1a69e65269e53",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +577,581 @@                    updated_level.append(other)\n            level = updated_level\n\n    else:\n        raise ValueError(\"level should contain all level names or all level numbers, \""
  },
  {
    "id" : "dff1f12a-a20d-4dd4-8348-e06bd9363aa7",
    "prId" : 7770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8614d7c-ec0d-4acc-a41d-7bb6d38e4f06",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "put a blank line after the if/elif statements\n",
        "createdAt" : "2014-07-18T12:04:52Z",
        "updatedAt" : "2014-07-21T02:10:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "782afbebc658fc699e133a5e0bc1a69e65269e53",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +547,551 @@\ndef stack_multiple(frame, level, dropna=True):\n    # If all passed levels match up to column names, no\n    # ambiguity about what to do\n    if all(lev in frame.columns.names for lev in level):"
  },
  {
    "id" : "bcc290bf-14f1-484b-8ddd-527b018035cc",
    "prId" : 9061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af7c156c-c2d6-4a81-a327-2fbff6c732df",
        "parentId" : null,
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "perhaps use .copy() here rather than list. ?\n",
        "createdAt" : "2014-12-19T02:58:17Z",
        "updatedAt" : "2014-12-22T00:16:08Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3afd5b7b948f1438553a2194937d3b094ef262a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +86,90 @@        self.lift = 1 if -1 in self.index.labels[self.level] else 0\n\n        self.new_index_levels = list(index.levels)\n        self.new_index_names = list(index.names)\n"
  },
  {
    "id" : "e6aac32d-c333-4a0c-ac43-02eb2de403c9",
    "prId" : 9292,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "248ca341-9899-486c-b89c-68e648be0dae",
        "parentId" : null,
        "authorId" : "8b404822-a597-42dd-b567-818788cb72c8",
        "body" : "`_make_new_index(lev, lab)` doesn't seem to handle the dtype properly for a `DatetimeIndex` when `lab` contains `-1`:\n\n```\nIn : idx = pd.Index([datetime.now()])\nOut:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2015-02-12 16:00:12.487944]\nLength: 1, Freq: None, Timezone: None\n\nIn : _make_new_index(idx, None)  # doesn't convert back to DatetimeIndex\nOut: Index([NaT, 1423756812487944000], dtype='object')\n\nIn : _make_new_index(idx, [0])  # properly converts back to DatetimeIndex\nOut:\n[2015-02-12 16:00:12.487944]\nLength: 1, Freq: None, Timezone: None\n\nIn : _make_new_index(idx, [0, -1])  # doesn't convert back to DatetimeIndex\nOut: Index([1423756812487944000, NaT], dtype='object')\n\nIn [309]: Index([datetime.now(), None])  # for comparison\nOut[309]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2015-02-12 16:17:09.616120, NaT]\nLength: 2, Freq: None, Timezone: None\n```\n\nI need this in order to get `stack()` to work properly with `NaN`/`NaT` in indices for https://github.com/pydata/pandas/pull/9023.\n",
        "createdAt" : "2015-02-12T21:15:13Z",
        "updatedAt" : "2015-02-12T21:18:15Z",
        "lastEditedBy" : "8b404822-a597-42dd-b567-818788cb72c8",
        "tags" : [
        ]
      },
      {
        "id" : "6f04a8e4-8b1c-4f11-a34f-aa76f2c07437",
        "parentId" : "248ca341-9899-486c-b89c-68e648be0dae",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@seth-p I think this last is prob a bug, pls open a new report (with your example above is good). and we can fix independently (and you can rebase on top)\n\non 2nd thought, you can do as part of #9023 as this is an internal method\n",
        "createdAt" : "2015-02-12T21:32:01Z",
        "updatedAt" : "2015-02-12T21:32:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3dc474ad-0286-4524-a10e-9ca8f144cdee",
        "parentId" : "248ca341-9899-486c-b89c-68e648be0dae",
        "authorId" : "8b404822-a597-42dd-b567-818788cb72c8",
        "body" : "If I can fix it I will (as part of #9023), otherwise will punt back to @behzadnouri. :-)\n",
        "createdAt" : "2015-02-12T21:50:29Z",
        "updatedAt" : "2015-02-12T21:50:29Z",
        "lastEditedBy" : "8b404822-a597-42dd-b567-818788cb72c8",
        "tags" : [
        ]
      },
      {
        "id" : "6cbb5bcc-94c2-48c6-a43e-9c0a2e0b98db",
        "parentId" : "248ca341-9899-486c-b89c-68e648be0dae",
        "authorId" : "8b404822-a597-42dd-b567-818788cb72c8",
        "body" : "OK, I think adding the following  code just before the `try` fixes `_make_new_index(lev, lab)`. I will include it in #9023.\n\n```\n    if lev.dtype.type == np.datetime64:\n        nan_indices = [0] if lab is None else (np.array(lab) == -1)\n        vals[nan_indices] = None\n```\n",
        "createdAt" : "2015-02-13T01:39:26Z",
        "updatedAt" : "2015-02-13T01:39:26Z",
        "lastEditedBy" : "8b404822-a597-42dd-b567-818788cb72c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e513486e6c101ef91d0726428b2dcdb208a82475",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +250,254 @@\n    return lev._shallow_copy(vals)\n\n\ndef _unstack_multiple(data, clocs):"
  }
]