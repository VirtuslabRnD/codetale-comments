[
  {
    "id" : "15e3940d-4e20-421f-a98e-74bc5d116859",
    "prId" : 25953,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25953#pullrequestreview-231480475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bcb978c-4253-4a3a-a13c-6f3d5e3576ae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some comments here on what is being checked",
        "createdAt" : "2019-04-28T18:28:12Z",
        "updatedAt" : "2019-04-28T20:04:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "92858c1c497dc2b5dff8a889da7093674e7a6a8a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +524,528 @@\n    # is this an index replacement?\n    if (not any_callable and not any_arraylike and not any_groupers and\n            match_axis_length and level is None):\n        if isinstance(obj, DataFrame):"
  },
  {
    "id" : "83cdf5d7-433b-43de-b5d3-33637d95b81f",
    "prId" : 29456,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29456#pullrequestreview-314631448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3215153c-bb35-41ac-8d70-0fa5f7b23d7d",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why is this needed?",
        "createdAt" : "2019-11-10T17:51:56Z",
        "updatedAt" : "2019-11-12T19:59:49Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "9ad486b3-7300-4322-8b43-0fa57b48f430",
        "parentId" : "3215153c-bb35-41ac-8d70-0fa5f7b23d7d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is for my own benefit in trying to reason about this code.",
        "createdAt" : "2019-11-10T17:57:20Z",
        "updatedAt" : "2019-11-12T19:59:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3d4850150a0b39db41db3d10027c0cd0482d9f",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +155,159 @@            whether the resulting grouper should be sorted\n        \"\"\"\n        assert obj is not None\n\n        if self.key is not None and self.level is not None:"
  },
  {
    "id" : "d680e58a-f69e-4cfb-981e-5067b05e5877",
    "prId" : 29458,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29458#pullrequestreview-313598149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "So is there no impact changing this from a set to a list? If not, does it even need to be a container?",
        "createdAt" : "2019-11-07T16:01:40Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "fe99e59e-fc08-46f8-8f2d-ff1e7354539e",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "This just makes the types consistent for all returns. A set or a list is not important when there's only 1 item in the container.",
        "createdAt" : "2019-11-07T16:06:38Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "0f56213c-79d7-461a-851a-aed9d9aa01e6",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "BTW It sometimes has lists with several items, so needs to be a list/container.",
        "createdAt" : "2019-11-07T16:07:40Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "c60ff5f5-e40c-4e2f-9ea7-ac6868226435",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm not sure I follow. Maybe better to ask what the error was that mypy was giving? I assume this gets mutated outside of the function right?",
        "createdAt" : "2019-11-07T16:14:53Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "40ea4d3a-84bf-4e79-b5f6-aed045e4f498",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Oh, it wasn't a mypy error, I think the function should have a clear return type, so ``List`` rather than ``Contaioner``.\r\n\r\n(More general): I think function may have broad parameter types, but should strive to have clear return types, so there's less ambiguity over what you're looking at. Don't you agree?",
        "createdAt" : "2019-11-07T17:34:38Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "1a7b78b7-cb9b-4730-9ac8-252e15218abd",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "OK. Yea I'm not necessarily saying the old container type was correct and this is wrong, I guess was just questioning why this even needs to be held in a container if it's simply one value being returned.\r\n\r\nCan be refactored or reviewed in a follow up if that's a big effort; not a blocker as is",
        "createdAt" : "2019-11-07T17:39:10Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "5dc7b589-ca1d-4472-ab68-626fecf570e9",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Yeah, I'm haven't checked if a single value could be returned, instead of the list.\r\n\r\nMy motivation for doing this is mostly wanting to pin down what I'm looking at in ``groupBy``, ``Grouper`` etc. I think \"real\" clean-ups must come later. It's quite complex to me now, and I'm hoping these typeups will ease understanding.",
        "createdAt" : "2019-11-07T17:55:24Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "57690ca1-03e3-414d-a08a-9b01a7d144a5",
        "parentId" : "2cfd9300-1501-447c-ba9f-f8d9f738bc6f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Sounds good. Yea this part of code is tricky and could use some refactor, so this is all moving in the right direction",
        "createdAt" : "2019-11-07T19:56:32Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "015a22370a7b090cbe134ee088a7d0b1b42ba4c3",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +517,521 @@            return grouper, [], obj\n        else:\n            return grouper, [key.key], obj\n\n    # already have a BaseGrouper, just return it"
  },
  {
    "id" : "688f0757-1ff8-4098-adfa-ee51b9178bad",
    "prId" : 29458,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29458#pullrequestreview-313517707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d846d624-b867-444c-a460-08d2b4c54cb1",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "there are some places in these modules where `name` attrs are annotated as `str` or `Optional[str]` where Hashable would be more accurate I think",
        "createdAt" : "2019-11-07T17:41:32Z",
        "updatedAt" : "2019-11-07T22:09:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "015a22370a7b090cbe134ee088a7d0b1b42ba4c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4,8 @@\"\"\"\n\nfrom typing import Hashable, List, Optional, Tuple\nimport warnings\n"
  },
  {
    "id" : "3fdd5bd4-c206-4c14-8e57-848e0636f13d",
    "prId" : 29675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29675#pullrequestreview-318124264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abc09e7b-ef5b-4631-9682-43b4fed0b245",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "any reason to add quotes? don't we lose the black formatting checking by doing this?",
        "createdAt" : "2019-11-17T21:47:56Z",
        "updatedAt" : "2019-11-17T21:47:56Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "a0eeb58f-888f-4a5f-afec-36863bec4ad1",
        "parentId" : "abc09e7b-ef5b-4631-9682-43b4fed0b245",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Without the quotes we get a circular import error, so needs to be quoted.",
        "createdAt" : "2019-11-18T06:48:39Z",
        "updatedAt" : "2019-11-18T06:48:39Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "30bdcab6453f7ea13c8dc6a05c23ccdccc7a7d7b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +443,447 @@    mutated: bool = False,\n    validate: bool = True,\n) -> \"Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]\":\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal"
  },
  {
    "id" : "1f0cf310-8919-4103-8cc5-51f84b4053cd",
    "prId" : 29701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29701#pullrequestreview-320865570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd101592-4e30-4c0b-ba9a-05c250f99dfa",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can you do this in two steps so as to not have the getattr inside the fstring",
        "createdAt" : "2019-11-19T02:31:21Z",
        "updatedAt" : "2019-11-21T10:56:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1384b043-79d4-4899-a1af-d21dfe9a23e0",
        "parentId" : "bd101592-4e30-4c0b-ba9a-05c250f99dfa",
        "authorId" : "639e1068-364a-496d-9556-58ff12c8b29f",
        "body" : "@jbrockmendel Not really sure how to do this in two steps since attr_name is generated from a list comprehension. Do I just drop list comprehension usage in that case?",
        "createdAt" : "2019-11-19T08:19:37Z",
        "updatedAt" : "2019-11-21T10:56:51Z",
        "lastEditedBy" : "639e1068-364a-496d-9556-58ff12c8b29f",
        "tags" : [
        ]
      },
      {
        "id" : "54af0596-ba0e-49d7-8177-10ce1c64fffa",
        "parentId" : "bd101592-4e30-4c0b-ba9a-05c250f99dfa",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "```\r\nattr_tups = ((name, getatttr(self, name)) for name in self._attributes)\r\nattr_tups = (x for x in attr_tups if x[1] is not None)\r\nattrs_list = (f\"{attr_name}={attr_val!r}\" of attr_name, attr_val in attr_tups)\r\n```",
        "createdAt" : "2019-11-19T15:32:58Z",
        "updatedAt" : "2019-11-21T10:56:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "8d298989-6677-4379-9745-35eabd056bd4",
        "parentId" : "bd101592-4e30-4c0b-ba9a-05c250f99dfa",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this usage seems ok to me",
        "createdAt" : "2019-11-21T13:03:33Z",
        "updatedAt" : "2019-11-21T13:03:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd51a3ab7a2454edd37516dab0c4144e70699ae2",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +209,213 @@    def __repr__(self) -> str:\n        attrs_list = (\n            f\"{attr_name}={getattr(self, attr_name)!r}\"\n            for attr_name in self._attributes\n            if getattr(self, attr_name) is not None"
  },
  {
    "id" : "7c4a11eb-1590-464b-98d6-aa4b5f8935b5",
    "prId" : 30584,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30584#pullrequestreview-391665490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d748d18-1a7a-481a-bf05-ec53cc86758f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "type what you are adding",
        "createdAt" : "2020-01-05T22:04:37Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "13ad3ec7-8579-4506-aad5-5e1696ae3cac",
        "parentId" : "2d748d18-1a7a-481a-bf05-ec53cc86758f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "added",
        "createdAt" : "2020-02-10T20:28:13Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "b5ede615-e9d4-46b5-820c-b37160d601bc",
        "parentId" : "2d748d18-1a7a-481a-bf05-ec53cc86758f",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "emm, added and got the error below, i think this needs to have typing validation for this `Grouper` class\r\n\r\n```\r\npandas/core/groupby/grouper.py:138: error: Incompatible types in assignment (expression has type \"BaseGrouper\", variable has type \"None\")\r\npandas/core/groupby/grouper.py:138: error: Value of type variable \"FrameOrSeries\" of \"get_grouper\" cannot be \"None\"\r\npandas/core/groupby/grouper.py:176: error: \"None\" has no attribute \"take\"\r\npandas/core/groupby/grouper.py:204: error: Incompatible types in assignment (expression has type \"FrameOrSeries\", variable has type \"None\")\r\n```\r\n",
        "createdAt" : "2020-02-10T20:59:27Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "c6f6307e-ad22-4c24-a78d-e28fe6646c6f",
        "parentId" : "2d748d18-1a7a-481a-bf05-ec53cc86758f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "kk can do as a followon",
        "createdAt" : "2020-04-10T21:12:37Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ea6aa019fdfe76f6ca3445d12aaf0cace9e0b35",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +136,140 @@\n    def __init__(\n        self, key=None, level=None, freq=None, axis=0, sort=False, dropna=True\n    ):\n        self.key = key"
  },
  {
    "id" : "975cadea-1ab9-4a08-a2c6-d76fb90e3f05",
    "prId" : 30584,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30584#pullrequestreview-391750425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "231e3da7-5ace-44d4-8948-e8201d70dfe4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "extra line is added here again?",
        "createdAt" : "2020-04-10T21:12:57Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dc1e698b-5ba3-4f49-b13a-c80a9a47dd79",
        "parentId" : "231e3da7-5ace-44d4-8948-e8201d70dfe4",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "removed!",
        "createdAt" : "2020-04-11T09:13:38Z",
        "updatedAt" : "2020-05-07T07:08:32Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ea6aa019fdfe76f6ca3445d12aaf0cace9e0b35",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +299,303 @@        self.observed = observed\n        self.in_axis = in_axis\n        self.dropna = dropna\n\n        # right place for this?"
  },
  {
    "id" : "309f8f1b-b72d-46a4-ba2d-3986a0c999f8",
    "prId" : 31809,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31809#pullrequestreview-359406512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdc6b376-fb85-45f1-ba95-9407b908dadc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comments as above",
        "createdAt" : "2020-02-15T02:25:34Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "63de9f29-398a-429b-9c11-a6e733583b5b",
        "parentId" : "bdc6b376-fb85-45f1-ba95-9407b908dadc",
        "authorId" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "body" : "Fixed in the last commit.",
        "createdAt" : "2020-02-16T14:15:20Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ddd9b6cd3b1769abade95e94c45728005a9a97",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +72,76 @@        range from 0 through 4. Defaults to 0.\n\n        .. deprecated:: 1.1.0\n            The new arguments that you should use are 'offset' or 'origin'.\n"
  },
  {
    "id" : "05b5f78d-86c4-438b-9d79-b259dbff4c85",
    "prId" : 31809,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31809#pullrequestreview-359406521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d83000c2-4fc4-4234-b216-2ea78c1a1921",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2020-02-15T02:25:42Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "97ce9e9c-a891-4245-976b-93fccc54ba93",
        "parentId" : "d83000c2-4fc4-4234-b216-2ea78c1a1921",
        "authorId" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "body" : "Fixed in the last commit.",
        "createdAt" : "2020-02-16T14:15:27Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ddd9b6cd3b1769abade95e94c45728005a9a97",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +79,83 @@\n        .. deprecated:: 1.1.0\n            loffset is only working for ``.resample(...)`` and not for\n            Grouper (:issue:`28302`).\n            However, loffset is also deprecated for ``.resample(...)``"
  },
  {
    "id" : "858fa97a-c7b0-4420-b00d-e5b190c6c616",
    "prId" : 31809,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31809#pullrequestreview-367686417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc4bdf1f-07c9-4e96-bd38-597a04ade099",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comments as above",
        "createdAt" : "2020-03-03T03:53:35Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ddd9b6cd3b1769abade95e94c45728005a9a97",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +154,158 @@    2000-01-16    3.0   40.0\n\n    If you want to adjust the start of the bins based on a fixed timestamp:\n\n    >>> start, end = '2000-10-01 23:30:00', '2000-10-02 00:30:00'"
  },
  {
    "id" : "198dd6de-1e54-416a-b4de-a6728f447a11",
    "prId" : 31809,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31809#pullrequestreview-387729295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5290ffd1-fa78-42f5-92b7-92ba07d30284",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "huh? this seems odd to do this",
        "createdAt" : "2020-03-03T03:54:05Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3f211df9-481c-4d01-87c6-c38132ced0ee",
        "parentId" : "5290ffd1-fa78-42f5-92b7-92ba07d30284",
        "authorId" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "body" : "Well. I wanted to avoid a circular imports here. Do you have a better solution ?\r\nThe real issue is that the warning needs to appear properly between resample AND pd.Grouper...\r\n\r\nI explained the full issue (and an alternative solution) in an earlier comment of mine here:\r\nhttps://github.com/pandas-dev/pandas/pull/31809#discussion_r379860446\r\n\r\nSo. What should I do?",
        "createdAt" : "2020-03-04T11:18:12Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "tags" : [
        ]
      },
      {
        "id" : "0bc9e6ac-6103-46bf-a359-a6557ae0896a",
        "parentId" : "5290ffd1-fa78-42f5-92b7-92ba07d30284",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "umm, don't validate here at all. you can simply validate all fo the args IN TimeGrouper itself. doing it here and there is so confusing.",
        "createdAt" : "2020-04-03T22:47:31Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f821d7f9-3413-4a31-8159-c37bffb39e98",
        "parentId" : "5290ffd1-fa78-42f5-92b7-92ba07d30284",
        "authorId" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "body" : "Yeah I agree with you, but the main issue with this (and it has been quite frustrating) is that I need to handle correctly the warning `stacklevel`. However, I managed to handle the warning in only one place in `Grouper.__new__`. I decided to explain the all thing into a big comment block since it was very confusing since the beginning.\r\nI hope that solve the issue!",
        "createdAt" : "2020-04-04T19:47:48Z",
        "updatedAt" : "2020-05-09T21:51:14Z",
        "lastEditedBy" : "60d0b690-e46d-489b-9e53-1306cfe27fca",
        "tags" : [
        ]
      }
    ],
    "commit" : "05ddd9b6cd3b1769abade95e94c45728005a9a97",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +228,232 @@        if kwargs.get(\"freq\") is not None:\n            from pandas.core.resample import TimeGrouper\n\n            # Deprecation warning of `base` and `loffset` since v1.1.0:\n            # we are raising the warning here to be able to set the `stacklevel`"
  },
  {
    "id" : "279d8334-86e7-4904-bd7f-d777af2ec344",
    "prId" : 35852,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35852#pullrequestreview-477635268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08876f8f-8095-4340-94d6-311e599adde6",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Could maybe also be `na_sentinel=-1 if self.dropna else None` (if that fits on the line)",
        "createdAt" : "2020-08-27T21:04:14Z",
        "updatedAt" : "2020-09-02T14:12:13Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "5d1cabf8-32cf-430f-bcb7-6d42c1701ae2",
        "parentId" : "08876f8f-8095-4340-94d6-311e599adde6",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "yeha, i tried this already, but black would split it to multi-line since it is 90 words + long\r\n\r\ndo you still prefer to have this? i could also change this way.",
        "createdAt" : "2020-08-28T07:15:05Z",
        "updatedAt" : "2020-09-02T14:12:13Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "fa6ad8b3-08b1-48ca-b5cb-911218438b44",
        "parentId" : "08876f8f-8095-4340-94d6-311e599adde6",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In that case fine as it is!",
        "createdAt" : "2020-08-28T10:56:43Z",
        "updatedAt" : "2020-09-02T14:12:13Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf8641aec20d62705e55ec6f658d257be477e64b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +594,598 @@                    na_sentinel = -1\n                codes, uniques = algorithms.factorize(\n                    self.grouper, sort=self.sort, na_sentinel=na_sentinel\n                )\n                uniques = Index(uniques, name=self.name)"
  },
  {
    "id" : "fe2257b1-74de-4140-8bf1-d5ce9a9e9b9a",
    "prId" : 35939,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35939#pullrequestreview-478226776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5efca857-d4e7-454d-b0b8-06022f8150d0",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "is this needed.\r\n\r\nare the type annotations for `def group_index(self) -> Index` and `_group_index: Optional[Index] = None` correct.\r\n\r\nin \\_\\_init__\r\n\r\n```\r\nself._group_index = CategoricalIndex(..\r\n```\r\nor \r\n```\r\n(\r\n                self.grouper,\r\n                self._codes,\r\n                self._group_index,\r\n            ) = index._get_grouper_for_level(self.grouper, level)\r\n\r\n```\r\nso self._group_index  can only be CategoricalIndex or None and group_index can only be CategoricalIndex ?\r\n\r\n",
        "createdAt" : "2020-08-28T11:49:31Z",
        "updatedAt" : "2020-08-29T23:59:58Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "b291407e-cbe2-4d4a-bf3b-0dac832e24a6",
        "parentId" : "5efca857-d4e7-454d-b0b8-06022f8150d0",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "IIRC its the self.all_grouper check a few lines up that ensures we have a CategoricalIndex here",
        "createdAt" : "2020-08-28T17:07:08Z",
        "updatedAt" : "2020-08-29T23:59:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4bdaf328-fc78-4dd5-928d-b5f43af27fbe",
        "parentId" : "5efca857-d4e7-454d-b0b8-06022f8150d0",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "self.all_grouper is not None when is_categorical_dtype(self.grouper) so I don't think that narrows it. (but I may need to trace through further)",
        "createdAt" : "2020-08-30T19:03:21Z",
        "updatedAt" : "2020-08-30T19:03:21Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bde6dacb40da849962ab53943b7986213fe64cf4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +571,575 @@            group_idx = self.group_index\n            assert isinstance(group_idx, CategoricalIndex)  # set in __init__\n            return recode_from_groupby(self.all_grouper, self.sort, group_idx)\n        return self.group_index\n"
  }
]