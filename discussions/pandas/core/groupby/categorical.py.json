[
  {
    "id" : "63acab29-8912-470b-a117-7d00fc12a750",
    "prId" : 38140,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38140#pullrequestreview-561476683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Moved from `Categorical.unique`. This keeps groupbys working unchanged.",
        "createdAt" : "2020-11-28T20:02:50Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "2efc0946-7091-4c19-bf9c-b5f2cf85b0bc",
        "parentId" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "What changes/breaks if you don't include this? \r\n\r\nNormally, the categorical its categories doesn't include any NaNs, so I don't fully understand the comment.\r\n\r\nAlso, if we don't want to drop unobserved categories in unique, don't we want to do the same change in groupby?",
        "createdAt" : "2020-12-07T21:18:36Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "16eb132b-ca82-4615-85b2-a7a65460769c",
        "parentId" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "The comment refers to nans in `cat` (a `Categorical`), not its categories.\r\n\r\nThis section is not optimal and is just to keep the same behaviour as previously in groupbys. This can be changed in follow-ups. I don't think this can be untangled without breaking behaviour, e.g. this method of removing unused categories is different than using `remove_unused categories`.\r\n\r\nI think we should just accept this smelly bit here here and fix this whole function in followups.\r\n",
        "createdAt" : "2020-12-12T11:16:56Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "26add4c3-11ff-4955-ab7d-9a9c0851ea6e",
        "parentId" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But can you explain (or show with an example) what behaviour in groupby would change if this code was not included here?\r\n\r\n> This section ... is just to keep the same behaviour as previously in groupbys. This can be changed in follow-ups. I don't think this can be untangled without breaking behaviour\r\n\r\nYes, but we are breaking the behaviour of `unique()` on purpose, so it might be that we want to make the exact same break in groupby?",
        "createdAt" : "2020-12-14T08:47:46Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "13e8ffea-7192-4cde-98dd-f148cc699e66",
        "parentId" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> But can you explain (or show with an example) what behaviour in groupby would change if this code was not included here?\r\n\r\nI suppose it is related to the categories of the resulting key index/column after grouping on a categorical:\r\n\r\n```\r\nIn [45]: df = pd.DataFrame({\"key\": pd.Categorical([\"c\", \"b\", \"b\"], categories=[\"a\", \"b\", \"c\"]), \"values\": range(3)})\r\n\r\nIn [46]: df.groupby(\"key\").sum().index\r\nOut[46]: CategoricalIndex(['a', 'b', 'c'], categories=['a', 'b', 'c'], ordered=False, name='key', dtype='category')\r\n\r\nIn [47]: df.groupby(\"key\", sort=False).sum().index\r\nOut[47]: CategoricalIndex(['c', 'b', 'a'], categories=['c', 'b', 'a'], ordered=False, name='key', dtype='category')\r\n\r\nIn [51]: df = pd.DataFrame({\"key\": pd.Categorical([\"c\", \"b\", \"b\"], categories=[\"a\", \"b\", \"c\"],  ordered=True), \"values\": range(3)})\r\n\r\nIn [52]: df.groupby(\"key\").sum().index\r\nOut[52]: CategoricalIndex(['a', 'b', 'c'], categories=['a', 'b', 'c'], ordered=True, name='key', dtype='category')\r\n\r\nIn [53]: df.groupby(\"key\", sort=False).sum().index\r\nOut[53]: CategoricalIndex(['b', 'c', 'a'], categories=['b', 'c', 'a'], ordered=True, name='key', dtype='category')\r\n```\r\n\r\nSo it seems we have a very similar issue here about the order of the resulting categories of the dtype which is not preserved (since it relied on the behaviour of `unique` before)",
        "createdAt" : "2020-12-14T08:52:58Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b09fb3de-59dd-48c4-af0a-37f145f5f210",
        "parentId" : "a422635d-7f4a-4044-8b4f-c7c61f40b09c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm i think @jorisvandenbossche is right here. if you *don't* add the code here, how much to update the groupby tests? ",
        "createdAt" : "2021-01-05T02:31:22Z",
        "updatedAt" : "2021-04-16T14:27:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0616c202f3ccd9407fea32d625689fec02f4b6f9",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +82,86 @@    if cat.ordered:\n        take_codes = np.sort(take_codes)\n    cat = cat.set_categories(cat.categories.take(take_codes))\n\n    # But for groupby to work, all categories should be present,"
  }
]