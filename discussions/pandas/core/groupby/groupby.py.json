[
  {
    "id" : "173e37d9-c899-44b3-bf9e-331fb853d2c0",
    "prId" : 20405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20405#pullrequestreview-191753545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65f27a92-18b0-4d50-beca-2c997aec2645",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe you want to show the signature as a comment of the Callable[object, dict]",
        "createdAt" : "2019-01-11T16:46:43Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fc15b010-f9ce-4ab4-9d96-8cb7e63f1a94",
        "parentId" : "65f27a92-18b0-4d50-beca-2c997aec2645",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Are you asking to do that in this docstring or as a type hint in the implementations themselves?",
        "createdAt" : "2019-01-11T16:55:21Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "1d8f0fef-c90d-400d-a018-4fec12068515",
        "parentId" : "65f27a92-18b0-4d50-beca-2c997aec2645",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "both",
        "createdAt" : "2019-01-11T16:58:04Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec013bf03c03a4c5124150bba7549f64d4f9ca90",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +2004,2008 @@            by the Cython operation. Raises if `needs_values` is False.\n        post_processing : function, default None\n            Function to be applied to result of Cython function. Should accept\n            an array of values as the first argument and type inferences as its\n            second argument, i.e. the signature should be"
  },
  {
    "id" : "322328fa-148b-4817-b021-5fbd13e7cefe",
    "prId" : 20405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20405#pullrequestreview-191759334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43f2e938-14ee-4b55-bf2b-27fb47b69907",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "FYI this will fail if we try to pass in `post_processing` with `pre_processing` as `inferences` will be undefined in that case. Since it's all internal I suppose not a big deal for now, but could also add an explicit check at the start of the function if it doesn't add too much bloat.",
        "createdAt" : "2019-01-11T17:12:33Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec013bf03c03a4c5124150bba7549f64d4f9ca90",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +2064,2068 @@\n            if post_processing:\n                result = post_processing(result, inferences)\n\n            output[name] = result"
  },
  {
    "id" : "ec67eb91-40e0-47b6-804b-b85d0866cf13",
    "prId" : 20405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20405#pullrequestreview-191985812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69df0bd4-3d87-43a0-ad1c-53c9f5427a6b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just define ``inference = None`` at the top then you wont ever have a NameError",
        "createdAt" : "2019-01-13T18:52:31Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec013bf03c03a4c5124150bba7549f64d4f9ca90",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +2045,2049 @@            inferences = None\n\n            if needs_values:\n                vals = obj.values\n                if pre_processing:"
  },
  {
    "id" : "981a3320-fdfc-4120-878c-5889342a671e",
    "prId" : 20405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20405#pullrequestreview-194797355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7a1abb4-e5bc-4eba-9610-08c7ec0a41e1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not really what I meant, this is a (ndarray, dict)",
        "createdAt" : "2019-01-13T18:52:50Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5a768b38-c0cc-46d9-8b13-4c7fed9bbe50",
        "parentId" : "e7a1abb4-e5bc-4eba-9610-08c7ec0a41e1",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Well on a second pass the dict was unnecessary so I ended up just returning the type. I suppose it could either be an actual type object or a string so this is an approximation of that for simplicity, though could update to include a string as well",
        "createdAt" : "2019-01-22T00:25:29Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec013bf03c03a4c5124150bba7549f64d4f9ca90",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +2007,2011 @@            an array of values as the first argument and type inferences as its\n            second argument, i.e. the signature should be\n            (ndarray, typing.Type).\n        **kwargs : dict\n            Extra arguments to be passed back to Cython funcs"
  },
  {
    "id" : "fec41287-63b3-4d74-b3e8-5a3a1d4b9cdc",
    "prId" : 20583,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20583#pullrequestreview-116549858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6be4bb3-dcc0-49ae-8485-f6be1045ba9f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why not have it as `False` default? (if we want to deprecate in the future, we can then just use `None` ?)",
        "createdAt" : "2018-05-01T12:13:11Z",
        "updatedAt" : "2018-05-01T12:26:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdf7525812ca670f9406ab8df333030d36d30947",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +2908,2912 @@\n    def __init__(self, index, grouper=None, obj=None, name=None, level=None,\n                 sort=True, observed=None, in_axis=False):\n\n        self.name = name"
  },
  {
    "id" : "b31397e8-1bc0-40c9-b33c-c548e54c32c3",
    "prId" : 20583,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20583#pullrequestreview-116549858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0348e5f3-8ba4-445f-b9c4-001563cdd3b1",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "should this comment be removed for now?",
        "createdAt" : "2018-05-01T12:14:58Z",
        "updatedAt" : "2018-05-01T12:26:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdf7525812ca670f9406ab8df333030d36d30947",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +4745,4749 @@        # TODO(jreback): remove completely\n        # when observed parameter is defaulted to True\n        # gh-20583\n\n        if self.observed:"
  },
  {
    "id" : "afc68891-62df-479e-ab0c-e633a65fe186",
    "prId" : 20613,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20613#pullrequestreview-116476509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fb6d5d9-f1b2-47ac-a8ad-5ca83f4bbe88",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same here, there are like 10 calls to concat. I think should be explicit about sort",
        "createdAt" : "2018-05-01T00:12:00Z",
        "updatedAt" : "2018-05-01T00:20:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e1b0241358c10893939d135e91ab16cfa48cadd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1099,1103 @@\n                result = concat(values, axis=self.axis, keys=group_keys,\n                                levels=group_levels, names=group_names,\n                                sort=False)\n            else:"
  },
  {
    "id" : "5343bcd4-98ec-490d-997e-1c88d530308b",
    "prId" : 21573,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21573#pullrequestreview-131227129",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5b6711b-4e94-4503-98e8-cb901e979a0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@reidy-p pushed a simplification. but maybe need some additional tests that do this when a column is selected\r\n\r\ne.g. ``df.groupby('id', as_index=False)['foo'].first()``",
        "createdAt" : "2018-06-22T10:32:16Z",
        "updatedAt" : "2018-06-22T17:15:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "aecf316d-554b-4c05-9c0d-c1b3bb033a53",
        "parentId" : "e5b6711b-4e94-4503-98e8-cb901e979a0b",
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "Nice simplification. I added some new tests.",
        "createdAt" : "2018-06-22T14:54:50Z",
        "updatedAt" : "2018-06-22T17:15:57Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef5d5b180a6c9eb2abbfc40b731ba84368266bcf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4741,4745 @@    def _wrap_agged_blocks(self, items, blocks):\n        if not self.as_index:\n            index = np.arange(blocks[0].values.shape[-1])\n            mgr = BlockManager(blocks, [items, index])\n            result = DataFrame(mgr)"
  },
  {
    "id" : "2b24ba4f-c391-44c5-8026-7c751db4c133",
    "prId" : 22811,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22811#pullrequestreview-157935485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df38b2be-c9b7-4147-a233-096837486bf9",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "``Index.difference`` tries to sort its result by default and this means that sometimes the order of the columns was changed from the original DataFrame. I added a new ``sort`` parameter to ``Index.difference`` with a default of True to control this.",
        "createdAt" : "2018-09-23T10:55:45Z",
        "updatedAt" : "2018-11-18T22:59:13Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a23f7558ccde3710e8786320c28e4d271a7ca9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +496,500 @@            # GH12839 clear selected obj cache when group selection changes\n            self._group_selection = ax.difference(Index(groupers),\n                                                  sort=False).tolist()\n            self._reset_cache('_selected_obj')\n"
  },
  {
    "id" : "2544a794-2de4-4744-aca1-25dab966488e",
    "prId" : 23886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23886#pullrequestreview-178065922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3516811-5bdd-4011-a6b9-b06141d2fd8e",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Do you mind adding a period here too?",
        "createdAt" : "2018-11-25T00:32:47Z",
        "updatedAt" : "2018-11-27T05:31:53Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b34280bd9e7fec3dd77b4d43041452cb914c5869",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +1144,1148 @@        Compute median of groups, excluding missing values.\n\n        For multiple groupings, the result index will be a MultiIndex\n        \"\"\"\n        try:"
  }
]