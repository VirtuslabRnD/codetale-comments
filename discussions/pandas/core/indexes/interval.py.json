[
  {
    "id" : "021ae96a-3291-4596-9432-5fa843f484b8",
    "prId" : 17482,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17482#pullrequestreview-62425572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa633c7-29b3-4770-afea-917ba27f35e0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "much cleaner, nice!",
        "createdAt" : "2017-09-13T12:53:24Z",
        "updatedAt" : "2017-09-14T05:33:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6cc86053ed1cdfaaaa0b5b23be259f087acc54e",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +1139,1143 @@        raise ValueError(msg.format(end=end))\n\n    if is_float(periods):\n        periods = int(periods)\n    elif not is_integer(periods) and periods is not None:"
  },
  {
    "id" : "4dc28e3b-2f96-46ba-9bb2-ddcaa81ac45f",
    "prId" : 17482,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17482#pullrequestreview-62643417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbffd073-80a9-4b30-91b9-b7f6d5d37c44",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this what we do elsewhere? this is effectively floored not that this is bad, just wondering if its consistent",
        "createdAt" : "2017-09-13T12:54:19Z",
        "updatedAt" : "2017-09-14T05:33:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a602d97-2dc4-4e07-b0fc-e92e4f3e33b4",
        "parentId" : "bbffd073-80a9-4b30-91b9-b7f6d5d37c44",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "It's floored elsewhere too, e.g. https://github.com/pandas-dev/pandas/blob/f11bbf2f505d81900cc83ce387a6a1b1d2a2f866/pandas/core/indexes/period.py#L199-L200\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/fa557f7391589f351b1260f46b3b3db22492f50b/pandas/core/indexes/datetimes.py#L292-L293\r\n",
        "createdAt" : "2017-09-14T05:33:53Z",
        "updatedAt" : "2017-09-14T05:33:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6cc86053ed1cdfaaaa0b5b23be259f087acc54e",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +1161,1165 @@    if is_number(endpoint):\n        if periods is None:\n            periods = int((end - start) // freq)\n\n        if start is None:"
  },
  {
    "id" : "97e88e6c-dd90-4084-b211-9d789180ce77",
    "prId" : 17563,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17563#pullrequestreview-63329260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17aa3829-48c8-4fff-9b9c-725717e4fced",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We are discussing to change this behaviour, but the above is still correct on master. However, I would change the example to already add `get_loc(Interval(..))` cases (the case we intent to keep working, the scalar numerical value might raise in the future). So that way we can just remove those case that will not be valid anymore, but keep the exact match for actual Interval objects examples.",
        "createdAt" : "2017-09-18T11:23:47Z",
        "updatedAt" : "2017-09-20T14:58:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b0161d6c-791a-4db6-bb62-967faae16959",
        "parentId" : "17aa3829-48c8-4fff-9b9c-725717e4fced",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Added an interval example",
        "createdAt" : "2017-09-18T12:08:09Z",
        "updatedAt" : "2017-09-20T14:58:10Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "28c9c89e8ea1232070519dca2adf2b6b78f5ec1f",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +723,727 @@        >>> overlapping_index = pd.IntervalIndex.from_intervals([i2, i3])\n        >>> overlapping_index.get_loc(1.5)\n        array([0, 1], dtype=int64)\n        \"\"\"\n        self._check_method(method)"
  },
  {
    "id" : "c51ec7ed-7403-4693-b6b5-42bb99c97d58",
    "prId" : 18202,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18202#pullrequestreview-75990417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51a8f2ea-03c5-4dd6-92e0-20bd3a42bc3c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this right?",
        "createdAt" : "2017-11-13T03:16:03Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f60ca122-d665-47d5-89ac-c2f5afc53bcd",
        "parentId" : "51a8f2ea-03c5-4dd6-92e0-20bd3a42bc3c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yeah, if it's just the attribute name the attribute docstring is filled in. But currently that's buggy because `@cache_readonly` doesn't copy of the docstring.",
        "createdAt" : "2017-11-13T03:21:27Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "34834fae25bd7ea1eb6a364c9d2c841e0837eb38",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +122,126 @@    copy : boolean, default False\n        Copy the meta-data\n    mid\n    values\n    is_non_overlapping_monotonic"
  },
  {
    "id" : "741d2114-e0d8-4b73-a4cb-0a432f1d2f32",
    "prId" : 18300,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18300#pullrequestreview-76988448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26000461-0cf4-40c3-bb72-fa9f2760f73d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes u need to use a nan compat with left iow this could be a NaT",
        "createdAt" : "2017-11-15T07:24:36Z",
        "updatedAt" : "2017-11-25T04:05:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bf80b462-dbce-43b9-8d5b-068d5d21ce45",
        "parentId" : "26000461-0cf4-40c3-bb72-fa9f2760f73d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think we have a left.na_value iirc (might be spelled differently)",
        "createdAt" : "2017-11-15T07:26:51Z",
        "updatedAt" : "2017-11-25T04:05:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4cf27e39-b266-468d-860f-66986ba142fa",
        "parentId" : "26000461-0cf4-40c3-bb72-fa9f2760f73d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "or maybe the underlying already handles this in the insert",
        "createdAt" : "2017-11-15T07:27:34Z",
        "updatedAt" : "2017-11-25T04:05:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "027e772f-2701-45ae-b66d-49b500a7a1e1",
        "parentId" : "26000461-0cf4-40c3-bb72-fa9f2760f73d",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Updated.  Procedure I'm following is \"check if any type of NA value is passed -> raise if the wrong type of NA is passed\".  I suppose I could just bypass this and only check if the right type of NA is passed, if that would be preferred.",
        "createdAt" : "2017-11-16T01:42:50Z",
        "updatedAt" : "2017-11-25T04:05:28Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e40103261b31126da621a899a248706e608fd206",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1010,1014 @@        elif is_scalar(item) and isna(item):\n            # GH 18295\n            left_insert = right_insert = item\n        else:\n            raise ValueError('can only insert Interval objects and NA into '"
  },
  {
    "id" : "f8c2cb4e-aa19-408c-be47-24e4a03a67d1",
    "prId" : 19231,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19231#pullrequestreview-88694964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8abf883d-3263-4269-ba94-5d421974be4c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you could do:`` not is_dtype(equal(dtype, self.dtype)``",
        "createdAt" : "2018-01-13T21:50:09Z",
        "updatedAt" : "2018-01-13T21:54:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6f25314d-30a0-41b9-a58d-c2c0edc680d3",
        "parentId" : "8abf883d-3263-4269-ba94-5d421974be4c",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "I think this needs to be a bit more specific than `not is_dtype_equal`; what this is really looking for is an `IntervalDtype` with a different subtype than the existing dtype.  Just having `not is_dtype_equal` would allow non-interval dtypes to pass through as well.\r\n\r\nI could make the \"different subtype\" part more explicit with `and not is_dtype_equal(dtype.subtype, self.dtype.subtype)`.  Though this would be a partial dupe of the `IntervalDtype.__eq__` logic.  Could also just add a comment noting the \"different subtype\" part, if that would be preferable.",
        "createdAt" : "2018-01-14T19:32:43Z",
        "updatedAt" : "2018-01-14T19:32:44Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "75a2d925-95a4-4f51-b7d8-7dc48a55a0b8",
        "parentId" : "8abf883d-3263-4269-ba94-5d421974be4c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I c, this is ok then. these are guaranteed to be II types and thus they are comparable",
        "createdAt" : "2018-01-14T21:26:27Z",
        "updatedAt" : "2018-01-14T21:26:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8caf9f2e1e87327941920c1d676e3ef3fe3c31f9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +702,706 @@    def astype(self, dtype, copy=True):\n        dtype = pandas_dtype(dtype)\n        if is_interval_dtype(dtype) and dtype != self.dtype:\n            try:\n                new_left = self.left.astype(dtype.subtype)"
  },
  {
    "id" : "8839c4b3-661b-46ac-af08-59cb6f5120c8",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-90687269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10571540-0299-4935-8009-61ed87d37713",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a version added ",
        "createdAt" : "2018-01-22T11:25:05Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "09914af1-a737-42c8-ad3d-3285a3132d52",
        "parentId" : "10571540-0299-4935-8009-61ed87d37713",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-23T01:48:02Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +154,158 @@        Copy the meta-data\n    dtype : dtype or None, default None\n        If None, dtype will be inferred\n\n        ..versionadded:: 0.23.0"
  },
  {
    "id" : "87cc8b86-58ef-4ea9-8156-29846e36d6fd",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-90687320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f7a5bae-4052-445c-a465-b6b9d2ed58d3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "vesionadded",
        "createdAt" : "2018-01-22T11:26:35Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6e99f6a8-bf97-4858-ace7-18b6b39a2294",
        "parentId" : "2f7a5bae-4052-445c-a465-b6b9d2ed58d3",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-23T01:48:23Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +431,435 @@            copy the data\n        dtype : dtype or None, default None\n            If None, dtype will be inferred\n\n            ..versionadded:: 0.23.0"
  },
  {
    "id" : "a34463b1-17de-4d23-ae9a-6af33003623a",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-90687344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbff361d-4176-4881-bf2d-889cdd27915c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2018-01-22T11:26:42Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ef5052d7-99a6-424b-b094-ca3b9e3d4bc5",
        "parentId" : "dbff361d-4176-4881-bf2d-889cdd27915c",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-23T01:48:33Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +475,479 @@            copy the data\n        dtype : dtype or None, default None\n            If None, dtype will be inferred\n\n            ..versionadded:: 0.23.0"
  },
  {
    "id" : "92e599cf-6d63-4682-a6dc-3bac1dbb0d5e",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-90687399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbed1b99-fcb2-43ea-820f-e162566cb8a3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2018-01-22T11:27:05Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "46a45ffe-d6b7-4c5a-ae03-bd97a6296e0f",
        "parentId" : "fbed1b99-fcb2-43ea-820f-e162566cb8a3",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-23T01:48:55Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +569,573 @@            by-default copy the data, this is compat only and ignored\n        dtype : dtype or None, default None\n            If None, dtype will be inferred\n\n            ..versionadded:: 0.23.0"
  },
  {
    "id" : "a4a9f3fc-5542-44c6-9548-fec7cd444c1c",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-91089369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b58a5111-658e-41bf-be4c-b76d89226c9b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a 1-liner here, noting that this must be an interval dtype",
        "createdAt" : "2018-01-23T11:38:28Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5cd7dde6-7e51-414a-b905-ba7d93903a05",
        "parentId" : "b58a5111-658e-41bf-be4c-b76d89226c9b",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-24T08:02:10Z",
        "updatedAt" : "2018-01-24T08:02:11Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +260,264 @@        right = _ensure_index(right, copy=copy)\n\n        if dtype is not None:\n            # GH 19262: dtype must be an IntervalDtype to override inferred\n            dtype = pandas_dtype(dtype)"
  },
  {
    "id" : "4b880591-0eac-43bc-bd47-be8d5db7e7cd",
    "prId" : 19339,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19339#pullrequestreview-91089401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0b6228f-a05b-4401-895e-7432be25d1a5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a 1-liner here showing the format of th expected input (list-of-tuples)",
        "createdAt" : "2018-01-23T11:39:21Z",
        "updatedAt" : "2018-01-24T08:01:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "99ba1d62-36c1-466c-9661-51bb6114ea18",
        "parentId" : "f0b6228f-a05b-4401-895e-7432be25d1a5",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done",
        "createdAt" : "2018-01-24T08:02:18Z",
        "updatedAt" : "2018-01-24T08:02:18Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da2eac2a022c044677b537a903acfa9fc532717a",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +596,600 @@                lhs = rhs = np.nan\n            else:\n                try:\n                    # need list of length 2 tuples, e.g. [(0, 1), (1, 2), ...]\n                    lhs, rhs = d"
  },
  {
    "id" : "cab6e361-7e50-4d76-9294-c53f08a03650",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109455981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51f02088-c966-4313-bbea-abf9694ddede",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "note: This was missing a `,` at the end of the first line.\r\n\r\n```python\r\nIn [2]: pd.IntervalIndex.from_breaks([1, 2])\r\nOut[2]:\r\nIntervalIndex([(1, 2]]  # <-- missing comma\r\n              closed='right',\r\n              dtype='interval[int64]')\r\n```",
        "createdAt" : "2018-04-04T18:53:48Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 929,
    "diffHunk" : "@@ -1,1 +944,948 @@                summary = '[{tail}]'.format(tail=', '.join(tail))\n\n        return summary + ',' + self._format_space()\n\n    def _format_attrs(self):"
  },
  {
    "id" : "437d440d-b984-4a85-bb30-f9d18dd7824b",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109505123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b3bd3ef-bf2c-4768-b0a5-ecbb9d2b2f2e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This could in principle be moved to the base Index class (same for shape, itemsize, dtype, ..)",
        "createdAt" : "2018-04-04T21:31:11Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 747,
    "diffHunk" : "@@ -1,1 +361,365 @@    def size(self):\n        # Avoid materializing ndarray[Interval]\n        return self._data.size\n\n    @property"
  },
  {
    "id" : "89331ca0-cfc7-4393-86f2-32dc76280dc7",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109863318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64f14db4-2ce2-4f0e-b08d-58647afddd70",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so you are copying then constructing again???",
        "createdAt" : "2018-04-05T15:50:26Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f8a1e4ad-dc8c-47fd-b2cd-151117a6c087",
        "parentId" : "64f14db4-2ce2-4f0e-b08d-58647afddd70",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Left & right are shallow copied just like before, and `_simple_new` is called just like before. Unless I made a mistake (which I don't think I did), this is identical to before.",
        "createdAt" : "2018-04-05T20:22:03Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 331,
    "diffHunk" : "@@ -1,1 +183,187 @@    @Appender(_index_shared_docs['_shallow_copy'])\n    def _shallow_copy(self, left=None, right=None, **kwargs):\n        result = self._data._shallow_copy(left=left, right=right)\n        attributes = self._get_attributes_dict()\n        attributes.update(kwargs)"
  },
  {
    "id" : "538caed8-b996-48d4-ae1f-55082d0d77b2",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109864753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77c160d-0960-4d19-8c03-3adbabd8181e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this needed? its a very odd thing to have generally for non-scalar based ndarray like things (meaning for float64 this makes perfect sense but fro composed things much less so)",
        "createdAt" : "2018-04-05T15:51:55Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "68ebaf25-2489-4cf8-9aa9-8dad1e43c77c",
        "parentId" : "d77c160d-0960-4d19-8c03-3adbabd8181e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "> its a very odd thing to have generally for non-scalar based ndarray like things\r\n\r\nA bit strange, yeah, since there are two representations: left & right arrays, or an array of Interval objects.\r\n\r\nAnyway, on master this inherited from IndexOpsMixin, which reports the `ndarray[Interval]` version.\r\nThis is inconsistent with `Categorical`, which reports the itemsize of the codes. I'd also prefer that it's consistent with `nbytes`, which (should) report the memory used by the ExtensionArray, not the array of objects.",
        "createdAt" : "2018-04-05T20:26:34Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 756,
    "diffHunk" : "@@ -1,1 +368,372 @@        return self._data.shape\n\n    @property\n    def itemsize(self):\n        # Avoid materializing ndarray[Interval]"
  },
  {
    "id" : "b0abfdc9-2611-4adb-b6c2-dda39565f44a",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-112208496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e12b56cb-2f0d-41a7-a874-795ec2981ec5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob can consolidate this with base Index (why is closed passed?)",
        "createdAt" : "2018-04-14T14:09:56Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +163,167 @@\n    @classmethod\n    def _simple_new(cls, array, name, closed=None):\n        \"\"\"\n        Construct from an IntervalArray"
  },
  {
    "id" : "f3bd3105-2844-4ec1-b2c7-221630867276",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-112208496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4830b6be-0b5b-46b9-997d-6f9149b73e9a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this looks like the higher level (in base) maybe can just remove",
        "createdAt" : "2018-04-14T14:11:48Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 917,
    "diffHunk" : "@@ -1,1 +881,885 @@    def take(self, indices, axis=0, allow_fill=True,\n             fill_value=None, **kwargs):\n        result = self._data.take(indices, axis=axis, allow_fill=allow_fill,\n                                 fill_value=fill_value, **kwargs)\n        attributes = self._get_attributes_dict()"
  },
  {
    "id" : "e753614d-2cc7-4fa8-9a69-0560df1d99b8",
    "prId" : 20946,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20946#pullrequestreview-117783567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d828f4a3-37a5-44cd-896c-f3630362bea4",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Reorganized here to be alphabetical.",
        "createdAt" : "2018-05-04T22:22:25Z",
        "updatedAt" : "2018-05-04T22:22:25Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c82ef3791cebe6576433b65f2e3067ef29fde12",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +175,179 @@    from_tuples\n    get_indexer\n    get_loc\n\n    Examples"
  },
  {
    "id" : "e6466793-167e-48dc-b73c-2afe0fdf445a",
    "prId" : 22811,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22811#pullrequestreview-166764490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f0f4da1-db98-4955-b41a-cb6cf98c038f",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "This is a bit awkward at the moment because ``difference`` is the only set operation with the ``sort`` parameter. But if we add a ``sort`` parameter to the other set operations I think we can get rid of the ``if`` statement",
        "createdAt" : "2018-10-20T22:25:22Z",
        "updatedAt" : "2018-11-18T22:59:13Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a23f7558ccde3710e8786320c28e4d271a7ca9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1050,1054 @@\n            if op_name == 'difference':\n                result = getattr(self._multiindex, op_name)(other._multiindex,\n                                                            sort)\n            else:"
  },
  {
    "id" : "6f6bbd7b-311b-4d00-8f93-f6423669567f",
    "prId" : 23327,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23327#pullrequestreview-168239378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2108b0c3-53a6-4830-afb7-30a9e1687ee4",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Specifically, without this change a datetime-like `IntervalIndex` with `closed='both'` containing two or more instances of `NaT` would be marked as overlapping due to the `NaT`'s.\r\n\r\nSince `NaT` is converted to -9223372036854775808 during i8 conversion, the `IntervalTree` previously interpreted this as an `Interval` of length zero (same start/end), which would include the point in the `closed='both'` case.  So, if two of these occurred they would be interpreted as overlapping at a point.\r\n\r\nI've added a relevant `_maybe_convert_i8` test for this behavior.",
        "createdAt" : "2018-10-25T07:26:58Z",
        "updatedAt" : "2018-11-27T03:13:06Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6349286c2832fc54b33fb928051045f7d79973",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +630,634 @@                # convert NaT from it's i8 value to np.nan so it's not viewed\n                # as a valid value, maybe causing errors (e.g. is_overlapping)\n                key_i8 = key_i8.where(~key._isnan)\n\n        # ensure consistency with IntervalIndex subtype"
  }
]