[
  {
    "id" : "9e69552a-a789-4642-9ccf-78b2187f9d57",
    "prId" : 16213,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16213#pullrequestreview-36314566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18bee21a-2e19-4356-bb64-45b38a715ed6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, yeah any way to share some code?",
        "createdAt" : "2017-05-03T12:31:47Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6bdab28f-598b-4ecf-8ae8-0ae7801d0db7",
        "parentId" : "18bee21a-2e19-4356-bb64-45b38a715ed6",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "yes, more or less ready, but it involves many more changes/files and probably some discussion, if it's OK I will open another PR immediately after this",
        "createdAt" : "2017-05-03T23:03:53Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "c812368e-a814-4374-bb75-109aa8e22421",
        "parentId" : "18bee21a-2e19-4356-bb64-45b38a715ed6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "You can simply put up another PR which bases on this one.",
        "createdAt" : "2017-05-03T23:06:11Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ada1e1cd-9932-48c2-9575-e401ff5deace",
        "parentId" : "18bee21a-2e19-4356-bb64-45b38a715ed6",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "I have to fix one error, then I will",
        "createdAt" : "2017-05-03T23:10:21Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "1afd367a-18c6-4ffb-a890-56af52342490",
        "parentId" : "18bee21a-2e19-4356-bb64-45b38a715ed6",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "see #16236",
        "createdAt" : "2017-05-04T16:07:58Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "89da68a1a3e9a7e82ebb465d95739f9e9823f6a2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +448,452 @@        Append a collection of Index options together\n\n        Parameters\n        ----------\n        other : Index or list/tuple of indices"
  },
  {
    "id" : "9bd78fcb-10bd-4097-9893-d44e9e4d8301",
    "prId" : 18202,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18202#pullrequestreview-76381730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba328da7-b541-4063-884c-3f478c1eeb77",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is it because there is no Attributes section that you get those warnings? \r\n(but you said they were fixed with numpydoc master? Then the other places that do an empty section with None are also not needed?)",
        "createdAt" : "2017-11-14T10:16:17Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "34834fae25bd7ea1eb6a364c9d2c841e0837eb38",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +52,56 @@    Methods\n    -------\n    from_range\n    \"\"\"\n"
  },
  {
    "id" : "8a463e97-18fb-48fc-bea4-fb155791363c",
    "prId" : 22390,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22390#pullrequestreview-147715273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f5e749c-ef53-411b-8c08-2d88b4304885",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doesn't the fall thru raise TypeError?",
        "createdAt" : "2018-08-17T10:07:16Z",
        "updatedAt" : "2018-08-22T13:53:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1019b73c-6a54-4fc7-bdbd-ed0544afe7c0",
        "parentId" : "4f5e749c-ef53-411b-8c08-2d88b4304885",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I donâ€™t understand the question",
        "createdAt" : "2018-08-18T20:16:52Z",
        "updatedAt" : "2018-08-22T13:53:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1d66de04-a4c7-4fad-aa23-8e88cf8d3149",
        "parentId" : "4f5e749c-ef53-411b-8c08-2d88b4304885",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "your comment is at odds with the checking i think. pls revise comments and/or checks.",
        "createdAt" : "2018-08-20T10:47:17Z",
        "updatedAt" : "2018-08-22T13:53:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7a15373f-2cda-4351-a0e1-dd8f969406ab",
        "parentId" : "4f5e749c-ef53-411b-8c08-2d88b4304885",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The comment below this line `# must be an np.ndarray; GH#22390` along with the check above `elif is_timedelta64_dtype(other)` is just saying this is an `ndarray[\"timedelta64['ns']\"]`.  I don't think these are at odds.",
        "createdAt" : "2018-08-20T16:09:25Z",
        "updatedAt" : "2018-08-22T13:53:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cdfb3bfceb00f33f66c191d4032644e137a1eec8",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +598,602 @@                    # so we need to catch these explicitly\n                    return op(self._int64index, other)\n                elif is_timedelta64_dtype(other):\n                    # Must be an np.ndarray; GH#22390\n                    return op(self._int64index, other)"
  },
  {
    "id" : "2def809b-657a-488f-8859-a37d90c7e47b",
    "prId" : 23110,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23110#pullrequestreview-166208268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "shallow_copy?  ditto below",
        "createdAt" : "2018-10-12T19:02:39Z",
        "updatedAt" : "2018-10-13T08:30:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "03bd8652-8881-4fc9-a8b3-84790df8fe1e",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Not in this case, since it is not `self` that is calling it, so you need to pass the `self.name` anyway",
        "createdAt" : "2018-10-13T08:20:10Z",
        "updatedAt" : "2018-10-13T08:30:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d71fff30-4ec4-4fd6-9a40-a465d5096115",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "One case below *is* `shallow_copy`, but the other can indeed be changed.",
        "createdAt" : "2018-10-13T08:23:28Z",
        "updatedAt" : "2018-10-13T08:30:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "270d3b59-31ae-42a1-88a8-404214c5b88c",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "And actually, `_shallow_copy` has not the ability to specify (override) the `name` (which is not really following how `_shallow_copy` works for other Index classes), so can also not use it there.\r\n\r\nMight be a bit buggy in `_shallow_copy` (it is also not used at all anywhere in the RangeIndex implementation, although maybe in inherited methods ..). \r\nBut I want to keep it here just about deprecating the fastpath keyword, so let's leave that for another issue.\r\n\r\n",
        "createdAt" : "2018-10-13T08:28:14Z",
        "updatedAt" : "2018-10-13T08:30:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0b807283-24b7-473f-b0d0-86162628d7ef",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are u changing these constructors at all?",
        "createdAt" : "2018-10-14T14:11:31Z",
        "updatedAt" : "2018-10-14T14:12:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c21f26ca-b2ac-45c4-b5e9-f5de8d0686bb",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I am not changing anything. `fastpath=True` means exactly the `_simple_new` what I replaced it with. \r\nThis PR does *not* try to do a clean-up of usage of `_simple_new` by replacing it with the default constructor, it only deprecates the `fastpath` argument.",
        "createdAt" : "2018-10-14T19:36:15Z",
        "updatedAt" : "2018-10-14T19:36:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e0e9aac3-fcda-46ab-8da9-9a819019fae9",
        "parentId" : "2eed7ff6-d968-417f-be2c-044725e6dc10",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok",
        "createdAt" : "2018-10-18T17:24:49Z",
        "updatedAt" : "2018-10-18T17:24:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "45758473d550279e22ab0acc877c7b4f7b13b2d6",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +180,184 @@    @cache_readonly\n    def _int64index(self):\n        return Int64Index._simple_new(self._data, name=self.name)\n\n    def _get_data_as_items(self):"
  },
  {
    "id" : "d54b5c64-344d-42e1-b9d6-ceaa98ac8c96",
    "prId" : 23538,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23538#pullrequestreview-173686138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9742420-54eb-421f-b3a1-9a36c9e933cb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this needed any longer?",
        "createdAt" : "2018-11-14T14:40:30Z",
        "updatedAt" : "2019-05-21T00:53:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d8bed6e1-0c4e-4b7d-b81e-7b7333ea4e25",
        "parentId" : "c9742420-54eb-421f-b3a1-9a36c9e933cb",
        "authorId" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "body" : "see related comment in DatetimeIndex module",
        "createdAt" : "2018-11-15T00:06:00Z",
        "updatedAt" : "2019-05-21T00:53:26Z",
        "lastEditedBy" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "tags" : [
        ]
      }
    ],
    "commit" : "b840f49f2f520b4f5676f50029365cdf89bc2209",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +490,494 @@        -------\n        union : Index\n        \"\"\"\n        if not len(other) or self.equals(other) or not len(self):\n            return super()._union(other, sort=sort)"
  },
  {
    "id" : "59781a1d-6450-4545-bf7d-6c5d270b78c4",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-185364031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f72ff5d8-4694-4e0a-b556-2a557c625167",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same. why don't these inherit the doc-string",
        "createdAt" : "2018-12-15T19:12:24Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +299,303 @@\n    def min(self, axis=None, skipna=True):\n        \"\"\"The minimum value of the RangeIndex\"\"\"\n        nv.validate_minmax_axis(axis)\n        return self._minmax('min')"
  },
  {
    "id" : "c86ed794-806a-48e9-9ca8-1d45fde8f336",
    "prId" : 26565,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26565#pullrequestreview-243684935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59d0b787-f389-4532-8d56-90f130aa37ad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we could actually remove the _start, _stop, _step properties as well?",
        "createdAt" : "2019-05-30T01:09:44Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ec682e62-eedf-4a0f-a09c-36bd44a95de0",
        "parentId" : "59d0b787-f389-4532-8d56-90f130aa37ad",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Yes, I'm planning to do that in an upcoming PR.\r\n\r\nPython3's ``range`` accepts slicing, which Python2's ``xrange`` didn't, so this refactoring will also allow dropping doing custom slicing operations in RangeIndex.",
        "createdAt" : "2019-05-30T08:36:45Z",
        "updatedAt" : "2019-06-01T17:28:14Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c72758b8e2d24a33ba95abb8d9d032d98268cff4",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +169,173 @@            setattr(result, k, v)\n\n        result._range = range(result._start, result._stop, result._step)\n\n        result._reset_identity()"
  },
  {
    "id" : "d033e032-d17b-47b1-9424-d3820d5e9262",
    "prId" : 26565,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26565#pullrequestreview-244292265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do you actually need this? ",
        "createdAt" : "2019-05-30T01:11:09Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bf7e2055-61ae-443f-9ffe-4b04c6d786d0",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "For some performance sensitive uses, it can be important to know whether the int64 array is being created or not and this attribue allows advanced users to check for it. A further use, which would perhaps make the actual structure of RangeIndex be more transparant for users, would be to use to conditionally add the byte size of the int64 array to ``.nbytes``\r\n\r\nI will though try to remove the uses of ._data in many cases. E.g. it will be possible to have RangeIndex-specific  versions of ``__eq__``, ``__gt__`` etc. so probably the only need for calling ``_data`` would be when an boolean array is supplied to ``__getitem__``.",
        "createdAt" : "2019-05-30T08:54:34Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "a97fb767-8032-4a75-9ff0-870abb8858b5",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Thoughts?",
        "createdAt" : "2019-05-31T07:22:08Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "11f332b8-2132-4281-ba90-ebc726f1af3c",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do you actually use it though?",
        "createdAt" : "2019-05-31T11:35:03Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7dc94a77-0176-4f5f-9b8e-c25cb4b3ddd3",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "I'm using it to check if various operations trigger calls to ._data. I don't use is outside of getting rid of the calls to _data.  \r\n\r\nI'm thinking about eventually change ``nbytes`` to \r\n\r\n```python\r\n    def nbytes(self):\r\n        num_bytes = sum(getsizeof(getattr(self, v), 24) for v in\r\n                   ['_start', '_stop', '_step'])\r\n        if self._has_called_data:\r\n            num_bytes += self._data.nbytes\r\n        return num_bytes\r\n```\r\nplus add some docs on this behaviour.\r\n\r\nBut I also want to make Pandas call ._data in a lot fewer case, before I add the above.\r\n",
        "createdAt" : "2019-05-31T12:23:10Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "aea6280e-a706-4696-91bc-9077a15424a7",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "as I said, simply monkey patch what you need in the tests; adding this to the class is not a great idea \r\n\r\nOR maybe easier is to do the caching internally, e.g.\r\n\r\n```\r\n@property\r\ndef _data():\r\n     if self._cached_data is None:\r\n         self._cached_data = ...\r\n     return self._cached_data\r\n```\r\n\r\nand set ``_cached_data = None`` in the constructor (this is pretty much what `@cache_readonly` does",
        "createdAt" : "2019-05-31T12:45:32Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b099359a-04a8-4f24-8be6-4d612ef11f49",
        "parentId" : "77d7677e-8601-4f96-9faa-a3a887e31d10",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Ok, a ``_cached_data`` attribute would be fine by me and easy to test againts.",
        "createdAt" : "2019-05-31T12:56:39Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c72758b8e2d24a33ba95abb8d9d032d98268cff4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +67,71 @@    _engine_type = libindex.Int64Engine\n\n    # check whether self._data has benn called\n    _cached_data = None  # type: np.ndarray\n    # --------------------------------------------------------------------"
  },
  {
    "id" : "742cdd5d-8ca2-48d1-9be2-b1528aeafe5e",
    "prId" : 26565,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26565#pullrequestreview-244589968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f87cdb0-1858-495d-bf1e-f67e642ff572",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give this a doc-string (e.g. that cached_data is actually an int array and be constructed only if necessary for performance reasons",
        "createdAt" : "2019-06-01T14:41:32Z",
        "updatedAt" : "2019-06-01T16:07:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c72758b8e2d24a33ba95abb8d9d032d98268cff4",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +196,200 @@        triggering the construction.\n        \"\"\"\n        if self._cached_data is None:\n            self._cached_data = np.arange(self._start, self._stop, self._step,\n                                          dtype=np.int64)"
  },
  {
    "id" : "6939e9a8-2103-478b-8bff-efaaea7d2c40",
    "prId" : 29604,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29604#pullrequestreview-316775464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48e3fd1f-e795-4bcc-bd02-273f2b28b91e",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "not for this PR, but it'd be nice tot see this branch gone; doesn't belong in _simple_new",
        "createdAt" : "2019-11-14T00:35:20Z",
        "updatedAt" : "2019-11-14T14:38:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "fb224887-c548-4331-aab4-82b37f2d5fc9",
        "parentId" : "48e3fd1f-e795-4bcc-bd02-273f2b28b91e",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Yeah, I had that in my first version, but figured that is a different issue.",
        "createdAt" : "2019-11-14T08:21:18Z",
        "updatedAt" : "2019-11-14T14:38:46Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "2109eae0b085deb923a15696cc4c483c543152e1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +155,159 @@            values = range(0, 0, 1)\n        elif not isinstance(values, range):\n            return Index(values, dtype=dtype, name=name)\n\n        result._range = values"
  },
  {
    "id" : "65b6e839-e084-4673-a54f-d1c36d6b5511",
    "prId" : 30930,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30930#pullrequestreview-341546905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b363189-702d-47e7-85ca-26d6249c7195",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does the extra condition here imply any behavioral changes?",
        "createdAt" : "2020-01-11T23:28:46Z",
        "updatedAt" : "2020-01-11T23:28:46Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "47138483-218b-4b53-9dfc-7acba8f6b45e",
        "parentId" : "3b363189-702d-47e7-85ca-26d6249c7195",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No, intlike floats go through here now instead of going through the _maybe_cast_indexer path in Index.get_loc.",
        "createdAt" : "2020-01-12T00:12:25Z",
        "updatedAt" : "2020-01-12T00:12:26Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6954e24a6faf786861a73a72a8bf22527b87ce",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +347,351 @@    def get_loc(self, key, method=None, tolerance=None):\n        if method is None and tolerance is None:\n            if is_integer(key) or (is_float(key) and key.is_integer()):\n                new_key = int(key)\n                try:"
  },
  {
    "id" : "5762c145-29ab-482f-a03b-51c48403459a",
    "prId" : 32244,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32244#pullrequestreview-364535768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1f2843b-1303-4981-9edb-c254ed9f6fc1",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why is self._int64index replaced with Int64Index?  does this affect subclassing? \r\n\r\n",
        "createdAt" : "2020-02-25T21:45:19Z",
        "updatedAt" : "2020-02-25T21:46:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "02e8e2bf-a929-42b5-ab14-871b2a454c08",
        "parentId" : "c1f2843b-1303-4981-9edb-c254ed9f6fc1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Using Int64Index is more direct, avoids constructing self._int64index\r\n\r\nShouldn't affect subclasses, which isn't really supported anyway.",
        "createdAt" : "2020-02-25T23:55:46Z",
        "updatedAt" : "2020-02-25T23:55:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8014feca590b944cb1332d73d6b22b99a825482a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +394,398 @@            return self._simple_new(self._range, name=name)\n        else:\n            return Int64Index._simple_new(values, name=name)\n\n    @Appender(Int64Index.copy.__doc__)"
  },
  {
    "id" : "571df985-2d1a-4087-91c9-9d5a80f9148f",
    "prId" : 35712,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35712#pullrequestreview-472793898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31b182df-04cb-4b5f-b513-c43cac6fc915",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This apparently fails for empty RangeIndexes? Should make sure we have a test for that.",
        "createdAt" : "2020-08-21T11:31:05Z",
        "updatedAt" : "2020-08-26T09:45:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "f8a0e788-62a1-40fc-9b51-4bf93a60eb02",
        "parentId" : "31b182df-04cb-4b5f-b513-c43cac6fc915",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Ok, fixed + tests added.",
        "createdAt" : "2020-08-21T20:15:25Z",
        "updatedAt" : "2020-08-26T09:45:04Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b90c8fed0fd8343b42bc8cfa3bd4c501c851bc24",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +191,195 @@        if not len(self._range):\n            return header\n        first_val_str = str(self._range[0])\n        last_val_str = str(self._range[-1])\n        max_length = max(len(first_val_str), len(last_val_str))"
  },
  {
    "id" : "84ff0a15-6bbc-4423-a87f-f8618e9fb004",
    "prId" : 36931,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36931#pullrequestreview-504849788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a98a1af1-6a36-481e-9d2e-39d51f1f1669",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob can pull stuff out of this try/except ? followon",
        "createdAt" : "2020-10-08T14:33:56Z",
        "updatedAt" : "2020-10-08T14:33:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "730f4e6c0c39d4f789dfd5973855b48272a736de",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +840,844 @@\n        try:\n            # apply if we have an override\n            if step:\n                with np.errstate(all=\"ignore\"):"
  },
  {
    "id" : "0b2b3a19-2718-4e38-9b20-d24deb1b67de",
    "prId" : 40227,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40227#pullrequestreview-604663956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed353600-ff8d-45f6-874b-ff1070e9330c",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@simonjayhawkins are the mypy checks thorough/reliable enough that we can safely remove these assertions?",
        "createdAt" : "2021-03-04T23:34:45Z",
        "updatedAt" : "2021-03-05T18:49:25Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dfedc4441ab1ae867b0b45203d3a42cc9d4f672",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +162,166 @@        result = object.__new__(cls)\n\n        assert isinstance(values, range)\n\n        result._range = values"
  },
  {
    "id" : "b7308153-2492-46d1-97e8-4849ff6edd53",
    "prId" : 40545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40545#pullrequestreview-626746041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1c786ba-f157-4fc5-b19e-30e51c7a6ae9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "Axis",
        "createdAt" : "2021-03-30T13:01:57Z",
        "updatedAt" : "2021-04-01T23:18:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6283e0aa-e3ae-44be-ad8c-3c1c65ab8de6",
        "parentId" : "b1c786ba-f157-4fc5-b19e-30e51c7a6ae9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Axis includes str that is only for Series/DataFrame",
        "createdAt" : "2021-03-30T13:58:28Z",
        "updatedAt" : "2021-04-01T23:18:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "728caa6b-84f2-4cb3-963e-395fc955e637",
        "parentId" : "b1c786ba-f157-4fc5-b19e-30e51c7a6ae9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "these are correct as-is, but if for some reason theyre a deal-breaker ill revert to push this through",
        "createdAt" : "2021-04-01T16:14:01Z",
        "updatedAt" : "2021-04-01T23:18:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "dc87cb86-92ae-4ab8-976d-2aa841578abd",
        "parentId" : "b1c786ba-f157-4fc5-b19e-30e51c7a6ae9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no its fine, i get that these have to be ints",
        "createdAt" : "2021-04-02T01:51:23Z",
        "updatedAt" : "2021-04-02T01:51:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c0b9dc779e5eb08b32cc99be9f321d0d90db47",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +441,445 @@\n    def take(\n        self, indices, axis: int = 0, allow_fill: bool = True, fill_value=None, **kwargs\n    ) -> Int64Index:\n        with rewrite_exception(\"Int64Index\", type(self).__name__):"
  }
]