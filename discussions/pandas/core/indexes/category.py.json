[
  {
    "id" : "353aa939-9c83-4eb3-939d-b31299c5abce",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-63228393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a911f3-bc0f-4493-961e-5d6e0ee7b797",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "msg?",
        "createdAt" : "2017-09-17T14:40:49Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +180,184 @@        # overridden.\n        if dtype is not None and (categories is not None or\n                                  ordered is not None):\n            raise TypeError(\"Cannot specify both `dtype` and `categories` \"\n                            \"or `ordered`\")"
  },
  {
    "id" : "8c02ff89-c442-4b31-bd1d-60581c4fefe4",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62293282",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14816afd-3ec3-4528-87d1-c595f31701d6",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this feels not clean. The `tolist` of Categorical should already ensure this?",
        "createdAt" : "2017-09-12T15:33:12Z",
        "updatedAt" : "2017-09-12T15:42:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a211efca-a197-423d-b33c-07aa5d1d16e8",
        "parentId" : "14816afd-3ec3-4528-87d1-c595f31701d6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "fixed up",
        "createdAt" : "2017-09-12T23:17:48Z",
        "updatedAt" : "2017-09-12T23:17:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +256,260 @@    def __iter__(self):\n        \"\"\" iterate like Categorical \"\"\"\n        return self._data.__iter__()\n\n    @property"
  },
  {
    "id" : "28f58b3b-2a7d-45b8-a70d-e28de0768ff2",
    "prId" : 17503,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17503#pullrequestreview-63035002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f12c97-e52f-45a5-9987-2624cdd72a05",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think this is needed? Base `Index` already defines this as `self._values.tolist()`, and `_values` and `_data` is both a Categorical ?",
        "createdAt" : "2017-09-15T13:01:04Z",
        "updatedAt" : "2017-09-15T13:01:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4cf873b410fe5db149d9bce0d84087900ea246b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +255,259 @@\n    def tolist(self):\n        return self._data.tolist()\n\n    @property"
  },
  {
    "id" : "0a2c38a4-3fc5-4029-8c49-4e1793c6280b",
    "prId" : 19849,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19849#pullrequestreview-135762883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83e8a2aa-c209-4407-aa95-e4bef044a131",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use _shallow_copy here, we *never* call _simple_new directly.  (another reason why the super method should use ``_shallow_copy``, but that's for new PR)",
        "createdAt" : "2018-03-07T22:25:15Z",
        "updatedAt" : "2018-11-06T13:10:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c730a7e1-804d-4491-9894-6b85415f61c0",
        "parentId" : "83e8a2aa-c209-4407-aa95-e4bef044a131",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "done",
        "createdAt" : "2018-03-08T21:36:14Z",
        "updatedAt" : "2018-11-06T13:10:47Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      },
      {
        "id" : "b1ab1aed-1ad3-4efb-9ef0-2bc0f1c58a4e",
        "parentId" : "83e8a2aa-c209-4407-aa95-e4bef044a131",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move this method to Index.base? does it break anything?",
        "createdAt" : "2018-07-10T10:28:12Z",
        "updatedAt" : "2018-11-06T13:10:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa7311ad48b2af262f403db824836bf87f126ffd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +327,331 @@\n    def _wrap_setop_result(self, other, result):\n        name = get_op_result_name(self, other)\n        return self._shallow_copy(result, name=name)\n"
  },
  {
    "id" : "6db10525-38e3-41a9-a255-4ddc243eca6d",
    "prId" : 20286,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20286#pullrequestreview-105361138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e00e4b0-6217-4b53-bd5c-5fc1c0176bff",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "@jorisvandenbossche @l736x the point I was trying to make was that since we mention that the ordering property gets retained with a mapping, that we should have an example for an ordered `CategoricalIndex` explicitly showing this. It could be something as simple as:\r\n\r\n```python\r\nNote that one-to-one mappings will retain the ordering of the CategoricalIndex\r\nidx = pd.CategoricalIndex(['a,'b','c'], ordered=True)\r\nidx.map({'a': 3, 'b': 2, 'c': 1})\r\n```\r\n\r\nJust my $.02 though @jorisvandenbossche I'm good to go whenever you want to merge",
        "createdAt" : "2018-03-20T00:18:38Z",
        "updatedAt" : "2018-03-21T21:27:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "83ce3569-76dc-4c0c-8d5e-186163629fda",
        "parentId" : "4e00e4b0-6217-4b53-bd5c-5fc1c0176bff",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It would indeed be good to have an example for this. But maybe just adding `ordered=True` to the example above is enough? (without adding another example)",
        "createdAt" : "2018-03-20T13:56:20Z",
        "updatedAt" : "2018-03-21T21:27:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ec46c1d5-34f3-4d6d-8b73-4edf2539ecc9",
        "parentId" : "4e00e4b0-6217-4b53-bd5c-5fc1c0176bff",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Works for me",
        "createdAt" : "2018-03-20T14:06:03Z",
        "updatedAt" : "2018-03-21T21:27:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecbaca0dbdd2d2d743c10c523b72ea9935f6ad26",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +703,707 @@        >>> idx.map({'a': 'first', 'b': 'second', 'c': 'third'})\n        CategoricalIndex(['first', 'second', 'third'], categories=['first',\n                         'second', 'third'], ordered=False, dtype='category')\n\n        If the mapping is one-to-one the ordering of the categories is"
  },
  {
    "id" : "9634e2dd-8d76-4f18-b5d8-2b5c84ce218e",
    "prId" : 21659,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21659#pullrequestreview-132597509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81b3552e-d172-45ac-ab0c-445cca4ef845",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "It should be noted that in master this dtype comparison is quite slow:\r\n\r\n```python\r\n>>> d = pd.api.types.CategoricalDtype(categories=['a', 'b', 'c'])\r\n>>> %timeit d == d\r\n149 µs  # master\r\n524 ns  # this PR\r\n```\r\n\r\nThis is the reason for the focus on improving dtype comparisons also in this PR, so this check doesn't cause slowdowns on other parts of pandas. Otherwise the performance benefits of this PR would be ambivalent, causing some slowdowns also).",
        "createdAt" : "2018-06-27T20:33:51Z",
        "updatedAt" : "2018-06-28T10:56:22Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff2de3facbece7f04d7f865f68835744f079f238",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +170,174 @@            elif ordered is not None and ordered != data.ordered:\n                data = data.set_ordered(ordered)\n            if isinstance(dtype, CategoricalDtype) and dtype != data.dtype:\n                # we want to silently ignore dtype='category'\n                data = data._set_dtype(dtype)"
  },
  {
    "id" : "da8e72e2-384c-4f1a-bd21-690a145e1661",
    "prId" : 21986,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21986#pullrequestreview-140436784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "367ee3b5-314a-4596-a1a1-e1b851c45673",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We’re there cases before where the wrong thing was passed? I.e. None != ordered != self.ordered?",
        "createdAt" : "2018-07-22T16:43:17Z",
        "updatedAt" : "2018-07-28T18:53:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c72a8c6a-2bf0-4dff-9186-f1f839569839",
        "parentId" : "367ee3b5-314a-4596-a1a1-e1b851c45673",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this tested anywhere? I agree this should have broken things",
        "createdAt" : "2018-07-25T10:03:27Z",
        "updatedAt" : "2018-07-28T18:53:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "70cfed4e-701d-45b9-ab4c-c23377a59a1c",
        "parentId" : "367ee3b5-314a-4596-a1a1-e1b851c45673",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "It appears that all instances of this private method `_create_from_codes`  in the codebase never passed an arg to `ordered` (i.e.  `ordered` always defaulted to `None` which always got reassigned to `self.ordered` here) ",
        "createdAt" : "2018-07-25T18:10:33Z",
        "updatedAt" : "2018-07-28T18:53:13Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "56920d66-82ca-4c91-a66f-ce0cd053ab25",
        "parentId" : "367ee3b5-314a-4596-a1a1-e1b851c45673",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "```\r\n(pandas-dev) matthewroeschke:pandas-mroeschke matthewroeschke$ grep -R --include=\"*.py\" _create_from_codes .\r\n./pandas/core/indexes/category.py:    def _create_from_codes(self, codes, categories=None, ordered=None,\r\n./pandas/core/indexes/category.py:                new_target = self._create_from_codes(codes)\r\n./pandas/core/indexes/category.py:        return self._create_from_codes(taken)\r\n./pandas/core/indexes/category.py:        return self._create_from_codes(np.delete(self.codes, loc))\r\n./pandas/core/indexes/category.py:        return self._create_from_codes(codes)\r\n./pandas/core/indexes/category.py:        result = self._create_from_codes(codes, name=name)\r\n./pandas/core/indexes/category.py:        # if name is None, _create_from_codes sets self.name\r\n```",
        "createdAt" : "2018-07-25T18:11:57Z",
        "updatedAt" : "2018-07-28T18:53:13Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "05e4a36cd7d5c8449e362fc30fca03cf867144e0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +134,138 @@            name = self.name\n        cat = Categorical.from_codes(codes, categories=categories,\n                                     ordered=ordered)\n        return CategoricalIndex(cat, name=name)\n"
  },
  {
    "id" : "69a3f4b5-1cac-46df-8283-7811349f8666",
    "prId" : 22547,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22547#pullrequestreview-151190165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71df2070-d035-4207-9e6a-4c529984f50d",
        "parentId" : null,
        "authorId" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "body" : "Hey- why can we get rid of the categories and ordered params out of interest?",
        "createdAt" : "2018-08-30T21:26:37Z",
        "updatedAt" : "2018-08-30T21:26:37Z",
        "lastEditedBy" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "tags" : [
        ]
      },
      {
        "id" : "078255f7-345b-4eb6-a562-3733385e2144",
        "parentId" : "71df2070-d035-4207-9e6a-4c529984f50d",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "The dtype is a ``CategoricalDtype``, which contains attributes ``categories`` and ``ordered``. So we're  not really removing them, only passinf the dtype around instead, which is clearer IMO.",
        "createdAt" : "2018-08-30T21:30:29Z",
        "updatedAt" : "2018-08-30T21:30:30Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "77323b88d809e409f5b1fa74242e96f948f1797e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +461,465 @@        values = np.where(cond, self.values, other)\n\n        cat = Categorical(values, dtype=self.dtype)\n        return self._shallow_copy(cat, **self._get_attributes_dict())\n"
  }
]