[
  {
    "id" : "796e58c5-fccc-4149-aa20-6f3df16b65c7",
    "prId" : 16324,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16324#pullrequestreview-37719935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae992b4-18a8-4766-8d6d-ce5c5ce9b5ed",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "maybe refer to the github issue number of the pr for the discussion about it?",
        "createdAt" : "2017-05-11T14:35:17Z",
        "updatedAt" : "2017-05-11T22:53:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8101d0de-a554-499f-9c0c-09a82b2969d9",
        "parentId" : "7ae992b4-18a8-4766-8d6d-ce5c5ce9b5ed",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "done",
        "createdAt" : "2017-05-11T22:52:47Z",
        "updatedAt" : "2017-05-11T22:53:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "de514f135b7e9b7bc820aebb49622004dc04b25d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +632,636 @@        # choose our engine based on our size\n        # the hashing based MultiIndex for larger\n        # sizes, and the MultiIndexOjbect for smaller\n        # xref: https://github.com/pandas-dev/pandas/pull/16324\n        l = len(self)"
  },
  {
    "id" : "68839a9e-5ab0-4660-a14c-3e4d11f70c6a",
    "prId" : 16782,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16782#pullrequestreview-48469501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5da320f-19bd-4910-a2e4-53e7e2f6644d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you *might* be able to change this to ``_ensure_index(values)`` I think (as its more idiomatic). I also don't think you will need the ``.values``",
        "createdAt" : "2017-06-28T05:12:01Z",
        "updatedAt" : "2017-07-07T10:25:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8fa677ad-f912-471d-9bab-d55d0a5db52e",
        "parentId" : "d5da320f-19bd-4910-a2e4-53e7e2f6644d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "`_ensure_index` is not meant to support values for a MultiIndex I think:\r\n\r\n```\r\nIn [159]: pd.core.indexes.base._ensure_index([(1, 2), (3, 4)])\r\nOut[159]: Index([(1, 2), (3, 4)], dtype='object')\r\n```",
        "createdAt" : "2017-06-29T12:21:47Z",
        "updatedAt" : "2017-07-07T10:25:07Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d4dc5333-1bf0-48b5-8a48-1ea2e04a8de8",
        "parentId" : "d5da320f-19bd-4910-a2e4-53e7e2f6644d",
        "authorId" : "527d1837-84fe-4ac4-a66f-bc8d6638806f",
        "body" : "Not able to address this before 0.20.3",
        "createdAt" : "2017-07-06T21:31:59Z",
        "updatedAt" : "2017-07-07T10:25:07Z",
        "lastEditedBy" : "527d1837-84fe-4ac4-a66f-bc8d6638806f",
        "tags" : [
        ]
      }
    ],
    "commit" : "94ac6b16b8b33809525a9240afd59834d51db94f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +2623,2627 @@    def isin(self, values, level=None):\n        if level is None:\n            values = MultiIndex.from_tuples(values,\n                                            names=self.names).values\n            return algos.isin(self.values, values)"
  },
  {
    "id" : "b0aeb2e1-d857-4ccf-bfa2-ff0df774f41b",
    "prId" : 17414,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17414#pullrequestreview-60271801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1d521ee-4fe1-42fc-ad0c-d88e4b42ace1",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Let's explain what `values` is here since you are updating the docs.",
        "createdAt" : "2017-09-02T08:52:56Z",
        "updatedAt" : "2017-09-02T12:40:07Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc67b9af36090ed45cde7a0b2321db0e9a1d08fe",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +893,897 @@        Returns\n        -------\n        values : Index\n            ``values`` is a level of this MultiIndex converted to\n            a single :class:`Index` (or subclass thereof)."
  },
  {
    "id" : "463dbd4a-b9d3-48a0-872c-b51577bf9323",
    "prId" : 18440,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18440#pullrequestreview-78960577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83ac41a4-f1fe-47e8-b670-34ab55db9244",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2017-11-24T17:01:04Z",
        "updatedAt" : "2017-11-25T16:27:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a220aaa586a047f7dbc8b90989961331efe3a0a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1271,1275 @@        from pandas.core.reshape.util import cartesian_product\n\n        if not is_list_like(iterables):\n            raise TypeError(\"Input must be a list / sequence of iterables.\")\n        elif is_iterator(iterables):"
  },
  {
    "id" : "e0e00e32-25c9-413f-988e-230faedba25b",
    "prId" : 18677,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18677#pullrequestreview-82333843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fa3b39c-f104-44fe-b04a-14a5e64b5a59",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "test fo this?",
        "createdAt" : "2017-12-09T15:40:53Z",
        "updatedAt" : "2017-12-11T07:40:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fdf81432-60da-41a8-bf0c-0773b190eccc",
        "parentId" : "8fa3b39c-f104-44fe-b04a-14a5e64b5a59",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Wrote a test for it in `test_multi.py`, which overrides the test in `common.py`:\r\n\r\nhttps://github.com/jschendel/pandas/blob/31d4d62295035123453ab24f393176750661a283/pandas/tests/indexes/test_multi.py#L558-L568",
        "createdAt" : "2017-12-09T19:53:31Z",
        "updatedAt" : "2017-12-11T07:40:52Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "60421314618f39a77f5d4a94a4b3f2462118e7fa",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +2720,2724 @@        dtype = pandas_dtype(dtype)\n        if is_categorical_dtype(dtype):\n            msg = '> 1 ndim Categorical are not supported at this time'\n            raise NotImplementedError(msg)\n        elif not is_object_dtype(dtype):"
  },
  {
    "id" : "cdb40a3d-1f4b-438a-9dcf-b57919dd9eb5",
    "prId" : 19074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19074#pullrequestreview-88447861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29f535ec-24b9-4f33-bc89-ecf39dc66b21",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank lines in between things",
        "createdAt" : "2018-01-12T11:34:03Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "468bb08cb14ce265b78babbcbbb066adc1d08d51",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +771,775 @@        # Calculate the number of bits needed to represent labels in each\n        # level, as log2 of their sizes (including -1 for NaN):\n        sizes = np.ceil(np.log2([len(l) + 1 for l in self.levels]))\n\n        # Sum bit counts, starting from the _right_...."
  },
  {
    "id" : "874fda13-2d93-4cf7-b06e-38a58003e1c9",
    "prId" : 19074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19074#pullrequestreview-89339797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a841b5b-f1ec-422f-9082-c971158203be",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there any reason why these are defined in python, rather than in cython? these could then be cdef classes, and you can type _codes_to_int.",
        "createdAt" : "2018-01-17T00:25:54Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca412c1f-272d-4067-9ea5-aab167a400fc",
        "parentId" : "8a841b5b-f1ec-422f-9082-c971158203be",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "cython doesn't allow multiple inheritance (and avoiding it would complicate the code a lot)",
        "createdAt" : "2018-01-17T06:33:51Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "468bb08cb14ce265b78babbcbbb066adc1d08d51",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +46,50 @@\n\nclass MultiIndexUIntEngine(libindex.BaseMultiIndexCodesEngine,\n                           libindex.UInt64Engine):\n    \"\"\""
  },
  {
    "id" : "2432c806-61ba-4d75-b01b-6cc2d3cca4c3",
    "prId" : 19074,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19074#pullrequestreview-91811512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80a1a56e-16e8-406b-863d-ea8726b5171d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give a 1-liner what is going on here",
        "createdAt" : "2018-01-26T03:16:32Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e24d932a-961f-40f6-bffe-d15c986c51d6",
        "parentId" : "80a1a56e-16e8-406b-863d-ea8726b5171d",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "(done)",
        "createdAt" : "2018-01-26T11:33:16Z",
        "updatedAt" : "2018-01-27T18:16:25Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "468bb08cb14ce265b78babbcbbb066adc1d08d51",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +2349,2353 @@                                                     drop_level)\n\n                if len(key) == self.nlevels and self.is_unique:\n                    # Complete key in unique index -> standard get_loc\n                    return (self._engine.get_loc(key), None)"
  },
  {
    "id" : "34dbdc24-98b0-40f2-8093-73dce79e1b8e",
    "prId" : 19558,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19558#pullrequestreview-95668451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7feb97ec-c7c6-4d82-b01e-ff9f6c2a930c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why not _ndarray_values here?",
        "createdAt" : "2018-02-10T15:39:51Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9af9d0a5-d2c6-483a-b378-ff88f4dc4c60",
        "parentId" : "7feb97ec-c7c6-4d82-b01e-ff9f6c2a930c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Using `_ndarray_values` breaks tests for categoricals. We've baked knowledge of cats into `algost.take_nd` / `take_1d`, to handle it, so passing the `codes` here will break things further down.",
        "createdAt" : "2018-02-11T20:30:02Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "3af8a21ea0e13ba5fc73db464f6e327552c71b0e",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +2658,2662 @@            olabels = olabels[olabels != -1]\n            ovalues = algos.take_nd(\n                np.asarray(other.levels[i]._values),\n                olabels, allow_fill=False)\n"
  },
  {
    "id" : "5d6bca24-2887-4dfc-b7cd-de963860ed37",
    "prId" : 19831,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19831#pullrequestreview-98808289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6531c5e-b6c5-4e61-a68a-2bb3d50820a9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just turn this into an Index (and call _format_native_types) on that",
        "createdAt" : "2018-02-23T02:24:11Z",
        "updatedAt" : "2018-10-31T17:02:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "86f0b167-73a9-45bd-af79-6be5b9230417",
        "parentId" : "f6531c5e-b6c5-4e61-a68a-2bb3d50820a9",
        "authorId" : "da19b543-f846-4415-b573-9ab03a8005fd",
        "body" : "Gotcha.  I took this as a desire to make this clear we'll be treating this a normal index since the outputs should be the same.  a23252385e9de1a2af0832a82e168d825315d937",
        "createdAt" : "2018-02-23T04:11:22Z",
        "updatedAt" : "2018-10-31T17:02:03Z",
        "lastEditedBy" : "da19b543-f846-4415-b573-9ab03a8005fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdc20d4c55807387bf10ff321936b4f8b87c0a6f",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +733,737 @@            new_labels.append(label)\n\n        if len(new_levels) == 1:\n            return Index(new_levels[0])._format_native_types()\n        else:"
  },
  {
    "id" : "28f82534-dd6e-4ab2-aa7f-997cb2c4bc1b",
    "prId" : 19831,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19831#pullrequestreview-170362751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "784f2888-3ab7-498f-9520-504af328e48b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you don't need this else, and i think you have a hanging return statement",
        "createdAt" : "2018-10-31T12:24:48Z",
        "updatedAt" : "2018-10-31T17:02:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5a04ab47-c456-4102-a61c-e8e34b3664a1",
        "parentId" : "784f2888-3ab7-498f-9520-504af328e48b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I just need to remove the hanging return statement, since we return something in both blocks already as it is.",
        "createdAt" : "2018-10-31T16:53:41Z",
        "updatedAt" : "2018-10-31T17:02:03Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdc20d4c55807387bf10ff321936b4f8b87c0a6f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +735,739 @@        if len(new_levels) == 1:\n            return Index(new_levels[0])._format_native_types()\n        else:\n            # reconstruct the multi-index\n            mi = MultiIndex(levels=new_levels, labels=new_labels,"
  },
  {
    "id" : "07d0362e-c8b6-4f14-8e53-4f3433c0ea85",
    "prId" : 20548,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20548#pullrequestreview-111065477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6a0cd6d-39a5-43d9-b41f-4577e832bd3f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks good here. can you update the doc-string with the comment below",
        "createdAt" : "2018-04-11T01:50:44Z",
        "updatedAt" : "2018-04-22T14:48:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "97a2b06c305f70ffd0c1e4fcbce4169d1f54ccf9",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +657,661 @@\n        Note that you generally want to set this *after* changing levels, so\n        that it only acts on copies\n        \"\"\"\n        # GH 15110"
  },
  {
    "id" : "f61a64e3-d3cf-4988-b022-2ef7520c243f",
    "prId" : 21613,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21613#pullrequestreview-131846525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28f6c520-0601-4bb5-b8da-feaefb6bfe6c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "to_hierarchical is listed elsewhere in this file in a doc-string",
        "createdAt" : "2018-06-25T11:09:35Z",
        "updatedAt" : "2018-06-26T02:25:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "03178cc5-af86-4edf-84fa-b9a5bc91d12d",
        "parentId" : "28f6c520-0601-4bb5-b8da-feaefb6bfe6c",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Thanks - it is mentioned as a part of enumeration of methods of `MultiIndex` - should it be removed?",
        "createdAt" : "2018-06-25T13:03:31Z",
        "updatedAt" : "2018-06-26T02:25:49Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      },
      {
        "id" : "e600ad4a-ec66-4ce3-b89e-387df0e43fea",
        "parentId" : "28f6c520-0601-4bb5-b8da-feaefb6bfe6c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes",
        "createdAt" : "2018-06-25T22:25:45Z",
        "updatedAt" : "2018-06-26T02:25:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "73106107-a7c5-4ab0-a4df-28890be4747d",
        "parentId" : "28f6c520-0601-4bb5-b8da-feaefb6bfe6c",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Thanks - updated for all of the latest review comments",
        "createdAt" : "2018-06-26T02:29:20Z",
        "updatedAt" : "2018-06-26T02:29:20Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d2eb264970ca631f0e3baef0556412ff72dd227",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1181,1185 @@\n    def to_hierarchical(self, n_repeat, n_shuffle=1):\n        \"\"\"\n        .. deprecated:: 0.24.0\n"
  },
  {
    "id" : "a8cfc294-bc42-47f2-82b2-5cd7f19bfc63",
    "prId" : 21657,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21657#pullrequestreview-132809399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d6ec877-138c-4d8a-a843-2f675fff0556",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "elif here",
        "createdAt" : "2018-06-28T10:28:25Z",
        "updatedAt" : "2018-06-29T09:13:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e3735e94-e933-4a3e-846b-31219d076534",
        "parentId" : "6d6ec877-138c-4d8a-a843-2f675fff0556",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "So I need the 'if' here because the result of `categorical.get_values()` can still be an Index with extension dtype / datetime dtype. \r\n\r\nI would like to explore a bit more how to streamline the path from series/index/array object -> numpy array that is boxed if needed (currenlty that doesn't seem to easy, and is handled again in many different places), but that is for another PR",
        "createdAt" : "2018-06-28T11:58:42Z",
        "updatedAt" : "2018-06-29T09:13:43Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "2261eefcddc97086edd5877f13e0df52833f9a8f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +815,819 @@            if is_categorical_dtype(vals):\n                vals = vals.get_values()\n            if (isinstance(vals.dtype, (PandasExtensionDtype, ExtensionDtype))\n                    or hasattr(vals, '_box_values')):\n                vals = vals.astype(object)"
  },
  {
    "id" : "b7cb26fa-eb60-4578-b465-057f1afe36d5",
    "prId" : 22511,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22511#pullrequestreview-157945099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b65d2209-759f-4c36-8c6a-d75db5c4e95b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "might be nice to show an example when you use a ``option_context`` to say limit the ``max_seq_items``",
        "createdAt" : "2018-09-23T13:20:20Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "05035e98-a345-4a61-a76c-fa89a105ad42",
        "parentId" : "b65d2209-759f-4c36-8c6a-d75db5c4e95b",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "But ``MultiIndex.to_hierarchical`` is deprecated, so it's not worth it here IMO. Could make a test for ``options_context`` in ``test_format.py`` though.\r\n\r\nWhat the response to my comments to @jorisvandenbossche?\r\n\r\nCC @jorisvandenbossche \r\n",
        "createdAt" : "2018-09-23T13:54:00Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "f2ab6a08-722b-4f41-9d75-63012ef8f0b2",
        "parentId" : "b65d2209-759f-4c36-8c6a-d75db5c4e95b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I mean generally show . how to do it in the doc-string. hmm you don't have *any* tests with options_context???? that we for sure need.",
        "createdAt" : "2018-09-23T16:58:26Z",
        "updatedAt" : "2019-06-11T19:54:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d96c98c94a5f98dd44228b2770e9c64ddaabd64",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +1590,1594 @@                    (1, 'one'),\n                    (1, 'two'),\n                    (1, 'two'),\n                    (1, 'two'),\n                    (2, 'one'),"
  },
  {
    "id" : "fb60eb85-cb70-45ee-92e1-4a82a024825c",
    "prId" : 22780,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22780#pullrequestreview-157264570",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d66c901-67b9-41e5-9609-0545be40bf46",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u share docstrings at all?",
        "createdAt" : "2018-09-20T13:15:47Z",
        "updatedAt" : "2018-09-20T16:22:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cad9dbfb-7292-471f-b42b-e453ee1f9f83",
        "parentId" : "4d66c901-67b9-41e5-9609-0545be40bf46",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think they're all different enough that sharing would be burdensome.",
        "createdAt" : "2018-09-20T13:17:31Z",
        "updatedAt" : "2018-09-20T16:22:22Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "332dbcab41019d6557e3dc4070f01af47bbcd2e9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +291,295 @@    @property\n    def _is_homogeneous(self):\n        \"\"\"Whether the levels of a MultiIndex all have the same dtype.\n\n        This looks at the dtypes of the levels."
  },
  {
    "id" : "87ba5099-38c2-4ba7-abaf-6ed532e7ad40",
    "prId" : 22811,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22811#pullrequestreview-166764543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4109a27b-22e4-4016-a1fd-b5351bb42749",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "The old way of doing this using ``set`` did not preserve the original order so I took this code from the ``difference`` method in ``pandas/core/indexes/base.py``:\r\nhttps://github.com/pandas-dev/pandas/blob/145c2275e3560edc30ff418a57df67ba3c4c30d6/pandas/core/indexes/base.py#L2950-L2957",
        "createdAt" : "2018-10-20T22:28:49Z",
        "updatedAt" : "2018-11-18T22:59:13Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a23f7558ccde3710e8786320c28e4d271a7ca9",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2826,2830 @@                              names=result_names, verify_integrity=False)\n\n        this = self._get_unique_index()\n\n        indexer = this.get_indexer(other)"
  },
  {
    "id" : "553f3af8-d974-43b8-9556-a990a20c035e",
    "prId" : 23141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23141#pullrequestreview-171245508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "534cbf7c-1f1a-400a-a8a0-1c82159e0b3d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Doesn't this lose CategoricalDtype info?\r\n\r\nCan you ensure we have a test for\r\n\r\n```python\r\nIn [12]: idx = pd.MultiIndex.from_product([['a', 'b'], pd.Categorical(['A', 'B'])])\r\n\r\nIn [13]: idx.to_frame().dtypes\r\nOut[13]:\r\n0      object\r\n1    category\r\ndtype: object\r\n\r\n```\r\n\r\nand make sure that doesn't regress?",
        "createdAt" : "2018-11-02T13:50:49Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "22dc83b8-f22c-44b9-8491-c03b2ef83f55",
        "parentId" : "534cbf7c-1f1a-400a-a8a0-1c82159e0b3d",
        "authorId" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "body" : "Any reason not to just update the original implementation to use OrderedDict? Would satisfy both the guaranteed ordering and dtype fidelity.",
        "createdAt" : "2018-11-02T18:43:36Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "tags" : [
        ]
      },
      {
        "id" : "bfa65370-fff5-491e-a6e5-0543f1645922",
        "parentId" : "534cbf7c-1f1a-400a-a8a0-1c82159e0b3d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Seems reasonable to me.",
        "createdAt" : "2018-11-02T19:44:09Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9159b2dcc9da90128f63552fe7e83d7270d34518",
    "line" : 282,
    "diffHunk" : "@@ -1,1 +1467,1471 @@\n        # Guarantee resulting column order\n        result = DataFrame(\n            OrderedDict([\n                ((level if name is None else name),"
  },
  {
    "id" : "5ae62e99-d484-48da-bf7d-8568b758461d",
    "prId" : 23141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23141#pullrequestreview-173705055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab4e04cd-6dda-4be7-a038-0664c08f88a8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here guarantiing sort order",
        "createdAt" : "2018-11-11T16:32:10Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9159b2dcc9da90128f63552fe7e83d7270d34518",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +1465,1469 @@        else:\n            idx_names = self.names\n\n        # Guarantee resulting column order\n        result = DataFrame("
  },
  {
    "id" : "49f8e2c6-2868-4e45-b2ae-c0c04f8d90a0",
    "prId" : 23141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23141#pullrequestreview-182526592",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85631082-bb71-4244-88ef-84f97c7ff6cd",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I guess it'll be `Index` when the `DataFrame` has a single column. Would be useful to explain that.",
        "createdAt" : "2018-12-06T10:04:38Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "65bb4402-e4cc-43cb-ac92-0da91456dda0",
        "parentId" : "85631082-bb71-4244-88ef-84f97c7ff6cd",
        "authorId" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "body" : "fixed, we changed this so that it's always MultiIndex now",
        "createdAt" : "2018-12-07T01:59:54Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "tags" : [
        ]
      }
    ],
    "commit" : "9159b2dcc9da90128f63552fe7e83d7270d34518",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +471,475 @@        -------\n        MultiIndex\n            The MultiIndex representation of the given DataFrame.\n\n        See Also"
  },
  {
    "id" : "f2266395-22fe-46d3-924b-7d07e6c77dfc",
    "prId" : 23141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23141#pullrequestreview-182526803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf9b4264-c03f-4ded-a0bc-5f633a41aa1c",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "This is too long for what is needed. Also, much better to use some meaningful data. We've been using in many places a small dataset of animals and their number of legs, wings... I'd use the same here.",
        "createdAt" : "2018-12-06T10:10:19Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "5ca8ed1f-cada-4a87-beb9-c98e73725fb1",
        "parentId" : "cf9b4264-c03f-4ded-a0bc-5f633a41aa1c",
        "authorId" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "body" : "Changed. I didn't want to use a dataset with numeric data since I think that the example should demonstrate the tie between multiindexes and metadataframes. Instead I used a weather related example (which was the inspiration for this addition in the first place)",
        "createdAt" : "2018-12-07T02:01:08Z",
        "updatedAt" : "2018-12-07T22:24:27Z",
        "lastEditedBy" : "e6997dda-cb4e-47c5-b0f9-6ed953879858",
        "tags" : [
        ]
      }
    ],
    "commit" : "9159b2dcc9da90128f63552fe7e83d7270d34518",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +484,488 @@        >>> df = pd.DataFrame([['HI', 'Temp'], ['HI', 'Precip'],\n        ...                    ['NJ', 'Temp'], ['NJ', 'Precip']],\n        ...                   columns=['a', 'b'])\n        >>> df\n              a       b"
  },
  {
    "id" : "23e15102-c7bc-4484-9272-c98d8c18b6c7",
    "prId" : 23291,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23291#pullrequestreview-167863887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f165dd74-babe-4aaf-bdde-711f69d29bb3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can just add\r\n```\r\nelif is_list_like(levels):\r\n   levels = list(levels)\r\n```",
        "createdAt" : "2018-10-23T16:58:45Z",
        "updatedAt" : "2018-10-25T06:12:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c2e9bac-37b2-4c05-8221-5b31c9dc70cb",
        "parentId" : "f165dd74-babe-4aaf-bdde-711f69d29bb3",
        "authorId" : "991036bf-cf2e-4c40-bc03-e2569d828f5f",
        "body" : "Tried this approach, but unfortunately, it breaks functionality where one passes to set_levels CategoricalIndex (or in general, something else which is more complex than a list).\r\n\r\nSpecifically, this turns\r\n\r\n```python\r\nindex.set_levels(CategoricalIndex(list(\"bac\")), 0)\r\n```\r\n\r\ninto \r\n\r\n```python\r\nindex.set_levels(list(\"bac\"), 0)\r\n```\r\n\r\nand breaks [test_set_levels_categorical](https://github.com/pandas-dev/pandas/blob/master/pandas/tests/indexes/multi/test_get_set.py#L385)\r\n\r\nI can add change this with \r\n\r\n```python\r\nif is_list_like(levels) and not isinstance(levels, Index):\r\n```\r\n\r\nbut I'm not sure what's better",
        "createdAt" : "2018-10-24T06:15:41Z",
        "updatedAt" : "2018-10-25T06:12:22Z",
        "lastEditedBy" : "991036bf-cf2e-4c40-bc03-e2569d828f5f",
        "tags" : [
        ]
      },
      {
        "id" : "684a92cd-185a-4138-a27d-99225c125812",
        "parentId" : "f165dd74-babe-4aaf-bdde-711f69d29bb3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the 2nd would be fine, we don't need/want any more api checkers)",
        "createdAt" : "2018-10-24T11:48:22Z",
        "updatedAt" : "2018-10-25T06:12:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "15f3505fe8030c83d70920eb775a23cb45ad3e1a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +394,398 @@\n        if level is not None and not is_list_like(level):\n            if not is_list_like(levels):\n                raise TypeError(\"Levels must be list-like\")\n            if is_list_like(levels[0]):"
  },
  {
    "id" : "d0e0346e-f94b-42db-81ae-7470126bfdf2",
    "prId" : 23752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23752#pullrequestreview-176177987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc5be7c4-6bde-407b-9455-afc7f35e3839",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think you need a blank line *before* the deprecated? @datapythonista ",
        "createdAt" : "2018-11-18T23:18:39Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3fd9197a-bcc2-460e-9556-c542b63567ba",
        "parentId" : "bc5be7c4-6bde-407b-9455-afc7f35e3839",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Yeah, changed.",
        "createdAt" : "2018-11-19T08:10:16Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d00ad61651cfcecf6f9da6a1b23ee232531e8f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +135,139 @@\n        .. deprecated:: 0.24.0\n            Use ``codes`` instead\n    sortorder : optional int\n        Level of sortedness (must be lexicographically sorted by that"
  },
  {
    "id" : "3b290beb-afdd-4373-868a-fd191fb6ff76",
    "prId" : 23752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23752#pullrequestreview-176111981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3b39a84-f6f2-45fd-9a56-17750862a613",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a versionadded tag",
        "createdAt" : "2018-11-18T23:18:48Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d00ad61651cfcecf6f9da6a1b23ee232531e8f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +127,131 @@    levels : sequence of arrays\n        The unique labels for each level\n    codes : sequence of arrays\n        Integers for each level designating which label at each location\n"
  },
  {
    "id" : "c3c183d2-14df-4bde-af24-fc68abf9aedb",
    "prId" : 23752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23752#pullrequestreview-176111981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53fb1638-67fb-4872-9f5f-a12df7aaee52",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can remove labels",
        "createdAt" : "2018-11-18T23:19:02Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d00ad61651cfcecf6f9da6a1b23ee232531e8f",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +178,182 @@    names\n    levels\n    codes\n    nlevels\n    levshape"
  },
  {
    "id" : "906b8c0a-1ca6-4cfb-b26d-9cbe87ae2fa1",
    "prId" : 23752,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23752#pullrequestreview-180578100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55ca2b07-7ee4-473f-b8c2-9f5a195825ac",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versinoadded tag here",
        "createdAt" : "2018-12-02T21:13:50Z",
        "updatedAt" : "2018-12-05T17:44:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d00ad61651cfcecf6f9da6a1b23ee232531e8f",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +638,642 @@           New name for deprecated method `set_labels`.\n\n        Parameters\n        ----------\n        codes : sequence or list of sequence"
  },
  {
    "id" : "5c22de0f-5da0-4ee6-96c9-785ab649ec39",
    "prId" : 25063,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25063#pullrequestreview-198823514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This makes the meaning of `sort=None` consistent across Index & MultiIndex, but is a change from prior versions. Are we OK with that?\r\n\r\nEither way is fine by me.",
        "createdAt" : "2019-01-31T21:04:00Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3e3780e6-4c08-432c-986c-fbca99ba287a",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yeah, I am not fully sure why I needed to change this. I suppose because you actually already changed it in your PR (so the tests you added need this). \r\nBut indeed, I can also change the test so it checks for an error instead of a warning. But on the other hand, it is just yet another inconsistency ..\r\n\r\n",
        "createdAt" : "2019-01-31T21:11:59Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c437cfcb-68de-4d41-959c-ea0550b99db2",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I couldn't remember if I changed it or left it :)\r\n\r\nAgain, it's not clear to me what's best, but I very slightly lean towards keeping the previous behavior of raising here.",
        "createdAt" : "2019-01-31T21:15:25Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4fd02319-159d-4e73-beaa-509d94248aa9",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, changed this to previous behaviour of not raising",
        "createdAt" : "2019-01-31T21:21:46Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "213d3fd7-979c-4025-a675-6a0423e18751",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think you have an extra \"not\" there :)\r\n\r\nThis will raise when there are incomparable objects.",
        "createdAt" : "2019-01-31T21:24:38Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "6837e160-e5ac-4eb3-ab67-4e76e412f274",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "sorry, about which line are you speaking?",
        "createdAt" : "2019-01-31T21:26:25Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0ea57e34-cad8-4b2a-8006-45826da20817",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Your comment \r\nhttps://github.com/pandas-dev/pandas/pull/25063#discussion_r252845226 not the code :)",
        "createdAt" : "2019-01-31T21:27:31Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c75b5811-0f58-43f1-8604-0fee6a0b5b1d",
        "parentId" : "363fcddb-49b0-4058-9f89-a63f5c7d26bd",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "ah, yes :-)",
        "createdAt" : "2019-01-31T21:28:20Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5a0376dd93c38ffe71225cec9cea15fd9624f0",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +3012,3016 @@                                  assume_unique=True)\n        difference = this.values.take(label_diff)\n        if sort is None:\n            difference = sorted(difference)\n"
  },
  {
    "id" : "cef88794-bd37-4d7b-9664-e88e658bb1b8",
    "prId" : 25189,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25189#pullrequestreview-201547915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "345e8d12-0059-4bee-9127-0acd8b05295c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we fully test this? (test with tuples as well)",
        "createdAt" : "2019-02-08T02:43:06Z",
        "updatedAt" : "2019-02-20T16:02:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "73ac6294-64f4-45a9-859e-ce00397d31ce",
        "parentId" : "345e8d12-0059-4bee-9127-0acd8b05295c",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "@jreback: not fully. i've added a test that is basically a cut and paste from another test. could parameterise now or refactor in a follow-on PR. i prefer the later since some other refactoring of the tests may be possible and may detract from the current change.",
        "createdAt" : "2019-02-08T12:05:46Z",
        "updatedAt" : "2019-02-20T16:02:57Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "403789a72616d16cb843680f8f1941b7beef0651",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +331,335 @@            arrays = list(arrays)\n\n        # Check if elements of array are list-like\n        for array in arrays:\n            if not is_list_like(array):"
  },
  {
    "id" : "a125efb0-df48-4c96-a094-b0f3ab2955d9",
    "prId" : 25189,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25189#pullrequestreview-201555521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa7a0f32-c6e3-4bb0-979b-33240507aeff",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We could maybe think about how to improve the actual message as well, because on a first read I was interpreting this as \"Input must be [a list] or [a sequence of array-likes]\" (while of course it is \"[list or sequence] of array-likes\"), which confused me at first ..\r\n\r\nTo be true to the code, what it actually needs to be is a \"list-like of list-likes\"? Which is also not that nice to write .. \r\nI am wondering if a more strict error message (stricter than what we allow), something like \"Input must be a list of arrays\" is not actually easier to understand for users.",
        "createdAt" : "2019-02-08T08:25:55Z",
        "updatedAt" : "2019-02-20T16:02:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "358d7439-0839-4d3a-8144-1a756c2786ae",
        "parentId" : "fa7a0f32-c6e3-4bb0-979b-33240507aeff",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "I was also thinking that the messages should be changed from `Input must be...` to something along the lines of `'arrays' parameter of MultiIndex.from_arrays must be...` and then regurgitate whatever is in the docstring. ",
        "createdAt" : "2019-02-08T08:44:43Z",
        "updatedAt" : "2019-02-20T16:02:57Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "9b2e246e-b9e9-4d62-87be-6808a8a05320",
        "parentId" : "fa7a0f32-c6e3-4bb0-979b-33240507aeff",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> I am wondering if a more strict error message (stricter than what we allow), something like \"Input must be a list of arrays\" is not actually easier to understand for users.\r\n\r\nIIUC the reason that a sequence is accepted is to provide backward compatibility with zip. So sequence does not necessarily need to be mentioned in the docstring.",
        "createdAt" : "2019-02-08T12:28:28Z",
        "updatedAt" : "2019-02-20T16:02:57Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "403789a72616d16cb843680f8f1941b7beef0651",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +325,329 @@                   names=['number', 'color'])\n        \"\"\"\n        error_msg = \"Input must be a list / sequence of array-likes.\"\n        if not is_list_like(arrays):\n            raise TypeError(error_msg)"
  },
  {
    "id" : "47533605-4dab-4ceb-9ccb-849c3c8542e8",
    "prId" : 26355,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26355#pullrequestreview-236424492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a comment here that this is a single-level MI",
        "createdAt" : "2019-05-12T14:42:44Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "01080d68-22ea-460b-9869-5ad8715cc6d8",
        "parentId" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what do new_levels and new_codes look like here (from your test)",
        "createdAt" : "2019-05-12T14:43:25Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1919be9f-6be9-4050-9384-87d7b485abb2",
        "parentId" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "authorId" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "body" : "The value of `new_levels` is `[array(['1', '2', '3'], dtype='<U21')]`.\r\nThe value of `new_codes` is `[FrozenNDArray([0, 2], dtype='int8')]`",
        "createdAt" : "2019-05-12T15:09:17Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "tags" : [
        ]
      },
      {
        "id" : "da4d276d-4aa4-4ede-b7ec-1773b122717e",
        "parentId" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "authorId" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "body" : "Added a comment in d47089ee3ef92152f9577602b84073455bb49763",
        "createdAt" : "2019-05-12T15:25:38Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "tags" : [
        ]
      },
      {
        "id" : "7bc9066e-eb7f-4a13-9803-fb1e536a55b7",
        "parentId" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok use levels[0].take(codes[0])",
        "createdAt" : "2019-05-12T15:28:09Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f5f4bec8-63a3-458b-a137-41c7188ad3ad",
        "parentId" : "e5fed865-cec0-449c-99f6-c85a921fb81b",
        "authorId" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "body" : "Done in 159a828e910d1d2f2b17abcd7a7fb0b5acc79b7a",
        "createdAt" : "2019-05-12T15:35:51Z",
        "updatedAt" : "2019-05-13T18:15:45Z",
        "lastEditedBy" : "093d4877-be84-4d27-a655-b3adee9eed25",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1d0565e279fcc83e381faef1428c4d4d282c3c1",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +946,950 @@            new_codes.append(level_codes)\n\n        if len(new_levels) == 1:\n            # a single-level multi-index\n            return Index(new_levels[0].take("
  }
]