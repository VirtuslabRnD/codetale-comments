[
  {
    "id" : "45e69db7-a9b4-4a33-b6ff-3a47911270f6",
    "prId" : 15081,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15081#pullrequestreview-34466151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f815d886-c4d4-4a4b-a1ee-256e4b13e12e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this seems odd that you are returning np.nan for a datetimelike. do tests hit this?",
        "createdAt" : "2017-04-24T10:29:28Z",
        "updatedAt" : "2017-11-25T00:01:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "14b3d411-c924-4715-a7cf-d49dd23ab9a4",
        "parentId" : "f815d886-c4d4-4a4b-a1ee-256e4b13e12e",
        "authorId" : "b134c7c2-a48e-4c3b-9262-35dbb896ab39",
        "body" : "I would assume it does get hit indirectly as it was essentially pulled into the subclasses from the pd.Series instantiation.  It is essentially replicating the behavior that was previously in lines 188-203 of pandas/core/series.py and allowing each object to handle it as seen fit rather than doing it in an if conditional.  Personally this way make more sense to me but since I ended up not making use of this functionality outside of the Series instantiation I'm happy to revert the changes if you'd prefer.",
        "createdAt" : "2017-04-25T05:09:38Z",
        "updatedAt" : "2017-11-25T00:01:17Z",
        "lastEditedBy" : "b134c7c2-a48e-4c3b-9262-35dbb896ab39",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd0b7e9f07e38abe5a3a21ba81f825256a1c209e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +700,704 @@\n    @Appender(_index_shared_docs['_get_values_from_dict'])\n    def _get_values_from_dict(self, data):\n        if len(data):\n            return np.array([data.get(i, np.nan)"
  }
]