[
  {
    "id" : "00f0685e-3e96-4dcf-a996-5b4fe5c6330d",
    "prId" : 17930,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17930#pullrequestreview-81665312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08316ca3-c111-49c0-af4d-d8d791e8e574",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here on why we are doing this (yes its obvious to me, but not generally to future readers).",
        "createdAt" : "2017-12-05T11:19:01Z",
        "updatedAt" : "2017-12-10T18:36:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a6ee1c30-7987-4529-9cde-39857415ecb5",
        "parentId" : "08316ca3-c111-49c0-af4d-d8d791e8e574",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "(done)\r\nping",
        "createdAt" : "2017-12-06T20:57:24Z",
        "updatedAt" : "2017-12-10T18:36:13Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8ad746d5796933203787b616fb4d9785aa8b4bb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +65,69 @@    @Appender(_index_shared_docs['_shallow_copy'])\n    def _shallow_copy(self, values=None, **kwargs):\n        if values is not None and not self._can_hold_na:\n            # Ensure we are not returning an Int64Index with float data:\n            return self._shallow_copy_with_infer(values=values, **kwargs)"
  },
  {
    "id" : "9aa3ff1c-c9de-49a0-99c8-e0d19fae3492",
    "prId" : 24541,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24541#pullrequestreview-188913861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7e42b11-60e2-4966-bae3-db00d65034a0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Did you add a test for this? \r\n(it is currently failing (meaning: raising an error) on master)",
        "createdAt" : "2019-01-02T21:02:28Z",
        "updatedAt" : "2019-01-04T12:11:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9e13cc74-4932-481b-958f-d18523b84216",
        "parentId" : "e7e42b11-60e2-4966-bae3-db00d65034a0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is well tested in many locations",
        "createdAt" : "2019-01-02T21:05:33Z",
        "updatedAt" : "2019-01-04T12:11:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca9c495a-cc5f-4b0c-b10f-c18bcf1b9d9a",
        "parentId" : "e7e42b11-60e2-4966-bae3-db00d65034a0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, yes, forgot about the object dtype of the result",
        "createdAt" : "2019-01-03T07:17:28Z",
        "updatedAt" : "2019-01-04T12:11:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d4bd5e22051c8dedc42ec1ac6156f3449f09948",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +329,333 @@                   'values are required for conversion').format(dtype=dtype)\n            raise TypeError(msg)\n        elif (is_integer_dtype(dtype) and\n              not is_extension_array_dtype(dtype)) and self.hasnans:\n            # TODO(jreback); this can change once we have an EA Index type"
  },
  {
    "id" : "994017f5-a24f-4795-a4ef-7c8cae43f2b1",
    "prId" : 27034,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27034#pullrequestreview-253990784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f041c4c2-df87-4808-8dbd-96aa6447410b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe float64 here?",
        "createdAt" : "2019-06-25T12:21:28Z",
        "updatedAt" : "2019-06-27T13:31:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6109be5b-14ec-49fd-90a1-3d165ea45b0a",
        "parentId" : "f041c4c2-df87-4808-8dbd-96aa6447410b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "These are both indexes, so right now that's the same.\r\n\r\nIn a future with 32-bit indexes, I think `.astype('float')` is better, since Int32Index.astype('float') would be Float32Index?",
        "createdAt" : "2019-06-25T13:08:23Z",
        "updatedAt" : "2019-06-27T13:31:12Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca0d957f39c69c056b28f924fcb2a3257ba98c07",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +138,142 @@        )\n        if needs_cast:\n            first = self.astype(\"float\")\n            second = other.astype(\"float\")\n            return first._union(second, sort)"
  },
  {
    "id" : "9bef6ace-54a5-423b-b395-c9973e3da1f4",
    "prId" : 29529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29529#pullrequestreview-318051164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a7d8fd9-1838-40bc-a16e-a8d9f33120ed",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hah, this is what we had quite some time ago. thanks",
        "createdAt" : "2019-11-17T22:52:27Z",
        "updatedAt" : "2019-11-17T22:52:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5603e0f7a035cb84301f8c6e2c6c36de1738b9ca",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +59,63 @@\n        # Coerce to ndarray if not already ndarray or Index\n        if not isinstance(data, (np.ndarray, Index)):\n            if is_scalar(data):\n                raise cls._scalar_data_error(data)"
  },
  {
    "id" : "4e2802db-3eae-47c1-9d98-d8307a52b172",
    "prId" : 29529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29529#pullrequestreview-318058392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d5897b-cbb3-433b-883e-8928ee0a24a8",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Maybe add a line like `dtype = dtype or cls._default_dtype` prior to this to address my previous comment?  Or could even just have `dtype=cls._default_dtype` here for brevity, as this should be the only thing allowed after #29545 is merged.",
        "createdAt" : "2019-11-18T00:33:05Z",
        "updatedAt" : "2019-11-18T00:42:29Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5603e0f7a035cb84301f8c6e2c6c36de1738b9ca",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +67,71 @@                data = list(data)\n\n            data = np.asarray(data, dtype=dtype)\n\n        if issubclass(data.dtype.type, str):"
  },
  {
    "id" : "212a005c-fa00-4831-9ba7-9eeedff3483f",
    "prId" : 31713,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31713#pullrequestreview-354147864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80897819-6231-4ecc-91bf-7537ed4eedbc",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Could you add same docstring here as well?",
        "createdAt" : "2020-02-06T01:12:51Z",
        "updatedAt" : "2020-02-06T02:03:05Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b0218411983a5989b2a386c1440280ffe6fa16f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +386,390 @@    @Appender(Index._should_fallback_to_positional.__doc__)\n    def _should_fallback_to_positional(self):\n        return False\n\n    @Appender(Index._convert_scalar_indexer.__doc__)"
  },
  {
    "id" : "22fac485-456a-44a5-8a6e-4b979c78a5a7",
    "prId" : 31786,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31786#pullrequestreview-356228497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "225fc4f2-985f-47ce-8bf2-c2bb71ba9caf",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I am not sure this comment is correct? (eg for a series with Int64Index, slicing is positional?)",
        "createdAt" : "2020-02-10T09:04:26Z",
        "updatedAt" : "2020-02-10T09:04:30Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8b69551f-d029-4ebc-aae3-daa0e199b138",
        "parentId" : "225fc4f2-985f-47ce-8bf2-c2bb71ba9caf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this method is for Float64Index",
        "createdAt" : "2020-02-10T16:29:44Z",
        "updatedAt" : "2020-02-10T16:29:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f45fad94-fb23-4d1a-b4a6-d626b5f2174a",
        "parentId" : "225fc4f2-985f-47ce-8bf2-c2bb71ba9caf",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, missed that in the diff. Thanks!",
        "createdAt" : "2020-02-10T20:10:01Z",
        "updatedAt" : "2020-02-10T20:10:01Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "35c36c735627e6dbf5036be2566a82ad0c2e1a83",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +397,401 @@        assert kind in [\"loc\", \"getitem\", None]\n\n        # We always treat __getitem__ slicing as label-based\n        # translate to locations\n        return self.slice_indexer(key.start, key.stop, key.step, kind=kind)"
  },
  {
    "id" : "150bb322-b73a-4094-a158-eec353385bb2",
    "prId" : 37591,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37591#pullrequestreview-522088373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02c17b83-7258-4e65-b101-57efba3a6715",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "could be elif (also shouldn't we be validating instead that this is a float/int) e.g. a datetime would pass right thru here",
        "createdAt" : "2020-11-02T22:18:50Z",
        "updatedAt" : "2020-11-03T00:04:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "19e005ca-6ad2-4757-b21e-f4b02615f1f1",
        "parentId" : "02c17b83-7258-4e65-b101-57efba3a6715",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah, the way we use this method is weird.  i think im going to have to get our usage to be not-weird before i can fully clean up this method",
        "createdAt" : "2020-11-02T22:53:10Z",
        "updatedAt" : "2020-11-03T00:04:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a156e4d095b3c703b10905872c2837bdf6cc968",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +122,126 @@            # so we don't lose the bools\n            raise TypeError\n        if isinstance(value, str):\n            raise TypeError\n"
  },
  {
    "id" : "765e1df5-ec11-431c-8e8c-11ccb75478de",
    "prId" : 37968,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37968#pullrequestreview-535040455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61f90439-67a1-4cfb-bf8c-c48c52406c5c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "test hitting the complex case?",
        "createdAt" : "2020-11-20T02:59:43Z",
        "updatedAt" : "2020-11-20T02:59:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4d4bc7e4-bd7e-4e1b-a7fe-84076e8f2d7b",
        "parentId" : "61f90439-67a1-4cfb-bf8c-c48c52406c5c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes, in tests.indexing.test_coercion",
        "createdAt" : "2020-11-20T03:06:16Z",
        "updatedAt" : "2020-11-20T03:06:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9dc866657d0da4869a805f726174ae48bdfe63a9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +123,127 @@            # so we don't lose the bools\n            raise TypeError\n        elif isinstance(value, str) or lib.is_complex(value):\n            raise TypeError\n"
  }
]