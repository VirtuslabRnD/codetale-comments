[
  {
    "id" : "39a862b8-9a09-4e53-859e-1cbe61834137",
    "prId" : 30629,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30629#pullrequestreview-337910869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95005bf1-bd9a-4ad4-af34-e55218d8d0f7",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm somewhat confused by this function. Documented as working on `methods` but seems to accept attributes as well?",
        "createdAt" : "2020-01-02T23:34:55Z",
        "updatedAt" : "2020-01-03T00:55:32Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "64638188-59d8-4114-a575-3df749327689",
        "parentId" : "95005bf1-bd9a-4ad4-af34-e55218d8d0f7",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Will update docstring.  This clause is for regular class attributes, in particular a few List[str] that we share",
        "createdAt" : "2020-01-02T23:56:56Z",
        "updatedAt" : "2020-01-03T00:55:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ccb13eec9b157faf7bf52141389a16ea9822d03",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@            method = property(fget, fset)\n\n    elif not callable(attr):\n        # just a normal attribute, no wrapping\n        method = attr"
  },
  {
    "id" : "784550ab-2b50-47e0-9b49-9fd4451bfb7a",
    "prId" : 30629,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30629#pullrequestreview-337918853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "015df903-e5cb-4a3d-b980-05f9b8fef91b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you could type this -> Callable[[Type[T]], Type[T]] i think",
        "createdAt" : "2020-01-03T00:42:57Z",
        "updatedAt" : "2020-01-03T00:55:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ccb13eec9b157faf7bf52141389a16ea9822d03",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\n\ndef inherit_names(names: List[str], delegate, cache: bool = False):\n    \"\"\"\n    Class decorator to pin attributes from an ExtensionArray to a Index subclass."
  },
  {
    "id" : "bd3b736c-56fb-4270-8133-a91c39c0c44b",
    "prId" : 30648,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30648#pullrequestreview-338363647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0d0c32b-f0fc-4bb6-b774-93a19cec5acf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "at some point should type these",
        "createdAt" : "2020-01-04T18:09:20Z",
        "updatedAt" : "2020-01-04T18:10:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "63a31e7dd476912e543464170ac5b60aa82c66d1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +85,89 @@\n\ndef make_wrapped_comparison_op(opname):\n    \"\"\"\n    Create a comparison method that dispatches to ``._data``."
  },
  {
    "id" : "f9308e6a-c41e-44b2-9eab-8e7829cb2abc",
    "prId" : 30717,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30717#pullrequestreview-343049156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why are you overwriting the base Index one? \r\n\r\nAlso, this dropped the docstring.",
        "createdAt" : "2020-01-10T08:52:35Z",
        "updatedAt" : "2020-01-10T08:55:41Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "11c16857-9ddc-4a0d-8ac0-0f1071ffed22",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because the base class uses ._values, where we want ._data here",
        "createdAt" : "2020-01-10T16:31:30Z",
        "updatedAt" : "2020-01-10T16:31:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "bbf36377-4e46-42a9-86e4-a35a5dfb6e19",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But `_values` and `_data` is the same?",
        "createdAt" : "2020-01-10T19:50:29Z",
        "updatedAt" : "2020-01-10T19:50:29Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "bed7c3c9-1d11-433e-80dd-dbf4f3c0ef38",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I guess.  Past-me must have thought it not-obvious that this would always hold.  If it can be removed, go for it.",
        "createdAt" : "2020-01-10T19:56:21Z",
        "updatedAt" : "2020-01-10T19:56:21Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9bde5efd-f96c-4baa-98a9-99bc417ea57d",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Did you also see my docstring comment?",
        "createdAt" : "2020-01-13T09:14:45Z",
        "updatedAt" : "2020-01-13T09:14:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e0e22f4c-e94d-4d0a-9ec0-d1e60ea73d8a",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I did.  In this case I think removing the method makes sense.  More generally I wonder if we can use a metaclass or something to automatically inherit docstrings and remove a lot of boilerplate (cc @bashtage IIRC you do something like this in arch)",
        "createdAt" : "2020-01-13T16:11:01Z",
        "updatedAt" : "2020-01-13T16:11:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a0b352a2-004f-4348-9672-1828612b4591",
        "parentId" : "eadea7b4-504b-4cb2-87f5-9456e3488180",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe open a new issue to see if we can do this smarter? \r\n\r\nBut for 1.0.0, I would just add back the docstring",
        "createdAt" : "2020-01-15T08:26:11Z",
        "updatedAt" : "2020-01-15T08:26:11Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef38914e522366462f339d58a44141eec479b59c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +194,198 @@        if self.hasnans:\n            return self._shallow_copy(self._data[~self._isnan])\n        return self._shallow_copy()\n\n    def repeat(self, repeats, axis=None):"
  },
  {
    "id" : "8577bdfa-a0de-47f1-8678-04009d59e951",
    "prId" : 30717,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30717#pullrequestreview-341279878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6663eb95-1dc8-442e-ac66-83aa92d8e6eb",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we use a faster constructor (simple_new ?) when we just want to wrap the correct type of ExtensionArray in the index?",
        "createdAt" : "2020-01-10T08:55:29Z",
        "updatedAt" : "2020-01-10T08:55:41Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "de6f27d9-ee5d-448a-84e0-d6dcfb480165",
        "parentId" : "6663eb95-1dc8-442e-ac66-83aa92d8e6eb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think that'd work.  IIRC there were some corner cases involving CategoricalIndex.dtype, not sure if those are relevant here",
        "createdAt" : "2020-01-10T16:32:46Z",
        "updatedAt" : "2020-01-10T16:32:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef38914e522366462f339d58a44141eec479b59c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +176,180 @@        result = self._data[key]\n        if isinstance(result, type(self._data)):\n            return type(self)(result, name=self.name)\n\n        # Includes cases where we get a 2D ndarray back for MPL compat"
  },
  {
    "id" : "82654375-08c2-4caa-8ec7-21125cdd3c77",
    "prId" : 30809,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30809#pullrequestreview-339628699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e944f7a9-ce8c-4cd5-880b-ad6b5afa48ea",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "```suggestion\r\n    def repeat(self, repeats: Union[int, Sequence[int]], axis: Axis=None):\r\n```\r\n\r\nmight be nice to add while moving",
        "createdAt" : "2020-01-08T03:20:19Z",
        "updatedAt" : "2020-01-08T03:20:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270cfc19eca1a07f7ffc4671db09ad4b39daf33",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +165,169 @@    _data: ExtensionArray\n\n    def repeat(self, repeats, axis=None):\n        nv.validate_repeat(tuple(), dict(axis=axis))\n        result = self._data.repeat(repeats, axis=axis)"
  }
]