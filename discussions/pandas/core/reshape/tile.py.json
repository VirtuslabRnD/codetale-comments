[
  {
    "id" : "b1c4a114-5fad-4fcc-89f6-7f30726ebe7a",
    "prId" : 20947,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20947#pullrequestreview-117813632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ead6bc2-bc83-4795-8572-9fc8be27fc31",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a versionadded tag\r\n\r\nadd a Raises part of the doc-string",
        "createdAt" : "2018-05-05T12:50:54Z",
        "updatedAt" : "2018-05-10T18:27:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c9bca65dfd44c0159d34dcdfe26eccf124884d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +67,71 @@        Whether the first interval should be left-inclusive or not.\n    duplicates : {default 'raise', 'drop'}, optional\n        If bin edges are not unique, raise ValueError or drop non-uniques.\n\n        .. versionadded:: 0.23.0"
  },
  {
    "id" : "f4aeeda6-a7cf-4c4f-9cc9-149b5c632595",
    "prId" : 20956,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20956#pullrequestreview-117813574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7014e40-df3b-4293-9d2c-5c96ee860bda",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "instead of this just call ``Index()`` which will do all of this inference",
        "createdAt" : "2018-05-05T12:49:48Z",
        "updatedAt" : "2018-07-03T05:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "17e96c450533ae42161b4ca9b69733acef516701",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +366,370 @@            np.putmask(result, na_mask, np.nan)\n\n    bins = _convert_bin_to_datelike_type(bins, dtype)\n\n    return result, bins"
  },
  {
    "id" : "065281eb-11e1-4cdc-bb66-d6e797275088",
    "prId" : 20956,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20956#pullrequestreview-134053868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f67524f-329b-457e-90b2-557801595c10",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a way to make this logic flow better, e.g. ``_convert_bins_to_numeric_type`` and ``_convert_bin_to_datelike_type`` are disjointed (e.g. they are separate), maybe combine? I just find that we are doing conversions in 2 places here",
        "createdAt" : "2018-07-03T15:08:55Z",
        "updatedAt" : "2018-07-03T15:09:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b0af91e7-3bc2-4379-b710-cfae34163595",
        "parentId" : "0f67524f-329b-457e-90b2-557801595c10",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Well they both serve different purposes; \r\n`_convert_bins_to_numeric_type ` is used at the start to prep the bins (datelike data -> numeric data) before the main array is cut.\r\n\r\n `_convert_bin_to_datelike_type` is used at the end to \"stylize\" the bins (numeric  data -> datelike data) after the array is cut. \r\n\r\nPlus, I like the explicit naming of these two processes. Just my 2c.",
        "createdAt" : "2018-07-03T15:25:00Z",
        "updatedAt" : "2018-07-03T15:25:00Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "5d132805-101e-4bbd-a206-3a6161ed4576",
        "parentId" : "0f67524f-329b-457e-90b2-557801595c10",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine then.",
        "createdAt" : "2018-07-03T15:33:49Z",
        "updatedAt" : "2018-07-03T15:33:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "17e96c450533ae42161b4ca9b69733acef516701",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +366,370 @@            np.putmask(result, na_mask, np.nan)\n\n    bins = _convert_bin_to_datelike_type(bins, dtype)\n\n    return result, bins"
  },
  {
    "id" : "9ca40625-0598-4f17-8fb6-dd53308beb27",
    "prId" : 24596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24596#pullrequestreview-189420816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2c5655d-692b-435b-abd5-766cc2cd8f34",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "? ``.to_numpy()`` is not enough here",
        "createdAt" : "2019-01-04T15:43:56Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f9e18743-98df-47d7-8ff2-4c3922c0dcd7",
        "parentId" : "a2c5655d-692b-435b-abd5-766cc2cd8f34",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "We could, though we'll still need the test for datetimetz so that we don't end up with an object-dtype ndarray.",
        "createdAt" : "2019-01-04T15:55:45Z",
        "updatedAt" : "2019-01-04T18:55:11Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "50f4fbde4472700525959dbb7255185e36155f21",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +227,231 @@\n    else:\n        if is_datetime64tz_dtype(bins):\n            bins = np.asarray(bins, dtype=_NS_DTYPE)\n        else:"
  },
  {
    "id" : "bc045e60-2d01-4ac4-bd9f-5d9de3943e9a",
    "prId" : 26063,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26063#pullrequestreview-226275056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3480dd78-6c68-45bf-b5c6-81d67d6a9774",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Can you add a comment above this line indicating why this is being done, something like:\r\n```python\r\nbins = _convert_bin_to_numeric_type(bins, dtype)\r\n\r\n# GH 26045: cast to float to avoid an overflow\r\nif (np.diff(bins.astype('float64')) < 0).any():",
        "createdAt" : "2019-04-12T20:32:31Z",
        "updatedAt" : "2019-04-17T13:16:25Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddfb93e036bf484dbfab5ace6c6d783f788b3a43",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +233,237 @@\n        # GH 26045: cast to float64 to avoid an overflow\n        if (np.diff(bins.astype('float64')) < 0).any():\n            raise ValueError('bins must increase monotonically.')\n"
  },
  {
    "id" : "fb38ec37-83f5-42ec-8af0-a1630985326b",
    "prId" : 29333,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29333#pullrequestreview-310789353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f86277c-3ef7-486b-aac7-20d15cedea95",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "What error was this throwing? I would think a partial to be preferable to a lambda",
        "createdAt" : "2019-11-02T19:37:11Z",
        "updatedAt" : "2019-11-02T21:12:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "80f503e7-80e7-47ea-99b7-6c0b0f16a971",
        "parentId" : "6f86277c-3ef7-486b-aac7-20d15cedea95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`error: Incompatible types in assignment (expression has type \"Callable[[Any], Any]\", variable has type \"partial[Any]\")`",
        "createdAt" : "2019-11-02T21:10:44Z",
        "updatedAt" : "2019-11-02T21:12:31Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "78e4a316-9f61-46bc-ba6b-d2bd5b04d9ef",
        "parentId" : "6f86277c-3ef7-486b-aac7-20d15cedea95",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm that's unfortunate. I suppose goes back to https://github.com/python/mypy/issues/1484",
        "createdAt" : "2019-11-02T21:26:08Z",
        "updatedAt" : "2019-11-02T21:26:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb4a41ffdc5d3f3c0e0df90d953f579c5594b398",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +512,516 @@\n    if is_datetime64tz_dtype(dtype):\n        formatter = lambda x: Timestamp(x, tz=dtype.tz)\n        adjust = lambda x: x - Timedelta(\"1ns\")\n    elif is_datetime64_dtype(dtype):"
  },
  {
    "id" : "7c309f9c-a118-4985-aa52-5023e839983a",
    "prId" : 33480,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33480#pullrequestreview-401112759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f134fa4a-93a9-4e3b-8be0-1a175a00a62c",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Do we want to add an `elif` branch that handles converting `Categorical` labels that don't have matching `ordered`, e.g. `labels=Categorical([\"A\", \"B\", \"C\"], ordered=False)` with `ordered=True` being specified in `cut`?\r\n\r\nNot sure if we should actually do that or not, so fine to save this for a follow-up if more discussion is needed. Especially since it would be breaking behavior that we should probably warn users about first, making the implementation a bit messy as it'd likely require using a sentinel for `ordered`.",
        "createdAt" : "2020-04-13T18:23:42Z",
        "updatedAt" : "2020-04-30T10:52:31Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "ea8b9a95-5c65-443f-add8-dbe80b84a20a",
        "parentId" : "f134fa4a-93a9-4e3b-8be0-1a175a00a62c",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "My first instinct would be to raise for that particular case, but also open to thoughts.\r\n\r\nMight be worthwhile putting a `#TODO` comment here noting that case.",
        "createdAt" : "2020-04-26T17:40:03Z",
        "updatedAt" : "2020-04-30T10:52:31Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "fdb86cfc-6360-40aa-93ab-e09b8a051665",
        "parentId" : "f134fa4a-93a9-4e3b-8be0-1a175a00a62c",
        "authorId" : "b4ea16d2-09c0-4af2-a73d-b4e4e08ff657",
        "body" : "We could add a TODO and in the meantime raise a warning or print a message.",
        "createdAt" : "2020-04-27T10:27:55Z",
        "updatedAt" : "2020-04-30T10:52:31Z",
        "lastEditedBy" : "b4ea16d2-09c0-4af2-a73d-b4e4e08ff657",
        "tags" : [
        ]
      },
      {
        "id" : "0732be3c-0549-481d-9daf-87dcd02be978",
        "parentId" : "f134fa4a-93a9-4e3b-8be0-1a175a00a62c",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I don't think a print message or a warning is completely necessary yet. Just a code comment should be good",
        "createdAt" : "2020-04-27T16:17:32Z",
        "updatedAt" : "2020-04-30T10:52:31Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab1fc5ec39d4d1a668770e0041989140420b4c82",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +435,439 @@                    \"Bin labels must be one fewer than the number of bin edges\"\n                )\n        if not is_categorical_dtype(labels):\n            labels = Categorical(\n                labels,"
  },
  {
    "id" : "dd96325e-7d74-42a0-bfef-a58281e2d25e",
    "prId" : 42448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/42448#pullrequestreview-706805936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ac715b6-3ea4-4cac-bdbe-f99d1dff6975",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can leave the bins",
        "createdAt" : "2021-07-14T23:44:57Z",
        "updatedAt" : "2021-07-14T23:45:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "69a50e1f276e946af1dea8a1ff5f301fa993df24",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +385,389 @@def _bins_to_cuts(\n    x,\n    bins: np.ndarray,\n    right: bool = True,\n    labels=None,"
  }
]