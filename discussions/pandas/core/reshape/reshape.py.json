[
  {
    "id" : "a0e76b2d-9791-4f21-8ac2-c393c468139d",
    "prId" : 16432,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16432#pullrequestreview-39580646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c67ac7d7-1354-4032-8e38-d0aba28f8a40",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "can you give some explanation why this is needed in this case ?",
        "createdAt" : "2017-05-22T20:19:40Z",
        "updatedAt" : "2017-05-26T15:08:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "03682dc2-8837-4d1a-92a8-daed106d2143",
        "parentId" : "c67ac7d7-1354-4032-8e38-d0aba28f8a40",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jorisvandenbossche I think the issue was when there's a `df.index.name` the output has whitespace for the rest of that line  (which we don't want to include in the source)",
        "createdAt" : "2017-05-22T20:29:13Z",
        "updatedAt" : "2017-05-26T15:08:54Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "da8fc599-3b06-4d00-a944-67aa0d63d7dd",
        "parentId" : "c67ac7d7-1354-4032-8e38-d0aba28f8a40",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Aha, ... \r\nIs that actually something we might want to solve in pandas, in the repr? (it's not a bug, but I also don't think it is a feature someone relies upon? So could change that (if it is easy) to not have to do this here) But that is certainly for another PR",
        "createdAt" : "2017-05-22T20:37:20Z",
        "updatedAt" : "2017-05-26T15:08:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c857811f-f0e6-49e4-9d06-2ed61558fedb",
        "parentId" : "c67ac7d7-1354-4032-8e38-d0aba28f8a40",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Or we could set this flag globally if this occurs a lot? (if that is possible)",
        "createdAt" : "2017-05-22T20:40:32Z",
        "updatedAt" : "2017-05-26T15:08:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "678eca45-3359-4646-942b-24124770d2f2",
        "parentId" : "c67ac7d7-1354-4032-8e38-d0aba28f8a40",
        "authorId" : "abb08f7b-e783-486e-9305-d807597b6b0c",
        "body" : "That's what @TomAugspurger was thinking, but I don't think he knows either?",
        "createdAt" : "2017-05-22T20:41:21Z",
        "updatedAt" : "2017-05-26T15:08:54Z",
        "lastEditedBy" : "abb08f7b-e783-486e-9305-d807597b6b0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffd3e3ca05da04a9bd8c610e0b5e50274327fa26",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +942,946 @@    >>> l = pd.wide_to_long(df, stubnames='ht', i=['famid', 'birth'], j='age')\n    >>> l\n    ... # doctest: +NORMALIZE_WHITESPACE\n                      ht\n    famid birth age"
  },
  {
    "id" : "b2b1d82c-289f-4836-b064-de9eacf0823f",
    "prId" : 16616,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16616#pullrequestreview-49246994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "555cfae6-8bc9-47e1-a0cb-2e2c16f446ec",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this a TODO? or a comment?",
        "createdAt" : "2017-06-30T20:43:12Z",
        "updatedAt" : "2017-09-26T13:51:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "512cb2c7-3448-4d3c-9fe3-508eccb34d5f",
        "parentId" : "555cfae6-8bc9-47e1-a0cb-2e2c16f446ec",
        "authorId" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "body" : "A comment with a mild TODO hint at whomever will be refactoring the whole thing eventually to take the note into consideration.",
        "createdAt" : "2017-07-11T16:04:58Z",
        "updatedAt" : "2017-09-26T13:51:14Z",
        "lastEditedBy" : "9b5d970b-5653-41aa-ae1b-e60d67167e6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cef5f476e13e33a29e7fc64a3fe483175c98f7be",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +83,87 @@                values = np.array(values)\n            elif self.is_sparse:\n                # XXX: Makes SparseArray *dense*, but it's supposedly\n                # a single column at a time, so it's \"doable\"\n                values = values.values"
  },
  {
    "id" : "005f0e1c-dac3-4906-9c5f-f121700fbc59",
    "prId" : 17236,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17236#pullrequestreview-58629708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33264005-eb6b-4a90-969b-76f28054996e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "a comment on why the if is needed",
        "createdAt" : "2017-08-25T11:33:48Z",
        "updatedAt" : "2017-08-30T16:34:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c8205c0681b486ed73bdcb816b3728bee1a5f78",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +312,316 @@                                         xnull=False)\n\n    if rlocs == []:\n        # Everything is in clocs, so the dummy df has a regular index\n        dummy_index = Index(obs_ids, name='__placeholder__')"
  },
  {
    "id" : "1c6edb97-a07b-403d-83e8-55d502fa5d2c",
    "prId" : 18330,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18330#pullrequestreview-77753547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d12a7b74-0783-4a02-b862-e93b18db1449",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Any reason not to use `'uint8'` or `np.uint8` here?",
        "createdAt" : "2017-11-19T20:43:28Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "59b3182f-277b-473b-b87e-1add14a17fb4",
        "parentId" : "d12a7b74-0783-4a02-b862-e93b18db1449",
        "authorId" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "body" : "I've tried to mirror API of DataFrame, Series, Panel etc. where passing None explicitly is allowed and means \"dtype will be inferred\".",
        "createdAt" : "2017-11-19T21:04:58Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "tags" : [
        ]
      },
      {
        "id" : "be4c4c5a-c41f-4adc-a373-292b2f5bb365",
        "parentId" : "d12a7b74-0783-4a02-b862-e93b18db1449",
        "authorId" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "body" : "@jreback @TomAugspurger So this is the last question to answer. Do you accept my argument about None or should I change it to np.uint8?",
        "createdAt" : "2017-11-20T09:22:21Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "tags" : [
        ]
      },
      {
        "id" : "f8d425ed-09bc-404c-ac06-8cfc31b43a5b",
        "parentId" : "d12a7b74-0783-4a02-b862-e93b18db1449",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is ok here, it follows a similar style elsewhere",
        "createdAt" : "2017-11-20T11:26:59Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "158a317aedc738b7b740a3b480a01b4289778847",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +698,702 @@\ndef get_dummies(data, prefix=None, prefix_sep='_', dummy_na=False,\n                columns=None, sparse=False, drop_first=False, dtype=None):\n    \"\"\"\n    Convert categorical variable into dummy/indicator variables"
  },
  {
    "id" : "b5ff78dd-1ed2-48d7-badb-3e7bca6a7c66",
    "prId" : 18330,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18330#pullrequestreview-77655325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a572a355-c04d-4049-919b-52af85ca7e7e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can we also accept arguments to `np.dtype` like the string `'i8'`, and handle those appropriately?",
        "createdAt" : "2017-11-19T20:44:01Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "9cdd069e-d0b4-4e7b-a14e-b021b31074dc",
        "parentId" : "a572a355-c04d-4049-919b-52af85ca7e7e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "he is using ``np.dtype()``?",
        "createdAt" : "2017-11-19T21:05:22Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6ffa89e5-34f6-4c82-bdc1-6ad5b3953e7a",
        "parentId" : "a572a355-c04d-4049-919b-52af85ca7e7e",
        "authorId" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "body" : "Yes, that should work already, I'll add it to the tests.",
        "createdAt" : "2017-11-19T21:07:33Z",
        "updatedAt" : "2017-11-22T13:15:42Z",
        "lastEditedBy" : "542cb949-979d-4bd0-85d1-5e78a11d85dd",
        "tags" : [
        ]
      }
    ],
    "commit" : "158a317aedc738b7b740a3b480a01b4289778847",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +729,733 @@        .. versionadded:: 0.18.0\n\n    dtype : dtype, default np.uint8\n        Data type for new columns. Only a single dtype is allowed.\n"
  },
  {
    "id" : "361d44f6-1a2f-4899-b673-46b2b73a6c5c",
    "prId" : 18636,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18636#pullrequestreview-100630346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be7c814e-8392-433d-a34f-5f309b1f9fff",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here on why excluding tuples",
        "createdAt" : "2018-03-01T23:18:17Z",
        "updatedAt" : "2018-03-20T15:31:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e29374164ff7d3c6e4f974c64602699808cb8c7a",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +400,404 @@        index = MultiIndex.from_arrays([index, self[columns]])\n\n        if is_list_like(values) and not isinstance(values, tuple):\n            # Exclude tuple because it is seen as a single column name\n            indexed = self._constructor(self[values].values, index=index,"
  },
  {
    "id" : "412a323f-b938-4d5b-979c-0c199a5edd89",
    "prId" : 19054,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19054#pullrequestreview-86820240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05998a39-ffb9-429d-9aa7-8a0e3b1a3965",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what test exercises this?",
        "createdAt" : "2018-01-05T03:50:22Z",
        "updatedAt" : "2018-01-07T21:36:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ecf037ef-ec65-41a8-be6a-0cef2573abfd",
        "parentId" : "05998a39-ffb9-429d-9aa7-8a0e3b1a3965",
        "authorId" : "5b92cb23-a777-453d-bf41-18f64947fa97",
        "body" : "https://github.com/pandas-dev/pandas/blob/35b2aba7386619dc156ca245cab781d3aea37789/pandas/tests/test_multilevel.py#L1195\r\nhttps://github.com/pandas-dev/pandas/blob/35b2aba7386619dc156ca245cab781d3aea37789/pandas/tests/frame/test_reshape.py#L136\r\nhttps://github.com/pandas-dev/pandas/blob/35b2aba7386619dc156ca245cab781d3aea37789/pandas/tests/frame/test_reshape.py#L730\r\n\r\nThese were the 3. And it looks like Travis doesn't have permalinks to specific lines like GitHub?",
        "createdAt" : "2018-01-05T04:06:24Z",
        "updatedAt" : "2018-01-07T21:36:02Z",
        "lastEditedBy" : "5b92cb23-a777-453d-bf41-18f64947fa97",
        "tags" : [
        ]
      },
      {
        "id" : "deb86b5b-5398-417f-8104-e5f3f212819a",
        "parentId" : "05998a39-ffb9-429d-9aa7-8a0e3b1a3965",
        "authorId" : "5b92cb23-a777-453d-bf41-18f64947fa97",
        "body" : "Also just took a look at the test that caused most of the builds to fail:\r\nhttps://github.com/pandas-dev/pandas/blob/35b2aba7386619dc156ca245cab781d3aea37789/pandas/tests/frame/test_mutate_columns.py#L186-L198\r\nand we just changed this so I'll go ahead and negate the `assert`.",
        "createdAt" : "2018-01-05T04:18:31Z",
        "updatedAt" : "2018-01-07T21:36:02Z",
        "lastEditedBy" : "5b92cb23-a777-453d-bf41-18f64947fa97",
        "tags" : [
        ]
      }
    ],
    "commit" : "a516fccc6ae8b6f96722147e8a823a891677d296",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +629,633 @@    drop_cols = []\n    for key in unique_groups:\n        try:\n            loc = this.columns.get_loc(key)\n        except KeyError:"
  },
  {
    "id" : "87b2ced7-584b-499f-9f05-a11df61def41",
    "prId" : 21423,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21423#pullrequestreview-132810317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d17ac66-3512-42b4-8154-6264aee3a871",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would rather not add API here. why don't you just do this check inside ``_get_level_number`` itself, and then also add to ``Index`` so you don't also have to add an instance check?",
        "createdAt" : "2018-06-28T00:02:12Z",
        "updatedAt" : "2018-06-28T00:02:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ce4c6578-4ccd-4ac6-b704-1db49b51f731",
        "parentId" : "3d17ac66-3512-42b4-8154-6264aee3a871",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Did you read my comment in the main thread? \r\nThis code above is exactly how it was before. As I said, I also think this is better in get_level_number, but propose to do a follow-up PR that can be merged for 0.24.0, as it gives an additional API change (change in error type)",
        "createdAt" : "2018-06-28T05:38:09Z",
        "updatedAt" : "2018-06-28T05:39:01Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "741cf7b3-c63d-4e02-a7ed-b83619c2404b",
        "parentId" : "3d17ac66-3512-42b4-8154-6264aee3a871",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "then let's just wait till 0.24.0 to do this.",
        "createdAt" : "2018-06-28T10:03:27Z",
        "updatedAt" : "2018-06-28T10:03:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "df5edc70-11a5-42b4-a4da-ac4b93b86a3c",
        "parentId" : "3d17ac66-3512-42b4-8154-6264aee3a871",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "It seems like a good fix for the regression, why not merge it? It's no different that reverting a previous commit.",
        "createdAt" : "2018-06-28T10:59:01Z",
        "updatedAt" : "2018-06-28T10:59:01Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "7f0bbb13-7018-4c59-b246-4ef06e33a085",
        "parentId" : "3d17ac66-3512-42b4-8154-6264aee3a871",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yes, it is how it was for a long time, and this is fixing a regression so it is the point to do it now and not wait for 0.24.0.\r\n\r\nI can certainly do the PR for 0.24.0 to further clean this up, but that will involve an API change so I will not do that in this PR.",
        "createdAt" : "2018-06-28T12:01:54Z",
        "updatedAt" : "2018-06-28T12:01:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "fde82319732fcb00e7a855ea2aca07876ba8e85b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +116,120 @@        self.index = index.remove_unused_levels()\n\n        if isinstance(self.index, MultiIndex):\n            if index._reference_duplicate_name(level):\n                msg = (\"Ambiguous reference to {level}. The index \""
  },
  {
    "id" : "556001bd-bcd7-41bd-9aef-ec1c164df5f2",
    "prId" : 23285,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23285#pullrequestreview-168638268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be57d7e3-f1f3-4a0a-83c5-e62a7ffdec2f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe make a little helper function out of these 3 lines (so you can use it above as well)",
        "createdAt" : "2018-10-26T00:42:59Z",
        "updatedAt" : "2018-11-08T12:26:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6aeafae074ef38843014c55f06caae558e7e3b6",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +638,642 @@                    [x._values for _, x in subset.iteritems()]\n                )\n                N, K = this.shape\n                idx = np.arange(N * K).reshape(K, N).T.ravel()\n                value_slice = value_slice.take(idx)"
  },
  {
    "id" : "34a90f61-0207-4430-aaf2-c91ad303bbcc",
    "prId" : 23512,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23512#pullrequestreview-173906660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c978b1d-1fa2-4d29-9eb4-e4556231cea2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a comment here on what you are doing",
        "createdAt" : "2018-11-11T16:26:43Z",
        "updatedAt" : "2018-12-31T11:44:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7239c214-8821-491f-a8bf-a44359d05209",
        "parentId" : "9c978b1d-1fa2-4d29-9eb4-e4556231cea2",
        "authorId" : "3914ada1-db8a-4915-afe9-8dabfbdf07a3",
        "body" : "Good point - I will add the original comment from a later commit I did not cherry pick.",
        "createdAt" : "2018-11-12T13:50:08Z",
        "updatedAt" : "2018-12-31T11:44:44Z",
        "lastEditedBy" : "3914ada1-db8a-4915-afe9-8dabfbdf07a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3cdbca33363c520afa5b9f9dc564e09096251bb",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +114,118 @@        # will cause int32 overflow on windows environments.\n        # We want to check and raise an error before this happens\n        num_rows = np.max([index_level.size for index_level\n                           in self.new_index_levels])\n        num_columns = self.removed_level.size"
  },
  {
    "id" : "732fcb51-778c-48bf-8afd-f5a88e0cea57",
    "prId" : 24372,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24372#pullrequestreview-187011090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8d9c503-b920-4c6a-b6f3-369632c4a712",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have a routine in pandas.core.dtypes.missing for this already ",
        "createdAt" : "2018-12-20T13:23:34Z",
        "updatedAt" : "2018-12-20T13:23:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6720721a-6197-4a35-a021-a9901f73baac",
        "parentId" : "a8d9c503-b920-4c6a-b6f3-369632c4a712",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "`na_value_for_dtype`, or something else? We need something a little different, since we want the 0 value for each dtype.",
        "createdAt" : "2018-12-20T13:28:24Z",
        "updatedAt" : "2018-12-20T13:28:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5abe2985-699b-42b5-a114-fe14e102fd50",
        "parentId" : "a8d9c503-b920-4c6a-b6f3-369632c4a712",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have that too let’s try to not reinvent the wheel ",
        "createdAt" : "2018-12-20T13:30:25Z",
        "updatedAt" : "2018-12-20T13:30:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4d762b14-e42a-4a8f-8910-d68cf2885be4",
        "parentId" : "a8d9c503-b920-4c6a-b6f3-369632c4a712",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I didn't a function like this in any of the dtypes modules.",
        "createdAt" : "2018-12-20T14:08:40Z",
        "updatedAt" : "2018-12-20T14:08:41Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a65cbc6c3b640bf1ec489d587d65c772160093b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +912,916 @@    if sparse:\n\n        if is_integer_dtype(dtype):\n            fill_value = 0\n        elif dtype == bool:"
  },
  {
    "id" : "4f87348e-fc8d-4a2c-825b-97ba90a4b469",
    "prId" : 27242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27242#pullrequestreview-258546003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "771470df-e81f-45c1-a1af-7bf712ae1896",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would use .rename()",
        "createdAt" : "2019-07-05T20:51:02Z",
        "updatedAt" : "2019-10-14T21:35:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ff2d02cfe69f6fea3158e7636fb5bf89cfc9b89",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +262,266 @@                return self.removed_level._shallow_copy(name=self.removed_name)\n\n            lev = self.removed_level.insert(0, item=self.removed_level._na_value)\n            return lev.rename(self.removed_name)\n"
  }
]