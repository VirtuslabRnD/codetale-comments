[
  {
    "id" : "2b82f110-553a-4760-80ce-1e00d78922ef",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-37275343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a3ff76f-f91c-4790-b111-d4484b906a72",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "``not self.orig_left.index.is_unique``",
        "createdAt" : "2017-05-10T11:22:41Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +972,976 @@\n        # Check uniqueness of each\n        if self.left_index:\n            left_unique = self.orig_left.index.is_unique\n        else:"
  },
  {
    "id" : "d6df0a27-4bab-4c3d-8e6f-fdc04e3377fb",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-37275343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83684a6c-5be9-4462-8d97-57277395c766",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2017-05-10T11:22:50Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +978,982 @@                                                 ).is_unique\n\n        if self.right_index:\n            right_unique = self.orig_right.index.is_unique\n        else:"
  },
  {
    "id" : "d517a0cb-f43f-4032-b1c4-ddbdc6b4ec2e",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-39359802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a278b36b-452f-49fb-a10a-76c006e74b29",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we *might* want to raise a MergeError (inherits from ValueError) instead here (as this is what we do for the other operations). Have a look and see if this is inconsistent",
        "createdAt" : "2017-05-20T15:16:35Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e52e1cf7-c915-42f6-bb49-5d93b4374546",
        "parentId" : "a278b36b-452f-49fb-a10a-76c006e74b29",
        "authorId" : "f53db999-ff5e-4777-9ba4-296d2ecbfa0f",
        "body" : "Converted. I think that's fair. ",
        "createdAt" : "2017-05-21T16:11:43Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "f53db999-ff5e-4777-9ba4-296d2ecbfa0f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +987,991 @@        if validate in [\"one_to_one\", \"1:1\"]:\n            if not left_unique and not right_unique:\n                raise ValueError(\"Merge keys are not unique in either left\"\n                                 \" or right dataset; not a one-to-one merge\")\n            elif not left_unique:"
  },
  {
    "id" : "46942eed-788b-4e08-a6e7-82f61d30000a",
    "prId" : 18352,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18352#pullrequestreview-78598060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8782ba57-8ba6-4fe6-9f27-8f056368be0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this ones good!",
        "createdAt" : "2017-11-22T22:54:49Z",
        "updatedAt" : "2017-11-22T23:59:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3d6fe656df83f4e56363b5e90785d1f37448c24",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +931,935 @@                # let's infer and see if we are ok\n                elif lib.infer_dtype(lk) == lib.infer_dtype(rk):\n                    pass\n\n            # Houston, we have a problem!"
  },
  {
    "id" : "6084c7f2-8f8a-48ce-871e-f194aa2c7352",
    "prId" : 21223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21223#pullrequestreview-139484458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just raise, and more like\r\n\r\n``Can only merge Series or DataFrame objects, a {obj} was passed``",
        "createdAt" : "2018-06-19T01:15:58Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3b905212-ca01-4e8c-81e1-c114cdc79ca6",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Thanks - done - updated the statement and made into a TypeError",
        "createdAt" : "2018-06-19T15:11:10Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      },
      {
        "id" : "c65668bd-79b3-4667-8919-1942f1121101",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is there a reason you changed this to TypeError? \r\nI would personally keep it as ValueError",
        "createdAt" : "2018-07-23T11:09:19Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "06886186-e0e1-434a-ae04-78b1932b544b",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "@jorisvandenbossche Thanks - I thought TypeError is more relevant for the statement below, as the message is telling the user \"only objects of type Series or DataFrame can be merged\"\r\nShould I revert it back to ValueError?",
        "createdAt" : "2018-07-23T12:50:56Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      },
      {
        "id" : "6eed9a22-d030-4c16-aceb-38021a6c0587",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think the one is necessarily much better than the other in this case, so I would personally rather keep it as it was to be conservative.",
        "createdAt" : "2018-07-23T13:15:06Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "69e6395e-1a10-4df9-af3d-b8a004c15131",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Although eg `concat` raises TypeError if the input is not series or dataframe, so maybe TypeError is more consistent with pandas.",
        "createdAt" : "2018-07-23T13:16:26Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "2fb98288-dadf-45f7-99cf-8c579e1c7a43",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Ok - not changing then and keeping it (i.e. TypeError)",
        "createdAt" : "2018-07-23T13:57:02Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d099fd6c78db0739d9abe04bfb5c89720d234a7b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1651,1655 @@        else:\n            return obj.to_frame()\n    else:\n        raise TypeError('Can only merge Series or DataFrame objects, '\n                        'a {obj} was passed'.format(obj=type(obj)))"
  },
  {
    "id" : "0c634f8a-b461-4f5a-98fc-d861db05b980",
    "prId" : 21681,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21681#pullrequestreview-187962560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32766ec5-f69e-4320-acc2-d72ca006c6c2",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do we want the implicit copy from assign here?",
        "createdAt" : "2018-12-26T20:32:36Z",
        "updatedAt" : "2018-12-30T20:32:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4e31683a-3efb-432d-8797-682b4942da48",
        "parentId" : "32766ec5-f69e-4320-acc2-d72ca006c6c2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes, I think there is an implicit bug here as we really need to validate a categorical type vs an object dtype (e.g. imagine a categorical with M8[ns] categories vs merging on a M8[ns] dtype). but I think we have an issue about this already. Changing it was a rabbit hole, so can address in the future.",
        "createdAt" : "2018-12-26T21:20:04Z",
        "updatedAt" : "2018-12-30T20:32:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "647f2deb4580204bd6a385f6ea625b1696468684",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +1001,1005 @@            if name in self.left.columns:\n                typ = lk.categories.dtype if lk_is_cat else object\n                self.left = self.left.assign(\n                    **{name: self.left[name].astype(typ)})\n            if name in self.right.columns:"
  },
  {
    "id" : "310ef142-2ffc-48a9-8fa6-13048408513c",
    "prId" : 22982,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22982#pullrequestreview-161452932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Can you just combine the integer and float dtype check? Looks like they have similar branches",
        "createdAt" : "2018-10-03T19:20:53Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "786a5005-3353-48ee-b30d-472a4cfb46af",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "body" : "I see that they're similar but I think they're both needed so that we only allow integer tolerances for integer series and any numeric for float series. Unless you can think of a succinct way to combine",
        "createdAt" : "2018-10-03T19:36:07Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "tags" : [
        ]
      },
      {
        "id" : "cef68568-7b55-432f-bbf0-ac0b2676ce50",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "A little bulky but:\r\n```\r\nelif is_numeric_dtype(lt):\r\n    if (is_int64_dtype(lt) and not is_integer(self.tolerance)) or (is_float_dtype(lt) and not is_number(self.tolerance)):\r\n        raise ...\r\n    if self.tolerance < 0:\r\n        raise ...\r\n```\r\n\r\nshould work. I guess if it doesn't look entirely readable then the way you have it should be fine.",
        "createdAt" : "2018-10-03T19:55:14Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "c7e5ce05-a7ca-4cad-a74c-03d54c6f4f8e",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "body" : "I personally think that's less readable, I would rather keep it the way it is unless others also feel the same way",
        "createdAt" : "2018-10-04T05:39:17Z",
        "updatedAt" : "2018-10-04T05:39:17Z",
        "lastEditedBy" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "928faaa4aceabde4c4d2a84c161cdaa1f3ec8b32",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1358,1362 @@                    raise MergeError(\"tolerance must be positive\")\n\n            elif is_float_dtype(lt):\n                if not is_number(self.tolerance):\n                    raise MergeError(msg)"
  },
  {
    "id" : "cdfc1497-19c0-4a50-9b38-2527f2fe5872",
    "prId" : 24819,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24819#pullrequestreview-199581889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bf14b24-5858-402c-a064-e1c74474e7d3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versionchanged 0.25.0 here",
        "createdAt" : "2019-02-04T13:26:24Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "71729b242da04c01856f640194f56a76c77ebf12",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +166,170 @@        of a string to indicate that the column name from `left` or\n        `right` should be left as-is, with no suffix. At least one of the\n        values must not be None.\n\n        .. versionchanged:: 0.25.0"
  },
  {
    "id" : "849a335c-d4ac-4151-80ac-81cf30302457",
    "prId" : 24838,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24838#pullrequestreview-194360440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68c163ea-b568-4971-bf3a-6219406819b0",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "note that error message in main code has been changed",
        "createdAt" : "2019-01-19T15:49:25Z",
        "updatedAt" : "2019-01-19T18:14:31Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "20de62ec8b0b4e60ecbdb91a53eb014b94f71dc1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1088,1092 @@            if not left_unique:\n                raise MergeError(\"Merge keys are not unique in left dataset;\"\n                                 \" not a one-to-many merge\")\n\n        elif validate in [\"many_to_one\", \"m:1\"]:"
  },
  {
    "id" : "b90137b9-8e55-447d-abfe-3a147d6889f3",
    "prId" : 24916,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24916#pullrequestreview-196792659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b153c62-845d-48fc-8f3d-258ab95509ed",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why are we converting here to a numpy array? \r\nI suppose we need an array because can't modify the index. But converting to numpy can be lossy for certain dtypes.\r\n\r\nWe should also test if this patch is working for such dtypes.",
        "createdAt" : "2019-01-26T15:53:43Z",
        "updatedAt" : "2019-01-26T15:57:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdce7ac60a9ed495228cc786fe610a4aab77de7f",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +810,814 @@                # take from other_index instead\n                join_list = join_index.to_numpy()\n                other_list = other_index.take(other_indexer).to_numpy()\n                join_list[mask] = other_list[mask]\n                join_index = Index(join_list, dtype=join_index.dtype,"
  },
  {
    "id" : "c0ee7369-df55-4bef-bd70-19db57134fb1",
    "prId" : 24916,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24916#pullrequestreview-197754130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c217a7-8553-4018-ad0f-85e7238ecfca",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Index.take has an argument to see -1 for missing value indicator, would that help here? (not sure not, as you are taking the value from the other index, but I don't fully understand why that is happening)",
        "createdAt" : "2019-01-26T15:55:19Z",
        "updatedAt" : "2019-01-26T15:57:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "401ee4c1-a4f7-4a71-a971-28d240d70825",
        "parentId" : "36c217a7-8553-4018-ad0f-85e7238ecfca",
        "authorId" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "body" : "It is my understanding that `fill_value` parameter would fill all the missing values with the same value, whereas missing values in this PR might need to be filled with different values if they are caused by multiple new values in `other_index`",
        "createdAt" : "2019-01-29T19:56:30Z",
        "updatedAt" : "2019-01-29T19:56:30Z",
        "lastEditedBy" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdce7ac60a9ed495228cc786fe610a4aab77de7f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +804,808 @@            # if final index requires values in other_index but not target\n            # index, indexer may hold missing (-1) values, causing Index.take\n            # to take the final value in target index\n            mask = indexer == -1\n            if np.any(mask):"
  },
  {
    "id" : "75031533-1ef7-45be-809c-8f4bdd48d6de",
    "prId" : 26242,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26242#pullrequestreview-232577634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28681147-d5d5-43d4-a4fe-c00a7b59069a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so instead of this, i would instead just use ``repr(lk.dtype)`` and same for the right; this is a slight change for all dtypes, see if any tests break.",
        "createdAt" : "2019-04-30T10:33:47Z",
        "updatedAt" : "2019-05-01T13:46:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "660c965e-cd6e-4f62-b423-e0189687dc8d",
        "parentId" : "28681147-d5d5-43d4-a4fe-c00a7b59069a",
        "authorId" : "05145819-0347-4c08-bc28-8d5190a3b68e",
        "body" : "What do you mean exactly? Using `repr(lk.dtype) == repr(rk.dtype)` instead of the `is_dtype_equal(...)` comparison? Or instead of the `is_categorical_dtype(...)`? Or both?",
        "createdAt" : "2019-04-30T13:57:01Z",
        "updatedAt" : "2019-05-01T13:46:25Z",
        "lastEditedBy" : "05145819-0347-4c08-bc28-8d5190a3b68e",
        "tags" : [
        ]
      },
      {
        "id" : "1d1389ea-bef4-47aa-8730-a2634b7c748a",
        "parentId" : "28681147-d5d5-43d4-a4fe-c00a7b59069a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "neither use repr(lk.dtype) in the formatter",
        "createdAt" : "2019-05-01T03:21:21Z",
        "updatedAt" : "2019-05-01T13:46:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1b5a4734-8320-4698-93f1-afaf26958a02",
        "parentId" : "28681147-d5d5-43d4-a4fe-c00a7b59069a",
        "authorId" : "05145819-0347-4c08-bc28-8d5190a3b68e",
        "body" : "Makes more sense. Done everywhere in `_get_merge_keys()`. Adjusted the tests that matched on the MergeError exception message to ignore the exact representation of the dtype.",
        "createdAt" : "2019-05-01T13:48:42Z",
        "updatedAt" : "2019-05-01T13:48:42Z",
        "lastEditedBy" : "05145819-0347-4c08-bc28-8d5190a3b68e",
        "tags" : [
        ]
      }
    ],
    "commit" : "464fa3473689adc861fec3b122ee675d3f57ec4f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1447,1451 @@        for i, (lk, rk) in enumerate(zip(left_join_keys, right_join_keys)):\n            if not is_dtype_equal(lk.dtype, rk.dtype):\n                if (is_categorical_dtype(lk.dtype) and\n                        is_categorical_dtype(rk.dtype)):\n                    # The generic error message is confusing for categoricals."
  },
  {
    "id" : "10d00fba-69d3-4a0c-8c4a-b22762e91b44",
    "prId" : 27094,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27094#pullrequestreview-255809791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa7ee503-abca-4e7d-968b-bcd9ce08c2b9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can be a later PR, can you type these args",
        "createdAt" : "2019-06-28T14:44:17Z",
        "updatedAt" : "2019-06-28T16:01:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bee2e39975ed1dc8bbd21d8603fa08f201284f3",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1812,1816 @@\n\ndef _items_overlap_with_suffix(left, lsuffix, right, rsuffix):\n    \"\"\"\n    If two indices overlap, add suffixes to overlapping entries."
  },
  {
    "id" : "f61cc46a-010e-4e37-a8d6-b201faea9d1e",
    "prId" : 27243,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27243#pullrequestreview-374689404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d02c2f8-2571-4844-828e-abf7b33c2a55",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@mroeschke can you comment on why _ndarray_values was chosen here?  does it matter that its really lossy for e.g. PeriodIndex?",
        "createdAt" : "2020-03-14T01:18:20Z",
        "updatedAt" : "2020-03-14T01:18:20Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "95983a47-5e58-4a6b-8885-5854751553db",
        "parentId" : "9d02c2f8-2571-4844-828e-abf7b33c2a55",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I don't recall. I think `_values` or some equivalent would be okay here",
        "createdAt" : "2020-03-14T02:08:52Z",
        "updatedAt" : "2020-03-14T02:08:52Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e7c26c49594a0be14e6f5a4a410f291146bfbc7",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1689,1693 @@            xs = [\n                x if not is_extension_array_dtype(x) else x._ndarray_values for x in xs\n            ]\n            labels = list(string.ascii_lowercase[: len(xs)])\n            dtypes = [x.dtype for x in xs]"
  },
  {
    "id" : "70e2c891-80e7-434e-b3f5-136e4e4ff00b",
    "prId" : 27650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27650#pullrequestreview-268531102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "721d169f-0691-4188-9f27-d19b3097d229",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This should probably be `if not isinstance(self.tolerance, datetime.timedelta)` so users can pass `datetime.timedelta` objects. If you could add a test case for that situation that'd be great.",
        "createdAt" : "2019-07-29T22:04:44Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "3c7dac31-8a80-4288-965f-8f1d6ec33f24",
        "parentId" : "721d169f-0691-4188-9f27-d19b3097d229",
        "authorId" : "b717d697-423f-460c-beb7-e072480a8d45",
        "body" : "see commit \"mroeschke: this test is for you :rocket:\"",
        "createdAt" : "2019-07-30T07:02:41Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "b717d697-423f-460c-beb7-e072480a8d45",
        "tags" : [
        ]
      },
      {
        "id" : "a0ef9c0c-bdab-4404-a2ff-51bf741be34a",
        "parentId" : "721d169f-0691-4188-9f27-d19b3097d229",
        "authorId" : "b717d697-423f-460c-beb7-e072480a8d45",
        "body" : "the test fails",
        "createdAt" : "2019-07-30T07:03:00Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "b717d697-423f-460c-beb7-e072480a8d45",
        "tags" : [
        ]
      },
      {
        "id" : "40311237-fb31-4938-830f-a7faee0b5913",
        "parentId" : "721d169f-0691-4188-9f27-d19b3097d229",
        "authorId" : "b717d697-423f-460c-beb7-e072480a8d45",
        "body" : "I think we'll need a different PR for this test I think, it fails at this conversion check. \r\nhttps://github.com/pandas-dev/pandas/blob/143bc34aa8f068b18e7137df7ca91b9929cc1389/pandas/core/reshape/merge.py#L1704-L1710\r\nWith tolerance = datetime.timedelta -> ERROR: has no attribute \"value\"",
        "createdAt" : "2019-07-30T14:30:05Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "b717d697-423f-460c-beb7-e072480a8d45",
        "tags" : [
        ]
      },
      {
        "id" : "465bc184-612a-4704-8ee4-d98deb1df9e3",
        "parentId" : "721d169f-0691-4188-9f27-d19b3097d229",
        "authorId" : "b717d697-423f-460c-beb7-e072480a8d45",
        "body" : "`datetime.timedelta` objects do not have nanoseconds like `pd.Timedelta` \r\n\r\nAnother check and conversion is necessary to convert `datetime.timedelta` correctly to nanoseconds similarly to `pd.Timedelta.value`",
        "createdAt" : "2019-07-30T14:53:58Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "b717d697-423f-460c-beb7-e072480a8d45",
        "tags" : [
        ]
      },
      {
        "id" : "67d5e87d-02f9-45ce-8567-be13698e3c21",
        "parentId" : "721d169f-0691-4188-9f27-d19b3097d229",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Okay thanks for investigating. Yes, I'd be great to address in another issues/PR.",
        "createdAt" : "2019-07-30T16:53:42Z",
        "updatedAt" : "2019-08-22T11:36:19Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f7151da7a0107bccdc92606fa10dbddffedcce3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1636,1640 @@\n            if is_datetimelike(lt):\n                if not isinstance(self.tolerance, Timedelta):\n                    raise MergeError(msg)\n                if self.tolerance < Timedelta(0):"
  },
  {
    "id" : "1b6d3731-ccf2-4a1f-80a1-a280ddb8f965",
    "prId" : 29490,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29490#pullrequestreview-314584053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0a004dc-9130-4215-8911-54ac5f0faac4",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "was this cleaning or silencing mypy?",
        "createdAt" : "2019-11-08T22:23:40Z",
        "updatedAt" : "2019-11-11T23:23:45Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "3eb28594-bb2d-48dc-902d-92f3b599f9af",
        "parentId" : "c0a004dc-9130-4215-8911-54ac5f0faac4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this was necessary to silence mypy.  i also dont like the pattern that was used before (and am not wild about the `zip` still here, open to suggestions)",
        "createdAt" : "2019-11-08T22:45:59Z",
        "updatedAt" : "2019-11-11T23:23:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c33c76cb-7c61-4847-ba94-92a9ae4bd1e5",
        "parentId" : "c0a004dc-9130-4215-8911-54ac5f0faac4",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "yep. fine with this. just curious.",
        "createdAt" : "2019-11-08T22:49:14Z",
        "updatedAt" : "2019-11-11T23:23:45Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "0b5ffd94-d8b6-4209-83cc-d12603200009",
        "parentId" : "c0a004dc-9130-4215-8911-54ac5f0faac4",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "OK with splitting this out but should probably keep `mapped` as a generator; coercing to list may have some overhead",
        "createdAt" : "2019-11-10T00:36:02Z",
        "updatedAt" : "2019-11-11T23:23:45Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b34a9ac22cdac41cf37ba6e8b93a10567044256a",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +1782,1786 @@    mapped = (fkeys(index.levels[n], join_keys[n]) for n in range(len(index.levels)))\n    zipped = zip(*mapped)\n    rcodes, lcodes, shape = [list(x) for x in zipped]\n    if sort:\n        rcodes = list(map(np.take, rcodes, index.codes))"
  },
  {
    "id" : "b81a4f30-50e7-443b-b6b7-9901cb2a7c97",
    "prId" : 29490,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29490#pullrequestreview-314490231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d767f9e-acf7-4a0d-998e-14bb183861db",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "use py3.6 syntax :)\r\n\r\nmy preference would be to declare outside the if else.",
        "createdAt" : "2019-11-08T22:25:19Z",
        "updatedAt" : "2019-11-11T23:23:45Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b34a9ac22cdac41cf37ba6e8b93a10567044256a",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +585,589 @@\n        if isinstance(self.indicator, str):\n            self.indicator_name = self.indicator  # type: Optional[str]\n        elif isinstance(self.indicator, bool):\n            self.indicator_name = \"_merge\" if self.indicator else None"
  },
  {
    "id" : "897ba9df-77e3-4737-9a95-d8c07979aed3",
    "prId" : 29490,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29490#pullrequestreview-316283318",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8352d002-68b1-45b7-a7d4-b114ec5e03de",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah i think can update to 36 syntax here",
        "createdAt" : "2019-11-12T23:41:48Z",
        "updatedAt" : "2019-11-12T23:42:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c86d1c7e-c2b1-4b3d-9935-0611aed3d556",
        "parentId" : "8352d002-68b1-45b7-a7d4-b114ec5e03de",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually if you can do in a followon is fine.",
        "createdAt" : "2019-11-12T23:42:58Z",
        "updatedAt" : "2019-11-12T23:42:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "061c6c8f-44bf-40a2-ba66-0d3adf418c95",
        "parentId" : "8352d002-68b1-45b7-a7d4-b114ec5e03de",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sounds good",
        "createdAt" : "2019-11-13T00:08:50Z",
        "updatedAt" : "2019-11-13T00:08:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3df72518-9d6e-49dd-93c8-d6c15789c57a",
        "parentId" : "8352d002-68b1-45b7-a7d4-b114ec5e03de",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "and remove the duplicated `_validate_operand` that crept in in the final commit.",
        "createdAt" : "2019-11-13T14:29:09Z",
        "updatedAt" : "2019-11-13T14:29:10Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b34a9ac22cdac41cf37ba6e8b93a10567044256a",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +566,570 @@        _left = _validate_operand(left)\n        _right = _validate_operand(right)\n        self.left = self.orig_left = _validate_operand(_left)  # type: \"DataFrame\"\n        self.right = self.orig_right = _validate_operand(_right)  # type: \"DataFrame\"\n        self.how = how"
  },
  {
    "id" : "9f0a761c-14b8-4b5c-8901-0d270f152036",
    "prId" : 29627,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29627#pullrequestreview-317989258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6a78005-8714-472b-a986-7dd38dcbb97e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can use enumerate here instead of range(len(...))",
        "createdAt" : "2019-11-16T21:16:50Z",
        "updatedAt" : "2019-11-17T15:43:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4895d19e04309d576f133c4cef11570f87c5dcd6",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1301,1305 @@\n    # get left & right join labels and num. of levels at each location\n    mapped = (\n        _factorize_keys(left_keys[n], right_keys[n], sort=sort)\n        for n in range(len(left_keys))"
  },
  {
    "id" : "fbcd4156-f9c0-4b81-adaf-73b202069de0",
    "prId" : 30382,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30382#pullrequestreview-335570913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7215cc1-0e2d-45a7-93cf-561597ffbd5f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "no risk of raising in 127/128?",
        "createdAt" : "2019-12-20T23:49:22Z",
        "updatedAt" : "2019-12-20T23:49:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e30702f2-d9d3-4997-b188-ab8788422799",
        "parentId" : "f7215cc1-0e2d-45a7-93cf-561597ffbd5f",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "It was a risk already, right? This just ensures that a KeyError isn't catched unintended.",
        "createdAt" : "2019-12-20T23:58:10Z",
        "updatedAt" : "2019-12-20T23:58:10Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "c6c648d6-2a30-4edc-84bc-afd3a5b0d971",
        "parentId" : "f7215cc1-0e2d-45a7-93cf-561597ffbd5f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "makes sense, thanks",
        "createdAt" : "2019-12-21T00:01:18Z",
        "updatedAt" : "2019-12-21T00:01:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4276574ef9704c39a9ffedf5d6ccfd5ef7cf26b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +126,130 @@\n        if right.duplicated(by + on).any():\n            _right = right.drop_duplicates(by + on, keep=\"last\")\n            # TODO: use overload to refine return type of drop_duplicates\n            assert _right is not None  # needed for mypy"
  },
  {
    "id" : "00401914-a3a2-4428-8538-37b90702d0f2",
    "prId" : 32537,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32537#pullrequestreview-372070763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "486aa0b8-d37c-428f-9784-e664fb3a3543",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "That does happen somewhere else?",
        "createdAt" : "2020-03-10T08:06:30Z",
        "updatedAt" : "2020-03-11T04:22:23Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f8251226-d702-40a2-91c1-2c8dbb8c75a4",
        "parentId" : "486aa0b8-d37c-428f-9784-e664fb3a3543",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes, in the EA-dtype check below we require matching dtypes",
        "createdAt" : "2020-03-10T15:36:48Z",
        "updatedAt" : "2020-03-11T04:22:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2b0b08b26d2020665d3f6cb8195717f5acad9e4",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1827,1831 @@    if is_datetime64tz_dtype(lk.dtype) and is_datetime64tz_dtype(rk.dtype):\n        # Extract the ndarray (UTC-localized) values\n        # Note: we dont need the dtypes to match, as these can still be compared\n        lk, _ = lk._values_for_factorize()\n        rk, _ = rk._values_for_factorize()"
  }
]