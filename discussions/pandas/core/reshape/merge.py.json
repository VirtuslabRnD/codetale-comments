[
  {
    "id" : "2b82f110-553a-4760-80ce-1e00d78922ef",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-37275343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a3ff76f-f91c-4790-b111-d4484b906a72",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "``not self.orig_left.index.is_unique``",
        "createdAt" : "2017-05-10T11:22:41Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +972,976 @@\n        # Check uniqueness of each\n        if self.left_index:\n            left_unique = self.orig_left.index.is_unique\n        else:"
  },
  {
    "id" : "d6df0a27-4bab-4c3d-8e6f-fdc04e3377fb",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-37275343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83684a6c-5be9-4462-8d97-57277395c766",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2017-05-10T11:22:50Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +978,982 @@                                                 ).is_unique\n\n        if self.right_index:\n            right_unique = self.orig_right.index.is_unique\n        else:"
  },
  {
    "id" : "d517a0cb-f43f-4032-b1c4-ddbdc6b4ec2e",
    "prId" : 16275,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16275#pullrequestreview-39359802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a278b36b-452f-49fb-a10a-76c006e74b29",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we *might* want to raise a MergeError (inherits from ValueError) instead here (as this is what we do for the other operations). Have a look and see if this is inconsistent",
        "createdAt" : "2017-05-20T15:16:35Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e52e1cf7-c915-42f6-bb49-5d93b4374546",
        "parentId" : "a278b36b-452f-49fb-a10a-76c006e74b29",
        "authorId" : "f53db999-ff5e-4777-9ba4-296d2ecbfa0f",
        "body" : "Converted. I think that's fair. ",
        "createdAt" : "2017-05-21T16:11:43Z",
        "updatedAt" : "2017-05-22T08:38:03Z",
        "lastEditedBy" : "f53db999-ff5e-4777-9ba4-296d2ecbfa0f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3488f00bbd69ee528e52a9416645050534cf3cd9",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +987,991 @@        if validate in [\"one_to_one\", \"1:1\"]:\n            if not left_unique and not right_unique:\n                raise ValueError(\"Merge keys are not unique in either left\"\n                                 \" or right dataset; not a one-to-one merge\")\n            elif not left_unique:"
  },
  {
    "id" : "46942eed-788b-4e08-a6e7-82f61d30000a",
    "prId" : 18352,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18352#pullrequestreview-78598060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8782ba57-8ba6-4fe6-9f27-8f056368be0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this ones good!",
        "createdAt" : "2017-11-22T22:54:49Z",
        "updatedAt" : "2017-11-22T23:59:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3d6fe656df83f4e56363b5e90785d1f37448c24",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +931,935 @@                # let's infer and see if we are ok\n                elif lib.infer_dtype(lk) == lib.infer_dtype(rk):\n                    pass\n\n            # Houston, we have a problem!"
  },
  {
    "id" : "6084c7f2-8f8a-48ce-871e-f194aa2c7352",
    "prId" : 21223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21223#pullrequestreview-139484458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just raise, and more like\r\n\r\n``Can only merge Series or DataFrame objects, a {obj} was passed``",
        "createdAt" : "2018-06-19T01:15:58Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3b905212-ca01-4e8c-81e1-c114cdc79ca6",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Thanks - done - updated the statement and made into a TypeError",
        "createdAt" : "2018-06-19T15:11:10Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      },
      {
        "id" : "c65668bd-79b3-4667-8919-1942f1121101",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is there a reason you changed this to TypeError? \r\nI would personally keep it as ValueError",
        "createdAt" : "2018-07-23T11:09:19Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "06886186-e0e1-434a-ae04-78b1932b544b",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "@jorisvandenbossche Thanks - I thought TypeError is more relevant for the statement below, as the message is telling the user \"only objects of type Series or DataFrame can be merged\"\r\nShould I revert it back to ValueError?",
        "createdAt" : "2018-07-23T12:50:56Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      },
      {
        "id" : "6eed9a22-d030-4c16-aceb-38021a6c0587",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think the one is necessarily much better than the other in this case, so I would personally rather keep it as it was to be conservative.",
        "createdAt" : "2018-07-23T13:15:06Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "69e6395e-1a10-4df9-af3d-b8a004c15131",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Although eg `concat` raises TypeError if the input is not series or dataframe, so maybe TypeError is more consistent with pandas.",
        "createdAt" : "2018-07-23T13:16:26Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "2fb98288-dadf-45f7-99cf-8c579e1c7a43",
        "parentId" : "47c684b7-bd3f-403c-8ff6-604b68c58fc3",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Ok - not changing then and keeping it (i.e. TypeError)",
        "createdAt" : "2018-07-23T13:57:02Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d099fd6c78db0739d9abe04bfb5c89720d234a7b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1651,1655 @@        else:\n            return obj.to_frame()\n    else:\n        raise TypeError('Can only merge Series or DataFrame objects, '\n                        'a {obj} was passed'.format(obj=type(obj)))"
  },
  {
    "id" : "0c634f8a-b461-4f5a-98fc-d861db05b980",
    "prId" : 21681,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21681#pullrequestreview-187962560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32766ec5-f69e-4320-acc2-d72ca006c6c2",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do we want the implicit copy from assign here?",
        "createdAt" : "2018-12-26T20:32:36Z",
        "updatedAt" : "2018-12-30T20:32:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4e31683a-3efb-432d-8797-682b4942da48",
        "parentId" : "32766ec5-f69e-4320-acc2-d72ca006c6c2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes, I think there is an implicit bug here as we really need to validate a categorical type vs an object dtype (e.g. imagine a categorical with M8[ns] categories vs merging on a M8[ns] dtype). but I think we have an issue about this already. Changing it was a rabbit hole, so can address in the future.",
        "createdAt" : "2018-12-26T21:20:04Z",
        "updatedAt" : "2018-12-30T20:32:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "647f2deb4580204bd6a385f6ea625b1696468684",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +1001,1005 @@            if name in self.left.columns:\n                typ = lk.categories.dtype if lk_is_cat else object\n                self.left = self.left.assign(\n                    **{name: self.left[name].astype(typ)})\n            if name in self.right.columns:"
  },
  {
    "id" : "310ef142-2ffc-48a9-8fa6-13048408513c",
    "prId" : 22982,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22982#pullrequestreview-161452932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Can you just combine the integer and float dtype check? Looks like they have similar branches",
        "createdAt" : "2018-10-03T19:20:53Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "786a5005-3353-48ee-b30d-472a4cfb46af",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "body" : "I see that they're similar but I think they're both needed so that we only allow integer tolerances for integer series and any numeric for float series. Unless you can think of a succinct way to combine",
        "createdAt" : "2018-10-03T19:36:07Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "tags" : [
        ]
      },
      {
        "id" : "cef68568-7b55-432f-bbf0-ac0b2676ce50",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "A little bulky but:\r\n```\r\nelif is_numeric_dtype(lt):\r\n    if (is_int64_dtype(lt) and not is_integer(self.tolerance)) or (is_float_dtype(lt) and not is_number(self.tolerance)):\r\n        raise ...\r\n    if self.tolerance < 0:\r\n        raise ...\r\n```\r\n\r\nshould work. I guess if it doesn't look entirely readable then the way you have it should be fine.",
        "createdAt" : "2018-10-03T19:55:14Z",
        "updatedAt" : "2018-10-04T05:31:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "c7e5ce05-a7ca-4cad-a74c-03d54c6f4f8e",
        "parentId" : "9a5eec40-bd96-4326-8164-daafb5526041",
        "authorId" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "body" : "I personally think that's less readable, I would rather keep it the way it is unless others also feel the same way",
        "createdAt" : "2018-10-04T05:39:17Z",
        "updatedAt" : "2018-10-04T05:39:17Z",
        "lastEditedBy" : "b95f7761-c5a1-45fb-964d-d39379800f9c",
        "tags" : [
        ]
      }
    ],
    "commit" : "928faaa4aceabde4c4d2a84c161cdaa1f3ec8b32",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1358,1362 @@                    raise MergeError(\"tolerance must be positive\")\n\n            elif is_float_dtype(lt):\n                if not is_number(self.tolerance):\n                    raise MergeError(msg)"
  },
  {
    "id" : "cdfc1497-19c0-4a50-9b38-2527f2fe5872",
    "prId" : 24819,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24819#pullrequestreview-199581889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bf14b24-5858-402c-a064-e1c74474e7d3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versionchanged 0.25.0 here",
        "createdAt" : "2019-02-04T13:26:24Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "71729b242da04c01856f640194f56a76c77ebf12",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +166,170 @@        of a string to indicate that the column name from `left` or\n        `right` should be left as-is, with no suffix. At least one of the\n        values must not be None.\n\n        .. versionchanged:: 0.25.0"
  },
  {
    "id" : "849a335c-d4ac-4151-80ac-81cf30302457",
    "prId" : 24838,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24838#pullrequestreview-194360440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68c163ea-b568-4971-bf3a-6219406819b0",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "note that error message in main code has been changed",
        "createdAt" : "2019-01-19T15:49:25Z",
        "updatedAt" : "2019-01-19T18:14:31Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "20de62ec8b0b4e60ecbdb91a53eb014b94f71dc1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1088,1092 @@            if not left_unique:\n                raise MergeError(\"Merge keys are not unique in left dataset;\"\n                                 \" not a one-to-many merge\")\n\n        elif validate in [\"many_to_one\", \"m:1\"]:"
  },
  {
    "id" : "b90137b9-8e55-447d-abfe-3a147d6889f3",
    "prId" : 24916,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24916#pullrequestreview-196792659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b153c62-845d-48fc-8f3d-258ab95509ed",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why are we converting here to a numpy array? \r\nI suppose we need an array because can't modify the index. But converting to numpy can be lossy for certain dtypes.\r\n\r\nWe should also test if this patch is working for such dtypes.",
        "createdAt" : "2019-01-26T15:53:43Z",
        "updatedAt" : "2019-01-26T15:57:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdce7ac60a9ed495228cc786fe610a4aab77de7f",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +810,814 @@                # take from other_index instead\n                join_list = join_index.to_numpy()\n                other_list = other_index.take(other_indexer).to_numpy()\n                join_list[mask] = other_list[mask]\n                join_index = Index(join_list, dtype=join_index.dtype,"
  },
  {
    "id" : "c0ee7369-df55-4bef-bd70-19db57134fb1",
    "prId" : 24916,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24916#pullrequestreview-197754130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c217a7-8553-4018-ad0f-85e7238ecfca",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Index.take has an argument to see -1 for missing value indicator, would that help here? (not sure not, as you are taking the value from the other index, but I don't fully understand why that is happening)",
        "createdAt" : "2019-01-26T15:55:19Z",
        "updatedAt" : "2019-01-26T15:57:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "401ee4c1-a4f7-4a71-a971-28d240d70825",
        "parentId" : "36c217a7-8553-4018-ad0f-85e7238ecfca",
        "authorId" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "body" : "It is my understanding that `fill_value` parameter would fill all the missing values with the same value, whereas missing values in this PR might need to be filled with different values if they are caused by multiple new values in `other_index`",
        "createdAt" : "2019-01-29T19:56:30Z",
        "updatedAt" : "2019-01-29T19:56:30Z",
        "lastEditedBy" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdce7ac60a9ed495228cc786fe610a4aab77de7f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +804,808 @@            # if final index requires values in other_index but not target\n            # index, indexer may hold missing (-1) values, causing Index.take\n            # to take the final value in target index\n            mask = indexer == -1\n            if np.any(mask):"
  }
]