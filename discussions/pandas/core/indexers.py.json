[
  {
    "id" : "5f871167-6a78-4b21-ba6b-ff30d0d4e960",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-258137304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1801f827-5b0c-45ba-ae28-88440881b67a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add as proper doc-strings",
        "createdAt" : "2019-07-04T14:41:45Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5784c6fd-3e01-47ed-a3e4-2a29d478a422",
        "parentId" : "1801f827-5b0c-45ba-ae28-88440881b67a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2019-07-04T17:40:53Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@    bool\n    \"\"\"\n    # allow a list_like, but exclude NamedTuples which can be indexers\n    return is_list_like(key) and not (isinstance(key, tuple) and type(key) is not tuple)\n"
  },
  {
    "id" : "a76aa9cb-0d79-4fa7-8348-4a55d8e24c1f",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-260210396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if possible to type pls do so (may be tricky)\r\n\r\nI would type with Any explicity if itâ€™s truly that\r\nso we know this is done (meaning it has been typed)\r\n\r\npossible to use reveal_type to figure things out here",
        "createdAt" : "2019-07-04T14:42:54Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "02cf2e61-ded7-44ca-94b4-188d67a50c9e",
        "parentId" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ATM I've added types for everything I had figured out with sufficient certainty.  I'd rather leave it clearly-unfinished so it gets more attention than put Any if we can be more specific",
        "createdAt" : "2019-07-04T17:40:50Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e1ad3efd-231a-4333-b1fa-faf7a0b6efd6",
        "parentId" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you fix this doc-sring in followup and type as much as possible here",
        "createdAt" : "2019-07-10T16:21:20Z",
        "updatedAt" : "2019-07-10T16:21:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@\n\ndef is_scalar_indexer(indexer, arr_value) -> bool:\n    # return True if we are all scalar indexers\n"
  },
  {
    "id" : "727d2119-b9eb-4045-a112-fbb8e816b3b1",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-260210642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcbad0ce-4855-48af-9fc9-67ae2f629364",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "type",
        "createdAt" : "2019-07-10T16:21:42Z",
        "updatedAt" : "2019-07-10T16:21:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\n\ndef check_setitem_lengths(indexer, value, values) -> None:\n    \"\"\"\n    Validate that value and indexer are the same length."
  },
  {
    "id" : "8d51a7ab-fce0-4b68-bac0-0f297bde198e",
    "prId" : 30131,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30131#pullrequestreview-329321761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96575110-3938-433a-911a-4d3cef85f89e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Docstrings ideally start with a one liner that says what the function does. Can you leave something like that?",
        "createdAt" : "2019-12-09T22:14:52Z",
        "updatedAt" : "2019-12-23T08:58:21Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1394e6f19519d6523963e1f838b6bb7d84b72bb3",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +213,217 @@    Return the length of a single non-tuple indexer which could be a slice.\n\n    Returns\n    -------\n    int"
  },
  {
    "id" : "3382a760-dd0b-456f-998d-61836591dfa1",
    "prId" : 30308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30308#pullrequestreview-338527188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeba063a-4a53-4782-a443-19d49414474a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this does not exist now (will do a PR)",
        "createdAt" : "2020-01-06T08:44:36Z",
        "updatedAt" : "2020-01-06T08:52:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ff9f064a-0e60-40c0-a99e-546b9d95e93a",
        "parentId" : "eeba063a-4a53-4782-a443-19d49414474a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "https://github.com/pandas-dev/pandas/pull/30725",
        "createdAt" : "2020-01-06T08:56:32Z",
        "updatedAt" : "2020-01-06T08:56:32Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5004d91cfa3c897e0748de6bca8f2b9e7d92b329",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +275,279 @@    See Also\n    --------\n    api.extensions.is_bool_indexer : Check if `key` is a boolean indexer.\n\n    Examples"
  },
  {
    "id" : "f481ff0d-a86e-44e7-9ecc-2ec281d7775e",
    "prId" : 30308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30308#pullrequestreview-338522525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09be21e9-47cf-413f-a9fe-8662f74fcc05",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we try to improve this error message? We know this is called in terms of indexing, and then something like \"Cannot do boolean indexing with missing values, use fillna(True/False) ...\" would be a much more useful error message than the message about conversion to numpy array.",
        "createdAt" : "2020-01-06T08:50:18Z",
        "updatedAt" : "2020-01-06T08:52:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5004d91cfa3c897e0748de6bca8f2b9e7d92b329",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +301,305 @@    Traceback (most recent call last):\n    ...\n    ValueError: cannot convert to bool numpy array in presence of missing values\n    \"\"\"\n    result = np.asarray(mask, dtype=bool)"
  },
  {
    "id" : "1f8b4242-27aa-4e2c-ae0a-6698186d572f",
    "prId" : 31150,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31150#pullrequestreview-345375725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14e514a7-f0a2-496e-a344-2e3a6093efb4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this subsume check_bool_array_indexer? if not why not?",
        "createdAt" : "2020-01-20T15:08:40Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6e384deb-bbdc-46ec-bfdc-f6127eb6503b",
        "parentId" : "14e514a7-f0a2-496e-a344-2e3a6093efb4",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> does this subsume check_bool_array_indexer? if not why not?\r\n\r\nYes, as mentioned elsewhere as well, if we agree on the general idea of this PR, need to clean this up. I don't think there is a reason to keep both, so was planning to replace `check_bool_array_indexer` completely with `check_array_indexer`\r\n\r\n",
        "createdAt" : "2020-01-20T15:12:30Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a327566b-89e5-42d7-8cb1-0b796d62b34d",
        "parentId" : "14e514a7-f0a2-496e-a344-2e3a6093efb4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k, agree on the general idea, if you can merge them would be ideal.",
        "createdAt" : "2020-01-20T15:15:57Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ea9b4ffdc5a81301397213160990c667c148d8",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +371,375 @@    ...\n    IndexError: arrays used as indices must be of integer or boolean type\n    \"\"\"\n    from pandas.core.construction import array as pd_array\n"
  },
  {
    "id" : "7bf3f8ae-5ec6-4a03-8e64-5d780fb2eb33",
    "prId" : 31150,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31150#pullrequestreview-348078889",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4601e423-e0be-439d-8fd8-b2106d1520a6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add some examples with non EA dtypes",
        "createdAt" : "2020-01-23T04:36:29Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "38856b58-4941-46ac-8899-1ea871f90e60",
        "parentId" : "4601e423-e0be-439d-8fd8-b2106d1520a6",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Added more examples",
        "createdAt" : "2020-01-24T16:39:09Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ea9b4ffdc5a81301397213160990c667c148d8",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +358,362 @@    array([0, 2])\n\n    >>> indexer = pd.array([0, pd.NA], dtype=\"Int64\")\n    >>> pd.api.indexers.check_array_indexer(arr, indexer)\n    Traceback (most recent call last):"
  },
  {
    "id" : "3c7db6fa-b6c9-46dd-9c1e-c8aab3b93794",
    "prId" : 31150,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31150#pullrequestreview-347265790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8da6173f-17e4-4001-90ff-9a9f5f3b2957",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this not also calling is_bool_indexer? which iirc we did i ln the original",
        "createdAt" : "2020-01-23T04:37:35Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8198edf5-2830-4ec7-ab88-250ce0e82e7b",
        "parentId" : "8da6173f-17e4-4001-90ff-9a9f5f3b2957",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The previous `check_bool_array_indexer` didn't do this (but it assumed it was already checked to be boolean). The reason I didn't use `is_bool_indexer` here is because that does more inference (will add a more elaborate comment non-inline)",
        "createdAt" : "2020-01-23T12:48:06Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ea9b4ffdc5a81301397213160990c667c148d8",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +404,408 @@                f\"{len(indexer)} instead of {len(array)}\"\n            )\n    elif is_integer_dtype(dtype):\n        try:\n            indexer = np.asarray(indexer, dtype=np.intp)"
  },
  {
    "id" : "3b5a9659-0c94-4a21-b078-3114a23ad33e",
    "prId" : 31150,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31150#pullrequestreview-348632914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77d40fe7-5b8c-40a1-9130-0871ac4610fb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so either should change the doc-string to be Any, or raise on a non-list-like. personally I would actually relax this and avoid the need to have ``is_list_like`` checks *before* calling this.\r\n\r\nNeed tests either way on handling non-list-likes (or raising)",
        "createdAt" : "2020-01-27T12:41:03Z",
        "updatedAt" : "2020-01-28T22:45:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ea9b4ffdc5a81301397213160990c667c148d8",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +385,389 @@\n    # convert list-likes to array\n    if not is_array_like(indexer):\n        indexer = pd_array(indexer)\n        if len(indexer) == 0:"
  },
  {
    "id" : "95ea5cd2-b113-43b9-a572-17a13d02f1aa",
    "prId" : 31591,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31591#pullrequestreview-355985094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc2fe52-2a96-449c-8562-0d3f4344684e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we ought to think about adding a ``pd.asarray`` that does exactly this (as we have this idiom in several PRs).\r\n\r\ncc @jorisvandenbossche @TomAugspurger ",
        "createdAt" : "2020-02-10T12:44:28Z",
        "updatedAt" : "2020-02-21T19:44:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2257f6f2-9660-4c2c-b21c-0902d5e27eca",
        "parentId" : "3bc2fe52-2a96-449c-8562-0d3f4344684e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In general that might be useful, but what would it solve here? (we are converting to numpy, not to an extension array, and we need to use a very specific na_value)",
        "createdAt" : "2020-02-10T14:43:03Z",
        "updatedAt" : "2020-02-21T19:44:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "080d1d2129f101460af12b23d6f2b400e1a66e61",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +424,428 @@    dtype = indexer.dtype\n    if is_bool_dtype(dtype):\n        if is_extension_array_dtype(dtype):\n            indexer = indexer.to_numpy(dtype=bool, na_value=False)\n        else:"
  },
  {
    "id" : "66806c43-3922-4396-9f06-0313e37dea62",
    "prId" : 31897,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31897#pullrequestreview-358402944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a59b51bf-325a-4b05-b142-a51dead7158a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make this in to a separate elif clause (for list)",
        "createdAt" : "2020-02-13T12:44:32Z",
        "updatedAt" : "2020-02-13T17:16:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c65dfde1-af17-4fa7-aa37-0cd0b0ec7632",
        "parentId" : "a59b51bf-325a-4b05-b142-a51dead7158a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2020-02-13T17:13:29Z",
        "updatedAt" : "2020-02-13T17:16:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7925a463-2f1a-4862-9321-becac357db60",
        "parentId" : "a59b51bf-325a-4b05-b142-a51dead7158a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "actually, this seems awkward since we end up checking for bool dtype in two palces",
        "createdAt" : "2020-02-13T17:16:31Z",
        "updatedAt" : "2020-02-13T17:16:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d43fc6560637f6071e94a0cbecdd1b4a9ee46fc",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +245,249 @@            step = -step\n        return (stop - start + step - 1) // step\n    elif isinstance(indexer, (ABCSeries, ABCIndexClass, np.ndarray, list)):\n        if isinstance(indexer, list):\n            indexer = np.array(indexer)"
  },
  {
    "id" : "3b39df25-60e8-4e74-abfe-463f9003bf27",
    "prId" : 31906,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31906#pullrequestreview-359941369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d89ee3ba-d6de-459d-96b3-9f1fc41fab52",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "type when you can Union[List, Tuple] ?",
        "createdAt" : "2020-02-17T19:52:52Z",
        "updatedAt" : "2020-02-17T19:53:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "32baf41ec60bfeb9053a6d6eff164dda1b6b7094",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +272,276 @@\ndef unpack_1tuple(tup):\n    \"\"\"\n    If we have a length-1 tuple/list that contains a slice, unpack to just\n    the slice."
  },
  {
    "id" : "ce50b745-7c4a-45fb-9e38-95d05e2286c7",
    "prId" : 32850,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32850#pullrequestreview-378378777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a2b87df-fc24-49ee-a4e6-f57a456362cf",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "can you add a parameters section to the docstring while in the neighbourhood and making changes to the parameters",
        "createdAt" : "2020-03-20T10:42:55Z",
        "updatedAt" : "2020-03-20T18:37:13Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9a40592d2ff0b080086f4b00df3b89c03676490",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +66,70 @@\n\ndef is_scalar_indexer(indexer, ndim: int) -> bool:\n    \"\"\"\n    Return True if we are all scalar indexers."
  },
  {
    "id" : "69ecd4e7-458c-4ec4-b4d9-e6052614eca4",
    "prId" : 35141,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35141#pullrequestreview-443170916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a5a2042-73c8-4ca1-b22d-44f36c09f251",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Elevated to a FutureWarning. It was originally a DeprecationWarning for matplotlib.",
        "createdAt" : "2020-07-06T15:16:14Z",
        "updatedAt" : "2020-07-06T20:22:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "23b1766583cd21db557a37e6b1ba7db321bf7fe0",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +310,314 @@            \"is deprecated and will be removed in a future \"\n            \"version.  Convert to a numpy array before indexing instead.\",\n            FutureWarning,\n            stacklevel=stacklevel,\n        )"
  },
  {
    "id" : "8cdc7eaf-d172-43e0-b704-c8f5f4262cb5",
    "prId" : 37761,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37761#pullrequestreview-660191125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d96fb6f-ceab-4449-bd02-8b9c342099f1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should't this be is_list_like? (e.g. if the indexer is a np.array?)",
        "createdAt" : "2021-05-02T23:38:54Z",
        "updatedAt" : "2021-05-02T23:39:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "55b3fc4d-fd00-4e7c-8ba8-4b0f540a5993",
        "parentId" : "8d96fb6f-ceab-4449-bd02-8b9c342099f1",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "If we already have an array, we don't have to cast to array",
        "createdAt" : "2021-05-14T20:31:12Z",
        "updatedAt" : "2021-05-14T20:31:12Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5c15c9da46b56099405cf2268dd18b2d317eb27",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +167,171 @@            if len(indexer) != len(value) and values.ndim == 1:\n                # boolean with truth values == len of the value is ok too\n                if isinstance(indexer, list):\n                    indexer = np.array(indexer)\n                if not ("
  }
]