[
  {
    "id" : "5f871167-6a78-4b21-ba6b-ff30d0d4e960",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-258137304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1801f827-5b0c-45ba-ae28-88440881b67a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add as proper doc-strings",
        "createdAt" : "2019-07-04T14:41:45Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5784c6fd-3e01-47ed-a3e4-2a29d478a422",
        "parentId" : "1801f827-5b0c-45ba-ae28-88440881b67a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2019-07-04T17:40:53Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@    bool\n    \"\"\"\n    # allow a list_like, but exclude NamedTuples which can be indexers\n    return is_list_like(key) and not (isinstance(key, tuple) and type(key) is not tuple)\n"
  },
  {
    "id" : "a76aa9cb-0d79-4fa7-8348-4a55d8e24c1f",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-260210396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if possible to type pls do so (may be tricky)\r\n\r\nI would type with Any explicity if itâ€™s truly that\r\nso we know this is done (meaning it has been typed)\r\n\r\npossible to use reveal_type to figure things out here",
        "createdAt" : "2019-07-04T14:42:54Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "02cf2e61-ded7-44ca-94b4-188d67a50c9e",
        "parentId" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ATM I've added types for everything I had figured out with sufficient certainty.  I'd rather leave it clearly-unfinished so it gets more attention than put Any if we can be more specific",
        "createdAt" : "2019-07-04T17:40:50Z",
        "updatedAt" : "2019-07-08T13:51:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e1ad3efd-231a-4333-b1fa-faf7a0b6efd6",
        "parentId" : "1ec2a1ad-feac-4f36-ba86-b41e44af88da",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you fix this doc-sring in followup and type as much as possible here",
        "createdAt" : "2019-07-10T16:21:20Z",
        "updatedAt" : "2019-07-10T16:21:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@\n\ndef is_scalar_indexer(indexer, arr_value) -> bool:\n    # return True if we are all scalar indexers\n"
  },
  {
    "id" : "727d2119-b9eb-4045-a112-fbb8e816b3b1",
    "prId" : 27229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27229#pullrequestreview-260210642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcbad0ce-4855-48af-9fc9-67ae2f629364",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "type",
        "createdAt" : "2019-07-10T16:21:42Z",
        "updatedAt" : "2019-07-10T16:21:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "39fa0141fb2a695fb47bac4a4895e3c6c8de41f5",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\n\ndef check_setitem_lengths(indexer, value, values) -> None:\n    \"\"\"\n    Validate that value and indexer are the same length."
  },
  {
    "id" : "8d51a7ab-fce0-4b68-bac0-0f297bde198e",
    "prId" : 30131,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30131#pullrequestreview-329321761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96575110-3938-433a-911a-4d3cef85f89e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Docstrings ideally start with a one liner that says what the function does. Can you leave something like that?",
        "createdAt" : "2019-12-09T22:14:52Z",
        "updatedAt" : "2019-12-23T08:58:21Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1394e6f19519d6523963e1f838b6bb7d84b72bb3",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +213,217 @@    Return the length of a single non-tuple indexer which could be a slice.\n\n    Returns\n    -------\n    int"
  },
  {
    "id" : "3382a760-dd0b-456f-998d-61836591dfa1",
    "prId" : 30308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30308#pullrequestreview-338527188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeba063a-4a53-4782-a443-19d49414474a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "this does not exist now (will do a PR)",
        "createdAt" : "2020-01-06T08:44:36Z",
        "updatedAt" : "2020-01-06T08:52:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ff9f064a-0e60-40c0-a99e-546b9d95e93a",
        "parentId" : "eeba063a-4a53-4782-a443-19d49414474a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "https://github.com/pandas-dev/pandas/pull/30725",
        "createdAt" : "2020-01-06T08:56:32Z",
        "updatedAt" : "2020-01-06T08:56:32Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5004d91cfa3c897e0748de6bca8f2b9e7d92b329",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +275,279 @@    See Also\n    --------\n    api.extensions.is_bool_indexer : Check if `key` is a boolean indexer.\n\n    Examples"
  },
  {
    "id" : "f481ff0d-a86e-44e7-9ecc-2ec281d7775e",
    "prId" : 30308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30308#pullrequestreview-338522525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09be21e9-47cf-413f-a9fe-8662f74fcc05",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we try to improve this error message? We know this is called in terms of indexing, and then something like \"Cannot do boolean indexing with missing values, use fillna(True/False) ...\" would be a much more useful error message than the message about conversion to numpy array.",
        "createdAt" : "2020-01-06T08:50:18Z",
        "updatedAt" : "2020-01-06T08:52:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "5004d91cfa3c897e0748de6bca8f2b9e7d92b329",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +301,305 @@    Traceback (most recent call last):\n    ...\n    ValueError: cannot convert to bool numpy array in presence of missing values\n    \"\"\"\n    result = np.asarray(mask, dtype=bool)"
  }
]