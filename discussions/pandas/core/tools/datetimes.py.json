[
  {
    "id" : "e980830d-5a65-4a7f-8d81-30b473ba1d92",
    "prId" : 17077,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17077#pullrequestreview-67328505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136d1d2f-e662-4c15-b983-7f0902a70217",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "default is True",
        "createdAt" : "2017-10-05T10:17:05Z",
        "updatedAt" : "2017-11-11T18:39:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "07fa22d12302252607cbe2edc3bc31f3a144515e",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +180,184 @@\n        .. versionadded: 0.20.0\n    cache : boolean, default False\n        If True, use a cache of unique, converted dates to apply the datetime\n        conversion. May produce sigificant speed-up when parsing duplicate date"
  },
  {
    "id" : "d7bde6b7-5912-42c3-a52e-b55cecb1cf43",
    "prId" : 17077,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17077#pullrequestreview-74417116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3026fd57-6523-4b14-8bda-a59390c07490",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this still looks pretty duplicative, but I guess ok for now.",
        "createdAt" : "2017-11-06T13:41:31Z",
        "updatedAt" : "2017-11-11T18:39:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "07fa22d12302252607cbe2edc3bc31f3a144515e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +444,448 @@    elif isinstance(arg, ABCSeries):\n        cache_array = _maybe_cache(arg, format, cache, tz, _convert_listlike)\n        if not cache_array.empty:\n            result = arg.map(cache_array)\n        else:"
  },
  {
    "id" : "b67453ed-643b-41d3-86a6-e6e3ff4899ae",
    "prId" : 17109,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17109#pullrequestreview-58057106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73d0168d-810b-406f-8923-6da5181ce2bc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks like lots of code was removed",
        "createdAt" : "2017-08-23T12:09:58Z",
        "updatedAt" : "2017-09-01T07:00:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb7d9cf1349a1df786732fda04aa75f76b2f46c",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +516,520 @@        result = arg\n    elif isinstance(arg, ABCSeries):\n        from pandas import Series\n        values = _convert_listlike(arg._values, True, format)\n        result = Series(values, index=arg.index, name=arg.name)"
  },
  {
    "id" : "59725cee-33bb-4d9d-b190-cd4df60d7491",
    "prId" : 17363,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17363#pullrequestreview-64767579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "994e7f95-3a96-4572-a68d-e35e1366b0cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can come back in future and de-privatize these in tslib.parsing (and change here)",
        "createdAt" : "2017-09-24T13:29:01Z",
        "updatedAt" : "2017-09-25T15:06:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1f0ccde0-e8e9-4e2a-950c-162c0c9bdbcd",
        "parentId" : "994e7f95-3a96-4572-a68d-e35e1366b0cf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just added to TODO list in #17652",
        "createdAt" : "2017-09-24T17:08:00Z",
        "updatedAt" : "2017-09-25T15:06:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89d11e4cc5be5cbf8de4632c4a51bdf4a51bcc9",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@from pandas._libs.tslibs.parsing import (  # noqa\n    parse_time_string,\n    _format_is_iso,\n    _guess_datetime_format)\n"
  },
  {
    "id" : "cc92b826-4f4a-4543-b7ca-df6788e11b4a",
    "prId" : 21702,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21702#pullrequestreview-133736112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74c2d98c-2730-48fc-a5f1-a5c09d884406",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "+1 for separating this out",
        "createdAt" : "2018-07-02T18:42:41Z",
        "updatedAt" : "2018-07-03T05:24:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9320f103291d83c7db7917cb513e02749447ae4",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +288,292 @@\n\ndef _adjust_to_origin(arg, origin, unit):\n    \"\"\"\n    Helper function for to_datetime."
  },
  {
    "id" : "3af93c2c-e8ed-409b-bd0b-7f441376e187",
    "prId" : 22457,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22457#pullrequestreview-148848132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e3b91c-6556-4bdc-ae6b-d9b6121900a0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some comments here would be great (just to make it easier to read, the block below as well)",
        "createdAt" : "2018-08-23T10:25:51Z",
        "updatedAt" : "2018-08-23T17:05:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f5f924cf7fbeea77a17319a75b026f0df9e026e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +277,281 @@            )\n            if tz_parsed is not None:\n                if box:\n                    # We can take a shortcut since the datetime64 numpy array\n                    # is in UTC"
  },
  {
    "id" : "01413213-ea61-4a5c-b4e2-39435044b2c6",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "641d9bc9-0b61-414c-8f21-5e02317efdb7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you document what is going on here",
        "createdAt" : "2018-11-18T17:52:50Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5923be41-3e0e-49b1-b74c-7111461aed41",
        "parentId" : "641d9bc9-0b61-414c-8f21-5e02317efdb7",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2018-11-18T20:35:25Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +276,280 @@                return DatetimeIndex._simple_new(values, name=name, tz=tz)\n            except (ValueError, TypeError):\n                raise e\n\n    if result is None:"
  },
  {
    "id" : "af9fa373-87f3-4b8f-bffe-54690e773126",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "405dccf5-7407-470e-9ffd-0b376fc5f043",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this lowercase?",
        "createdAt" : "2018-11-18T17:53:01Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "51fc8dcc-2f5b-4ece-8aa7-14ce22b3b914",
        "parentId" : "405dccf5-7407-470e-9ffd-0b376fc5f043",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is how it is implemented in master.  We'll improve this in the upcoming passes specific to `to_datetime`.  Changing this behavior here is out of scope.",
        "createdAt" : "2018-11-18T20:31:06Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +280,284 @@    if result is None:\n        assert format is None or infer_datetime_format\n        utc = tz == 'utc'\n        result, tz_parsed = objects_to_datetime64ns(\n            arg, dayfirst=dayfirst, yearfirst=yearfirst,"
  },
  {
    "id" : "e107bd00-8e77-4e36-b9ca-11a444ac1ed2",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e688ec73-3528-4b71-9945-c6bec557dba4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i find this allow_object pretty obtuse",
        "createdAt" : "2018-11-18T17:53:13Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea461c87-19ee-437c-9d00-49b0af4f2319",
        "parentId" : "e688ec73-3528-4b71-9945-c6bec557dba4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The alternative is to raise unconditionally in objects_to_datetime64ns, include the result in the exception args, then catch and extract it here.  That was actually what I did in the first pass, but this is much more straightforward.",
        "createdAt" : "2018-11-18T20:29:25Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +284,288 @@            arg, dayfirst=dayfirst, yearfirst=yearfirst,\n            utc=utc, errors=errors, require_iso8601=require_iso8601,\n            allow_object=True)\n\n    if tz_parsed is not None:"
  },
  {
    "id" : "70ce9254-e72f-471b-9af7-01208d180c17",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-178582034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37c2e180-5453-4aa0-929d-ce80ac6c4c41",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same here, why the extra try/except?",
        "createdAt" : "2018-11-27T02:00:27Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +272,276 @@            # Fallback to try to convert datetime objects if timezone-aware\n            #  datetime objects are found without passing `utc=True`\n            try:\n                values, tz = conversion.datetime_to_datetime64(arg)\n                return DatetimeIndex._simple_new(values, name=name, tz=tz)"
  },
  {
    "id" : "d5628b98-46df-43f8-bd75-f5e965fc2644",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-180580361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0d22c4e-1f21-419f-80df-f75c74591d55",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cam you be slightly more specific on 'fallback', e.g. when would this be triggered",
        "createdAt" : "2018-12-02T21:49:57Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "833eaa69-c530-4ec9-a77f-05adeebbad0a",
        "parentId" : "a0d22c4e-1f21-419f-80df-f75c74591d55",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I'll flesh out the comment.  The gist of it is if tz-aware datetime objects are passed and `utc=True` is _not_ passed, then `array_to_datetime` will raise a `ValueError` and `datetime_to_datetime64` will handle this case.\r\n\r\nIt's a mess and is a big reason why I've been making array_to_datetime PRs: #24006 is an attempt to fix it, but there are some design questions @mroeschke and I are still batting around.",
        "createdAt" : "2018-12-02T22:11:57Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +272,276 @@            # Fallback to try to convert datetime objects if timezone-aware\n            #  datetime objects are found without passing `utc=True`\n            try:\n                values, tz = conversion.datetime_to_datetime64(arg)\n                return DatetimeIndex._simple_new(values, name=name, tz=tz)"
  }
]