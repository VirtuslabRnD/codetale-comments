[
  {
    "id" : "e980830d-5a65-4a7f-8d81-30b473ba1d92",
    "prId" : 17077,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17077#pullrequestreview-67328505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "136d1d2f-e662-4c15-b983-7f0902a70217",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "default is True",
        "createdAt" : "2017-10-05T10:17:05Z",
        "updatedAt" : "2017-11-11T18:39:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "07fa22d12302252607cbe2edc3bc31f3a144515e",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +180,184 @@\n        .. versionadded: 0.20.0\n    cache : boolean, default False\n        If True, use a cache of unique, converted dates to apply the datetime\n        conversion. May produce sigificant speed-up when parsing duplicate date"
  },
  {
    "id" : "d7bde6b7-5912-42c3-a52e-b55cecb1cf43",
    "prId" : 17077,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17077#pullrequestreview-74417116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3026fd57-6523-4b14-8bda-a59390c07490",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this still looks pretty duplicative, but I guess ok for now.",
        "createdAt" : "2017-11-06T13:41:31Z",
        "updatedAt" : "2017-11-11T18:39:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "07fa22d12302252607cbe2edc3bc31f3a144515e",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +444,448 @@    elif isinstance(arg, ABCSeries):\n        cache_array = _maybe_cache(arg, format, cache, tz, _convert_listlike)\n        if not cache_array.empty:\n            result = arg.map(cache_array)\n        else:"
  },
  {
    "id" : "b67453ed-643b-41d3-86a6-e6e3ff4899ae",
    "prId" : 17109,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17109#pullrequestreview-58057106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73d0168d-810b-406f-8923-6da5181ce2bc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks like lots of code was removed",
        "createdAt" : "2017-08-23T12:09:58Z",
        "updatedAt" : "2017-09-01T07:00:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb7d9cf1349a1df786732fda04aa75f76b2f46c",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +516,520 @@        result = arg\n    elif isinstance(arg, ABCSeries):\n        from pandas import Series\n        values = _convert_listlike(arg._values, True, format)\n        result = Series(values, index=arg.index, name=arg.name)"
  },
  {
    "id" : "59725cee-33bb-4d9d-b190-cd4df60d7491",
    "prId" : 17363,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17363#pullrequestreview-64767579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "994e7f95-3a96-4572-a68d-e35e1366b0cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can come back in future and de-privatize these in tslib.parsing (and change here)",
        "createdAt" : "2017-09-24T13:29:01Z",
        "updatedAt" : "2017-09-25T15:06:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1f0ccde0-e8e9-4e2a-950c-162c0c9bdbcd",
        "parentId" : "994e7f95-3a96-4572-a68d-e35e1366b0cf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just added to TODO list in #17652",
        "createdAt" : "2017-09-24T17:08:00Z",
        "updatedAt" : "2017-09-25T15:06:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89d11e4cc5be5cbf8de4632c4a51bdf4a51bcc9",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@from pandas._libs.tslibs.parsing import (  # noqa\n    parse_time_string,\n    _format_is_iso,\n    _guess_datetime_format)\n"
  },
  {
    "id" : "cc92b826-4f4a-4543-b7ca-df6788e11b4a",
    "prId" : 21702,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21702#pullrequestreview-133736112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74c2d98c-2730-48fc-a5f1-a5c09d884406",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "+1 for separating this out",
        "createdAt" : "2018-07-02T18:42:41Z",
        "updatedAt" : "2018-07-03T05:24:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9320f103291d83c7db7917cb513e02749447ae4",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +288,292 @@\n\ndef _adjust_to_origin(arg, origin, unit):\n    \"\"\"\n    Helper function for to_datetime."
  },
  {
    "id" : "3af93c2c-e8ed-409b-bd0b-7f441376e187",
    "prId" : 22457,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22457#pullrequestreview-148848132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1e3b91c-6556-4bdc-ae6b-d9b6121900a0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some comments here would be great (just to make it easier to read, the block below as well)",
        "createdAt" : "2018-08-23T10:25:51Z",
        "updatedAt" : "2018-08-23T17:05:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f5f924cf7fbeea77a17319a75b026f0df9e026e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +277,281 @@            )\n            if tz_parsed is not None:\n                if box:\n                    # We can take a shortcut since the datetime64 numpy array\n                    # is in UTC"
  },
  {
    "id" : "01413213-ea61-4a5c-b4e2-39435044b2c6",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "641d9bc9-0b61-414c-8f21-5e02317efdb7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you document what is going on here",
        "createdAt" : "2018-11-18T17:52:50Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5923be41-3e0e-49b1-b74c-7111461aed41",
        "parentId" : "641d9bc9-0b61-414c-8f21-5e02317efdb7",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2018-11-18T20:35:25Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +276,280 @@                return DatetimeIndex._simple_new(values, name=name, tz=tz)\n            except (ValueError, TypeError):\n                raise e\n\n    if result is None:"
  },
  {
    "id" : "af9fa373-87f3-4b8f-bffe-54690e773126",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "405dccf5-7407-470e-9ffd-0b376fc5f043",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this lowercase?",
        "createdAt" : "2018-11-18T17:53:01Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "51fc8dcc-2f5b-4ece-8aa7-14ce22b3b914",
        "parentId" : "405dccf5-7407-470e-9ffd-0b376fc5f043",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is how it is implemented in master.  We'll improve this in the upcoming passes specific to `to_datetime`.  Changing this behavior here is out of scope.",
        "createdAt" : "2018-11-18T20:31:06Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +280,284 @@    if result is None:\n        assert format is None or infer_datetime_format\n        utc = tz == 'utc'\n        result, tz_parsed = objects_to_datetime64ns(\n            arg, dayfirst=dayfirst, yearfirst=yearfirst,"
  },
  {
    "id" : "e107bd00-8e77-4e36-b9ca-11a444ac1ed2",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-176104696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e688ec73-3528-4b71-9945-c6bec557dba4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i find this allow_object pretty obtuse",
        "createdAt" : "2018-11-18T17:53:13Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea461c87-19ee-437c-9d00-49b0af4f2319",
        "parentId" : "e688ec73-3528-4b71-9945-c6bec557dba4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The alternative is to raise unconditionally in objects_to_datetime64ns, include the result in the exception args, then catch and extract it here.  That was actually what I did in the first pass, but this is much more straightforward.",
        "createdAt" : "2018-11-18T20:29:25Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +284,288 @@            arg, dayfirst=dayfirst, yearfirst=yearfirst,\n            utc=utc, errors=errors, require_iso8601=require_iso8601,\n            allow_object=True)\n\n    if tz_parsed is not None:"
  },
  {
    "id" : "70ce9254-e72f-471b-9af7-01208d180c17",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-178582034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37c2e180-5453-4aa0-929d-ce80ac6c4c41",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same here, why the extra try/except?",
        "createdAt" : "2018-11-27T02:00:27Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +272,276 @@            # Fallback to try to convert datetime objects if timezone-aware\n            #  datetime objects are found without passing `utc=True`\n            try:\n                values, tz = conversion.datetime_to_datetime64(arg)\n                return DatetimeIndex._simple_new(values, name=name, tz=tz)"
  },
  {
    "id" : "d5628b98-46df-43f8-bd75-f5e965fc2644",
    "prId" : 23675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23675#pullrequestreview-180580361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0d22c4e-1f21-419f-80df-f75c74591d55",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cam you be slightly more specific on 'fallback', e.g. when would this be triggered",
        "createdAt" : "2018-12-02T21:49:57Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "833eaa69-c530-4ec9-a77f-05adeebbad0a",
        "parentId" : "a0d22c4e-1f21-419f-80df-f75c74591d55",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I'll flesh out the comment.  The gist of it is if tz-aware datetime objects are passed and `utc=True` is _not_ passed, then `array_to_datetime` will raise a `ValueError` and `datetime_to_datetime64` will handle this case.\r\n\r\nIt's a mess and is a big reason why I've been making array_to_datetime PRs: #24006 is an attempt to fix it, but there are some design questions @mroeschke and I are still batting around.",
        "createdAt" : "2018-12-02T22:11:57Z",
        "updatedAt" : "2018-12-03T01:33:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d5b353bc367cc06417716c58d40f990d3eee7d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +272,276 @@            # Fallback to try to convert datetime objects if timezone-aware\n            #  datetime objects are found without passing `utc=True`\n            try:\n                values, tz = conversion.datetime_to_datetime64(arg)\n                return DatetimeIndex._simple_new(values, name=name, tz=tz)"
  },
  {
    "id" : "8810355c-c203-47b0-86fd-ddec39bfbf80",
    "prId" : 24407,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24407#pullrequestreview-187727968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c19bc181-9adb-4c82-9b66-487f3c8e339f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does box=False actually make sense for this?",
        "createdAt" : "2018-12-24T19:44:52Z",
        "updatedAt" : "2018-12-24T19:45:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5642c0bc-3107-4ce4-82d8-53ed7d3c68ae",
        "parentId" : "c19bc181-9adb-4c82-9b66-487f3c8e339f",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Although probably uncommon, I think it's reasonable to return a numpy array from a unit mapping.",
        "createdAt" : "2018-12-24T19:48:15Z",
        "updatedAt" : "2018-12-24T19:48:15Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "97c05f3af88a0d3b4fa738c484083f39e4398a75",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +709,713 @@                raise ValueError(\"cannot assemble the datetimes [{value}]: \"\n                                 \"{error}\".format(value=value, error=e))\n    if not box:\n        return values.values\n    return values"
  },
  {
    "id" : "f82a3a25-61ee-449b-a335-4101841b6f86",
    "prId" : 26043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26043#pullrequestreview-238902956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd84daa-8193-4bba-8735-3545e3f0275c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just add a new entry for the change ",
        "createdAt" : "2019-05-15T12:32:51Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "82e70cc7-2aeb-4102-8586-ba65798103a5",
        "parentId" : "ecd84daa-8193-4bba-8735-3545e3f0275c",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "done",
        "createdAt" : "2019-05-17T12:43:49Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc8815fbde7728527bafb16efd2dfb86a4032bd",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +600,604 @@        .. versionadded:: 0.23.0\n\n        .. versionchanged:: 0.25.0\n            - changed default value from False to True\n"
  },
  {
    "id" : "b13d83cc-0e29-4ff0-a591-72d5edaef2c6",
    "prId" : 26043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26043#pullrequestreview-239667909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1450722-64fc-464f-9311-6f8de794e8ca",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "```suggestion\r\n            Changed default value from False to True.\r\n```",
        "createdAt" : "2019-05-20T18:52:53Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc8815fbde7728527bafb16efd2dfb86a4032bd",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +601,605 @@\n        .. versionchanged:: 0.25.0\n            - changed default value from False to True\n\n    Returns"
  },
  {
    "id" : "8c551304-64d1-44be-9eab-0ce4702e720d",
    "prId" : 26043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26043#pullrequestreview-247416325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa6bf386-69e1-46fa-a665-908fad131c4c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "type the return arg (bool)",
        "createdAt" : "2019-06-09T21:48:09Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc8815fbde7728527bafb16efd2dfb86a4032bd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +54,58 @@                 check_count: Optional[int] = None) -> bool:\n    \"\"\"\n    Decides whether to do caching.\n\n    If the percent of unique elements among `check_count` elements less"
  },
  {
    "id" : "f272bd81-7623-4dcc-96fc-a1e302f1ba4c",
    "prId" : 26043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26043#pullrequestreview-247416325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efca6818-b360-4683-a6f0-913d61281e60",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use a assert on the bounds of the check_count, unique_share",
        "createdAt" : "2019-06-09T21:49:50Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc8815fbde7728527bafb16efd2dfb86a4032bd",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +70,74 @@    -------\n    do_caching: bool\n\n    Notes\n    -----"
  },
  {
    "id" : "e876d415-8535-409f-aaac-148141a87e5e",
    "prId" : 26043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26043#pullrequestreview-248948447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4086e429-4ec0-4765-bf52-46b600cfb9ea",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give a 1 or 2 line explanation of the strategy of determining whether we should cache here (to the extent it differs from the doc-string)",
        "createdAt" : "2019-06-12T18:43:55Z",
        "updatedAt" : "2019-07-03T23:34:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebc8815fbde7728527bafb16efd2dfb86a4032bd",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +81,85 @@    do_caching = True\n\n    # default realization\n    if check_count is None:\n        # in this case, the gain from caching is negligible"
  },
  {
    "id" : "f9317cbb-9a22-43d8-abe4-6edc59b93b4f",
    "prId" : 26078,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26078#pullrequestreview-227681789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "248f1fac-6ca9-4f77-a038-c48c7ad0cc6b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why did you add the ``.to_numpy()``?\r\n\r\nremove the GH issue reference, instead restore the comment",
        "createdAt" : "2019-04-16T19:40:42Z",
        "updatedAt" : "2019-04-17T10:56:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "45ba633d-e0cb-41cd-85d0-0f5bc1b0ec8a",
        "parentId" : "248f1fac-6ca9-4f77-a038-c48c7ad0cc6b",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "Before our changes `algorithms.unique(arg)` always returns `numpy.ndarray` when calling from `_maybe_cache`, so we use this cast to not change the previous behavior.",
        "createdAt" : "2019-04-17T10:52:56Z",
        "updatedAt" : "2019-04-17T10:56:33Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3c66b36e6150c8d56080924441d79ee6fc9a354",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +55,59 @@        unique_dates = Index(arg).unique()\n        if len(unique_dates) < len(arg):\n            cache_dates = convert_listlike(unique_dates.to_numpy(),\n                                           True, format)\n            cache_array = Series(cache_dates, index=unique_dates)"
  },
  {
    "id" : "9310e0e6-6f3b-4a34-926c-1af94f22108e",
    "prId" : 26097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26097#pullrequestreview-248969612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28c58686-c2f5-4bcc-99ed-3f3b0f4d773f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "define the types here (that you used in _typing). The reason is that these are *convertible* to datetimes, not datetimes themselves. The convertible is a much wider range of types.",
        "createdAt" : "2019-06-12T18:32:02Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3690d8f9-5f32-49a4-beaa-aadf068efa2b",
        "parentId" : "28c58686-c2f5-4bcc-99ed-3f3b0f4d773f",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "defined",
        "createdAt" : "2019-06-12T19:24:48Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d8921bb61cdfdd71f93a3a185ebb476cbc95179",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +29,33 @@Scalar = Union[int, float, str]\nDatetimeScalar = TypeVar('DatetimeScalar', Scalar, datetime)\nDatetimeScalarOrArrayConvertible = Union[DatetimeScalar, list, tuple,\n                                         ArrayLike, ABCSeries]\n"
  },
  {
    "id" : "1412db74-1436-4808-a77c-1a17af8aef95",
    "prId" : 26097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26097#pullrequestreview-252614175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eeac9ab-8bb6-49a6-a74e-2bfa7ebfab0a",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "We need to apply `tz` to this result if `Index(dt_array, name=name)` returns a `DatetimeIndex`",
        "createdAt" : "2019-06-17T03:37:19Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "cc5df9be-1635-49c7-8ba6-2732f3a13a55",
        "parentId" : "3eeac9ab-8bb6-49a6-a74e-2bfa7ebfab0a",
        "authorId" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "body" : "@jreback @mroeschke After a close look at the Index constructor(`pandas/core/indexes/base.py`), I had a question about `dtype` default value. The documentation says that it should be `object`, but actually `None` is used. What case is correct?",
        "createdAt" : "2019-06-20T11:48:32Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "ac925cd1-7327-4d2a-a9fc-55fc5f720f67",
        "tags" : [
        ]
      },
      {
        "id" : "14a11ad1-af81-4a64-abb6-a5a3d254a73e",
        "parentId" : "3eeac9ab-8bb6-49a6-a74e-2bfa7ebfab0a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "its default is ``None``, however it will attempt to infer the type of thing passed, so you *may* need to explicity pass ``dtype='object'`` to force it to object here.",
        "createdAt" : "2019-06-21T02:12:37Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d8921bb61cdfdd71f93a3a185ebb476cbc95179",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +103,107 @@        tz = 'utc' if utc else None\n        return DatetimeIndex(dt_array, tz=tz, name=name)\n    return Index(dt_array, name=name)\n\n"
  },
  {
    "id" : "ca862c4a-153a-431d-8d0a-f4b05b21368d",
    "prId" : 26097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26097#pullrequestreview-257143598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b42bf0a1-d9bb-4cd6-a1be-89229b9895c8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you rename this paramter to utc, so this is not confusing (meaning we are not actually passing a tz)",
        "createdAt" : "2019-07-02T20:53:18Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d8921bb61cdfdd71f93a3a185ebb476cbc95179",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +88,92 @@    dt_array: 1-d array\n        array of datetimes to be boxed\n    tz : object\n        None or 'utc'\n    name : string, default None"
  },
  {
    "id" : "c997f759-4c77-431e-b403-63cb7d60be1b",
    "prId" : 26170,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26170#pullrequestreview-230978061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea9aa044-7419-4ca1-9db7-829e1329ec6d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is really really complicated, pls see if you can simplify. there are too many cases here.",
        "createdAt" : "2019-04-21T15:59:17Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ff139f1b-acab-4184-a7cf-b42430c2706b",
        "parentId" : "ea9aa044-7419-4ca1-9db7-829e1329ec6d",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I similfied this as much as I could. The tricky thing here is that we need to evaluate the parsed tz first and then the passed `utc` argument next, taking into account whether the result is tz-aware after each step.",
        "createdAt" : "2019-04-26T04:46:34Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "70b18ef6ab372218f9c8809654d798211e1f0ea5",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +207,211 @@                from pandas import Index\n                result = Index(result, name=name)\n            else:\n                result = DatetimeIndex(result, name=name)\n            # GH 23758: We may still need to localize the result with tz"
  },
  {
    "id" : "69f32a71-dbee-4a24-8b54-21d6c8e4b300",
    "prId" : 26170,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26170#pullrequestreview-231482130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c724bd73-780e-4515-9c62-127a7e7ca5fa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how could this ever be hit as you are constructing a DTI here?\r\n\r\nfurther should not all of the localization *only* be on this path (e.g. you must have a DTI); the way its written you *could* be an Index? (which is not possible)",
        "createdAt" : "2019-04-28T17:58:39Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7d5cd076-37da-4b4e-853a-02f5a010efdb",
        "parentId" : "c724bd73-780e-4515-9c62-127a7e7ca5fa",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Above there's \r\n\r\n```\r\n if errors == 'ignore':\r\n    from pandas import Index\r\n    result = Index(result, name=name)\r\n```\r\n\r\nWhere this _could_ be an `Index` if there were actually errors or coerced to `DatetimeIndex` if there were no errors.",
        "createdAt" : "2019-04-28T18:42:18Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "14d4b5b3-9cba-4f45-9d5a-415fda7d2efd",
        "parentId" : "c724bd73-780e-4515-9c62-127a7e7ca5fa",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "right so what hits that? meaning if it is not coerced, then we can *never* attempt the localization no matter what",
        "createdAt" : "2019-04-28T18:44:19Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "efd3f750-5be8-4fd8-8f25-68e54480c879",
        "parentId" : "c724bd73-780e-4515-9c62-127a7e7ca5fa",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Yeah if it's not coerced to `DatetimeIndex` we're just returning the result (`Index`). `array_with_unit_to_datetime` above could return an object array that wouldn't get coerced to `DatetimeIndex`",
        "createdAt" : "2019-04-28T19:11:23Z",
        "updatedAt" : "2019-04-30T18:24:59Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "70b18ef6ab372218f9c8809654d798211e1f0ea5",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +215,219 @@                result = result.tz_localize('UTC').tz_convert(tz_parsed)\n            except AttributeError:\n                # Regular Index from 'ignore' path\n                return result\n            if tz is not None:"
  },
  {
    "id" : "51a5b802-6530-42c6-8b02-94e8599ba0b1",
    "prId" : 27733,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27733#pullrequestreview-270988460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e29f0a4a-1aed-4694-a15c-6e400858c128",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I think this would fail if a user passes `to_datetime(np.array([...], dtype='datetime64[ns]'), utc=True)`?\r\n\r\nI was thinking more:\r\n\r\n```\r\nif box:\r\n    if not isinstance(arg, (DatetimeArray, ...)):\r\n        ....\r\n    elif tz:\r\n        ...\r\n```",
        "createdAt" : "2019-08-04T22:26:14Z",
        "updatedAt" : "2019-08-04T23:34:02Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "01e52067-4051-470b-80ac-ff34221d2913",
        "parentId" : "e29f0a4a-1aed-4694-a15c-6e400858c128",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "```\r\n>>> arr = np.arange(2).astype('datetime64[ns]')\r\n>>> to_datetime(arr, utc=True)\r\nDatetimeIndex(['1970-01-01 00:00:00+00:00', '1970-01-01 00:00:00.000000001+00:00'], dtype='datetime64[ns, UTC]', freq=None)\r\n```\r\n\r\nor are you suggesting that this is wrong because `box=True` was not passed?",
        "createdAt" : "2019-08-05T20:23:51Z",
        "updatedAt" : "2019-08-05T20:23:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c7667d82-ee21-4e75-be1d-782986346af4",
        "parentId" : "e29f0a4a-1aed-4694-a15c-6e400858c128",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Oh! It does work. `box=True` is the default so this looks correct.",
        "createdAt" : "2019-08-05T20:28:56Z",
        "updatedAt" : "2019-08-05T20:28:56Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0d8fbcf56214904105033f8e75634faaa950704",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +335,339 @@            except ValueError:\n                pass\n        elif tz:\n            # DatetimeArray, DatetimeIndex\n            return arg.tz_localize(tz)"
  },
  {
    "id" : "521fc0b4-6e62-41ea-b588-5fc71e98614d",
    "prId" : 30241,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30241#pullrequestreview-336361767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd11128a-91f1-41ab-bd24-ef85f9033968",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok this soln looks ok. wonder if we pass the values AND the mask directly to ```tslib.array_with_unit_to_datetime``` (pass an np.zeros mask for the non-integer NA case). would make this simpler from a code perspective (should be the same from perf).\r\n\r\nthis way all of the nan handling is in the same place.",
        "createdAt" : "2019-12-24T15:10:37Z",
        "updatedAt" : "2020-01-01T08:03:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fcdb2780-703a-4981-a817-fc185e67dd09",
        "parentId" : "cd11128a-91f1-41ab-bd24-ef85f9033968",
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "@jreback We'd need to add `mask` as an argument to `tslib.array_with_unit_to_datetime` (with ndarray type), then we'd fill it with zeros whenever a non-nullable int type is passed and introduce an `if` to check. \r\n\r\nHowever, in `datetimes.py` we'd need to get `_ndarray_values` from `IntegerArray` to pass the full ndarray of values to `tslib.array_with_unit_to_datetime` (which would rely on the implementation of non-public stuff in `IntegerArray`) or we'd need to pass the incomplete values array in `_convert_listlike_datetimes` and rebuild the full array in `tslib.array_with_unit_to_datetime`, which would differ from the approach taken with other nullable datatypes.\r\n\r\nDo you see any other way to accomplish moving the nan-handling to `tslib.array_with_unit_to_datetime` or is one of these two approaches acceptable?",
        "createdAt" : "2019-12-25T10:55:24Z",
        "updatedAt" : "2020-01-01T08:03:38Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      },
      {
        "id" : "da7aa906-446c-45aa-b625-f898d25a479a",
        "parentId" : "cd11128a-91f1-41ab-bd24-ef85f9033968",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i guess my comment was not clear\r\n\r\npass the values and mask to array_with_unit_to_datetime",
        "createdAt" : "2019-12-25T13:02:36Z",
        "updatedAt" : "2020-01-01T08:03:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "620506d1857b02fb9ab58f29baa16bd3ebac97e2",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +322,326 @@        # GH 30050 pass an ndarray to tslib.array_with_unit_to_datetime\n        # because it expects an ndarray argument\n        if isinstance(arg, IntegerArray):\n            # Explicitly pass NaT mask to array_with_unit_to_datetime\n            mask = arg.isna()"
  },
  {
    "id" : "bb3febeb-9619-44b9-a120-b652c2ab671f",
    "prId" : 30241,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30241#pullrequestreview-337105720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "881bcc4c-1068-4cf1-a074-a65173b298ba",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank line before the comment",
        "createdAt" : "2019-12-30T13:33:13Z",
        "updatedAt" : "2020-01-01T08:03:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "620506d1857b02fb9ab58f29baa16bd3ebac97e2",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +320,324 @@        arg = getattr(arg, \"_values\", arg)\n\n        # GH 30050 pass an ndarray to tslib.array_with_unit_to_datetime\n        # because it expects an ndarray argument\n        if isinstance(arg, IntegerArray):"
  },
  {
    "id" : "7ebae421-5f7b-47f3-95a9-c70df3c5f8c6",
    "prId" : 31520,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31520#pullrequestreview-351886811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48b83a5d-2112-4eea-bedb-39dce1b1561e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I *think* this is the best we can do here, at least without major surgery. It'll involve double-parsing the input for large arrays with `errors='coerce'`.",
        "createdAt" : "2020-01-31T21:48:18Z",
        "updatedAt" : "2020-01-31T21:48:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "60f07863-20d6-4df6-80c9-98d4cf30c06f",
        "parentId" : "48b83a5d-2112-4eea-bedb-39dce1b1561e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, pls create an issue as this should be handled directly in _maybe_cache itself",
        "createdAt" : "2020-02-01T14:28:52Z",
        "updatedAt" : "2020-02-01T14:29:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a794c24e9ee77c09a13bc16e578e35d66f77e455",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +739,743 @@        try:\n            cache_array = _maybe_cache(arg, format, cache, convert_listlike)\n        except tslibs.OutOfBoundsDatetime:\n            # caching attempts to create a DatetimeIndex, which may raise\n            # an OOB. If that's the desired behavior, then just reraise..."
  },
  {
    "id" : "f3df1d6a-112f-4fa5-9b5a-ed01c826e806",
    "prId" : 32668,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32668#pullrequestreview-374762995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6fb3b4e-7d98-414a-a820-2aba6faa5f08",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually do we have coverage for all of these paths? i seem to recall we using similar code elsewhere?",
        "createdAt" : "2020-03-14T03:11:18Z",
        "updatedAt" : "2020-03-14T19:40:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "019503d6-0aaa-4a29-8e6b-a51e8755cbf6",
        "parentId" : "a6fb3b4e-7d98-414a-a820-2aba6faa5f08",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes, we have tests in tests.tools.test_to_datetime that hit all of these cases",
        "createdAt" : "2020-03-14T19:36:06Z",
        "updatedAt" : "2020-03-14T19:40:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "2e8e27e5-20e8-415b-8d00-12983c4325af",
        "parentId" : "a6fb3b4e-7d98-414a-a820-2aba6faa5f08",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "kk\r\n\r\nalso maybe able to de-duplicate some of this code",
        "createdAt" : "2020-03-15T00:33:29Z",
        "updatedAt" : "2020-03-15T00:33:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd66f24b768ef044382bc497bb42db5667aba4a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +363,367 @@        arg, _ = maybe_convert_dtype(arg, copy=False)\n    except TypeError:\n        if errors == \"coerce\":\n            result = np.array([\"NaT\"], dtype=\"datetime64[ns]\").repeat(len(arg))\n            return DatetimeIndex(result, name=name)"
  },
  {
    "id" : "484ee4f9-98d6-4e6b-849d-539c54dc0ac5",
    "prId" : 32984,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32984#pullrequestreview-381044711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4e3741-d1e6-44f5-b8b6-9b199d1d8202",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the issue number is not important instead add a comment in what / why u r doing this here",
        "createdAt" : "2020-03-25T11:05:29Z",
        "updatedAt" : "2020-03-29T03:09:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a12164e4a2a159f985b81cceda1b1ad97ea0b8dc",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +233,237 @@        [Timestamp(res).tz_localize(zone) for res, zone in zip(result, timezones)]\n    )\n    if tz is not None:\n        # Convert to the same tz\n        tz_results = np.array([tz_result.tz_convert(tz) for tz_result in tz_results])"
  },
  {
    "id" : "2d449078-6bbe-4045-b83a-ea9737199efe",
    "prId" : 34145,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34145#pullrequestreview-413667432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e784e779-be37-4cdf-aa6b-404e5a20b113",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@simonjayhawkins do we have a way of annotating a return type is either an Index or DatetimeIndex, but no other Index subclass?",
        "createdAt" : "2020-05-12T22:32:25Z",
        "updatedAt" : "2020-05-18T14:14:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "cd4fe04f-a957-46ed-b369-8b8e57570c85",
        "parentId" : "e784e779-be37-4cdf-aa6b-404e5a20b113",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "not that i'm aware of. If Index subclasses obey Liskov, shouldn't be an issue. why is this needed?",
        "createdAt" : "2020-05-18T14:36:33Z",
        "updatedAt" : "2020-05-18T14:36:33Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "78bc5391-d669-4085-bc74-562e9915c301",
        "parentId" : "e784e779-be37-4cdf-aa6b-404e5a20b113",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> why is this needed?\r\n\r\nNot \"needed\", but i guess its a more-specific-is-better thing",
        "createdAt" : "2020-05-18T14:48:46Z",
        "updatedAt" : "2020-05-18T14:48:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b75127f77679cede18aea97c3940591db0d4e64d",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +161,165 @@def _box_as_indexlike(\n    dt_array: ArrayLike, utc: Optional[bool] = None, name: Optional[str] = None\n) -> Index:\n    \"\"\"\n    Properly boxes the ndarray of datetimes to DatetimeIndex"
  },
  {
    "id" : "a3a1caf6-8070-4e1f-9562-58a64763ea50",
    "prId" : 34145,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34145#pullrequestreview-413667612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01aabe55-143e-4c85-9949-f452c413171c",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "quotes no longer needed?",
        "createdAt" : "2020-05-18T14:44:51Z",
        "updatedAt" : "2020-05-18T14:44:52Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "458437a6-d04c-49b3-90a3-f47e1f1075c7",
        "parentId" : "01aabe55-143e-4c85-9949-f452c413171c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "good catch.  will edit in follow-up",
        "createdAt" : "2020-05-18T14:48:58Z",
        "updatedAt" : "2020-05-18T14:48:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b75127f77679cede18aea97c3940591db0d4e64d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +192,196 @@    cache_array: \"Series\",\n    name: Optional[str] = None,\n) -> \"Index\":\n    \"\"\"\n    Convert array of dates with a cache and wrap the result in an Index."
  }
]