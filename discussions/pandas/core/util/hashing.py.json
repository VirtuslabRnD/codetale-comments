[
  {
    "id" : "4130df0a-1223-4bd3-adc0-93cd931654ff",
    "prId" : 16346,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16346#pullrequestreview-38183468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is duplicating lots of code. I sure there is a way to do this a bit more generically.",
        "createdAt" : "2017-05-15T10:19:44Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a03d2b5e-40e1-4c2b-a73b-861b9a205bee",
        "parentId" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, I know, but this was mainly to test. \r\nAnd from that it, this makes it a lot faster than using the `hash_array` (the commented part in `hash_tuple`). So not sure how to solve that. In principle I can put the common parts in helper functions (eg the redistributing part), but for most of it it is not possible as there are slight differences.",
        "createdAt" : "2017-05-15T11:24:35Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ae4a2413-ee47-4313-b61c-078d20728fe9",
        "parentId" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what does all of this buy you? (IOW can you post updated timings)?\r\n\r\nmaintaining a separate code path for scalars will cause future issues. these will need to be kept in sync (with the array hashing), if any code changes are made. you can easily share code here which would make this more palatable.",
        "createdAt" : "2017-05-15T11:41:55Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c8d7b907-e4b9-4bfd-a39f-0d8b4b5da959",
        "parentId" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "```\r\nIn [4]: %timeit pd.core.util.hashing.hash_tuple2((999, np.nan, 'E'))\r\n380 µs ± 60.1 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [5]: %timeit pd.core.util.hashing.hash_tuple((999, np.nan, 'E'))\r\n81.8 µs ± 3.53 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n```\r\n\r\n`hash_tuple2` uses the `hash_array` (the commented out version in the current branch), the `hash_tuple` uses the `hash_scalar`\r\n\r\n",
        "createdAt" : "2017-05-15T11:46:23Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "32334602-8e8a-43ca-98a3-6a103aa78b60",
        "parentId" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, its prob reasonable, but willing to sacrifice some perf to get some shared code (IOW between old and new prob a good compromise to repeating lots of code)",
        "createdAt" : "2017-05-15T11:56:25Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2dc388e7-447d-49af-b096-8b1fff8224c3",
        "parentId" : "fb74171c-d332-4c8e-9693-a516bc1f0d86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, I pushed a new version that almost fully reuses the `hash_array` function for the actual hashing, only has some specific logic before that to convert the scalar to a proper array. \r\nThis reduces a lot of the code duplication, and has only minor perf impact.\r\n\r\nApart from that, it still has the separate code path to first convert the scalar to an array, which might be a bit brittle, and I agree certainly not ideal for code maintenance, but using something more general (eg infer_dtype) gives a big perf penalty.",
        "createdAt" : "2017-05-15T17:36:23Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "8acc9e84c64009ddb3ec87126f0cd814e24260c3",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +306,310 @@\ndef _hash_scalar(val, encoding='utf8', hash_key=None):\n    \"\"\"\n    Hash scalar value\n"
  },
  {
    "id" : "beb877ab-f54d-4425-8c87-90438733767e",
    "prId" : 16346,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16346#pullrequestreview-38395506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e6cf07c-3e5f-4634-9704-9dc27c4747e7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you need to handle datetime w/tz directly (IOW, we basically ignore it), then I would.\r\n\r\n```\r\nif getattr(val, 'tzinfo', None) is not None:\r\n    val = val.tz_localize(None)\r\n```\r\n\r\nI suppose an option to ignore tz is fine for ``infer_dtype_from_scalar``, but if you add it I would rename, document and test.",
        "createdAt" : "2017-05-16T10:29:56Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "71064d55-0bb1-4b27-9c1e-39a1e1572230",
        "parentId" : "8e6cf07c-3e5f-4634-9704-9dc27c4747e7",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yes, I can certainly do that check here as well. \r\n\r\nThat is maybe better to keep the custom logic here, as the keyword added to `infer_dtype_from_scalar` would not be used anywhere else.",
        "createdAt" : "2017-05-16T12:24:26Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a68f58ee-c25f-4be1-a073-a9615c69bddb",
        "parentId" : "8e6cf07c-3e5f-4634-9704-9dc27c4747e7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "he i think better locally",
        "createdAt" : "2017-05-16T13:59:48Z",
        "updatedAt" : "2017-05-16T20:51:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8acc9e84c64009ddb3ec87126f0cd814e24260c3",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +317,321 @@        # this is to be consistent with the _hash_categorical implementation\n        return np.array([np.iinfo(np.uint64).max], dtype='u8')\n\n    if getattr(val, 'tzinfo', None) is not None:\n        # for tz-aware datetimes, we need the underlying naive UTC value and"
  },
  {
    "id" : "22c26fdf-64e1-411b-923b-e606b4cd6118",
    "prId" : 16346,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16346#pullrequestreview-38528470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2383bccf-471f-42ca-8fc0-bcbaf55cab79",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see #16372 (for later)",
        "createdAt" : "2017-05-16T22:19:20Z",
        "updatedAt" : "2017-05-16T22:19:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8acc9e84c64009ddb3ec87126f0cd814e24260c3",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +322,326 @@        # not the tz aware object or pd extension type (as\n        # infer_dtype_from_scalar would do)\n        if not isinstance(val, tslib.Timestamp):\n            val = tslib.Timestamp(val)\n        val = val.tz_convert(None)"
  }
]