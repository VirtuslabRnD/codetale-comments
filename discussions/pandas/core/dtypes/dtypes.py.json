[
  {
    "id" : "8c1d237c-6427-4d68-b5bd-9b7434910700",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-61666993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e155a21-f8bf-4386-a00a-c0341741ef8c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "neat trick",
        "createdAt" : "2017-09-09T17:31:01Z",
        "updatedAt" : "2017-09-23T16:33:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +194,198 @@        if self.categories is None:\n            if self.ordered:\n                return -1\n            else:\n                return -2"
  },
  {
    "id" : "488bb34b-03ec-4dd7-a0b5-78c53e33d511",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-64724571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afe6daa6-ba67-44f8-8b97-6bbfaed1805a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should actually move this to hash_array I think (could be pre-cursor PR)",
        "createdAt" : "2017-09-09T17:34:52Z",
        "updatedAt" : "2017-09-23T16:33:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "52165ec6-8b71-424e-ab4a-d852487bdaf6",
        "parentId" : "afe6daa6-ba67-44f8-8b97-6bbfaed1805a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "?",
        "createdAt" : "2017-09-17T14:39:38Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "eb01dd6d-519d-40bb-a819-961227bfc9b5",
        "parentId" : "afe6daa6-ba67-44f8-8b97-6bbfaed1805a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Looking into this now.\r\n\r\nAny thoughts on what this does to the probability of hash collisions? If we use two distinct hashing algorithms, I'd expect probability of a collision is higher (though presumably still negligible?),",
        "createdAt" : "2017-09-19T21:24:19Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3f846296-0263-4555-9f87-3ab4dd371cd1",
        "parentId" : "afe6daa6-ba67-44f8-8b97-6bbfaed1805a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "neh hash collisions basically don't happen in the space of things we are doing (normally). however you can collide by construction, e.g. code doing something wrong..\r\n\r\nIn any event we should move this code (can be a followup, maybe make an issue for things to do)",
        "createdAt" : "2017-09-23T00:22:18Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +242,246 @@            cat_array = hash_tuples(categories)\n        else:\n            if categories.dtype == 'O':\n                types = [type(x) for x in categories]\n                if not len(set(types)) == 1:"
  },
  {
    "id" : "7aea282b-b107-419e-bd9e-86f0b67e69df",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-61666993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcd2de53-3bfc-4895-97f8-c845d4fa0e98",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would move this last piece of logic to a private function in hashing as well.",
        "createdAt" : "2017-09-09T17:35:39Z",
        "updatedAt" : "2017-09-23T16:33:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +259,263 @@        else:\n            cat_array = [cat_array]\n        hashed = _combine_hash_arrays(iter(cat_array),\n                                      num_items=len(cat_array))\n        if len(hashed) == 0:"
  },
  {
    "id" : "d84591d6-673d-4ecf-87f3-72fe41a97f7c",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-64724571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7058534a-04a4-43b2-b9da-0b1a3b819f4e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have this hacky thing in Categorical to repr only 10 categories. CategoricalIndex actually correctly uses the option ``max_categories``, so should do that here (again can do as a followup)",
        "createdAt" : "2017-09-23T00:24:51Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +222,226 @@\n    def __unicode__(self):\n        tpl = u'CategoricalDtype(categories={}ordered={})'\n        if self.categories is None:\n            data = u\"None, \""
  },
  {
    "id" : "7a8a64b4-4ac1-4d29-b20c-ae400576e9e1",
    "prId" : 17888,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17888#pullrequestreview-70057760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c0df4ac-4324-49f2-b571-329ef5566c50",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "here you an also accept ABCCategorical ",
        "createdAt" : "2017-10-17T22:47:32Z",
        "updatedAt" : "2017-10-17T22:47:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ef4a4614-cecb-4fd0-adc2-9322f6e93224",
        "parentId" : "5c0df4ac-4324-49f2-b571-329ef5566c50",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "a Categorical has already been converted to CategoricalIndex",
        "createdAt" : "2017-10-17T22:48:37Z",
        "updatedAt" : "2017-10-17T22:48:37Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4242eee3-aa89-4ec2-aea6-b8637dd1b189",
        "parentId" : "5c0df4ac-4324-49f2-b571-329ef5566c50",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ahh ok",
        "createdAt" : "2017-10-17T23:05:46Z",
        "updatedAt" : "2017-10-17T23:05:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c56abeb8866698c0961f21ce13be180b191131d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +327,331 @@                raise ValueError('Categorical categories must be unique')\n\n        if isinstance(categories, ABCCategoricalIndex):\n            categories = categories.categories\n"
  },
  {
    "id" : "f743262b-aaab-4b9c-bbfd-b317d5c3a98b",
    "prId" : 18202,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18202#pullrequestreview-76435158",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33e2bf43-629d-4567-bec4-adb37ec15114",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is the problem that if you don't include this 'None', that it then automatically generated the 'Methods' section and thus included too much? ",
        "createdAt" : "2017-11-14T10:10:41Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "450970a7-5cd7-497b-adce-f773a1b2d3d7",
        "parentId" : "33e2bf43-629d-4567-bec4-adb37ec15114",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yes, I'm not sure how best to avoid that. This is where class-level `numpydoc_show_class_members` flag would be nice. Having `None` there isn't great since it shows up in the output.",
        "createdAt" : "2017-11-14T13:15:18Z",
        "updatedAt" : "2017-11-15T15:22:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "34834fae25bd7ea1eb6a364c9d2c841e0837eb38",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +128,132 @@    Methods\n    -------\n    None\n\n    Notes"
  },
  {
    "id" : "a3f681d4-bb90-42fc-88f1-db612435ad92",
    "prId" : 18889,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18889#pullrequestreview-94568766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "129dfb5f-12e3-401e-97d0-8b1c5036d825",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "separate, I don't think we need to have private methods on CDT. e.g. ``validate_ordered`` and ``update_dtype`` (maybe more). As this is *used* in other contexts. so a de-privatize PR should be great.",
        "createdAt" : "2017-12-21T13:59:02Z",
        "updatedAt" : "2018-02-10T02:18:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea3f94e7-c43e-47f3-a72b-62cac21ed21d",
        "parentId" : "129dfb5f-12e3-401e-97d0-8b1c5036d825",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually can you change this?",
        "createdAt" : "2018-01-02T11:27:23Z",
        "updatedAt" : "2018-02-10T02:18:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5910d46b-8fb2-4042-96ca-782af4cb14c4",
        "parentId" : "129dfb5f-12e3-401e-97d0-8b1c5036d825",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "done for `_update_dtype`, `_validate_ordered`, and `_validate_categories`",
        "createdAt" : "2018-02-07T01:42:39Z",
        "updatedAt" : "2018-02-10T02:18:58Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "007340de7cd013f1eaa89e8cb87241b71f0f4272",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +374,378 @@                   'got {dtype!r}').format(dtype=dtype)\n            raise ValueError(msg)\n\n        # dtype is CDT: keep current categories/ordered if None\n        new_categories = dtype.categories"
  },
  {
    "id" : "f37322f8-9929-43dc-9a46-99e1030d6efe",
    "prId" : 18889,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18889#pullrequestreview-94569688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90c0227d-2915-432c-b8df-94d7823895b0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can ordered be None here?",
        "createdAt" : "2018-01-02T11:27:05Z",
        "updatedAt" : "2018-02-10T02:18:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "896aeded-3509-47a9-bbdb-b25282c6ba1e",
        "parentId" : "90c0227d-2915-432c-b8df-94d7823895b0",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "yes, e.g. `CDT(list('abcd'), None) == CDT(list('dcba'), None)`, but `None` is fine here since it is Falsey, and this is just meant to catch cases where at least one is `True`",
        "createdAt" : "2018-02-07T01:48:04Z",
        "updatedAt" : "2018-02-10T02:18:58Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "007340de7cd013f1eaa89e8cb87241b71f0f4272",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +230,234 @@            # CDT(., .) = CDT(None, True).\n            return True\n        elif self.ordered or other.ordered:\n            # At least one has ordered=True; equal if both have ordered=True\n            # and the same values for categories in the same order."
  }
]