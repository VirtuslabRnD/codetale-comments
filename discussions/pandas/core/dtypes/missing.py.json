[
  {
    "id" : "d7cdca8d-d53a-4129-bbf5-8cb5381bdb03",
    "prId" : 16972,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16972#pullrequestreview-52609388",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23ba7f6e-928a-4d2f-b978-7611d957892f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think we should give `isnull` a separate docstring indicating this is an alias of `isna`. \r\nBut not sure how to easily achieve this without duplicating the full docstring and the function definition\r\n\r\n(same fore `notnull`)",
        "createdAt" : "2017-07-27T08:44:47Z",
        "updatedAt" : "2017-07-27T08:50:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f3d2750d-7e7a-4ee4-aa1e-8b510962007d",
        "parentId" : "23ba7f6e-928a-4d2f-b978-7611d957892f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these are all in the See Also section. It looks ok to me, but I guess could open an issue about this; could do it with a doc-template I think.",
        "createdAt" : "2017-07-27T09:53:23Z",
        "updatedAt" : "2017-07-27T09:53:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f8bd0a2c-a4bc-4da0-a637-e7162fa12c9c",
        "parentId" : "23ba7f6e-928a-4d2f-b978-7611d957892f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yes, but the see also section is not fully 'correct' in case of isnull, as it doesn't link to isna (I mean, isna docstring should link to isnull, and isnull docstring to isna. Now they both link to isnull)",
        "createdAt" : "2017-07-27T09:57:17Z",
        "updatedAt" : "2017-07-27T09:57:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "25eadac6ea9de44b9a3b3305061cbccd453bba7c",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +46,50 @@\n\nisnull = isna\n\n"
  },
  {
    "id" : "44aa36ff-1b18-42a4-9793-ffd73cfca447",
    "prId" : 19520,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19520#pullrequestreview-97372832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7c4ecd0-b745-4666-b877-ff7fcf22cefd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ultimately values_from_object just calls .get_values() on the object if it exists. This smells like something is missing from the EA interface.",
        "createdAt" : "2018-02-16T17:39:17Z",
        "updatedAt" : "2018-02-22T16:31:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "410973ee-2dfe-4540-be09-62e15351a8bf",
        "parentId" : "b7c4ecd0-b745-4666-b877-ff7fcf22cefd",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I don't think this if / elif can be avoided. `values_from_object` gets and calls `arr.get_values` if defined, which returns an ndarray. But we need to call `notna` on the EA itself, since it has special missing value handling.",
        "createdAt" : "2018-02-17T12:13:13Z",
        "updatedAt" : "2018-02-22T16:31:34Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea5562b99d55062b2bb0a5b359bd5375adb3a46e",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +411,415 @@    Return array-like containing only true/non-NaN values, possibly empty.\n    \"\"\"\n    if is_extension_array_dtype(arr):\n        return arr[notna(arr)]\n    else:"
  },
  {
    "id" : "ef13d570-38fa-4b1b-aa4f-589da362f361",
    "prId" : 19520,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19520#pullrequestreview-97376515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1db7c5f-cdc8-4d1d-96d1-f2ddf76b4c65",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "See comment above, this won't catch Categoricals ? (while `isinstance(.., ExtensionArray)` before did catch them)",
        "createdAt" : "2018-02-17T15:16:12Z",
        "updatedAt" : "2018-02-22T16:31:34Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea5562b99d55062b2bb0a5b359bd5375adb3a46e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +61,65 @@        raise NotImplementedError(\"isna is not defined for MultiIndex\")\n    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass,\n                          ABCExtensionArray)):\n        return _isna_ndarraylike(obj)\n    elif isinstance(obj, ABCGeneric):"
  },
  {
    "id" : "f3ebf8ab-9b47-4b15-b139-425a5de5887f",
    "prId" : 20459,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20459#pullrequestreview-106846494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd5ebbc-6252-481f-ad63-3808455dfca4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "an you show a datetimelike example (DatetimeIndex is good)",
        "createdAt" : "2018-03-26T10:25:29Z",
        "updatedAt" : "2018-03-26T16:27:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb38aefe206077c167213f54f36b74f1e86aa32a",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +74,78 @@    >>> pd.isna(array)\n    array([[False,  True, False],\n           [False, False,  True]])\n\n    For indexes, an ndarray of booleans is returned."
  },
  {
    "id" : "2a37e4fb-203e-4542-b3fd-d57e1fb1c54d",
    "prId" : 20971,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20971#pullrequestreview-117945575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0687b8cc-502e-4c5b-988e-3b2a432e678a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make the same change in _isna_old",
        "createdAt" : "2018-05-07T10:04:51Z",
        "updatedAt" : "2018-05-07T13:37:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2c45b16ad9d0e3f99dbf686f7e6423444c3f289",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +121,125 @@    elif isinstance(obj, ABCGeneric):\n        return obj._constructor(obj._data.isna(func=isna))\n    elif isinstance(obj, list):\n        return _isna_ndarraylike(np.asarray(obj, dtype=object))\n    elif hasattr(obj, '__array__'):"
  },
  {
    "id" : "32346cb2-c085-4425-b8da-84347c648f5b",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-185365091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d150eeb3-c4b0-4dd4-830c-31c41b22c289",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this not handled by the clause above?",
        "createdAt" : "2018-12-15T19:11:42Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "945906ed-981a-4592-8221-a30a2a7fe75d",
        "parentId" : "d150eeb3-c4b0-4dd4-830c-31c41b22c289",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "not until #24024",
        "createdAt" : "2018-12-15T19:47:41Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +199,203 @@            values = obj\n        result = values.isna()\n    elif isinstance(obj, ABCDatetimeArray):\n        return obj.isna()\n    elif is_string_dtype(dtype):"
  },
  {
    "id" : "5f70e138-23f9-46b7-8141-4c71f10101a1",
    "prId" : 26029,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26029#pullrequestreview-224743194",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7de1eb9e-c09f-4297-abc7-9828347448cf",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "What error was this causing before?",
        "createdAt" : "2019-04-09T00:27:05Z",
        "updatedAt" : "2019-04-10T23:26:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d6f190b6-745c-4b27-8e33-f3369abe5602",
        "parentId" : "7de1eb9e-c09f-4297-abc7-9828347448cf",
        "authorId" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "body" : "`pandas/core/dtypes/missing.py:6: error: Module 'pandas._libs' has no attribute 'missing'`",
        "createdAt" : "2019-04-09T13:33:19Z",
        "updatedAt" : "2019-04-10T23:26:27Z",
        "lastEditedBy" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "tags" : [
        ]
      },
      {
        "id" : "64d0296d-2b25-4186-99d2-d6c9cb23250f",
        "parentId" : "7de1eb9e-c09f-4297-abc7-9828347448cf",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Any chance you've found a documented difference on the two import methodologies? Or is this a nuance with mypy? I thought `from foo import bar as X` and `import foo.bar as X` would mostly be equivalent",
        "createdAt" : "2019-04-09T14:27:56Z",
        "updatedAt" : "2019-04-10T23:26:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "29fc2e20-3f37-4c1f-a44d-94c3f18e3270",
        "parentId" : "7de1eb9e-c09f-4297-abc7-9828347448cf",
        "authorId" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "body" : "I didn't research it to any depth. I had a hunch of what would fix it and rolled with it.",
        "createdAt" : "2019-04-09T15:18:17Z",
        "updatedAt" : "2019-04-10T23:26:27Z",
        "lastEditedBy" : "729b5bd5-29e4-4ff9-b28d-9ac2dcb7df19",
        "tags" : [
        ]
      },
      {
        "id" : "f2b7a5cb-9ee5-4a61-b77e-cce001bff63e",
        "parentId" : "7de1eb9e-c09f-4297-abc7-9828347448cf",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Sounds good. No major objection for now just curious - thanks!",
        "createdAt" : "2019-04-10T03:14:36Z",
        "updatedAt" : "2019-04-10T23:26:27Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "85ef4b44e18395ecf55d155ae600b49213eef9ab",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +5,9 @@\nfrom pandas._libs import lib\nimport pandas._libs.missing as libmissing\nfrom pandas._libs.tslibs import NaT, iNaT\n"
  },
  {
    "id" : "825c8476-4963-47ca-9813-e891e09514d2",
    "prId" : 27331,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27331#pullrequestreview-260929444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7975f9f4-526a-4ccc-afc4-e09a1ce37a01",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you type these(followup ok)",
        "createdAt" : "2019-07-11T20:14:03Z",
        "updatedAt" : "2019-07-11T20:14:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "228174953999b1185afbf08e7015790494bf1a03",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +562,566 @@\n\ndef is_valid_nat_for_dtype(obj, dtype):\n    \"\"\"\n    isna check that excludes incompatible dtypes"
  },
  {
    "id" : "d373f140-c0b5-4dd7-bd2b-57b8e19cef27",
    "prId" : 29555,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29555#pullrequestreview-318512136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39fdbd1c-2f24-472c-8999-78a71e2919f4",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "why is this needed?",
        "createdAt" : "2019-11-14T19:30:12Z",
        "updatedAt" : "2019-11-25T14:33:55Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4073567b-3bc0-4c9b-b3a6-229fd6f95fd0",
        "parentId" : "39fdbd1c-2f24-472c-8999-78a71e2919f4",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Because \"reduce\" ufuncs are not yet implemented (and `np.any` seems to use `np.logical_or.reduce` ufunc under the hood)",
        "createdAt" : "2019-11-14T19:46:58Z",
        "updatedAt" : "2019-11-25T14:33:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "cb4e0a72-9753-4221-8a4c-cf8f67236460",
        "parentId" : "39fdbd1c-2f24-472c-8999-78a71e2919f4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can you add a comment to this effect",
        "createdAt" : "2019-11-18T17:43:40Z",
        "updatedAt" : "2019-11-25T14:33:55Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0eb3ca2430614982bcf097039f6feb17d70a6894",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +449,453 @@            else:\n                try:\n                    if np.any(np.asarray(left_value != right_value)):\n                        return False\n                except TypeError as err:"
  },
  {
    "id" : "7c5dcc26-b579-4b96-9b8a-ba69e5853034",
    "prId" : 33158,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33158#pullrequestreview-384919325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aa2e9e4-e0ed-44d5-a85d-9762c7d87bed",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not even sure this is the correct issue anymore :-< but can revist this whole thing later",
        "createdAt" : "2020-03-31T16:47:10Z",
        "updatedAt" : "2020-03-31T16:47:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e685cc165ac5face392c1da3db7d5027d46a974",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +252,256 @@\ndef _isna_string_dtype(values: np.ndarray, dtype: np.dtype, old: bool) -> np.ndarray:\n    # Working around NumPy ticket 1542\n    shape = values.shape\n"
  },
  {
    "id" : "05fc980d-eb3e-43e4-9df3-1a5eefc21c2f",
    "prId" : 33631,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33631#pullrequestreview-395935974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0aa6580-a5ec-4645-b97d-ecf570e2d8ce",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "LGTM",
        "createdAt" : "2020-04-18T17:52:03Z",
        "updatedAt" : "2020-04-18T17:52:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c80f9fb12b784554108727583ea9a02bad76bf4",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +215,219 @@        result = values.isna()\n    elif is_string_dtype(dtype):\n        result = _isna_string_dtype(values, dtype, old=False)\n\n    elif needs_i8_conversion(dtype):"
  },
  {
    "id" : "417d1caf-a389-41db-9539-5a159bfb9a7a",
    "prId" : 33656,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33656#pullrequestreview-404764294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57771ff0-93e8-4308-945b-e26e0bde267d",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can we short-circuit this (and avoid the object-cast of to_numpy) for e.g. PeriodArray?",
        "createdAt" : "2020-05-03T19:03:51Z",
        "updatedAt" : "2020-05-10T14:58:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "87ba879f-72fa-4dcb-9156-ae4ffa3d1547",
        "parentId" : "57771ff0-93e8-4308-945b-e26e0bde267d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Not in general, but we could short-circuit the known built-in dtypes that will never be able to contain inf (basically all our internal EA dtypes except for categorical ?)",
        "createdAt" : "2020-05-04T07:40:22Z",
        "updatedAt" : "2020-05-10T14:58:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "b04bfdcfce9cf05373094c79b9c01887081d8249",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +212,216 @@    if is_extension_array_dtype(dtype):\n        if inf_as_na and is_categorical_dtype(dtype):\n            result = libmissing.isnaobj_old(values.to_numpy())\n        else:\n            result = values.isna()"
  },
  {
    "id" : "8f15cf91-6c7f-48f4-b7f7-5ad133835d3c",
    "prId" : 35328,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35328#pullrequestreview-450841927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d3fe97c-4429-4e78-a218-98bbc62bf60f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i am not sure i understand why you actually need this\nthe dtype check is cheap compared to the actual check no?\n",
        "createdAt" : "2020-07-17T17:30:09Z",
        "updatedAt" : "2020-07-17T17:46:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f54ecc6b-eda8-44c5-a440-338f8f1fedd9",
        "parentId" : "9d3fe97c-4429-4e78-a218-98bbc62bf60f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "1. They add up, especially when doing things columnwise for small, wide dataframes\r\n2. We get to skip a few other checks, like swapping `np.isnan` for `pd.isna` for float, and we can skip the empty check at https://github.com/pandas-dev/pandas/pull/35328/files#diff-ff8364cee9a3e1ef3a3825cb2cdd26d8L431. ",
        "createdAt" : "2020-07-17T17:35:28Z",
        "updatedAt" : "2020-07-17T17:46:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "721842c3-123d-4c9e-9bd6-cad001fa1a8e",
        "parentId" : "9d3fe97c-4429-4e78-a218-98bbc62bf60f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine\n",
        "createdAt" : "2020-07-17T17:39:25Z",
        "updatedAt" : "2020-07-17T17:46:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d06a9884cf3a9d02a4aef11638b28455206ee3",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +400,404 @@        return False\n\n    if dtype_equal:\n        # fastpath when we require that the dtypes match (Block.equals)\n        if is_float_dtype(left.dtype) or is_complex_dtype(left.dtype):"
  },
  {
    "id" : "980da7f7-bfa3-4d97-9e95-368e90195c07",
    "prId" : 35328,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35328#pullrequestreview-450889845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75a1c578-cd6e-4578-8916-8f4ed2ed4f9a",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "what about use_inf_as_na?\r\n\r\nCan this be re-used on L426?  (also the prod(shape) check on L424-425 i think is redundant with earlier shape check)",
        "createdAt" : "2020-07-17T17:53:08Z",
        "updatedAt" : "2020-07-17T17:53:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "42cad640-a247-4854-af71-437030b30602",
        "parentId" : "75a1c578-cd6e-4578-8916-8f4ed2ed4f9a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "It seems like 1.0.5 doesn't care about that\r\n\r\n```python\r\nIn [15]: df1 = pd.DataFrame({\"A\": np.array([np.nan, 1, np.inf])})\r\n\r\nIn [16]: df2 = pd.DataFrame({\"A\": np.array([np.nan, 1, np.nan])})\r\n\r\nIn [17]: with pd.option_context('mode.use_inf_as_na', True):\r\n    ...:     print(df1.equals(df2))\r\n    ...:\r\n    ...:\r\nFalse\r\n```",
        "createdAt" : "2020-07-17T18:16:59Z",
        "updatedAt" : "2020-07-17T18:17:00Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3a44731b-0cad-4b1c-a039-927c44675180",
        "parentId" : "75a1c578-cd6e-4578-8916-8f4ed2ed4f9a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Makes sense, thanks for checking",
        "createdAt" : "2020-07-17T18:58:31Z",
        "updatedAt" : "2020-07-17T18:58:31Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d06a9884cf3a9d02a4aef11638b28455206ee3",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +447,451 @@\ndef _array_equivalent_float(left, right):\n    return ((left == right) | (np.isnan(left) & np.isnan(right))).all()\n\n"
  },
  {
    "id" : "7b17302c-e41f-433d-9b27-a01b261d971a",
    "prId" : 36312,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36312#pullrequestreview-487257238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2446ac47-bfcd-4d4b-9567-604ec615d67c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't do it like this\n\nuse the global keyword ",
        "createdAt" : "2020-09-12T20:16:55Z",
        "updatedAt" : "2020-09-12T20:17:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6326aa1d-3c82-4526-b1ef-9096bccfe202",
        "parentId" : "2446ac47-bfcd-4d4b-9567-604ec615d67c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this is the pattern we already use a few lines up",
        "createdAt" : "2020-09-12T21:14:13Z",
        "updatedAt" : "2020-09-12T21:14:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0e90f06a-a9b5-4c6b-a72d-1f77a5bd6bf0",
        "parentId" : "2446ac47-bfcd-4d4b-9567-604ec615d67c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really? ok for here, but we *really* should just use the `global` keyword as this is the purpose.",
        "createdAt" : "2020-09-12T21:19:53Z",
        "updatedAt" : "2020-09-12T21:19:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb17376a31f4d5e95f14217eb5a405ad04c00bf3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +193,197 @@    globals()[\"_isna\"] = partial(_isna, inf_as_na=inf_as_na)\n    if inf_as_na:\n        globals()[\"nan_checker\"] = lambda x: ~np.isfinite(x)\n        globals()[\"INF_AS_NA\"] = True\n    else:"
  },
  {
    "id" : "25b10400-1ed5-49cb-846f-c9be5862424d",
    "prId" : 39409,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39409#pullrequestreview-577379873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2342cf7-8b8b-4e4f-811c-04ebac3acc68",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2021-01-27T14:16:36Z",
        "updatedAt" : "2021-02-18T00:14:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0e2a87c206b6a3301ca0799bb453830ce235525",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +619,623 @@        return not isinstance(obj, (np.timedelta64, np.datetime64, Decimal))\n    elif dtype.kind == \"m\":\n        return not isinstance(obj, (np.datetime64, Decimal))\n    elif dtype.kind in [\"i\", \"u\", \"f\", \"c\"]:\n        # Numeric"
  }
]