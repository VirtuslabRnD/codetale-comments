[
  {
    "id" : "f7dd8fa5-24fc-4efa-838c-5cf33030814f",
    "prId" : 28037,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28037#pullrequestreview-282732649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e79d5963-5d81-4de1-9bb0-ca9ddc5af07f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does this maintain the name and/or signature or is wraps needed here as well?",
        "createdAt" : "2019-08-26T23:55:53Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "410a2169-9fe7-4d04-b75b-7971f9c7bd43",
        "parentId" : "e79d5963-5d81-4de1-9bb0-ca9ddc5af07f",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Also do these need to be two separate functions?",
        "createdAt" : "2019-08-26T23:56:17Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "42f41ad1-5e06-4ca5-a87b-a91323afc7e2",
        "parentId" : "e79d5963-5d81-4de1-9bb0-ca9ddc5af07f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I find it a little clearer to keep `_unpack_and_defer` un-indented, but it would work either way",
        "createdAt" : "2019-08-27T00:16:50Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ba0c13ca-0050-4604-808d-53d234d6ce26",
        "parentId" : "e79d5963-5d81-4de1-9bb0-ca9ddc5af07f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this need functools.wrap?",
        "createdAt" : "2019-09-02T21:20:59Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "02eec68f-868f-4c5f-9310-a8e6113fb89a",
        "parentId" : "e79d5963-5d81-4de1-9bb0-ca9ddc5af07f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No, that gets applied below in _unpack_and_defer",
        "createdAt" : "2019-09-03T02:07:43Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc2c0d57c3f9f7f3a6f3b9bd1e7bb811ce85d4ff",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@    \"\"\"\n\n    def wrapper(method):\n        return _unpack_zerodim_and_defer(method, name)\n"
  },
  {
    "id" : "ed49e9ac-6ba2-4d1c-9416-b32c3aa262bc",
    "prId" : 28037,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28037#pullrequestreview-288944031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54899b92-147f-4af9-84a2-9de3617acd65",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Code clarity question: what are the types on `self`, and `other`?\r\n\r\nI'm finding this a bit harder to follow than the rule \"arrays defer to pandas objects, which will do the unpacking\".\r\n\r\nWould it be clearer to have a `unpack_and_defer_array` that's just for arrays, and a separate decorator that is for Series and Index (the Index one has to be for Series & Index, right? Since ops are shared between those two?)",
        "createdAt" : "2019-09-16T22:08:12Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "cb6ed580-3e2a-4849-b63a-027d598ead0b",
        "parentId" : "54899b92-147f-4af9-84a2-9de3617acd65",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`self` can be any of our array-like classes: DataFrame, Series, FooIndex, BarExtensionArray.  `other` can be any.  I'll try to clarify this.\r\n\r\nThis is in my \"would be nice, but isn't a blocker pile\"",
        "createdAt" : "2019-09-16T23:00:12Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc2c0d57c3f9f7f3a6f3b9bd1e7bb811ce85d4ff",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@\n        if is_cmp and isinstance(self, ABCIndexClass) and isinstance(other, ABCSeries):\n            # For comparison ops, Index does *not* defer to Series\n            pass\n        else:"
  },
  {
    "id" : "287ea1f7-c57d-48f8-8b84-f338fb972045",
    "prId" : 28037,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28037#pullrequestreview-289960907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48eeaf0a-ffa6-4059-bfcf-5308f7179923",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> For comparison ops, Index does *not* defer to Series\r\n\r\nIs there a good reason for that, or just another inconsistency that ideally one time should be solved?",
        "createdAt" : "2019-09-18T14:14:17Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "08c9329e-c073-4c2a-b66a-76754e3e9ba9",
        "parentId" : "48eeaf0a-ffa6-4059-bfcf-5308f7179923",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think it has to do with wanting to make `idx == ser` an ndarray for the sake of `ser[idx == ser]` but I'm not sure",
        "createdAt" : "2019-09-18T14:21:01Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4a9f4748-c78c-41ee-a330-0e2145adcc5c",
        "parentId" : "48eeaf0a-ffa6-4059-bfcf-5308f7179923",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "For this case, `ser[idx == ser]` would also work when the result is a Series",
        "createdAt" : "2019-09-18T14:25:42Z",
        "updatedAt" : "2019-11-14T00:48:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc2c0d57c3f9f7f3a6f3b9bd1e7bb811ce85d4ff",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@\n        if is_cmp and isinstance(self, ABCIndexClass) and isinstance(other, ABCSeries):\n            # For comparison ops, Index does *not* defer to Series\n            pass\n        else:"
  }
]