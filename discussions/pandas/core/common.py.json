[
  {
    "id" : "d78cc099-690d-4825-bac7-94b01c5a53d1",
    "prId" : 1084,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "587d744e-d05a-4ca7-82c3-34dfb7062bad",
        "parentId" : null,
        "authorId" : "55206695-bb42-4d72-886f-f5370a77363e",
        "body" : "If I choose to continue support for Python 2.5 will need to work around next being >= 2.6\n",
        "createdAt" : "2012-04-24T00:29:17Z",
        "updatedAt" : "2012-04-25T15:55:20Z",
        "lastEditedBy" : "55206695-bb42-4d72-886f-f5370a77363e",
        "tags" : [
        ]
      },
      {
        "id" : "79b4d4ad-cdec-4ee6-afd2-c1f634d60c17",
        "parentId" : "587d744e-d05a-4ca7-82c3-34dfb7062bad",
        "authorId" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "body" : "Oh yes. Do you want me to do that in this PR? It should be easy enough.\n",
        "createdAt" : "2012-04-24T09:56:20Z",
        "updatedAt" : "2012-04-25T15:55:20Z",
        "lastEditedBy" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "tags" : [
        ]
      },
      {
        "id" : "7639e2ca-502f-4d58-aed3-eeffb92f7b73",
        "parentId" : "587d744e-d05a-4ca7-82c3-34dfb7062bad",
        "authorId" : "55206695-bb42-4d72-886f-f5370a77363e",
        "body" : "Be my guest\n",
        "createdAt" : "2012-04-25T02:55:14Z",
        "updatedAt" : "2012-04-25T15:55:20Z",
        "lastEditedBy" : "55206695-bb42-4d72-886f-f5370a77363e",
        "tags" : [
        ]
      },
      {
        "id" : "c3efd8f1-da16-4e00-98c4-b2b60b8df287",
        "parentId" : "587d744e-d05a-4ca7-82c3-34dfb7062bad",
        "authorId" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "body" : "Done, although I don't have 2.5 handy to test.\n",
        "createdAt" : "2012-04-25T15:55:46Z",
        "updatedAt" : "2012-04-25T15:55:46Z",
        "lastEditedBy" : "c1e22f62-b6a4-49af-9e65-1ac7ae69e3bb",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e1838d508c01f4f4507f3888509e05ab22d5756",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +527,531 @@    seq_it = iter(seq)\n    seq_it_next = iter(seq)\n    _ = next(seq_it_next)\n\n    return itertools.izip(seq_it, seq_it_next)"
  },
  {
    "id" : "5385873e-2418-4074-a829-be6c02f7a249",
    "prId" : 4684,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20e8c2b0-8cbc-4110-ad44-0d5f8e25fe77",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "this is so insane :smile: \n",
        "createdAt" : "2013-09-08T01:47:18Z",
        "updatedAt" : "2013-09-08T16:56:22Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "7845a207-9a60-484c-9c7e-8e5f5b846118",
        "parentId" : "20e8c2b0-8cbc-4110-ad44-0d5f8e25fe77",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "Just a suggestion - it might be easier to read if you separated the under 1.7 handling, like this: (I'm pretty sure this does the same thing as the current function).  To me, this also makes it easier to see that under 1.7 it returns a timedelta and above 1.7 it returns a timedelta64 type.\n\n``` python\ndef _coerce_scalar_to_timedelta_type(r):\n    # kludgy here until we have a timedelta scalar\n    # handle the numpy < 1.7 case\n\n    if is_integer(r):\n        r = timedelta(microseconds=r/1000)\n\n    if _np_version_under1p7:\n        if not isinstance(r, timedelta):\n            raise AssertionError(\"Invalid type for timedelta scalar: %s\" % type(r))\n        return r\n\n    if isinstance(r, timedelta):\n        r = np.timedelta64(r)\n    elif not isinstance(r, np.timedelta64):\n        raise AssertionError(\"Invalid type for timedelta scalar: %s\" % type(r))\n    return r.astype('timedelta64[ns]')\n\n```\n",
        "createdAt" : "2013-09-08T02:28:07Z",
        "updatedAt" : "2013-09-08T16:56:22Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3f2444b24af412c51d79525dbc67c9b29ede0ad",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +706,710 @@\n\ndef _coerce_scalar_to_timedelta_type(r):\n    # kludgy here until we have a timedelta scalar\n    # handle the numpy < 1.7 case"
  }
]