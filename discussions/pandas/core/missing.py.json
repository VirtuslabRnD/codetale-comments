[
  {
    "id" : "8ba9a152-e69d-4cb7-a92d-32c4df42feea",
    "prId" : 16429,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16429#pullrequestreview-41897937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e3c685d-99f6-4065-ac4a-ac6179db6c43",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger not sure if this is where the perf issue is (maybe because not this IS hit in all code).\r\n\r\nthese can be done via Index set ops\r\n\r\nIOW\r\n\r\n```\r\nstart_nans = Index(range(.....))\r\n\r\nviolate_limit = start_nans.union(Index(_interp_limit(invalid, limit, 0))).sort_values()\r\n```\r\nfor example",
        "createdAt" : "2017-06-02T22:38:05Z",
        "updatedAt" : "2017-06-02T22:38:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3d9cb38f0d9297a568d33f5a2759eeb9bb06850",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +189,193 @@    # each possible limit_direction\n    if limit_direction == 'forward':\n        violate_limit = sorted(start_nans |\n                               set(_interp_limit(invalid, limit, 0)))\n    elif limit_direction == 'backward':"
  },
  {
    "id" : "4fa5fdb5-9027-49dc-a854-f46ca99b55b7",
    "prId" : 24536,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24536#pullrequestreview-188567659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d005b3ec-4f7c-4f7e-8197-94653036dcc9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is something failing? i agree this is probably the soln. but likely these are converted prior to calling this (to i8)",
        "createdAt" : "2019-01-01T20:12:14Z",
        "updatedAt" : "2019-01-01T21:08:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "39c073db-752d-414f-ad80-dc0ecb316046",
        "parentId" : "d005b3ec-4f7c-4f7e-8197-94653036dcc9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Presumably; I haven’t looked at the series code to see how it handles this.  Enough core.missing mysteries have popped up today I’ll be giving them a close look after the RC",
        "createdAt" : "2019-01-01T21:03:28Z",
        "updatedAt" : "2019-01-01T21:08:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "fdf0e77c-335c-422b-9b1d-bf43a8da03a5",
        "parentId" : "d005b3ec-4f7c-4f7e-8197-94653036dcc9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure",
        "createdAt" : "2019-01-01T21:05:15Z",
        "updatedAt" : "2019-01-01T21:08:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "52e01ae3cfa3f92fa75bd66a7bc7d4fb85f280ff",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +483,487 @@        _method = algos.pad_inplace_object\n    elif is_timedelta64_dtype(values):\n        # NaTs are treated identically to datetime64, so we can dispatch\n        #  to that implementation\n        _method = _pad_1d_datetime"
  }
]