[
  {
    "id" : "08e02509-2fa7-494b-8532-db43865bbf8c",
    "prId" : 10250,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "u r not setting this if it has a not None passed precision\neg need a\nself.precision = precision (after this statement)\n",
        "createdAt" : "2015-11-07T17:28:00Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a334b857-7a6e-490b-87ac-9ac196218fe2",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "further make set_precision a method instead\nas prob won't be creating Styler directly rather using df.style\n",
        "createdAt" : "2015-11-07T17:29:14Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5c348043-2b59-4765-b3fc-82e2535ad30a",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Added tests for precision.\n\nThink we need a `set_precision` method when we already have the contextmananger?\n\n``` python\ndf.style.set_precision(2)\n\n# vs\nwith pd.option_context('display.precision, 2):\n    html = df.style\nhtml\n```\n",
        "createdAt" : "2015-11-07T17:46:49Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "2f762f30-18f2-455d-b940-26542f76a626",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think worthwhile\nkeeps the syntax (which FYI u might want to put in a link to ggvis2 which is like this) or maybe we are like!\n",
        "createdAt" : "2015-11-07T18:09:50Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "792bc740-7d65-4db2-aa0a-1d0ed06ecb35",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Added, I forget to mention that you also get to set precision (and caption and uuid and table styles) at render time, when calling `.render`. For interactive work though you're not actually calling `.render` so it's probably still useful.\n",
        "createdAt" : "2015-11-07T18:14:34Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3d98fc05-5e67-49a9-af46-591327d8c5ac",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok though I think all of these should just be set_\\* methods \nmakes things a lot simpler (and then work for both interactive and generated mode)\n\nif u want to leave some kwargs in ok but then just call the appropriate method\n",
        "createdAt" : "2015-11-07T18:35:59Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4c6287e0-163c-4fd6-8b8b-b6d73616eafc",
        "parentId" : "23359cb1-5a3c-458a-99a0-8bb9e90e492b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Going to remove these kwargs. They can have some confusing effects if we modify the `Styler`, e.g.\n\n``` python\ns = df.style\ns.render(precision=1)\n```\n\nwill set the precision on `s`, which isn't clear.\n",
        "createdAt" : "2015-11-15T19:10:42Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "702d63ee9b72999d6d16cfa2bc9b2c5fa09cfa5c",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@        self.uuid = uuid\n        self.table_styles = table_styles\n        self.caption = caption\n        if precision is None:\n            precision = pd.options.display.precision"
  },
  {
    "id" : "9868cc91-0603-432c-abfd-d87fca382ae5",
    "prId" : 10250,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "728ef2c3-c956-4460-9d51-2b3a4fd248ae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think we need a `.set_css()` as well (for just raw setting of styling stuff), or does `.set_properties/set_table_styles` encompass enough?\n",
        "createdAt" : "2015-11-11T13:26:35Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ecc7730d-ac7d-428b-910c-d7c2707c37d9",
        "parentId" : "728ef2c3-c956-4460-9d51-2b3a4fd248ae",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think those two cover everything (unless I'm missing something).\n- `.set_properties` takes `attribute: value` and sets it on the class for each cell.\n- `.set_table_styles` takes (a list of) `selector: [(attribute, value)]` and puts that in a `<style>` tag before the table.\n\nIIUC `.set_css` is stuff that would apply to the table? That's covered by `.set_table_styles{'': [(attrs, values)])}` i.e. no selector so you just have the id of the table.\n",
        "createdAt" : "2015-11-11T13:48:23Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "702d63ee9b72999d6d16cfa2bc9b2c5fa09cfa5c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +490,494 @@        return self\n\n    def set_table_styles(self, table_styles):\n        \"\"\"\n        Set the table styles on a Styler"
  },
  {
    "id" : "b5c253d3-b05c-4fa8-bce7-b92cfe13be37",
    "prId" : 10250,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1e35476-3e5a-4536-a127-51d1e367e21e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Should I remove this until there's a need for it? Not sure why I implemented it in the first place. And the current implementation is broken since I switched to the lazy style evaluation.\n",
        "createdAt" : "2015-11-14T22:16:19Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "4e30b32f-82d9-43f9-83a0-c1cd009c1f4b",
        "parentId" : "e1e35476-3e5a-4536-a127-51d1e367e21e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh the copy - thought u needed that\nit's nice to have but no biggie - let's remove \n",
        "createdAt" : "2015-11-14T22:56:12Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f9899e5e-8e18-4129-a4d6-5e802697fa86",
        "parentId" : "e1e35476-3e5a-4536-a127-51d1e367e21e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Oh, I remember why I had it now. An early version was going to copy before modifying `self` (i.e. each time a style was applied). That was to go along with the python idiom of not modifying inplace and then returning self. Decided to scratch that though.\n",
        "createdAt" : "2015-11-15T00:00:53Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "702d63ee9b72999d6d16cfa2bc9b2c5fa09cfa5c",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +279,283 @@                    self.ctx[(i, j)].append(pair)\n\n    def _copy(self, deepcopy=False):\n        styler = Styler(self.data, precision=self.precision,\n                        caption=self.caption, uuid=self.uuid,"
  },
  {
    "id" : "13e4d5ce-acf3-4567-8ed5-79d6b00c07e2",
    "prId" : 10250,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a21ec2d-c6ea-4f01-9f57-ca63d9939f0f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should we default `axis=None`? e.g. make the user explict about column formatting?\n",
        "createdAt" : "2015-11-15T16:51:39Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ffe6f84d-1d95-411d-b2c2-b85483eece02",
        "parentId" : "5a21ec2d-c6ea-4f01-9f57-ca63d9939f0f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I don't feel strongly about this, but I prefer `axis=0` default for two reasons. 1 it's got consistency with `DataFrame.apply`s default. 2. it's consistent with most of the builtin styles which (mostly) operate columnwise by default. But again, don't feel strongly.\n",
        "createdAt" : "2015-11-15T18:58:25Z",
        "updatedAt" : "2015-11-15T20:26:30Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "702d63ee9b72999d6d16cfa2bc9b2c5fa09cfa5c",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +340,344 @@        func: function\n        axis: int, str or None\n            apply to each column (``axis=0`` or ``'index'``)\n            or to each row (``axis=1`` or ``'columns'``) or\n            to the entire DataFrame at once with ``axis=None``."
  }
]