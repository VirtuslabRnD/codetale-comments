[
  {
    "id" : "11218004-b9b8-4175-9353-d5471d822228",
    "prId" : 21541,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21541#pullrequestreview-129928888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d735047c-2d0c-4e48-bb06-19174222802b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you comment on the purpose of the loop",
        "createdAt" : "2018-06-19T11:21:40Z",
        "updatedAt" : "2018-06-20T10:25:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "47a9400f-527c-41f9-b23d-ad3efea70441",
        "parentId" : "d735047c-2d0c-4e48-bb06-19174222802b",
        "authorId" : "0f77fbd0-b378-4782-9236-d5e75325b81b",
        "body" : "I would try, though I'm not the author of original code - I've just changed it from recursion to loop, so I can't be sure I understand 100% all the nuances here...",
        "createdAt" : "2018-06-19T11:36:32Z",
        "updatedAt" : "2018-06-20T10:25:13Z",
        "lastEditedBy" : "0f77fbd0-b378-4782-9236-d5e75325b81b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eebb8cf57709b679660b9b48c4db6594279a8b87",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +64,68 @@    labels = list(labels)\n    shape = list(shape)\n\n    # Iteratively process all the labels in chunks sized so less\n    # than _INT64_MAX unique int ids will be required for each chunk"
  },
  {
    "id" : "43ace799-d8af-457f-ab82-fa9dcf3b005e",
    "prId" : 21541,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21541#pullrequestreview-129927172",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce5c84e8-2b5b-4428-9246-6573cc6c5060",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does out need a definition outside of the loop? e.g. is it *always* defined",
        "createdAt" : "2018-06-19T11:22:14Z",
        "updatedAt" : "2018-06-20T10:25:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1086ee06-af06-4dd2-a1b5-ba4f608e8290",
        "parentId" : "ce5c84e8-2b5b-4428-9246-6573cc6c5060",
        "authorId" : "0f77fbd0-b378-4782-9236-d5e75325b81b",
        "body" : "it is always defined here - out is assigned before the exit from the loop can happen.\r\nAnd if something (though I don't know what in this case) throw an Exception - we will bypass return alltogether",
        "createdAt" : "2018-06-19T11:30:23Z",
        "updatedAt" : "2018-06-20T10:25:13Z",
        "lastEditedBy" : "0f77fbd0-b378-4782-9236-d5e75325b81b",
        "tags" : [
        ]
      }
    ],
    "commit" : "eebb8cf57709b679660b9b48c4db6594279a8b87",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +98,102 @@        shape = [len(obs_ids)] + shape[nlev:]\n\n    return out\n\n"
  },
  {
    "id" : "b1a5cbbd-89cc-40ec-b8dc-900258351ff4",
    "prId" : 22640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22640#pullrequestreview-153566462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d74a52-ea29-41d5-a914-63e417943a38",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we not have a .sort_values on Categorical that accepts na_position already?\r\n\r\nif we donâ€™t all of this code should live there anyhow",
        "createdAt" : "2018-09-08T21:55:18Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3d110f0d-a4f1-4b97-96cd-440b03395d3c",
        "parentId" : "e3d74a52-ea29-41d5-a914-63e417943a38",
        "authorId" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "body" : "the way I see it, `df.sort_values` is not calling `sort_values` method from column objects, it's calling `nargsort`. Since `pd.Series` also doesn't have `nargsort`, I feel it may fit better in here rather than `Categorical.nargsort` ",
        "createdAt" : "2018-09-08T22:29:46Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4aedcef86aa232487fb3c6a1e685f2b3a2873e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +247,251 @@        mask = isna(items)\n        cnt_null = mask.sum()\n        sorted_idx = items.argsort(ascending=ascending, kind=kind)\n        if ascending and na_position == 'last':\n            # NaN is coded as -1 and is listed in front after sorting"
  },
  {
    "id" : "63febf0a-8789-4b20-9933-22f6778381a1",
    "prId" : 22640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22640#pullrequestreview-156336782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a0e1f85-5de8-4a2f-aa76-f2fd2e1f8853",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank line here",
        "createdAt" : "2018-09-18T12:20:10Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4aedcef86aa232487fb3c6a1e685f2b3a2873e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +245,249 @@            raise ValueError('invalid na_position: {!r}'.format(na_position))\n\n        mask = isna(items)\n        cnt_null = mask.sum()\n        sorted_idx = items.argsort(ascending=ascending, kind=kind)"
  },
  {
    "id" : "ce504626-035a-43d1-b08a-119ccd4e469d",
    "prId" : 22640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22640#pullrequestreview-160003278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02f6f664-dd77-4c1e-843b-b9cc9daff151",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this duplicates some code in ``Categorical.sort_values`` is it not possible to refactor this to a function, and then call this from Categorical.sort_values (as this works with the raw indexer), while Categorical.sort_values reconstructs a Categorical?",
        "createdAt" : "2018-09-18T12:24:03Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "09e6d40f-6f83-4ecc-9e7f-90a0bc7fd7a8",
        "parentId" : "02f6f664-dd77-4c1e-843b-b9cc9daff151",
        "authorId" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "body" : "great suggestion. updated.",
        "createdAt" : "2018-09-28T19:57:11Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4aedcef86aa232487fb3c6a1e685f2b3a2873e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +249,253 @@        sorted_idx = items.argsort(ascending=ascending, kind=kind)\n        if ascending and na_position == 'last':\n            # NaN is coded as -1 and is listed in front after sorting\n            sorted_idx = np.roll(sorted_idx, -cnt_null)\n        elif not ascending and na_position == 'first':"
  }
]