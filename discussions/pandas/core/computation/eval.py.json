[
  {
    "id" : "e25dabd0-e7c1-42a1-b482-c4874eb8756b",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-45774684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cce35ca-d054-4999-9e35-9ad65f4bf157",
        "parentId" : null,
        "authorId" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "body" : "Defer to @jreback, @jorisvandenbossche, but I am still of the opinion that API would be cleaner if `inplace` was only allowed with a `target` and raised otherwise.  `pd.eval('1 + 2', inplace=True) == None` is surprising.",
        "createdAt" : "2017-06-22T13:32:50Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "aa76ca2b-2c97-45f3-bb6a-3e0ee670395b",
        "tags" : [
        ]
      },
      {
        "id" : "b99e84f3-6c2d-4b4e-a65f-ae5e9fe068be",
        "parentId" : "4cce35ca-d054-4999-9e35-9ad65f4bf157",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@chris-b1 : True, but \"with a `target`\" is not well-defined either.  As you can see by my documentation change on `target` in `pandas.eval`, you first need to ensure that item assignment with strings is supported, but how do you check that without modifying the object?\r\n\r\nThat's something I imagined would create unnecessary overhead.  Also, if you go down this path, you should then check if there is item assignment in the first place if you want `inplace=True` to not surprise anyone.\r\n\r\nThat's why I decided to allow the user to pass in `inplace=True` even if there is no real target.  I will in fact document that behavior just in case.",
        "createdAt" : "2017-06-22T15:02:05Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "53d248b3-779a-44fb-b3d6-d50efc13b1a0",
        "parentId" : "4cce35ca-d054-4999-9e35-9ad65f4bf157",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "As I said before, I don't think we need to check the modifyability of `target`. Leave it to the user.",
        "createdAt" : "2017-06-22T16:13:10Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "78742bc3-98db-40b3-bbb2-dc8b8f1c67bf",
        "parentId" : "4cce35ca-d054-4999-9e35-9ad65f4bf157",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Yeah, sure, I have no problem leaving it as is.",
        "createdAt" : "2017-06-22T16:25:01Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +148,152 @@def eval(expr, parser='pandas', engine=None, truediv=True,\n         local_dict=None, global_dict=None, resolvers=(), level=0,\n         target=None, inplace=False):\n    \"\"\"Evaluate a Python expression as a string using various backends.\n"
  },
  {
    "id" : "a57f9423-86df-45a9-b037-454ae9eb11fd",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-47526584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3812edf8-74c8-418b-8c92-24cb620ec095",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "expand what this means (for 2nd item)",
        "createdAt" : "2017-06-30T20:52:26Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b1269f5b-03a7-44e7-8679-c0fd89ac2387",
        "parentId" : "3812edf8-74c8-418b-8c92-24cb620ec095",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Sure, done.",
        "createdAt" : "2017-07-01T08:37:15Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +225,229 @@\n        - `target=None`, but the expression is multiline.\n        - The expression is multiline, but not all them have item assignment.\n          An example of such an arrangement is this:\n"
  },
  {
    "id" : "8738f0e5-66f5-46e8-88dc-3573e0011680",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-47498686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "281afab1-3579-4f14-b498-34071dd0c402",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have a test for this?",
        "createdAt" : "2017-06-30T20:53:05Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4e571956-1251-49b0-9611-781380e1e27d",
        "parentId" : "281afab1-3579-4f14-b498-34071dd0c402",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Absolutely.  There is an entire test devoted to this!",
        "createdAt" : "2017-06-30T21:20:50Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +307,311 @@                    target = env.target.copy()\n                except AttributeError:\n                    raise ValueError(\"Cannot return a copy of the target\")\n            else:\n                target = env.target"
  }
]