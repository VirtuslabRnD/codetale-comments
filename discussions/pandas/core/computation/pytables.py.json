[
  {
    "id" : "a271c9e0-ac23-470e-bc61-6aefed6af561",
    "prId" : 29677,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29677#pullrequestreview-318057311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0df6698b-355b-4dab-8504-28d122bf2e63",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "the medium-term goal that motivates this and the other pytables PR is that I _think_ we can type `queryables` as `Dict[str, Any]`, but it'll take a few steps to get there",
        "createdAt" : "2019-11-18T00:19:08Z",
        "updatedAt" : "2019-11-18T00:19:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "042303c45edf30cf62823b2dd2204e74d83151b6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +23,27 @@\nclass Scope(_scope.Scope):\n    __slots__ = (\"queryables\",)\n\n    def __init__(self, level: int, global_dict=None, local_dict=None, queryables=None):"
  },
  {
    "id" : "54f4d806-ed13-4dca-9990-d0f25b5be98b",
    "prId" : 29778,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29778#pullrequestreview-321124624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e59805a5-8539-4617-afa5-bb265f3eb438",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this is the most non-trivial change.  It allows us to type the `kind` arg to `TermValue` as `str`, and in turn simplify some other parts of TermValue",
        "createdAt" : "2019-11-21T19:17:07Z",
        "updatedAt" : "2019-11-21T19:17:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6298efce50a7f5ee2666ae99922b4912da59a7bd",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +272,276 @@\n        rhs = self.conform(self.rhs)\n        values = list(rhs)\n\n        if self.is_in_table:"
  },
  {
    "id" : "eea7ba39-39c2-4524-9c07-745d0370de78",
    "prId" : 31890,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31890#pullrequestreview-357009432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "714d5417-d533-4dd1-b8e3-9c1884e5cecf",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "are the leading/trailing spaces policy?",
        "createdAt" : "2020-02-11T21:08:23Z",
        "updatedAt" : "2020-02-11T21:08:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6f25ae3a-20ac-4e7e-9469-66e656ab1c63",
        "parentId" : "714d5417-d533-4dd1-b8e3-9c1884e5cecf",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "not according to PEP257, but that seems to popular in our codebase. There is a codecheck in pydocstyle for this, D210. This is for one-line docstrings and we seem to moving away from those, see #31162, #31462 and others.\r\n\r\nI was wandering whether to enforce D210 yet. May be able to find a checker to find one-liners.",
        "createdAt" : "2020-02-11T21:17:17Z",
        "updatedAt" : "2020-02-11T21:17:17Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "854bd86e-a38a-4fa9-b8fd-ed5b4b89a126",
        "parentId" : "714d5417-d533-4dd1-b8e3-9c1884e5cecf",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think this would fail the numpy docstring check as well were this exposed as part of the API",
        "createdAt" : "2020-02-11T21:29:23Z",
        "updatedAt" : "2020-02-11T21:29:23Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6505bb69ecd3aefaa4a0ac566d87522afcb2867b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +602,606 @@\n    def tostring(self, encoding) -> str:\n        \"\"\" quote the string if not encoded else encode and return \"\"\"\n        if self.kind == \"string\":\n            if encoding is not None:"
  }
]