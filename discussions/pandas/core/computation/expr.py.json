[
  {
    "id" : "6d1a19f9-d02a-4cab-8069-24867db12d41",
    "prId" : 24955,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24955#pullrequestreview-212625424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f0c6564-a09e-46dc-985b-325e93660ef3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some comments here on what you are doing",
        "createdAt" : "2019-03-10T16:21:00Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5becb793-4f98-4035-8908-7e90679c3b2b",
        "parentId" : "6f0c6564-a09e-46dc-985b-325e93660ef3",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "Done. ",
        "createdAt" : "2019-03-10T22:20:59Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "192c09353cf6167b49f8d19ec90ef5a4545263af",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +36,40 @@    \"\"\"\n    line_reader = StringIO(source).readline\n    token_generator = tokenize.generate_tokens(line_reader)\n\n    # Loop over all tokens till a backtick (`) is found."
  },
  {
    "id" : "999b7770-b4c1-4f1b-bae7-9da404f1bf59",
    "prId" : 24955,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24955#pullrequestreview-212626252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you are using the uuid3 string, then do you still need the BACKTICK token? and if you still need that, then how is the uuid3 helping?",
        "createdAt" : "2019-03-10T21:57:51Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "921a4e58-ae3a-4000-a4d2-ac8f6f866d26",
        "parentId" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "After tokenization of the backtick quoted string, the name of the backtick quoted string needs to be changed to get rid of the spaces. This happens in `def _clean_spaces_backtick_quoted_names(tok)` of `pandas/core/computation/expr.py`. In that function _remove_spaces_column_names(tokval) is called which then uses the uuid3 method to create a unique string. The uuid3 method was just to make sure \"column name\" and \"column_name\" are never mixed up. Since the spaces are replaced by underscore, but when this replacement happens the uuid3 string is appended to the string. Before I had just a simple string \"_BACKTICK_QUOTED_STRING\" appended to it. \r\n\r\nThis has nothing to do with the tokenization. The tokenization and the string clean up method are two different things, differently implemented. Which one needs improvement?",
        "createdAt" : "2019-03-10T22:19:35Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      },
      {
        "id" : "8ebb8855-c3e3-4310-9bec-56ad6f22a802",
        "parentId" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so my original question was whether you could simply substitue a uuid string for the original string (rather than replace spaces and append with a special string). conceptually I like the former, it is unclear i this is possible. that is what I was asking. ",
        "createdAt" : "2019-03-10T22:22:41Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6f02d66a-0bcf-48d4-91ee-3607bbb370b8",
        "parentId" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "Yes, that is possible. But if the query has errors, I am afraid the error will be less clear, since the original name is gone. ",
        "createdAt" : "2019-03-10T22:30:30Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      },
      {
        "id" : "fe9642f9-d1f4-450a-b7d5-e31a983597c1",
        "parentId" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, fair enough. let's revert the uuid stuff then; your original way seemed reasonable.",
        "createdAt" : "2019-03-10T22:31:29Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1514aa31-35ad-4f07-8598-cefe2f2b5807",
        "parentId" : "d44f4f20-38ff-4c2e-afd6-9f32df85ebef",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "Reverted, also removed from compat. ",
        "createdAt" : "2019-03-10T22:39:20Z",
        "updatedAt" : "2019-03-20T08:09:00Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "192c09353cf6167b49f8d19ec90ef5a4545263af",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +40,44 @@    # Loop over all tokens till a backtick (`) is found.\n    # Then, take all tokens till the next backtick to form a backtick quoted\n    # string.\n    for toknum, tokval, _, _, _ in token_generator:\n        if tokval == '`':"
  }
]