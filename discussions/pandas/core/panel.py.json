[
  {
    "id" : "5539a55f-355f-4698-b4ef-71882f3500b8",
    "prId" : 2407,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "790e8d3e-e486-4851-9a57-8f9327fc9af9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "try: except: added because this broke on boolean operations in com.take_multi_2d - so will have to revist at somepoint\n",
        "createdAt" : "2012-12-04T13:39:51Z",
        "updatedAt" : "2012-12-04T13:39:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "66140d298405e908644a027db03e0e433b7546aa",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +826,830 @@            items = kwargs.get('items')\n            if com._count_not_none(items, major, minor) == 3:\n                try:\n                    return self._reindex_multi(items, major, minor)\n                except:"
  },
  {
    "id" : "ee3ce883-12c3-4f4c-b784-5011d582b402",
    "prId" : 5034,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "476e20af-b763-485a-a939-68ae3fee9d28",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jtratner should this `_panel_arith_method` be from `core/ops.py?` (I tried to use `ops._arith_method_PANEL`) which seemed very similar (though w/o the doc string creation) and it broke a small number of tests, so using this one\n",
        "createdAt" : "2013-09-29T17:25:08Z",
        "updatedAt" : "2013-09-29T17:25:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2f584998-788e-4fe5-8291-bd193309865d",
        "parentId" : "476e20af-b763-485a-a939-68ae3fee9d28",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "I wasn't clear on this so I didn't touch it, we could probably move it eventually.\n",
        "createdAt" : "2013-09-29T19:01:51Z",
        "updatedAt" : "2013-09-29T19:01:51Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "ed2e1ad8-3909-4427-a041-741b1e2f51cc",
        "parentId" : "476e20af-b763-485a-a939-68ae3fee9d28",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "np...thxs\n",
        "createdAt" : "2013-09-29T19:20:46Z",
        "updatedAt" : "2013-09-29T19:20:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf57d644780d9305999aba8088a11433e4f61605",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1209,1213 @@            f.__name__ = name\n            return f\n\n        # add `div`, `mul`, `pow`, etc..\n        ops.add_flex_arithmetic_methods(cls, _panel_arith_method,"
  },
  {
    "id" : "66a84796-aa7e-41f4-a06b-0224e289659d",
    "prId" : 17842,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17842#pullrequestreview-68447193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "511d2384-8990-4073-a22a-1c3d9e968154",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I got a bit annoyed with PanelND :) I think this is acceptable until we remove it.",
        "createdAt" : "2017-10-10T22:36:28Z",
        "updatedAt" : "2017-10-11T00:05:31Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c78053715e977851ab2abacb0494735903f770ba",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1208,1212 @@            labels, 'labels', axes=[items, major_axis, minor_axis],\n            axis=axis, method_name='reindex')\n        if self.ndim >= 4:\n            # Hack for PanelND\n            axes = {}"
  },
  {
    "id" : "a814ad02-3c0e-4a3f-bc24-6b826a4df941",
    "prId" : 17966,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17966#pullrequestreview-71821197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f17b2d2-d111-4d3a-99c5-5031d1e0ee58",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it might actually make this more complicated, but would be ok with leaving panel/panel4d as is.",
        "createdAt" : "2017-10-25T10:25:10Z",
        "updatedAt" : "2017-10-27T01:29:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e7e99f0b-a0c7-455e-9461-ba0c6496a913",
        "parentId" : "5f17b2d2-d111-4d3a-99c5-5031d1e0ee58",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I briefly tried that, but had to add several `if obj.ndim >= 3` inside internals. Got a bit messy.",
        "createdAt" : "2017-10-25T11:05:47Z",
        "updatedAt" : "2017-10-27T01:29:22Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "edcbb9ac526ae2ec7c56915d02ba6a083d830a81",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1201,1205 @@\n    @Appender(_shared_docs['reindex'] % _shared_doc_kwargs)\n    def reindex(self, *args, **kwargs):\n        major = kwargs.pop(\"major\", None)\n        minor = kwargs.pop('minor', None)"
  },
  {
    "id" : "7f1aa919-ce0b-4815-a9c5-39691649866e",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91615442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3b9a309-24b7-4c1a-bd06-31cef276dc58",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Making this match the usage everywhere else.",
        "createdAt" : "2018-01-25T18:02:15Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1529,1533 @@\nops.add_special_arithmetic_methods(Panel, **ops.panel_special_funcs)\nops.add_flex_arithmetic_methods(Panel, ops._flex_method_PANEL,\n                                flex_comp_method=ops._comp_method_PANEL)\nPanel._add_numeric_operations()"
  },
  {
    "id" : "8afd6603-10cd-4f3c-b02e-326512d63875",
    "prId" : 19649,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19649#pullrequestreview-97597659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e70dd7f0-2100-4ef8-9422-5ce691f34e22",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why don't we name these the *same* for all classes",
        "createdAt" : "2018-02-12T11:23:40Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dca60007-b54e-4d32-8ea4-a2a93dc5d594",
        "parentId" : "e70dd7f0-2100-4ef8-9422-5ce691f34e22",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in fact, why do we need this logic at all, cannot \r\n\r\n``ops.add_flex_arithmetic_method(cls)`` just do this?\r\n\r\nor even better\r\n``ops.add_arithmetic_methods(cls)``",
        "createdAt" : "2018-02-12T11:24:51Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d2e1fadc-5ee0-453e-8a41-2eb0c3736688",
        "parentId" : "e70dd7f0-2100-4ef8-9422-5ce691f34e22",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I like this idea.  SparseSeries does some double-calls that I'll need to sort out to make this work, so let's roll this into the next pass which is Sparse-specific.",
        "createdAt" : "2018-02-12T15:05:13Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5d8ed1e6-60fc-4732-a7b6-f249fb7bfd53",
        "parentId" : "e70dd7f0-2100-4ef8-9422-5ce691f34e22",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok this looks pretty good. I think should take this one step further (can be in another PR). where you then *only* need to call something like\r\n\r\n```\r\nops.add_arithmetic_methods(cls)\r\n```\r\nin each class and push the logic of which flex/special are added to core ops",
        "createdAt" : "2018-02-19T16:23:12Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9355ce2c5e160a8e50021e40623828d2bdcac591",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1529,1533 @@\nops.add_special_arithmetic_methods(Panel, **ops.panel_special_funcs)\nops.add_flex_arithmetic_methods(Panel, **ops.panel_flex_funcs)\nPanel._add_numeric_operations()\n"
  },
  {
    "id" : "7b72e949-cec2-44b3-9d11-7b0090583181",
    "prId" : 23657,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23657#pullrequestreview-174136509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5538284-3b96-4769-a5ca-a686e2cf0ab2",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Copied from #23192:\r\n> I had no intention to add this warning filter here, but otherwise I cannot test the `raise_conflict` deprecation for `Panel`, as this warning was throwing me off from trying to catch the deprecation warning. If we don't care about testing that kwarg deprecation for `Panel`, I can revert this change here.",
        "createdAt" : "2018-11-12T23:25:50Z",
        "updatedAt" : "2018-11-15T00:03:32Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff6261d07b82f54e3ce031a0fc908304d5c0c81",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1241,1245 @@            # do not warn about constructing Panel when reindexing\n            result = super(Panel, self).reindex(**kwargs)\n        return result\n\n    @Substitution(**_shared_doc_kwargs)"
  },
  {
    "id" : "616d81d3-2125-490a-9725-8998f51e385e",
    "prId" : 23657,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23657#pullrequestreview-174861080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "313604a2-758d-49a6-9d6f-10756470a7f1",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Ran the doctest validation, therefore changed more than just the `errors` text. But not essential to me.",
        "createdAt" : "2018-11-12T23:26:33Z",
        "updatedAt" : "2018-11-15T00:03:32Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "aa5be857-cd5c-42e2-a903-409de9e14af1",
        "parentId" : "313604a2-758d-49a6-9d6f-10756470a7f1",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine",
        "createdAt" : "2018-11-14T13:36:09Z",
        "updatedAt" : "2018-11-15T00:03:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff6261d07b82f54e3ce031a0fc908304d5c0c81",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1390,1394 @@        Modify Panel in place using non-NA values from other Panel.\n\n        May also use object coercible to Panel. Will align on items.\n\n        Parameters"
  },
  {
    "id" : "53f9f6d7-23bd-416c-ad54-59e28640fc77",
    "prId" : 27043,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27043#pullrequestreview-254348413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a06e567c-2205-4208-8ee3-e6c6c6cecb61",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Is this code hit? I'm confused by the reference to panel.",
        "createdAt" : "2019-06-26T01:50:55Z",
        "updatedAt" : "2019-06-26T13:59:34Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "167acb57-b780-45ef-bc90-34de76062fd0",
        "parentId" : "a06e567c-2205-4208-8ee3-e6c6c6cecb61",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We've removed most of the Panel tests, but not yet all of Panel itself.  So this is just explicitly-disabling a method that _would_ call BlockManager.xs, since we're on the road towards removing the class anyway.",
        "createdAt" : "2019-06-26T01:53:08Z",
        "updatedAt" : "2019-06-26T13:59:34Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fc4307392c384b4ab754fb3ad6d73be3cf95289",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +857,861 @@            return self[key]\n\n        raise NotImplementedError(\"Panel is removed in pandas 0.25.0\")\n\n    _xs = xs"
  }
]