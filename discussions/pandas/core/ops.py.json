[
  {
    "id" : "caba6837-c5f3-4e0e-8181-c579632666d9",
    "prId" : 10744,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e18de7e3-ceed-4d9c-b3e3-2c4c1f91986f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in theory one could provide a series of offsets that are all the same (and equal to each other), but that is prob a special case. \n",
        "createdAt" : "2015-08-11T16:15:09Z",
        "updatedAt" : "2015-08-13T12:16:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac975417636ae37eaa14dc3d5c23db80ceaf0a97",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +414,418 @@            # in DatetimeIndex; otherwise elementwise apply\n            if self.is_offset_lhs:\n                if len(lvalues) == 1:\n                    rvalues = pd.DatetimeIndex(rvalues)\n                    lvalues = lvalues[0]"
  },
  {
    "id" : "cf649ca8-7518-4ac5-8329-f3a4034c976c",
    "prId" : 17589,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17589#pullrequestreview-64346374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b327f8aa-ff19-4557-88ce-bd7f7d3b7af8",
        "parentId" : null,
        "authorId" : "4ee5f553-8d63-479a-9a30-2a1431ca36e8",
        "body" : "it does not make sense for arith_method to be an optional argument because _create_methods will try to call it without checking if it is None",
        "createdAt" : "2017-09-21T16:34:16Z",
        "updatedAt" : "2017-09-24T22:09:56Z",
        "lastEditedBy" : "4ee5f553-8d63-479a-9a30-2a1431ca36e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a92688be132d19675536fdd73e230f993b36440",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +184,188 @@    Parameters\n    ----------\n    arith_method : function (optional)\n        factory for special arithmetic methods, with op string:\n        f(op, name, str_rep, default_axis=None, fill_zeros=None, **eval_kwargs)"
  },
  {
    "id" : "68520df7-3345-409a-ae11-5611602b2e07",
    "prId" : 17710,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17710#pullrequestreview-66313844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "623d4bbe-e679-44ac-9b4e-156df4e5afc9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if these imports become an issue i can do a global check (like u do with matplotlib) ",
        "createdAt" : "2017-09-30T14:00:41Z",
        "updatedAt" : "2017-10-02T11:37:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d0f74a73aa26f8ba7a6e59e797dfa3638272eb5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +669,673 @@    \"\"\"\n    def na_op(x, y):\n        import pandas.core.computation.expressions as expressions\n\n        try:"
  },
  {
    "id" : "11f8d791-8d79-41a6-b6b3-6f01810f02af",
    "prId" : 18832,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18832#pullrequestreview-85429659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6523f9e7-8cb9-4911-80ea-a7e98d30146f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I guess this is ok for now. Maybe should make 3 sub-classes here (or I think ultimately refactoring to have *all* this logic in the index methods as it already duplicates some of this).",
        "createdAt" : "2017-12-23T20:49:39Z",
        "updatedAt" : "2017-12-23T20:49:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3cab61d442f67ba5628194c078031929449ca75",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +468,472 @@        elif self.is_timedelta_lhs:\n            return self._validate_timedelta(name)\n        elif self.is_offset_lhs:\n            return self._validate_offset(name)\n"
  },
  {
    "id" : "aafca139-27e2-424f-8718-e6637110d152",
    "prId" : 19024,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19024#pullrequestreview-86066620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f274a0-60ec-42ac-8161-c780ff4100bd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and until / unless you want to limit / remove _TimeOp (which is actually ok with me). then this doesn't belong here as I have commented before.\r\n\r\nYou are welcome to put it *in* _TimeOp for now or rip out TimeOp.",
        "createdAt" : "2018-01-01T17:54:52Z",
        "updatedAt" : "2018-01-02T21:11:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4efb27af76cbb48e0b6ad7ff419acfcc3e1a1c46",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +664,668 @@\n        left, right = _align_method_SERIES(left, right)\n        if is_datetime64_dtype(left) or is_datetime64tz_dtype(left):\n            result = op(pd.DatetimeIndex(left), right)\n            res_name = _get_series_op_result_name(left, right)"
  },
  {
    "id" : "fc0b3951-302e-4959-b11e-c1df237bb7ea",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91614555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c8a6985-7a2b-45f6-be3d-da95bc614249",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Pretty sure \"special\" here was a copy/paste mistake.  Please correct me if I'm wrong.",
        "createdAt" : "2018-01-25T17:59:32Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +526,530 @@    ----------\n    flex_arith_method : function\n        factory for flex arithmetic methods, with op string:\n        f(op, name, str_rep)\n    flex_comp_method : function, optional,"
  },
  {
    "id" : "bb0c80d8-85e6-4c1f-9382-50f3f990d34e",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91615333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fefbd5a5-4f57-44e1-94f4-1f7a8fb64f78",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Cut/pasted from Panel, with small re-workings to _agg_doc_PANEL.",
        "createdAt" : "2018-01-25T18:01:53Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 325,
    "diffHunk" : "@@ -1,1 +1219,1223 @@\n\ndef _flex_method_PANEL(op, name, str_rep=None):\n    eval_kwargs = _gen_eval_kwargs(name)\n    fill_zeros = _gen_fill_zeros(name)"
  },
  {
    "id" : "c1669848-0f7c-4c5c-8008-bb240ce62636",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91900718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3b53684-8fd5-4c76-af2f-d906af5c2747",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this other correct?",
        "createdAt" : "2018-01-26T12:26:38Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "31ad1b24-7410-416f-8f94-7cf84d56e892",
        "parentId" : "f3b53684-8fd5-4c76-af2f-d906af5c2747",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It matches the existing docstring",
        "createdAt" : "2018-01-26T16:56:15Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +312,316 @@Parameters\n----------\nother : DataFrame or Panel\naxis : {{items, major_axis, minor_axis}}\n    Axis to broadcast over"
  },
  {
    "id" : "773ef2e6-fc76-49c6-8aa4-1f469e8b02d1",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92776898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:28:41Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d1258247-5b06-4c0a-b552-e16e4f005880",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Is the request for comments in the code for what tests hit this path?  Or confirmation here that such tests exist?",
        "createdAt" : "2018-01-30T15:54:36Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "947988b3-2421-432a-bc34-e342aa885a27",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.categorical.test_operators.TestCategoricalOps.test_numeric_like_ops hits this path.  The change here is catching this case early (and explicitly) instead of in the `else:` clause within the na_op above (see point where this PR changes `elif isinstance(x, np.ndarray)` to `else: assert isinstance(x, np.ndarray)`",
        "createdAt" : "2018-01-30T15:58:45Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "af9a62c2-fea5-439e-a2f1-a7bd9606a1b9",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "my requests are about things that are being added. e.g. if its just refactoing then existing tests are ok, but some things look like they are catching additional cases, so should have tests for these. a coverage analysis can test you (compare before and after)",
        "createdAt" : "2018-01-31T00:09:44Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e8fbc495-534c-4507-947a-f6fea01e3004",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> if its just refactoing then existing tests are ok\r\n\r\nThis is very nearly pure refactoring to catch things earlier, more explicitly, and with fewer levels of indentation.  I'll go through the diff and annotate any exceptions to this rule.  The `is_categorical_dtype` check on 652 replaces the `else` previously on 621 (i.e. not an exception to the rule).",
        "createdAt" : "2018-01-31T00:56:59Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +653,657 @@                                    dtype=result.dtype)\n\n        elif is_categorical_dtype(left):\n            raise TypeError(\"{typ} cannot perform the operation \"\n                            \"{op}\".format(typ=type(left).__name__, op=str_rep))"
  },
  {
    "id" : "eb22ae88-fff1-49ee-9d0b-2c4c1fad499e",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92768311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:28:56Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4a37cc0e-0670-4e37-b01d-c7783388f169",
        "parentId" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.series.test_operators.TestSeriesComparisons.test_comparison_invalid.  This is just moved up a few lines and down one level of indentation.",
        "createdAt" : "2018-01-30T16:00:32Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7beb33ad-3157-40f1-9eee-d1840d9db1ea",
        "parentId" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok",
        "createdAt" : "2018-01-31T00:09:45Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +747,751 @@            result = _comp_method_OBJECT_ARRAY(op, x, y)\n\n        elif is_datetimelike_v_numeric(x, y):\n            raise TypeError(\"invalid type comparison\")\n"
  },
  {
    "id" : "4fce934b-260b-4fe1-828b-8d93af3a01bc",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92615359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c8495ae-1f70-4e69-90e8-e59b498d1032",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comment no longer relevant?",
        "createdAt" : "2018-01-30T11:29:10Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "77be2507-6013-45ac-a499-da0fa003b180",
        "parentId" : "7c8495ae-1f70-4e69-90e8-e59b498d1032",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The comment may be more verbose than it needs to be, but is still relevant.  Once #19301 goes in we can dispatch to DTI and TDI and the needs_i8_conversion block below can be simplified quite a bit.",
        "createdAt" : "2018-01-30T16:01:46Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +754,758 @@            # we want to compare like types\n            # we only want to convert to integer like if\n            # we are not NotImplemented, otherwise\n            # we would allow datetime64 (but viewed as i8) against\n            # integer comparisons"
  },
  {
    "id" : "a38d03ca-06b6-4d40-b53d-cf7ae98efafa",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92616866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6fd10f-973e-453b-863f-b33281a9f88b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:29:50Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b5c074d1-acca-4944-b71a-563a32126f7f",
        "parentId" : "af6fd10f-973e-453b-863f-b33281a9f88b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.categorical.test_operators.TestCategoricalOpsWithFactor.test_comparisons",
        "createdAt" : "2018-01-30T16:05:01Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +813,817 @@\n        elif (isinstance(other, pd.Categorical) and\n              not is_categorical_dtype(self)):\n            raise TypeError(\"Cannot compare a Categorical for op {op} with \"\n                            \"Series of dtype {typ}.\\nIf you want to compare \""
  },
  {
    "id" : "80e8f4ea-cae1-4ab4-855d-60342e41acbd",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92618085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "test that hit this",
        "createdAt" : "2018-01-30T11:29:55Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cde30e2e-6302-4f77-9f67-800946889438",
        "parentId" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.series.test_operators.TestSeriesComparisons.test_nat_comparisons_scalar, tests.series.test_operators.TestSeriesComparisons.test_more_na_comparisons, tests.series.test_arithmetic.TestTimestampSeriesComparison.test_timestamp_equality, tests.series.test_arithmetic.TestTimestampSeriesComparison.test_timestamp_compare_series\r\n\r\ntotal of 10 cases between these with parametrization",
        "createdAt" : "2018-01-30T16:07:28Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27712239-4668-4ae3-9196-5b8d7097cbf9",
        "parentId" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(This is moved down from `na_op`)",
        "createdAt" : "2018-01-30T16:07:57Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +820,824 @@\n        elif is_scalar(other) and isna(other):\n            # numpy does not like comparisons vs None\n            if op is operator.ne:\n                res_values = np.ones(len(self), dtype=bool)"
  },
  {
    "id" : "ea9a03fb-e0ff-4fe3-a289-42120d9e76a9",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:30:18Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "64e6929c-bfb5-4bc1-a853-0facbdc040ce",
        "parentId" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "See #19421.  Only one test hits this, and only in py3:\r\n\r\n```\r\ns = Series([2, 3, 4, 5, 6, 7, 8, 9, datetime(2005, 1, 1)])\r\ns[::2] = np.nan\r\nd = DataFrame({'A': s})\r\n\r\nwith pytest.raises(ValueError):\r\n    d.__and__(s, axis='columns')\r\n```",
        "createdAt" : "2018-01-30T16:08:55Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "147b85ba-8de7-4495-ba51-e39d4d94cbaf",
        "parentId" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is a change and not just a refactor.  As per the comments, it is horribly broken, and better to raise intentionally than accidentally have the `yrav.item()` raise a ValueError.",
        "createdAt" : "2018-01-31T01:02:49Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +1027,1031 @@\n                if yrav.shape != mask.shape:\n                    # FIXME: GH#5284, GH#5035, GH#19448\n                    # Without specifically raising here we get mismatched\n                    # errors in Py3 (TypeError) vs Py2 (ValueError)"
  },
  {
    "id" : "a23cff7a-2605-454d-9ecf-e6b426341502",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa96be3-3e59-469b-b754-527414897096",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Everything in this part of the diff (788-799) is pure refactor, moving the ABCDataFrame check to the top spot for consistency",
        "createdAt" : "2018-01-31T00:59:47Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +799,803 @@                raise ValueError(msg)\n            res_values = na_op(self.values, other.values)\n            return self._constructor(res_values, index=self.index, name=name)\n\n        elif isinstance(other, (np.ndarray, pd.Index)):"
  },
  {
    "id" : "edc7979e-57f0-40b1-afd2-8a2164cdfe56",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14081b84-6bc6-4172-8676-6d2cf04190c0",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "All the edits to this function (895-918) are cleanup/refactor.",
        "createdAt" : "2018-01-31T01:01:50Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +921,925 @@            res_values = na_op(self.values, other)\n            unfilled = self._constructor(res_values, index=self.index)\n            return filler(unfilled).__finalize__(self)\n\n    return wrapper"
  },
  {
    "id" : "65d77624-19fb-4b44-a089-ba72905ec819",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92778102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce0fe08-1f16-4df1-a438-c3e334334483",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Using `xrav.size` instead of `np.prod(xrav.shape)` here and above is to move towards joining this case with the case above it.  This masking logic is done _almost_ identically in Series/DataFrame/Panel methods and one of the next steps will be to de-duplicate these.",
        "createdAt" : "2018-01-31T01:04:13Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 285,
    "diffHunk" : "@@ -1,1 +1042,1046 @@                mask = notna(xrav)\n                xrav = xrav[mask]\n                if xrav.size:\n                    with np.errstate(all='ignore'):\n                        result[mask] = op(xrav, y)"
  },
  {
    "id" : "3317d2b5-7f9f-4474-a40f-224e44b46a16",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c46e47-dc94-4805-8b4d-6245df3c9cac",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`isinstance(x, np.ndarray)` instead of `hasattr(x, 'size')` to be more explicit.  The other case that otherwise gets to this point in tests is Categorical, but that raises shortly after this anyway.",
        "createdAt" : "2018-01-31T01:05:08Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "26a729f5-a8a1-4b5b-b7fd-d755b666e96b",
        "parentId" : "f5c46e47-dc94-4805-8b4d-6245df3c9cac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here",
        "createdAt" : "2018-01-31T11:26:31Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +1037,1041 @@                        result[mask] = op(xrav, yrav)\n\n            elif isinstance(x, np.ndarray):\n                # mask is only meaningful for x\n                result = np.empty(x.size, dtype=x.dtype)"
  },
  {
    "id" : "ab495265-3f0e-492c-8579-63d9ec7e5d64",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87449ad3-7373-4533-bc9a-e3f5f76fd6f4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a comment here about early failing",
        "createdAt" : "2018-01-31T11:24:35Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +789,793 @@            self._get_axis_number(axis)\n\n        if isinstance(other, ABCDataFrame):  # pragma: no cover\n            # Defer to DataFrame implementation; fail early\n            return NotImplemented"
  },
  {
    "id" : "4fd28f71-8a3e-4752-86f8-a0372d2806ff",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-93592858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use ``is_categorical_dtype(other)``",
        "createdAt" : "2018-01-31T11:25:56Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d640dc82-9642-4f8b-882a-19ae366f5949",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is catching pd.Categorical specifically (as opposed to CategoricalIndex or Series[Categorical])",
        "createdAt" : "2018-01-31T16:20:13Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f43dca31-2461-4f82-b414-c58f237f452b",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that's totally not obvious, is this tested or needed? that seems oddly specific",
        "createdAt" : "2018-02-01T11:24:26Z",
        "updatedAt" : "2018-02-01T11:24:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1c4dec8a-ce42-49d1-a04e-956946b61499",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Well the two branches preceeding this handle ABCSeries and pd.Index cases, and the (existing) error message specifically refers to a Categorical",
        "createdAt" : "2018-02-01T16:03:44Z",
        "updatedAt" : "2018-02-01T16:03:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0270db4c-bbcc-4399-8cf7-89f144bab1f5",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, pls revist at some point, this should prob be less specific and more about a non-ndarray like (e.g. an ExtensionArray check)",
        "createdAt" : "2018-02-02T11:28:57Z",
        "updatedAt" : "2018-02-02T11:29:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +812,816 @@                                     index=self.index).__finalize__(self)\n\n        elif (isinstance(other, pd.Categorical) and\n              not is_categorical_dtype(self)):\n            raise TypeError(\"Cannot compare a Categorical for op {op} with \""
  },
  {
    "id" : "34a68361-bf2e-4ce1-8a17-fb415c400c98",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc61bf2-5200-4972-aa79-23c74ec59f50",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comment here",
        "createdAt" : "2018-01-31T11:26:17Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 223,
    "diffHunk" : "@@ -1,1 +897,901 @@        self, other = _align_method_SERIES(self, other, align_asobject=True)\n\n        if isinstance(other, ABCDataFrame):\n            # Defer to DataFrame implementation; fail early\n            return NotImplemented"
  }
]