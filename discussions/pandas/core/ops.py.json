[
  {
    "id" : "caba6837-c5f3-4e0e-8181-c579632666d9",
    "prId" : 10744,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e18de7e3-ceed-4d9c-b3e3-2c4c1f91986f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "in theory one could provide a series of offsets that are all the same (and equal to each other), but that is prob a special case. \n",
        "createdAt" : "2015-08-11T16:15:09Z",
        "updatedAt" : "2015-08-13T12:16:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac975417636ae37eaa14dc3d5c23db80ceaf0a97",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +414,418 @@            # in DatetimeIndex; otherwise elementwise apply\n            if self.is_offset_lhs:\n                if len(lvalues) == 1:\n                    rvalues = pd.DatetimeIndex(rvalues)\n                    lvalues = lvalues[0]"
  },
  {
    "id" : "cf649ca8-7518-4ac5-8329-f3a4034c976c",
    "prId" : 17589,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17589#pullrequestreview-64346374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b327f8aa-ff19-4557-88ce-bd7f7d3b7af8",
        "parentId" : null,
        "authorId" : "4ee5f553-8d63-479a-9a30-2a1431ca36e8",
        "body" : "it does not make sense for arith_method to be an optional argument because _create_methods will try to call it without checking if it is None",
        "createdAt" : "2017-09-21T16:34:16Z",
        "updatedAt" : "2017-09-24T22:09:56Z",
        "lastEditedBy" : "4ee5f553-8d63-479a-9a30-2a1431ca36e8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a92688be132d19675536fdd73e230f993b36440",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +184,188 @@    Parameters\n    ----------\n    arith_method : function (optional)\n        factory for special arithmetic methods, with op string:\n        f(op, name, str_rep, default_axis=None, fill_zeros=None, **eval_kwargs)"
  },
  {
    "id" : "68520df7-3345-409a-ae11-5611602b2e07",
    "prId" : 17710,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17710#pullrequestreview-66313844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "623d4bbe-e679-44ac-9b4e-156df4e5afc9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if these imports become an issue i can do a global check (like u do with matplotlib) ",
        "createdAt" : "2017-09-30T14:00:41Z",
        "updatedAt" : "2017-10-02T11:37:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d0f74a73aa26f8ba7a6e59e797dfa3638272eb5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +669,673 @@    \"\"\"\n    def na_op(x, y):\n        import pandas.core.computation.expressions as expressions\n\n        try:"
  },
  {
    "id" : "11f8d791-8d79-41a6-b6b3-6f01810f02af",
    "prId" : 18832,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18832#pullrequestreview-85429659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6523f9e7-8cb9-4911-80ea-a7e98d30146f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I guess this is ok for now. Maybe should make 3 sub-classes here (or I think ultimately refactoring to have *all* this logic in the index methods as it already duplicates some of this).",
        "createdAt" : "2017-12-23T20:49:39Z",
        "updatedAt" : "2017-12-23T20:49:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3cab61d442f67ba5628194c078031929449ca75",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +468,472 @@        elif self.is_timedelta_lhs:\n            return self._validate_timedelta(name)\n        elif self.is_offset_lhs:\n            return self._validate_offset(name)\n"
  },
  {
    "id" : "aafca139-27e2-424f-8718-e6637110d152",
    "prId" : 19024,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19024#pullrequestreview-86066620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f274a0-60ec-42ac-8161-c780ff4100bd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and until / unless you want to limit / remove _TimeOp (which is actually ok with me). then this doesn't belong here as I have commented before.\r\n\r\nYou are welcome to put it *in* _TimeOp for now or rip out TimeOp.",
        "createdAt" : "2018-01-01T17:54:52Z",
        "updatedAt" : "2018-01-02T21:11:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4efb27af76cbb48e0b6ad7ff419acfcc3e1a1c46",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +664,668 @@\n        left, right = _align_method_SERIES(left, right)\n        if is_datetime64_dtype(left) or is_datetime64tz_dtype(left):\n            result = op(pd.DatetimeIndex(left), right)\n            res_name = _get_series_op_result_name(left, right)"
  },
  {
    "id" : "fc0b3951-302e-4959-b11e-c1df237bb7ea",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91614555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c8a6985-7a2b-45f6-be3d-da95bc614249",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Pretty sure \"special\" here was a copy/paste mistake.  Please correct me if I'm wrong.",
        "createdAt" : "2018-01-25T17:59:32Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +526,530 @@    ----------\n    flex_arith_method : function\n        factory for flex arithmetic methods, with op string:\n        f(op, name, str_rep)\n    flex_comp_method : function, optional,"
  },
  {
    "id" : "bb0c80d8-85e6-4c1f-9382-50f3f990d34e",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91615333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fefbd5a5-4f57-44e1-94f4-1f7a8fb64f78",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Cut/pasted from Panel, with small re-workings to _agg_doc_PANEL.",
        "createdAt" : "2018-01-25T18:01:53Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 325,
    "diffHunk" : "@@ -1,1 +1219,1223 @@\n\ndef _flex_method_PANEL(op, name, str_rep=None):\n    eval_kwargs = _gen_eval_kwargs(name)\n    fill_zeros = _gen_fill_zeros(name)"
  },
  {
    "id" : "c1669848-0f7c-4c5c-8008-bb240ce62636",
    "prId" : 19396,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19396#pullrequestreview-91900718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3b53684-8fd5-4c76-af2f-d906af5c2747",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this other correct?",
        "createdAt" : "2018-01-26T12:26:38Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "31ad1b24-7410-416f-8f94-7cf84d56e892",
        "parentId" : "f3b53684-8fd5-4c76-af2f-d906af5c2747",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It matches the existing docstring",
        "createdAt" : "2018-01-26T16:56:15Z",
        "updatedAt" : "2018-01-26T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "89692f74b95d03df5b07b6af3669089fb59c92f1",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +312,316 @@Parameters\n----------\nother : DataFrame or Panel\naxis : {{items, major_axis, minor_axis}}\n    Axis to broadcast over"
  },
  {
    "id" : "773ef2e6-fc76-49c6-8aa4-1f469e8b02d1",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92776898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:28:41Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d1258247-5b06-4c0a-b552-e16e4f005880",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Is the request for comments in the code for what tests hit this path?  Or confirmation here that such tests exist?",
        "createdAt" : "2018-01-30T15:54:36Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "947988b3-2421-432a-bc34-e342aa885a27",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.categorical.test_operators.TestCategoricalOps.test_numeric_like_ops hits this path.  The change here is catching this case early (and explicitly) instead of in the `else:` clause within the na_op above (see point where this PR changes `elif isinstance(x, np.ndarray)` to `else: assert isinstance(x, np.ndarray)`",
        "createdAt" : "2018-01-30T15:58:45Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "af9a62c2-fea5-439e-a2f1-a7bd9606a1b9",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "my requests are about things that are being added. e.g. if its just refactoing then existing tests are ok, but some things look like they are catching additional cases, so should have tests for these. a coverage analysis can test you (compare before and after)",
        "createdAt" : "2018-01-31T00:09:44Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e8fbc495-534c-4507-947a-f6fea01e3004",
        "parentId" : "b6fc84b6-5f43-410a-9202-7bc3cf60df95",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> if its just refactoing then existing tests are ok\r\n\r\nThis is very nearly pure refactoring to catch things earlier, more explicitly, and with fewer levels of indentation.  I'll go through the diff and annotate any exceptions to this rule.  The `is_categorical_dtype` check on 652 replaces the `else` previously on 621 (i.e. not an exception to the rule).",
        "createdAt" : "2018-01-31T00:56:59Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +653,657 @@                                    dtype=result.dtype)\n\n        elif is_categorical_dtype(left):\n            raise TypeError(\"{typ} cannot perform the operation \"\n                            \"{op}\".format(typ=type(left).__name__, op=str_rep))"
  },
  {
    "id" : "eb22ae88-fff1-49ee-9d0b-2c4c1fad499e",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92768311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:28:56Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4a37cc0e-0670-4e37-b01d-c7783388f169",
        "parentId" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.series.test_operators.TestSeriesComparisons.test_comparison_invalid.  This is just moved up a few lines and down one level of indentation.",
        "createdAt" : "2018-01-30T16:00:32Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7beb33ad-3157-40f1-9eee-d1840d9db1ea",
        "parentId" : "899eb286-5779-4da9-8209-c16d79b27f37",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok",
        "createdAt" : "2018-01-31T00:09:45Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +747,751 @@            result = _comp_method_OBJECT_ARRAY(op, x, y)\n\n        elif is_datetimelike_v_numeric(x, y):\n            raise TypeError(\"invalid type comparison\")\n"
  },
  {
    "id" : "4fce934b-260b-4fe1-828b-8d93af3a01bc",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92615359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c8495ae-1f70-4e69-90e8-e59b498d1032",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comment no longer relevant?",
        "createdAt" : "2018-01-30T11:29:10Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "77be2507-6013-45ac-a499-da0fa003b180",
        "parentId" : "7c8495ae-1f70-4e69-90e8-e59b498d1032",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The comment may be more verbose than it needs to be, but is still relevant.  Once #19301 goes in we can dispatch to DTI and TDI and the needs_i8_conversion block below can be simplified quite a bit.",
        "createdAt" : "2018-01-30T16:01:46Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +754,758 @@            # we want to compare like types\n            # we only want to convert to integer like if\n            # we are not NotImplemented, otherwise\n            # we would allow datetime64 (but viewed as i8) against\n            # integer comparisons"
  },
  {
    "id" : "a38d03ca-06b6-4d40-b53d-cf7ae98efafa",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92616866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6fd10f-973e-453b-863f-b33281a9f88b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:29:50Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b5c074d1-acca-4944-b71a-563a32126f7f",
        "parentId" : "af6fd10f-973e-453b-863f-b33281a9f88b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.categorical.test_operators.TestCategoricalOpsWithFactor.test_comparisons",
        "createdAt" : "2018-01-30T16:05:01Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +813,817 @@\n        elif (isinstance(other, pd.Categorical) and\n              not is_categorical_dtype(self)):\n            raise TypeError(\"Cannot compare a Categorical for op {op} with \"\n                            \"Series of dtype {typ}.\\nIf you want to compare \""
  },
  {
    "id" : "80e8f4ea-cae1-4ab4-855d-60342e41acbd",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92618085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "test that hit this",
        "createdAt" : "2018-01-30T11:29:55Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cde30e2e-6302-4f77-9f67-800946889438",
        "parentId" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "tests.series.test_operators.TestSeriesComparisons.test_nat_comparisons_scalar, tests.series.test_operators.TestSeriesComparisons.test_more_na_comparisons, tests.series.test_arithmetic.TestTimestampSeriesComparison.test_timestamp_equality, tests.series.test_arithmetic.TestTimestampSeriesComparison.test_timestamp_compare_series\r\n\r\ntotal of 10 cases between these with parametrization",
        "createdAt" : "2018-01-30T16:07:28Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27712239-4668-4ae3-9196-5b8d7097cbf9",
        "parentId" : "50da09ea-809f-4b24-b536-1080ddaf6624",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(This is moved down from `na_op`)",
        "createdAt" : "2018-01-30T16:07:57Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +820,824 @@\n        elif is_scalar(other) and isna(other):\n            # numpy does not like comparisons vs None\n            if op is operator.ne:\n                res_values = np.ones(len(self), dtype=bool)"
  },
  {
    "id" : "ea9a03fb-e0ff-4fe3-a289-42120d9e76a9",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "tests that hit this",
        "createdAt" : "2018-01-30T11:30:18Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "64e6929c-bfb5-4bc1-a853-0facbdc040ce",
        "parentId" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "See #19421.  Only one test hits this, and only in py3:\r\n\r\n```\r\ns = Series([2, 3, 4, 5, 6, 7, 8, 9, datetime(2005, 1, 1)])\r\ns[::2] = np.nan\r\nd = DataFrame({'A': s})\r\n\r\nwith pytest.raises(ValueError):\r\n    d.__and__(s, axis='columns')\r\n```",
        "createdAt" : "2018-01-30T16:08:55Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "147b85ba-8de7-4495-ba51-e39d4d94cbaf",
        "parentId" : "afa9d582-f0a3-4a14-b42f-3018c73b5373",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is a change and not just a refactor.  As per the comments, it is horribly broken, and better to raise intentionally than accidentally have the `yrav.item()` raise a ValueError.",
        "createdAt" : "2018-01-31T01:02:49Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 267,
    "diffHunk" : "@@ -1,1 +1027,1031 @@\n                if yrav.shape != mask.shape:\n                    # FIXME: GH#5284, GH#5035, GH#19448\n                    # Without specifically raising here we get mismatched\n                    # errors in Py3 (TypeError) vs Py2 (ValueError)"
  },
  {
    "id" : "a23cff7a-2605-454d-9ecf-e6b426341502",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa96be3-3e59-469b-b754-527414897096",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Everything in this part of the diff (788-799) is pure refactor, moving the ABCDataFrame check to the top spot for consistency",
        "createdAt" : "2018-01-31T00:59:47Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +799,803 @@                raise ValueError(msg)\n            res_values = na_op(self.values, other.values)\n            return self._constructor(res_values, index=self.index, name=name)\n\n        elif isinstance(other, (np.ndarray, pd.Index)):"
  },
  {
    "id" : "edc7979e-57f0-40b1-afd2-8a2164cdfe56",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92777730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14081b84-6bc6-4172-8676-6d2cf04190c0",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "All the edits to this function (895-918) are cleanup/refactor.",
        "createdAt" : "2018-01-31T01:01:50Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +921,925 @@            res_values = na_op(self.values, other)\n            unfilled = self._constructor(res_values, index=self.index)\n            return filler(unfilled).__finalize__(self)\n\n    return wrapper"
  },
  {
    "id" : "65d77624-19fb-4b44-a089-ba72905ec819",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92778102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce0fe08-1f16-4df1-a438-c3e334334483",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Using `xrav.size` instead of `np.prod(xrav.shape)` here and above is to move towards joining this case with the case above it.  This masking logic is done _almost_ identically in Series/DataFrame/Panel methods and one of the next steps will be to de-duplicate these.",
        "createdAt" : "2018-01-31T01:04:13Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 285,
    "diffHunk" : "@@ -1,1 +1042,1046 @@                mask = notna(xrav)\n                xrav = xrav[mask]\n                if xrav.size:\n                    with np.errstate(all='ignore'):\n                        result[mask] = op(xrav, y)"
  },
  {
    "id" : "3317d2b5-7f9f-4474-a40f-224e44b46a16",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c46e47-dc94-4805-8b4d-6245df3c9cac",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`isinstance(x, np.ndarray)` instead of `hasattr(x, 'size')` to be more explicit.  The other case that otherwise gets to this point in tests is Categorical, but that raises shortly after this anyway.",
        "createdAt" : "2018-01-31T01:05:08Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "26a729f5-a8a1-4b5b-b7fd-d755b666e96b",
        "parentId" : "f5c46e47-dc94-4805-8b4d-6245df3c9cac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here",
        "createdAt" : "2018-01-31T11:26:31Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 279,
    "diffHunk" : "@@ -1,1 +1037,1041 @@                        result[mask] = op(xrav, yrav)\n\n            elif isinstance(x, np.ndarray):\n                # mask is only meaningful for x\n                result = np.empty(x.size, dtype=x.dtype)"
  },
  {
    "id" : "ab495265-3f0e-492c-8579-63d9ec7e5d64",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87449ad3-7373-4533-bc9a-e3f5f76fd6f4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a comment here about early failing",
        "createdAt" : "2018-01-31T11:24:35Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +789,793 @@            self._get_axis_number(axis)\n\n        if isinstance(other, ABCDataFrame):  # pragma: no cover\n            # Defer to DataFrame implementation; fail early\n            return NotImplemented"
  },
  {
    "id" : "4fd28f71-8a3e-4752-86f8-a0372d2806ff",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-93592858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use ``is_categorical_dtype(other)``",
        "createdAt" : "2018-01-31T11:25:56Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d640dc82-9642-4f8b-882a-19ae366f5949",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is catching pd.Categorical specifically (as opposed to CategoricalIndex or Series[Categorical])",
        "createdAt" : "2018-01-31T16:20:13Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f43dca31-2461-4f82-b414-c58f237f452b",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that's totally not obvious, is this tested or needed? that seems oddly specific",
        "createdAt" : "2018-02-01T11:24:26Z",
        "updatedAt" : "2018-02-01T11:24:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1c4dec8a-ce42-49d1-a04e-956946b61499",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Well the two branches preceeding this handle ABCSeries and pd.Index cases, and the (existing) error message specifically refers to a Categorical",
        "createdAt" : "2018-02-01T16:03:44Z",
        "updatedAt" : "2018-02-01T16:03:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0270db4c-bbcc-4399-8cf7-89f144bab1f5",
        "parentId" : "f6854082-cebd-4286-a8fb-42ee790324eb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, pls revist at some point, this should prob be less specific and more about a non-ndarray like (e.g. an ExtensionArray check)",
        "createdAt" : "2018-02-02T11:28:57Z",
        "updatedAt" : "2018-02-02T11:29:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +812,816 @@                                     index=self.index).__finalize__(self)\n\n        elif (isinstance(other, pd.Categorical) and\n              not is_categorical_dtype(self)):\n            raise TypeError(\"Cannot compare a Categorical for op {op} with \""
  },
  {
    "id" : "34a68361-bf2e-4ce1-8a17-fb415c400c98",
    "prId" : 19448,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19448#pullrequestreview-92888105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc61bf2-5200-4972-aa79-23c74ec59f50",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "comment here",
        "createdAt" : "2018-01-31T11:26:17Z",
        "updatedAt" : "2018-02-01T00:37:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "399fcd5aa4340f4b317ddb74f0addcd69ecb9ddb",
    "line" : 223,
    "diffHunk" : "@@ -1,1 +897,901 @@        self, other = _align_method_SERIES(self, other, align_asobject=True)\n\n        if isinstance(other, ABCDataFrame):\n            # Defer to DataFrame implementation; fail early\n            return NotImplemented"
  },
  {
    "id" : "72e84ad0-eab4-4c95-92b4-21c42c25984b",
    "prId" : 19611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19611#pullrequestreview-95663845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba271224-d647-49ed-8a86-f49cd0b65cf7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string",
        "createdAt" : "2018-02-11T17:57:12Z",
        "updatedAt" : "2018-02-16T23:34:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "118cd5d47ea025aad5e5759ea0a34cf86e0a390a",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +1093,1097 @@\ndef _combine_series_frame(self, other, func, fill_value=None, axis=None,\n                          level=None, try_cast=True):\n    \"\"\"\n    Apply binary operator `func` to self, other using alignment and fill"
  },
  {
    "id" : "0b73c062-8379-4f7b-b827-9d338704e7c0",
    "prId" : 19611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19611#pullrequestreview-97306930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d29f3b89-2ca8-4b30-95d3-ba613359dcaf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you might need to parameterize this on the work 'index' but not sure (IOW can it be a Series)? or maybe just remove the word index ?",
        "createdAt" : "2018-02-16T18:36:07Z",
        "updatedAt" : "2018-02-16T23:34:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "749880f7-7653-46e7-82aa-1187ef321cf6",
        "parentId" : "d29f3b89-2ca8-4b30-95d3-ba613359dcaf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ATM it is only used for indexes.  I could add an assertion that self is an Index so that we know to change it if/when the wording ceases to be accurate.",
        "createdAt" : "2018-02-16T20:28:16Z",
        "updatedAt" : "2018-02-16T23:34:20Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "118cd5d47ea025aad5e5759ea0a34cf86e0a390a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +110,114 @@    \"\"\"\n    def invalid_op(self, other=None):\n        raise TypeError(\"cannot perform {name} with this index type: \"\n                        \"{typ}\".format(name=name, typ=type(self).__name__))\n"
  },
  {
    "id" : "853ae894-b25e-43fa-a4bc-dff03fa9b1ee",
    "prId" : 19613,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19613#pullrequestreview-95584786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c008b872-310d-4b3f-86da-88e0133ba92b",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Do you know why we build the intermediate `list` here?",
        "createdAt" : "2018-02-09T19:44:32Z",
        "updatedAt" : "2018-02-10T18:46:08Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "5341e189-6107-42de-8d93-36e534a68721",
        "parentId" : "c008b872-310d-4b3f-86da-88e0133ba92b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No idea.  I can try removing it and see if that affects any tests.",
        "createdAt" : "2018-02-09T20:40:13Z",
        "updatedAt" : "2018-02-10T18:46:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "50c57efe-12bb-4503-a58b-9d8981304ebe",
        "parentId" : "c008b872-310d-4b3f-86da-88e0133ba92b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Looks like a complex-dtype test would be affected.",
        "createdAt" : "2018-02-09T22:38:41Z",
        "updatedAt" : "2018-02-10T18:46:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "221f8a63d74445a160e03c77c78e21374a8c3a61",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +458,462 @@        yrav = y.ravel()\n        mask = notna(xrav) & notna(yrav)\n        result[mask] = op(np.array(list(xrav[mask])),\n                          np.array(list(yrav[mask])))\n    else:"
  },
  {
    "id" : "5078736f-0f5d-4ddd-9911-8e06f93bc1d2",
    "prId" : 19649,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19649#pullrequestreview-95820014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "283b6600-c10a-447e-b3e6-ac94222687b9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are you adding support for this?",
        "createdAt" : "2018-02-12T11:22:45Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fda89ebe-34d2-4209-a60a-10f0838febb4",
        "parentId" : "283b6600-c10a-447e-b3e6-ac94222687b9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This changes zero logic, just puts a dict here instead of passing these directly in panel.",
        "createdAt" : "2018-02-12T15:06:19Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9355ce2c5e160a8e50021e40623828d2bdcac591",
    "line" : 357,
    "diffHunk" : "@@ -1,1 +1501,1505 @@                           bool_method=_arith_method_PANEL)\n\npanel_flex_funcs = dict(flex_arith_method=_flex_method_PANEL,\n                        flex_comp_method=_comp_method_PANEL)\n"
  },
  {
    "id" : "c3690b03-cfb2-48b9-b28c-fcb0a4216f3c",
    "prId" : 19649,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19649#pullrequestreview-95819971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5490370f-e549-4e44-b931-07f89b38781d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are these new?",
        "createdAt" : "2018-02-12T11:23:00Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "17a6531a-3736-4f8b-a2bc-82a96eda561a",
        "parentId" : "5490370f-e549-4e44-b931-07f89b38781d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This changes zero logic, just puts a dict here instead of passing these directly in sparse.array.",
        "createdAt" : "2018-02-12T15:06:11Z",
        "updatedAt" : "2018-02-19T17:07:30Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9355ce2c5e160a8e50021e40623828d2bdcac591",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +1586,1590 @@\n\nsparse_array_special_funcs = dict(arith_method=_arith_method_SPARSE_ARRAY,\n                                  comp_method=_arith_method_SPARSE_ARRAY,\n                                  bool_method=_arith_method_SPARSE_ARRAY)"
  },
  {
    "id" : "a6237a5a-801f-4100-843f-29efbbf288d3",
    "prId" : 19675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19675#pullrequestreview-97413384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1783e3dd-d530-43cc-b32f-4c5ad1e32beb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would remove the 'and any new elemnt needed for successful array alignment', this is redundant with your last sentence.",
        "createdAt" : "2018-02-15T12:21:21Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "597d2dd1-3a68-4683-87f2-0554bd70dd35",
        "parentId" : "1783e3dd-d530-43cc-b32f-4c5ad1e32beb",
        "authorId" : "63ee66b6-1766-42e5-a157-fd09e51eaf64",
        "body" : "I'm not sure which sentence are you referring to. The \"and any new element needed\" sentence refers to the alignment process. The last sentence (\"If data in both corresponding...\") only deals with a \"corner case\" of two NaNs, without any direct reference to the data alignment process.",
        "createdAt" : "2018-02-18T07:16:44Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "63ee66b6-1766-42e5-a157-fd09e51eaf64",
        "tags" : [
        ]
      },
      {
        "id" : "4a437a47-bd4c-4be8-a74c-fd3d6c2437dd",
        "parentId" : "1783e3dd-d530-43cc-b32f-4c5ad1e32beb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't use the word 'array' as these are not arrays. this is still not very clear.",
        "createdAt" : "2018-02-18T17:31:08Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5e088f18-442a-45c2-b317-e455c21a93ed",
        "parentId" : "1783e3dd-d530-43cc-b32f-4c5ad1e32beb",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I like this phrasing much better. Could you change \"new element\" to \"new missing values\"\r\n\r\nYou can remove the commas around the \"and any new element... \" clause.",
        "createdAt" : "2018-02-18T19:26:55Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "3192301df1957d1165ae25feaa51165e95aa0096",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +256,260 @@other : Series or scalar value\nfill_value : None or float value, default None (NaN)\n    Fill existing missing (NaN) values, and any new element needed for\n    successful Series alignment, with this value before computation.\n    If data in both corresponding Series locations is missing"
  },
  {
    "id" : "113854b8-752f-45b7-a59f-01b8d51a45f6",
    "prId" : 19675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19675#pullrequestreview-97413384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd68cbe1-8322-43ae-98e2-f7324667f0f2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "show a and b as well",
        "createdAt" : "2018-02-15T12:21:40Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2d03b98a-ad8e-419a-84bc-500462cec39f",
        "parentId" : "dd68cbe1-8322-43ae-98e2-f7324667f0f2",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "You need to have a line with just `>>> a` on it before showing the Series. Likewise for `b`.",
        "createdAt" : "2018-02-18T19:28:21Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "3192301df1957d1165ae25feaa51165e95aa0096",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +270,274 @@Examples\n--------\n>>> a = pd.Series([1, 1, 1, np.nan], index=['a', 'b', 'c', 'd'])\n>>> a\na    1.0"
  },
  {
    "id" : "5b923131-863c-4cd5-8e9b-f852d9009d35",
    "prId" : 19675,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19675#pullrequestreview-96827290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46f228b2-f6cf-4f3a-9ddb-3e46338bcfbe",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2018-02-15T12:21:49Z",
        "updatedAt" : "2018-02-21T06:55:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3192301df1957d1165ae25feaa51165e95aa0096",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +307,311 @@    For Series input, axis to match Series index on\nfill_value : None or float value, default None\n    Fill existing missing (NaN) values, and any new element needed for\n    successful DataFrame alignment, with this value before computation.\n    If data in both corresponding DataFrame locations is missing"
  },
  {
    "id" : "e5468f6a-9904-4e8a-989f-401c68d14f71",
    "prId" : 19744,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19744#pullrequestreview-98405395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c970781-60c3-4782-91ef-bf1d66a4494c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we need this as a standalone? (IOW can you replace the current usage with get_op_result_name)?",
        "createdAt" : "2018-02-20T01:54:07Z",
        "updatedAt" : "2018-02-20T16:09:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "19ab5f3a-66ca-4f93-b060-b57db12da03f",
        "parentId" : "7c970781-60c3-4782-91ef-bf1d66a4494c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if not can you doc-string this",
        "createdAt" : "2018-02-20T01:54:22Z",
        "updatedAt" : "2018-02-20T16:09:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a9b3f417-928b-4cbd-8842-13611f5ab231",
        "parentId" : "7c970781-60c3-4782-91ef-bf1d66a4494c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "A lot of the uses can be replaced without affecting any existing behavior.  I'll see if I can get them all in a way that doesn't necessitate new tests.  If not I'll kill it off in the next pass.",
        "createdAt" : "2018-02-20T03:25:20Z",
        "updatedAt" : "2018-02-20T16:09:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0acb0e09-eb0e-43fa-a18f-3a05ef4d959f",
        "parentId" : "7c970781-60c3-4782-91ef-bf1d66a4494c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yep, all non-test usages can be replaced.  I've done that and then also added a docstring.  Getting rid of it and updating the tests to test get_op_result_name directly will wait for another round with narrower scope.",
        "createdAt" : "2018-02-20T03:34:37Z",
        "updatedAt" : "2018-02-20T16:09:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e81a6929-1144-4262-b187-205539f65330",
        "parentId" : "7c970781-60c3-4782-91ef-bf1d66a4494c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok looks good. next pass let's try to remove this (I think you did, just need to transfer the tests)",
        "createdAt" : "2018-02-21T23:51:54Z",
        "updatedAt" : "2018-02-21T23:52:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "249b7ba8c4767c487abf73e2ab10cb6c85616b51",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +69,73 @@\n\ndef _maybe_match_name(a, b):\n    \"\"\"\n    Try to find a name to attach to the result of an operation between"
  },
  {
    "id" : "791d8bff-c990-46bf-92b9-6ad5077f58aa",
    "prId" : 19782,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19782#pullrequestreview-97932920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9a4d018-5ebe-45f7-a2ff-868a33d0d948",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this whole sparse interaction is pretty hacky (I know not addressing this now), but....",
        "createdAt" : "2018-02-20T11:13:43Z",
        "updatedAt" : "2018-02-20T11:14:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4b22c0ee-0b30-4d97-9749-0fdf0141a80d",
        "parentId" : "d9a4d018-5ebe-45f7-a2ff-868a33d0d948",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, there are a couple of improvements in store for the pass after next (which is just implementing the single-call `ops.add_whatever_methods(cls)`)",
        "createdAt" : "2018-02-20T18:15:39Z",
        "updatedAt" : "2018-02-20T18:15:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b81a5cf509845840fc3b8cbad7545ca377e5d76",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +1563,1567 @@                other = SparseArray(other, fill_value=self.fill_value,\n                                    dtype=dtype)\n            return _sparse_array_op(self, other, op, name, series=False)\n        elif is_scalar(other):\n            with np.errstate(all='ignore'):"
  },
  {
    "id" : "c0a5ee48-6e3a-4da4-9a79-8acabab1ae3c",
    "prId" : 19782,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19782#pullrequestreview-97881493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64dc801f-326f-47f1-9d15-940dd4066740",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we hold off adding till then",
        "createdAt" : "2018-02-20T11:14:00Z",
        "updatedAt" : "2018-02-20T11:14:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b1d8d67f-0a45-49b5-9c41-5dab4d796f8a",
        "parentId" : "64dc801f-326f-47f1-9d15-940dd4066740",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is necessary to get rid of the double-call in sparse.series.",
        "createdAt" : "2018-02-20T16:00:25Z",
        "updatedAt" : "2018-02-20T16:00:25Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b81a5cf509845840fc3b8cbad7545ca377e5d76",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +1584,1588 @@sparse_series_special_funcs = dict(arith_method=_arith_method_SPARSE_SERIES,\n                                   comp_method=_arith_method_SPARSE_SERIES,\n                                   bool_method=_bool_method_SERIES)\n# TODO: I don't think the functions defined by bool_method are tested"
  }
]