[
  {
    "id" : "47bef712-5a07-4a7b-a24c-54f5bdf05cc3",
    "prId" : 40772,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40772#pullrequestreview-632289582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4045eeb7-b925-4cb8-9cbb-3040b980f583",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "we should probably import from pandas._typing.\r\n\r\nalternatively we could have `no_default` as 'Any' in pandas/_libs/lib.pyi and not need to have any reference to it in the function signatures which are visible to end users and could be confusing/misleading. we should never pass `lib.no_default` explicitly unless passing it along to a lower level function",
        "createdAt" : "2021-04-09T10:56:51Z",
        "updatedAt" : "2021-04-09T10:56:52Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8656bd4f248c29410cb86e2df0a1c0c6577ae3fd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +8,12 @@\nfrom pandas._libs.lib import (\n    NoDefault,\n    no_default,\n)"
  },
  {
    "id" : "fef51c6a-c9ac-4950-abc8-e41755d47c8b",
    "prId" : 41980,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41980#pullrequestreview-686845414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b19ea5b7-a873-45b9-a16b-a229eb314704",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did this change any tests?",
        "createdAt" : "2021-06-16T02:13:22Z",
        "updatedAt" : "2021-06-16T02:13:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d28e1882-37f2-4db0-9b7d-bc14ba68044b",
        "parentId" : "b19ea5b7-a873-45b9-a16b-a229eb314704",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "I don't think so, right now. I think comparing dtype and inferred_type gives the same result for other dtypes that categoricals and numeric dtypes.\r\n\r\nAfter #41153 we'll have int32 etc. dtypes, so then we'll have cases where it'll fail without this change.",
        "createdAt" : "2021-06-17T21:38:37Z",
        "updatedAt" : "2021-06-17T21:38:37Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "c34ae66bada72aaa2c7d845e9116ae848ce8c70b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +318,322 @@\n        # Skip exact dtype checking when `check_categorical` is False\n        if is_categorical_dtype(left.dtype) and is_categorical_dtype(right.dtype):\n            if check_categorical:\n                assert_attr_equal(\"dtype\", left, right, obj=obj)"
  }
]