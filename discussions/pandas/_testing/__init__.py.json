[
  {
    "id" : "aeffcad6-f0ab-415e-986a-782bcfad7aa1",
    "prId" : 38689,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38689#pullrequestreview-558724980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10fdcd1d-87a5-4952-a8df-e452bcd01c6f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "would prob move everything else out as well to another module",
        "createdAt" : "2020-12-24T23:52:47Z",
        "updatedAt" : "2020-12-27T23:00:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8e23af9a65293f28d39d4949f15711692270e15",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +293,297 @@\n    with compress_method(path, mode=mode) as f:\n        getattr(f, method)(*args)\n\n"
  },
  {
    "id" : "17416a3a-9af9-4e46-b37e-c70cb86599d0",
    "prId" : 38961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38961#pullrequestreview-561436961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d9209fd-1801-4b64-ad30-20c66a9ed028",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "umm why are these ignored?",
        "createdAt" : "2021-01-05T00:18:11Z",
        "updatedAt" : "2021-01-05T00:18:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "17f86c19d7c071f3e7dd12eedf7612402d412be7",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +40,44 @@    bdate_range,\n)\nfrom pandas._testing._io import (  # noqa:F401\n    close,\n    network,"
  },
  {
    "id" : "97ac0542-10b7-40b6-a181-6f76a2bcb339",
    "prId" : 39753,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39753#pullrequestreview-588860732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a02c22c-a846-4e69-bf31-ccaca210c8d2",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jbrockmendel by making this a (2, x) DataFrame instead of a (1, x) shaped DataFrame, it avoids some special cases in the tests where we now often have \"if box is DataFrame -> don't raise a PerformanceWarning\" (which is quite confusing, because it has nothing to do with it being a DataFrame, but rather with the column arrays being length 1)",
        "createdAt" : "2021-02-11T12:31:11Z",
        "updatedAt" : "2021-02-15T19:14:08Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "053de486-b9b6-42eb-94d0-3581640d3c09",
        "parentId" : "5a02c22c-a846-4e69-bf31-ccaca210c8d2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "seems Mostly Harmless i guess",
        "createdAt" : "2021-02-11T18:26:26Z",
        "updatedAt" : "2021-02-15T19:14:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbffcadf902af751cffcf13c51a784e992125acf",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +211,215 @@            #  single-row special cases in datetime arithmetic\n            expected = expected.T\n            expected = pd.concat([expected] * 2, ignore_index=True)\n    elif box_cls is PeriodArray:\n        # the PeriodArray constructor is not as flexible as period_array"
  },
  {
    "id" : "faaa4bb3-8025-46e0-9ce2-80d73c6f0048",
    "prId" : 41615,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41615#pullrequestreview-666174416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb4f9281-8435-498f-a4eb-6671e0c4f993",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "In #41153 we'll only need to change this to `return NumericIndex(values, dtype=dtype, name=name)` after this.",
        "createdAt" : "2021-05-22T11:23:11Z",
        "updatedAt" : "2021-05-22T11:27:42Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "02f54b2439bb94c533565d9ddd310c8e5a38877e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +315,319 @@        raise NotImplementedError(f\"wrong dtype {dtype}\")\n\n    return Index(values, dtype=dtype, name=name)\n\n"
  },
  {
    "id" : "e110a2a2-9776-4870-b8c3-4784d5bf3705",
    "prId" : 41615,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41615#pullrequestreview-669863286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "do we expect non-numpy dtypes here?",
        "createdAt" : "2021-05-22T23:48:23Z",
        "updatedAt" : "2021-05-22T23:48:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f79fd930-3859-4389-ab62-74e2055b4d7d",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Iâ€™ve added an assert for that here.",
        "createdAt" : "2021-05-23T08:54:33Z",
        "updatedAt" : "2021-05-23T08:54:34Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "caa37853-ae8a-4c75-ac08-5151d3ecef9b",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "my idea was to just use `dtype = np.dtype(dtype)`",
        "createdAt" : "2021-05-23T18:18:07Z",
        "updatedAt" : "2021-05-23T18:18:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "bbef3e16-2b68-417c-a9e2-abc10c56035b",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "```python\r\n>>> np.dtype(\"Int8\")  # capital Int\r\nDeprecationWarning: Numeric-style type codes are deprecated and will result in an error in the future.\r\n  np.dtype(\"Int8\")\r\ndtype('int8')\r\n```\r\n\r\nSo I think we should hold on this until the above raises IMO.",
        "createdAt" : "2021-05-26T16:53:16Z",
        "updatedAt" : "2021-05-26T16:53:16Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "277c510e-ba64-40f6-bbe4-236eeaba0dbb",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this will not ever raise as these are pandas dtypes ",
        "createdAt" : "2021-05-27T02:53:21Z",
        "updatedAt" : "2021-05-27T02:53:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "74ae59a8-8e1c-4db7-93c9-4ed612586049",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jbrockmendel raises a valid point; if u r expecting only numpy dtypes then why are pandas dtypes passed?",
        "createdAt" : "2021-05-27T02:54:34Z",
        "updatedAt" : "2021-05-27T02:54:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b440ff2c-ff75-475b-b35f-26ac72c4d675",
        "parentId" : "1bc5136f-59e2-44c7-ba68-add7bdb85cac",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "> this will not ever raise as these are pandas dtypes\r\n\r\n`assert isinstance(dtype, np.dtype)` on line 304 ensures that it will raise if it is a pandas dtype.\r\n\r\n>  if u r expecting only numpy dtypes then why are pandas dtypes passed?\r\n\r\nI'm not intending to pass pandas dtypes here, but I'm using `pandas_dtype` to avoid an ambiguity: The string `\"Int64\"` in Pandas means `Int64Dtype`, but in numpy it means `np.int64`. So by using `dtype = pandas_dtype(dtype)`, then an `assert(dtype, np.dtype)`, we ensure the correct dtype..\r\n",
        "createdAt" : "2021-05-27T08:02:36Z",
        "updatedAt" : "2021-05-27T08:02:57Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "02f54b2439bb94c533565d9ddd310c8e5a38877e",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +301,305 @@\ndef makeNumericIndex(k=10, name=None, *, dtype):\n    dtype = pandas_dtype(dtype)\n    assert isinstance(dtype, np.dtype)\n"
  }
]