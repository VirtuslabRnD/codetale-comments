[
  {
    "id" : "c1c00d59-5d6f-4468-b324-13dd3428d74f",
    "prId" : 21224,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21224#pullrequestreview-140321785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b84589dd-7b5b-4d98-9eee-aabb6be0d587",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe also add axis_frame just for consistency? (its exactly equal to axis)",
        "createdAt" : "2018-07-25T12:52:01Z",
        "updatedAt" : "2018-07-26T21:03:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "92f54d03-2358-4951-ac22-06cf3b11f13e",
        "parentId" : "b84589dd-7b5b-4d98-9eee-aabb6be0d587",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "sure, ok",
        "createdAt" : "2018-07-25T13:52:54Z",
        "updatedAt" : "2018-07-26T21:03:35Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "39ced290b257435e97c74dc95aff2391fdf7fd02",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +63,67 @@@pytest.fixture(params=[0, 1, 'index', 'columns'],\n                ids=lambda x: \"axis {!r}\".format(x))\ndef axis(request):\n    \"\"\"\n     Fixture for returning the axis numbers of a DataFrame."
  },
  {
    "id" : "eb091aaf-45c0-47a1-ae9d-0e2d590bc699",
    "prId" : 21899,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21899#pullrequestreview-137248153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4df57e3e-e362-4418-bbf1-f32f414ec53e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@gfyoung this is ok? it follows our existing pattern?",
        "createdAt" : "2018-07-14T20:34:35Z",
        "updatedAt" : "2018-07-14T20:46:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c0421c73-28ef-46f6-b64b-6d8d15362c30",
        "parentId" : "4df57e3e-e362-4418-bbf1-f32f414ec53e",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback @gfyoung I only added `COMPLEX_DTYPES`, `STRING_DTYPES` (which was just giving names to existing collections) and `ALL_NUMPY_DTYPES` - the rest was just reordering.",
        "createdAt" : "2018-07-14T20:43:33Z",
        "updatedAt" : "2018-07-14T20:46:44Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64004039d9c358684f455479ab7c7d75e904a11",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +250,254 @@\nUNSIGNED_INT_DTYPES = [\"uint8\", \"uint16\", \"uint32\", \"uint64\"]\nSIGNED_INT_DTYPES = [int, \"int8\", \"int16\", \"int32\", \"int64\"]\nALL_INT_DTYPES = UNSIGNED_INT_DTYPES + SIGNED_INT_DTYPES\n"
  },
  {
    "id" : "7bb3c25c-2adb-4581-b540-7a5b128ea5e4",
    "prId" : 22280,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22280#pullrequestreview-147879646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d61adef2-47f5-465a-a4e9-992863cfb199",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This will put a hard dependency on hypothesis for testing. Are we OK with that? After some thought, I think it's fine. It's a well-maintained project, and working around it in the test suite seems silly.\r\n\r\n*If* we're ok with that, then @Zac-HD could you update\r\n\r\n- pandas/util/_tester.py to have a nice message if either pytest or hypothesis is missing?\r\n- pandas/ci/check_imports.py to ensure hypothesis is not imported with the main `import pandas`?\r\n- doc/source/whatsnew/0.24.0.txt with a small subsection saying hypothesis is required for running the tests (with a link to the hypothesis docs :)",
        "createdAt" : "2018-08-18T13:55:21Z",
        "updatedAt" : "2018-08-24T20:35:37Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3a11a85a-d66d-42c6-a3be-5d0fa10bfad5",
        "parentId" : "d61adef2-47f5-465a-a4e9-992863cfb199",
        "authorId" : "5ca0e966-b0a3-4384-b202-a62f29c82e87",
        "body" : "My read of the reviews so far is that @jreback was in favor of a mandatory dependency (also my recommendation), and you're now in favor too.\r\n\r\nI've therefore made the relevant changes and it's all ready to go :tada: \r\n\r\n(though one build on Travis has errored out, the tests passed until the timeout)",
        "createdAt" : "2018-08-19T12:58:11Z",
        "updatedAt" : "2018-08-24T20:35:37Z",
        "lastEditedBy" : "5ca0e966-b0a3-4384-b202-a62f29c82e87",
        "tags" : [
        ]
      },
      {
        "id" : "8456e42d-54a1-4146-9288-1ae940e99b1c",
        "parentId" : "d61adef2-47f5-465a-a4e9-992863cfb199",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so, I still think we need to a) remove hypothesis from 1 build (the same one we have removed ``moto`` from is good). and use ``pyimportor.skip('hypthoesis')``. The reason is not for our CI really, rather so when a user does ``pd.test()`` is doesn't fail, rather it will just skip those tests.",
        "createdAt" : "2018-08-20T22:44:45Z",
        "updatedAt" : "2018-08-24T20:35:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "25bc6f5e-ef5a-4077-b0cb-f3d4d2f8889c",
        "parentId" : "d61adef2-47f5-465a-a4e9-992863cfb199",
        "authorId" : "5ca0e966-b0a3-4384-b202-a62f29c82e87",
        "body" : "@jreback there are two problems with making Hypothesis optional for `pd.test()`:\r\n\r\n1. It makes adding further Hypothesis tests - eg for serialisation round-trips, timedeltas, or reshaping logic - much harder.  They'd have to be in separate files, guard any global setup and configuration, handle import-or-skips, etc.\r\n2. It forces us to choose to either duplicate tests, or skip them at runtime.\r\n\r\nThat doesn't make it completely unreasonable, I'd prefer to just have the dependency - and I've been using Pandas for much longer than Hypothesis!\r\n\r\nTLDR - what's wrong with putting Hypothesis in the same category as pytest?",
        "createdAt" : "2018-08-21T01:38:28Z",
        "updatedAt" : "2018-08-24T20:35:37Z",
        "lastEditedBy" : "5ca0e966-b0a3-4384-b202-a62f29c82e87",
        "tags" : [
        ]
      },
      {
        "id" : "56572473-628c-408a-806a-2a8ae2a96799",
        "parentId" : "d61adef2-47f5-465a-a4e9-992863cfb199",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think moto is a bit different, since it's relatively unimportant to mainline pandas, and so is easy to work around.\r\n\r\nIMO, hypothesis should be treated the same as pytest.",
        "createdAt" : "2018-08-21T01:42:36Z",
        "updatedAt" : "2018-08-24T20:35:37Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "779b49ab95268a1383ea6160f05ba5bb6bbb3c57",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +456,460 @@# Global setup for tests using Hypothesis\n\nfrom hypothesis import strategies as st\n\n# Registering these strategies makes them globally available via st.from_type,"
  },
  {
    "id" : "eccba0a9-8590-4217-a8ac-6bacf38ed9e9",
    "prId" : 22296,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22296#pullrequestreview-153321408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b60e953-d626-498e-b2e9-0f396e3eec17",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can't you use the existing nulls_fixture? (ahh or that has the float NaN which *are* the same as np.nan)?",
        "createdAt" : "2018-09-07T12:10:25Z",
        "updatedAt" : "2018-09-17T19:01:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bd452e73-47ba-423e-b6df-dd6fcf9d59dd",
        "parentId" : "7b60e953-d626-498e-b2e9-0f396e3eec17",
        "authorId" : "6eb079e0-c034-4a01-ba36-2456ab252d59",
        "body" : "@jreback I could have used `nulls_fixture`, but then as you already have pointed out, I would have to filter out `[np.nan, float('nan')]` & Co. (which are not list of unique elements)  at several places in tests, so I assumed adding `unique_nulls_fixture` would be cleaner.",
        "createdAt" : "2018-09-07T12:20:57Z",
        "updatedAt" : "2018-09-17T19:01:23Z",
        "lastEditedBy" : "6eb079e0-c034-4a01-ba36-2456ab252d59",
        "tags" : [
        ]
      },
      {
        "id" : "dade5047-91d9-4339-b061-2d14fb83584b",
        "parentId" : "7b60e953-d626-498e-b2e9-0f396e3eec17",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes this is ok (i see how you are using it below).",
        "createdAt" : "2018-09-07T12:30:56Z",
        "updatedAt" : "2018-09-17T19:01:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "356b8aab754c32e469508e23c447d8c650938843",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +289,293 @@@pytest.fixture(params=[None, np.nan, pd.NaT])\ndef unique_nulls_fixture(request):\n    \"\"\"\n    Fixture for each null type in pandas, each null type exactly once\n    \"\"\""
  },
  {
    "id" : "ba73753a-9f82-42df-8e6b-26544297f361",
    "prId" : 22597,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22597#pullrequestreview-153302732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22d238fe-e306-4283-8d83-e87aa612eec3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you just import hypthesis and reference ``hypothesis.settings`` to avoid polluting the namespace.",
        "createdAt" : "2018-09-07T11:24:26Z",
        "updatedAt" : "2018-09-07T23:17:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5376039cc068b5b1a404e9b33028029a35cebfe7",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +9,13 @@from pandas.compat import PY3\nimport pandas.util._test_decorators as td\n\nimport hypothesis\nhypothesis.settings.suppress_health_check = (hypothesis.HealthCheck.too_slow,)"
  },
  {
    "id" : "c8c82420-284b-41e6-a5b7-ed430fc52614",
    "prId" : 23807,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23807#pullrequestreview-177402664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6307503-2b2b-45f3-8200-29ca892b1609",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Brainstorm:\r\n\r\n- non-round numbers for `FixedOffset`\r\n- we have a small number of tests with tzinfos from `psycopg2.tz` and `matplotlib` (not sure where in the matplotlib namespace)\r\n- random subset of `pytz.all_timezones` (592 of them)\r\n- equivalent from `dateutil.tz` (not sure off the top of my head how to access that, but if we figure it out I'll make a PR there)",
        "createdAt" : "2018-11-20T15:02:57Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ded9d658-6a59-446a-b6e2-4e0bbed858c9",
        "parentId" : "c6307503-2b2b-45f3-8200-29ca892b1609",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how much additional time do the tests take with these added fixtures? how many more tests",
        "createdAt" : "2018-11-20T15:46:12Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0eae06c7-4e6d-4bc3-b54e-0a813d800064",
        "parentId" : "c6307503-2b2b-45f3-8200-29ca892b1609",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "- Sure we can add one non-round FixedOffset\r\n- matplotlib UTC is just `datetime.timezones.utc`: https://github.com/matplotlib/matplotlib/blob/9e8be5b0dc0a03f569d7a248f67ef136520adbbb/lib/matplotlib/dates.py#L172\r\n- IIRC we just convert `psycopg2.tz` timezones (from sql functions) directly to UTC, and we don't directly advertise accepting them in other functions. But I guess we do have code that supposedly handles this: https://github.com/pandas-dev/pandas/blob/3702de2545f24e1999cf574bc8dd115460e2db90/pandas/_libs/tslibs/timezones.pyx#L218\r\n- As for more pytz and dateutil timezones, I'd be most interested in testing non-conventional timezones, e.g. odd time shifting, but I feel its not necessary to test all of them (baring testing all of them doesn't take that much additional time)",
        "createdAt" : "2018-11-21T18:50:42Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "89793b74-066a-433e-82de-477eacfbbab4",
        "parentId" : "c6307503-2b2b-45f3-8200-29ca892b1609",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "We can add these in a follow up and further discuss.",
        "createdAt" : "2018-11-21T19:38:12Z",
        "updatedAt" : "2018-11-22T02:48:40Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "15ba5fb8bb462672d2153e2b4e0db4146a2a58d9",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +356,360 @@TIMEZONES = [None, 'UTC', 'US/Eastern', 'Asia/Tokyo', 'dateutil/US/Pacific',\n             'dateutil/Asia/Singapore', tzutc(), tzlocal(), FixedOffset(300),\n             FixedOffset(0), FixedOffset(-300)]\n\n"
  },
  {
    "id" : "3f6ce03e-216a-439d-b58e-209230a5d574",
    "prId" : 26596,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26596#pullrequestreview-244579879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pls don’t merge things until i look \r\n\r\nthis is duplicating too much code here ",
        "createdAt" : "2019-06-01T00:41:20Z",
        "updatedAt" : "2019-06-01T00:41:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "136238af-02ea-4b2c-8f33-4eb528230f0b",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what is the point of of these extras?",
        "createdAt" : "2019-06-01T00:42:14Z",
        "updatedAt" : "2019-06-01T00:42:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0265a7ba-4cca-4d6f-ab08-967c85447bd1",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jreback : This is carried over from #25637 (and I think a lot of other conversations in other PR's), and the justification was given as a link in the PR description.  I leave it here below for convenience:\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/25637#discussion_r289441644",
        "createdAt" : "2019-06-01T01:10:28Z",
        "updatedAt" : "2019-06-01T01:15:00Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "d564957e-13be-4ec1-9756-baf15d97aecd",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe so but that other has not been reviewed at all",
        "createdAt" : "2019-06-01T01:17:44Z",
        "updatedAt" : "2019-06-01T01:17:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4ae9dd80-9808-4b92-992d-cab956f9fe1b",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is not done in a nice way\r\n\r\nthese should simply be tuples of timezone and id and unpacked when needed\r\n\r\ncan u do a PR to fix ",
        "createdAt" : "2019-06-01T01:18:47Z",
        "updatedAt" : "2019-06-01T01:18:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6d8e99ce-ec68-4801-8ae6-8880fb06fc87",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and to be honest these may not even be needed to do it like this it’s a lot more verbose ",
        "createdAt" : "2019-06-01T01:19:34Z",
        "updatedAt" : "2019-06-01T01:19:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "43f6fa7e-3c4c-42ea-90f0-7a588976dd14",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "The unpacking option seems to overcomplicate as you mentioned.  Alternatively, we can just do a list comprehension and pull the `__repr__` (or `__str__`) on the elements of `TIMEZONES`.  That would still keep the IDs but be less \"duplicative\".",
        "createdAt" : "2019-06-01T01:27:46Z",
        "updatedAt" : "2019-06-01T01:28:04Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "c5aef3b4-b751-45ac-9c66-938b6c9cbc72",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes i think a nice function would be fine",
        "createdAt" : "2019-06-01T01:39:24Z",
        "updatedAt" : "2019-06-01T01:39:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6cfa1d5f-85d8-495a-a227-c973f5996cf9",
        "parentId" : "8d526272-07e8-49ce-a22d-9308732114d8",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "> @jreback: this is not done in a nice way\r\n\r\nI disagree. Compare the [outputs](https://github.com/pandas-dev/pandas/pull/26600#issuecomment-497927487) of @gfyoung's PR with the state I introduced.\r\n\r\nI made the IDs explicit precisely because the strs/reprs yields a useless, ugly mix of stuff. Saving these 4 lines is not worth the added hassle when actually debugging tz-tests with `pytest -v`.",
        "createdAt" : "2019-06-01T09:11:01Z",
        "updatedAt" : "2019-06-01T09:11:01Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "76853702cef6f424ce2019095cdc6f73a3ebc4e5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +377,381 @@             timezone(timedelta(hours=1)),\n             timezone(timedelta(hours=-1), name='foo')]\nTIMEZONE_IDS = ['None', 'UTC', 'US/Eastern', 'Asia/Tokyp',\n                'dateutil/US/Pacific', 'dateutil/Asia/Singapore',\n                'dateutil.tz.tzutz()', 'dateutil.tz.tzlocal()',"
  },
  {
    "id" : "a3311021-229d-4ae7-8e96-c8bec484115b",
    "prId" : 27988,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27988#pullrequestreview-279280768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac95f12e-55d9-456a-9c53-a7496a8726f8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think need a blank line separating short description from long description here",
        "createdAt" : "2019-08-24T08:11:13Z",
        "updatedAt" : "2019-08-24T08:12:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "99b58bd535a339ca70586cb0d3da521ed7dfc8c9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +125,129 @@def observed(request):\n    \"\"\"\n    Pass in the observed keyword to groupby for [True, False]\n    This indicates whether categoricals should return values for\n    values which are not in the grouper [False / None], or only values which"
  },
  {
    "id" : "4e51bb5d-21c9-4d3e-b8b7-9fe2de5733e2",
    "prId" : 27988,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27988#pullrequestreview-279280768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db8b1af9-49a8-4b99-a3d7-86b7549054ed",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Short description should be one line",
        "createdAt" : "2019-08-24T08:11:26Z",
        "updatedAt" : "2019-08-24T08:12:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "99b58bd535a339ca70586cb0d3da521ed7dfc8c9",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +240,244 @@def _get_cython_table_params(ndframe, func_names_and_expected):\n    \"\"\"\n    Combine frame, functions from SelectionMixin._cython_table\n    keys and expected result.\n"
  },
  {
    "id" : "db96e8ac-61af-4f3d-a7f0-01f3d42a47ad",
    "prId" : 28945,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28945#pullrequestreview-306524494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0ac7cdc-58e5-4f4f-bd65-7829b67c7afa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "any_Int_dtype would be fine.",
        "createdAt" : "2019-10-22T12:25:57Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "53a89d3a-3b59-45c6-b165-6c1c7b48c3db",
        "parentId" : "a0ac7cdc-58e5-4f4f-bd65-7829b67c7afa",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Maybe `any_nullable_int_dtype` to avoid caps and be a bit more explicit?",
        "createdAt" : "2019-10-22T22:46:06Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "65081bf2-5620-4694-94c8-a1ccbf6e2ec6",
        "parentId" : "a0ac7cdc-58e5-4f4f-bd65-7829b67c7afa",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes that's fine",
        "createdAt" : "2019-10-24T12:13:01Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bd5381af39dbb9f57eabde1091945811e859509",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +655,659 @@\n\n@pytest.fixture(params=ALL_EA_INT_DTYPES)\ndef any_nullable_int_dtype(request):\n    \"\"\""
  },
  {
    "id" : "ae37df15-ae78-4dc4-b581-18c58b4c08f4",
    "prId" : 30147,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30147#pullrequestreview-347902277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d08fa8b6-201c-4c62-ad36-a7195dc95c45",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Moved from `pandas/tests/series/conftest.py`",
        "createdAt" : "2020-01-24T11:44:09Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "87247a5d64111b0dd8baf3a792470827758f5e61",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +870,874 @@\n@pytest.fixture\ndef datetime_series():\n    \"\"\"\n    Fixture for Series of floats with DatetimeIndex"
  },
  {
    "id" : "62d3905a-9c5a-4f8e-8162-712206b16500",
    "prId" : 31191,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31191#pullrequestreview-357151216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18643275-4d20-4586-96ab-3400fce66c0e",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "empty_series_i8?",
        "createdAt" : "2020-02-12T02:22:40Z",
        "updatedAt" : "2020-03-18T23:33:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4e6509f6-baaf-441c-be4b-700eda7289c2",
        "parentId" : "18643275-4d20-4586-96ab-3400fce66c0e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "woops, empty_series_f8",
        "createdAt" : "2020-02-12T02:22:50Z",
        "updatedAt" : "2020-03-18T23:33:07Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc2d93e383b5c5e8bcdc5be5ee5137b11178b037",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +880,884 @@\n@pytest.fixture\ndef empty_series():\n    return pd.Series([], index=[], dtype=np.float64)\n"
  },
  {
    "id" : "85d624b9-7545-4212-a03a-aa5cae8c5bd8",
    "prId" : 31701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31701#pullrequestreview-359291503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdda7311-254a-49a7-8626-d1d04a09fc37",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can we re-use somthing like tm.all_index_generator?",
        "createdAt" : "2020-02-12T21:49:51Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "30a2dda8-054e-4746-a7bc-9f3813c9f393",
        "parentId" : "fdda7311-254a-49a7-8626-d1d04a09fc37",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Good point. I wouldn't want to extend the scope of this PR to refactor the indices fixture though. I just moved its location as jreback suggested.",
        "createdAt" : "2020-02-12T22:50:02Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      },
      {
        "id" : "36b83114-0a72-4125-9071-a36f487ee563",
        "parentId" : "fdda7311-254a-49a7-8626-d1d04a09fc37",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great, yeah doing this is steps is much easier.",
        "createdAt" : "2020-02-15T01:09:05Z",
        "updatedAt" : "2020-02-15T01:12:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865e9056d19834be404283f8f539111db3f6e9e",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +974,978 @@    \"tuples\": MultiIndex.from_tuples(zip([\"foo\", \"bar\", \"baz\"], [1, 2, 3])),\n    \"repeats\": Index([0, 0, 1, 1, 2, 2]),\n}\n\n"
  },
  {
    "id" : "7c71b7a1-4b85-4c59-8b43-a1b6cbb72e59",
    "prId" : 31701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31701#pullrequestreview-357841639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac713602-2e4a-4f5e-b3fd-4b010613e58b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this needs to be `sorted(indices_dict.keys())` or else running the test suite will break with multiprocessing",
        "createdAt" : "2020-02-12T21:50:35Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3e6b7e69-87bf-4bb1-9321-6d7c45c33caf",
        "parentId" : "ac713602-2e4a-4f5e-b3fd-4b010613e58b",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Dictionaries are sorted since 3.6, so the order should already be deterministic (all tests on CI succeeded every time, even after pushing multiple times)",
        "createdAt" : "2020-02-12T22:38:27Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      },
      {
        "id" : "1cb424f3-3ad0-4336-a69c-4712d9b5b31b",
        "parentId" : "ac713602-2e4a-4f5e-b3fd-4b010613e58b",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "The `indices` fixture is part of the test suite for quite some time already. I just moved the location as suggested by jreback. I really think this is fine.",
        "createdAt" : "2020-02-12T22:40:18Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865e9056d19834be404283f8f539111db3f6e9e",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +977,981 @@\n\n@pytest.fixture(params=indices_dict.keys())\ndef indices(request):\n    # copy to avoid mutation, e.g. setting .name"
  },
  {
    "id" : "5bd0107a-970c-4d42-80d8-03c2474695c4",
    "prId" : 31701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31701#pullrequestreview-357814199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "223b3d3c-c7bf-4167-a702-55faa89c2dd0",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "same as above re sorting",
        "createdAt" : "2020-02-12T21:51:33Z",
        "updatedAt" : "2020-02-12T23:44:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865e9056d19834be404283f8f539111db3f6e9e",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +1014,1018 @@\n\n@pytest.fixture(params=_index_or_series_objs.keys())\ndef index_or_series_obj(request):\n    \"\"\""
  },
  {
    "id" : "6d9e5221-0e22-44c7-a7bb-27fec55ed6ae",
    "prId" : 31701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31701#pullrequestreview-359291503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42ff61f8-4f66-4146-94fb-ea3a2608188f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "next time around can you give these doc-strings",
        "createdAt" : "2020-02-15T01:09:43Z",
        "updatedAt" : "2020-02-15T01:12:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865e9056d19834be404283f8f539111db3f6e9e",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +979,983 @@@pytest.fixture(params=indices_dict.keys())\ndef indices(request):\n    # copy to avoid mutation, e.g. setting .name\n    return indices_dict[request.param].copy()\n"
  },
  {
    "id" : "ba54f344-624a-40e1-b81b-e20473cee668",
    "prId" : 31701,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31701#pullrequestreview-359291503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfd5d767-4c21-4cdb-b80d-cf2571ccb1a2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do 'sections' here e.g. some text markers so reading the file is easy (@jbrockmendel has added these in several files); this can be a followup PR.",
        "createdAt" : "2020-02-15T01:10:51Z",
        "updatedAt" : "2020-02-15T01:12:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e865e9056d19834be404283f8f539111db3f6e9e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +956,960 @@    return TestNonDictMapping\n\n\nindices_dict = {\n    \"unicode\": tm.makeUnicodeIndex(100),"
  },
  {
    "id" : "412a03f6-d1f8-4d9a-9912-e49e3781d1f6",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-362777211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8f738b2-ec7c-41b7-9862-7ac7e1cd6a65",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this is great, thanks",
        "createdAt" : "2020-02-21T17:00:49Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +987,991 @@        - no values near implementation bounds\n        - ...\n    \"\"\"\n    # copy to avoid mutation, e.g. setting .name\n    return indices_dict[request.param].copy()"
  },
  {
    "id" : "26519d9c-792a-4b32-9714-65b064810efb",
    "prId" : 32789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32789#pullrequestreview-376426468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d977122-75e2-4011-aec4-7c687fcaa8f1",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "renamed from `_gen_mi` and added docstring",
        "createdAt" : "2020-03-17T21:42:45Z",
        "updatedAt" : "2020-03-20T06:30:34Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7dbba9f8a715c087a7cc543522d953b81012e67",
    "line" : 467,
    "diffHunk" : "@@ -1,1 +348,352 @@\n\ndef _create_multiindex():\n    \"\"\"\n    MultiIndex used to test the general functionality of this object"
  },
  {
    "id" : "5f7fcebd-5432-4b6d-a574-ef4702f15a3e",
    "prId" : 32964,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32964#pullrequestreview-380670250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9ee6bb2-f774-4fb7-b943-ac287bb794d6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is a non-obvious name, call this index2_fixture",
        "createdAt" : "2020-03-24T18:31:55Z",
        "updatedAt" : "2020-03-25T18:38:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "566c60bc-bb27-45ca-aa82-084cfc93709b",
        "parentId" : "d9ee6bb2-f774-4fb7-b943-ac287bb794d6",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Went with `index_fixture2` to be consistent with [nulls_fixture2](https://github.com/pandas-dev/pandas/blob/master/pandas/conftest.py#L267) and [unique_nulls_fixture2](https://github.com/pandas-dev/pandas/blob/master/pandas/conftest.py#L279)",
        "createdAt" : "2020-03-24T20:27:13Z",
        "updatedAt" : "2020-03-25T18:38:13Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef43821ece0f24b9e9a1228d8c0535e2839e5660",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +417,421 @@\n\n# Needed to generate cartesian product of indices\nindex_fixture2 = indices\n"
  },
  {
    "id" : "27837d34-9b3f-4315-a1d0-37b6e8fdcf55",
    "prId" : 33148,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33148#pullrequestreview-384228561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5936b746-2888-402d-a9fe-724db433e579",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This is scattered across a few modules right now that I didn't touch here; can use further here or in a follow up",
        "createdAt" : "2020-03-30T17:57:05Z",
        "updatedAt" : "2020-03-30T17:58:42Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "331db0fa-1f0a-4f71-9e8d-671da1211453",
        "parentId" : "5936b746-2888-402d-a9fe-724db433e579",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "followup is fine.",
        "createdAt" : "2020-03-30T21:03:40Z",
        "updatedAt" : "2020-03-30T21:03:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d4af6e3a20573c884be9d22ddbeae0b79eaaeb8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +523,527 @@# ----------------------------------------------------------------\n@pytest.fixture\ndef empty_frame():\n    return DataFrame()\n"
  },
  {
    "id" : "952169ec-ac3c-47aa-864f-bd3ca4903308",
    "prId" : 33163,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33163#pullrequestreview-384745544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5f61b16-a6f3-459d-a32e-e2b03b48f8ed",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "doesn't this duplicate some existing fixtures?",
        "createdAt" : "2020-03-31T13:43:16Z",
        "updatedAt" : "2020-03-31T13:43:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8e0cee75e44eb7ac176f4d50ebbbaf1ed03a2d8",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +562,566 @@\n    Columns are ['A', 'B', 'C', 'D']\n\n                       A         B         C         D\n    2000-01-03 -1.122153  0.468535  0.122226  1.693711"
  },
  {
    "id" : "41d50d00-d3bc-471d-a27a-04d5eb2f1ae9",
    "prId" : 33163,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33163#pullrequestreview-384745544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39dffa90-b3b2-404a-b3c1-35c705879632",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this duplicate?",
        "createdAt" : "2020-03-31T13:43:26Z",
        "updatedAt" : "2020-03-31T13:43:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8e0cee75e44eb7ac176f4d50ebbbaf1ed03a2d8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +529,533 @@@pytest.fixture\ndef int_frame():\n    \"\"\"\n    Fixture for DataFrame of ints with index of unique strings\n"
  },
  {
    "id" : "0c5506aa-5364-4484-8dee-1ba9347afffd",
    "prId" : 36303,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36303#pullrequestreview-487303804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19111de4-48cb-4b38-9b7c-177c1a6aa159",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great!",
        "createdAt" : "2020-09-13T12:43:29Z",
        "updatedAt" : "2020-09-13T12:44:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6ad079150d9a61441cf3085456be6e226089505",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1056,1060 @@\n\n@pytest.fixture(params=tm.SIGNED_EA_INT_DTYPES)\ndef any_signed_nullable_int_dtype(request):\n    \"\"\""
  },
  {
    "id" : "4e35520d-e78f-4cc4-b0e5-d613790abba4",
    "prId" : 37676,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37676#pullrequestreview-530841021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e432c5b9-0b26-4f3e-a74f-d72fb1199614",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great",
        "createdAt" : "2020-11-15T22:14:55Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb5506035f3f6f8215bed5810052326169829f9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1153,1157 @@    * 'Int8'\n    * 'UInt16'\n    * 'Int16'\n    * 'UInt32'\n    * 'Int32'"
  },
  {
    "id" : "13c37c9a-2973-4c64-9fbd-ea3af4599f87",
    "prId" : 37989,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37989#pullrequestreview-537493295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f9cd72a-a0cc-4937-9f06-4ecc79a42f99",
        "parentId" : null,
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "xref #38032 for a weird bug when the timedelta is in `ns`",
        "createdAt" : "2020-11-24T04:28:51Z",
        "updatedAt" : "2020-11-24T05:04:37Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "618f4ec5-4e4b-4077-9044-801f291752ca",
        "parentId" : "2f9cd72a-a0cc-4937-9f06-4ecc79a42f99",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great thanks. testing catching edge cases, who would think!",
        "createdAt" : "2020-11-24T13:32:33Z",
        "updatedAt" : "2020-11-24T13:32:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc7d405424d87cbda836dd61620ff7e4a5a804b6",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +703,707 @@            DatetimeTZDtype(tz=\"US/Eastern\"),\n        ),\n        (Timedelta(seconds=500), \"timedelta64[ns]\"),\n    ]\n)"
  }
]