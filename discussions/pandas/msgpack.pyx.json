[
  {
    "id" : "559c07f4-96cf-4386-8d05-8d420ff60cd6",
    "prId" : 3831,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4641dd66-d119-4610-8e38-3b65b52f8bee",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "if this is public API, is it problematic to set this as bint instead of object? I don't have a ton of experience with Cython though.\n",
        "createdAt" : "2013-10-01T02:36:16Z",
        "updatedAt" : "2013-10-01T13:19:29Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "f4f61ef4-e06d-48a8-b2ca-42dcdb9ce8ae",
        "parentId" : "4641dd66-d119-4610-8e38-3b65b52f8bee",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "`bint` is just `int` on the C side but the Cython translator does something special to convert return types of `bint` to Python's `bool` when going from C to Python. You can't use it for numpy arrays though. Cython doesn't support the `bool` dtype.\n\n`bint` will accept a `bool` or `int`\n\nso the answer is no it doesn't matter... it just will be more strict about what users can pass here, it will only allow `True`/`False`/<any integer>\n",
        "createdAt" : "2013-10-01T02:41:56Z",
        "updatedAt" : "2013-10-01T13:19:29Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "80651ca40c0733e0c240e2d08e829c7ab2e8505a",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +134,138 @@\n    def __init__(self, default=None, encoding='utf-8', unicode_errors='strict',\n                 use_single_float=False, bint autoreset=1):\n        self.use_float = use_single_float\n        self.autoreset = autoreset"
  }
]