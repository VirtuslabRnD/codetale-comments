[
  {
    "id" : "2a309787-902b-40f9-afdd-db5f2a4ef970",
    "prId" : 15954,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15954#pullrequestreview-32847860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f2dc2e-db21-4cc1-8761-e2e5b1bf0889",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do \r\n\r\n```\r\ntry:\r\n     from jinja2 .....\r\nexcept ImportError:\r\n     class Styler(ImportError):\r\n            pass\r\n     return\r\n```\r\n\r\nwill give you a ``Styler`` but if you try to use it and ``jinja2`` is not installed will raise I think you can give it a nice message a well.",
        "createdAt" : "2017-04-14T13:37:48Z",
        "updatedAt" : "2017-04-15T01:43:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "acb4dce1-9ab2-4366-ad03-cefea62b55f5",
        "parentId" : "36f2dc2e-db21-4cc1-8761-e2e5b1bf0889",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jreback didn't quite work since you can't early-return from a module.\r\n\r\nHowever, this does work:\r\n\r\n```python\r\ntry:\r\n    from pandas.formats.style import Styler\r\nexcept:\r\n    from pandas.compat import add_metaclass\r\n\r\n    # We want to *not* raise an ImportError upon init\r\n    # We *do* want to raise an ImportError with a custom message\r\n    # when the class is instantiated or subclassed.\r\n\r\n    _msg = (\"pandas.io.api.Styler requires jinja2. \"\r\n            \"Please install with `conda install Jinja2` \"\r\n            \"or `pip install Jinaj2`\")\r\n\r\n    class _Check(type):\r\n        \"\"\"Raises import error upon subclassing.\"\"\"\r\n        def __init__(cls, name, bases, clsdict):\r\n            if len(cls.mro()) > 2:\r\n                raise ImportError(_msg)\r\n            super(_Check, cls).__init__(name, bases, clsdict)\r\n\r\n    @add_metaclass(_Check)\r\n    class Styler(object):\r\n        def __init__(self, *args, **kargs):\r\n            raise ImportError(_msg)\r\n\r\n```\r\n\r\nAre we ok with a metaclass, just for a nice error message? :D",
        "createdAt" : "2017-04-14T15:22:08Z",
        "updatedAt" : "2017-04-15T01:43:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "1bc97ba3-ca7a-456b-950d-0ffbe6bb9385",
        "parentId" : "36f2dc2e-db21-4cc1-8761-e2e5b1bf0889",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh if that works great. ",
        "createdAt" : "2017-04-14T15:36:09Z",
        "updatedAt" : "2017-04-15T01:43:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6765f380d8e754aada9b8ba61876788a87646a6",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +15,19 @@    )\nexcept ImportError:\n    msg = \"pandas.Styler requires jinja2. \"\\\n          \"Please install with `conda install Jinja2`\\n\"\\\n          \"or `pip install Jinja2`\""
  }
]