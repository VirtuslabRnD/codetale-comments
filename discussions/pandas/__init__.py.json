[
  {
    "id" : "409755eb-0d41-478c-9d74-8e30977105de",
    "prId" : 7954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a2e946c-2599-4d79-8c23-cc208b1273e4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not tested anywhere I assume (as we are not running builds like this), but give a test manually\n",
        "createdAt" : "2014-08-12T14:26:36Z",
        "updatedAt" : "2014-08-12T21:00:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ab929826-69d8-4d13-83e1-94a5cd678a68",
        "parentId" : "8a2e946c-2599-4d79-8c23-cc208b1273e4",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "tested this\n\nnot totally sure how you'd even get past the `setup.py` but this will raise if somehow you do\n",
        "createdAt" : "2014-08-12T15:58:44Z",
        "updatedAt" : "2014-08-12T21:00:09Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ca4a0d3df3af2271b4d893f9bb6a8831d6e6658",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +38,42 @@\n\nif LooseVersion(_np_version) < '1.7.0':\n    raise ImportError('pandas {0} is incompatible with numpy < 1.7.0, '\n                      'your numpy version is {1}. Please upgrade numpy to'"
  },
  {
    "id" : "9306c050-8c75-47de-b7a1-4f6f61856e07",
    "prId" : 9626,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7e540de-968b-423c-83cf-7e89b40b09cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, is it necessary to print the exception? I assume the interpreter will just quit in any event, not sure why was done that way previously. any thoughts?\n",
        "createdAt" : "2015-04-28T11:16:35Z",
        "updatedAt" : "2015-04-28T11:16:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "27e767eb-64d4-4d48-bea2-e24f5d4d21e1",
        "parentId" : "e7e540de-968b-423c-83cf-7e89b40b09cf",
        "authorId" : "ad641c5e-8c19-4350-a77b-ef5d980aedc8",
        "body" : "if you mean the part about finding out which module causes the `ImportError`, yes it's not really necessary. But I suppose it was done to make the error message even more specific, i.e. \"can't import hashtable, you need to build C extensions\" vs \"you need to build C extensions\"\n\nboth would be much better than the current error that says \"can't import hashtable\" http://stackoverflow.com/questions/14422976/importing-pandas-shows-importerror-cannot-import-name-hashtable \n",
        "createdAt" : "2015-04-28T15:41:48Z",
        "updatedAt" : "2015-04-28T15:41:48Z",
        "lastEditedBy" : "ad641c5e-8c19-4350-a77b-ef5d980aedc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "69cab57c9889391a587656ff8c6a7f9b38187bb1",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +7,11 @@    from pandas import hashtable, tslib, lib\nexcept ImportError as e:  # pragma: no cover\n    module = str(e).lstrip('cannot import name ')  # hack but overkill to use re\n    raise ImportError(\"C extension: {0} not built. If you want to import \"\n                      \"pandas from the source directory, you may need to run \""
  }
]