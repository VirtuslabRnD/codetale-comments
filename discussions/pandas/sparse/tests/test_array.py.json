[
  {
    "id" : "75e254ca-1baf-4378-85c8-74fdfd624339",
    "prId" : 13849,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e202c77-d88c-4d6f-9e1f-3fc09d9366be",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I am not sure about this. I think if a float `fill_value` should force float (though if the data infers as integer, maybe raise/warn)? having the determination as no gaps is too data specific. I know this forces an integer array to then have a specified fill value (as it can't then be `np.nan`), but I think that's ok.\n",
        "createdAt" : "2016-08-25T10:50:55Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "df6eec9e-3b9c-44a1-8903-50085762d274",
        "parentId" : "4e202c77-d88c-4d6f-9e1f-3fc09d9366be",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "my remaining question was this one\n",
        "createdAt" : "2016-08-27T15:20:19Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a8e6198-1b1c-4b2e-be35-f956d104a198",
        "parentId" : "4e202c77-d88c-4d6f-9e1f-3fc09d9366be",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I agree that it seems logical that the `fill_value` matches the dtype. So in case of specifically specifying the `fill_value`, I would take that into account for the actual dtype inference.\n\nGiven that `nan` is no longer the default fill_value, I don't think it is a problem that specifying `fill_value=np.nan` changes your integer data into a float sparse array.\n",
        "createdAt" : "2016-08-27T15:24:38Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9616541e-da05-4e66-9f07-93708114d2f8",
        "parentId" : "4e202c77-d88c-4d6f-9e1f-3fc09d9366be",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@sinhrks The docstring of `SparseArray` still says that the default `fill_value` is NaN, which is no longer true I think (it changed to None, to depend on the data type I suppose)\n",
        "createdAt" : "2016-08-27T15:29:11Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "341585aa966ca9bd6dad98c819bc818e7d471e88",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +629,633 @@        # fill_value can be nan if there is no missing hole.\n        # only fill_value will be changed\n        s = SparseArray([0, 0, 0, 0], fill_value=np.nan)\n        self.assertEqual(s.dtype, np.int64)\n        self.assertTrue(np.isnan(s.fill_value))"
  }
]