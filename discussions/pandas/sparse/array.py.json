[
  {
    "id" : "62fb9818-4632-4f06-94dc-015be1df670c",
    "prId" : 13849,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6623d2b3-ab7f-4506-b484-be25174d2b63",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think explicty put the supported dtypes in here to have a nice error message, for now to avoid unwanted conversions (e.g. this won't raise on `M8`, and add a test for non-supported dtypes.\n",
        "createdAt" : "2016-08-18T22:42:26Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0974afdb-f464-42aa-8e37-d8f976ea5fbb",
        "parentId" : "6623d2b3-ab7f-4506-b484-be25174d2b63",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob need to have this handled for `.astype` as well. you already have something like this getting the fill value, maybe can use that to validate. (e.g. use the if test, then raise if its not there).\n",
        "createdAt" : "2016-08-18T22:43:17Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "551d1919-ddb5-4bbf-a355-3dac2a31b8e3",
        "parentId" : "6623d2b3-ab7f-4506-b484-be25174d2b63",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually maybe should put this in `sparse.array` or have a `sparse.common` module that you can import to do centrailzed sparse things .\n",
        "createdAt" : "2016-08-18T22:45:27Z",
        "updatedAt" : "2016-08-29T22:58:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "341585aa966ca9bd6dad98c819bc818e7d471e88",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +207,211 @@            # array-like\n            if sparse_index is None:\n                if dtype is not None:\n                    data = np.asarray(data, dtype=dtype)\n                res = make_sparse(data, kind=kind, fill_value=fill_value)"
  }
]