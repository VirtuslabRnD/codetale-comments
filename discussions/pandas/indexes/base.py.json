[
  {
    "id" : "cb2b8e10-d8b3-4e9a-ad79-c385c54e84c4",
    "prId" : 13660,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a936f37b-ce24-4b50-af52-7cb93e717a15",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "(a bit similar with the `equals` case)\n\nCurrently, we are accepting a list or tuple to be added (in case that it is a list of list, in the flat case you get an error):\n\n```\nIn [56]: idx = pd.Index([1,2])\n\nIn [57]: idx.append([[1,2]])\nOut[57]: Int64Index([1, 2, 1, 2], dtype='int64')\n```\n\nThe docstring of append also says for `other`: \"Index or list/tuple of indices\"\n",
        "createdAt" : "2016-08-27T16:37:46Z",
        "updatedAt" : "2016-09-03T03:01:31Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "5169820b-88ed-4219-849e-3fffa4a0e5b5",
        "parentId" : "a936f37b-ce24-4b50-af52-7cb93e717a15",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "`_ensure_index` should handle this (it _might_ think its a `MultiIndex` actually), so might need to disambiguate\n",
        "createdAt" : "2016-08-27T17:15:37Z",
        "updatedAt" : "2016-09-03T03:01:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a42e5b56-56de-4b10-a684-c4637eec3aaa",
        "parentId" : "a936f37b-ce24-4b50-af52-7cb93e717a15",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yes, `_ensure_index` would convert list to Index. @jreback are you saying `Index.append` should accept lists?\n\nOn second thought, maybe I misread the `Index.append` docstring. The \"Index or list/tuple of indices\" can be interpreted as both as \"list/tuple of Index objects\" (so no guarantee to accept list as Index object) or \"list of index labels\". \nBut actually probably the first interpretation. In that case, I think this PR is OK, but @sinhrks it would maybe be good to list this in the whatsnew as change as well? (or do we regard it as a bug fix?)\n",
        "createdAt" : "2016-09-01T08:50:42Z",
        "updatedAt" : "2016-09-03T03:01:31Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "07448a0a-807a-4fc9-8621-7eda397de23f",
        "parentId" : "a936f37b-ce24-4b50-af52-7cb93e717a15",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Yes, I agree docstring intends first one. I'm adding an validation to check all elements are `Index` if input is list-like.\n\nI think it is regarded as a bug fix, because it is similar to the fix which `CategiricalIndex.append` accepts (flat) list of labels (included in this PR).\n",
        "createdAt" : "2016-09-03T06:36:48Z",
        "updatedAt" : "2016-09-03T06:37:15Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "82be81a9-348f-4a93-b87f-c780e0d27a60",
        "parentId" : "a936f37b-ce24-4b50-af52-7cb93e717a15",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, merging then!\n",
        "createdAt" : "2016-09-03T09:19:55Z",
        "updatedAt" : "2016-09-03T09:19:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "85f5d9456ebd6c44d84b8def2a515cba62ecf51f",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1415,1419 @@        for obj in to_concat:\n            if not isinstance(obj, Index):\n                raise TypeError('all inputs must be Index')\n\n        names = set([obj.name for obj in to_concat])"
  },
  {
    "id" : "defe5a3a-d4ae-4388-a1f5-79a1e8013c54",
    "prId" : 13979,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c705d6b3-79e6-4ed0-a25e-f5c2750cf5d2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "shouldn't this be in `indexes/category.py`?\n",
        "createdAt" : "2016-08-25T10:26:00Z",
        "updatedAt" : "2016-08-29T01:46:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7edfe04e-9b42-4bda-a6fe-a3e6f179a968",
        "parentId" : "c705d6b3-79e6-4ed0-a25e-f5c2750cf5d2",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Yes, moved.\n",
        "createdAt" : "2016-08-29T01:45:29Z",
        "updatedAt" : "2016-08-29T01:46:56Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "28a27815690571a978fac9037ebded0214ac2be5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +3220,3224 @@\n    @Appender(base._shared_docs['unique'] % _index_doc_kwargs)\n    def unique(self):\n        result = super(Index, self).unique()\n        return self._shallow_copy(result)"
  },
  {
    "id" : "50aad335-0cde-4eb1-8a4b-dc6e95492f97",
    "prId" : 14424,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14424#pullrequestreview-4398631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d16eea3b-ced8-4a05-9da0-4c1d343ecdc2",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add a docstring or comment explaining where this is overwritten / used ?\n",
        "createdAt" : "2016-10-14T14:44:27Z",
        "updatedAt" : "2016-10-16T22:51:09Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "898d7c2d-08c2-449c-a913-e8d4aefb998c",
        "parentId" : "d16eea3b-ced8-4a05-9da0-4c1d343ecdc2",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "sure, added the comment.\n",
        "createdAt" : "2016-10-16T22:51:24Z",
        "updatedAt" : "2016-10-16T22:51:24Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae22dce62e6d97d79d8786c6a16be7ca230799de",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2937,2941 @@        return Index(joined, name=name)\n\n    def _get_string_slice(self, key, use_lhs=True, use_rhs=True):\n        # this is for partial string indexing,\n        # overridden in DatetimeIndex, TimedeltaIndex and PeriodIndex"
  }
]