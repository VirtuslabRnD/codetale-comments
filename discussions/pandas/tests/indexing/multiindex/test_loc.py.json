[
  {
    "id" : "1ba2e94e-ff22-4a55-bbd5-48a8d1b85524",
    "prId" : 24741,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24741#pullrequestreview-191989210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4237528-f8b1-40bc-8cc5-266394e45253",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this fixture duplicative of the one in conftest?",
        "createdAt" : "2019-01-12T19:12:45Z",
        "updatedAt" : "2019-01-12T19:38:07Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "af714c85-b36d-4899-8553-f42730790e0c",
        "parentId" : "c4237528-f8b1-40bc-8cc5-266394e45253",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "@WillAyd : probably yes.. it is a dataframe with random data with an integer multi-level index, so `multiindex_year_month_day_dataframe_random_data` fixture could probably be used instead.",
        "createdAt" : "2019-01-12T19:42:25Z",
        "updatedAt" : "2019-01-12T19:42:25Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "5807fa9b-0230-4bc2-98f0-71a1bd65647c",
        "parentId" : "c4237528-f8b1-40bc-8cc5-266394e45253",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "OK - if you want to tackle that in a follow up always good to reduce duplication",
        "createdAt" : "2019-01-13T20:33:53Z",
        "updatedAt" : "2019-01-13T20:33:54Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f57ad2d9f0192e0eba8c0ebaff63c91ef4676404",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +18,22 @@\n@pytest.fixture\ndef frame_random_data_integer_multi_index():\n    levels = [[0, 1], [0, 1, 2]]\n    codes = [[0, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 2]]"
  },
  {
    "id" : "0a4c5086-28bd-44ae-8215-2d202e04cd1d",
    "prId" : 26155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26155#pullrequestreview-229614310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6753e404-f62d-46c1-bd20-789ee9c0ea31",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make this another test name. add the issue number as a comment",
        "createdAt" : "2019-04-21T16:05:37Z",
        "updatedAt" : "2019-04-24T14:31:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca93e07d-f4f5-4901-8a7c-a42ef702d0a2",
        "parentId" : "6753e404-f62d-46c1-bd20-789ee9c0ea31",
        "authorId" : "1c02d215-c939-4a51-8b15-8d491f3a1210",
        "body" : "sorry i dont understand, should i add this to a new function?",
        "createdAt" : "2019-04-21T20:43:19Z",
        "updatedAt" : "2019-04-24T14:31:55Z",
        "lastEditedBy" : "1c02d215-c939-4a51-8b15-8d491f3a1210",
        "tags" : [
        ]
      },
      {
        "id" : "33ad6b3b-bc80-4a4f-b96a-ceb4c8344e51",
        "parentId" : "6753e404-f62d-46c1-bd20-789ee9c0ea31",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make the name more informative, maybe\r\n\r\ntest_loc_multiindex_too_many_dims",
        "createdAt" : "2019-04-23T15:07:55Z",
        "updatedAt" : "2019-04-24T14:31:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2309e147592b6bd932fae40086b73d9e68aa60d4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +134,138 @@    def test_loc_multiindex_too_many_dims(self):\n        # GH 14885\n        s = Series(range(8), index=MultiIndex.from_product(\n            [['a', 'b'], ['c', 'd'], ['e', 'f']]))\n"
  },
  {
    "id" : "57dfc19e-aad4-4130-8884-c528fd3b7add",
    "prId" : 37706,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37706#pullrequestreview-525893992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9344b778-b0a7-4b35-bc7f-b38d66239136",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also select `df.loc['a']` as the first case in OP (which is working). can parameterize if easy.",
        "createdAt" : "2020-11-09T00:45:42Z",
        "updatedAt" : "2020-11-09T19:11:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bad1d5ec-9cfa-41c9-8753-b8ae1abf9104",
        "parentId" : "9344b778-b0a7-4b35-bc7f-b38d66239136",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Parametrization would be ugly, because Index needs new definition. Added the test below.",
        "createdAt" : "2020-11-09T01:09:59Z",
        "updatedAt" : "2020-11-09T19:11:19Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "834c5b4d-6298-49f5-8597-54a656aa3f1a",
        "parentId" : "9344b778-b0a7-4b35-bc7f-b38d66239136",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "kk totally fine, i always ask, but like you did push back if its non-trivial or would make it less obvious.",
        "createdAt" : "2020-11-09T02:54:35Z",
        "updatedAt" : "2020-11-09T19:11:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c114423dcc8a9dd53b5e009a91a6bb295b0ba71",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +605,609 @@    df = DataFrame(\n        {\"col\": [1, 2, 5], \"ind1\": [\"a\", \"d\", np.nan], \"ind2\": [1, 4, 5]}\n    ).set_index([\"ind1\", \"ind2\"])\n    result = df.loc[[\"a\"]]\n    expected = DataFrame("
  },
  {
    "id" : "d5ae85b3-7f46-48b3-a002-6852fde270b9",
    "prId" : 37707,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37707#pullrequestreview-530571708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7be02ada-2551-4398-aedb-a067a30ce474",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i dont know if this is wrong, but it is definitely weird.  i would expect `mi.get_loc(\"2001-01\")` to match `index.get_loc(\"2001-01\")` here.  why doesnt it?",
        "createdAt" : "2020-11-12T02:36:49Z",
        "updatedAt" : "2020-11-24T18:33:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d23abab6-97c1-40ce-a832-25c11f4b2a06",
        "parentId" : "7be02ada-2551-4398-aedb-a067a30ce474",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Somehow my respone from yesterday got lost. Forgot to press sent probably :)\r\n\r\nBot results match, did not test ``index.get_loc(\"2001-01\")`` previously but added it",
        "createdAt" : "2020-11-13T11:10:51Z",
        "updatedAt" : "2020-11-24T18:33:13Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "dcebfb80-167f-41df-9c7b-dc29d6528072",
        "parentId" : "7be02ada-2551-4398-aedb-a067a30ce474",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "huh, dont know why i thought they didnt match.  can you add a comment about why this assertion is here",
        "createdAt" : "2020-11-14T02:17:33Z",
        "updatedAt" : "2020-11-24T18:33:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5e85ca67-2dea-4f02-a8c3-fd193c876fbb",
        "parentId" : "7be02ada-2551-4398-aedb-a067a30ce474",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Done",
        "createdAt" : "2020-11-14T11:20:58Z",
        "updatedAt" : "2020-11-24T18:33:13Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "48424fbdf0dd8eae650626596dd9ef3ba5cb9a41",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +667,671 @@    mi = MultiIndex.from_arrays([index])\n    # Check if get_loc matches for Index and MultiIndex\n    assert mi.get_loc(\"2001-01\") == slice(0, 31, None)\n    assert index.get_loc(\"2001-01\") == slice(0, 31, None)"
  },
  {
    "id" : "a758514b-5a3d-4b82-8bf4-5874307d1787",
    "prId" : 37764,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37764#pullrequestreview-529962032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ceee407-46c2-49b2-a6c4-c6dd8a788ef8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also add the case where the 3rd level is level out (should also raise)",
        "createdAt" : "2020-11-13T04:55:23Z",
        "updatedAt" : "2020-11-20T23:50:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f15681be-da1c-419a-809d-67843ec230dc",
        "parentId" : "1ceee407-46c2-49b2-a6c4-c6dd8a788ef8",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Done",
        "createdAt" : "2020-11-13T10:50:55Z",
        "updatedAt" : "2020-11-20T23:50:17Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdd4e5d20a9a9fe0b25c580934981755a07b7001",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +621,625 @@        df = DataFrame(np.random.rand(4, 3), index=mi)\n        msg = r\"\\('b', '1', slice\\(None, None, None\\)\\)\"\n        with pytest.raises(KeyError, match=msg):\n            df.loc[(\"b\", \"1\", slice(None)), :]\n        with pytest.raises(KeyError, match=msg):"
  },
  {
    "id" : "59306ab5-3590-4802-80c5-8c4d85e2d472",
    "prId" : 37787,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37787#pullrequestreview-530097275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0040706f-773b-4cd8-92ca-88494d1a7fdb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize over all of the selectors in the OP e.g. `obj.loc[('a',), :]` if its a DataFrame",
        "createdAt" : "2020-11-13T13:10:39Z",
        "updatedAt" : "2020-11-14T11:16:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "beae57a2-32c8-410f-ba49-e414ac8b5460",
        "parentId" : "0040706f-773b-4cd8-92ca-88494d1a7fdb",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Added tests for df, I think one of the cases mentioned there should raise and not work",
        "createdAt" : "2020-11-13T14:18:01Z",
        "updatedAt" : "2020-11-14T11:16:08Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8c86f5f7eb49123b90d4b285db1d0b06a5a0553",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +289,293 @@        tm.assert_series_equal(result, expected)\n\n    def test_multiindex_loc_one_dimensional_tuple(self, frame_or_series):\n        # GH#37711\n        mi = MultiIndex.from_tuples([(\"a\", \"A\"), (\"b\", \"A\")])"
  },
  {
    "id" : "aa144eff-dc11-456e-882b-a194fa106274",
    "prId" : 37992,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37992#pullrequestreview-538770845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b542064-03af-4512-8b4c-d4d931951116",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "should `(\"a\", slice(None, None, -1))` behave the same as `(\"a\", [1, 0])`?",
        "createdAt" : "2020-11-24T04:22:56Z",
        "updatedAt" : "2020-11-25T13:02:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a6e8956c-9a5f-49a0-b5f2-9dc258185d13",
        "parentId" : "9b542064-03af-4512-8b4c-d4d931951116",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "(and if so, does it work in this PR, and if so, can you test it)",
        "createdAt" : "2020-11-24T04:23:15Z",
        "updatedAt" : "2020-11-25T13:02:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e7295672-09d1-4c50-a8a8-e8f68255568b",
        "parentId" : "9b542064-03af-4512-8b4c-d4d931951116",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "This is actually a completly different bug. In case of MultiIndex and slice, we will run into \r\n\r\n```\r\n        def convert_indexer(start, stop, step, indexer=indexer, codes=level_codes):\r\n            # given the inputs and the codes/indexer, compute an indexer set\r\n            # if we have a provided indexer, then this need not consider\r\n            # the entire labels set\r\n\r\n            r = np.arange(start, stop, step)\r\n```\r\n\r\nwhich returns an empty array in case of negative step size. We have to change start and stop in these cases. I will look into this and try to fix this as a follow up, because not really related to this.\r\n\r\nBut more generall: I would say ``(\"a\", slice(None, None, -1))`` should return the same as ``(\"a\", [1, 0])``",
        "createdAt" : "2020-11-24T18:54:39Z",
        "updatedAt" : "2020-11-25T13:02:13Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "435e5f0d-28ee-4352-a77a-fdfb11e07259",
        "parentId" : "9b542064-03af-4512-8b4c-d4d931951116",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Actually fixing this only makes sense when #37707 is merged, because this affects slices too. Otherwise we would build erroneous tests",
        "createdAt" : "2020-11-24T19:28:25Z",
        "updatedAt" : "2020-11-25T13:02:13Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "b306ff53-283d-425f-8859-00aece5a054c",
        "parentId" : "9b542064-03af-4512-8b4c-d4d931951116",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "OK.  If theres not already an issue for this separate bug, can you make one (assuming you havent already made a PR for it)",
        "createdAt" : "2020-11-25T03:27:18Z",
        "updatedAt" : "2020-11-25T13:02:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "21f57b21-ac25-4373-ad7a-bb12400259c5",
        "parentId" : "9b542064-03af-4512-8b4c-d4d931951116",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Have a PR in the pipeline. Will add tests when this is merged. ",
        "createdAt" : "2020-11-25T18:49:49Z",
        "updatedAt" : "2020-11-25T18:49:49Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf78d483119db3020858fb7d1c837d87b8329235",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +676,680 @@    df = DataFrame([[1, 2], [3, 4], [5, 6], [7, 8]], index=mi)\n\n    indexer = (\"a\", [1, 0])\n    df.loc[indexer, :] = np.array([[9, 10], [11, 12]])\n    expected = DataFrame([[11, 12], [9, 10], [5, 6], [7, 8]], index=mi)"
  },
  {
    "id" : "ac97b5ae-177b-4808-86c1-347713c896c7",
    "prId" : 38150,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38150#pullrequestreview-560164000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82d69084-34b3-4234-b096-13750c0725b1",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "big picture, why isnt `ser_expected = frame_expected[\"d\"]`?\r\n\r\n",
        "createdAt" : "2020-12-30T03:20:04Z",
        "updatedAt" : "2020-12-30T09:11:35Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4078b646-47ce-4609-9f22-083bc23d004b",
        "parentId" : "82d69084-34b3-4234-b096-13750c0725b1",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Series drops levels of MultiIndex (for example #6022), while DataFrame should keep them. The current behavior is, that DataFrame keeps them all the times except when it has one row.",
        "createdAt" : "2020-12-30T09:08:33Z",
        "updatedAt" : "2020-12-30T09:11:35Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "8cb445d1-4d14-490a-9739-0725ced5c4f0",
        "parentId" : "82d69084-34b3-4234-b096-13750c0725b1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is https://github.com/pandas-dev/pandas/pull/38150#issuecomment-752233136 saying that you plant to change the Series behavior to match DataFrame?",
        "createdAt" : "2020-12-30T18:37:47Z",
        "updatedAt" : "2020-12-30T18:37:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f0b8c11c-8006-4d8a-a7fb-599b5c87c4ad",
        "parentId" : "82d69084-34b3-4234-b096-13750c0725b1",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "No, the comment was meant to clarify why we have to check for ndim==1",
        "createdAt" : "2020-12-30T18:53:03Z",
        "updatedAt" : "2020-12-30T18:53:03Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "04bfc9b69492f507ea7e7d75199e9898b99f3bf1",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +709,713 @@    result = ser.loc[\"x\", :, \"z\"]\n    expected = Series([0], index=Index([\"y\"], name=\"b\"))\n    tm.assert_series_equal(result, expected)"
  },
  {
    "id" : "419cd6ff-ea08-4853-bda2-7af66c0db9af",
    "prId" : 40987,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40987#pullrequestreview-667034917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7b34377-e666-4e9f-bc9c-f7f557b41c9d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add this as an equivalent test: `df_sliced = df.loc[df.index.isin(all_items, level=1), :]` should yield the same expected",
        "createdAt" : "2021-05-24T12:57:18Z",
        "updatedAt" : "2021-05-24T12:57:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "18238763-e596-4dd2-96ce-ac0fde26b742",
        "parentId" : "e7b34377-e666-4e9f-bc9c-f7f557b41c9d",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Added test, but should not return the same since isin produces an boolean mask, which does not reorder the underlying dataframe. This should be the identity",
        "createdAt" : "2021-05-24T18:20:52Z",
        "updatedAt" : "2021-05-24T18:20:53Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f64bd110ccfe856db093b7093fb4bce63e367a9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +775,779 @@        columns=[\"a\"],\n    )\n    result = df.loc[(slice(None), indexer), :]\n    expected = DataFrame(\n        [1] * 8,"
  },
  {
    "id" : "a317124f-23e7-4859-8bc2-b05e6a1aaabe",
    "prId" : 41374,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41374#pullrequestreview-657654358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "691ea7f1-7656-4bf3-943e-e116c62d94fa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the .iloc example as well (to assert that its also an int as on master).",
        "createdAt" : "2021-05-12T01:17:20Z",
        "updatedAt" : "2021-05-12T01:17:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "944b2ed0-7a64-4ee3-a5fd-2da53b4c3aeb",
        "parentId" : "691ea7f1-7656-4bf3-943e-e116c62d94fa",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Done",
        "createdAt" : "2021-05-12T09:16:14Z",
        "updatedAt" : "2021-05-12T09:16:14Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "832c236261595a15ee0293017119fa7f2fcb4dab",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +834,838 @@\n\ndef test_loc_get_scalar_casting_to_float():\n    # GH#41369\n    df = DataFrame("
  },
  {
    "id" : "ededacf5-be88-4971-94f7-06cbe6d21da9",
    "prId" : 41374,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41374#pullrequestreview-667551314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ec6df68-9889-4261-a0cf-f3e925f89311",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "this test passes on master. 2.0 == 2 is True.",
        "createdAt" : "2021-05-25T08:33:00Z",
        "updatedAt" : "2021-05-25T08:33:01Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "e324d717-0317-4667-838f-2c63fd191f3c",
        "parentId" : "4ec6df68-9889-4261-a0cf-f3e925f89311",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Added an isinstance check",
        "createdAt" : "2021-05-25T08:41:23Z",
        "updatedAt" : "2021-05-25T08:41:24Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "832c236261595a15ee0293017119fa7f2fcb4dab",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +840,844 @@    )\n    result = df.loc[(3, 4), \"b\"]\n    assert result == 2\n    assert isinstance(result, np.int64)\n    result = df.loc[[(3, 4)], \"b\"].iloc[0]"
  }
]