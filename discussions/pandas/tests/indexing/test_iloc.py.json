[
  {
    "id" : "619fab81-1d81-4324-8565-7e41a5c8c11f",
    "prId" : 21867,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21867#pullrequestreview-136463550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9a6d9fc-9a56-4da0-834f-af00ef2291ad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here as a comment",
        "createdAt" : "2018-07-12T00:03:40Z",
        "updatedAt" : "2018-07-13T19:38:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ce3a47082e4dda4131e77a91776cf79e5c34586",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +127,131 @@                          fails=IndexError)\n\n    def test_iloc_array_not_mutating_negative_indices(self):\n\n        # GH 21867"
  },
  {
    "id" : "3f82ec6d-e214-4a8a-9fc8-48f123655087",
    "prId" : 22699,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22699#pullrequestreview-156352893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9f4d3a2-299b-41d1-b9e4-781732045867",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use ignore_ix? ",
        "createdAt" : "2018-09-18T11:47:45Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "29c2f910-f993-4e61-bfbf-cb54bb159b7e",
        "parentId" : "c9f4d3a2-299b-41d1-b9e4-781732045867",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "That filters the warning for the entire test. I was trying to exactly match the tests previous intent, of only filtering within the `catch_warnings` blocks.",
        "createdAt" : "2018-09-18T13:00:58Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4990fc2d984b536e5c7c97ad55d4f550ae661867",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +389,393 @@        result = df.iloc[2]\n        with catch_warnings(record=True):\n            filterwarnings(\"ignore\", \"\\\\n.ix\", DeprecationWarning)\n            exp = df.ix[4]\n        tm.assert_series_equal(result, exp)"
  },
  {
    "id" : "641ecb58-5479-4f74-8e37-f69814fb3db2",
    "prId" : 23796,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23796#pullrequestreview-176507578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27c7941e-446b-4c68-80bf-3134fdaf3df4",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "as above",
        "createdAt" : "2018-11-19T21:40:19Z",
        "updatedAt" : "2018-11-25T13:01:37Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce5bd94125310571c6ca9cfa3ab4aed31b49dcde",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +338,342 @@\n    def test_iloc_setitem_pandas_object(self):\n        # GH 17193\n        s_orig = Series([0, 1, 2, 3])\n        expected = Series([0, -1, -2, 3])"
  },
  {
    "id" : "551244fb-aa85-4600-b73f-19ad4d08cf90",
    "prId" : 37728,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37728#pullrequestreview-534800303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ac2dff1-3087-403c-9945-caf40dafb01e",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "nitpick for future: setitem_iloc -> iloc_setitem",
        "createdAt" : "2020-11-19T19:56:07Z",
        "updatedAt" : "2020-11-19T19:56:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b965eeeebc8e6ead13c8bd4bb0c96f6593cf8e4e",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +827,831 @@        tm.assert_frame_equal(df2, expected)\n\n    def test_setitem_iloc_dictionary_value(self):\n        # GH#37728\n        df = DataFrame({\"x\": [1, 2], \"y\": [2, 2]})"
  },
  {
    "id" : "6af3675d-d6c7-453d-8c60-4ef5bac2e545",
    "prId" : 37960,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37960#pullrequestreview-534901291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f4fe50d-6b4f-41a0-a0aa-8c6da14a8553",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "the comment about test naming applied to a few tests in the previous PR.\r\n\r\nBTW i have a branch called \"collect\" in which i collect small edits that dont necessarily merit their own PRs, then periodically make a PR titled \"assorted cleanups\"",
        "createdAt" : "2020-11-19T20:12:24Z",
        "updatedAt" : "2020-11-19T20:19:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "8e25e83e-4585-40ce-81da-b5591240d029",
        "parentId" : "9f4fe50d-6b4f-41a0-a0aa-8c6da14a8553",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Ah yeah you are right :)\r\n\r\nWhen I started contributing someone told me to try avoiding cluttering things together in one pr, which belong to different prs, so I tried to split everything up as good as possible.\r\n\r\nWill collect clean ups in the future :)",
        "createdAt" : "2020-11-19T20:20:40Z",
        "updatedAt" : "2020-11-19T20:21:06Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "8481822d-12fb-4ff4-b7d0-0dedb9efe134",
        "parentId" : "9f4fe50d-6b4f-41a0-a0aa-8c6da14a8553",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> When I started contributing someone told me to try avoiding cluttering things together in one pr, which belong to different prs, so I tried to split everything up as good as possible.\r\n\r\nIn general this is good advice.  For the \"assorted cleanups\" PRs its important that the changes be pretty purely cosmetic so that they are super-easy to review.\r\n\r\n> Will collect clean ups in the future :)\r\n\r\nIt works for me but not for everyone.  You find what works for you.",
        "createdAt" : "2020-11-19T21:20:46Z",
        "updatedAt" : "2020-11-19T21:20:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "14c1b469-a62b-4491-ad90-5ea286e31dfe",
        "parentId" : "9f4fe50d-6b4f-41a0-a0aa-8c6da14a8553",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Thanks for the help. Will try to collect them in the future if this is doable",
        "createdAt" : "2020-11-19T22:14:50Z",
        "updatedAt" : "2020-11-19T22:14:50Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "c084942c0a39965b0547712f2e35693b730e24ab",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1001,1005 @@        assert ser.iloc[2] == 2\n\n    def test_iloc_setitem_pure_position_based(self):\n        # GH#22046\n        ser1 = Series([1, 2, 3])"
  },
  {
    "id" : "9b9dc1bf-291c-4e5a-b86e-57a0f8d1840f",
    "prId" : 40325,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40325#pullrequestreview-611893529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c192bf59-08cd-4cdc-a652-bd6b103cf65e",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "why both the skip and the fixture?  id expect one or the other",
        "createdAt" : "2021-03-12T17:25:30Z",
        "updatedAt" : "2021-03-17T10:08:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "27e91860-6f87-4a30-947d-5ad85a3e7bf6",
        "parentId" : "c192bf59-08cd-4cdc-a652-bd6b103cf65e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "because I already rewrote the test so that it *could* pass for ArrayManager (accessing .values for a DataFrame will never work to get a view of the data with AM, so that needs to be rewritten), it's only still failing for other reasons. ",
        "createdAt" : "2021-03-15T07:40:16Z",
        "updatedAt" : "2021-03-17T10:08:27Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "70a3e251e869abc59ebe8f4e068281610c55176c",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +111,115 @@    @td.skip_array_manager_not_yet_implemented\n    @pytest.mark.parametrize(\"box\", [array, Series])\n    def test_iloc_setitem_ea_inplace(self, frame_or_series, box, using_array_manager):\n        # GH#38952 Case with not setting a full column\n        #  IntegerArray without NAs"
  }
]