[
  {
    "id" : "66638c98-ff4f-450e-ac10-907c44e5efd8",
    "prId" : 31724,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31724#pullrequestreview-354164490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d6a847b-d18a-4c00-872b-dfdf3240630d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you parametrize this test for at / loc? I think would make it easier and more comprehensive",
        "createdAt" : "2020-02-06T01:09:53Z",
        "updatedAt" : "2020-02-06T02:01:56Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "af849459-2b68-4630-a00d-bda330625531",
        "parentId" : "5d6a847b-d18a-4c00-872b-dfdf3240630d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "looking at this, im definitely going to split this into more targeted tests, will look at parametrizing; might benefit from a helper to assert we get the same behavior",
        "createdAt" : "2020-02-06T01:56:27Z",
        "updatedAt" : "2020-02-06T02:01:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "51e8a4d5-186b-4b11-a1bc-629ba7afe014",
        "parentId" : "5d6a847b-d18a-4c00-872b-dfdf3240630d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "refactored to make targeted tests, this file needs a dedicated pass to move old testing patterns to parametrization",
        "createdAt" : "2020-02-06T02:14:53Z",
        "updatedAt" : "2020-02-06T02:14:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "37feaf6329f3d350a09a3e58e6aca4cccc1d486b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +141,145 @@\n        msg = (\n            \"cannot do label indexing on <class 'pandas.core.indexes.base.Index'> \"\n            r\"with these indexers \\[0\\] of <class 'int'>\"\n        )"
  },
  {
    "id" : "39127c6a-06db-439b-a5f4-a0a9d8d0c039",
    "prId" : 31724,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31724#pullrequestreview-354611357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b509835-bc5c-4d4e-a066-62f5b6fd5ba6",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I have to say that I found the previous error message more readable ..",
        "createdAt" : "2020-02-06T08:40:12Z",
        "updatedAt" : "2020-02-06T08:41:52Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "078e8f34-220f-4c02-a1e0-4d0468571fab",
        "parentId" : "2b509835-bc5c-4d4e-a066-62f5b6fd5ba6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I generally agree, that suggests we should improve the existing messages for \"loc\"",
        "createdAt" : "2020-02-06T16:54:01Z",
        "updatedAt" : "2020-02-06T16:54:01Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "37feaf6329f3d350a09a3e58e6aca4cccc1d486b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +141,145 @@\n        msg = (\n            \"cannot do label indexing on <class 'pandas.core.indexes.base.Index'> \"\n            r\"with these indexers \\[0\\] of <class 'int'>\"\n        )"
  },
  {
    "id" : "84551ff8-bd0d-426e-82d8-4bdb3c0bdbdd",
    "prId" : 31767,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31767#pullrequestreview-355612217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d9c4098-0edc-4175-92a7-50f9db1545e3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make sure we use the same nomenclature, usually we call this klass and use the object itself",
        "createdAt" : "2020-02-09T14:55:27Z",
        "updatedAt" : "2020-02-09T14:55:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fae6149fa7545b13dc9152ed6b1e22d157365af4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +10,14 @@\nclass TestScalar(Base):\n    @pytest.mark.parametrize(\"kind\", [\"series\", \"frame\"])\n    def test_at_and_iat_get(self, kind):\n        def _check(f, func, values=False):"
  },
  {
    "id" : "133cbfe1-e6e0-4c86-a33d-30b00090bd72",
    "prId" : 32520,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32520#pullrequestreview-384423197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29cbb318-bceb-425e-bdda-0df0213de9c0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add a test for not providing all MultiIndex levels? (so eg `series.at[1]`). \r\nAnd also a test with a duplicated label?",
        "createdAt" : "2020-03-30T19:24:46Z",
        "updatedAt" : "2020-05-18T20:00:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a2a9e500-656c-486e-bf62-7af4898266a3",
        "parentId" : "29cbb318-bceb-425e-bdda-0df0213de9c0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "And maybe also an equivalent test for a DataFrame (it seems to work, but would be good to ensure we also have an explicit test for that)",
        "createdAt" : "2020-03-30T19:27:34Z",
        "updatedAt" : "2020-05-18T20:00:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4eddc525-d725-425c-bd14-7008b9653374",
        "parentId" : "29cbb318-bceb-425e-bdda-0df0213de9c0",
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "Sure - I have it mostly done, but ran into a question. For the series\r\n\r\n    series = pd.Series([1, 2, 3], index=[[1, 2, 2], [3, 4, 4]])\r\n\r\ni.e.\r\n\r\n````\r\n1  3    1\r\n2  4    2\r\n   4    3\r\ndtype: int64\r\n````\r\n\r\nwhat should be the output of series.at[1, 3]? I was expecting to just get the scalar 1, but currently I'm getting\r\n\r\n````\r\n1  3    1\r\ndtype: int64\r\n````\r\n\r\nAfter thinking about this - perhaps what we have currently is the desired output. My reason for this is that the shape doesn't change depending on the input - (1, 3) vs (2, 4).",
        "createdAt" : "2020-03-30T22:39:31Z",
        "updatedAt" : "2020-05-18T20:00:07Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      },
      {
        "id" : "e32651e9-7cea-4c58-b52c-d091a8373b9a",
        "parentId" : "29cbb318-bceb-425e-bdda-0df0213de9c0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "IMO, that should be a scalar (but that is also the reason that I asked to test it, to be sure this is covered Ã nd to discuss the semantics we want)",
        "createdAt" : "2020-03-31T06:03:00Z",
        "updatedAt" : "2020-05-18T20:00:07Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "89ee12804ba3ac2bb914cdb3a1c2ee6f1d9f75b6",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +395,399 @@    assert series.at[1, 3] == 1\n    assert series.loc[1, 3] == 1\n\n\ndef test_multiindex_at_set():"
  },
  {
    "id" : "21988dba-6077-4a0e-9c2c-1b51181c9ad6",
    "prId" : 32520,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32520#pullrequestreview-414015531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61e0056c-1e44-4e12-88b1-914ebbacd257",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this the behavior now on master? IOW is this an api change",
        "createdAt" : "2020-05-18T23:13:08Z",
        "updatedAt" : "2020-05-18T23:13:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3224fd8a-e314-4e98-80d4-3e6e2bd3d2d2",
        "parentId" : "61e0056c-1e44-4e12-88b1-914ebbacd257",
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "Current behavior on master is to raise ValueError for any of the at lines, behavior with the loc lines is the same as master. I would describe this as a bugfix and not an api change.",
        "createdAt" : "2020-05-19T00:05:37Z",
        "updatedAt" : "2020-05-19T00:05:37Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      }
    ],
    "commit" : "89ee12804ba3ac2bb914cdb3a1c2ee6f1d9f75b6",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +411,415 @@    assert series.index.nlevels == 2\n    series.at[1, 3] = 5\n    assert series.at[1, 3] == 5\n    series.loc[1, 3] = 6\n    assert series.loc[1, 3] == 6"
  }
]