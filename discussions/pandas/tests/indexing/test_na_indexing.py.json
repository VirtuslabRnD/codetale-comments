[
  {
    "id" : "b50d7615-6dc8-400c-8249-baa5029d718c",
    "prId" : 30308,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30308#pullrequestreview-334041694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7534ca6-3de6-4514-9a34-f063dbf21a55",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can we parametrize this? IIRC `nulls_fixture` wasn't appropriate but maybe need a `nulls_scalar_fixture` for these purposes",
        "createdAt" : "2019-12-17T18:27:41Z",
        "updatedAt" : "2020-01-02T15:03:10Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "658078b7-34d3-435e-9fbc-791dbe4005a2",
        "parentId" : "a7534ca6-3de6-4514-9a34-f063dbf21a55",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "What would be parametrized? The boolean array with missing values?",
        "createdAt" : "2019-12-18T15:13:10Z",
        "updatedAt" : "2020-01-02T15:03:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5004d91cfa3c897e0748de6bca8f2b9e7d92b329",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@    if frame:\n        s = s.to_frame()\n    mask = pd.array([True, False, None], dtype=\"boolean\")\n    match = \"cannot mask with array containing NA / NaN values\"\n    with pytest.raises(ValueError, match=match):"
  },
  {
    "id" : "e5516f7b-6a15-4cde-bc74-10b3d907df98",
    "prId" : 32484,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32484#pullrequestreview-370859786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fd72d1a-ba1c-4676-a62e-c4326ea3611b",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "This test previously only covered `pd.array` and `pd.Series`",
        "createdAt" : "2020-03-08T21:37:41Z",
        "updatedAt" : "2020-03-08T21:37:41Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ea372cf7df78957088232c931c7c86864b9d07",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +24,28 @@    \"mask\", [[True, False, False], [True, True, True], [False, False, False]]\n)\n@pytest.mark.parametrize(\"indexer_class\", [list, pd.array, pd.Index, pd.Series])\n@pytest.mark.parametrize(\"frame\", [True, False])\ndef test_series_mask_boolean(values, dtype, mask, indexer_class, frame):"
  },
  {
    "id" : "9d93c002-0d9a-4360-ad12-c2b400ea9367",
    "prId" : 32484,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32484#pullrequestreview-370859876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9093d828-d739-4baa-8111-2ead403f5088",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "The empty scenario was previously covered with some redundant code in the bottom of the test. I moved it to the parametrization instead and adjusted the generic test code to handle it properly",
        "createdAt" : "2020-03-08T21:38:58Z",
        "updatedAt" : "2020-03-08T21:38:58Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ea372cf7df78957088232c931c7c86864b9d07",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +8,12 @@    \"values, dtype\",\n    [\n        ([], \"object\"),\n        ([1, 2, 3], \"int64\"),\n        ([1.0, 2.0, 3.0], \"float64\"),"
  }
]