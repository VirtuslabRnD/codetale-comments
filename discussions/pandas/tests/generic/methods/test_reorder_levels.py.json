[
  {
    "id" : "e2b13802-34ff-4989-8dcb-881fc5a087d8",
    "prId" : 32373,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32373#pullrequestreview-367122584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85cad61b-9e0d-4ef6-aeca-4d542fbe212b",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "if this is going to happen a lot with these changes, should maybe consider a solution that can maintain the correct assertion helper.\r\n\r\neither in the parameterisation as \"klass, helper\" or create a fixture something like\r\n\r\n```\r\n@fixture()\r\ndef assert_klass_equal(klass):\r\n    if isinstance(klass, DataFrame):\r\n      return tm.assert_frame_equal\r\n    elif isinstance(klass, Series):\r\n      return tm.assert_series_equal\r\n   else:\r\n      assert False \r\n```\r\n(code not tested!)",
        "createdAt" : "2020-02-29T19:32:20Z",
        "updatedAt" : "2020-03-02T02:54:11Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "3bc1c601-33a1-4443-a5c8-a382319e0868",
        "parentId" : "85cad61b-9e0d-4ef6-aeca-4d542fbe212b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "might make sense to add as a kwarg to tm.assert_equal",
        "createdAt" : "2020-03-02T02:50:12Z",
        "updatedAt" : "2020-03-02T02:54:11Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ac2d1934-99e0-43b7-a0ae-550246d0939f",
        "parentId" : "85cad61b-9e0d-4ef6-aeca-4d542fbe212b",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "yeah, that sounds good as well. could be follow-up",
        "createdAt" : "2020-03-02T11:18:00Z",
        "updatedAt" : "2020-03-02T11:18:01Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f0975e75f5d7213a25dfd999bd5e737a09450e1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@        # no change, position\n        result = obj.reorder_levels([0, 1, 2])\n        tm.assert_equal(obj, result)\n\n        # no change, labels"
  }
]