[
  {
    "id" : "55bc4814-4636-4132-a530-c75df6005fc3",
    "prId" : 37470,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37470#pullrequestreview-518904780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45793167-455c-4de0-bb2c-a5c219f34ed7",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Would it be better to have ``obj`` explicitly parametrized without performing checks inside the test method?\r\n\r\n```\r\n@pytest.mark.parametrize(\"obj\", [Series(...), DataFrame({...})])\r\n```",
        "createdAt" : "2020-10-28T17:08:19Z",
        "updatedAt" : "2020-10-28T17:13:02Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      },
      {
        "id" : "f1f0c8b8-c6f0-4026-9acc-13114a7b33e5",
        "parentId" : "45793167-455c-4de0-bb2c-a5c219f34ed7",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i find this cleaner, also smaller memory footprint because constructing outside gets done at test collection time instead of test runtime",
        "createdAt" : "2020-10-28T17:14:57Z",
        "updatedAt" : "2020-10-28T17:14:57Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "486766aa-d40f-49f4-848f-0805b67d2d70",
        "parentId" : "45793167-455c-4de0-bb2c-a5c219f34ed7",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "OK, understood. Thank you for clarification on the footprint!",
        "createdAt" : "2020-10-28T17:16:37Z",
        "updatedAt" : "2020-10-28T17:16:37Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "10ac0965590e9adae58ea4765caf6e8f3a76901e",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@        obj = DataFrame({\"col1\": range(10, 20), \"col2\": range(20, 30)})\n        if klass is Series:\n            obj = obj[\"col1\"]\n        result = obj.sample(n=3, random_state=eval(func_str)(arg))\n        expected = obj.sample(n=3, random_state=com.random_state(eval(func_str)(arg)))"
  },
  {
    "id" : "4f411f6b-78cc-4550-addb-d4f060c55c88",
    "prId" : 37470,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37470#pullrequestreview-518897028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0650e411-0267-4f2a-bfa5-2f8bcf69e1ac",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Same here.",
        "createdAt" : "2020-10-28T17:08:46Z",
        "updatedAt" : "2020-10-28T17:13:02Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "10ac0965590e9adae58ea4765caf6e8f3a76901e",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +172,176 @@        obj = DataFrame({\"A\": list(\"abc\")})\n        if klass is Series:\n            obj = obj[\"A\"]\n\n        msg = ("
  },
  {
    "id" : "debf4f4e-9ef3-40a0-94a0-71d7301a6abb",
    "prId" : 37470,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37470#pullrequestreview-518903492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dda44759-68c1-41cf-93f9-66905fa379be",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Test is related to Series, contradicts the comment on top of this class.",
        "createdAt" : "2020-10-28T17:11:07Z",
        "updatedAt" : "2020-10-28T17:13:02Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      },
      {
        "id" : "0a92dc04-2f81-46b6-8374-35a1a24d6334",
        "parentId" : "dda44759-68c1-41cf-93f9-66905fa379be",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah, there's further work to be done splitting these up",
        "createdAt" : "2020-10-28T17:15:11Z",
        "updatedAt" : "2020-10-28T17:15:11Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "10ac0965590e9adae58ea4765caf6e8f3a76901e",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +257,261 @@        with pytest.raises(ValueError):\n            ser = Series(range(10))\n            ser.sample(n=1, axis=1)\n\n        # Test weight length compared to correct axis"
  },
  {
    "id" : "71d65222-febf-4c85-87ec-b6ae27f0bb5d",
    "prId" : 38695,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38695#pullrequestreview-558927568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a211d239-9dfc-402f-8851-0693ad6c9332",
        "parentId" : null,
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "any reason why you removed the exclamation mark `!`?",
        "createdAt" : "2020-12-27T12:24:26Z",
        "updatedAt" : "2020-12-27T12:25:39Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "c9e3c47f-0941-4f16-91b1-1bd2f775df5e",
        "parentId" : "a211d239-9dfc-402f-8851-0693ad6c9332",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "I'm not saying it needs to be changed back, it's fine like this, was just wondering if it had any effect",
        "createdAt" : "2020-12-27T12:27:14Z",
        "updatedAt" : "2020-12-27T12:27:14Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "34fce5ed-394b-4451-b542-332abc0765be",
        "parentId" : "a211d239-9dfc-402f-8851-0693ad6c9332",
        "authorId" : "87a999ad-4ac0-433b-81a1-6584c37bf3fd",
        "body" : "I guess it's not really a good reason - but I didn't want people to think that it was including punctuation that made it fail. I wanted to make it clear that what was failing was that it was any string at all.\r\n\r\nIn a couple of other places in various related PRs I changed random things like \"aasdf\" to \"invalid_plot_kind\" or whatever just to make the test clearer and this goes along with that.",
        "createdAt" : "2020-12-27T12:32:52Z",
        "updatedAt" : "2020-12-27T12:32:52Z",
        "lastEditedBy" : "87a999ad-4ac0-433b-81a1-6584c37bf3fd",
        "tags" : [
        ]
      },
      {
        "id" : "4ad03481-71c0-41d3-8448-4135d4800343",
        "parentId" : "a211d239-9dfc-402f-8851-0693ad6c9332",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "sure, makes sense - thanks for all your help with these tests!",
        "createdAt" : "2020-12-27T13:00:01Z",
        "updatedAt" : "2020-12-27T13:00:01Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "935ec81106651e487a108ebaa9edd782bf63b27f",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +72,76 @@        )\n        with pytest.raises(ValueError, match=msg):\n            obj.sample(random_state=\"a_string\")\n\n    def test_sample_wont_accept_n_and_frac(self, obj):"
  }
]