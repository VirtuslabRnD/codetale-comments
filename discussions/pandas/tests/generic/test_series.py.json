[
  {
    "id" : "0859e003-d2a8-422e-84fe-cd68dc09a005",
    "prId" : 22517,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22517#pullrequestreview-153723231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add period & timedelta here as well :<",
        "createdAt" : "2018-08-29T12:27:52Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7cfc8194-a0c4-4049-a1ee-12a64477472d",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we dont really have a great place for these series / index tests functionailty, except for test_base which is already too big.\r\n\r\ncc @jbrockmendel @mroeschke ",
        "createdAt" : "2018-08-29T12:30:27Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0398f7ba-39ff-484b-bf8f-db9efd1f94f1",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "body" : "ofc, will do asap, thanks for the input",
        "createdAt" : "2018-08-29T15:23:21Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "tags" : [
        ]
      },
      {
        "id" : "cc891783-ef76-4b8b-bb7c-2f28b4473c5a",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "body" : "Sorry for the delay on this, but can you please clarify? I wasn't sure if it was expected that we can shift Period / Timedelta's or if we're supposed to shift by them, things I've tested below:\r\n\r\nShifting on them:\r\n```python\r\n>>> pd.Timedelta('1 days 2 hours').shift\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-17-fc984c065985>\", line 1, in <module>\r\n    pd.Timedelta('1 days 2 hours').shift\r\nAttributeError: 'Timedelta' object has no attribute 'shift'\r\n>>> pd.Period('2011-01', 'M').shift\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-18-d3c2e47fd2e3>\", line 1, in <module>\r\n    pd.Period('2011-01', 'M').shift\r\nAttributeError: 'Period' object has no attribute 'shift'\r\n```\r\n\r\nShifting with them:\r\n```python\r\n>>> pd.date_range('1/1/2011', periods=24, freq='H').shift(pd.Timedelta('1 days 2 hours'))\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-19-f8499141727f>\", line 1, in <module>\r\n    pd.date_range('1/1/2011', periods=24, freq='H').shift(pd.Timedelta('1 days 2 hours'))\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/core/indexes/datetimelike.py\", line 784, in shift\r\n    start = self[0] + n * self.freq\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/tseries/offsets.py\", line 425, in __rmul__\r\n    return self.__mul__(someInt)\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/tseries/offsets.py\", line 422, in __mul__\r\n    **self.kwds)\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/tseries/offsets.py\", line 195, in __init__\r\n    self.n = int(n)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'Timedelta'\r\n>>> pd.date_range('1/1/2011', periods=24, freq='H').shift(pd.Period('2011-02', 'M'))\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2963, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-24-b87cfa9cba95>\", line 1, in <module>\r\n    pd.date_range('1/1/2011', periods=24, freq='H').shift(pd.Period('2011-02', 'M'))\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/core/indexes/datetimelike.py\", line 784, in shift\r\n    start = self[0] + n * self.freq\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/tseries/offsets.py\", line 425, in __rmul__\r\n    return self.__mul__(someInt)\r\n  File \"/anaconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas/tseries/offsets.py\", line 421, in __mul__\r\n    return self.__class__(n=someInt * self.n, normalize=self.normalize,\r\nTypeError: unsupported operand type(s) for *: 'Period' and 'int'\r\n```\r\n\r\nGenuine apologies if I'm being stupid here!",
        "createdAt" : "2018-09-06T23:38:41Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "tags" : [
        ]
      },
      {
        "id" : "40e2c156-20cc-44ee-b79b-7a0ec7732810",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think the idea is to make a series with a datetimeindex and shift using the `freq` argument.\r\n\r\n\r\n```python\r\nIn [16]: s = pd.Series(range(5), index=pd.date_range(\"2017\", periods=5))\r\n\r\nIn [17]: s.shift(freq=pd.Timedelta('1D'))\r\nOut[17]:\r\n2017-01-02    0\r\n2017-01-03    1\r\n2017-01-04    2\r\n2017-01-05    3\r\n2017-01-06    4\r\nFreq: D, dtype: int64\r\n```\r\n\r\nit'll complicate the test a bit. let us know if you need assistance.",
        "createdAt" : "2018-09-07T20:48:27Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c980896b-90ff-4df8-be9d-c66a5613723b",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "body" : "Added the test for timedelta, I couldn't find any docs on the intended usage of shifting by pd.Period? I tried a few approaches but couldn't get any to work. Happy to add the test if you could provide a small example!",
        "createdAt" : "2018-09-09T22:02:40Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "997c4bf0-6f89-45c6-8eb6-0783741cce42",
        "tags" : [
        ]
      },
      {
        "id" : "0aaa55d1-e8e8-41da-bd03-ba0e1a31a59f",
        "parentId" : "1a4b084c-a442-4660-b249-238a4d31b1b6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm not sure if period is valid there. I only tried timedelta.",
        "createdAt" : "2018-09-10T11:03:49Z",
        "updatedAt" : "2018-09-14T23:12:06Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a88224bb2a47838ac626927ed6e29fdd34abef",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +230,234 @@\n    @pytest.mark.parametrize(\"s\", [\n        Series([np.arange(5)]),\n        pd.date_range('1/1/2011', periods=24, freq='H'),\n        pd.Series(range(5), index=pd.date_range(\"2017\", periods=5))"
  },
  {
    "id" : "44156704-e70d-49dd-99e8-4796e623bd49",
    "prId" : 25603,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25603#pullrequestreview-212551202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a623e08-e89f-43dd-8525-64ad69eb1658",
        "parentId" : null,
        "authorId" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "body" : "nitpick: Do we need to define this string 3 times in this file?",
        "createdAt" : "2019-03-08T22:50:41Z",
        "updatedAt" : "2019-03-08T22:56:05Z",
        "lastEditedBy" : "ebd948a0-48ff-4dbe-a0c8-476953d697fa",
        "tags" : [
        ]
      },
      {
        "id" : "8d07c019-116b-4002-9c23-3f2da28582f5",
        "parentId" : "0a623e08-e89f-43dd-8525-64ad69eb1658",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "fine for now...\r\n\r\nthis is surely an indication of tests that could be refactored to use more pytest idiom... but that'll be for a follow-up. \r\n\r\nalso the messages serve as additional documentation for the tests\r\n\r\n\r\n",
        "createdAt" : "2019-03-09T07:16:07Z",
        "updatedAt" : "2019-03-09T07:16:08Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b3789ebca38887b123830cc7e1094ef322cb685",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +116,120 @@\n        # multiple bool are still an error\n        msg = \"The truth value of a Series is ambiguous\"\n        for s in [Series([True, True]), Series([False, False])]:\n            with pytest.raises(ValueError, match=msg):"
  },
  {
    "id" : "7f316ad6-c75d-4fed-982c-37f66963d554",
    "prId" : 32886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32886#pullrequestreview-378925391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8892d8bf-fbbf-4d10-9905-797b60e53a99",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "See below: `test_to_xarray_multiindex`",
        "createdAt" : "2020-03-21T15:12:42Z",
        "updatedAt" : "2020-03-21T21:22:30Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e09cc3a0e0118f6ce3618bad6f3285c75e3cfce",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +227,231 @@    def test_to_xarray_index_types(self, indices):\n        if isinstance(indices, ABCMultiIndex):\n            pytest.skip(\"MultiIndex is tested separately\")\n\n        from xarray import DataArray"
  },
  {
    "id" : "f8a6cf3c-566e-4ee5-91aa-66c14204ae04",
    "prId" : 32886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32886#pullrequestreview-378925391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5723a562-d079-427e-90f8-c40bb5ec1d67",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Potentially this could benefit from using the MultiIndex cases from `indices`. I didn't want to include it in this PR though",
        "createdAt" : "2020-03-21T15:14:24Z",
        "updatedAt" : "2020-03-21T21:22:30Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e09cc3a0e0118f6ce3618bad6f3285c75e3cfce",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +244,248 @@\n    @td.skip_if_no(\"xarray\", min_version=\"0.7.0\")\n    def test_to_xarray_multiindex(self):\n        from xarray import DataArray\n"
  },
  {
    "id" : "df7770fb-fb31-4c6e-b756-94318c09cf84",
    "prId" : 32886,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32886#pullrequestreview-378956767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "209b7690-55c8-4402-bc28-587648b50ba9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cc @jbrockmendel your test moving PR for xrray might need rebasing after this",
        "createdAt" : "2020-03-21T20:32:16Z",
        "updatedAt" : "2020-03-21T21:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "460a87b6-2903-4238-8487-631b2839fe71",
        "parentId" : "209b7690-55c8-4402-bc28-587648b50ba9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually i think we *always* have a > 0.7.0 xarary?",
        "createdAt" : "2020-03-21T20:32:43Z",
        "updatedAt" : "2020-03-21T21:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7586c3d0-e81f-4487-9f9a-af8721a12204",
        "parentId" : "209b7690-55c8-4402-bc28-587648b50ba9",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "I can check that as a follow-up. There are more spots where this condition is used",
        "createdAt" : "2020-03-21T22:31:02Z",
        "updatedAt" : "2020-03-21T22:31:03Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e09cc3a0e0118f6ce3618bad6f3285c75e3cfce",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +258,262 @@        tm.assert_series_equal(result.to_series(), s)\n\n    @td.skip_if_no(\"xarray\", min_version=\"0.7.0\")\n    def test_to_xarray(self):\n        from xarray import DataArray"
  }
]