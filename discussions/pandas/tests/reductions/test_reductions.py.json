[
  {
    "id" : "d006a68b-1376-4e17-a62d-ab4a304a618a",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187633930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e3d807a-7223-47cb-b37e-57d4aa756e3b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really? this doesn't seem right",
        "createdAt" : "2018-12-23T19:19:34Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "da0077bb-9580-4d49-9d7a-0b1260312c52",
        "parentId" : "1e3d807a-7223-47cb-b37e-57d4aa756e3b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "What would you expect it to be?  For Series idxmin/idxmax would give np.nan",
        "createdAt" : "2018-12-23T22:07:58Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +128,132 @@        assert obj.argmax() == 2\n        assert obj.argmin(skipna=False) == -1\n        assert obj.argmax(skipna=False) == -1\n\n        obj = Index([pd.NaT])"
  },
  {
    "id" : "7a377b1e-2d6a-43f1-81aa-6641014693cf",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187633910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b01045-e355-455f-a34a-2d04fed12a0d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can parameterize over skipna in a lot of the code you added to tests",
        "createdAt" : "2018-12-23T19:19:53Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7fa6b6ac-ff2e-4289-95d9-bb8ed8da93a5",
        "parentId" : "72b01045-e355-455f-a34a-2d04fed12a0d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We just implemented test_reductions, still need to move over the reduction tests from tests.indexes and tests.frames.  After they're all in one place is when to really focus on parametrization.  ",
        "createdAt" : "2018-12-23T22:07:03Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +599,603 @@        # GH#23282\n        assert nat_ser.min() is pd.NaT\n        assert nat_ser.max() is pd.NaT\n        assert nat_ser.min(skipna=False) is pd.NaT\n        assert nat_ser.max(skipna=False) is pd.NaT"
  },
  {
    "id" : "dfc07f33-bd70-4be8-b0df-237b6f7f9134",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187734502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f05648-ed0e-43b4-9880-0790ed5a8942",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "put this test on the list for splitting / parametrizing later",
        "createdAt" : "2018-12-24T00:37:00Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca6ac2a0-f2a9-41ee-a857-a8a0ca1de6fb",
        "parentId" : "78f05648-ed0e-43b4-9880-0790ed5a8942",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "agreed",
        "createdAt" : "2018-12-24T23:13:34Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +93,97 @@                else:\n                    assert result == -1\n\n                for dtype in [\"M8[ns]\", \"datetime64[ns, UTC]\"]:\n                    # cases with empty Series/DatetimeIndex"
  },
  {
    "id" : "c2121d17-a9ab-40e7-9908-d846a8774b85",
    "prId" : 25304,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25304#pullrequestreview-204210479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these should go with the categorical tests not here",
        "createdAt" : "2019-02-15T12:02:31Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a2a3464-2940-4b44-a863-9fb0f767f7f7",
        "parentId" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Jeff, please looks at the rest of the test. This addition is very logical here (it is about categorical Series, not Categorical). Inside the categorical tests, there are no tests for Series[categorical].min(). That is only tested in the test above.",
        "createdAt" : "2019-02-15T12:05:27Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0053ccba-1e44-408c-8cfa-41597cfd6a85",
        "parentId" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "at the very least make this a new test name",
        "createdAt" : "2019-02-15T12:11:23Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec1fa9f5cab13e4378746a4654262594597e250c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +964,968 @@        # TODO deprecate numeric_only argument for Categorical and use\n        # skipna as well, see GH25303\n        cat = Series(Categorical(\n            [\"a\", \"b\", np.nan, \"a\"], categories=['b', 'a'], ordered=True))\n"
  },
  {
    "id" : "9c0cca3a-7222-42a9-a831-bb43c96724f8",
    "prId" : 27929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27929#pullrequestreview-279525610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e61bc6f2-7433-4d28-bbaa-4547740bdd44",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Why idd this change?",
        "createdAt" : "2019-08-23T18:07:10Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "05344d64-b844-4769-821c-46c72d3b86ea",
        "parentId" : "e61bc6f2-7433-4d28-bbaa-4547740bdd44",
        "authorId" : "5d486e53-1409-4c5f-9cac-03c066f838b9",
        "body" : "Please refer to the following comment.",
        "createdAt" : "2019-08-26T10:55:29Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "5d486e53-1409-4c5f-9cac-03c066f838b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "260201cf5bc2419a229222f2258a4bb6d31b988c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1044,1048 @@        _min = cat.min()\n        _max = cat.max()\n        assert _min == \"c\"\n        assert _max == \"b\"\n"
  },
  {
    "id" : "7be1121d-9200-4cc8-b919-3d1247a512a7",
    "prId" : 28289,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28289#pullrequestreview-310775243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeefd864-ed39-4b8f-84f4-2380875182bc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "let's split this to a separate test that is paramterized (followon)",
        "createdAt" : "2019-11-02T15:22:58Z",
        "updatedAt" : "2019-11-02T15:23:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6c6b87a32587a44344dbd46695b0eed6cc50b01",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +301,305 @@\n        # invalid ops\n        for op in [\"skew\", \"kurt\", \"sem\", \"prod\", \"var\"]:\n            msg = \"reduction operation '{}' not allowed for this dtype\"\n            with pytest.raises(TypeError, match=msg.format(op)):"
  },
  {
    "id" : "2f4f8105-a1e7-4259-98fe-80910322ca1d",
    "prId" : 30113,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30113#pullrequestreview-328396001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb5428dd-8c0e-4f08-8d64-f753c08fc3ef",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how is this working? argmin/argmax are no longer defined for series",
        "createdAt" : "2019-12-06T18:52:05Z",
        "updatedAt" : "2019-12-06T18:52:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "20ee8365-ef33-4e3e-a233-22ba938a421e",
        "parentId" : "bb5428dd-8c0e-4f08-8d64-f753c08fc3ef",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "its defined on IndexOpsMixin",
        "createdAt" : "2019-12-06T18:58:06Z",
        "updatedAt" : "2019-12-06T18:58:06Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "93202d3e-0c06-4d9b-adc6-ef8d53d79518",
        "parentId" : "bb5428dd-8c0e-4f08-8d64-f753c08fc3ef",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think via IndexOpsMixin.",
        "createdAt" : "2019-12-06T18:59:36Z",
        "updatedAt" : "2019-12-06T18:59:49Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a493e6e07e98f33428b2217f962940f053258ab5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +706,710 @@        assert result == expected\n\n        result = s.argmin()\n\n        assert result == expected"
  },
  {
    "id" : "36e7588c-4f35-44c5-804e-539791e0fe43",
    "prId" : 32035,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32035#pullrequestreview-359414595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86c3a9dc-60dd-4f5c-a3d3-2a3b4a60a799",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "explicity test for is NaT on the returns",
        "createdAt" : "2020-02-16T16:32:37Z",
        "updatedAt" : "2020-02-16T23:19:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "244a9648bcecfa18432ebadcdf8429081591baf3",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +232,236 @@    def test_minmax_timedelta_empty_or_na(self, op):\n        # Return NaT\n        obj = TimedeltaIndex([])\n        assert getattr(obj, op)() is pd.NaT\n"
  },
  {
    "id" : "bef5d70f-a806-45ab-9136-90b2e5a7152b",
    "prId" : 32035,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32035#pullrequestreview-359415730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c24d4be-0c60-444d-8255-4f292b3afd5f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this needed?",
        "createdAt" : "2020-02-16T16:33:24Z",
        "updatedAt" : "2020-02-16T23:19:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b269153e-8805-47cd-93fd-555e3ab927b8",
        "parentId" : "2c24d4be-0c60-444d-8255-4f292b3afd5f",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "I broke this into its own test since it allows for parametrizing over these dtypes without repeating all of `test_nanops` (which was / is pretty big), and this was conceptually a bit more specific than just \"testing nanops\"",
        "createdAt" : "2020-02-16T16:41:47Z",
        "updatedAt" : "2020-02-16T23:19:13Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "34c594e1-dc80-487f-80be-f47b36eb47c5",
        "parentId" : "2c24d4be-0c60-444d-8255-4f292b3afd5f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i get that, but why is arg_op specifically needed? what is its purpose",
        "createdAt" : "2020-02-16T16:45:14Z",
        "updatedAt" : "2020-02-16T23:19:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e26170c7-e058-4169-88b9-b086bb6e74c2",
        "parentId" : "2c24d4be-0c60-444d-8255-4f292b3afd5f",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Oh, I think the name of the method being tested changes if it's a Series or Index (idxmin or argmin) so it has to be created dynamically in the test?",
        "createdAt" : "2020-02-16T16:54:10Z",
        "updatedAt" : "2020-02-16T23:19:13Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "244a9648bcecfa18432ebadcdf8429081591baf3",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +112,116 @@    def test_nanops_empty_object(self, opname, index_or_series, dtype):\n        klass = index_or_series\n        arg_op = \"arg\" + opname if klass is Index else \"idx\" + opname\n\n        obj = klass([], dtype=dtype)"
  },
  {
    "id" : "194572df-6b9d-4094-92d1-15292a1cada8",
    "prId" : 34814,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34814#pullrequestreview-551404852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e1dd7fa-5e4e-4e27-9d51-55378e947048",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "an you add min_count as a paramterizatoon (result i think is the same), also NA",
        "createdAt" : "2020-12-14T14:08:25Z",
        "updatedAt" : "2020-12-28T13:40:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7a174601-abfb-4b0b-95a5-72904a735aa5",
        "parentId" : "4e1dd7fa-5e4e-4e27-9d51-55378e947048",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> add min_count as a paramterizatoon\r\n\r\nAs mentioned above, min_count is not a valid keyword for mean()\r\n\r\n> , also NA\r\n\r\nCan you clarify this? Parametrize for different NA values? Note that this test is for nullable dtypes, so there is only a single possible NA value (not for construction of course, but we are not testing construction here)",
        "createdAt" : "2020-12-14T14:14:11Z",
        "updatedAt" : "2020-12-28T13:40:46Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e80a1d243f248365a024614d346a20c18a975e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +682,686 @@    @pytest.mark.parametrize(\"method\", [\"mean\"])\n    @pytest.mark.parametrize(\"dtype\", [\"Float64\", \"Int64\", \"boolean\"])\n    def test_ops_consistency_on_empty_nullable(self, method, dtype):\n\n        # GH#34814"
  },
  {
    "id" : "c9453914-daf2-4639-a276-bfe603844c6f",
    "prId" : 38720,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38720#pullrequestreview-560060776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "989173f9-5c25-49f4-85f7-ff1d6657a53e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is a wrong error message, since it complains about numeric_only, but the actual code passes `bool_only`.\r\n\r\n(so if we start asserting the message, let's take the opportunity to ensure it's a correct message)",
        "createdAt" : "2020-12-30T13:41:38Z",
        "updatedAt" : "2020-12-30T14:41:35Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fe783bf6-8aa5-453c-be44-696ce6b73bae",
        "parentId" : "989173f9-5c25-49f4-85f7-ff1d6657a53e",
        "authorId" : "87a999ad-4ac0-433b-81a1-6584c37bf3fd",
        "body" : "Ok - I made an attempt. Take a look at the changes to pandas/core/generic.py and please let me know if I handled it the right way. I wasn't quite sure which method was the right one to fix the error message.",
        "createdAt" : "2020-12-30T14:02:57Z",
        "updatedAt" : "2020-12-30T14:41:35Z",
        "lastEditedBy" : "87a999ad-4ac0-433b-81a1-6584c37bf3fd",
        "tags" : [
        ]
      },
      {
        "id" : "c321e382-8737-426d-99ec-e882cecb7f66",
        "parentId" : "989173f9-5c25-49f4-85f7-ff1d6657a53e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see below, this is too complicated to fix in this PR",
        "createdAt" : "2020-12-30T14:05:44Z",
        "updatedAt" : "2020-12-30T14:41:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "35eceb9d5396306be11046c63d21394d15998b23",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +901,905 @@        with pytest.raises(NotImplementedError, match=msg):\n            s.any(bool_only=True)\n        msg = \"Series.all does not implement numeric_only.\"\n        with pytest.raises(NotImplementedError, match=msg):\n            s.all(bool_only=True)"
  }
]