[
  {
    "id" : "d006a68b-1376-4e17-a62d-ab4a304a618a",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187633930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e3d807a-7223-47cb-b37e-57d4aa756e3b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really? this doesn't seem right",
        "createdAt" : "2018-12-23T19:19:34Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "da0077bb-9580-4d49-9d7a-0b1260312c52",
        "parentId" : "1e3d807a-7223-47cb-b37e-57d4aa756e3b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "What would you expect it to be?  For Series idxmin/idxmax would give np.nan",
        "createdAt" : "2018-12-23T22:07:58Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +128,132 @@        assert obj.argmax() == 2\n        assert obj.argmin(skipna=False) == -1\n        assert obj.argmax(skipna=False) == -1\n\n        obj = Index([pd.NaT])"
  },
  {
    "id" : "7a377b1e-2d6a-43f1-81aa-6641014693cf",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187633910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b01045-e355-455f-a34a-2d04fed12a0d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can parameterize over skipna in a lot of the code you added to tests",
        "createdAt" : "2018-12-23T19:19:53Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7fa6b6ac-ff2e-4289-95d9-bb8ed8da93a5",
        "parentId" : "72b01045-e355-455f-a34a-2d04fed12a0d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We just implemented test_reductions, still need to move over the reduction tests from tests.indexes and tests.frames.  After they're all in one place is when to really focus on parametrization.  ",
        "createdAt" : "2018-12-23T22:07:03Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +599,603 @@        # GH#23282\n        assert nat_ser.min() is pd.NaT\n        assert nat_ser.max() is pd.NaT\n        assert nat_ser.min(skipna=False) is pd.NaT\n        assert nat_ser.max(skipna=False) is pd.NaT"
  },
  {
    "id" : "dfc07f33-bd70-4be8-b0df-237b6f7f9134",
    "prId" : 24293,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24293#pullrequestreview-187734502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f05648-ed0e-43b4-9880-0790ed5a8942",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "put this test on the list for splitting / parametrizing later",
        "createdAt" : "2018-12-24T00:37:00Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ca6ac2a0-f2a9-41ee-a857-a8a0ca1de6fb",
        "parentId" : "78f05648-ed0e-43b4-9880-0790ed5a8942",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "agreed",
        "createdAt" : "2018-12-24T23:13:34Z",
        "updatedAt" : "2018-12-28T23:37:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4028a14ef585dae19805f05db74ad1495e09e8",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +93,97 @@                else:\n                    assert result == -1\n\n                for dtype in [\"M8[ns]\", \"datetime64[ns, UTC]\"]:\n                    # cases with empty Series/DatetimeIndex"
  },
  {
    "id" : "c2121d17-a9ab-40e7-9908-d846a8774b85",
    "prId" : 25304,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25304#pullrequestreview-204210479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these should go with the categorical tests not here",
        "createdAt" : "2019-02-15T12:02:31Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a2a3464-2940-4b44-a863-9fb0f767f7f7",
        "parentId" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Jeff, please looks at the rest of the test. This addition is very logical here (it is about categorical Series, not Categorical). Inside the categorical tests, there are no tests for Series[categorical].min(). That is only tested in the test above.",
        "createdAt" : "2019-02-15T12:05:27Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0053ccba-1e44-408c-8cfa-41597cfd6a85",
        "parentId" : "1d65b839-34b8-4403-bf76-c3b51375d522",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "at the very least make this a new test name",
        "createdAt" : "2019-02-15T12:11:23Z",
        "updatedAt" : "2019-02-15T12:32:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec1fa9f5cab13e4378746a4654262594597e250c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +964,968 @@        # TODO deprecate numeric_only argument for Categorical and use\n        # skipna as well, see GH25303\n        cat = Series(Categorical(\n            [\"a\", \"b\", np.nan, \"a\"], categories=['b', 'a'], ordered=True))\n"
  }
]