[
  {
    "id" : "b4da75ee-e02e-48b8-af66-95192002e906",
    "prId" : 19377,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19377#pullrequestreview-91312391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03a5b044-f2c8-4a93-a8c8-4061b3f3042a",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Reference issue number under all of your added tests.",
        "createdAt" : "2018-01-24T20:04:09Z",
        "updatedAt" : "2018-01-26T16:55:29Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "b47d5fd859669abe73dd729d6ed8ea9850912934",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +200,204 @@        # df2 = SparseDataFrame([x2_sparse, y])\n\n    def test_constructor_from_dense_series(self):\n        # GH 19393\n        # series with name"
  },
  {
    "id" : "a6730e8e-a247-4e7b-90ca-f3c2650a96a1",
    "prId" : 19876,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19876#pullrequestreview-99095987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f32ef56-a88e-4f5f-ac5e-629b268e435d",
        "parentId" : null,
        "authorId" : "53a68b19-fc1e-4297-8a57-f03a14b86b07",
        "body" : "source code change, please review",
        "createdAt" : "2018-02-24T01:34:16Z",
        "updatedAt" : "2018-02-24T01:34:16Z",
        "lastEditedBy" : "53a68b19-fc1e-4297-8a57-f03a14b86b07",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0624de26eaa633cced9709d6c86285fe037847f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +249,253 @@        trains = np.arange(100)\n        thresholds = [10, 20, 30, 40, 50, 60]\n        tuples = [(i, j) for i in trains for j in thresholds]\n        index = pd.MultiIndex.from_tuples(tuples,\n                                          names=['trains', 'thresholds'])"
  },
  {
    "id" : "4faeaf1a-d50f-4136-bee0-543108ab7025",
    "prId" : 19876,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19876#pullrequestreview-99095991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce7ff31c-91bc-4a9f-a1f0-a353495cd588",
        "parentId" : null,
        "authorId" : "53a68b19-fc1e-4297-8a57-f03a14b86b07",
        "body" : "ditto",
        "createdAt" : "2018-02-24T01:34:23Z",
        "updatedAt" : "2018-02-24T01:34:23Z",
        "lastEditedBy" : "53a68b19-fc1e-4297-8a57-f03a14b86b07",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0624de26eaa633cced9709d6c86285fe037847f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +251,255 @@        tuples = [(i, j) for i in trains for j in thresholds]\n        index = pd.MultiIndex.from_tuples(tuples,\n                                          names=['trains', 'thresholds'])\n        matrix = np.empty((len(index), len(trains)))\n        matrix.fill(np.nan)"
  },
  {
    "id" : "679d6009-438b-4ac4-81b2-f880fd7f5d1b",
    "prId" : 26684,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26684#pullrequestreview-250930857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adef1088-5a24-43cd-8999-d924004c002f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "you put this in a class where those warnings you want to check for are generally ignored. Does that work? (just wondering)\r\n\r\nMaybe we can also put it at the end of the file as a function instead of method, to avoid possible concerns about that.",
        "createdAt" : "2019-06-18T08:03:29Z",
        "updatedAt" : "2019-06-18T08:03:29Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "307f229e-49fe-490e-86e1-5cb45a493a02",
        "parentId" : "adef1088-5a24-43cd-8999-d924004c002f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "But since the tests are passing, this is probably fine ;)",
        "createdAt" : "2019-06-18T08:04:19Z",
        "updatedAt" : "2019-06-18T08:04:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "24b61a34-4630-4616-b5ed-668948e3f340",
        "parentId" : "adef1088-5a24-43cd-8999-d924004c002f",
        "authorId" : "7b95752b-5dde-435f-a727-8d1b724e2cc0",
        "body" : "This actually works fine, `tm.assert_produces_warning` doesn't seem to care about filterwarnings. Remove the warning from `to_sparse` and this test fails. \r\n\r\nI wanted to keep both (`test_dense_to_sparse` and `test_deprecated_dense_to_sparse`) close for easy reference, thats all. Open to shifting it to the end though. ",
        "createdAt" : "2019-06-18T08:19:33Z",
        "updatedAt" : "2019-06-18T08:19:34Z",
        "lastEditedBy" : "7b95752b-5dde-435f-a727-8d1b724e2cc0",
        "tags" : [
        ]
      },
      {
        "id" : "b2043890-1174-4fea-9733-9d5a2b958b75",
        "parentId" : "adef1088-5a24-43cd-8999-d924004c002f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Thanks for checking, then that sounds good!",
        "createdAt" : "2019-06-18T08:21:59Z",
        "updatedAt" : "2019-06-18T08:21:59Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f888c5aa8524c27f5897c6e9fc1bf9c58c74480",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +361,365 @@                                        check_stacklevel=False):\n            result = df.to_sparse()\n        tm.assert_frame_equal(result, sparse_df)\n\n    def test_density(self):"
  },
  {
    "id" : "18b910ad-c3fa-4cca-9359-16831ca59ae2",
    "prId" : 27321,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27321#pullrequestreview-260414908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0eb4623-76cf-4911-be29-7ce0a9a30160",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this not just ``callable(op)``?",
        "createdAt" : "2019-07-10T19:13:32Z",
        "updatedAt" : "2019-07-11T03:22:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1e5865d6-3603-4280-bedd-65e2fd820f50",
        "parentId" : "d0eb4623-76cf-4911-be29-7ce0a9a30160",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because we don't want e.g. `operator.add`",
        "createdAt" : "2019-07-10T22:55:47Z",
        "updatedAt" : "2019-07-11T03:22:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "e6a18596-f0c9-42ba-98b5-b5778d2d1c20",
        "parentId" : "d0eb4623-76cf-4911-be29-7ce0a9a30160",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k can you add that as a comment (future PR ok), as its not obvious",
        "createdAt" : "2019-07-10T23:46:02Z",
        "updatedAt" : "2019-07-11T03:22:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "39940ab2-8fdf-4cca-b8e4-52890883e85c",
        "parentId" : "d0eb4623-76cf-4911-be29-7ce0a9a30160",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2019-07-11T00:09:20Z",
        "updatedAt" : "2019-07-11T03:22:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "14010c802d8cb36d663f702db4b356f654162457",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +428,432 @@\n            # catch lambdas but not non-lambdas e.g. operator.add\n            if op in [operator.floordiv, ops.rfloordiv] or isinstance(op, LambdaType):\n                # GH#27231 Series sets 1//0 to np.inf, which SparseArray\n                #  does not do (yet)"
  },
  {
    "id" : "b68c95fb-e882-44c4-8650-f59589890c2f",
    "prId" : 28107,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28107#pullrequestreview-278762420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "833a11be-04fd-4fca-a1ca-8d412d74082d",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Can we also have a test that constructs the expected value explicitly?",
        "createdAt" : "2019-08-23T01:41:56Z",
        "updatedAt" : "2019-08-27T18:43:54Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "52d3f874c169b56f0a5c8f21b0a35a1bede3c08c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1503,1507 @@        expected = DataFrame(edata)\n        tm.assert_frame_equal(result.to_dense(), expected)\n\n\n@pytest.mark.filterwarnings(\"ignore:Sparse:FutureWarning\")"
  }
]