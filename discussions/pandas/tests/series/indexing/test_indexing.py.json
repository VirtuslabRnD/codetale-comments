[
  {
    "id" : "87147651-78c3-4aa7-b67b-6edea7b93886",
    "prId" : 20841,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20841#pullrequestreview-116044435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9915a86d-c275-401c-8ce9-fea43fd2f1ed",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "instead of this test (or in addition to), I think you should be able to remove the skip from `test_take_series` in the categorical extension tests",
        "createdAt" : "2018-04-27T15:34:08Z",
        "updatedAt" : "2018-04-30T11:17:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a9093b0a-79f9-412a-b189-cfe6dcb30dfd",
        "parentId" : "9915a86d-c275-401c-8ce9-fea43fd2f1ed",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "That still fails because of https://github.com/pandas-dev/pandas/issues/20747. The unobserved categories are still present. I've updated the skip.",
        "createdAt" : "2018-04-27T15:52:26Z",
        "updatedAt" : "2018-04-30T11:17:47Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "db7546ab-4fbf-452f-8cf2-e51b5a5db96c",
        "parentId" : "9915a86d-c275-401c-8ce9-fea43fd2f1ed",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, yes, that's still there :)",
        "createdAt" : "2018-04-27T18:45:41Z",
        "updatedAt" : "2018-04-30T11:17:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "12485c525cd18f967c473ccb5f99c887e4f972b2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +754,758 @@\n\ndef test_take_categorical():\n    # https://github.com/pandas-dev/pandas/issues/20664\n    s = Series(pd.Categorical(['a', 'b', 'c']))"
  },
  {
    "id" : "95a059ae-619e-4fe2-971b-838f60c85e02",
    "prId" : 22699,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22699#pullrequestreview-155990085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9dae5f7-b9bf-404b-a8ae-c7cb49317455",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "same here, should we ignore this?",
        "createdAt" : "2018-09-17T12:50:35Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "1da6958b-f46d-4d50-aa19-5398c0783438",
        "parentId" : "e9dae5f7-b9bf-404b-a8ae-c7cb49317455",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think so... but not sure. My thinking was we're taking user-providing input and passing it straight through to numpy, so we want to directly match NumPy's behavior. *We* don't want to filter the warning in pandas, we want users to see it if they're providing bad input. So we only ignore it in the test.",
        "createdAt" : "2018-09-17T15:46:41Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4990fc2d984b536e5c7c97ad55d4f550ae661867",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +392,396 @@\n# FutureWarning from NumPy about [slice(None, 5).\n@pytest.mark.filterwarnings(\"ignore:Using a non-tuple:FutureWarning\")\ndef test_basic_getitem_setitem_corner(test_data):\n    # invalid tuples, e.g. td.ts[:, None] vs. td.ts[:, 2]"
  },
  {
    "id" : "8ae506f5-b95f-4cf7-864f-6dfb7a4e0b23",
    "prId" : 27303,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27303#pullrequestreview-259253521",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e4abf51-2354-44d2-9c44-ea29e6e670cd",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Lost previous comment but can you use `tm.assert_series_equal` here? Also move to a separate test (`test_timedelta_assignment_to_object`?)",
        "createdAt" : "2019-07-09T03:26:37Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "64715feb-2fbf-4116-a65c-bec4e1f2f938",
        "parentId" : "6e4abf51-2354-44d2-9c44-ea29e6e670cd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "will do",
        "createdAt" : "2019-07-09T03:30:24Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4731aaf018e3ac07f9ae38c69478215a4ee036a7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +670,674 @@    ser[\"td\"] = td\n    tm.assert_series_equal(ser, expected)\n    assert isinstance(ser[\"td\"], pd.Timedelta)\n\n    ser = pd.Series([\"x\"])"
  },
  {
    "id" : "4b676a64-1608-440e-b2d0-58e090903aed",
    "prId" : 27303,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27303#pullrequestreview-259758191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85f4c217-7204-40ca-99f5-f2b132566884",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "new test pls & parameterize over timedelta  & np.timedelta64 as wel",
        "createdAt" : "2019-07-09T21:02:29Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4731aaf018e3ac07f9ae38c69478215a4ee036a7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +664,668 @@)\ndef test_append_timedelta_does_not_cast(td):\n    # GH#22717 inserting a Timedelta should _not_ cast to int64\n    expected = pd.Series([\"x\", td], index=[0, \"td\"], dtype=object)\n"
  },
  {
    "id" : "b006a578-b579-4050-8026-80cf455e1ca8",
    "prId" : 27303,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27303#pullrequestreview-259829323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "482fb4f7-8e38-4c32-be81-b5eb0f15209b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should really put this in a test_timedelta.py (and take the existing tests out of test_indexing).",
        "createdAt" : "2019-07-09T21:03:35Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a15d195d-e509-409b-9a7c-6ac341438600",
        "parentId" : "482fb4f7-8e38-4c32-be81-b5eb0f15209b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "after the current batch of PRs I'm planning on doing a review of the indexing tests.  There are multiple dimensions along which we can sort/parametrize, any of which would be reasonable, but my guess is we are not being consistent about it.",
        "createdAt" : "2019-07-10T01:13:35Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4731aaf018e3ac07f9ae38c69478215a4ee036a7",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +652,656 @@    expected = pd.Series(10 * [np.timedelta64(10, \"m\")])\n    expected.loc[[1, 2, 3]] = pd.Timedelta(np.timedelta64(20, \"m\"))\n    tm.assert_series_equal(s, expected)\n\n"
  },
  {
    "id" : "22f5b91a-4db9-42ca-94d9-732aa6cfae40",
    "prId" : 27303,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27303#pullrequestreview-259758191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a55eef8f-0754-4db1-acd4-414d50b151e0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you compare vs the expected series instead",
        "createdAt" : "2019-07-09T21:03:52Z",
        "updatedAt" : "2019-07-10T17:21:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4731aaf018e3ac07f9ae38c69478215a4ee036a7",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +670,674 @@    ser[\"td\"] = td\n    tm.assert_series_equal(ser, expected)\n    assert isinstance(ser[\"td\"], pd.Timedelta)\n\n    ser = pd.Series([\"x\"])"
  },
  {
    "id" : "376828ef-7804-4f49-8280-c35f302adc02",
    "prId" : 27311,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27311#pullrequestreview-264853165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9338934b-edee-4f57-abed-af62ebfa4836",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do these need to be deep? (no big deal though)",
        "createdAt" : "2019-07-22T12:05:25Z",
        "updatedAt" : "2019-07-22T14:31:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fb0dcab1-4842-4c29-acc5-9a1cff137489",
        "parentId" : "9338934b-edee-4f57-abed-af62ebfa4836",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes",
        "createdAt" : "2019-07-22T14:27:37Z",
        "updatedAt" : "2019-07-22T14:31:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbc18368addb179d1c79301ba7fff3e852efe616",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +674,678 @@        expected = expected.astype(object)\n\n    ser = base.copy(deep=True)\n    ser[0] = nat_val\n    tm.assert_series_equal(ser, expected)"
  }
]