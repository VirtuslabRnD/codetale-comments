[
  {
    "id" : "1e0da728-7be1-4735-b3da-2ea625e5c891",
    "prId" : 37676,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37676#pullrequestreview-530821692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also replicate the `.loc` case in the OP",
        "createdAt" : "2020-11-07T23:56:53Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9ce52526-af4e-4938-ab16-273cffc9e3d0",
        "parentId" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Yes, done.",
        "createdAt" : "2020-11-08T00:09:40Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "711c7d1b-a873-405b-aecc-b8e21ef1df3c",
        "parentId" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i think what jreback was asking for here is to do `ser.loc[mask] = ` in addition to `ser[mask] = `, not putting `ser.loc[mask]` on the RHS.",
        "createdAt" : "2020-11-08T19:42:38Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ff1ece5c-96b2-4cd4-93aa-afa149430002",
        "parentId" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Misunderstood this, adjusted the test",
        "createdAt" : "2020-11-08T21:50:57Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "d24d3065-8fbe-4a4d-b598-18d0420f12fb",
        "parentId" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok this *should* also work for Float EA types, I think we need a fixture that is any_numeric_dtype == any_nullable_int_dtype + float_ea_dtype",
        "createdAt" : "2020-11-15T17:20:28Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "390de60b-d05f-43c8-adeb-81ec380327cf",
        "parentId" : "9a541e4b-008d-4b0b-bb52-580010ee01b3",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Added the fixture. Tests pass locally.",
        "createdAt" : "2020-11-15T18:12:53Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb5506035f3f6f8215bed5810052326169829f9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +146,150 @@\n    def test_setitem_boolean_nullable_int_types(self, any_numeric_dtype):\n        # GH: 26468\n        ser = Series([5, 6, 7, 8], dtype=any_numeric_dtype)\n        ser[ser > 6] = Series(range(4), dtype=any_numeric_dtype)"
  },
  {
    "id" : "ab150b31-95d9-4c6a-816a-68c10ebee5dc",
    "prId" : 37676,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37676#pullrequestreview-530841798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1780718d-7e1a-48cc-a9f7-586bbe66db35",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is the failure on 3.9 something else? https://dev.azure.com/pandas-dev/pandas/_build/results?buildId=47857&view=logs&j=f016abb9-7827-5fa2-935a-22bd9b1477b6&t=c86edbe1-8c1d-5e5c-5b6f-d970fa4acf6d\r\n\r\ndid you merge master recently?\r\n\r\ncc @jbrockmendel ",
        "createdAt" : "2020-11-15T22:16:07Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "45afe693-7617-42ad-a233-2804e57db089",
        "parentId" : "1780718d-7e1a-48cc-a9f7-586bbe66db35",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "AFAICT thats from the reduction bugfix yesterday.  im troubleshooting it now",
        "createdAt" : "2020-11-15T22:22:42Z",
        "updatedAt" : "2020-11-15T22:22:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4c1bb428-ecc4-47cc-a167-efe6da8c07c5",
        "parentId" : "1780718d-7e1a-48cc-a9f7-586bbe66db35",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Tuesday, so not really recently, merged now",
        "createdAt" : "2020-11-15T22:22:52Z",
        "updatedAt" : "2020-11-15T22:22:52Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eb5506035f3f6f8215bed5810052326169829f9",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +153,157 @@\n        ser = Series([5, 6, 7, 8], dtype=any_numeric_dtype)\n        ser.loc[ser > 6] = Series(range(4), dtype=any_numeric_dtype)\n        tm.assert_series_equal(ser, expected)\n"
  },
  {
    "id" : "f4ac2430-4348-4a25-b90d-5e1afb02c92e",
    "prId" : 37840,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37840#pullrequestreview-530765815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3429afaf-c9fe-4117-b1aa-1375bbb89457",
        "parentId" : null,
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "Maybe ``test_setitem_boolean_mask``?\r\nEDIT: my bad! The current name is great!",
        "createdAt" : "2020-11-15T04:23:39Z",
        "updatedAt" : "2020-11-15T04:30:24Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "65cb6fc128d038ce442923d9473f9bbf2f41e337",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +129,133 @@    @pytest.mark.parametrize(\"func\", [list, np.array, Series])\n    def test_setitem_boolean_python_list(self, func):\n        # GH19406\n        ser = Series([None, \"b\", None])\n        mask = func([True, False, True])"
  },
  {
    "id" : "8433d44d-f20f-4004-9bd9-51938dceee91",
    "prId" : 39358,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39358#pullrequestreview-576687644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27e2c061-7bed-4002-ac6c-6eaee54c4d0a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize over `tm.loc` and `tm.at` (i assume that `.iloc` / `.iat` take a different path)?",
        "createdAt" : "2021-01-26T00:04:42Z",
        "updatedAt" : "2021-01-27T19:34:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a1c1c376-277e-4c33-85f0-551df201fd27",
        "parentId" : "27e2c061-7bed-4002-ac6c-6eaee54c4d0a",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Thanks, did not know that. Yes they do not align",
        "createdAt" : "2021-01-26T19:27:05Z",
        "updatedAt" : "2021-01-27T19:34:56Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "371f88f96036bfbf52b3c255f0c68325b82234a7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +95,99 @@\n    @pytest.mark.parametrize(\"indexer\", [tm.loc, tm.at])\n    @pytest.mark.parametrize(\"ser_index\", [0, 1])\n    def test_setitem_series_object_dtype(self, indexer, ser_index):\n        # GH#38303"
  },
  {
    "id" : "1c74ddca-15d8-4e77-bc76-f207945d8e29",
    "prId" : 39575,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39575#pullrequestreview-582992368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41c23ff3-9698-4f71-ac4e-5b9a11ce1609",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe can be more generally located?",
        "createdAt" : "2021-02-03T13:46:53Z",
        "updatedAt" : "2021-02-04T04:00:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "01b54d92-ecb5-4c83-8d25-d0216f3b2a1a",
        "parentId" : "41c23ff3-9698-4f71-ac4e-5b9a11ce1609",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "im optimistic we can eventually use this or something like it for a ton of indexing tests, not sure where this particular method/class is going to end up",
        "createdAt" : "2021-02-04T02:42:55Z",
        "updatedAt" : "2021-02-04T04:00:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f2fc0e30bc3fde7360a2e74174d8d8575a0cc1e",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +325,329 @@        self._check_inplace(is_inplace, orig, arr, obj)\n\n    def _check_inplace(self, is_inplace, orig, arr, obj):\n        if is_inplace is None:\n            # We are not (yet) checking whether setting is inplace or not"
  },
  {
    "id" : "4aa894a8-182b-4c00-8189-6718ba200882",
    "prId" : 39623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39623#pullrequestreview-625772242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0949a7fc-00a2-4e90-b2ac-ddcb6360b914",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "these tests are good, but only cover Series.  do we need analogous DataFrame tests?",
        "createdAt" : "2021-03-02T22:37:06Z",
        "updatedAt" : "2021-04-15T21:56:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "daad8408-740d-42ed-bae4-0a0da1ef6e49",
        "parentId" : "0949a7fc-00a2-4e90-b2ac-ddcb6360b914",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@phofl i think this was the main outstanding question.  if the answer is \"no\" then this should be good to go (merge master just to be on the safe side)",
        "createdAt" : "2021-03-14T00:59:43Z",
        "updatedAt" : "2021-04-15T21:56:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6f9663cb-021c-4f4a-91e9-5ed64d444a3b",
        "parentId" : "0949a7fc-00a2-4e90-b2ac-ddcb6360b914",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Sorry for the long wait. I have more time on my handy in the coming weeks and months again :)\r\n\r\nOne-dimensional indexers on DataFrames work, but two dimensionals like\r\n\r\n```\r\ndf = DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nindexer = (x for x in [1, 2])\r\ndf.iloc[indexer, 1]\r\n```\r\n\r\nstill don't, because we access the tuple elements to check things before doing anything, which leaves an empty generator behind. Only way I am seeing currently is converting this directly in __setitem__ and __getitem__. Thoughts @jbrockmendel ?",
        "createdAt" : "2021-03-29T21:13:48Z",
        "updatedAt" : "2021-04-15T21:56:02Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "a59c4230-ff7b-4c58-ad51-8b11f9036bf2",
        "parentId" : "0949a7fc-00a2-4e90-b2ac-ddcb6360b914",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> Only way I am seeing currently is converting this directly in setitem and getitem\r\n\r\nI expect this is probably right",
        "createdAt" : "2021-03-31T22:34:47Z",
        "updatedAt" : "2021-04-15T21:56:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "45842779-a611-4abe-b05b-5d729705102b",
        "parentId" : "0949a7fc-00a2-4e90-b2ac-ddcb6360b914",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Will Put something up then tomorrow or the day after ",
        "createdAt" : "2021-03-31T22:36:27Z",
        "updatedAt" : "2021-04-15T21:56:02Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "f39cf33cb9cc01576b9bd82a45213cfd11e9a84a",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +576,580 @@        genkey = (x for x in indkey)\n        self.check_indexer(obj, genkey, expected, val, indexer_sli, is_inplace)\n\n    def test_mask_key(self, obj, key, expected, val, indexer_sli):\n        # setitem with boolean mask"
  },
  {
    "id" : "1cf51797-6fd5-462c-9975-224c7e764810",
    "prId" : 41644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41644#pullrequestreview-680181476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this seems weird.  wouldnt we expect an object-dtype Series with ser.loc[0] itself being a Series?",
        "createdAt" : "2021-05-24T15:47:53Z",
        "updatedAt" : "2021-05-24T15:47:53Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4b446b3e-af38-462c-88c8-f8dff914005d",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "that's unrelated to the changes here. so will not be changing the indexing code in this PR. This PR is a followon to #40555 to change can_hold_element, which I'm uncomfortable doing on 1.2.x since we may not have another release after the next one. ",
        "createdAt" : "2021-05-24T15:53:35Z",
        "updatedAt" : "2021-05-24T15:53:36Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "40a7bdc1-8c26-43c1-b008-27ab0f08b538",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "OK.  cc @phofl thoughts on desired behavior?",
        "createdAt" : "2021-05-24T15:55:41Z",
        "updatedAt" : "2021-05-24T15:55:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9e5d87ae-b952-42cb-a27d-eb8d5059320d",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "I think the behavior after this pr is correct.\r\n```\r\nser.loc[0] = Series([42], index=[0])\r\n```\r\n\r\nThis assigns 42 to the first element in the Series, so would not expect a type cast here",
        "createdAt" : "2021-05-24T16:05:54Z",
        "updatedAt" : "2021-05-24T16:05:55Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "0bda02f0-07f6-4d67-ac2e-2158a851e8c9",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "so you expect to get the same result from `ser.loc[0] = ser2` as you would from `ser.loc[[0]] = ser2`?",
        "createdAt" : "2021-05-24T16:09:57Z",
        "updatedAt" : "2021-05-24T16:09:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6e3a04bd-ef4c-4cc8-9a54-b9f93d7b5ccf",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Hm good point. Not sure how alignment should work there exactly. Are there any cases where this would assign a Series as first element?",
        "createdAt" : "2021-05-24T16:58:05Z",
        "updatedAt" : "2021-05-24T16:58:05Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "7aee71bf-f9ae-49e2-8370-d4f850e2c171",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did this resolve? (is this a separate patch / issue s well)?",
        "createdAt" : "2021-06-04T23:01:11Z",
        "updatedAt" : "2021-06-04T23:01:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "103b0a82-d577-44b3-9c2d-93c20e812f92",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "we need a separate issue/patch if any other changes. @jbrockmendel @phofl \r\n\r\nif another patch is done, this PR is not urgent as it becomes just a refactor.\r\n\r\nif another patch is not done, we should merge this before 1.3. ",
        "createdAt" : "2021-06-05T10:24:39Z",
        "updatedAt" : "2021-06-05T10:24:39Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "1dd2b7b4-5ec0-49ae-a3cc-b9bca7c451be",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "@jbrockmendel @phofl is there a plan to change the return type. otherwise we should probably merge this for 1.3\r\n\r\nwaiting and we would need a release note and decide on backport (which i'd be -1 on, for the same reason I didn't change can_hold_element in 1.2.5)",
        "createdAt" : "2021-06-07T19:48:08Z",
        "updatedAt" : "2021-06-07T19:48:08Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "bc603c1a-382c-4ceb-aa07-7230ed35d8ae",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Lgtm too. Even if we agree that we should return something else, the int result is more consistent than the float result ",
        "createdAt" : "2021-06-08T05:53:03Z",
        "updatedAt" : "2021-06-08T05:53:04Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "344bc08d-4d12-459e-b261-ae5be51c6770",
        "parentId" : "d6fb0731-f608-4f68-8e51-702a5de29dc6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The correct-behavior question may be related to https://github.com/pandas-dev/pandas/issues/16864",
        "createdAt" : "2021-06-09T21:57:09Z",
        "updatedAt" : "2021-06-09T21:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab9c475dd845801c37b009c7bea0168f311b64d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +160,164 @@\n    @pytest.mark.parametrize(\"index, exp_value\", [(0, 42), (1, np.nan)])\n    def test_setitem_series(self, index, exp_value):\n        # GH#38303\n        ser = Series([0, 0])"
  }
]