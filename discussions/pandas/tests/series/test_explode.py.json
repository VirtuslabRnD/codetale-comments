[
  {
    "id" : "802e818d-8fbf-43ad-ac14-b0a26f8ec263",
    "prId" : 27267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27267#pullrequestreview-258601998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e8c492d-062e-42c3-a14a-62871ca5faa6",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "I think the expected should be `pd.Series(range(256), index=[0] * 256, dtype=object)`",
        "createdAt" : "2019-07-06T20:42:58Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "55bca23e-ff58-4e51-a5f8-68ccdca3b8b6",
        "parentId" : "7e8c492d-062e-42c3-a14a-62871ca5faa6",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why? a scalar returns as the same index.",
        "createdAt" : "2019-07-06T21:03:44Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e8eb857a-9c6e-4c4b-bc6a-2c558ea7286a",
        "parentId" : "7e8c492d-062e-42c3-a14a-62871ca5faa6",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "oops misread that as `s = pd.Series([range(256)])` without the explode",
        "createdAt" : "2019-07-06T21:05:23Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e7755b72a7be47aa2579ea810c6c1032a5cc81b",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@    s = pd.Series([range(256)]).explode()\n    result = s.explode()\n    tm.assert_series_equal(result, s)\n\n"
  },
  {
    "id" : "68ad1481-3b5c-44f9-a72e-517e75d1170a",
    "prId" : 27267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27267#pullrequestreview-260422613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d83fbd6-b12e-4887-a738-d745f98c64cc",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Could you test exploding a nested extension array (just want to make sure the dtypes are preserved)?\r\n\r\n``pd.Series([pd.date_range(..., tz=\"UTC\")])``",
        "createdAt" : "2019-07-08T18:27:16Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "0abaac73-1c4f-48a1-8854-14ecc3975dc1",
        "parentId" : "4d83fbd6-b12e-4887-a738-d745f98c64cc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "```\r\nIn [7]: pd.Series([pd.date_range('20170101', periods=3, tz=\"UTC\"), pd.date_range('20180101', periods=3, tz=\"UTC\")]).explode()                                                                                                                                \r\nOut[7]: \r\n0   2017-01-01 00:00:00+00:00\r\n0   2017-01-02 00:00:00+00:00\r\n0   2017-01-03 00:00:00+00:00\r\n1   2018-01-01 00:00:00+00:00\r\n1   2018-01-02 00:00:00+00:00\r\n1   2018-01-03 00:00:00+00:00\r\ndtype: datetime64[ns, UTC]\r\n```\r\n\r\nappears to work :->",
        "createdAt" : "2019-07-11T00:48:52Z",
        "updatedAt" : "2019-07-17T19:24:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e7755b72a7be47aa2579ea810c6c1032a5cc81b",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@    \"s\", [pd.Series([1, 2, 3]), pd.Series(pd.date_range(\"2019\", periods=3, tz=\"UTC\"))]\n)\ndef non_object_dtype(s):\n    result = s.explode()\n    tm.assert_series_equal(result, s)"
  }
]