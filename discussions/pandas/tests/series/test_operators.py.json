[
  {
    "id" : "737fe2eb-7fcd-4bba-b628-e018c70f5ae9",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-41906803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab65b401-ca23-4d54-8b91-a4878d5c14dc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add another tests which asserts the behavior for strings",
        "createdAt" : "2017-05-23T10:43:15Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4f7246d3-437f-4443-be04-48cb00b26a04",
        "parentId" : "ab65b401-ca23-4d54-8b91-a4878d5c14dc",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "I think this is covered now, starting on line 1898 below",
        "createdAt" : "2017-06-03T00:17:19Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1858,1862 @@        expected = pd.Series([11, 12, np.nan], index=[1, 1, 2])\n        assert_series_equal(result, expected)\n\n    @pytest.mark.parametrize(\n        \"test_input,error_type\","
  },
  {
    "id" : "42c864a1-949a-408a-bd53-a53b5fead821",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-41906764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you do\r\n\r\n```\r\nwith pd.option_context('mode.use_inf_as_null', True):\r\n    ...\r\n```\r\n\r\nI suspect this will fail. Can you test with this as well.\r\n(you may have to get the value of the option and pass to ``isfinite=pd.get_option('mode.use_inf_as_null')``)",
        "createdAt" : "2017-05-23T10:46:05Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "093870be-6739-468e-8394-d69d7b95335d",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "Ah, I didn't even know about this! So based on the notes on the [options documentation page](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.set_option.html), it looks like Pandas used to treat floating point +/- inf, as well as nan, as missing values by default, and this behavior was changed at some point. That's a big help; will check this and update.",
        "createdAt" : "2017-05-23T15:53:23Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      },
      {
        "id" : "5c66c56f-3a33-4cd2-bc7a-b626bc2dfe8c",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "@jreback can you confirm this is the expected behavior?\r\n\r\n```python\r\ns = pd.Series([0, -np.inf, np.inf, np.nan])\r\n\r\nwith pd.option_context('mode.use_inf_as_null', True):\r\n    s.argmax() # --> 0\r\n    s.argmax(skipna=False) # --> nan\r\n```",
        "createdAt" : "2017-05-23T16:11:56Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      },
      {
        "id" : "55be15e2-a12d-442e-ab19-4a86fa9fc694",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "This looks like it's working; see line 1891 below",
        "createdAt" : "2017-06-03T00:16:42Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1894,1898 @@        assert s.argmin() == 1\n        assert np.isnan(s.argmin(skipna=False))\n\n        assert s.argmax() == 2\n        assert np.isnan(s.argmax(skipna=False))"
  },
  {
    "id" : "6f47d0c7-3ceb-4086-a4d9-26ed44c23cfa",
    "prId" : 18831,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18831#pullrequestreview-85984876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aceefa98-6e31-4870-ac72-29b9a51b3bd5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "floordiv -> rfloordiv",
        "createdAt" : "2017-12-29T00:20:57Z",
        "updatedAt" : "2017-12-29T16:57:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f876b6f4-8dd9-42d6-8021-31f1614c0ffb",
        "parentId" : "aceefa98-6e31-4870-ac72-29b9a51b3bd5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "?  Both `Timedelta.__floordiv__` and `Timedelta.__rfloordiv__` are wonky.  Or are you referring to something else?",
        "createdAt" : "2017-12-29T02:00:26Z",
        "updatedAt" : "2017-12-29T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6a1dbe45-51f1-4cc5-8735-aff37b8a9600",
        "parentId" : "aceefa98-6e31-4870-ac72-29b9a51b3bd5",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you reason is wrong, it should be rfloordiv",
        "createdAt" : "2017-12-29T14:40:23Z",
        "updatedAt" : "2017-12-29T16:57:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea16e353-a42f-46e5-8b83-c9ef47068e76",
        "parentId" : "aceefa98-6e31-4870-ac72-29b9a51b3bd5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You mean the `reason=\"Timedelta.__floordiv__`...?  The test fails because `Timedelta.__floordiv__` gets called, _not_ `Timedelta.__rfloordiv__`.",
        "createdAt" : "2017-12-29T16:55:09Z",
        "updatedAt" : "2017-12-29T16:57:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "729d2402cd386baca20fa09dd2f36d74cc551906",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1000,1004 @@        timedelta(minutes=5, seconds=4),\n        pytest.param(Timedelta('5m4s'),\n                     marks=pytest.mark.xfail(reason=\"Timedelta.__floordiv__ \"\n                                                    \"bug GH#18846\")),\n        Timedelta('5m4s').to_timedelta64()])"
  },
  {
    "id" : "a17364e4-2c75-4ef2-9916-43068f9c2dec",
    "prId" : 18832,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18832#pullrequestreview-85188508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68e43439-d1ca-4c22-903c-f65fc7971ec1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this initialization code then used below?",
        "createdAt" : "2017-12-21T19:45:18Z",
        "updatedAt" : "2017-12-21T21:42:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "efd95574-dc9a-44b0-b437-e57f1cfd5ebf",
        "parentId" : "68e43439-d1ca-4c22-903c-f65fc7971ec1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.",
        "createdAt" : "2017-12-21T21:33:19Z",
        "updatedAt" : "2017-12-21T21:42:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3cab61d442f67ba5628194c078031929449ca75",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +1017,1021 @@                    op(test_ser)\n\n        # ## timedelta64 ###\n        td1 = Series([timedelta(minutes=5, seconds=3)] * 3)\n        td1.iloc[2] = np.nan"
  },
  {
    "id" : "0e15d3ba-2f20-4ad1-ba2a-2c12ed9c6795",
    "prId" : 19173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19173#pullrequestreview-88021452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc64d8af-4f35-49a2-b5d0-5bd8dbe14294",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "at the very least should split test_operators to timestamp, timedelta, numeric sub-modules (next PR)",
        "createdAt" : "2018-01-11T00:08:33Z",
        "updatedAt" : "2018-01-14T22:02:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cd0644d077593237cf97921bdee5e05707db96",
    "line" : 443,
    "diffHunk" : "@@ -1,1 +2093,2097 @@        assert_series_equal(result, expected)\n\n    @pytest.mark.parametrize('dtype', [None, object])\n    def test_series_with_dtype_radd_int(self, dtype):\n        ser = pd.Series([1, 2, 3], dtype=dtype)"
  },
  {
    "id" : "e281a8a1-b55f-491c-abe6-413fe1709560",
    "prId" : 19173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19173#pullrequestreview-88665701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aa5df3a-4c36-481f-a14e-38982f0e757b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "followup note to cycle thru all Tick offsets",
        "createdAt" : "2018-01-13T19:43:32Z",
        "updatedAt" : "2018-01-14T22:02:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cd0644d077593237cf97921bdee5e05707db96",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +1394,1398 @@                           Timestamp('20130101 9:02:05')])\n\n        result = ser + pd.offsets.Second(5)\n        assert_series_equal(result, expected)\n"
  },
  {
    "id" : "c902529a-4c55-4c94-a411-bdeb9af13b2a",
    "prId" : 19173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19173#pullrequestreview-88665701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac0868fb-1615-4594-bc6d-a427dfbef16c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same here",
        "createdAt" : "2018-01-13T19:43:45Z",
        "updatedAt" : "2018-01-14T22:02:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cd0644d077593237cf97921bdee5e05707db96",
    "line" : 322,
    "diffHunk" : "@@ -1,1 +1406,1410 @@        expected = Series([Timestamp('20130101 9:00:55'),\n                           Timestamp('20130101 9:01:55')])\n\n        result = ser - pd.offsets.Second(5)\n        assert_series_equal(result, expected)"
  },
  {
    "id" : "975aa64c-231f-4638-850e-e45da7eabdf0",
    "prId" : 19173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19173#pullrequestreview-88665701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c7ca5fb-3485-45fc-9d1d-f10af03f0dff",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "follow up to make this a fixture (to use above as well), prob could move the fixtures in tests/tseries/offsets to the top-level conftest",
        "createdAt" : "2018-01-13T19:44:34Z",
        "updatedAt" : "2018-01-14T22:02:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cd0644d077593237cf97921bdee5e05707db96",
    "line" : 332,
    "diffHunk" : "@@ -1,1 +1416,1420 @@            pd.offsets.Second(5) - ser\n\n    @pytest.mark.parametrize('cls_name', ['Day', 'Hour', 'Minute', 'Second',\n                                          'Milli', 'Micro', 'Nano'])\n    def test_dt64_series_with_tick_DateOffset_smoke(self, cls_name):"
  }
]