[
  {
    "id" : "737fe2eb-7fcd-4bba-b628-e018c70f5ae9",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-41906803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab65b401-ca23-4d54-8b91-a4878d5c14dc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add another tests which asserts the behavior for strings",
        "createdAt" : "2017-05-23T10:43:15Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4f7246d3-437f-4443-be04-48cb00b26a04",
        "parentId" : "ab65b401-ca23-4d54-8b91-a4878d5c14dc",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "I think this is covered now, starting on line 1898 below",
        "createdAt" : "2017-06-03T00:17:19Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1858,1862 @@        expected = pd.Series([11, 12, np.nan], index=[1, 1, 2])\n        assert_series_equal(result, expected)\n\n    @pytest.mark.parametrize(\n        \"test_input,error_type\","
  },
  {
    "id" : "42c864a1-949a-408a-bd53-a53b5fead821",
    "prId" : 16449,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16449#pullrequestreview-41906764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you do\r\n\r\n```\r\nwith pd.option_context('mode.use_inf_as_null', True):\r\n    ...\r\n```\r\n\r\nI suspect this will fail. Can you test with this as well.\r\n(you may have to get the value of the option and pass to ``isfinite=pd.get_option('mode.use_inf_as_null')``)",
        "createdAt" : "2017-05-23T10:46:05Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "093870be-6739-468e-8394-d69d7b95335d",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "Ah, I didn't even know about this! So based on the notes on the [options documentation page](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.set_option.html), it looks like Pandas used to treat floating point +/- inf, as well as nan, as missing values by default, and this behavior was changed at some point. That's a big help; will check this and update.",
        "createdAt" : "2017-05-23T15:53:23Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      },
      {
        "id" : "5c66c56f-3a33-4cd2-bc7a-b626bc2dfe8c",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "@jreback can you confirm this is the expected behavior?\r\n\r\n```python\r\ns = pd.Series([0, -np.inf, np.inf, np.nan])\r\n\r\nwith pd.option_context('mode.use_inf_as_null', True):\r\n    s.argmax() # --> 0\r\n    s.argmax(skipna=False) # --> nan\r\n```",
        "createdAt" : "2017-05-23T16:11:56Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      },
      {
        "id" : "55be15e2-a12d-442e-ab19-4a86fa9fc694",
        "parentId" : "e8bec9c3-5557-40a4-89a8-ab2aae4ccefe",
        "authorId" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "body" : "This looks like it's working; see line 1891 below",
        "createdAt" : "2017-06-03T00:16:42Z",
        "updatedAt" : "2017-08-14T18:43:07Z",
        "lastEditedBy" : "b1cecf64-34c5-45e7-8f56-bb12f367c6b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a3d62dab22a5dde8cb3710fa483d117a380d614",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +1894,1898 @@        assert s.argmin() == 1\n        assert np.isnan(s.argmin(skipna=False))\n\n        assert s.argmax() == 2\n        assert np.isnan(s.argmax(skipna=False))"
  }
]