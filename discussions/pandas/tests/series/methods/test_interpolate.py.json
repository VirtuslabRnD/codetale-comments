[
  {
    "id" : "1d1ec9ea-5094-4afb-ab0a-599a1aa8403a",
    "prId" : 36624,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36624#pullrequestreview-496993861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "fill_value is not in the Series.interpolate api. This is accepted through kwargs from the public api? Then fill_value is accepted and passed along internally? I assume none of the scipy interpolate functions accept fill_value? or won't in the future!\r\n\r\ndo we really need the ValueError if fill_value is passed?",
        "createdAt" : "2020-09-25T19:14:37Z",
        "updatedAt" : "2020-09-25T19:14:37Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "6188c08d-b7e7-4461-aab3-f69fb6ad0cdf",
        "parentId" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> do we really need the ValueError if fill_value is passed?\r\n\r\nIn master:\r\n\r\n```\r\n>>> ser = pd.Series([1, 2, np.nan, 4])\r\n>>> ser.interpolate(method=\"pad\", fill_value=99)\r\n0    1.0\r\n1    2.0\r\n2    NaN\r\n3    4.0\r\ndtype: float64\r\n```\r\n\r\nI'm pretty confident this isn't intentional.",
        "createdAt" : "2020-09-25T19:35:12Z",
        "updatedAt" : "2020-09-25T19:35:12Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9c27d643-98c3-4aae-9faa-d17f1012c024",
        "parentId" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "but on master and this PR\r\n```\r\n>>> pd.__version__\r\n'1.2.0.dev0+499.g3b12293cea'\r\n>>> ser = pd.Series([1, 2, np.nan, 4])\r\n>>> ser.interpolate(fill_value=99)\r\n0    1.0\r\n1    2.0\r\n2    3.0\r\n3    4.0\r\ndtype: float64\r\n\r\n>>> ser.interpolate(humpty_dumpty=99)\r\n0    1.0\r\n1    2.0\r\n2    3.0\r\n3    4.0\r\ndtype: float64\r\n```\r\nwhy the ValueError when method passed?",
        "createdAt" : "2020-09-25T19:42:36Z",
        "updatedAt" : "2020-09-25T19:42:37Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "9471bb41-31f7-4f26-985f-84d77f69b03d",
        "parentId" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "1) it may be that we can disallow fill_value at the top of Series.interpolate.  making `**kwargs` explicit would be nice.  But i haven't thoroughly checked if thats possible.\r\n2) BlockManager.interpolate also gets called from fillna, so we need to rule out fill_value at the place where this PR does it.",
        "createdAt" : "2020-09-25T20:12:46Z",
        "updatedAt" : "2020-09-25T20:12:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f03b4bdc-0b6b-44ee-b842-a9f229ec14cb",
        "parentId" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this looks ok to me; i think we are accepting too much here accidently.\r\n\r\n@jbrockmendel can you add a whatsnew note in any case (just saying passing invalid keyword args to `.interpolate()` will raise (or can do it after when all non-named keyword args are banned.",
        "createdAt" : "2020-09-26T00:04:51Z",
        "updatedAt" : "2020-09-26T00:04:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5224a17f-65dd-4b8c-a924-ef3d9b21acfd",
        "parentId" : "ba2ecafe-0db6-4f12-9eb4-b7fa655bb422",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "so a ValueError may be appropriate for fill_na, but the test is for Series.interpolate. Why not `TypeError: interpolate() got an unexpected keyword argument 'fill_value'`?",
        "createdAt" : "2020-09-26T09:55:07Z",
        "updatedAt" : "2020-09-26T09:55:07Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "437be126ec0a73fb084335259e98d8cffae425f3",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +347,351 @@        msg = \"Cannot pass both fill_value and method\"\n        with pytest.raises(ValueError, match=msg):\n            ser.interpolate(fill_value=3, method=\"pad\")\n\n    def test_interp_limit_forward(self):"
  }
]