[
  {
    "id" : "b90befca-cfcb-4c32-bb7d-f557e79262f6",
    "prId" : 32890,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32890#pullrequestreview-391568656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba534a6-b670-4bbb-b4ad-42eb2e184f6b",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The expected result here should also be `dtype=\"string\"` I think",
        "createdAt" : "2020-04-09T18:26:24Z",
        "updatedAt" : "2020-04-10T11:09:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b2e75be6-f03d-4a62-8da9-ae5cdf91b9ea",
        "parentId" : "aba534a6-b670-4bbb-b4ad-42eb2e184f6b",
        "authorId" : "1b4bb4ba-4fb8-442a-8561-a6ce10bcadbb",
        "body" : "Apparently that's not the case (even at the current stable version):\r\n```python\r\n>>> import pandas as pd\r\n>>> pd.__version__\r\n'1.0.3'\r\n>>> s = pd.Series([\"one\", \"two\"], dtype=\"string\")\r\n>>> expected = pd.Series([\"1\", \"2\"], dtype=\"string\")\r\n>>> result = s.replace(to_replace={\"one\": \"1\", \"two\": \"2\"})\r\n>>> expected\r\n0    1\r\n1    2\r\ndtype: string\r\n>>> result\r\n0    1\r\n1    2\r\ndtype: object\r\n```\r\nI'm not sure if that behaviour is to be expected or it should be tackled within a new issue. What do you think? This is not related to containing NA values.",
        "createdAt" : "2020-04-09T18:57:30Z",
        "updatedAt" : "2020-04-10T11:09:04Z",
        "lastEditedBy" : "1b4bb4ba-4fb8-442a-8561-a6ce10bcadbb",
        "tags" : [
        ]
      },
      {
        "id" : "f85a4f28-71ea-406b-9f0e-521fc5b38645",
        "parentId" : "aba534a6-b670-4bbb-b4ad-42eb2e184f6b",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I would say that it is certainly expected for `replace` to again return a string dtype. \r\n\r\nAlthough of course, there are not guarantees that your replacement value is a string ... \r\nAnd given that it is also not working on master, not sure it needs to be fixed here.\r\n\r\nFor some cases of `replace` it does work fine:\r\n\r\n```\r\nIn [33]: s = pd.Series([\"one\", \"two\"], dtype=\"string\")  \r\n\r\nIn [34]: s.replace(\"one\", \"1\")   \r\nOut[34]: \r\n0      1\r\n1    two\r\ndtype: string\r\n```",
        "createdAt" : "2020-04-09T19:18:08Z",
        "updatedAt" : "2020-04-10T11:09:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c7e03f3f-e960-461e-af5e-16f7ec2c146d",
        "parentId" : "aba534a6-b670-4bbb-b4ad-42eb2e184f6b",
        "authorId" : "1b4bb4ba-4fb8-442a-8561-a6ce10bcadbb",
        "body" : "Good observation. When not using the argument `to_replace` (i.e. `s.replace(\"one\", \"1\")`) then the trace is different. It doesn't use the same function to apply the replacement in comparison to `s.replace(to_replace={\"one\": \"1\"})`. \r\n\r\nFor more details check here: https://github.com/pandas-dev/pandas/blob/master/pandas/core/generic.py#L6462",
        "createdAt" : "2020-04-09T19:21:57Z",
        "updatedAt" : "2020-04-10T11:09:04Z",
        "lastEditedBy" : "1b4bb4ba-4fb8-442a-8561-a6ce10bcadbb",
        "tags" : [
        ]
      },
      {
        "id" : "697c2f25-5638-4066-bf44-ab607a71013e",
        "parentId" : "aba534a6-b670-4bbb-b4ad-42eb2e184f6b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@chrispe92 can you open an issue for this",
        "createdAt" : "2020-04-10T17:38:47Z",
        "updatedAt" : "2020-04-10T17:38:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "606aeb83a15cb0a8f7d37447d7be20fea11a3207",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +245,249 @@        # GH 32621\n        s = pd.Series([\"one\", \"two\", np.nan], dtype=\"string\")\n        expected = pd.Series([\"1\", \"2\", np.nan])\n        result = s.replace({\"one\": \"1\", \"two\": \"2\"})\n        tm.assert_series_equal(expected, result)"
  },
  {
    "id" : "b0df79b5-256f-4323-ad4c-36c057e89d71",
    "prId" : 33340,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33340#pullrequestreview-389561122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "419aea4a-c7ba-41b0-8975-f63d7c873d44",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "just increasing test coverage? or is this an actual bug?",
        "createdAt" : "2020-04-07T23:31:10Z",
        "updatedAt" : "2020-04-07T23:32:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a126ca9-5d6a-44b4-b2f2-3b4dafaab47b",
        "parentId" : "419aea4a-c7ba-41b0-8975-f63d7c873d44",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "the new helper method is DataFrame-only, so this PR adds a if-series-then-raise check.  this test hits that",
        "createdAt" : "2020-04-07T23:36:13Z",
        "updatedAt" : "2020-04-07T23:36:14Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec71b0b14202f857c15447dcfc0201945ba45d1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +376,380 @@\n    def test_replace_only_one_dictlike_arg(self):\n        # GH#33340\n\n        ser = pd.Series([1, 2, \"A\", pd.Timestamp.now(), True])"
  },
  {
    "id" : "02b5e954-1abe-455c-b202-955945132ca6",
    "prId" : 36695,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36695#pullrequestreview-506106387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a22be8b3-ef81-4df3-8f4d-aa59c4b91f23",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you check the messages on this warning",
        "createdAt" : "2020-10-10T15:41:44Z",
        "updatedAt" : "2020-10-10T20:49:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a4a83358c86b005d3f0d2c189cff83d5cb695c4",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +454,458 @@    def test_str_replace_regex_default_raises_warning(self, pattern):\n        # https://github.com/pandas-dev/pandas/pull/24809\n        s = pd.Series([\"a\", \"b\", \"c\"])\n        msg = r\"The default value of regex will change from True to False\"\n        if len(pattern) == 1:"
  }
]