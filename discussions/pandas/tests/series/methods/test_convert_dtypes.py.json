[
  {
    "id" : "941c0692-cc12-485d-802e-e971f9e49df8",
    "prId" : 32126,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32126#pullrequestreview-362029827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79632412-9c64-4a43-80fc-7f05cdb3134a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It's a bit hard to interpret below tests / diff, but does pd.Series([1, 2.0], dtype=object).convert_dtypes() still give Int64?",
        "createdAt" : "2020-02-20T15:04:24Z",
        "updatedAt" : "2020-02-20T15:04:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "54db0313-0d0e-42f1-99f8-1a6fc19ab0f5",
        "parentId" : "79632412-9c64-4a43-80fc-7f05cdb3134a",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "Yes.  Here's the interpretation of the tests for that case:\r\nThe code reads:\r\n```python\r\n            (\r\n                [1, 2.0],\r\n                object,\r\n                {\r\n                    ((True,), (True, False), (True,), (True, False)): \"Int64\",\r\n                    ((True,), (True, False), (False,), (True, False)): np.dtype(\r\n                        \"float\"\r\n                    ),\r\n                    ((False,), (True, False), (True, False), (True, False)): np.dtype(\r\n                        \"object\"\r\n                    ),\r\n                },\r\n            ),\r\n```\r\nThis means the following:\r\n1) Create a `Series` with `[1, 2.0]` as the entries, with dtype `object`\r\n2) Consider the 16 possible combinations of the 4 arguments `infer_objects`, `convert_string`, `convert_integer` and `convert_boolean`\r\n3) If `infer_objects==True` and `convert_integer==True`, result should be `Int64`\r\n4) If `infer_objects==True` and `convert_integer==False`, result should be `float`\r\n5) If `infer_objects==False`, result is always `object`\r\n\r\nPrior to this PR, the tests were as follows:\r\np3) If `convert_integer==True`, result should be `Int64` independent of value of `infer_objects`\r\np4) If `infer_objects==True` and `convert_integer==False`, result should be `float` (same)\r\np5) If `infer_objects==False` and `convert_integer==False`, result is `object`\r\n\r\nI think the new version is what we want the behavior to be, i.e., if you start with `object` and  you don't do the infer-objects step, it remains an object. ",
        "createdAt" : "2020-02-20T15:38:31Z",
        "updatedAt" : "2020-02-20T15:38:31Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      },
      {
        "id" : "43b680a4-af85-442f-b938-0d5b2aa4dd5d",
        "parentId" : "79632412-9c64-4a43-80fc-7f05cdb3134a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, thanks",
        "createdAt" : "2020-02-20T16:06:22Z",
        "updatedAt" : "2020-02-20T16:06:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "c99a844aff2863ddf3af461b163de0f8228e7a5b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +154,158 @@            ),\n            (\n                [1, 2.0],\n                object,\n                {"
  }
]