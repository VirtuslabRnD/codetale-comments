[
  {
    "id" : "de55a752-dc68-492a-99b3-a8d23d0763dd",
    "prId" : 30147,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30147#pullrequestreview-348382232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have all kinds of fixtures for ops *already* in pandas/conftest.py, see if you can use them",
        "createdAt" : "2019-12-11T13:06:00Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4425a24f-3a5b-4562-abe4-3d6f7c794a95",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Thanks for your comment. I checked the fixtures in this file now, but it doesn't seem like they're suitable. I'd need a way to derive the symbol for the operations as well. I don't see a way to do this with the existing fixtures.",
        "createdAt" : "2020-01-23T22:55:20Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      },
      {
        "id" : "e413a1d9-3a34-477c-866a-170f4088eb7c",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so you want to use all_arithmetic_functions, then simply do\r\nthen use pandas.core.ops.__get_opstr",
        "createdAt" : "2020-01-26T01:24:39Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "48814c40-9b5f-47db-83d8-5cb35148066d",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Great! Thanks for the hint",
        "createdAt" : "2020-01-26T14:18:02Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "87247a5d64111b0dd8baf3a792470827758f5e61",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +87,91 @@    \"op_name, op\",\n    [\n        (\"add\", \"+\"),\n        (\"sub\", \"-\"),\n        (\"mul\", \"*\"),"
  },
  {
    "id" : "5b41e768-6eb2-444b-a67c-d105760fdd5a",
    "prId" : 31138,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31138#pullrequestreview-345488220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3c5d9a8-f468-458d-b2ae-6b15ba5d0325",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "I think that the CI is red because, if it's never entering the ```if``` statement above, ```msg``` never gets defined.",
        "createdAt" : "2020-01-20T08:48:43Z",
        "updatedAt" : "2020-01-21T19:45:46Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      },
      {
        "id" : "79be427d-d3f2-4a5c-850e-7d9232787c9d",
        "parentId" : "d3c5d9a8-f468-458d-b2ae-6b15ba5d0325",
        "authorId" : "b311bceb-431e-4776-bc31-d85fb31d0046",
        "body" : "Oops!Thanks @MomIsBestFriend for reviewing this.Have edited it in the latest commit.",
        "createdAt" : "2020-01-20T18:57:11Z",
        "updatedAt" : "2020-01-21T19:45:46Z",
        "lastEditedBy" : "b311bceb-431e-4776-bc31-d85fb31d0046",
        "tags" : [
        ]
      }
    ],
    "commit" : "02de253f9ce53ba1ec48a5f7baa904fdcb25942b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +128,132 @@                    if issubclass(type(o), DatetimeIndexOpsMixin):\n                        err = TypeError\n                    with pytest.raises(err, match=msg):\n                        getattr(o, op)\n"
  }
]