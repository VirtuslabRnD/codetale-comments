[
  {
    "id" : "de55a752-dc68-492a-99b3-a8d23d0763dd",
    "prId" : 30147,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30147#pullrequestreview-348382232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we have all kinds of fixtures for ops *already* in pandas/conftest.py, see if you can use them",
        "createdAt" : "2019-12-11T13:06:00Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4425a24f-3a5b-4562-abe4-3d6f7c794a95",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Thanks for your comment. I checked the fixtures in this file now, but it doesn't seem like they're suitable. I'd need a way to derive the symbol for the operations as well. I don't see a way to do this with the existing fixtures.",
        "createdAt" : "2020-01-23T22:55:20Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      },
      {
        "id" : "e413a1d9-3a34-477c-866a-170f4088eb7c",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so you want to use all_arithmetic_functions, then simply do\r\nthen use pandas.core.ops.__get_opstr",
        "createdAt" : "2020-01-26T01:24:39Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "48814c40-9b5f-47db-83d8-5cb35148066d",
        "parentId" : "f19c590b-e302-4e63-bf53-d0ce0d751bd8",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Great! Thanks for the hint",
        "createdAt" : "2020-01-26T14:18:02Z",
        "updatedAt" : "2020-02-01T11:49:28Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "87247a5d64111b0dd8baf3a792470827758f5e61",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +87,91 @@    \"op_name, op\",\n    [\n        (\"add\", \"+\"),\n        (\"sub\", \"-\"),\n        (\"mul\", \"*\"),"
  },
  {
    "id" : "5b41e768-6eb2-444b-a67c-d105760fdd5a",
    "prId" : 31138,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31138#pullrequestreview-345488220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3c5d9a8-f468-458d-b2ae-6b15ba5d0325",
        "parentId" : null,
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "I think that the CI is red because, if it's never entering the ```if``` statement above, ```msg``` never gets defined.",
        "createdAt" : "2020-01-20T08:48:43Z",
        "updatedAt" : "2020-01-21T19:45:46Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      },
      {
        "id" : "79be427d-d3f2-4a5c-850e-7d9232787c9d",
        "parentId" : "d3c5d9a8-f468-458d-b2ae-6b15ba5d0325",
        "authorId" : "b311bceb-431e-4776-bc31-d85fb31d0046",
        "body" : "Oops!Thanks @MomIsBestFriend for reviewing this.Have edited it in the latest commit.",
        "createdAt" : "2020-01-20T18:57:11Z",
        "updatedAt" : "2020-01-21T19:45:46Z",
        "lastEditedBy" : "b311bceb-431e-4776-bc31-d85fb31d0046",
        "tags" : [
        ]
      }
    ],
    "commit" : "02de253f9ce53ba1ec48a5f7baa904fdcb25942b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +128,132 @@                    if issubclass(type(o), DatetimeIndexOpsMixin):\n                        err = TypeError\n                    with pytest.raises(err, match=msg):\n                        getattr(o, op)\n"
  },
  {
    "id" : "c33760a2-909d-432a-af87-1915b9f66794",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-362785669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3181d723-3c15-4014-b67b-0576b1f346e8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "does this occur?  this seems like of like `hypothesis`'s `assume(len(o) >= 1)`",
        "createdAt" : "2020-02-21T17:08:55Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a614b76b-19ec-454e-a141-08b138a5d0c9",
        "parentId" : "3181d723-3c15-4014-b67b-0576b1f346e8",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Yes it does, as we have an [empty in the indices fixture](https://github.com/pandas-dev/pandas/blob/master/pandas/conftest.py#L973)\r\n",
        "createdAt" : "2020-02-21T17:11:05Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      },
      {
        "id" : "565d694f-c763-4338-930b-597302fbce44",
        "parentId" : "3181d723-3c15-4014-b67b-0576b1f346e8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "thanks",
        "createdAt" : "2020-02-21T17:14:23Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +144,148 @@            pytest.skip(\"IntervalIndex doesn't support assignment\")\n        if len(series) < 1:\n            pytest.skip(\"Test doesn't make sense on empty data\")\n\n        # bug brought up by #1079"
  },
  {
    "id" : "3d1458c5-fbbd-4f5c-827c-e174e7da4ceb",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363042131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cbfa440-ec8e-4d25-aeb2-f1bf9a031b2f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "these last two lines look like they belong somewhere else",
        "createdAt" : "2020-02-21T17:11:51Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a2c1bac6-978d-4066-8e4b-6c60545f379a",
        "parentId" : "1cbfa440-ec8e-4d25-aeb2-f1bf9a031b2f",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Indeed. I wouldn't want to address it in this PR yet though",
        "createdAt" : "2020-02-22T18:00:53Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +204,208 @@\n        assert Index([1]).item() == 1\n        assert Series([1]).item() == 1\n\n    def test_value_counts_unique_nunique(self, index_or_series_obj):"
  },
  {
    "id" : "41497836-e31a-4525-8e8b-346e1fe31635",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363092509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8b8d455-f474-4b86-9834-e15928bc292d",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Just fixed indentation",
        "createdAt" : "2020-02-23T12:50:50Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +185,189 @@            assert not result.iat[1]\n\n    def test_ndarray_compat_properties(self, index_or_series_obj):\n        obj = index_or_series_obj\n"
  },
  {
    "id" : "9eb22c06-b61a-46c5-a942-b47dcc7fd355",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363092509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71ab9ea1-fdeb-4b32-87a7-48748e1ecc5e",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Fixed indentation and added xfail. All other changes are marked with comments",
        "createdAt" : "2020-02-23T12:51:23Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +206,210 @@        assert Series([1]).item() == 1\n\n    def test_value_counts_unique_nunique(self, index_or_series_obj):\n        orig = index_or_series_obj\n        obj = orig.copy()"
  },
  {
    "id" : "0835fc96-7a77-4298-b066-f70de0235d9b",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363092509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e68d4e1-9b10-46e0-b379-7daf49e5752d",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Made the length of range dynamic as not all values of `index_or_series_obj ` share the same length",
        "createdAt" : "2020-02-23T12:52:06Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +236,240 @@\n        expected_s = Series(\n            range(len(orig), 0, -1), index=expected_index, dtype=\"int64\"\n        )\n"
  },
  {
    "id" : "5c6ba665-f2ee-4e45-9e5e-25d0bb6d6e25",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363092509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66058776-5d94-43bf-aca6-36492c5aee98",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Fixed indentation and added skips. All other changes are marked with comments",
        "createdAt" : "2020-02-23T12:52:51Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +265,269 @@\n    @pytest.mark.parametrize(\"null_obj\", [np.nan, None])\n    def test_value_counts_unique_nunique_null(self, null_obj, index_or_series_obj):\n        orig = index_or_series_obj\n        obj = orig.copy()"
  },
  {
    "id" : "7626f863-3758-4e22-83ca-012d436530ba",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363092509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e7cc472-fe09-4716-a8f4-06d6bda30ebf",
        "parentId" : null,
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "- length of expected_data is now dynamic\r\n- using append instead of inline if/else statement",
        "createdAt" : "2020-02-23T12:55:45Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 391,
    "diffHunk" : "@@ -1,1 +332,336 @@        expected_data_na = expected_data.copy()\n        if expected_data_na:\n            expected_data_na.append(3)\n        expected_s_na = Series(\n            expected_data_na,"
  },
  {
    "id" : "6d067e01-d12c-4ac3-8a6a-f6c903c06637",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363102604",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f9b75cc-1479-4aa0-9e89-bca479c95918",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "change to use nulls_fixtures",
        "createdAt" : "2020-02-23T15:06:53Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c1e3b7e3-7065-4575-9441-c1b89adec9ea",
        "parentId" : "8f9b75cc-1479-4aa0-9e89-bca479c95918",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "I'd take care of this in a follow-up PR. The tests are breaking with `NaT`, so it would require some extra effort to fix/skip it, but the PR is already pretty big",
        "createdAt" : "2020-02-23T15:24:01Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +265,269 @@\n    @pytest.mark.parametrize(\"null_obj\", [np.nan, None])\n    def test_value_counts_unique_nunique_null(self, null_obj, index_or_series_obj):\n        orig = index_or_series_obj\n        obj = orig.copy()"
  },
  {
    "id" : "a13f9970-93b1-4302-aafb-24eb28ba42c1",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363101435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa2a4b8-d2ec-44b2-9e7e-bb0ab385a82e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future PR, let's break these huge tests up ",
        "createdAt" : "2020-02-23T15:07:59Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 375,
    "diffHunk" : "@@ -1,1 +316,320 @@            obj = obj.repeat(range(1, len(obj) + 1))\n            obj.name = \"a\"\n\n        # check values has the same dtype as the original\n        assert obj.dtype == orig.dtype"
  },
  {
    "id" : "c0ee9ca9-0faa-4628-b5cc-1635f8a467e5",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363111183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbebd6df-cd28-4e5c-b364-f10f86a05744",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this can be simplified; the else path *should* work for all",
        "createdAt" : "2020-02-23T17:03:14Z",
        "updatedAt" : "2020-02-23T17:05:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "56d62b93-b78b-4c5f-afed-2be0e3e85c37",
        "parentId" : "dbebd6df-cd28-4e5c-b364-f10f86a05744",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "xref: #32205",
        "createdAt" : "2020-02-23T17:46:39Z",
        "updatedAt" : "2020-02-23T17:46:40Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 277,
    "diffHunk" : "@@ -1,1 +281,285 @@        # special assign to the numpy array\n        if is_datetime64tz_dtype(obj):\n            if isinstance(obj, DatetimeIndex):\n                v = obj.asi8\n                v[0:2] = iNaT"
  },
  {
    "id" : "01166e72-3dec-468f-bf24-c89dc12e7a9c",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363108816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "516c4bad-a859-431b-8eb8-e813641bb880",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is also duplicative here",
        "createdAt" : "2020-02-23T17:03:32Z",
        "updatedAt" : "2020-02-23T17:05:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 295,
    "diffHunk" : "@@ -1,1 +290,294 @@                values = obj._values\n\n        elif needs_i8_conversion(obj):\n            values[0:2] = iNaT\n            values = obj._shallow_copy(values)"
  },
  {
    "id" : "ad26470d-9c9e-4d40-bd65-c3f2abf8a772",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363108816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6887dd65-cfeb-484c-acb6-f8a65276501c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this can't possibly be true (as the first if already catches this)",
        "createdAt" : "2020-02-23T17:04:41Z",
        "updatedAt" : "2020-02-23T17:05:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 364,
    "diffHunk" : "@@ -1,1 +309,313 @@            obj.name = \"a\"\n        else:\n            if isinstance(obj, DatetimeIndex):\n                expected_index = orig._values._shallow_copy(values)\n            else:"
  }
]