[
  {
    "id" : "2e399604-cf0a-4b26-ba25-9edf45ba77a2",
    "prId" : 37878,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37878#pullrequestreview-531982911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5f64402-b26d-475e-b738-52784753f9ad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also compare to `groupby('A').apply(lambda x: getattr(x.ewm(com=1.0), method))` ?",
        "createdAt" : "2020-11-17T02:54:57Z",
        "updatedAt" : "2020-11-17T21:58:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3800f3f8c47ebdfac7c4e490e75b0ce87dcde78",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +658,662 @@                names=[\"A\", None],\n            ),\n        )\n        tm.assert_frame_equal(result, expected)\n"
  },
  {
    "id" : "5aed8774-dc8e-4f36-b575-168fe788b4a0",
    "prId" : 37878,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37878#pullrequestreview-532949093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12f3a713-85cb-4b44-8dc6-5971ef89727e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hah i think its expected actually :->",
        "createdAt" : "2020-11-18T00:36:06Z",
        "updatedAt" : "2020-11-18T00:36:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b159493f-aed6-491a-b533-29f6ffca23fd",
        "parentId" : "12f3a713-85cb-4b44-8dc6-5971ef89727e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "or if you think its a bug, then open an issue :->",
        "createdAt" : "2020-11-18T00:36:28Z",
        "updatedAt" : "2020-11-18T00:36:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9646e128-f3b3-4627-ab11-ac5b84afefc2",
        "parentId" : "12f3a713-85cb-4b44-8dc6-5971ef89727e",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Ah right ewm acts as a transform so the index should be the same.",
        "createdAt" : "2020-11-18T01:38:45Z",
        "updatedAt" : "2020-11-18T01:38:45Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3800f3f8c47ebdfac7c4e490e75b0ce87dcde78",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +662,666 @@\n        expected = df.groupby(\"A\").apply(lambda x: getattr(x.ewm(com=1.0), method)())\n        # There may be a bug in the above statement; not returning the correct index\n        tm.assert_frame_equal(result.reset_index(drop=True), expected)\n"
  },
  {
    "id" : "610742c5-30e5-4857-adae-a1359690b839",
    "prId" : 38737,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38737#pullrequestreview-559656671",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Are we sure this is the behaviour we want? \r\nIt might be the most consistent, but it's also kind of useless to repeat those index levels .. So we should at least have a way to avoid getting that? ",
        "createdAt" : "2020-12-28T10:07:07Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "3d9572ae-71c8-41c7-977d-9c134c4f6e22",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I would say the consistency is more maintainable on our end compared to additionally including logic to de-duplicate index levels given some condition. \r\n\r\nI would prefer the user explicitly call `droplevel`. ",
        "createdAt" : "2020-12-28T19:44:14Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "072ef0c9-1455-4c39-b296-fe4c4120f5e4",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm\r\n```\r\nIn [134]: df.groupby(level=0).transform('max')                                                                                                          \r\nOut[134]: \r\n                Max Speed\r\nAnimal Type              \r\nFalcon Captive      390.0\r\n       Wild         390.0\r\nParrot Captive       30.0\r\n       Wild          30.0\r\n```\r\n\r\nso i think we are doing some magic in groupby for this. These are conceptually similar operations.",
        "createdAt" : "2020-12-28T19:49:56Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0e1eff20-fe8a-4ec0-b83d-80b40162ecf0",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Before indexers were implemented for `groupby().rolling()`, this was the result:\r\n\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '1.0.5'\r\n\r\nIn [3]: from pandas import *\r\n\r\nIn [4]:         arrays = [\r\n   ...:             [\"Falcon\", \"Falcon\", \"Parrot\", \"Parrot\"],\r\n   ...:             [\"Captive\", \"Wild\", \"Captive\", \"Wild\"],\r\n   ...:         ]\r\n   ...:         index = MultiIndex.from_arrays(arrays, names=(\"Animal\", \"Type\"))\r\n   ...:         df = DataFrame({\"Max Speed\": [390.0, 350.0, 30.0, 20.0]}, index=index)\r\n   ...:         result = df.groupby(level=0)[\"Max Speed\"].rolling(2).sum()\r\n\r\nIn [5]: result\r\nOut[5]:\r\nAnimal  Animal  Type\r\nFalcon  Falcon  Captive      NaN\r\n                Wild       740.0\r\nParrot  Parrot  Captive      NaN\r\n                Wild        50.0\r\nName: Max Speed, dtype: float64\r\n```\r\n\r\nwhich I think we should be trying to match. Though I'm not sure if we have solid conventions of the resulting index when using groupby.  \r\n",
        "createdAt" : "2020-12-28T20:01:10Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "cf73ddb7-153a-46bd-98f5-a9ab6c90ea0e",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yep i see that. ok i think that we *should* revert for 1.2.x and then decide for 1.3 is prob ok. i am leaning towards have the same as groupby here.",
        "createdAt" : "2020-12-28T20:07:18Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3c270a9f-e59c-473e-b629-94a4318d36b0",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Okay once this is merged in I can create another issue to discuss what the index behavior should be for groupby rolling with duplicate index levels.",
        "createdAt" : "2020-12-28T20:11:52Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "7381dcc9-0c29-455c-94a9-81184f1a12a1",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "When comparing to 1.0.5 behaviour, we also had:\r\n\r\n```\r\nIn [5]: s.groupby([\"idx1\", \"idx2\"], group_keys=False).rolling(1).mean() \r\nOut[5]: \r\nidx1  idx2\r\nval1  val1    1.0\r\n      val1    2.0\r\nval2  val2    3.0\r\ndtype: float64\r\n\r\nIn [9]: pd.__version__   \r\nOut[9]: '1.0.5'\r\n```\r\n\r\nSo this PR then deviates from that for this case.\r\n\r\n(I know the influence of `group_keys=False` has been considered a bug, but we could also reconsider that, since the above seems to actually give the desired result?)",
        "createdAt" : "2020-12-28T20:59:25Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "51114100-8a99-4566-9eb5-a60f36591d53",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "The `group_keys` result different I think is due to the implementation change in `groupby().rolling()`\r\n\r\nBefore `groupby().rolling()` under the hood was `groupby().apply(lambda x: x.rolling()...)` and therefore `group_keys` impacted the result (since the argument is only applicable for `groupby().apply()`).\r\n\r\nAfter `groupby().rolling()` moved away from using `apply`, `group_keys` didn't impact the result.\r\n\r\nSo IMO, `group_keys` shouldn't have ever really influenced the result since `groupby().apply()` was never called directly from the user.",
        "createdAt" : "2020-12-28T21:26:46Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "aa442170-ecea-4a12-8c6e-c69422be1167",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add testing for group_keys in any event?",
        "createdAt" : "2020-12-29T14:18:56Z",
        "updatedAt" : "2020-12-29T15:00:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "eda7ca6a-20c2-4fe1-8f32-c7741421ef43",
        "parentId" : "35810016-74b5-4b99-b39e-3485aabd0507",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Yes that's parameterized here already: https://github.com/pandas-dev/pandas/pull/38737/files#diff-e338c43cbd06b849f3d6a1b97cd787a48770c616b627f33eb20f67a6fc56b116R559",
        "createdAt" : "2020-12-29T18:44:24Z",
        "updatedAt" : "2020-12-29T18:44:24Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "de68fa6a9a01e724558242fbede1243e31130447",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +575,579 @@                    (\"val2\", \"val2\", \"val2\", \"val2\"),\n                ],\n                names=[\"idx1\", \"idx2\", \"idx1\", \"idx2\"],\n            ),\n        )"
  }
]