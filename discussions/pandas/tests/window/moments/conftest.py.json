[
  {
    "id" : "809a22f0-f252-459f-b466-0949f3a499e0",
    "prId" : 33943,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33943#pullrequestreview-406801639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "322c6bb1-9a40-4b4d-be59-78aad0df22a7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make these return single functions at a time? e.g. use `pytest.parametrize`? or is that big to actually re-write?",
        "createdAt" : "2020-05-05T22:55:09Z",
        "updatedAt" : "2020-05-09T20:40:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5922b57d-453e-4f9f-bb0f-50e976210928",
        "parentId" : "322c6bb1-9a40-4b4d-be59-78aad0df22a7",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "yeah, i tried to do this so that each will be returned at a time in the first place, and thus also avoid the inner loop in the actual test methods.\r\n\r\nbut there are two issues:\r\n1. we already have quite large amount of tests (hundreds where these two fixtures are used, execution time is around 25s) due to parametrization, and the number of tests using this fixture will increase the tests by 20x. So need to take a lot of more time to finish. And also `base_functions` and `no_nan_functions` will be determined based on the value of another parametrization fixture `no_nans`, so also needs to make split on this.\r\n2. a more rabbit-hole-alike issue is the warning message, for some of the combinations bewteen: `data` and `functions`, there will be warnings raised because data is empty, and slicing will raise warnings for some functions. Right now, since they are as a whole (by the inner loop), we are certain it will raise this message in at least one of those hundreds of combinations. But if we parametrize this, then we also need to separate these to address which will raise. and i am not sure if it is worth doing it.\r\n\r\nany thoughts/comments? @jreback ",
        "createdAt" : "2020-05-06T12:56:48Z",
        "updatedAt" : "2020-05-09T20:40:04Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      },
      {
        "id" : "057fe5a2-8121-4f69-abc6-48ab265d8ae3",
        "parentId" : "322c6bb1-9a40-4b4d-be59-78aad0df22a7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine, leave as is then",
        "createdAt" : "2020-05-06T16:49:42Z",
        "updatedAt" : "2020-05-09T20:40:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b583066ffcc38412bc0d6addd7841220aa16a4e",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +65,69 @@    List of tuples: (applied function, require_min_periods, name of applied function)\n    \"\"\"\n    return base_functions_list\n\n"
  },
  {
    "id" : "b10a2ff9-f2ee-4098-8e07-9f534e5cf7cc",
    "prId" : 33943,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33943#pullrequestreview-406584111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "796b52a9-df3f-4e46-a919-0ca5bb9c7991",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you document the tuples here (e.g. what they refer to)",
        "createdAt" : "2020-05-05T22:55:51Z",
        "updatedAt" : "2020-05-09T20:40:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "25dcf68f-7d0a-4309-a6e0-57fd071917d7",
        "parentId" : "796b52a9-df3f-4e46-a919-0ca5bb9c7991",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "yep, i added in the docs",
        "createdAt" : "2020-05-06T12:57:00Z",
        "updatedAt" : "2020-05-09T20:40:04Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b583066ffcc38412bc0d6addd7841220aa16a4e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +21,25 @@\n\nbase_functions_list = [\n    (lambda v: Series(v).count(), None, \"count\"),\n    (lambda v: Series(v).max(), None, \"max\"),"
  }
]