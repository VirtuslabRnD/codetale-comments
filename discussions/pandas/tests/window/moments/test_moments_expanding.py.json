[
  {
    "id" : "9f4290c4-c30c-429a-abdf-acfd4ed4f6be",
    "prId" : 30542,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30542#pullrequestreview-337237741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cc56a04-e12e-4ee2-9586-50dc3ce1146b",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Could we break this into several different tests?",
        "createdAt" : "2019-12-30T05:31:22Z",
        "updatedAt" : "2019-12-30T14:15:55Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "5a1064cf-4e62-4078-975f-7f54d0438f54",
        "parentId" : "6cc56a04-e12e-4ee2-9586-50dc3ce1146b",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "i broke them into two",
        "createdAt" : "2019-12-30T21:01:21Z",
        "updatedAt" : "2019-12-30T21:01:21Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb42123ef8f3fd24c557f38f9413c92adb085481",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@        tm.assert_series_equal(result, expected)\n\n    def _check_expanding(\n        self, func, static_comp, has_min_periods=True, preserve_nan=True\n    ):"
  },
  {
    "id" : "3bc79782-f3be-4309-b689-299d0877807b",
    "prId" : 30542,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30542#pullrequestreview-337237784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb81ceba-b949-444b-8caf-9087df24c0d7",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This test looks like it could stand alone in its own function.\r\n\r\n",
        "createdAt" : "2019-12-30T05:31:43Z",
        "updatedAt" : "2019-12-30T14:15:55Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "9818d5f6-b50e-4392-843b-23b192354656",
        "parentId" : "cb81ceba-b949-444b-8caf-9087df24c0d7",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "definitely!",
        "createdAt" : "2019-12-30T21:01:34Z",
        "updatedAt" : "2019-12-30T21:01:34Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb42123ef8f3fd24c557f38f9413c92adb085481",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +200,204 @@        tm.assert_series_equal(ser, ser.expanding().apply(lambda x: x.mean(), raw=raw))\n\n        # GH 8080\n        s = Series([None, None, None])\n        result = s.expanding(min_periods=0).apply(lambda x: len(x), raw=raw)"
  },
  {
    "id" : "97c80e09-4eac-4ed7-a75a-124710e7d58b",
    "prId" : 30542,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30542#pullrequestreview-337237815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d71c65ca-fd39-4434-9f84-797f7c845600",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This test looks like it could stand alone in its own function.",
        "createdAt" : "2019-12-30T05:32:00Z",
        "updatedAt" : "2019-12-30T14:15:55Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "f44d36bd-6313-4fc1-ac0b-983ab8df0841",
        "parentId" : "d71c65ca-fd39-4434-9f84-797f7c845600",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "sefinitely",
        "createdAt" : "2019-12-30T21:01:43Z",
        "updatedAt" : "2019-12-30T21:01:43Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb42123ef8f3fd24c557f38f9413c92adb085481",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@        self._check_expanding(expanding_mean, np.mean, preserve_nan=False)\n\n        ser = Series([], dtype=np.float64)\n        tm.assert_series_equal(ser, ser.expanding().apply(lambda x: x.mean(), raw=raw))\n"
  }
]