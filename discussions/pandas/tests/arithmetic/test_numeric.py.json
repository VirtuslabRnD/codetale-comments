[
  {
    "id" : "e170307f-4101-45c6-8af4-04bed97d2659",
    "prId" : 22254,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22254#pullrequestreview-144660940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc5118f2-823c-4ae5-a4f1-fee82a51661d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "duplicate of conftest (maybe that's ok)",
        "createdAt" : "2018-08-09T00:26:46Z",
        "updatedAt" : "2018-08-09T00:27:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "02113324-b449-44bc-bb02-20c091a01de0",
        "parentId" : "bc5118f2-823c-4ae5-a4f1-fee82a51661d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, I'm not going to worry about fixture duplication until after tests.test_arithmetic is moved to tests.arithmetic.test_timedelta64",
        "createdAt" : "2018-08-09T01:05:02Z",
        "updatedAt" : "2018-08-09T01:05:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d255a6b2b8dde6ea2876a745ef40ff97fabbcf53",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@                        pd.RangeIndex(5)],\n                ids=lambda x: type(x).__name__)\ndef idx(request):\n    return request.param\n"
  },
  {
    "id" : "33036650-1183-4708-baf9-aec407e5e250",
    "prId" : 22254,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22254#pullrequestreview-144660844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ad2d3b7-55e8-4df0-9e9a-128184431df2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are these specific to Index tests? or are they moving so that you can consolidate later?",
        "createdAt" : "2018-08-09T00:27:26Z",
        "updatedAt" : "2018-08-09T00:27:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3bc25865-cc83-41ae-b723-56afeb134518",
        "parentId" : "1ad2d3b7-55e8-4df0-9e9a-128184431df2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> or are they moving so that you can consolidate later?\r\n\r\nYes, very nearly everything in this PR is moved with minimal changes so they can be de-duplicated and parametrized/fixturized in an upcoming pass.",
        "createdAt" : "2018-08-09T01:04:19Z",
        "updatedAt" : "2018-08-09T01:04:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d255a6b2b8dde6ea2876a745ef40ff97fabbcf53",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@class TestDivisionByZero(object):\n\n    def test_div_zero(self, zero, idx):\n        expected = pd.Index([np.nan, np.inf, np.inf, np.inf, np.inf],\n                            dtype=np.float64)"
  },
  {
    "id" : "362269ca-d95a-4f54-adca-641c858d918b",
    "prId" : 22267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22267#pullrequestreview-145052133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b0d733d-8abd-4854-8b36-3ae6a1d81fcd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "future nit, might as well import the other ``operator`` to ``ops`` to make things consistent",
        "createdAt" : "2018-08-09T22:40:17Z",
        "updatedAt" : "2018-08-09T22:42:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18ba2e9652d2a2cca6023f5bcd91a18ee92224d",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +386,390 @@        tm.assert_index_equal(result, expected)\n\n    @pytest.mark.parametrize('op', [operator.mul, ops.rmul, operator.floordiv])\n    def test_mul_int_identity(self, op, idx, box):\n        idx = tm.box_expected(idx, box)"
  },
  {
    "id" : "7472d5e9-1859-42cc-8e9d-9f13cbb65f13",
    "prId" : 22559,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22559#pullrequestreview-152075508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e030de36-a05e-4aed-b459-074f510b067b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "shouldn't these be in test_datetime64?",
        "createdAt" : "2018-09-04T11:33:02Z",
        "updatedAt" : "2018-09-04T11:34:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9eb20d2e-dc06-43bf-8548-a17b2602c0ea",
        "parentId" : "e030de36-a05e-4aed-b459-074f510b067b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No, this is specifically testing that the numeric-dtypes are correctly handling the presence of datetime64-dtype, not vice-versa.",
        "createdAt" : "2018-09-04T13:51:59Z",
        "updatedAt" : "2018-09-04T13:51:59Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "30472ee07311349c4b4f77ebdecd81d6d599a86d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +51,55 @@        with pytest.raises(TypeError):\n            df < ts\n        with pytest.raises(TypeError):\n            ts < df\n        with pytest.raises(TypeError):"
  },
  {
    "id" : "40a10889-a20a-4826-b3a5-01a1042266ee",
    "prId" : 22559,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22559#pullrequestreview-152075984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "817dc222-283b-4c76-9727-936bd72205d3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add for tz as well (use the fixture)",
        "createdAt" : "2018-09-04T11:33:16Z",
        "updatedAt" : "2018-09-04T11:34:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5208cccb-57ad-48eb-a4d0-fe49ad9a5c1f",
        "parentId" : "817dc222-283b-4c76-9727-936bd72205d3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Sure; follow-up.  This PR is pretty specifically only-moving.",
        "createdAt" : "2018-09-04T13:53:00Z",
        "updatedAt" : "2018-09-04T13:53:00Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "30472ee07311349c4b4f77ebdecd81d6d599a86d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +55,59 @@        with pytest.raises(TypeError):\n            ts > df\n\n        assert not (df == ts).any().any()\n        assert (df != ts).all().all()"
  },
  {
    "id" : "448da405-7297-442b-90e6-795da0909722",
    "prId" : 22559,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22559#pullrequestreview-152076413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7a24350-31eb-4b75-ba23-550b9e49052e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are there timedelta tests that should be moved (ok for followup, just indicate)",
        "createdAt" : "2018-09-04T11:34:34Z",
        "updatedAt" : "2018-09-04T11:34:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0d4d9d98-a5cd-4c4c-ac67-3295d26dbf58",
        "parentId" : "d7a24350-31eb-4b75-ba23-550b9e49052e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Those should all be in test_arithmetic, which this PR moves to arithmetic.test_timedelta64",
        "createdAt" : "2018-09-04T13:53:47Z",
        "updatedAt" : "2018-09-04T13:53:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "30472ee07311349c4b4f77ebdecd81d6d599a86d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +69,73 @@\n# ------------------------------------------------------------------\n# Numeric dtypes Arithmetic with Timedelta Scalar\n\nclass TestNumericArraylikeArithmeticWithTimedeltaLike(object):"
  }
]