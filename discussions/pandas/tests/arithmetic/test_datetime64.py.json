[
  {
    "id" : "88c0ec63-512e-46bd-aecc-8221b24d94a5",
    "prId" : 22254,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22254#pullrequestreview-144660994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15dcdfe5-f464-49b5-a1e8-564a36bf97c6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "note that we now have ``tm.assert_equal`` to solve cases like this (certainly can change later though)",
        "createdAt" : "2018-08-09T00:25:08Z",
        "updatedAt" : "2018-08-09T00:27:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "752fca1b-bb94-4887-bb0f-c62c9538e728",
        "parentId" : "15dcdfe5-f464-49b5-a1e8-564a36bf97c6",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yep, I'm looking forward to getting rid of this hack",
        "createdAt" : "2018-08-09T01:05:20Z",
        "updatedAt" : "2018-08-09T01:05:21Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d255a6b2b8dde6ea2876a745ef40ff97fabbcf53",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +652,656 @@    @pytest.mark.parametrize(\n        'box, assert_func',\n        [(Series, tm.assert_series_equal),\n         (pd.Index, tm.assert_index_equal)])\n    def test_sub_datetime64_not_ns(self, box, assert_func):"
  },
  {
    "id" : "0f2302bc-7a40-4f2a-a5dd-481fb8d6b465",
    "prId" : 22254,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22254#pullrequestreview-144654899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad03a76-eda4-4f86-8faf-0959849a9df2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "note to use the tz fixtures",
        "createdAt" : "2018-08-09T00:25:50Z",
        "updatedAt" : "2018-08-09T00:27:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d255a6b2b8dde6ea2876a745ef40ff97fabbcf53",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +872,876 @@    @pytest.mark.parametrize('op', ['__add__', '__radd__',\n                                    '__sub__', '__rsub__'])\n    @pytest.mark.parametrize('tz', [None, 'Asia/Tokyo'])\n    def test_dt64_series_add_intlike(self, tz, op):\n        # GH#19123"
  },
  {
    "id" : "5866157e-666d-40d9-a462-5349994fdb59",
    "prId" : 22254,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22254#pullrequestreview-144654899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64522ed2-4f49-4c9a-a9c4-4e04beb21f97",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe move to a separate test_timezones.py (later is ok too)",
        "createdAt" : "2018-08-09T00:26:05Z",
        "updatedAt" : "2018-08-09T00:27:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d255a6b2b8dde6ea2876a745ef40ff97fabbcf53",
    "line" : 322,
    "diffHunk" : "@@ -1,1 +891,895 @@    # Timezone-Centric Tests\n\n    def test_operators_datetimelike_with_timezones(self):\n        tz = 'US/Eastern'\n        dt1 = Series(date_range('2000-01-01 09:00:00', periods=5,"
  },
  {
    "id" : "d7dea535-03c2-4a83-a36e-0b9ed83ac72e",
    "prId" : 22535,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22535#pullrequestreview-170312955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b660ddbe-f27f-4e5a-9f4c-f82c32e7bbe3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why can't you check the stacklevel anymore?",
        "createdAt" : "2018-10-31T12:44:15Z",
        "updatedAt" : "2018-10-31T15:30:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "51701e04-e4cd-4d3a-a9d6-b57b1744b943",
        "parentId" : "b660ddbe-f27f-4e5a-9f4c-f82c32e7bbe3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We basically never did.  I never got the stacklevel checks to pass in any consistent way.",
        "createdAt" : "2018-10-31T15:22:21Z",
        "updatedAt" : "2018-10-31T15:30:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a7b589b80da97628ee2e779303c7a42274e93d0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1068,1072 @@        expected = pd.date_range('2000-01-01 10:00', freq='H',\n                                 periods=10, tz=tz)\n        with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):\n            rng += one\n        tm.assert_index_equal(rng, expected)"
  },
  {
    "id" : "59f275dc-5f74-4886-a884-25d63fdf69b8",
    "prId" : 23240,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23240#pullrequestreview-166606228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "937798b0-b986-4b15-a4d4-22dcc503b230",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Decided that separating tests for `__add__` vs `__radd__` was overkill.",
        "createdAt" : "2018-10-19T16:43:07Z",
        "updatedAt" : "2018-10-23T17:13:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "699144b284b2a61b607836c4a475dc738951de0b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +1001,1005 @@            idx + Timestamp('2011-01-01')\n        with tm.assert_raises_regex(TypeError, msg):\n            Timestamp('2011-01-01') + idx\n\n    # -------------------------------------------------------------"
  },
  {
    "id" : "7003f2eb-844a-49cd-82a4-d1c943a081e7",
    "prId" : 23425,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23425#pullrequestreview-170307901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0182934-f325-48b1-be65-4389eca7c27d",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I see a lot of error message changes.  Are they tested anywhere with `assert_raises_regex`?",
        "createdAt" : "2018-10-31T04:46:48Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8b03c76a-0280-4881-8f3e-3a1b33497a25",
        "parentId" : "d0182934-f325-48b1-be65-4389eca7c27d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The way these tests are parametrized, the messages are all over the place.",
        "createdAt" : "2018-10-31T15:13:39Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3d38d29f83b08c78031febfd18ee31a0f06114",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1206,1210 @@        tm.assert_equal(result, expected)\n        with pytest.raises(TypeError):\n            other - obj\n\n    # -------------------------------------------------------------"
  },
  {
    "id" : "90233176-22b8-43f8-8108-aba23d122fdd",
    "prId" : 23425,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23425#pullrequestreview-170533043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a83ba253-60e6-43fb-a836-088b4d4d089c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize other with pd.NaT as well here (I bet we already have a test for that, can you consolidate)",
        "createdAt" : "2018-11-01T00:56:47Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1d16906e-73a1-4802-b1b9-149de7baee47",
        "parentId" : "a83ba253-60e6-43fb-a836-088b4d4d089c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not really; pd.NaT behavior is pretty starkly different from the behavior weâ€™re testing here.\r\n\r\nThat said, there are several rounds of de duplication and parameterization coming up",
        "createdAt" : "2018-11-01T01:27:01Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1ea3bb92-55ac-4f04-aa5e-2a02064c9008",
        "parentId" : "a83ba253-60e6-43fb-a836-088b4d4d089c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "how is it different at all?",
        "createdAt" : "2018-11-01T01:27:52Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "926db624-6e98-4184-8a2d-e4041c154210",
        "parentId" : "a83ba253-60e6-43fb-a836-088b4d4d089c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because this is a timedelta64 and pd.NaT is in most cases datetime-like.  The \"most cases\" part makes it especially hairy.",
        "createdAt" : "2018-11-01T01:54:54Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3d38d29f83b08c78031febfd18ee31a0f06114",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1189,1193 @@        tm.assert_index_equal(rng, expected)\n\n    def test_dt64arr_add_sub_td64_nat(self, box, tz_naive_fixture):\n        # GH#23320 special handling for timedelta64(\"NaT\")\n        tz = tz_naive_fixture"
  },
  {
    "id" : "35b9376f-7c85-4d0e-b937-13e48417e9f1",
    "prId" : 23620,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23620#pullrequestreview-173707033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "460afe3b-b2f7-4bab-a58b-4e88064892d4",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Can we potentially have `xfail` tests for these?",
        "createdAt" : "2018-11-11T01:18:37Z",
        "updatedAt" : "2018-11-11T20:09:13Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8dd3511c-08b8-4a5b-8362-46446dac1f0f",
        "parentId" : "460afe3b-b2f7-4bab-a58b-4e88064892d4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Good idea.  I've implemented this for some of these (will push shortly).  For others (particularly ones using box_with_period or box_with_datetimes instead of box) doing that becomes much hairier and I'm inclined to leave the FIXME notes for the time being.",
        "createdAt" : "2018-11-11T17:34:33Z",
        "updatedAt" : "2018-11-11T20:09:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a1ceecd4e63843575d9d7aa9066e5a0283d970c",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1162,1166 @@\n        # FIXME: calling with transpose=True raises ValueError\n        rng = tm.box_expected(rng, box, transpose=False)\n\n        result = rng + two_hours"
  },
  {
    "id" : "784e97ef-c50b-4e3b-8092-01720616f7d4",
    "prId" : 23620,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23620#pullrequestreview-173707216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d3a6745-a367-47eb-a2a5-4162aa0afc52",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "an you assert this as well? these are legit errors where you an't broadcast right? maybe have a nice error message then?",
        "createdAt" : "2018-11-11T14:13:40Z",
        "updatedAt" : "2018-11-11T20:09:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f44b63bf-d9de-434f-977f-51a7d1c937d4",
        "parentId" : "0d3a6745-a367-47eb-a2a5-4162aa0afc52",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The problem here is a bug in DataFrame (at least one Issue about it):\r\n\r\n```\r\ndti = pd.date_range('2016-01-01', periods=3, tz='US/Pacific')\r\ndf = pd.DataFrame(dti)\r\ndf.T\r\n>>> df.T\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/frame.py\", line 2467, in transpose\r\n    return super(DataFrame, self).transpose(1, 0, **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/generic.py\", line 686, in transpose\r\n    new_values = self.values.transpose(axes_numbers)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/base.py\", line 708, in transpose\r\n    nv.validate_transpose(args, kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/compat/numpy/function.py\", line 54, in __call__\r\n    self.defaults)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/util/_validators.py\", line 218, in validate_args_and_kwargs\r\n    validate_kwargs(fname, kwargs, compat_args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/util/_validators.py\", line 157, in validate_kwargs\r\n    _check_for_default_values(fname, kwds, compat_args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/util/_validators.py\", line 69, in _check_for_default_values\r\n    format(fname=fname, arg=key)))\r\nValueError: the 'axes' parameter is not supported in the pandas implementation of transpose()\r\n```\r\n\r\nFollowing @gfyoung's suggestion above, I am making a new fixture `box_transpose_fail` to parametrize over both box and transpose, xfailing the `(DataFrame, True)` pair.",
        "createdAt" : "2018-11-11T17:39:00Z",
        "updatedAt" : "2018-11-11T20:09:13Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "c5ffda8c-31d0-4dae-af50-3e3ec68e37b6",
        "parentId" : "0d3a6745-a367-47eb-a2a5-4162aa0afc52",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, so its the 1-D ones which are failing. I believe there is an open issue about transpose and tz DTI (in a frame) outstanding.",
        "createdAt" : "2018-11-11T17:40:33Z",
        "updatedAt" : "2018-11-11T20:09:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a1ceecd4e63843575d9d7aa9066e5a0283d970c",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1801,1805 @@                                  '2010-11-01 07:00'], freq='H', tz=timezone)\n\n        # FIXME: these raise ValueError with transpose=True\n        dates = tm.box_expected(dates, box, transpose=False)\n        expected = tm.box_expected(expected, box, transpose=False)"
  },
  {
    "id" : "b8b917c6-7014-4e82-8ed9-bb29020a9e0f",
    "prId" : 23771,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23771#pullrequestreview-176106057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ef96909-aa0a-402a-9bfd-6708dbd7e1f9",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Some of the tests currently at the bottom of this file will end up in these two sections.  For now leaving them in place to make the diff clearer.",
        "createdAt" : "2018-11-18T21:09:04Z",
        "updatedAt" : "2018-11-18T22:17:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c4ad24bd40740dbb274b6c0a384e2b3e57671ac",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +1060,1064 @@\n    # -------------------------------------------------------------\n    # Non-Tick, Non-RelativeDelta DateOffsets\n\n"
  },
  {
    "id" : "8cb9c6df-e216-4633-b11a-9b58883affde",
    "prId" : 23771,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23771#pullrequestreview-176115085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e733d81-a7ef-4ab7-9d72-8e380deb3159",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this file getting kind of hefty. ok with making a subdir if it helps, e.g.\r\n\r\npandas/tests/arithmetic/datetime64/test_offsets....etc.",
        "createdAt" : "2018-11-18T23:12:38Z",
        "updatedAt" : "2018-11-18T23:12:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d2b14771-fdcf-43ba-b5ac-4bdf7ce81015",
        "parentId" : "7e733d81-a7ef-4ab7-9d72-8e380deb3159",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I'm hopeful we'll be able to de-duplicate a bunch of these (many moved from series/frame/index tests) and slim it down.  If not then subdirs may be the way to go.",
        "createdAt" : "2018-11-19T00:17:09Z",
        "updatedAt" : "2018-11-19T00:17:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c4ad24bd40740dbb274b6c0a384e2b3e57671ac",
    "line" : 583,
    "diffHunk" : "@@ -1,1 +1937,1941 @@        other = pd.Index([pd.offsets.DateOffset(years=1),\n                          pd.offsets.MonthEnd()])\n        other = tm.box_expected(other, box_with_array)\n        result = s + other\n        exp = DatetimeIndex([Timestamp('2001-1-1'), Timestamp('2000-2-29')])"
  },
  {
    "id" : "c66c0fa3-3889-400c-9a9c-b0e4043696aa",
    "prId" : 23789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23789#pullrequestreview-176577805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc79b0f0-a510-499c-b7f9-4acc4fc1d8f5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is a monster test, see if you can split a bit",
        "createdAt" : "2018-11-20T01:44:13Z",
        "updatedAt" : "2018-11-27T18:52:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "11185e47-1010-4578-a44e-9437973d4854",
        "parentId" : "fc79b0f0-a510-499c-b7f9-4acc4fc1d8f5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "sure",
        "createdAt" : "2018-11-20T01:59:29Z",
        "updatedAt" : "2018-11-27T18:52:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "77e4b265-a7a8-403e-86a2-e217087a4fa2",
        "parentId" : "fc79b0f0-a510-499c-b7f9-4acc4fc1d8f5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "pushed one more level of indentation into parametrize.  Note a huge difference, but its something.",
        "createdAt" : "2018-11-20T02:06:44Z",
        "updatedAt" : "2018-11-27T18:52:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3d775e3c8d5eb42a949f7a3b994cceb4ee508f2",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +1158,1162 @@        offset_cls = getattr(pd.offsets, cls_name)\n\n        with warnings.catch_warnings(record=True):\n            # pandas.errors.PerformanceWarning: Non-vectorized DateOffset being\n            # applied to Series or DatetimeIndex"
  },
  {
    "id" : "e7564c54-0292-463b-8b92-774ea9a38549",
    "prId" : 23789,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23789#pullrequestreview-178185002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fae3e21e-fefb-4048-9d70-c71755a1a4c9",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think the `record=True` is needed? (as you are not checking the captured warnings)",
        "createdAt" : "2018-11-26T09:12:46Z",
        "updatedAt" : "2018-11-27T18:52:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3d775e3c8d5eb42a949f7a3b994cceb4ee508f2",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +1158,1162 @@        offset_cls = getattr(pd.offsets, cls_name)\n\n        with warnings.catch_warnings(record=True):\n            # pandas.errors.PerformanceWarning: Non-vectorized DateOffset being\n            # applied to Series or DatetimeIndex"
  }
]