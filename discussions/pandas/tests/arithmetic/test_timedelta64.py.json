[
  {
    "id" : "abd96494-95bb-4192-a57d-a8b39d83c7a3",
    "prId" : 23425,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23425#pullrequestreview-170525024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe90c7c4-df3b-4379-aca0-c1452398a878",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same",
        "createdAt" : "2018-11-01T00:57:47Z",
        "updatedAt" : "2018-11-06T16:16:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d3d38d29f83b08c78031febfd18ee31a0f06114",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +737,741 @@\n    def test_td64arr_add_sub_td64_nat(self, box):\n        # GH#23320 special handling for timedelta64(\"NaT\")\n        tdi = pd.TimedeltaIndex([NaT, Timedelta('1s')])\n        other = np.timedelta64(\"NaT\")"
  },
  {
    "id" : "9e84646d-ef74-4f8b-86e1-633b84cf274a",
    "prId" : 23642,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23642#pullrequestreview-176325188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe966fa4-29a9-4c05-9e9b-fd5bedb5a1ea",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "something similar is not needed in the other files in `tests/arithmetic` ?",
        "createdAt" : "2018-11-16T19:58:28Z",
        "updatedAt" : "2018-11-20T01:20:23Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "f6dc99d8-1405-4131-ace7-6f4df74f39d2",
        "parentId" : "fe966fa4-29a9-4c05-9e9b-fd5bedb5a1ea",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Eventually we'll want something like this, probably put it next to `tm.box_expected`.  After this I'll end up rebasing #23734 and see if this can be re-used in the other files.  There are enough special cases that it isn't obvious off the top of my head.",
        "createdAt" : "2018-11-16T20:10:11Z",
        "updatedAt" : "2018-11-20T01:20:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "16cf1ebf-4d73-4d7a-b738-ae836f4321ef",
        "parentId" : "fe966fa4-29a9-4c05-9e9b-fd5bedb5a1ea",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did you rebase off of #23734? isn't this basically box_expected with another arg? there are a LOT of helpers out there. too many.....",
        "createdAt" : "2018-11-19T03:41:06Z",
        "updatedAt" : "2018-11-20T01:20:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cc188a6d-020e-4af6-999f-517879f90060",
        "parentId" : "fe966fa4-29a9-4c05-9e9b-fd5bedb5a1ea",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes this has been rebased.  This is about determining what box to use when we are parametrizing over two box types.  I agree it may be nice to cut down on the helpers; in fact I think we may be able to get rid of `tm.box_expected` if we're lucky (fixing the transpose thing...)",
        "createdAt" : "2018-11-19T14:38:07Z",
        "updatedAt" : "2018-11-20T01:20:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2df7d65b6e6f87c8facac41c33cca9044f1ce1cc",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +17,21 @@\n\ndef get_upcast_box(box, vector):\n    \"\"\"\n    Given two box-types, find the one that takes priority"
  }
]