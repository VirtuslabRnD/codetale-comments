[
  {
    "id" : "5d0b483b-e752-4f33-ab67-6772393a8029",
    "prId" : 7915,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adcd7caa-6157-48d9-b99f-beec822909b2",
        "parentId" : null,
        "authorId" : "040042eb-8986-4c50-aed9-ce965bd65b50",
        "body" : "I have made the test such that it tests for raises when trying to call `tz_convert` or `tz_localize` on `PeriodIndex` so that it _will_ break when #2106 is fixed. In the meantime I am testing against a `DatetimeIndex` instead of a `PeriodIndex`.\n",
        "createdAt" : "2014-08-07T03:57:06Z",
        "updatedAt" : "2014-08-07T17:50:15Z",
        "lastEditedBy" : "040042eb-8986-4c50-aed9-ce965bd65b50",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f5191982896d5dba57c10167d91e7d5ad7ab3fb",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1113,1117 @@            period_range('20140701', periods=1).tz_localize('UTC')\n        # l1 = period_range('20140701', periods=5, freq='D')\n        l1 = date_range('20140701', periods=5, freq='D')\n\n        int_idx = Index(range(5))"
  },
  {
    "id" : "b4a94bcd-2f4f-4221-b517-1ce795b11938",
    "prId" : 10253,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "822251dc-8bed-4581-8b00-4ceb7565a591",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "Can you add a test with a Panel (of some sort just to validate)\n",
        "createdAt" : "2015-06-04T20:22:38Z",
        "updatedAt" : "2015-06-06T03:09:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c3bf51befbbc14b22cb28ac9ee1e9406b3790ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1651,1655 @@\n    def test_pipe(self):\n        df = DataFrame({'A': [1, 2, 3]})\n        f = lambda x, y: x ** y\n        result = df.pipe(f, 2)"
  },
  {
    "id" : "11efdaf6-5203-4c62-b26b-8133f09297f5",
    "prId" : 10383,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "any other methods take args?\n",
        "createdAt" : "2015-06-24T17:06:05Z",
        "updatedAt" : "2015-06-24T17:42:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "78b5c7b1-7d4c-4075-ae53-3531bebdf95a",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "I talked about this here: https://github.com/pydata/pandas/pull/10383#issuecomment-114668678, I can add `kwargs` to `piecewise_polynomial_interpolate` but I am not sure how to test that method.\n",
        "createdAt" : "2015-06-24T17:07:15Z",
        "updatedAt" : "2015-06-24T17:42:20Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "764ff05a-63d0-4301-a6f2-eaa4d2a50716",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, why don't you just run it, so will be a smoke test (which asserts that it didn't crash)\n",
        "createdAt" : "2015-06-24T17:11:22Z",
        "updatedAt" : "2015-06-24T17:42:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d4a202ec-1783-44c9-86d2-264ea62e7f37",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "I actually can't get that method to run without the exception I link to in that comment. There seems to be no current test coverage in Pandas of this method.\n",
        "createdAt" : "2015-06-24T17:18:24Z",
        "updatedAt" : "2015-06-24T17:42:20Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "7cbc48a2-f34c-42ea-acc4-c1220d0ed32c",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ahh I see. hmm, wonder if that has api changes in recent versions to break this somehow?\n",
        "createdAt" : "2015-06-24T17:29:30Z",
        "updatedAt" : "2015-06-24T17:42:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6ab976fe-41b3-4a04-bc89-8f4894629dbe",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "LMK what you want to do about this.\n",
        "createdAt" : "2015-06-24T17:43:09Z",
        "updatedAt" : "2015-06-24T17:43:09Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "403dfb26-9a4d-43b9-bd84-76fade4f9f56",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think we can leave that for another PR (as there is an issue for this: #10365), if you don't directly know how to solve it\n",
        "createdAt" : "2015-06-24T20:00:15Z",
        "updatedAt" : "2015-06-24T20:00:15Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c68a57d8-c352-4918-9cea-e78625d8c4b7",
        "parentId" : "135cf91b-f6e0-412b-8af7-5d569cd351b2",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "I have no idea how to solve it :-)\n",
        "createdAt" : "2015-06-24T20:06:30Z",
        "updatedAt" : "2015-06-24T20:06:30Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      }
    ],
    "commit" : "55d07c0c0849a0f2ff75400c25b2b40ce75a2575",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1376,1380 @@    def test_spline_extrapolate(self):\n        tm.skip_if_no_package('scipy', '0.15', 'setting ext on scipy.interpolate.UnivariateSpline')\n        s = Series([1, 2, 3, 4, np.nan, 6, np.nan])\n        result3 = s.interpolate(method='spline', order=1, ext=3)\n        expected3 = Series([1., 2., 3., 4., 5., 6., 6.])"
  },
  {
    "id" : "3ed04eb4-d2b6-48ec-b2db-664cf874c0d7",
    "prId" : 10691,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c614160-b13e-4a48-923a-949667cc0a22",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number as a comment\n",
        "createdAt" : "2015-08-08T00:30:10Z",
        "updatedAt" : "2015-08-30T17:49:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4d52c221da4facc0f64f5cbfecb7ceb1cc4656",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +862,866 @@        result = s.interpolate(method='linear', limit=2)\n        assert_series_equal(result, expected)\n\n    def test_interp_limit_forward(self):\n        s = Series([1, 3, np.nan, np.nan, np.nan, 11])"
  }
]