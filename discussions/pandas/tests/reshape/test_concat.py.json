[
  {
    "id" : "9c53fe46-bdc0-4492-8ee5-4419b53814f6",
    "prId" : 19021,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19021#pullrequestreview-112220298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4f7f07b-578f-4ef1-badc-9a712f9ec837",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can just use 2 parameterize here, one for df_columns and one for series_index; you don't need combinations, pytest already does this.",
        "createdAt" : "2018-02-22T02:14:08Z",
        "updatedAt" : "2018-04-17T17:28:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "79634899-0c75-4f57-9049-2354c31d669a",
        "parentId" : "f4f7f07b-578f-4ef1-badc-9a712f9ec837",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "I don't get this approach to work, AFAIKS, parametrize doesn't do this for you, and I've googled it without results. Can you give an example? ",
        "createdAt" : "2018-04-14T22:00:38Z",
        "updatedAt" : "2018-04-17T17:28:41Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "13537ae0513c0c96b25c11cb9aae2799db2c5d48",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +878,882 @@        assert_frame_equal(result, expected)\n\n    @pytest.mark.parametrize(\"df_columns, series_index\",\n                             combinations(indexes_can_append, r=2),\n                             ids=lambda x: x.__class__.__name__)"
  },
  {
    "id" : "86f3b41d-0bc3-4cc3-b852-a5b7f3f14bb6",
    "prId" : 19021,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19021#pullrequestreview-666216748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3efcfdaf-2ef5-4d68-8604-104d1070306a",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@topper-123 can you help me understand why raising is the correct thing to do here?  i have a branch that fixes a Series construction bug:\r\n\r\n```\r\n    def test_constructor_dict_multiindex_reindex_flat(self):\r\n        # construction involves reindexing with a MultiIndex corner case\r\n        data = {('i', 'i'): 0, ('i', 'j'): 1, ('j', 'i'): 2, \"j\": np.nan}\r\n        expected = Series(data)\r\n\r\n        result = Series(expected[:-1].to_dict(), index=expected.index)\r\n        tm.assert_series_equal(result, expected)\r\n```\r\n\r\nbut the fix for that (in MultiIndex.reindex) causes this test to fail",
        "createdAt" : "2021-05-22T23:20:06Z",
        "updatedAt" : "2021-05-22T23:20:06Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "13537ae0513c0c96b25c11cb9aae2799db2c5d48",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +907,911 @@        # GH18359\n        # Dataframe.append will raise if IntervalIndex/MultiIndex appends\n        # or is appended to a different index type\n        #\n        # See also test 'test_append_different_columns_types' above for"
  },
  {
    "id" : "1bbcf772-d45f-4e20-bd6b-5064e9a22f5d",
    "prId" : 20613,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20613#pullrequestreview-116282054",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3b8fd09-8b0d-4219-99b3-1379ffbcda89",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not that I don't mind more tests, but are any of these duplicates of existing ones?",
        "createdAt" : "2018-04-29T21:14:00Z",
        "updatedAt" : "2018-05-01T00:20:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "865919aa-5863-435d-8f6d-77f223469f19",
        "parentId" : "e3b8fd09-8b0d-4219-99b3-1379ffbcda89",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yeah, probably. I'll try to de-duplicate a bit.",
        "createdAt" : "2018-04-30T13:15:07Z",
        "updatedAt" : "2018-05-01T00:20:02Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e1b0241358c10893939d135e91ab16cfa48cadd",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +2387,2391 @@                            columns=['a', 'b', 'c'])\n    tm.assert_frame_equal(result, expected)\n\n    result = pd.concat([df, df[['c', 'b']]], join='inner', sort=True,\n                       ignore_index=True)"
  },
  {
    "id" : "b71809a9-6247-4606-9ce3-99151e59add2",
    "prId" : 22318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22318#pullrequestreview-148462777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cb17a2d-e126-466b-ab26-691ab7eaa52a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "issue number\r\n\r\nrename test to test_concat_join_axes_deprecated",
        "createdAt" : "2018-08-22T12:48:21Z",
        "updatedAt" : "2019-07-03T02:21:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc9c79b03dc9897a436a1cff8cbc26e4d10f2f59",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +725,729 @@    def test_concat_join_axes_deprecated(self, axis):\n        # GH21951\n        one = pd.DataFrame([[0., 1.], [2., 3.]], columns=list('ab'))\n        two = pd.DataFrame([[10., 11.], [12., 13.]], index=[1, 2],\n                           columns=list('bc'))"
  }
]