[
  {
    "id" : "dd2f60ef-c6d3-432b-b15d-488cc6a95b61",
    "prId" : 38843,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38843#pullrequestreview-560607220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e45831-0dd7-4cbd-a1e7-60e793b02234",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "any thoughts on if/why this is the desired behavior?",
        "createdAt" : "2020-12-31T03:21:56Z",
        "updatedAt" : "2021-01-01T21:44:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "072f5af4-b761-457d-9444-725c10a8eb93",
        "parentId" : "f8e45831-0dd7-4cbd-a1e7-60e793b02234",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the empty you are concatting with is object dtype\n\nbut i think that we should be removing empties during initial stages of concat- so this is a bit sketch - eg i think you should end up with df_1 dtypes but maybe not reading correctly ",
        "createdAt" : "2020-12-31T03:32:33Z",
        "updatedAt" : "2021-01-01T21:44:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "52a7ef27-c5fb-44b6-be4f-568b975491c2",
        "parentId" : "f8e45831-0dd7-4cbd-a1e7-60e793b02234",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah i wouldn't expect this to upcast",
        "createdAt" : "2021-01-01T20:52:48Z",
        "updatedAt" : "2021-01-01T21:44:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7908a2f8-31db-40e6-a97b-40f0b38acd4c",
        "parentId" : "f8e45831-0dd7-4cbd-a1e7-60e793b02234",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "ill take a look at what it would take to change this, see if it makes sense to do in this PR or separately",
        "createdAt" : "2021-01-01T21:16:45Z",
        "updatedAt" : "2021-01-01T21:44:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d953f5ff-16cb-4031-9705-666601ea611d",
        "parentId" : "f8e45831-0dd7-4cbd-a1e7-60e793b02234",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "mm the quick fix i tried for this ended up breaking a bunch of other tests.  let's address the next pass",
        "createdAt" : "2021-01-01T21:45:36Z",
        "updatedAt" : "2021-01-01T21:45:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9be5dfbea92c435623cf0fe68590f089fc0efa45",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +211,215 @@        result = pd.concat([df_1, df_2], axis=0)\n        expected = df_1.copy()\n        expected[\"EmptyCol\"] = expected[\"EmptyCol\"].astype(object)  # TODO: why?\n        tm.assert_frame_equal(result, expected)\n"
  }
]