[
  {
    "id" : "9179c5f6-63ba-4de1-a444-c3422dd94dad",
    "prId" : 21223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21223#pullrequestreview-124902557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0aa3bbd2-d521-4d52-9ad6-942d15a1840c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "also parameterize this as much as possible.",
        "createdAt" : "2018-05-29T00:36:25Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e90380d2-1271-4e74-a80a-720e2eaa5b21",
        "parentId" : "0aa3bbd2-d521-4d52-9ad6-942d15a1840c",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "done",
        "createdAt" : "2018-05-31T17:30:15Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d099fd6c78db0739d9abe04bfb5c89720d234a7b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1889,1893 @@    assert_frame_equal(result, expected)\n\n\n@pytest.mark.parametrize(\"on,left_on,right_on,left_index,right_index,nms,nm\", [\n    (['outer', 'inner'], None, None, False, False, ['outer', 'inner'], 'B'),"
  },
  {
    "id" : "f1ea703f-c3c8-4f14-b33a-6db0d1e8f1b0",
    "prId" : 21223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21223#pullrequestreview-130022428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce61b59d-7370-423b-9b29-c17135998588",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you format this so it lines up, its pretty unreadable now",
        "createdAt" : "2018-06-19T01:17:04Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c897a7af-677b-4df2-bf33-eb36b08eead2",
        "parentId" : "ce61b59d-7370-423b-9b29-c17135998588",
        "authorId" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "body" : "Thanks - done",
        "createdAt" : "2018-06-19T15:10:33Z",
        "updatedAt" : "2018-07-23T14:46:00Z",
        "lastEditedBy" : "db2002f5-d426-4f7c-9815-4de0d8b60e7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d099fd6c78db0739d9abe04bfb5c89720d234a7b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1890,1894 @@\n\n@pytest.mark.parametrize(\"on,left_on,right_on,left_index,right_index,nms,nm\", [\n    (['outer', 'inner'], None, None, False, False, ['outer', 'inner'], 'B'),\n    (None, None, None, True, True, ['outer', 'inner'], 'B'),"
  },
  {
    "id" : "33d63c77-54b6-4c8c-abc8-cc256d723925",
    "prId" : 21310,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21310#pullrequestreview-125740896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e670122e-52d1-4e03-9569-c0606665432e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "need to test the error case (e.g. bool / inferred bool) on 1 side and numeric on the other (I *think* this will raise), prob have an existing test, just need to add to it",
        "createdAt" : "2018-06-04T21:02:07Z",
        "updatedAt" : "2018-06-08T17:44:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad845d7f187eff61cab9f8c2a1c13c1c53f2e3d4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1533,1537 @@\n        expected = DataFrame({'key': [True, False]}, dtype=object)\n        result = pd.merge(df1, df2, on='key')\n        assert_frame_equal(result, expected)\n        result = pd.merge(df2, df1, on='key')"
  },
  {
    "id" : "de28c8de-40d9-4746-b8b5-5cccecc6883e",
    "prId" : 21310,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21310#pullrequestreview-125740896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "188acc9d-e5d6-45f0-9eea-7b4b9a770ea7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank lines between cases",
        "createdAt" : "2018-06-04T21:02:20Z",
        "updatedAt" : "2018-06-08T17:44:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad845d7f187eff61cab9f8c2a1c13c1c53f2e3d4",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1535,1539 @@        result = pd.merge(df1, df2, on='key')\n        assert_frame_equal(result, expected)\n        result = pd.merge(df2, df1, on='key')\n        assert_frame_equal(result, expected)\n"
  },
  {
    "id" : "90cc9cc5-750d-44fb-988b-d8c26616cb39",
    "prId" : 21310,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21310#pullrequestreview-127224954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de335411-5644-4a27-8849-0886685940ce",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ideally use the how fixture",
        "createdAt" : "2018-06-04T21:02:31Z",
        "updatedAt" : "2018-06-08T17:44:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c90bc42e-62ec-42ca-bdfb-232b74919102",
        "parentId" : "de335411-5644-4a27-8849-0886685940ce",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is also not used for the other tests on this, so leaving this for now",
        "createdAt" : "2018-06-08T16:11:46Z",
        "updatedAt" : "2018-06-08T17:44:08Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad845d7f187eff61cab9f8c2a1c13c1c53f2e3d4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1536,1540 @@        assert_frame_equal(result, expected)\n        result = pd.merge(df2, df1, on='key')\n        assert_frame_equal(result, expected)\n\n        # with missing value"
  },
  {
    "id" : "9852110a-8cc2-4e72-9da4-eb6ac45d941f",
    "prId" : 23262,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23262#pullrequestreview-168639977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f145abe0-4db4-4c4c-998f-b095ef8151c7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move to pandas/tests/extension/base/reshape (and use the fixtures)",
        "createdAt" : "2018-10-26T00:53:38Z",
        "updatedAt" : "2018-12-18T14:38:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bae6cacef83991adfff4961abb72bbb097216c6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1327,1331 @@        assert_frame_equal(expected, result)\n\n    def test_merge_on_int_array(self):\n        # GH 23020\n        df = pd.DataFrame({'A': pd.Series([1, 2, np.nan], dtype='Int64'),"
  },
  {
    "id" : "e1630d53-e67d-4ff7-9196-d7d8b88a8e33",
    "prId" : 23262,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23262#pullrequestreview-186098946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51ba3153-d2e6-40e8-884b-29534099fb32",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think can remove this?",
        "createdAt" : "2018-12-18T14:13:43Z",
        "updatedAt" : "2018-12-18T14:38:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8a1117db-3658-4187-a741-526f43640b04",
        "parentId" : "51ba3153-d2e6-40e8-884b-29534099fb32",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I guess this does test merging on an NA key, which the generic test doesn't. So maybe leave it?",
        "createdAt" : "2018-12-18T14:38:22Z",
        "updatedAt" : "2018-12-18T14:38:57Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bae6cacef83991adfff4961abb72bbb097216c6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1331,1335 @@        df = pd.DataFrame({'A': pd.Series([1, 2, np.nan], dtype='Int64'),\n                           'B': 1})\n        result = pd.merge(df, df, on='A')\n        expected = pd.DataFrame({'A': pd.Series([1, 2, np.nan], dtype='Int64'),\n                                 'B_x': 1,"
  },
  {
    "id" : "43a36ed4-5cf8-4fa6-9398-a298403fb8ed",
    "prId" : 24819,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24819#pullrequestreview-193990631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8817680-3532-4b1f-8b41-a66f7a26e027",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Can you add the github issue number as a comment?",
        "createdAt" : "2019-01-17T23:16:05Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "58ffd5b8-d23b-4da9-89d8-969dafd4a233",
        "parentId" : "b8817680-3532-4b1f-8b41-a66f7a26e027",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "added!",
        "createdAt" : "2019-01-18T08:36:08Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "71729b242da04c01856f640194f56a76c77ebf12",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1545,1549 @@def test_merge_suffix(col1, col2, kwargs, expected_cols):\n    # issue: 24782\n    a = pd.DataFrame({col1: [1, 2, 3]})\n    b = pd.DataFrame({col2: [4, 5, 6]})\n"
  },
  {
    "id" : "af35a69d-ac1a-4fe1-8fed-87a09e4095ff",
    "prId" : 24819,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24819#pullrequestreview-199518899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71f6b5c2-adff-44eb-ab53-2a0f0b33b62d",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add here a comment like `# TODO reconsider current behaviour of raising, see #....` (with a link to the issue). \r\nJust in case later on when we want to change this, we won't think like \"oh no, we cannot change it, because it is tested behaviour\")",
        "createdAt" : "2019-02-03T15:32:43Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "5c268918-dac4-4bb2-b32b-bce4d1ecf9a8",
        "parentId" : "71f6b5c2-adff-44eb-ab53-2a0f0b33b62d",
        "authorId" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "body" : "thanks, added!",
        "createdAt" : "2019-02-04T10:32:01Z",
        "updatedAt" : "2019-02-04T17:16:30Z",
        "lastEditedBy" : "826346de-4250-468b-bca4-1f6bdaf861b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "71729b242da04c01856f640194f56a76c77ebf12",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1571,1575 @@\n    # TODO: might reconsider current raise behaviour, see issue 24782\n    msg = \"columns overlap but no suffix specified\"\n    with pytest.raises(ValueError, match=msg):\n        pd.merge(a, b, left_index=True, right_index=True, suffixes=suffixes)"
  },
  {
    "id" : "8af86086-0cbc-457a-9d5c-0b491dedcb94",
    "prId" : 24904,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24904#pullrequestreview-196072656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can others double-check this expected output? This is what 0.23.4 / this PR gives. I'm a bit confused about the duplicate `2` in the index.\r\n\r\n```python\r\n\r\nIn [5]: expected\r\nOut[5]:\r\n     a  key  b\r\n0  1.0    0  1\r\n1  2.0    1  2\r\n2  3.0    1  2\r\n2  NaN    2  3\r\n```\r\n\r\nI may have expected something like \r\n\r\n```python\r\nIn [11]: pd.merge(left, right.rename_axis('key').reset_index(), on='key', how='right').set_index('key', drop=False)\r\nOut[11]:\r\n       a  key  b\r\nkey\r\n0    1.0    0  1\r\n1    2.0    1  2\r\n1    3.0    1  2\r\n2    NaN    2  3\r\n```\r\n\r\nwhere the 1 is duplicated. Or am I missing something?",
        "createdAt" : "2019-01-24T14:25:12Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "0a9124f1-bb2a-4b99-b58a-64ddcf936463",
        "parentId" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, I was first looking at the 'b' column (where the duplicate 2 is of course normal), but the index :)\r\n\r\nI assume this is because with `how='right` and `right_index=True`, we use the index of the right for the index of the final dataframe (so the 'key' column corresponds to the index in the result).\r\n\r\nNot sure this is fully correct though. I don't know if we have somewhere a specification of what the resulting index of a merge should be. \r\n\r\n",
        "createdAt" : "2019-01-24T14:50:28Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4dc7aa37-41de-4341-9f28-2d0c7b70f477",
        "parentId" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> so the 'key' column corresponds to the index in the result\r\n\r\nand again looking wrongly, because what I describe is your expected result, not the actual ...\r\n\r\nYes, so that certainly looks wrong",
        "createdAt" : "2019-01-24T14:52:12Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9c6971b8-21c6-4892-ab5d-234a3936d054",
        "parentId" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : ":)\r\n\r\nI may just add a comment that this test should probably fail as well, and open a new issue about it, since this is the behavior on 0.23.4.",
        "createdAt" : "2019-01-24T14:55:12Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "b4d1156b-f3f3-43be-b927-dd9c751539d3",
        "parentId" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, a comment would be good",
        "createdAt" : "2019-01-24T14:58:19Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "db67e48d-2079-453b-b2a8-d69d178e4abf",
        "parentId" : "3df570c1-05b0-46dc-a30f-95f072b1db35",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Hmm this looks vaguely similar to https://github.com/pandas-dev/pandas/issues/17257",
        "createdAt" : "2019-01-24T15:00:00Z",
        "updatedAt" : "2019-01-24T15:07:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c458698b9014b8313d1a3452c098d5ad050a2dc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +967,971 @@        left = pd.DataFrame({'a': [1, 2, 3], 'key': [0, 1, 1]})\n        right = pd.DataFrame({'b': [1, 2, 3]})\n\n        expected = pd.DataFrame({'a': [1, 2, 3, None],\n                                 'key': [0, 1, 1, 2],"
  },
  {
    "id" : "501bf6c1-2916-4e7b-82e6-7f646a54eb12",
    "prId" : 25009,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25009#pullrequestreview-220321466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20ee685c-d015-4e0f-916e-00065c6076ee",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number",
        "createdAt" : "2019-03-28T23:34:32Z",
        "updatedAt" : "2019-04-29T05:32:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cdf8bd50fb7bef725a78d21aac446d1d530b20",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1090,1094 @@    def test_merge_take_missing_values_from_index_of_other_dtype(self):\n        # GH 24212\n        left = pd.DataFrame({'a': [1, 2, 3],\n                             'key': pd.Categorical(['a', 'a', 'b'],\n                                                   categories=list('abc'))})"
  },
  {
    "id" : "9dcf3812-1c21-4637-80ab-2b5b48419e54",
    "prId" : 25009,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25009#pullrequestreview-220835689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf6dae28-33e9-4d32-a882-554c5b22a52e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why did this change?",
        "createdAt" : "2019-03-30T18:58:29Z",
        "updatedAt" : "2019-04-29T05:32:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a88a2733-60f5-4155-ac55-93e7e7aaf69a",
        "parentId" : "bf6dae28-33e9-4d32-a882-554c5b22a52e",
        "authorId" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "body" : "The original behaviour of trying to infer the index value does not always work when `other_index` has a different dtype (for instance, if `index` is a `DateTimeIndex` and `other_index` is an `IntervalIndex` then `index` can't take the values stored in `other_index` nor can it take the row number, so the only solution is to use NA values). Keeping the old behaviour would mean having to dispatch on the dtypes of both indices.",
        "createdAt" : "2019-03-30T20:06:06Z",
        "updatedAt" : "2019-04-29T05:32:19Z",
        "lastEditedBy" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cdf8bd50fb7bef725a78d21aac446d1d530b20",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +1083,1087 @@                                 'b': [1, 2, 2, 3]},\n                                columns=['a', 'key', 'b'],\n                                index=[0, 1, 2, np.nan])\n        result = left.merge(right, left_on='key', right_index=True,\n                            how='right')"
  },
  {
    "id" : "28bc7ab7-c83c-4401-bb31-3066f5d543e4",
    "prId" : 25289,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25289#pullrequestreview-205288172",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eb297df-ea63-435d-a879-60c5a41e3ec4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a 1-line comment to each of these, and make the names a bit more verbose; its easy to see this in the diff, but when looking at the raw column these names are hard to grok.",
        "createdAt" : "2019-02-19T13:57:28Z",
        "updatedAt" : "2019-02-20T14:53:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "874af2c1-ef4e-459c-84ed-9d1b634fa387",
        "parentId" : "0eb297df-ea63-435d-a879-60c5a41e3ec4",
        "authorId" : "16f9acb0-fe4c-43cb-8d80-0964ccec8e25",
        "body" : "Are you talking about column names `a` and `b` or fixture names `value_col` and `value_col2`?",
        "createdAt" : "2019-02-19T14:23:58Z",
        "updatedAt" : "2019-02-20T14:53:20Z",
        "lastEditedBy" : "16f9acb0-fe4c-43cb-8d80-0964ccec8e25",
        "tags" : [
        ]
      },
      {
        "id" : "51fd572b-18b3-44c6-a8c3-a35b940fc874",
        "parentId" : "0eb297df-ea63-435d-a879-60c5a41e3ec4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the fixture names",
        "createdAt" : "2019-02-19T14:30:25Z",
        "updatedAt" : "2019-02-20T14:53:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "619a90ce-023a-4870-bbb8-297b9d4ee676",
        "parentId" : "0eb297df-ea63-435d-a879-60c5a41e3ec4",
        "authorId" : "16f9acb0-fe4c-43cb-8d80-0964ccec8e25",
        "body" : "done",
        "createdAt" : "2019-02-19T15:44:41Z",
        "updatedAt" : "2019-02-20T14:53:20Z",
        "lastEditedBy" : "16f9acb0-fe4c-43cb-8d80-0964ccec8e25",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d3e6912a15a83a39d5e854fa2a67da14e7ea8af",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +61,65 @@\n\n@pytest.fixture(params=get_series(), ids=lambda x: x.dtype.name)\ndef series_of_dtype(request):\n    \"\"\""
  },
  {
    "id" : "d6ddda83-39cf-4680-8d83-7517faf72b62",
    "prId" : 28762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28762#pullrequestreview-297866842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeaf98d6-d903-4582-b654-656c941f4e45",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "explicity construct the expected result rather than computing it",
        "createdAt" : "2019-10-06T22:34:39Z",
        "updatedAt" : "2019-10-07T00:37:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "66ee140d-a460-4969-9a10-00edd070ba18",
        "parentId" : "eeaf98d6-d903-4582-b654-656c941f4e45",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Updated; to simplify the test a little I included only the merge that was actually erring on master (also allows to ignore the unrelated mismatching dtype issue)",
        "createdAt" : "2019-10-06T23:18:34Z",
        "updatedAt" : "2019-10-07T00:37:48Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "261854062c4e5a3cc4cbd6aa64211db7241e57e6",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +2104,2108 @@    left = right.copy()\n    left[\"a\"] = left[\"a\"].astype(\"category\")\n\n    result = pd.merge(left, right, how=\"inner\", on=\"a\")\n    expected = right.copy()"
  },
  {
    "id" : "ca38733d-7830-47af-8074-2b16455cf1bd",
    "prId" : 32079,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32079#pullrequestreview-362236939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f414ea27-ca1c-4e80-a763-12191a34022b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "does this test both the int8_t and int16_t cases?",
        "createdAt" : "2020-02-20T21:11:38Z",
        "updatedAt" : "2020-02-25T10:50:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a994d53d01328bc87fa5348f2a32bbea51d78a5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +2168,2172 @@@pytest.mark.parametrize(\"n_categories\", [5, 128])\ndef test_categorical_non_unique_monotonic(n_categories):\n    # GH 28189\n    # With n_categories as 5, we test the int8 case is hit in libjoin,\n    # with n_categories as 128 we test the int16 case."
  },
  {
    "id" : "22a4e061-9c7f-48f6-8c6d-2f3a343554b2",
    "prId" : 32079,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32079#pullrequestreview-364066614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6acebbd-f0b2-4be6-9a4f-7035ae3d8e55",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can you add a comment here that 5 and 128 are chosen to ensure this hits specific dtypes in libjoin",
        "createdAt" : "2020-02-25T03:06:51Z",
        "updatedAt" : "2020-02-25T10:50:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d43afa19-9cd0-4ac9-9a1d-eb1938b412a4",
        "parentId" : "c6acebbd-f0b2-4be6-9a4f-7035ae3d8e55",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "@jbrockmendel Sure, added",
        "createdAt" : "2020-02-25T11:24:36Z",
        "updatedAt" : "2020-02-25T11:24:36Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a994d53d01328bc87fa5348f2a32bbea51d78a5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2166,2170 @@\n\n@pytest.mark.parametrize(\"n_categories\", [5, 128])\ndef test_categorical_non_unique_monotonic(n_categories):\n    # GH 28189"
  },
  {
    "id" : "d64736e5-b09c-450d-aeda-03d855f3f346",
    "prId" : 34810,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34810#pullrequestreview-443010325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "955c3675-c0d6-4d9c-827b-1603af09e130",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "You are not actually passing the parameterized `suffixes` here, so I think that the dict case is not tested, and will also not raise a warning (as dicts are considered list-like)",
        "createdAt" : "2020-07-06T11:58:10Z",
        "updatedAt" : "2020-07-06T11:58:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "b96df6fa9be7ec922032e3eedbc503255aef3381",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +2077,2081 @@\n    with tm.assert_produces_warning(FutureWarning):\n        pd.merge(a, b, left_index=True, right_index=True, suffixes={\"left\", \"right\"})\n\n"
  }
]