[
  {
    "id" : "731bc714-6278-4868-b069-1e601918b5fe",
    "prId" : 5224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40f280bd-a1e2-4e25-abc6-62028de68248",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "future reference - you can use `assert_produces_warning()` here as well, so you could get down to:\n\n``` python\nwith tm.assert_produces_warning():\n    result = values.str.match('.*(BAD[_]+).*(BAD)')\n```\n",
        "createdAt" : "2013-10-31T00:51:42Z",
        "updatedAt" : "2013-10-31T00:51:42Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b832d020035c06dcdcdab93cb0cfd8851235ad1",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +420,424 @@        values = Series([u('fooBAD__barBAD'), NA, u('foo')])\n\n        with warnings.catch_warnings(record=True) as w:\n            warnings.simplefilter('always')\n            result = values.str.match('.*(BAD[_]+).*(BAD)')"
  },
  {
    "id" : "a35b2aa5-4f32-4310-a3aa-53bb3cff227e",
    "prId" : 9439,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "parentId" : null,
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "ugh... I guess we still support Python 3.2 :(\n",
        "createdAt" : "2015-02-07T01:19:40Z",
        "updatedAt" : "2015-02-07T01:19:40Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "01c038fc-92e2-4caf-b900-2955b220f9e1",
        "parentId" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Isn't 3.2 tested in below? I've expected `compat.unichr` can work for 3.2 also.\n\nhttps://travis-ci.org/pydata/pandas/jobs/49806158\n",
        "createdAt" : "2015-02-07T02:19:25Z",
        "updatedAt" : "2015-02-07T02:19:25Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "cf904e10-4637-4deb-866b-3148073b6571",
        "parentId" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "I know, it works!\n\nI was going to suggest just using `u'¼'` but the `u` unicode literal is not supported on Python 3.2.\n",
        "createdAt" : "2015-02-07T02:21:08Z",
        "updatedAt" : "2015-02-07T02:21:08Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "3ee673af-1a47-44e5-a097-3ed57669c62d",
        "parentId" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "I see. I also tried to use `u` at first and failed... Will wait a conclusion of #9118.\n",
        "createdAt" : "2015-02-07T02:26:36Z",
        "updatedAt" : "2015-02-07T02:26:36Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "7bd377d3-4fc3-4558-831b-074dc330a0e3",
        "parentId" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "u(...) is the way to handle 3.2 compat\n",
        "createdAt" : "2015-02-07T02:28:26Z",
        "updatedAt" : "2015-02-07T02:28:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "41503957-128e-4e66-a974-66f323f1a92e",
        "parentId" : "dcbe37f7-725e-40c7-aa95-db9ae0ceca32",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "I think we can't use `u( )` here because escaped unicode is not handled as numeric or decimal.\n",
        "createdAt" : "2015-02-07T02:36:48Z",
        "updatedAt" : "2015-02-07T02:36:48Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "004610035b156b4e5e2c8694878e65f055e30db3",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +667,671 @@        # 0x1378: ፸ ETHIOPIC NUMBER SEVENTY\n        # 0xFF13: ３ Em 3\n        values = ['A', '3', unichr(0x00bc), unichr(0x2605),\n                  unichr(0x1378), unichr(0xFF13), 'four']\n        s = Series(values)"
  }
]