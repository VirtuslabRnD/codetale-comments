[
  {
    "id" : "d781c325-bfad-41bf-b90b-181477549410",
    "prId" : 21093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21093#pullrequestreview-123638223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6c559e4-269d-4477-aa44-58fe982d3227",
        "parentId" : null,
        "authorId" : "30f47034-12cc-4e1e-bb16-412ba0868466",
        "body" : "Does pandas import all modules at `import pandas`? If not, maybe [this](https://github.com/bokeh/bokeh/blob/73f60d791310f4a03e9a8c06eb743de496cc2ada/tests/test_python_execution_with_OO.py) will be helpful.",
        "createdAt" : "2018-05-17T13:12:36Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "30f47034-12cc-4e1e-bb16-412ba0868466",
        "tags" : [
        ]
      },
      {
        "id" : "a75ad918-5f9c-4b24-8249-4133ea70dada",
        "parentId" : "f6c559e4-269d-4477-aa44-58fe982d3227",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@WillAyd do we want to go this way to also check some submodules?",
        "createdAt" : "2018-05-23T09:20:43Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e3c2e1f1-74d0-431c-b6e5-2af78b4ba03f",
        "parentId" : "f6c559e4-269d-4477-aa44-58fe982d3227",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I can take a look - if it's not a lot of effort I suppose it doesn't hurt",
        "createdAt" : "2018-05-23T15:58:06Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "34580177-1afc-4420-a6bd-9da10ec37fa3",
        "parentId" : "f6c559e4-269d-4477-aa44-58fe982d3227",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I've been messing around with this for a bit but AFAICT it keeps getting choked up when trying to import modules containing optional dependencies (ex: `pandas.io.s3`). I can't think of a simple way to configure the test so that it can differentiate intentional ImportErrors as a result of missing dependencies.\r\n\r\nFor now I'm going to revert to just working with the top level import - can open a separate issue if we wanted this to work recursively",
        "createdAt" : "2018-05-25T18:26:25Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d148646b-5afa-4893-8edf-23f926925a34",
        "parentId" : "f6c559e4-269d-4477-aa44-58fe982d3227",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yep, if it turns out difficult, on problem in starting with the basic test (which already tests the large majority of our API)",
        "createdAt" : "2018-05-28T06:54:14Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "75dbaad4cf7b33b8b6ba709e3bd527e4d970cb5d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +58,62 @@def test_oo_optimizable():\n    # GH 21071\n    subprocess.check_call([\"python\", \"-OO\", \"-c\", \"import pandas\"])\n\n"
  },
  {
    "id" : "a168bb75-9405-4fdd-9783-eec2cb01ae1e",
    "prId" : 26685,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26685#pullrequestreview-246968212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4fe2244-3e85-4497-9a44-8c265411de7c",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "quickly looking at one of the ci failures, i think that you need to make these raw strings since the match parameter of pytest.raises assumes a regex.",
        "createdAt" : "2019-06-06T22:38:31Z",
        "updatedAt" : "2019-06-11T07:37:33Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "13eb726e-3aa7-43d6-b326-8cae5c6c7806",
        "parentId" : "d4fe2244-3e85-4497-9a44-8c265411de7c",
        "authorId" : "4d2738f1-d2ce-40ef-8800-764895c611af",
        "body" : "It was even simpler than that - following a change to formatting the error message, it wasn't putting the newline before the first numpy error.",
        "createdAt" : "2019-06-07T08:21:31Z",
        "updatedAt" : "2019-06-11T07:37:33Z",
        "lastEditedBy" : "4d2738f1-d2ce-40ef-8800-764895c611af",
        "tags" : [
        ]
      }
    ],
    "commit" : "014275a1613b7ebff0ba005facc9d1a1399073bd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +151,155 @@    expected_msg = (\n        \"Unable to import required dependencies:\"\n        \"\\nnumpy: cannot import name numpy\"\n        \"\\npytz: cannot import name some_dependency\"\n        \"\\ndateutil: cannot import name some_other_dependency\""
  },
  {
    "id" : "c65317c7-9576-4451-84b7-d09a46e8f10a",
    "prId" : 26685,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26685#pullrequestreview-247382156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5fe77cb-8c18-4318-96bf-f49f109e791d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here as a comment",
        "createdAt" : "2019-06-08T21:12:58Z",
        "updatedAt" : "2019-06-11T07:37:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "014275a1613b7ebff0ba005facc9d1a1399073bd",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +137,141 @@def test_missing_required_dependency(monkeypatch):\n    # GH 23868\n    original_import = __import__\n\n    def mock_import_fail(name, *args, **kwargs):"
  }
]