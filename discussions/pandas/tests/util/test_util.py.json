[
  {
    "id" : "29d9c660-5c9a-404d-b397-2bbfbc426725",
    "prId" : 19751,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19751#pullrequestreview-97415625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "431cc376-ce04-4a24-b883-f6ef0d9aac3c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why are u adding all this?",
        "createdAt" : "2018-02-18T20:21:11Z",
        "updatedAt" : "2018-02-21T11:37:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "31bec7b6-5e4d-4961-b8fc-30e73c2b6a2c",
        "parentId" : "431cc376-ce04-4a24-b883-f6ef0d9aac3c",
        "authorId" : "da19b543-f846-4415-b573-9ab03a8005fd",
        "body" : "In a nutshell, to test that warnings are only raised if ``_f4()`` is called with the ``old`` keyword (*keyword to deprecate*).\r\n\r\nI gave ``_f4()`` two keywords: \r\n- **old** to represent the keyword that's not removed yet.\r\n- **unchanged** is meant to represent a keyword that shouldn't be impacted by the decorator.\r\n\r\nWith f4 I can test that:\r\n- A *FutureWarning* will get raised if a user calls f4 with the old (*deprecated keyword*). For example ``self.f4(old=9)`` will raise an alert that the ``old`` keyword is no longer supported.\r\n- No warning is raised if f4 is called without the old keyword.  For example, ``self.f4(unchanged=x)`` will not raise an alert.\r\n\r\nHope that makes sense.",
        "createdAt" : "2018-02-18T20:44:29Z",
        "updatedAt" : "2018-02-21T11:37:12Z",
        "lastEditedBy" : "da19b543-f846-4415-b573-9ab03a8005fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7ed3c41b6d0e63a08aa5b847a8c1c0565d13e6b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +39,43 @@            return old\n\n        self.f1 = _f1\n        self.f2 = _f2\n        self.f3 = _f3"
  }
]