[
  {
    "id" : "d5e46acd-e674-4db3-a777-a168674a4036",
    "prId" : 3060,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7505275f-6bbf-4d83-9adb-292b09a3d728",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "this is a smoke test i presume? result is not being used\n",
        "createdAt" : "2013-09-30T18:51:59Z",
        "updatedAt" : "2013-09-30T18:51:59Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "53acdd37-b30b-4a03-85e8-f741662a67f6",
        "parentId" : "7505275f-6bbf-4d83-9adb-292b09a3d728",
        "authorId" : "484b2208-e00e-4367-817d-7b3bd322e860",
        "body" : "This line can be deleted, it really has no effect.\n",
        "createdAt" : "2013-09-30T20:40:05Z",
        "updatedAt" : "2013-09-30T20:40:05Z",
        "lastEditedBy" : "484b2208-e00e-4367-817d-7b3bd322e860",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e79864c3581a3a414892eef6b759a15f6b1d172",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1665,1669 @@        from datetime import datetime, timedelta\n\n        Series(np.array([1100, 20], dtype='timedelta64[ns]')).to_string()\n\n        s = Series(date_range('2012-1-1', periods=3, freq='D'))"
  },
  {
    "id" : "fa957c44-eda6-43d9-961a-572b9a4a630e",
    "prId" : 5701,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6719b71c-6a50-4c83-8242-158f6e341386",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this test would work previous; maybe assert that '00:00:00' not in the result as well\n",
        "createdAt" : "2014-01-07T13:47:04Z",
        "updatedAt" : "2014-01-15T02:56:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfb9c98ec2a039ec74d6c9f44bd132ad18f21bf7",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1793,1797 @@        y = s-s.shift(1)\n        result = y.to_string()\n        self.assertTrue('1 days' in result)\n        self.assertTrue('00:00:00' not in result)\n        self.assertTrue('NaT' in result)"
  },
  {
    "id" : "fbe668f5-47e8-46a6-88a3-f8f86c6f8394",
    "prId" : 7086,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfd31d0a-f83d-4a23-b7fd-d05889e03c3c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add several tests here which go thru various indexes for index and columns\n\ne.g. run the test somthing like:\n\n```\nfor index in [tm.makeStringIndex, tm.makeFloatIndex ......]:\n    for columns in [tm.makeStringIndex, .... ]:\n           df = DataFrame(.....,index=index(h), columns=columns(w))\n\n```\n\ntheir are 6 `make` Index types (String,Period,DateTime,Integer,Float,Unicode)\n",
        "createdAt" : "2014-05-10T15:31:10Z",
        "updatedAt" : "2014-05-16T18:42:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "950487e9-c204-41e6-b741-7fd39976175c",
        "parentId" : "cfd31d0a-f83d-4a23-b7fd-d05889e03c3c",
        "authorId" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "body" : "Going through all indices is quite slow. Takes 6 seconds for just this one test method compared to 3 seconds for the whole file previously. \n\nIs that ok, or should I take out some combinations? \n",
        "createdAt" : "2014-05-13T19:52:45Z",
        "updatedAt" : "2014-05-16T18:42:34Z",
        "lastEditedBy" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "tags" : [
        ]
      },
      {
        "id" : "9b80e2ae-5934-42ba-99f1-bf3e851fa9b1",
        "parentId" : "cfd31d0a-f83d-4a23-b7fd-d05889e03c3c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, so just do it for the index then (and not the columns too)...\n",
        "createdAt" : "2014-05-13T19:55:43Z",
        "updatedAt" : "2014-05-16T18:42:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d917e072a918f93eff4ff193b8876ef2ad55f1da",
    "line" : 455,
    "diffHunk" : "@@ -1,1 +1955,1959 @@        # Wide\n        h, w = max_rows-1, max_cols+1\n        df = pandas.DataFrame(dict((k,np.arange(1,1+h)) for k in np.arange(w)))\n        assert has_horizontally_truncated_repr(df)\n        with option_context('display.large_repr', 'info'):"
  },
  {
    "id" : "c86efa83-c4ad-4f64-b896-386f10e3fdd1",
    "prId" : 8701,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jorisvandenbossche I think this is a bug actually, e.g. if you have a really small info display it doesn't display any column counts, but prob a minor point.\n",
        "createdAt" : "2014-11-01T17:33:07Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c015df6a-bfaf-4321-b746-a57fe9ed62d3",
        "parentId" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't follow I think. Shouldn't this new kwarg `null_counts` not overrule if the frame is larger than `max_info_rows/columns` ?\n",
        "createdAt" : "2014-11-02T11:38:29Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "5e11f5c2-3a0e-4433-abe3-a4e42af04d5d",
        "parentId" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it _should_ and does, but the display is simply not printed out (too many columns), so this is sort of not-applicable.\n",
        "createdAt" : "2014-11-02T12:27:16Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ad904808-ac38-4d8c-ba23-5fe9ac4dd51f",
        "parentId" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "ah, yes, I see, in such a case, the `null_count` option has just no effect. I don't really think it is a bug. You could warn that it is ignored in such case if it is specified, but doesn't seem that necesarilly.\n",
        "createdAt" : "2014-11-02T14:50:24Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "aa797715-1ded-4a28-865f-f0ec81162998",
        "parentId" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yep, ok on the name `null_counts`? This is really just for an interactive session where you don't want to keep resetting `max_info_rows`.\n",
        "createdAt" : "2014-11-02T14:53:39Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "af393772-fdfb-4db5-b951-84f551fd2eff",
        "parentId" : "cd78df9e-2340-4fa3-ba7a-b7a76b10092b",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yep, ok on the name!\n",
        "createdAt" : "2014-11-02T14:55:32Z",
        "updatedAt" : "2014-11-02T14:59:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "92c2211a4f730b656fe596df9cd1edf32abff575",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +135,139 @@        with option_context('display.max_info_rows',5,'display.max_info_columns',5):\n            check(None, False)\n            check(True, False)\n            check(False, False)\n"
  }
]