[
  {
    "id" : "baedd26b-518c-4aa0-b89b-3e7acfa94cbc",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-45925586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43f90b38-d9fc-42b8-a95f-e88d6d890583",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It is a bit a pity that the copy check has to come first, because you now get a not super informative message when passing an invalid target (about not having copy, while you just can't pass it).\r\n\r\n(which would be the same if we wouldn't catch those, I know :-))",
        "createdAt" : "2017-06-23T07:56:55Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "41c5863a-d346-4b21-a454-1469415e76fb",
        "parentId" : "43f90b38-d9fc-42b8-a95f-e88d6d890583",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "True, but I can also pass in objects that are constructed to support item assignment but fail on copy.  It seems reasonable to put a custom error message for that case.",
        "createdAt" : "2017-06-23T08:27:29Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +1414,1418 @@\n        with tm.assert_raises_regex(ValueError, msg):\n            self.eval(expression, target=invalid_target, inplace=False)\n\n    @pytest.mark.parametrize(\"target\", [1, \"cat\", [1, 2],"
  },
  {
    "id" : "722c2f2b-1b58-40c4-abe6-7c33a483917c",
    "prId" : 26426,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26426#pullrequestreview-239193519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8db5b1ec-dbdf-4275-8dc0-c51cf0cedef7",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Split this test into two.",
        "createdAt" : "2019-05-18T01:03:10Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "15a448cb-7eaa-458c-9b99-0c05e4a1c7e2",
        "parentId" : "8db5b1ec-dbdf-4275-8dc0-c51cf0cedef7",
        "authorId" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "body" : "@gfyoung \r\ndone",
        "createdAt" : "2019-05-18T10:33:20Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7d58af040527fff845a44ff6dac30ac0d7af6b7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1379,1383 @@        assert_frame_equal(expected, df)\n        assert ans is None\n\n    def test_assignment_in_query(self):\n        # GH 8664"
  },
  {
    "id" : "f430ff52-c180-4eda-966d-7e136f4bfe8a",
    "prId" : 26426,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26426#pullrequestreview-239204802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5de08df-93bc-4355-a802-ddd9384cf454",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so this works currently yes?",
        "createdAt" : "2019-05-18T14:06:31Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0424fc20-2a7b-42f8-8010-1503643c1d9d",
        "parentId" : "c5de08df-93bc-4355-a802-ddd9384cf454",
        "authorId" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "body" : "Prior to this fix only positional arguments were working.",
        "createdAt" : "2019-05-18T16:34:02Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "tags" : [
        ]
      },
      {
        "id" : "d8b82bd9-dc9c-4924-a34f-7cc6627c851e",
        "parentId" : "c5de08df-93bc-4355-a802-ddd9384cf454",
        "authorId" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "body" : "> add a whatsnew note; reshaping or other section would be ok\r\n\r\nI've added an entry in the _other_ section",
        "createdAt" : "2019-05-18T16:44:13Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7d58af040527fff845a44ff6dac30ac0d7af6b7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1346,1350 @@        assert ans is None\n\n    def test_multi_line_expression_callable_local_variable(self):\n        # 26426\n        df = pd.DataFrame({'a': [1, 2, 3], 'b': [4, 5, 6]})"
  },
  {
    "id" : "711e9aac-db1c-4716-a6c5-dcff2642c15a",
    "prId" : 26426,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26426#pullrequestreview-239249783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d03f61da-1ae6-4f1d-be74-8fa9688d36e7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue reference (is there an issue open for this? if not add the pr number) as a comment",
        "createdAt" : "2019-05-18T14:06:52Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e000f3bd-72f5-4201-9e62-5b10386a6d1f",
        "parentId" : "d03f61da-1ae6-4f1d-be74-8fa9688d36e7",
        "authorId" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "body" : "I'm not sure what I'm supposed to add here. Something like ``# Github PR #26426 `` ?\r\n\r\nI couldn't find a related issue.",
        "createdAt" : "2019-05-18T16:35:29Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "eb13478f-c41a-4555-a940-b718e921f5a3",
        "tags" : [
        ]
      },
      {
        "id" : "7f3677ad-0963-4896-9e95-a0b885b4ba35",
        "parentId" : "d03f61da-1ae6-4f1d-be74-8fa9688d36e7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "```\r\n# 26526\r\n```\r\n\r\nis enough",
        "createdAt" : "2019-05-19T18:42:09Z",
        "updatedAt" : "2019-05-19T19:32:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7d58af040527fff845a44ff6dac30ac0d7af6b7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1365,1369 @@    def test_multi_line_expression_callable_local_variable_with_kwargs(self):\n        # 26426\n        df = pd.DataFrame({'a': [1, 2, 3], 'b': [4, 5, 6]})\n\n        def local_func(a, b):"
  },
  {
    "id" : "0848e987-0d2e-4083-85ee-eae4459450c3",
    "prId" : 27301,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27301#pullrequestreview-259547401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "505d3098-b0bf-4e3e-8fcf-409e30c127c7",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Maybe make a tuple for consistency with old code?",
        "createdAt" : "2019-07-09T03:13:21Z",
        "updatedAt" : "2019-07-09T14:51:55Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7974fdda-a060-4ff7-a1d5-72a597d13c5f",
        "parentId" : "505d3098-b0bf-4e3e-8fcf-409e30c127c7",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Just used for an inclusion check; either way works.",
        "createdAt" : "2019-07-09T14:37:42Z",
        "updatedAt" : "2019-07-09T14:51:55Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "275e2f81bd1367ebeb10685b88b015d1d6750f68",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +412,416 @@\n    def check_compound_invert_op(self, lhs, cmp1, rhs):\n        skip_these = [\"in\", \"not in\"]\n        ex = \"~(lhs {0} rhs)\".format(cmp1)\n"
  },
  {
    "id" : "19286740-158d-4956-97f0-becbc40deaee",
    "prId" : 29812,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29812#pullrequestreview-321934501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "852b6364-6986-45cd-b2b5-47567d429fbe",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Reference issue number above.",
        "createdAt" : "2019-11-23T23:53:21Z",
        "updatedAt" : "2019-11-24T00:58:19Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d04aad035937f63baded744ac80c099b4f98569",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2009,2013 @@def test_truediv_deprecated(engine, parser):\n    # GH#29182\n    match = \"The `truediv` parameter in pd.eval is deprecated\"\n\n    with tm.assert_produces_warning(FutureWarning) as m:"
  },
  {
    "id" : "35252323-0f56-46ad-a0f6-e34eb2db5bb1",
    "prId" : 32507,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32507#pullrequestreview-372379591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8830f176-58c2-490d-b72c-c42d5985bac1",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Looks like those tests have been swapped. The order doesn't make a difference, it's not a problem, but the diff becames confusing, so pointing it out for other reviewers.",
        "createdAt" : "2020-03-10T22:18:48Z",
        "updatedAt" : "2020-03-10T22:19:29Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "023aaaed-ce93-4681-a9dc-a35fa5bc76ba",
        "parentId" : "8830f176-58c2-490d-b72c-c42d5985bac1",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Some kind of parametrization would be good here, but another PR for another time.",
        "createdAt" : "2020-03-10T23:04:22Z",
        "updatedAt" : "2020-03-10T23:04:22Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "02d152bae3228cd424e3e997251f3903a8b1fc19",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +1624,1628 @@            msg = \"'NotIn' nodes are not implemented\"\n            with pytest.raises(NotImplementedError, match=msg):\n                pd.eval(\"3 not in (1, 2)\", engine=self.engine, parser=self.parser)\n            with pytest.raises(NotImplementedError, match=msg):\n                pd.eval("
  }
]