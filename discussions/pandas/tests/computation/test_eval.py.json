[
  {
    "id" : "baedd26b-518c-4aa0-b89b-3e7acfa94cbc",
    "prId" : 16732,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16732#pullrequestreview-45925586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43f90b38-d9fc-42b8-a95f-e88d6d890583",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "It is a bit a pity that the copy check has to come first, because you now get a not super informative message when passing an invalid target (about not having copy, while you just can't pass it).\r\n\r\n(which would be the same if we wouldn't catch those, I know :-))",
        "createdAt" : "2017-06-23T07:56:55Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "41c5863a-d346-4b21-a454-1469415e76fb",
        "parentId" : "43f90b38-d9fc-42b8-a95f-e88d6d890583",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "True, but I can also pass in objects that are constructed to support item assignment but fail on copy.  It seems reasonable to put a custom error message for that case.",
        "createdAt" : "2017-06-23T08:27:29Z",
        "updatedAt" : "2017-07-06T15:29:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6f5bcd00b5659161861ce02cc87d98fe91c1796",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +1414,1418 @@\n        with tm.assert_raises_regex(ValueError, msg):\n            self.eval(expression, target=invalid_target, inplace=False)\n\n    @pytest.mark.parametrize(\"target\", [1, \"cat\", [1, 2],"
  }
]