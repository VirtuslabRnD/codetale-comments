[
  {
    "id" : "53ea885b-03b5-4c04-a1b4-f2de44832fc3",
    "prId" : 5978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "855c22a2-ce1c-42af-946d-36f5d7653746",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a couple of more tests, maybe all nan series and for groupby, group that has 1 element\n",
        "createdAt" : "2014-01-17T13:51:49Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2f6ea2da-89fd-42dc-9a7d-4d57eb5fb812",
        "parentId" : "855c22a2-ce1c-42af-946d-36f5d7653746",
        "authorId" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "body" : "added more tests with partial nan's and duplicate values.  nan's will always be nan's so not sure if we would ever catch a bug if all nan's.\n",
        "createdAt" : "2014-01-17T15:05:18Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "tags" : [
        ]
      },
      {
        "id" : "cef0f383-d5b5-43db-a5bb-494a4378abfa",
        "parentId" : "855c22a2-ce1c-42af-946d-36f5d7653746",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "but that is the check; make sure you propogate nans; the edge cases are always important to test (and usually the hardest to get right)\n",
        "createdAt" : "2014-01-17T15:30:49Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ce96b4c6-1b1f-4a42-ab9c-c2306c33db80",
        "parentId" : "855c22a2-ce1c-42af-946d-36f5d7653746",
        "authorId" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "body" : "easy enough.  I added that as well.\n",
        "createdAt" : "2014-01-17T15:57:40Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b3785801221f5e25648f634f5ca171bc861d852",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3956,3960 @@        exp = iseries.astype(float).rank()\n        assert_series_equal(iranks, exp)\n        iseries = Series(np.arange(5)) + 1.0\n        exp = iseries / 5.0\n        iranks = iseries.rank(pct=True)"
  },
  {
    "id" : "d8e61b19-c7f6-480d-b232-31b7198573fe",
    "prId" : 5978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d17c4ba-dd75-4345-8ace-6c3e3f3df0c6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think you have it here, but can you have a test with 'int64' and datetimes (e.g. a date series) (result of course should be float64);\n",
        "createdAt" : "2014-01-17T16:26:13Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "aa8f741e-5dc3-4360-85c9-c2ab40805186",
        "parentId" : "5d17c4ba-dd75-4345-8ace-6c3e3f3df0c6",
        "authorId" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "body" : "done\n",
        "createdAt" : "2014-01-17T16:50:53Z",
        "updatedAt" : "2014-02-16T20:55:40Z",
        "lastEditedBy" : "af9488ab-761a-4bd1-8bd9-c8fdbeae13b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b3785801221f5e25648f634f5ca171bc861d852",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +3958,3962 @@        iseries = Series(np.arange(5)) + 1.0\n        exp = iseries / 5.0\n        iranks = iseries.rank(pct=True)\n\n        assert_series_equal(iranks, exp)"
  },
  {
    "id" : "dd021df6-6ff4-4ecf-9eac-2be73bacfd55",
    "prId" : 8550,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, I don't buy either one of these. Too special case. They should just work (if its a bool dtype then it will work, otherwise it should fail)\n",
        "createdAt" : "2014-11-02T22:54:26Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8fa84708-efa1-4300-8983-11b4155dc4de",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "Could you be more specific about which test cases your are referring to? Are you asking me to remove the tests for the Series behavior where there nan values?\n",
        "createdAt" : "2014-11-02T23:02:09Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "403e78e7-a5a1-4d93-b14a-a33ff7511f1c",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no, the level and bool_only raises NotImplementedError. was this from somewhere else? I think that should work, no?\n",
        "createdAt" : "2014-11-02T23:03:56Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "96949149-95fb-4fdb-9f0a-39fa427b64bc",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "Oh, do you mean the bool_only cases? Do you mean I should remove the bool_only argument?\n",
        "createdAt" : "2014-11-02T23:04:20Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "ac3a68ee-5115-4323-9dea-52abb50d26b5",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "Well, bool_only uses _reduce's numeric_only which was never implemented for Series or Panel. (Recall recent PR where I added exceptions in those cases instead of ignoring the argument.)\n",
        "createdAt" : "2014-11-02T23:06:07Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "f23680e2-2b14-4b89-8850-80b5e245d38a",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "The bool_only argument does work for DataFrame, though.\n",
        "createdAt" : "2014-11-02T23:06:32Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "d12f8234-e4d2-4f69-8121-c436cc777466",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm. This should work for Series I think too. You may need to pass it to agg_by_level so it gets passed back thru when _reduce is called again\n",
        "createdAt" : "2014-11-02T23:07:44Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3692d18c-0200-4e3a-a647-35aebd4aa55a",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "I think _agg_by_level is one issue (currently numeric_only isn't passed). But also Series._reduce just doesn't implement numeric_only in what I think is the standard case:\n\n```\n        if numeric_only:\n            raise NotImplementedError(\n                'Series.{0} does not implement numeric_only.'.format(name))\n```\n\nIs your suggestion that we should add support for these? That could be a separate PR (which would probably be merged w/ master before this one).\n",
        "createdAt" : "2014-11-02T23:13:31Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "32177585-0b5d-4dfc-945a-a3eca14ea263",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "So, for example (note use of `sum` not `any`):\n\n```\n>>> pd.Series([1]).sum(numeric_only=True)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pandas/core/generic.py\", line 3938, in stat_func\n    skipna=skipna, numeric_only=numeric_only)\n  File \"pandas/core/series.py\", line 2074, in _reduce\n    'Series.{0} does not implement numeric_only.'.format(name))\nNotImplementedError: Series.sum does not implement numeric_only.\n```\n\nAre you suggesting to fix this?\n",
        "createdAt" : "2014-11-02T23:24:25Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "83f25198-cf04-4950-b0eb-28d06bf139bf",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "body" : "Or, are you saying make sure bool_only is passed through but don't implement numeric_only in Series._reduce (so that in theory the combination of bool_only and level is no longer a special case)?\n",
        "createdAt" : "2014-11-02T23:43:50Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "a365f24b-52e0-4fdf-915f-0b9118bb4bb6",
        "tags" : [
        ]
      },
      {
        "id" : "6cfb5f20-c8b3-4957-ab0f-beed8294c7b8",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, ok, let's leave as its, but create a new issue to discuss / fix this. In that issue show the examples where it is not-implemented ATM (so the above, and the 2 in your tests).\nWe'll see what we can do.\n",
        "createdAt" : "2014-11-02T23:49:03Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6ce14576-f1ca-43f4-a543-dff03135dfc3",
        "parentId" : "9261841a-e6e0-4751-81db-85022c2d41a8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "though I think you should pass thru the `bool_only` arg now (and thus eliminate 1 case).\n\nI like to eliminate all special cases if they don't actually make sense (we can look at this in detail later in the new issue).\n",
        "createdAt" : "2014-11-02T23:50:44Z",
        "updatedAt" : "2014-11-10T16:46:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "518a62c4afc020c4b64e6a053cfe5efea5ce9cfc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2495,2499 @@\n        # bool_only is not implemented with level option.\n        self.assertRaises(NotImplementedError, s.any, bool_only=True, level=0)\n        self.assertRaises(NotImplementedError, s.all, bool_only=True, level=0)\n"
  },
  {
    "id" : "15da0040-3c5d-44f1-b047-0fce9127638c",
    "prId" : 8680,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe367b4-52c1-483e-bd97-1744a638a071",
        "parentId" : null,
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "This is the failing test (that I think should be removed)\n\nd1 and d2 are in the index, so slicing should not raise a KeyError\n",
        "createdAt" : "2014-10-31T20:53:03Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "a73b50af-bd4b-48db-afae-ec84299b54b6",
        "parentId" : "ffe367b4-52c1-483e-bd97-1744a638a071",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "nevermind.... I misread the `::2`\n",
        "createdAt" : "2014-10-31T20:53:40Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "92372795-2506-48f0-bfe4-b188d3c48ba6",
        "parentId" : "ffe367b4-52c1-483e-bd97-1744a638a071",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "will add a fix\n",
        "createdAt" : "2014-10-31T20:53:50Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      }
    ],
    "commit" : "db6f8fd94aca599f0c89d645d9c815fd33ee2196",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +1542,1546 @@        self.assertEqual(self.ts.ix[d2], self.ts[d2])\n\n    def test_ix_getitem_not_monotonic(self):\n        d1, d2 = self.ts.index[[5, 15]]\n"
  }
]