[
  {
    "id" : "26a240db-3f39-4475-86fc-1362c33c496f",
    "prId" : 29597,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29597#pullrequestreview-316273456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "683940d8-e79e-4768-9d08-e69f4c7b7853",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "So numpy scalars we don't have full control over, so this means that if they are the left operand, we get some other behaviour:\r\n\r\n```\r\nIn [27]: np.int64(1) == pd.NA \r\n/home/joris/miniconda3/envs/dev/bin/ipython:1: DeprecationWarning: elementwise comparison failed; this will raise an error in the future.\r\n  #!/home/joris/miniconda3/envs/dev/bin/python\r\nOut[27]: False\r\n\r\nIn [28]: pd.NA == np.int64(1) \r\nOut[28]: NA\r\n\r\nIn [29]: np.int64(1) < pd.NA \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-29-87134fac2734> in <module>\r\n----> 1 np.int64(1) < pd.NA\r\n\r\n~/scipy/pandas/pandas/core/na_scalar.py in __bool__(self)\r\n     37 \r\n     38     def __bool__(self):\r\n---> 39         raise TypeError(\"boolean value of NA is ambiguous\")\r\n     40 \r\n     41     def __hash__(self):\r\n\r\nTypeError: boolean value of NA is ambiguous\r\n\r\nIn [30]: pd.NA > np.int64(1) \r\nOut[30]: NA\r\n```\r\n\r\n(for the first case, not sure what the behaviour will be once the change in numpy is done)\r\n",
        "createdAt" : "2019-11-13T14:19:05Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "589a961100f6e2674dd6101a5e4cde8edf31fd03",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@            # for numpy scalars we get a deprecation warning and False as result\n            # for equality or error for larger/lesser than\n            continue\n\n        assert (other == NA) is NA"
  },
  {
    "id" : "ac617e14-3254-421b-a434-dfab63887e78",
    "prId" : 29597,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29597#pullrequestreview-316292848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fe3edad-741d-4ccf-9d1f-3e7e4c1eb64a",
        "parentId" : null,
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "I think you should add tests with `np.nan` for both logical and arithmetic ops",
        "createdAt" : "2019-11-13T14:37:33Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      },
      {
        "id" : "9303f93c-f9f2-4605-8614-a4b11da8467c",
        "parentId" : "8fe3edad-741d-4ccf-9d1f-3e7e4c1eb64a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Good idea! added",
        "createdAt" : "2019-11-13T14:41:46Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "589a961100f6e2674dd6101a5e4cde8edf31fd03",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\n\ndef test_arithmetic_ops(all_arithmetic_functions):\n    op = all_arithmetic_functions\n"
  }
]