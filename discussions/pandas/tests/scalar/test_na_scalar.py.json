[
  {
    "id" : "26a240db-3f39-4475-86fc-1362c33c496f",
    "prId" : 29597,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29597#pullrequestreview-316273456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "683940d8-e79e-4768-9d08-e69f4c7b7853",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "So numpy scalars we don't have full control over, so this means that if they are the left operand, we get some other behaviour:\r\n\r\n```\r\nIn [27]: np.int64(1) == pd.NA \r\n/home/joris/miniconda3/envs/dev/bin/ipython:1: DeprecationWarning: elementwise comparison failed; this will raise an error in the future.\r\n  #!/home/joris/miniconda3/envs/dev/bin/python\r\nOut[27]: False\r\n\r\nIn [28]: pd.NA == np.int64(1) \r\nOut[28]: NA\r\n\r\nIn [29]: np.int64(1) < pd.NA \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-29-87134fac2734> in <module>\r\n----> 1 np.int64(1) < pd.NA\r\n\r\n~/scipy/pandas/pandas/core/na_scalar.py in __bool__(self)\r\n     37 \r\n     38     def __bool__(self):\r\n---> 39         raise TypeError(\"boolean value of NA is ambiguous\")\r\n     40 \r\n     41     def __hash__(self):\r\n\r\nTypeError: boolean value of NA is ambiguous\r\n\r\nIn [30]: pd.NA > np.int64(1) \r\nOut[30]: NA\r\n```\r\n\r\n(for the first case, not sure what the behaviour will be once the change in numpy is done)\r\n",
        "createdAt" : "2019-11-13T14:19:05Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "589a961100f6e2674dd6101a5e4cde8edf31fd03",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@            # for numpy scalars we get a deprecation warning and False as result\n            # for equality or error for larger/lesser than\n            continue\n\n        assert (other == NA) is NA"
  },
  {
    "id" : "ac617e14-3254-421b-a434-dfab63887e78",
    "prId" : 29597,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29597#pullrequestreview-316292848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fe3edad-741d-4ccf-9d1f-3e7e4c1eb64a",
        "parentId" : null,
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "I think you should add tests with `np.nan` for both logical and arithmetic ops",
        "createdAt" : "2019-11-13T14:37:33Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      },
      {
        "id" : "9303f93c-f9f2-4605-8614-a4b11da8467c",
        "parentId" : "8fe3edad-741d-4ccf-9d1f-3e7e4c1eb64a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Good idea! added",
        "createdAt" : "2019-11-13T14:41:46Z",
        "updatedAt" : "2019-11-28T12:30:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "589a961100f6e2674dd6101a5e4cde8edf31fd03",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\n\ndef test_arithmetic_ops(all_arithmetic_functions):\n    op = all_arithmetic_functions\n"
  },
  {
    "id" : "beb2f573-c494-49f2-baad-fa2221bbc88f",
    "prId" : 30097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30097#pullrequestreview-328317558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "248ef532-d6b2-4f41-890f-c8c8b98a19ad",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Somebody (Cython?) is converting these to Python scalars.",
        "createdAt" : "2019-12-05T22:17:46Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "86403b36-bdfc-48a5-84f1-df401dafcb3c",
        "parentId" : "248ef532-d6b2-4f41-890f-c8c8b98a19ad",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "have you tried with/without numexpr?",
        "createdAt" : "2019-12-06T00:37:01Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "026e88e0-1007-4b1c-bacc-7e0596ca3f55",
        "parentId" : "248ef532-d6b2-4f41-890f-c8c8b98a19ad",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "How can numexpr be involved in this?",
        "createdAt" : "2019-12-06T07:03:19Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "552b61fb-2b83-49dc-9fcf-a6f86d034d09",
        "parentId" : "248ef532-d6b2-4f41-890f-c8c8b98a19ad",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i dont know, but if we're brainstorming things that can do surprising conversions, it comes to minid",
        "createdAt" : "2019-12-06T16:34:19Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a49aa654440c2bf75e35e0b84befa78439922ff4",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +112,116 @@    result = value ** pd.NA\n    assert result == value\n    if not isinstance(value, (np.float_, np.bool_, np.int_)):\n        assert isinstance(result, type(value))\n"
  },
  {
    "id" : "7ff5478a-a8b0-4fb9-a468-b6a1d37db553",
    "prId" : 30097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30097#pullrequestreview-328324476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f750b606-7968-4a2b-a4c0-15e63f0a95ba",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "corner case to check -0.0",
        "createdAt" : "2019-12-06T16:36:38Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0aaa815e-b10c-4b84-99bc-55dd025efff7",
        "parentId" : "f750b606-7968-4a2b-a4c0-15e63f0a95ba",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Good catch.\r\n\r\n```python\r\nIn [4]: -1 ** np.nan\r\nOut[4]: -1.0\r\n\r\nIn [5]: np.nan ** -0\r\nOut[5]: 1.0\r\n\r\n```\r\n\r\nWill match the NumPy behavior here.",
        "createdAt" : "2019-12-06T16:45:26Z",
        "updatedAt" : "2019-12-06T17:02:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a49aa654440c2bf75e35e0b84befa78439922ff4",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +108,112 @@        np.float_(-1),\n    ],\n)\ndef test_rpow_special(value):\n    result = value ** pd.NA"
  },
  {
    "id" : "52412af2-c682-4323-a0bb-3abdb3af51a4",
    "prId" : 30097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30097#pullrequestreview-328467894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e742458c-1613-4308-8ed9-e2762e29e621",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "There are fixtures defined for zero / one values in pandas/tests/indexing/conftest.py - can these be combined with that?",
        "createdAt" : "2019-12-06T20:43:14Z",
        "updatedAt" : "2019-12-06T20:44:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "da85f9d9-4299-4e6e-945c-3f5494029784",
        "parentId" : "e742458c-1613-4308-8ed9-e2762e29e621",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "That seems to include arrays. We just want a scalar here I think.",
        "createdAt" : "2019-12-06T21:29:13Z",
        "updatedAt" : "2019-12-06T21:29:14Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a49aa654440c2bf75e35e0b84befa78439922ff4",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +73,77 @@\n\n@pytest.mark.parametrize(\n    \"value\",\n    ["
  }
]