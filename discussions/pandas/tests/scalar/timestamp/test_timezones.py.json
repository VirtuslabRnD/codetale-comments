[
  {
    "id" : "5a280536-a588-42fe-8eac-6dd02ee41097",
    "prId" : 19473,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19473#pullrequestreview-93129332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1721dcf4-8c7f-475c-82f2-f8f464774d77",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "eventually we want to propagate all of these to higher level fixtures (the tz I am talking about)",
        "createdAt" : "2018-02-01T00:03:48Z",
        "updatedAt" : "2018-02-01T00:36:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a16a9762d6917f135ab9d17c86a7d2a75634d42",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@            ts.tz_localize('US/Pacific', errors='coerce')\n\n    @pytest.mark.parametrize('tz', ['UTC', 'Asia/Tokyo',\n                                    'US/Eastern', 'dateutil/US/Pacific'])\n    @pytest.mark.parametrize('stamp', ['2014-02-01 09:00', '2014-07-08 09:00',"
  },
  {
    "id" : "08fa65d3-4b40-43be-ad14-f638988bdf42",
    "prId" : 31563,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31563#pullrequestreview-356638423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "327127ac-2c4b-4ec3-b80e-c96de438597a",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "As far as I understand, on master this tests for breakage. Because pytz and dateutil handle fold ambiguity differently, we ended up with different offsets and representations for the same epoch time in what is the same timezone.\r\nWith fold support, representatioins, values, and offsets all match.",
        "createdAt" : "2020-02-02T08:17:51Z",
        "updatedAt" : "2020-02-26T06:22:55Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      },
      {
        "id" : "6d63d1a8-183d-4124-be49-446aee5c5470",
        "parentId" : "327127ac-2c4b-4ec3-b80e-c96de438597a",
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "Does that mean this is a breaking change?",
        "createdAt" : "2020-02-10T16:40:59Z",
        "updatedAt" : "2020-02-26T06:22:55Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      },
      {
        "id" : "1d2b0949-7e0e-4aa1-ba98-60d3a2edbbb1",
        "parentId" : "327127ac-2c4b-4ec3-b80e-c96de438597a",
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "As far as I can tell, no. The test is meaningless right now, because for the same timezone in two packages with the same `tz_localize` call we end up with two different offsets.\r\nI don't know why we are currently testing for the presence of a bug, but this change makes it so that we test for the correct functionality.",
        "createdAt" : "2020-02-11T13:04:53Z",
        "updatedAt" : "2020-02-26T06:22:55Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd02318aca686126c6c96c1ab3cefda4fbe4b128",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +141,145 @@        assert result_pytz.to_pydatetime().tzname() == \"GMT\"\n        assert result_dateutil.to_pydatetime().tzname() == \"BST\"\n        assert str(result_pytz) == str(result_dateutil)\n\n        # 1 hour difference"
  }
]