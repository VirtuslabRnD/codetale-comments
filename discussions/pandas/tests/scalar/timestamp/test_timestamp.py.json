[
  {
    "id" : "58d43d3e-0968-4824-8aa9-6c9f7bb22dff",
    "prId" : 19889,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19889#pullrequestreview-99147901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1169657-e4b4-412b-85c5-9bd951db489b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "test the string case as you have a above, which should raise a ValueError",
        "createdAt" : "2018-02-25T16:28:44Z",
        "updatedAt" : "2018-02-28T04:56:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c81ec573e5fc699e3cdb9161bec7513b17dd54c9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +386,390 @@        assert ts.to_pydatetime() == dt_tz\n\n    @pytest.mark.parametrize('result', [\n        Timestamp(datetime(2000, 1, 2, 3, 4, 5, 6), nanosecond=1),\n        Timestamp(year=2000, month=1, day=2, hour=3, minute=4, second=5,"
  },
  {
    "id" : "22021bdd-cc34-4d2e-a616-277e9a16eb30",
    "prId" : 25142,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25142#pullrequestreview-200395778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd8335ef-82c3-485e-ac2c-ef0c51cba528",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a similar test in test_nat.py",
        "createdAt" : "2019-02-06T02:45:02Z",
        "updatedAt" : "2019-02-16T13:58:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1ffa8ffe795ae89aeac2c6362c4ad3103eddd9f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +971,975 @@            ts.to_period('D')\n\n    def test_to_numpy_alias(self):\n        # GH 24653: alias .to_numpy() for scalars\n        ts = Timestamp(datetime.now())"
  },
  {
    "id" : "85c2fa4c-8436-43eb-977a-0127e9bb1eae",
    "prId" : 25853,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25853#pullrequestreview-220831980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69997d48-cdbd-4087-99e7-3957c1300c99",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank line",
        "createdAt" : "2019-03-30T18:27:41Z",
        "updatedAt" : "2019-04-05T15:33:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ded5e69fba8fe9cf9b2237a73be9f820ab742492",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +611,615 @@            pass\n\n        data = SubDatetime(2000, 1, 1)\n        result = Timestamp(data)\n        expected = Timestamp(2000, 1, 1)"
  },
  {
    "id" : "8335ffef-d2a9-4c29-84d4-feb6120fc97c",
    "prId" : 29929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29929#pullrequestreview-324901148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c81e424-4b43-41e5-b66a-2cac6e493d6a",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can we also have a case with the tzinfo kwarg",
        "createdAt" : "2019-11-29T21:02:20Z",
        "updatedAt" : "2019-11-30T21:52:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "37a72591-0676-4f29-b77e-04064fc74e69",
        "parentId" : "9c81e424-4b43-41e5-b66a-2cac6e493d6a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i think we need separate `pytest.raises` contexts (and the tzinfo kwarg is supposed to be a tzinfo object)",
        "createdAt" : "2019-11-30T17:31:00Z",
        "updatedAt" : "2019-11-30T21:52:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3587b99960dffc0c60527c95da93fda6198f1f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +680,684 @@        kwargs = {\"year\": 2018, \"month\": 1, \"day\": 1, \"tzinfo\": utc}\n        with pytest.raises(ValueError, match=\"Cannot pass a datetime or Timestamp\"):\n            Timestamp(box(**kwargs), tz=\"US/Pacific\")\n        with pytest.raises(ValueError, match=\"Cannot pass a datetime or Timestamp\"):\n            Timestamp(box(**kwargs), tzinfo=pytz.timezone(\"US/Pacific\"))"
  },
  {
    "id" : "01a34ff8-cbe5-485f-a1ac-1e774171b38a",
    "prId" : 30395,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30395#pullrequestreview-335668484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "422bf0a3-802b-4364-a4f3-55766efdc288",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "when only using one thing from e.g. compat, i usually prefer to do `from pandas.compat import X`.  Not a big deal",
        "createdAt" : "2019-12-22T16:32:21Z",
        "updatedAt" : "2020-01-06T10:07:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "1beec558-fc87-42b4-a163-12f60865a0ef",
        "parentId" : "422bf0a3-802b-4364-a4f3-55766efdc288",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "I'm on the fence on that because I just thought I could save an extra diff in the future.\r\nI don't mind replacing it with ```from pandas.compat import PY38```",
        "createdAt" : "2019-12-22T20:13:42Z",
        "updatedAt" : "2020-01-06T10:07:18Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f800d6bce9c05768ffbdc5b5cbe7bc69122c3fb",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +15,19 @@from pandas._libs.tslibs import conversion\nfrom pandas._libs.tslibs.timezones import dateutil_gettz as gettz, get_timezone\nimport pandas.compat as compat\nfrom pandas.compat.numpy import np_datetime64_compat\nfrom pandas.errors import OutOfBoundsDatetime"
  },
  {
    "id" : "4dc74b74-20eb-49a8-a145-ecc12a361da2",
    "prId" : 30395,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30395#pullrequestreview-335953846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05b4725f-b5d8-49ce-a93e-eb07a8de6f87",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "one more thing i forgot, this needs to `assert isinstance(result, Timestamp)`.  Otherwise i think this test would pass in master",
        "createdAt" : "2019-12-23T17:45:18Z",
        "updatedAt" : "2020-01-06T10:07:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f800d6bce9c05768ffbdc5b5cbe7bc69122c3fb",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +712,716 @@        result = Timestamp.fromisocalendar(2000, 1, 1)\n        assert result == expected_timestamp\n        assert result == expected_stdlib\n        assert isinstance(result, Timestamp)\n"
  },
  {
    "id" : "3c4c6699-fbf0-4968-906a-38b4772b7402",
    "prId" : 31155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31155#pullrequestreview-345692955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b24d444a-b7d8-45ef-8a5c-f7ae1ced0c44",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "Okay, we now fail only on Linux minimum versions and macOS. Let's fiddle with the implementation a couple more times.",
        "createdAt" : "2020-01-21T08:13:24Z",
        "updatedAt" : "2020-01-22T18:04:11Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d21a81715ee0f8f48831fb3884f32aac3caadff",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1113,1117 @@    expected = timedelta(seconds=0)\n    assert Timestamp(ts).value == epoch\n    assert result == expected"
  },
  {
    "id" : "4e1feac4-27b1-4585-802c-9d6035989d94",
    "prId" : 31155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31155#pullrequestreview-346404001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2521d498-d8dc-4972-a24b-a4cf6b73fb8c",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "@mroeschke \r\nThis tests that the value no longer shifts when we call the constructor again. In the issue, this failed for `epoch = 1552211999999999999`",
        "createdAt" : "2020-01-22T08:13:53Z",
        "updatedAt" : "2020-01-22T18:04:11Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d21a81715ee0f8f48831fb3884f32aac3caadff",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1112,1116 @@    result = ts.tz.dst(ts)\n    expected = timedelta(seconds=0)\n    assert Timestamp(ts).value == epoch\n    assert result == expected"
  },
  {
    "id" : "8fc9a160-79b0-4ab7-bf59-ec23a18dac54",
    "prId" : 31155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31155#pullrequestreview-348039334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd56b616-faa4-43ce-b589-a9144cd274fd",
        "parentId" : null,
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "s/overrid/overrode",
        "createdAt" : "2020-01-24T15:41:14Z",
        "updatedAt" : "2020-01-24T16:25:18Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d21a81715ee0f8f48831fb3884f32aac3caadff",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1106,1110 @@    # on time just before DST switch doesn't lead to\n    # nonexistent time or value change\n    # Works only with dateutil >= 2.7.0 as dateutil overrid\n    # pandas.Timedelta.total_seconds with\n    # datetime.timedelta.total_seconds before"
  },
  {
    "id" : "6e4c54ff-30b8-48a0-8291-25ffad826f60",
    "prId" : 31155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31155#pullrequestreview-348039334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a8c7619-8e3e-4e93-ad8c-5a8f16a71008",
        "parentId" : null,
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "This does not make sense to me - `datetime.timedelta.total_seconds` should succeed, because it's equivalent to:\r\n\r\n```python\r\ndef total_seconds(td):\r\n  useconds = td.days * 86400\r\n  useconds += td.seconds \r\n  useconds *= 1000000\r\n  useconds += td.microseconds\r\n  return useconds / 1e6\r\n```\r\n\r\nI think there's actually a deeper issue here, which is that `td.microseconds` and `td.seconds` are *rounded* rather than *truncated*. Consider this:\r\n\r\n```python\r\ndef to_ns(td):\r\n  ns = td.days * 86400\r\n  ns += td.seconds\r\n  ns *= 1000000\r\n  ns += td.microseconds\r\n  ns *= 1000\r\n  ns += td.nanoseconds\r\n  return ns\r\n\r\ntd = timedelta(1552211999999999872, unit=\"ns\")\r\nprint(td.value)  # 1552211999999999872\r\nprint(to_ns(td))  # 1552212000000000872\r\n```\r\n\r\nThat seems to be the actual root cause of this issue and should probably be fixed.",
        "createdAt" : "2020-01-24T16:24:29Z",
        "updatedAt" : "2020-01-24T16:25:18Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d21a81715ee0f8f48831fb3884f32aac3caadff",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1108,1112 @@    # Works only with dateutil >= 2.7.0 as dateutil overrid\n    # pandas.Timedelta.total_seconds with\n    # datetime.timedelta.total_seconds before\n    ts = Timestamp(epoch, tz=\"dateutil/US/Pacific\")\n    result = ts.tz.dst(ts)"
  },
  {
    "id" : "26d29f53-80de-4066-8fae-a736ea5eb4b4",
    "prId" : 31155,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31155#pullrequestreview-348074147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07ffd841-4d00-49b3-9c5a-a4424da7a9d6",
        "parentId" : null,
        "authorId" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "body" : "Forgot to mention earlier: you should probably use `dateutil/America/Los_Angeles`, as that is the canonical name for this zone. The `US/...` zones are symlinks for backwards compatibility.",
        "createdAt" : "2020-01-24T16:31:54Z",
        "updatedAt" : "2020-01-24T16:31:54Z",
        "lastEditedBy" : "df13c963-1a7e-400d-8549-3b407a6b437e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d21a81715ee0f8f48831fb3884f32aac3caadff",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1109,1113 @@    # pandas.Timedelta.total_seconds with\n    # datetime.timedelta.total_seconds before\n    ts = Timestamp(epoch, tz=\"dateutil/US/Pacific\")\n    result = ts.tz.dst(ts)\n    expected = timedelta(seconds=0)"
  }
]