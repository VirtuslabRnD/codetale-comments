[
  {
    "id" : "22a0315b-6bcb-4635-a81c-eaaef29baa60",
    "prId" : 6734,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c15d18f1-4579-49dc-8067-dd35998f1753",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine, though `array_equavalent` will match this (as it uses pd.isnull() under the hood which handles NaT properly). even `np.array_equal` works here. The actual `pd.NaT` values are translated to `pd.tslib.iNaT` which is actually an integer; this type of testing is even easier that floats FYI.\n",
        "createdAt" : "2014-04-06T14:18:04Z",
        "updatedAt" : "2014-04-06T14:21:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "91befdd7c8d1b2ba3450fd0b934ab8d0f333ba04",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +371,375 @@            # numpy_array_equal cannot compare pd.NaT\n            self.assert_numpy_array_equal(unique[:3], expected)\n            self.assertTrue(unique[3] is pd.NaT or unique[3].astype('int64') == pd.tslib.iNaT)\n\n            self.assertEquals(s.nunique(), 4)"
  },
  {
    "id" : "c9609285-de9c-40f1-850c-9fbd70499b86",
    "prId" : 10236,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@sinhrks I think this was left in here?\n",
        "createdAt" : "2015-08-11T00:53:55Z",
        "updatedAt" : "2015-08-11T00:53:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "83b97deb-5b33-4203-9bd8-28f6b249fa4a",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Ah, this is for testing `tm.assert_produces_warning` in a loop. Should remove?\n",
        "createdAt" : "2015-08-11T01:19:33Z",
        "updatedAt" : "2015-08-11T01:19:33Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "0e631cbb-0e0a-4574-8e90-d0ae97c99333",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "u will have lots of failures \n\nneed to either remove some of the tests that have take_last or convert them to keep (prob best) or use an assert produces around them\n",
        "createdAt" : "2015-08-11T01:22:13Z",
        "updatedAt" : "2015-08-11T01:22:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5fc3d9e2-260e-4325-baa3-d32c69c023cb",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not lots of failures but the same one \n",
        "createdAt" : "2015-08-11T01:23:04Z",
        "updatedAt" : "2015-08-11T01:23:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b913ba6671f0210e7f1ebaff203f57a31e2fe51",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +686,690 @@\n        import warnings\n        warnings.simplefilter('always')\n\n        for original in self.objs:"
  }
]