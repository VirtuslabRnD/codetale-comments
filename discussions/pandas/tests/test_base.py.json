[
  {
    "id" : "22a0315b-6bcb-4635-a81c-eaaef29baa60",
    "prId" : 6734,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c15d18f1-4579-49dc-8067-dd35998f1753",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine, though `array_equavalent` will match this (as it uses pd.isnull() under the hood which handles NaT properly). even `np.array_equal` works here. The actual `pd.NaT` values are translated to `pd.tslib.iNaT` which is actually an integer; this type of testing is even easier that floats FYI.\n",
        "createdAt" : "2014-04-06T14:18:04Z",
        "updatedAt" : "2014-04-06T14:21:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "91befdd7c8d1b2ba3450fd0b934ab8d0f333ba04",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +371,375 @@            # numpy_array_equal cannot compare pd.NaT\n            self.assert_numpy_array_equal(unique[:3], expected)\n            self.assertTrue(unique[3] is pd.NaT or unique[3].astype('int64') == pd.tslib.iNaT)\n\n            self.assertEquals(s.nunique(), 4)"
  },
  {
    "id" : "c9609285-de9c-40f1-850c-9fbd70499b86",
    "prId" : 10236,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@sinhrks I think this was left in here?\n",
        "createdAt" : "2015-08-11T00:53:55Z",
        "updatedAt" : "2015-08-11T00:53:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "83b97deb-5b33-4203-9bd8-28f6b249fa4a",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Ah, this is for testing `tm.assert_produces_warning` in a loop. Should remove?\n",
        "createdAt" : "2015-08-11T01:19:33Z",
        "updatedAt" : "2015-08-11T01:19:33Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "0e631cbb-0e0a-4574-8e90-d0ae97c99333",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "u will have lots of failures \n\nneed to either remove some of the tests that have take_last or convert them to keep (prob best) or use an assert produces around them\n",
        "createdAt" : "2015-08-11T01:22:13Z",
        "updatedAt" : "2015-08-11T01:22:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5fc3d9e2-260e-4325-baa3-d32c69c023cb",
        "parentId" : "94652753-38ae-476a-9763-55cf0f169fdb",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not lots of failures but the same one \n",
        "createdAt" : "2015-08-11T01:23:04Z",
        "updatedAt" : "2015-08-11T01:23:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b913ba6671f0210e7f1ebaff203f57a31e2fe51",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +686,690 @@\n        import warnings\n        warnings.simplefilter('always')\n\n        for original in self.objs:"
  },
  {
    "id" : "b95489f7-072d-41f7-87fd-611f87424cf7",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-62168567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26cb4ca8-a0e5-426b-8d8f-33910880af9a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I would make a separate construction for object/category, because the test is not ensuring this is correct. For example on master, a categorical series of integers will box to np.int64, but a np.int64 scalar passes the `ininstance(.., object)` test",
        "createdAt" : "2017-09-12T15:38:41Z",
        "updatedAt" : "2017-09-12T15:42:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +1071,1075 @@        # gh-13258\n        # coerce iteration to underlying python / pandas types\n        s = typ([1], dtype=dtype)\n        result = method(s)[0]\n        assert isinstance(result, rdtype)"
  },
  {
    "id" : "6494cc48-6c1e-4e57-8b15-40335dd02d77",
    "prId" : 17491,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17491#pullrequestreview-63270741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca650323-62fd-450c-8123-8fd0bff1ea0e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "can you add test for Series.iteritems and DataFrame.itertuples/iterrows as well?",
        "createdAt" : "2017-09-12T15:40:46Z",
        "updatedAt" : "2017-09-12T15:42:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b033aaa7-0025-4fe9-a72d-83833c0babc2",
        "parentId" : "ca650323-62fd-450c-8123-8fd0bff1ea0e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "these are in tests/frame/test_api.py already",
        "createdAt" : "2017-09-12T23:22:34Z",
        "updatedAt" : "2017-09-12T23:22:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "44e694ec-8a13-4330-87c7-f1904c1710f1",
        "parentId" : "ca650323-62fd-450c-8123-8fd0bff1ea0e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, but you said this PR changed the behaviour of itertuples ? (https://github.com/pandas-dev/pandas/issues/13468#issuecomment-328844029) Then we should have a test for that?",
        "createdAt" : "2017-09-15T13:05:39Z",
        "updatedAt" : "2017-09-15T13:05:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "9573162b-b7fc-4801-ac4a-5c255ff7a181",
        "parentId" : "ca650323-62fd-450c-8123-8fd0bff1ea0e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and that's all well tested see\r\nframe/test_api",
        "createdAt" : "2017-09-17T18:42:24Z",
        "updatedAt" : "2017-09-17T18:42:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1e169b64-fec8-490e-a4bb-6a1099477304",
        "parentId" : "ca650323-62fd-450c-8123-8fd0bff1ea0e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "ah, missed that one-line change in existing test in the diff. Thanks for the clarification!",
        "createdAt" : "2017-09-18T07:39:03Z",
        "updatedAt" : "2017-09-18T07:39:03Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "05f8a6f6b192e9037747d2d0251b8506b53a70d1",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +1102,1106 @@\n        result = method(i)[0]\n        assert isinstance(result, Timestamp)"
  },
  {
    "id" : "9f17db1b-d2dd-48cc-92c4-70bb932a7cac",
    "prId" : 17503,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17503#pullrequestreview-62395566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74b3fbef-4a52-4507-b9ee-83ce386d85a0",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Is this just a new test for coverage purposes or related to any of the issues you addressed?",
        "createdAt" : "2017-09-13T08:20:23Z",
        "updatedAt" : "2017-09-13T10:38:22Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "5967ac64-b95e-4bf7-8c3a-829301abcf66",
        "parentId" : "74b3fbef-4a52-4507-b9ee-83ce386d85a0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "a moved test",
        "createdAt" : "2017-09-13T10:37:49Z",
        "updatedAt" : "2017-09-13T10:38:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4cf873b410fe5db149d9bce0d84087900ea246b",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +1138,1142 @@        assert isinstance(result, Timestamp)\n\n    def test_iter_box(self):\n        vals = [pd.Timestamp('2011-01-01'), pd.Timestamp('2011-01-02')]\n        s = pd.Series(vals)"
  },
  {
    "id" : "ca176909-7612-4361-9e0b-705b77faa55c",
    "prId" : 19558,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19558#pullrequestreview-95414928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55b250b1-ce1a-4656-8b16-3fccbeb1d434",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "In the future, we should maybe add an `assert_array_equal` that handles the different extension arrays as well, then such a special case should not be needed here?",
        "createdAt" : "2018-02-09T13:17:45Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3af8a21ea0e13ba5fc73db464f6e327552c71b0e",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +1201,1205 @@        tm.assert_index_equal(l_values, r_values)\n    elif pd.api.types.is_categorical(l_values):\n        tm.assert_categorical_equal(l_values, r_values)\n    else:\n        raise TypeError(\"Unexpected type {}\".format(type(l_values)))"
  },
  {
    "id" : "a043de27-02b3-4af2-8c18-d0014943945c",
    "prId" : 19558,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19558#pullrequestreview-95815287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9504c0b-db66-45c5-8802-5ae6887c2758",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Why fail? As I think `_ndarray_values` already are the ordinals, and will stay that way? (it is `_values` that will change from object array to PeriodArray?)",
        "createdAt" : "2018-02-12T13:51:49Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6844298c-0dd7-48fc-b91f-6607534e58e2",
        "parentId" : "d9504c0b-db66-45c5-8802-5ae6887c2758",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "It's an `xfail` since `Series[period]._ndarray_values` will return an object `ndarray` with teh Periods, while `PeriodIndex._ndarray_values` returns the ordinals.\r\n\r\nPassing this now would require modifying `Series._ndarray_values`, which is currently just `self._internal_values`, to special case object dtype to do inference to see if we have periods. I don't think that's worth it since Periods will (hopefully) be a first-class extension dtype by the next release.",
        "createdAt" : "2018-02-12T14:21:32Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "fdb24cfd-c3ea-44b0-9750-b67d9194a61f",
        "parentId" : "d9504c0b-db66-45c5-8802-5ae6887c2758",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah missed that the test below tested it for both Series and Index.",
        "createdAt" : "2018-02-12T14:54:10Z",
        "updatedAt" : "2018-02-13T11:54:32Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3af8a21ea0e13ba5fc73db464f6e327552c71b0e",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1218,1222 @@     np.array(['2017-01-01T05:00:00'], dtype='M8[ns]')),\n    (pd.TimedeltaIndex([10**10]), np.array([10**10], dtype='m8[ns]')),\n    pytest.mark.xfail(reason='PeriodArray not implemented')((\n        pd.PeriodIndex(['2017', '2018'], freq='D'),\n        np.array([17167, 17532]),"
  },
  {
    "id" : "b69d6e35-d914-4bbb-87b8-35cf022699d6",
    "prId" : 19800,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19800#pullrequestreview-100624750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b33aa0e7-e49f-4513-a3dd-cf9ad5b87bae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this might be simpler to separate out into datetimelike and non-datetimelike",
        "createdAt" : "2018-02-24T14:51:48Z",
        "updatedAt" : "2018-03-01T04:04:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "54711018-5454-49f8-b52f-124ef669db08",
        "parentId" : "b33aa0e7-e49f-4513-a3dd-cf9ad5b87bae",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "as in separate tests?",
        "createdAt" : "2018-02-24T16:36:45Z",
        "updatedAt" : "2018-03-01T04:04:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ea0bdc8b-2d58-4989-b4e3-4e98d71cd0e3",
        "parentId" : "b33aa0e7-e49f-4513-a3dd-cf9ad5b87bae",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes, all of these ifs make it hard to read",
        "createdAt" : "2018-02-24T16:43:27Z",
        "updatedAt" : "2018-03-01T04:04:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9e7856c6-44f7-437b-bb28-845099bb3501",
        "parentId" : "b33aa0e7-e49f-4513-a3dd-cf9ad5b87bae",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "OK.  This whole test should be parametrized, and there `isinstance(o, Series)` check should be rendered unnecessary.  Vote for doing this in the next pass.",
        "createdAt" : "2018-02-24T19:05:32Z",
        "updatedAt" : "2018-03-01T04:04:32Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b7521cee-0c0f-4cd9-86c2-3b626c50f9c0",
        "parentId" : "b33aa0e7-e49f-4513-a3dd-cf9ad5b87bae",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok that's fine",
        "createdAt" : "2018-03-01T22:54:11Z",
        "updatedAt" : "2018-03-01T22:54:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff516344f83bea946c2743810bea459f3182a265",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +297,301 @@                # assert result.iat[0]\n                # assert result.iat[1]\n                if (is_datetime64_dtype(o) or is_datetimetz(o)):\n                    # Following DatetimeIndex (and Timestamp) convention,\n                    # inequality comparisons with Series[datetime64] raise"
  },
  {
    "id" : "e77dbb23-0b30-4772-ace4-696c5e0620e0",
    "prId" : 22852,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22852#pullrequestreview-170526630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8381e209-632b-4566-a56f-35686edefe9e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "since you have this, do we need all of the tests in the sub-classes (e.g. in the individual test files)?",
        "createdAt" : "2018-10-31T12:30:13Z",
        "updatedAt" : "2018-11-07T03:51:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0d798061-6ade-43da-92fa-70655e25ef52",
        "parentId" : "8381e209-632b-4566-a56f-35686edefe9e",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Thx, removed duplicated tests except for `MultiIndex`.",
        "createdAt" : "2018-11-01T01:05:46Z",
        "updatedAt" : "2018-11-07T03:51:17Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "420e5c4d4b6164a88bb2c9478dcdb9299190a131",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1012,1016 @@            pytest.raises(IndexError, s.iloc.__getitem__, 20)\n\n    @pytest.mark.parametrize('indexer_klass', [list, pd.Index])\n    @pytest.mark.parametrize('indexer', [[True] * 10, [False] * 10,\n                                         [True, False, True, True, False,"
  },
  {
    "id" : "576e8ee8-df3c-4257-b13d-cd04c4a8837a",
    "prId" : 23398,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23398#pullrequestreview-170275347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3185c4e9-afa3-4fd9-8531-a0f6f409af17",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you will need to run the test and then catch any instance of .tolist as it will show a warning",
        "createdAt" : "2018-10-30T12:56:33Z",
        "updatedAt" : "2018-12-12T17:04:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "61759739-b338-4e5c-8647-a747bb4278f3",
        "parentId" : "3185c4e9-afa3-4fd9-8531-a0f6f409af17",
        "authorId" : "a7e838b8-5342-4a80-b297-5473076a16b0",
        "body" : "Hm. I've run the tests (via ``pytest pandas/tests/test_base.py -v -k TestToIterable`` and I don't get any warnings there. ",
        "createdAt" : "2018-10-30T13:50:52Z",
        "updatedAt" : "2018-12-12T17:04:49Z",
        "lastEditedBy" : "a7e838b8-5342-4a80-b297-5473076a16b0",
        "tags" : [
        ]
      },
      {
        "id" : "eec5b0e1-d167-41a6-842b-58373b6da817",
        "parentId" : "3185c4e9-afa3-4fd9-8531-a0f6f409af17",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pls run the test suite itself. likely this is used elsewhere which need catching.",
        "createdAt" : "2018-10-31T13:01:33Z",
        "updatedAt" : "2018-12-12T17:04:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ed729539-1662-4e9d-ae5f-d002b6188537",
        "parentId" : "3185c4e9-afa3-4fd9-8531-a0f6f409af17",
        "authorId" : "a7e838b8-5342-4a80-b297-5473076a16b0",
        "body" : "It seems that I can't produce any warning related to these changes. I also quick-checked the Travis logs and compared them with other builds.",
        "createdAt" : "2018-10-31T14:18:22Z",
        "updatedAt" : "2018-12-12T17:04:49Z",
        "lastEditedBy" : "a7e838b8-5342-4a80-b297-5473076a16b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "c57e8eb08e472431d24339919a64514911a798b5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1102,1106 @@            lambda x: x.to_list(),\n            lambda x: list(x),\n            lambda x: list(x.__iter__()),\n        ], ids=['tolist', 'to_list', 'list', 'iter'])\n    @pytest.mark.parametrize('typ', [Series, Index])"
  },
  {
    "id" : "1e6844ea-6c6a-40e1-a3ce-3098766b08d8",
    "prId" : 23623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23623#pullrequestreview-177413818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0daeb12c-ff92-4ee6-aa38-cb2f666ecdc0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe put in pandas/tests/arrays/test_arrays.py? ",
        "createdAt" : "2018-11-21T13:16:11Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "58a29099-8579-46eb-bfa9-6ce80257bbe7",
        "parentId" : "0daeb12c-ff92-4ee6-aa38-cb2f666ecdc0",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Doesn't exist yet :), though my `pd.array` PR is creating it.\r\n\r\nThis seemed a bit more appropriate since it's next to our tests for `ndarray_values`.",
        "createdAt" : "2018-11-21T20:12:33Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9eee65e64ae815b320f5a8bd3a8701e264f15f6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1271,1275 @@\n\n@pytest.mark.parametrize(\"array, attr\", [\n    (np.array([1, 2], dtype=np.int64), None),\n    (pd.Categorical(['a', 'b']), '_codes'),"
  },
  {
    "id" : "b6aa3db4-bdb1-42f1-b244-509fd43a8fea",
    "prId" : 23623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23623#pullrequestreview-178697400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e250ce2-2b2d-4dca-b57a-ec12a244d4f5",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "only skip if `box` is Index?",
        "createdAt" : "2018-11-27T20:48:19Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9eee65e64ae815b320f5a8bd3a8701e264f15f6",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1283,1287 @@def test_array(array, attr, box):\n    if array.dtype.name in ('Int64', 'Sparse[int64, 0]') and box is pd.Index:\n        pytest.skip(\"No index type for {}\".format(array.dtype))\n    result = box(array, copy=False).array\n"
  },
  {
    "id" : "a498baea-3b01-4c51-be4a-9ec5e9668caf",
    "prId" : 23623,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23623#pullrequestreview-179566618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb3d1fb1-064c-4d03-88e7-280f5f575b79",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we also test for the case where it is not a copy?",
        "createdAt" : "2018-11-27T20:50:04Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "89512f14-eff2-429b-810f-9232dbe9434a",
        "parentId" : "cb3d1fb1-064c-4d03-88e7-280f5f575b79",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "What do you mean here? (in case you missed it, the first case is a regular ndarray, so that won't be a copy. Though perhaps you're saying I should assert this for that case?)",
        "createdAt" : "2018-11-28T15:12:57Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "8c268b8f-dfd8-45fc-8de7-e227f728fa09",
        "parentId" : "cb3d1fb1-064c-4d03-88e7-280f5f575b79",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, that's what I meant. If we return a view, and people can rely on it, we should test it.",
        "createdAt" : "2018-11-28T23:24:44Z",
        "updatedAt" : "2018-11-29T12:19:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9eee65e64ae815b320f5a8bd3a8701e264f15f6",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +1319,1323 @@\n    result = thing.to_numpy()\n    tm.assert_numpy_array_equal(result, expected)"
  }
]