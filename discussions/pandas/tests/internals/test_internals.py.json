[
  {
    "id" : "c8e16aad-9deb-45fb-92ce-dbf046b7c1cc",
    "prId" : 17779,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17779#pullrequestreview-67343821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72115f3b-77e3-4cd5-bbaf-a0c6ee44d1bd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually ought to add Timedelta/Timestamp, NaT, np.nan, Period",
        "createdAt" : "2017-10-05T10:25:08Z",
        "updatedAt" : "2017-10-05T10:25:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "72a5da70-8532-4b10-be08-df2a1d71eeb3",
        "parentId" : "72115f3b-77e3-4cd5-bbaf-a0c6ee44d1bd",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "The missing data ones are already covered in `test_nanops`. Timedelta / timestamps in handled in `tests/scalar/`. `Period` doesn't support binops.  So we should be good.",
        "createdAt" : "2017-10-05T11:29:44Z",
        "updatedAt" : "2017-10-05T11:29:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ed82be6a0266f1a1fd138e0a03c6d6c560800d0",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +1248,1252 @@        (1j, 'complex128'),\n        (True, 'bool'),\n        (np.timedelta64(20, 'ns'), '<m8[ns]'),\n        (np.datetime64(20, 'ns'), '<M8[ns]'),\n    ])"
  },
  {
    "id" : "0bb1c13a-1627-438b-a1b4-567282504ac1",
    "prId" : 22163,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22163#pullrequestreview-144533890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b04288c-4937-49bf-9188-ed4674d9b234",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pull this out and parametrize",
        "createdAt" : "2018-08-08T10:14:09Z",
        "updatedAt" : "2018-08-10T14:11:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4e79bfe0-395c-4e18-a720-4f34a3496d74",
        "parentId" : "8b04288c-4937-49bf-9188-ed4674d9b234",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This test already has two layers of parametrization; it isn't clear how to pull this out without making it more verbose+repetitive.  Let me give this some thought and circle back.",
        "createdAt" : "2018-08-08T17:49:04Z",
        "updatedAt" : "2018-08-10T14:11:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b62135b945ea015ef5531af8dc9502f6c018511",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1243,1247 @@        s = pd.DataFrame({\"A\": [e.value, e.value]}, dtype=e.dtype)\n\n        invalid = {(operator.pow, '<M8[ns]'),\n                   (operator.mod, '<M8[ns]'),\n                   (operator.truediv, '<M8[ns]'),"
  }
]