[
  {
    "id" : "71450081-f6d6-4964-80e9-fb083c5663ee",
    "prId" : 29842,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29842#pullrequestreview-323475976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc8b549-6a6a-41a5-bc7f-1ffc7cc304cc",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "A careful review of these new test cases would be greatly appreciated. I've tried to make them as clear as possible, while covering all the cases.",
        "createdAt" : "2019-11-25T22:01:04Z",
        "updatedAt" : "2019-12-06T21:40:16Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "51e2926a-25c3-4fb2-8d6e-a54c0de12cae",
        "parentId" : "5dc8b549-6a6a-41a5-bc7f-1ffc7cc304cc",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I went through the tests, very clear, added a few comments, for the rest looks good to me!",
        "createdAt" : "2019-11-27T08:50:32Z",
        "updatedAt" : "2019-12-06T21:40:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "31c2bc6dc3c8d7ef7cbf7aea41d6d686f7ff58ca",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +417,421 @@            getattr(a, all_logical_operators)(other)\n\n    def test_kleene_or(self):\n        # A clear test of behavior.\n        a = pd.array([True] * 3 + [False] * 3 + [None] * 3, dtype=\"boolean\")"
  },
  {
    "id" : "240e125c-675a-43cd-96c7-15f509df5a2b",
    "prId" : 29842,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29842#pullrequestreview-323475976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b31595c1-71db-4532-a19b-c28307a108b0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you also test the case where the scalar is True or False here? (that is still related to Kleene, since there is a missing value in the array)",
        "createdAt" : "2019-11-27T08:27:48Z",
        "updatedAt" : "2019-12-06T21:40:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c3a63cdb-b79b-4cd9-9e65-e21011a0b669",
        "parentId" : "b31595c1-71db-4532-a19b-c28307a108b0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Or integrate with test case below?",
        "createdAt" : "2019-11-27T08:48:54Z",
        "updatedAt" : "2019-12-06T21:40:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "31c2bc6dc3c8d7ef7cbf7aea41d6d686f7ff58ca",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +437,441 @@            b, pd.array([True, False, None] * 3, dtype=\"boolean\")\n        )\n\n    @pytest.mark.parametrize(\n        \"other, expected\","
  }
]