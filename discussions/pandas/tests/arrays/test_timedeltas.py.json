[
  {
    "id" : "9603b7ac-9d5e-4792-b6d7-57fac94a167f",
    "prId" : 24364,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24364#pullrequestreview-186789092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "952d06d6-ee91-4570-9da9-bb2c63b55d21",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This last line is not present in the test in #24024.",
        "createdAt" : "2018-12-19T23:05:56Z",
        "updatedAt" : "2018-12-20T00:45:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc3a301a04073e8d34eeea68c895e7313a5f9b27",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +17,21 @@        arr = TimedeltaArray(data, copy=True)\n        assert arr._data is not data\n        assert arr._data.base is not data\n\n"
  },
  {
    "id" : "bb8739a3-08c8-4eb2-9226-511ea0a3d0b7",
    "prId" : 25329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25329#pullrequestreview-204141636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f2ba2e2-08e5-4a74-8639-0b37780cb681",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Hmm...part of me wants to parameterize this...but I'll leave it to you because it's not the nicest of parameterizations compared to others.",
        "createdAt" : "2019-02-15T09:16:33Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ab5977c402fdce0a9f3635dd1758f307db52d2",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +21,25 @@            # 0-dim\n            TimedeltaArray(arr[[0]].squeeze())\n\n    def test_freq_validation(self):\n        # ensure that the public constructor cannot create an invalid instance"
  },
  {
    "id" : "d2fd767e-4a88-42ed-80d5-cd972d168deb",
    "prId" : 25329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25329#pullrequestreview-204309814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "* Does that `TODO` refer to both tests or just the first `assert` ?\r\n* Similar feeling about parameterization...parts of me would like to, but it's not as nice as others...so again, your call",
        "createdAt" : "2019-02-15T09:17:34Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "ee59dd19-a60f-4311-ae7d-45d765c89d32",
        "parentId" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Does that `TODO` refer to both tests or just the first `assert` ?\r\n\r\nBoth, I think. Or at least the index and array class should be consistent. But instead of a TODO, I would maybe rather open an issue about it.",
        "createdAt" : "2019-02-15T10:06:26Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0f76a559-9de5-4734-92ba-93003b9a51c7",
        "parentId" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "will remove TODO and open an issue.\r\n\r\n@gfyoung I don't think either of these cases merit parametrization, but I _did_ take your comments into consideration and give the matter real thought.",
        "createdAt" : "2019-02-15T15:56:43Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ab5977c402fdce0a9f3635dd1758f307db52d2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +72,76 @@\n        result = np.sum(pd.TimedeltaIndex(arr))\n        assert result == vals.sum()\n\n    def test_from_sequence_dtype(self):"
  }
]