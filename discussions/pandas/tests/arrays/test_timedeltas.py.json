[
  {
    "id" : "9603b7ac-9d5e-4792-b6d7-57fac94a167f",
    "prId" : 24364,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24364#pullrequestreview-186789092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "952d06d6-ee91-4570-9da9-bb2c63b55d21",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This last line is not present in the test in #24024.",
        "createdAt" : "2018-12-19T23:05:56Z",
        "updatedAt" : "2018-12-20T00:45:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc3a301a04073e8d34eeea68c895e7313a5f9b27",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +17,21 @@        arr = TimedeltaArray(data, copy=True)\n        assert arr._data is not data\n        assert arr._data.base is not data\n\n"
  },
  {
    "id" : "bb8739a3-08c8-4eb2-9226-511ea0a3d0b7",
    "prId" : 25329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25329#pullrequestreview-204141636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f2ba2e2-08e5-4a74-8639-0b37780cb681",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Hmm...part of me wants to parameterize this...but I'll leave it to you because it's not the nicest of parameterizations compared to others.",
        "createdAt" : "2019-02-15T09:16:33Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ab5977c402fdce0a9f3635dd1758f307db52d2",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +21,25 @@            # 0-dim\n            TimedeltaArray(arr[[0]].squeeze())\n\n    def test_freq_validation(self):\n        # ensure that the public constructor cannot create an invalid instance"
  },
  {
    "id" : "d2fd767e-4a88-42ed-80d5-cd972d168deb",
    "prId" : 25329,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25329#pullrequestreview-204309814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "* Does that `TODO` refer to both tests or just the first `assert` ?\r\n* Similar feeling about parameterization...parts of me would like to, but it's not as nice as others...so again, your call",
        "createdAt" : "2019-02-15T09:17:34Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "ee59dd19-a60f-4311-ae7d-45d765c89d32",
        "parentId" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Does that `TODO` refer to both tests or just the first `assert` ?\r\n\r\nBoth, I think. Or at least the index and array class should be consistent. But instead of a TODO, I would maybe rather open an issue about it.",
        "createdAt" : "2019-02-15T10:06:26Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0f76a559-9de5-4734-92ba-93003b9a51c7",
        "parentId" : "927187cf-f705-4f84-a472-4cc7e664da11",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "will remove TODO and open an issue.\r\n\r\n@gfyoung I don't think either of these cases merit parametrization, but I _did_ take your comments into consideration and give the matter real thought.",
        "createdAt" : "2019-02-15T15:56:43Z",
        "updatedAt" : "2019-02-20T09:52:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "67ab5977c402fdce0a9f3635dd1758f307db52d2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +72,76 @@\n        result = np.sum(pd.TimedeltaIndex(arr))\n        assert result == vals.sum()\n\n    def test_from_sequence_dtype(self):"
  },
  {
    "id" : "a1e6a09f-a9b1-4eb2-a95a-84583ea5341e",
    "prId" : 28165,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28165#pullrequestreview-280551086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2414688d-6198-4b9d-a719-e6ee1c1de052",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Add a case testing `min_count`?",
        "createdAt" : "2019-08-27T20:56:13Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "d5ea0bfb-ff76-4ee6-b21c-512fd204ebfc",
        "parentId" : "2414688d-6198-4b9d-a719-e6ee1c1de052",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "will do",
        "createdAt" : "2019-08-28T01:38:05Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc25b97c3171152ce5f4aae1ad4c288f3a75eec",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +190,194 @@\n        result = tdi.sum(skipna=False)\n        assert result is pd.NaT\n\n        result = arr.sum(min_count=9)"
  },
  {
    "id" : "e0542a46-c904-44d2-9a4e-e44be07d64ed",
    "prId" : 28165,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28165#pullrequestreview-280485331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f384ed3e-f745-450c-9747-dcd3121ceece",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is the isinstance required? Not covered by subsequent assertion?",
        "createdAt" : "2019-08-27T21:21:01Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c7713d38-6bbb-473b-86a2-ba06f6d49a92",
        "parentId" : "f384ed3e-f745-450c-9747-dcd3121ceece",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes and no, respectively. Timedelta(hours=17) == timedelta(hours=17)",
        "createdAt" : "2019-08-27T21:33:50Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc25b97c3171152ce5f4aae1ad4c288f3a75eec",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +179,183 @@        result = arr.sum(skipna=True)\n        expected = pd.Timedelta(hours=17)\n        assert isinstance(result, pd.Timedelta)\n        assert result == expected\n"
  },
  {
    "id" : "1b812f27-3c3c-47c7-a712-967cb351e52a",
    "prId" : 28165,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28165#pullrequestreview-283125217",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "652e5734-47ba-4cfc-abf0-3c70580a9270",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did you leave these here on purpose (as this tests median)?",
        "createdAt" : "2019-09-02T20:57:34Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "95fd5bf0-a419-409d-9c48-647211596d79",
        "parentId" : "652e5734-47ba-4cfc-abf0-3c70580a9270",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "looks like a typo, will fix",
        "createdAt" : "2019-09-03T16:44:49Z",
        "updatedAt" : "2019-10-07T00:53:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc25b97c3171152ce5f4aae1ad4c288f3a75eec",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +252,256 @@        assert result == expected\n\n        result = arr.std(skipna=False)\n        assert result is pd.NaT\n"
  },
  {
    "id" : "7c817fe6-2d3d-4592-bebd-84d52e050248",
    "prId" : 28165,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28165#pullrequestreview-300392257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "078feb76-0d40-4244-97f2-9b71ce38fb23",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The `min_count` was mainly added for the empty case, and for this it does not seem to work:\r\n\r\n```\r\nIn [27]: tdi = pd.TimedeltaIndex([])                                                                                                                                                                               \r\n\r\nIn [28]: tdi.sum()                                                                                                                                                                                                 \r\nOut[28]: NaT\r\n\r\nIn [29]: tdi.sum(min_count=1)                                                                                                                                                                                      \r\nOut[29]: NaT\r\n\r\nIn [30]: tdi.sum(min_count=0)                                                                                                                                                                                      \r\nOut[30]: NaT\r\n```\r\n\r\nIf we follow the same behaviour as for numerical sum, the result should be 0 instead of NaT",
        "createdAt" : "2019-10-10T20:19:16Z",
        "updatedAt" : "2019-10-10T20:22:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "316e7927-ca65-4a33-abfc-d5bbca9b9ddf",
        "parentId" : "078feb76-0d40-4244-97f2-9b71ce38fb23",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think you're right",
        "createdAt" : "2019-10-10T22:46:33Z",
        "updatedAt" : "2019-10-10T22:46:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfc25b97c3171152ce5f4aae1ad4c288f3a75eec",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +202,206 @@        assert result == expected\n\n        result = tdi.sum(min_count=1)\n        assert isinstance(result, pd.Timedelta)\n        assert result == expected"
  },
  {
    "id" : "0710d5ca-9131-4372-a45b-b1db6d7f5ec9",
    "prId" : 37394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37394#pullrequestreview-516451137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeaf521c-d8ec-4fc7-88b1-d7d40f8d6f13",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we should have a `min_count` argument if we are going to change this (I know its a PITA but if we do this then its yet another different as EA already has the min_count argument.",
        "createdAt" : "2020-10-26T03:16:57Z",
        "updatedAt" : "2020-10-26T03:17:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c86b3b7f-0835-4025-a093-c73a5eb18691",
        "parentId" : "aeaf521c-d8ec-4fc7-88b1-d7d40f8d6f13",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah, planning on handling this in a dedicated pass.  these reductions are kind of a mess; ive already got four not-yet-pushed reduction branches on deck.",
        "createdAt" : "2020-10-26T03:36:35Z",
        "updatedAt" : "2020-10-26T03:36:35Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fda979e9ea3da9a44423f8110efb5f94a63d358e",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +194,198 @@        arr = tdi.array\n\n        result = tdi.sum(skipna=skipna)\n        assert isinstance(result, Timedelta)\n        assert result == Timedelta(0)"
  },
  {
    "id" : "5786a5e2-c2ec-440e-a889-c59dabe16fef",
    "prId" : 37436,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37436#pullrequestreview-517672267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cfefe61-dc03-4633-801f-83efeb3b2408",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "shouldn't this be in test_datetimes? yes i read your comment, but still the location is odd",
        "createdAt" : "2020-10-27T12:58:52Z",
        "updatedAt" : "2020-10-30T02:02:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc4ee12dcffec916d5cdd402f9941b2e5cf4924",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +291,295 @@        tm.assert_timedelta_array_equal(result, expected)\n\n    # Adding a Timestamp makes this a test for DatetimeArray.std\n    @pytest.mark.parametrize(\n        \"add\","
  },
  {
    "id" : "985db96c-c2d8-4d46-86a0-23dfaeb25835",
    "prId" : 37436,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37436#pullrequestreview-520330562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1988e72-47cd-4cbd-870d-a1b18b86db9a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are we sure the actual result is correct? e.g. you are just comparing vs the implementation itself. IOW a result which checks a fixed series of datetimes for mean/std would be good.",
        "createdAt" : "2020-10-27T13:00:06Z",
        "updatedAt" : "2020-10-30T02:02:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b60f162e-7c04-4c07-9311-8ad4b52e0877",
        "parentId" : "d1988e72-47cd-4cbd-870d-a1b18b86db9a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "agreed these tests needs fleshing out.  im still giving thought to where they should live",
        "createdAt" : "2020-10-27T15:06:08Z",
        "updatedAt" : "2020-10-30T02:02:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0286fe31-5c0b-4ce3-b1f2-cb81f673306d",
        "parentId" : "d1988e72-47cd-4cbd-870d-a1b18b86db9a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure, that's fine about location. i am more concerned with if the results are actually correct; reasoning is that they are converted to i8 but need to make sure that these are coming back correct as well. i am not sure this is actually tested.",
        "createdAt" : "2020-10-29T01:08:16Z",
        "updatedAt" : "2020-10-30T02:02:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8c6279ff-30a3-4bbe-81e9-eef05fb20849",
        "parentId" : "d1988e72-47cd-4cbd-870d-a1b18b86db9a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes, we have tests with explicit `expected` for std() with td64 in test_reductions, test_describe, and test_analytics.",
        "createdAt" : "2020-10-30T02:02:12Z",
        "updatedAt" : "2020-10-30T02:02:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcc4ee12dcffec916d5cdd402f9941b2e5cf4924",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +326,330 @@\n        if getattr(arr, \"tz\", None) is None:\n            result = nanops.nanstd(np.asarray(arr), skipna=False)\n            assert result is pd.NaT\n"
  }
]