[
  {
    "id" : "4f38b5bf-6e8f-4799-9474-b1ab7ff1d289",
    "prId" : 23581,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23581#pullrequestreview-173893568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56c54393-900f-41c5-95a5-d7fafbb14aaf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should this be an extension test? (or maybe in test_dtypes below)",
        "createdAt" : "2018-11-11T14:41:32Z",
        "updatedAt" : "2018-12-28T22:13:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fb7f56ad-34a3-4f09-a02d-ac3a77bf25ad",
        "parentId" : "56c54393-900f-41c5-95a5-d7fafbb14aaf",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm not really sure how to write a base test for that...",
        "createdAt" : "2018-11-12T13:16:32Z",
        "updatedAt" : "2018-12-28T22:13:35Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b9e251d28a5f6fd8aae2f10cd503bc7667c6cb9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +15,19 @@\n\ndef test_registered():\n    assert PeriodDtype in registry.dtypes\n    result = registry.find(\"Period[D]\")"
  },
  {
    "id" : "ee1dcbad-2e46-4a45-9554-ebdbea8e23c9",
    "prId" : 24405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24405#pullrequestreview-187723956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb1d08c3-2a39-4db7-8740-13f1aa22a239",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "also compare for equality here (e.g. the values should be equal in both cases)",
        "createdAt" : "2018-12-24T18:30:55Z",
        "updatedAt" : "2018-12-28T19:28:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "eac662b7a1eaf2c280ee91d9f9843963be4f106b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +115,119 @@\n    result = arr.astype(np.int64, copy=True)\n    assert result is not arr._data\n    tm.assert_numpy_array_equal(result, arr._data.view('i8'))\n"
  },
  {
    "id" : "0656b611-6871-4acf-b4b2-3bf60f811cbb",
    "prId" : 24599,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24599#pullrequestreview-189171822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0c43183-6b9c-407a-a50a-0e8a258d24b6",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Needed this change, as `__setitem__` might raise when creating the PeriodArray from a PeriodArray with different freq now, with a slightly different error message.\r\n\r\nWe might want to change `validate_dtype_freq` to use the error message from `raise_on_incompatible`. I haven't looked closely.",
        "createdAt" : "2019-01-03T20:32:47Z",
        "updatedAt" : "2019-01-03T20:32:47Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "572f1d0d90b694cfa4923581ced6c72368bd3fd0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +226,230 @@    ser = pd.Series(period_array(['2000', '2001', '2002'], freq='D'))\n    cond = np.array([True, False, True])\n    with pytest.raises(IncompatibleFrequency, match=\"freq\"):\n        ser.where(cond, other)\n"
  },
  {
    "id" : "ccf98ccd-b2ee-47cf-a2c0-282c389ec326",
    "prId" : 28371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28371#pullrequestreview-338561774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82df33b8-6691-4857-8ac0-705e91205080",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i would put the pyarrow tests in a separate file",
        "createdAt" : "2020-01-01T14:40:32Z",
        "updatedAt" : "2020-01-08T13:25:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c52c8627-c854-4348-a84d-45be964960ae",
        "parentId" : "82df33b8-6691-4857-8ac0-705e91205080",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Do you mean for all different dtypes combined? (because the period tests on which you are commenting here is less than 100 lines of code, so not sure that it is worth a separate file)",
        "createdAt" : "2020-01-06T10:11:58Z",
        "updatedAt" : "2020-01-08T13:25:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3037494cf87272011d8ba78d8220029d1a29ad8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +324,328 @@\n        result = arr.max(skipna=skipna)\n        assert result is pd.NaT\n\n"
  }
]