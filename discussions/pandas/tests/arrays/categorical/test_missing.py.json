[
  {
    "id" : "7501c5dd-619d-46e3-a8e0-a3f9c8853ea7",
    "prId" : 33629,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33629#pullrequestreview-397675407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should we also test this with putting the Categorical creation *outside* of the option context? ",
        "createdAt" : "2020-04-20T13:08:15Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6a7e14cc-3372-461d-a566-bcee59589a54",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "It turns out that actually fails interestingly enough: https://github.com/pandas-dev/pandas/pull/33629#discussion_r410936224 (if you set the option after constructing the object it loses its effect). What's even more strange is the value displays as NaN:\r\n```python\r\n[ins] In [3]: arr = pd.Categorical([1, 2, np.inf])                                                                                                                                                           \r\n\r\n[ins] In [4]: pd.options.mode.use_inf_as_na = True                                                                                                                                                           \r\n\r\n[ins] In [5]: arr                                                                                                                                                                                            \r\nOut[5]: \r\n[1.0, 2.0, NaN]\r\nCategories (3, float64): [1.0, 2.0, NaN]\r\n\r\n[ins] In [6]: arr.isna()                                                                                                                                                                                     \r\nOut[6]: array([False, False, False])\r\n```",
        "createdAt" : "2020-04-20T13:33:35Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "a5468f80-b8a6-44b5-80a9-fdf9f36c75c2",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> What's even more strange is the value displays as NaN:\r\n\r\nI think that is somewhat \"expected\", given the discussion above in https://github.com/pandas-dev/pandas/pull/33629#discussion_r410936224 (not that I like that behaviour though).\r\n\r\nBut regardless of how the categorical is created (with or without the option), I find it very strange that `isna` is then failing",
        "createdAt" : "2020-04-20T13:48:10Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e40dd173-c9d9-4158-9775-f9d8d691eebc",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Hmm, being a bit confused in the comment above :) \r\nThe Categorical.isna is failing, of course, since it just looks at -1 in the codes, and when inf is part of the categories, it is not -1 in the codes. Hence it is failing to detect it.\r\n",
        "createdAt" : "2020-04-20T13:50:55Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "6bd64a94-9f6a-4bb3-a999-711077a13571",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@dsaxton so could you additionally test it for `pd.isna` ? In constract to Categorical.isna(), pd.isna should work even if the Categorical is created before the context, I think?",
        "createdAt" : "2020-04-21T19:44:45Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "b4ffecda-e25a-49ad-aebb-ffe738c0635e",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "@jorisvandenbossche Added some tests, let me know if this is roughly what you had in mind",
        "createdAt" : "2020-04-21T20:26:58Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "989436a4-d22d-4cc8-9dc2-d82572f48f0a",
        "parentId" : "a9f70684-931d-4b55-b67d-da4a53049f86",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, that looks good!",
        "createdAt" : "2020-04-21T21:06:35Z",
        "updatedAt" : "2020-04-27T00:11:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe1648f3378fc57cb3c976b4369b6705ba379753",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +112,116 @@        # https://github.com/pandas-dev/pandas/issues/33594\n        with pd.option_context(\"mode.use_inf_as_na\", True):\n            cat = Categorical(values)\n            result = cat.isna()\n            tm.assert_numpy_array_equal(result, expected)"
  },
  {
    "id" : "7879eb27-886a-49c9-aafb-9a0af8c5ac08",
    "prId" : 41914,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41914#pullrequestreview-681201752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e516543-2ecd-4831-8a21-3e89fa25de4b",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "This is ValueError whereas in #41919 changed to TypeError with the same message?",
        "createdAt" : "2021-06-10T18:34:08Z",
        "updatedAt" : "2021-06-10T18:34:09Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "e820a007-143d-4faa-823f-11dde8b142a4",
        "parentId" : "0e516543-2ecd-4831-8a21-3e89fa25de4b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yes, this should eventually be TypeError",
        "createdAt" : "2021-06-10T19:56:41Z",
        "updatedAt" : "2021-06-10T19:56:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "667343added264827f75d4ef5beed93966c6a5e3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +105,109 @@        cat = Categorical(np.array([Point(1, 0), Point(0, 1), None], dtype=object))\n        msg = \"Cannot setitem on a Categorical with a new category\"\n        with pytest.raises(ValueError, match=msg):\n            cat.fillna(Point(0, 0))\n"
  },
  {
    "id" : "f2a97317-4cb4-4c62-b357-20d036c07858",
    "prId" : 41914,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41914#pullrequestreview-681337562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb643dbd-e96d-453a-9ea5-b75a5e35c7d4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is it possible to customize the error messages to the caller method (eg fill a here) as we have a generic validate (good)\n\ncan be a follow on",
        "createdAt" : "2021-06-10T22:58:04Z",
        "updatedAt" : "2021-06-10T22:58:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9b7cfcb9-1b9c-423c-b5ab-022828c7f162",
        "parentId" : "fb643dbd-e96d-453a-9ea5-b75a5e35c7d4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah thatd be nice.  we did something like that for the datetimelikes",
        "createdAt" : "2021-06-10T23:32:17Z",
        "updatedAt" : "2021-06-10T23:32:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "667343added264827f75d4ef5beed93966c6a5e3",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +104,108 @@        #  not NotImplementedError GH#41914\n        cat = Categorical(np.array([Point(1, 0), Point(0, 1), None], dtype=object))\n        msg = \"Cannot setitem on a Categorical with a new category\"\n        with pytest.raises(ValueError, match=msg):\n            cat.fillna(Point(0, 0))"
  }
]