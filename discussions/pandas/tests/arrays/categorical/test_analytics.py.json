[
  {
    "id" : "770bb4fb-3740-4304-abcd-0798f2e68bd2",
    "prId" : 27929,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27929#pullrequestreview-322764717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53e268e0-e406-41e8-a638-b7423aaed547",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use isna/notna",
        "createdAt" : "2019-11-25T23:06:24Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "26570224-d860-4ef6-8ec4-72bb1e5cc3a9",
        "parentId" : "53e268e0-e406-41e8-a638-b7423aaed547",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "`np.isnan` is a more strict / correct test in this case, since we are actually returning NaN (and not None, NA or NaT)",
        "createdAt" : "2019-11-26T07:08:20Z",
        "updatedAt" : "2019-12-02T09:38:06Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "260201cf5bc2419a229222f2258a4bb6d31b988c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +46,50 @@\n        if skipna is False:\n            assert np.isnan(_min)\n            assert np.isnan(_max)\n        else:"
  },
  {
    "id" : "48a3eb18-0c33-4d24-825d-e39a4dab0a58",
    "prId" : 30227,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30227#pullrequestreview-331259794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "656053a0-1fc0-485d-86d9-94f8ae224e71",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also parameterize on datetime categories",
        "createdAt" : "2019-12-12T14:17:42Z",
        "updatedAt" : "2019-12-17T14:32:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "890b27869585ad45c27dd235a43c5c58b01356ff",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +54,58 @@    def test_min_max_ordered_empty(self, categories, expected, aggregation):\n        # GH 30227\n        cat = Categorical([], categories=list(\"ABC\"), ordered=True)\n\n        agg_func = getattr(cat, aggregation)"
  },
  {
    "id" : "b5afda18-300b-4757-8859-d27497507324",
    "prId" : 30227,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30227#pullrequestreview-331276257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7fdfca5-5238-491e-aa7d-853fe6983dc9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move the ordered=True tests above to a new test and name appropriately and change the name of your test to be similar (e.g. include _ordered in the name)",
        "createdAt" : "2019-12-12T14:39:49Z",
        "updatedAt" : "2019-12-17T14:32:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "890b27869585ad45c27dd235a43c5c58b01356ff",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +37,41 @@        assert _max == \"a\"\n\n    @pytest.mark.parametrize(\n        \"categories,expected\",\n        ["
  },
  {
    "id" : "555c8599-3e76-412d-adc1-ed8a6c237565",
    "prId" : 37981,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37981#pullrequestreview-623447834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e30e574d-2533-451f-87d7-0ffd3fc41cfa",
        "parentId" : null,
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "nit: I'd drop this comment",
        "createdAt" : "2020-11-21T03:07:40Z",
        "updatedAt" : "2021-04-20T23:29:36Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "8df0ca2c-fbd4-43d8-a00e-ab096385b60d",
        "parentId" : "e30e574d-2533-451f-87d7-0ffd3fc41cfa",
        "authorId" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "body" : "I was asked to add this comment in my previous pull request #37918, which is related to #37643, so I did the same here ",
        "createdAt" : "2020-11-22T17:49:57Z",
        "updatedAt" : "2021-04-20T23:29:36Z",
        "lastEditedBy" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "tags" : [
        ]
      },
      {
        "id" : "49335713-a5ed-47e7-8b78-e56baa37c0e7",
        "parentId" : "e30e574d-2533-451f-87d7-0ffd3fc41cfa",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah i find these helpful",
        "createdAt" : "2021-03-29T16:54:54Z",
        "updatedAt" : "2021-04-20T23:29:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d20ca42e46a50bc0d969e2d7442b1d28c64dbacc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +328,332 @@        with pytest.raises(ValueError, match=msg):\n            with tm.assert_produces_warning(FutureWarning):\n                # issue #37643 inplace kwarg deprecated\n                cat.remove_categories(removals=[\"D\", \"E\", \"F\"], inplace=value)\n"
  }
]