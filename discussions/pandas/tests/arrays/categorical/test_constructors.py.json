[
  {
    "id" : "ea2576a8-8a04-481a-ab43-2e50e4cf06f2",
    "prId" : 31528,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31528#pullrequestreview-351888440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "148b5c46-7106-4458-9aaf-58970eb1f424",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually, I think we should be santizing these inputs on Index construction; we already *do* this for Series IIRC (deep in block manager i think).  Can you see if that's better (as its a more maintainable long term soln). Not averse to your change, but that's *after* we already saved the inputs.",
        "createdAt" : "2020-02-01T15:06:53Z",
        "updatedAt" : "2020-02-04T07:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e78ad5feb02e007bddb9959ca6cabe9df33e0f7a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +411,415 @@    def test_constructor_np_strs(self):\n        # GH#31499 Hastable.map_locations needs to work on np.str_ objects\n        cat = pd.Categorical([\"1\", \"0\", \"1\"], [np.str_(\"0\"), np.str_(\"1\")])\n        assert all(isinstance(x, np.str_) for x in cat.categories)\n"
  },
  {
    "id" : "afe09a2a-40e6-42a6-bc0b-011f7dac73de",
    "prId" : 31794,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31794#pullrequestreview-356614057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76996a87-ac34-48b2-8219-d727171ebc1a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also test with a NaN in the codes and Int64 (should raise)",
        "createdAt" : "2020-02-09T17:39:41Z",
        "updatedAt" : "2020-02-11T19:45:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e3a5a4f9-647e-49b4-969f-06a1e474d8a4",
        "parentId" : "76996a87-ac34-48b2-8219-d727171ebc1a",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Done. The error message that ends up getting raised is maybe not the best: `ValueError: cannot convert to '<class 'numpy.int64'>'-dtype NumPy array with missing values. Specify an appropriate 'na_value' for this dtype.`. Would you recommend creating one specific to this method when we have NA values?",
        "createdAt" : "2020-02-09T18:02:29Z",
        "updatedAt" : "2020-02-11T19:45:08Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "a7323cff-52ea-49cd-b368-ba8e658ed97d",
        "parentId" : "76996a87-ac34-48b2-8219-d727171ebc1a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, I think we should probably catch the error to raise a better one (because the error message now would be really confusing for users)",
        "createdAt" : "2020-02-11T12:23:38Z",
        "updatedAt" : "2020-02-11T19:45:08Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9edcfb9058fbc00be88415163f59add3dfcf396",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +561,565 @@            Categorical.from_codes([0, 1])\n\n    def test_from_codes_with_nullable_int(self):\n        codes = pd.array([0, 1], dtype=\"Int64\")\n        categories = [\"a\", \"b\"]"
  }
]