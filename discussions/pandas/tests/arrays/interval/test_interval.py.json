[
  {
    "id" : "42cd54d6-3ace-4cb0-8a27-ea3cb4793c45",
    "prId" : 28371,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28371#pullrequestreview-340355444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e71a0841-90f9-4a69-8a30-29abdc97cad7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this right?",
        "createdAt" : "2020-01-09T03:21:10Z",
        "updatedAt" : "2020-01-09T03:22:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "daaae6ff-5e97-4a7a-9b73-b81540ad334c",
        "parentId" : "e71a0841-90f9-4a69-8a30-29abdc97cad7",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "As mentioned above, the pandas -> arrow part already works on 0.15 in general, but due to a \"bug\" in pyarrow (due to the use of `.values`, see https://github.com/apache/arrow/pull/5753), period and interval ExtensionArrays specifically don't work yet (because `.values` returns an object array for those, and not an EA). So therefore those tests for period and interval also only work with pyarrow higher than 0.15.",
        "createdAt" : "2020-01-09T08:34:02Z",
        "updatedAt" : "2020-01-09T08:34:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3037494cf87272011d8ba78d8220029d1a29ad8",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +112,116 @@\n\npyarrow_skip = td.skip_if_no(\"pyarrow\", min_version=\"0.15.1.dev\")\n\n"
  },
  {
    "id" : "13bac72d-3a33-4e0a-b7da-6edf42916404",
    "prId" : 30640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30640#pullrequestreview-338126652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e2c005c-fadc-4764-9d1f-1543d7675ddb",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "possibly put in tests.arithmetic.test_interval and parametrize with box_with_array",
        "createdAt" : "2020-01-03T15:18:12Z",
        "updatedAt" : "2020-01-03T15:18:12Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8237ab072143e49102e829952fc601ab9a46afc",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +114,118 @@\n\nclass TestComparison:\n    @pytest.fixture(params=[operator.eq, operator.ne])\n    def op(self, request):"
  }
]