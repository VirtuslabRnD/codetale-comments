[
  {
    "id" : "ae5c2c9c-f5cb-4ef4-8f76-a0c78866108c",
    "prId" : 33538,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33538#pullrequestreview-393175292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "256ec06d-5cb9-40e3-8c1e-10928d3a58b5",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "is e.g. Series[Int64].sum() or DataFrame[Int64].sum() fixed by this?",
        "createdAt" : "2020-04-14T04:24:20Z",
        "updatedAt" : "2020-04-24T20:44:10Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3780414e-c43a-42db-b87c-a8f7c0bed501",
        "parentId" : "256ec06d-5cb9-40e3-8c1e-10928d3a58b5",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Those are actually already working, just not for IntegerArray specifically",
        "createdAt" : "2020-04-14T18:10:44Z",
        "updatedAt" : "2020-04-24T20:44:10Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ee8ab26cec4c57ee499e002821ea24aebc3520a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +116,120 @@@pytest.mark.parametrize(\"skipna\", [True, False])\n@pytest.mark.parametrize(\"min_count\", [0, 4])\ndef test_integer_array_sum(skipna, min_count):\n    arr = pd.array([1, 2, 3, None], dtype=\"Int64\")\n    result = arr.sum(skipna=skipna, min_count=min_count)"
  },
  {
    "id" : "35822d4d-8e2e-4205-bb5b-da19a76a38b3",
    "prId" : 36913,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36913#pullrequestreview-503245274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70c01849-6636-4424-b7c4-1ba140509ba6",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "could parametrize over the (few?) functions that could go through here?",
        "createdAt" : "2020-10-06T15:37:48Z",
        "updatedAt" : "2020-10-06T15:37:48Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "085258af-cbed-4a26-8873-83c936e7a4c7",
        "parentId" : "70c01849-6636-4424-b7c4-1ba140509ba6",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "The binary ufuncs that overlap with dunder methods hit a different code path. I'm not sure of others (and I'm also not sure I see the value in parametrizing over them. Given the current structure of the code they should be redundant).",
        "createdAt" : "2020-10-06T18:26:18Z",
        "updatedAt" : "2020-10-06T18:26:18Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3f63c13007e3980ada10a7d741ca3da5afbf26b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +67,71 @@def test_ufunc_binary_output():\n    a = integer_array([1, 2, np.nan])\n    result = np.modf(a)\n    expected = np.modf(a.to_numpy(na_value=np.nan, dtype=\"float\"))\n"
  }
]