[
  {
    "id" : "659cfe5a-6736-41f1-beff-6c15433baafe",
    "prId" : 24993,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24993#pullrequestreview-198192368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a comment here on what this particular file is testing. (as a casual glance makes it look very similar to test_numpy.py)",
        "createdAt" : "2019-01-30T12:45:10Z",
        "updatedAt" : "2019-01-30T16:31:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "357707c5-3f67-4c48-827d-9e4c6ad0ebbf",
        "parentId" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger but still this does not answer the question of why you duplicated things",
        "createdAt" : "2019-01-30T16:28:18Z",
        "updatedAt" : "2019-01-30T16:31:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fcfede9b-336c-4768-8577-f573765a6244",
        "parentId" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "does https://github.com/pandas-dev/pandas/pull/24993/files#diff-c77963c2757e522c9ed516402633c932R6 make sense?",
        "createdAt" : "2019-01-30T16:32:10Z",
        "updatedAt" : "2019-01-30T16:32:10Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "eab8bd1e-a6ea-4abc-bc2b-775eaa780262",
        "parentId" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it makes sense, I suppose enough. Problem is a future reader may not understand exactly what you are getting at here.",
        "createdAt" : "2019-01-30T16:46:27Z",
        "updatedAt" : "2019-01-30T16:46:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2fc85bb1-12b8-419b-8ee4-29084b95bef3",
        "parentId" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> @TomAugspurger why don't you just add a marker to specific tests? (and skip on that)\r\n\r\n> I'm not aware of a way for a test marker to get access to the value of another fixture.\r\n\r\n@TomAugspurger I fear that I may have led you in the wrong direction with the first example on just including the fixture that you want the value of in the function signature. that was just to show that fixtures can be added to the function signature and that additional unwanted permutations would not occur.\r\n\r\nfrom the pytest docs on request.getfixturevalue.. \"Declaring fixtures via function argument is recommended where possible. But if you can only decide whether to use another fixture at test setup time, you may use this function to retrieve it inside a fixture or test function body.\"\r\n\r\nhence why i mentioned the function argument approach first.\r\n\r\n@jreback is right about adding markers, and the `pytest.mark.usefixtures` is probably the appropriate marker to use.\r\n\r\nif this marker was used only on tests that depended on the `dtype` fixture, then the autouse fixture I suggested could be used without the `request.getfixturevalue('dtype')` and `dtype` included in the fixture signature along with the `request` fixture which gives access to the class, instance and function to determine if the test should be skipped.\r\n\r\n> Good to merge?\r\n\r\nMy comments should not be taken as a reason not to merge. A follow-on PR could look into this approach.\r\n",
        "createdAt" : "2019-01-30T16:54:36Z",
        "updatedAt" : "2019-01-30T16:54:37Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "e3a4ed1e-0867-4ae8-b382-aa2ce1067fa9",
        "parentId" : "30aa2d22-871f-469b-80d5-6bb616e9415e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'm relatively happy with current approach. It's lower-tech which is fine for me in tests.",
        "createdAt" : "2019-01-30T16:58:03Z",
        "updatedAt" : "2019-01-30T16:58:04Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "358df869e6a70973a117bb5f5e5d53492945012e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@import pytest\n\nimport pandas as pd\nfrom pandas.core.arrays.numpy_ import PandasArray, PandasDtype\n"
  }
]