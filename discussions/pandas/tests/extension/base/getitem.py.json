[
  {
    "id" : "ffee3004-b038-4974-9e0e-aa0f01001381",
    "prId" : 20582,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20582#pullrequestreview-108615151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df6e940a-66a3-4447-a919-75b2d55597e1",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@TomAugspurger I didn't find any existing tests for `take`, so not sure the indexing tests is the best place (maybe rather the `BaseMethodsTests`). \r\nAnd, I could also add tests for the actual use cases where you get this (eg `reindex` on an empty series)",
        "createdAt" : "2018-04-02T12:52:21Z",
        "updatedAt" : "2018-04-16T11:03:39Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "75a8d6ab-077a-407c-9677-0f401e7b6a4b",
        "parentId" : "df6e940a-66a3-4447-a919-75b2d55597e1",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This seems like the right place for testing a behavior specific to take.",
        "createdAt" : "2018-04-02T13:30:22Z",
        "updatedAt" : "2018-04-16T11:03:39Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5d357f66dadeddadd375fd1f3f07fb0fc77f354",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +139,143 @@\n        with tm.assert_raises_regex(IndexError, \"cannot do a non-empty take\"):\n            empty.take([0, 1])\n\n    @pytest.mark.xfail(reason=\"Series.take with extension array buggy for -1\")"
  },
  {
    "id" : "a331123a-d45a-49e0-9add-552200c434c1",
    "prId" : 20814,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20814#pullrequestreview-115696266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "257fe0d3-c323-46ed-843d-bd88078d86fc",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The test above (can't comment on the exact line), should actually fail now, as it is still testing the old behaviour (-1 giving NaN). So need to edit the test to check for `data[len(data)-1]` instead of `nvalue`",
        "createdAt" : "2018-04-26T15:33:08Z",
        "updatedAt" : "2018-04-27T11:02:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d88e0811-9ed4-4afd-aa00-7c1c30df6874",
        "parentId" : "257fe0d3-c323-46ed-843d-bd88078d86fc",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This was missing an `assert na_cmp` (just had `na_cmp(a, b)`, which was False but not asserted.",
        "createdAt" : "2018-04-26T18:27:34Z",
        "updatedAt" : "2018-04-27T11:02:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec0cecd292947aa4d8416991e9f8920a4cd9a831",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +136,140 @@        with tm.assert_raises_regex(IndexError, \"out of bounds\"):\n            data.take([len(data) + 1])\n\n    def test_take_empty(self, data, na_value, na_cmp):\n        empty = data[:0]"
  },
  {
    "id" : "2ca5aa0b-abe9-483a-8f3c-b21abbaa4641",
    "prId" : 20885,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20885#pullrequestreview-117827990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1abff6e2-5cda-40a7-95cc-5ba7d0349b34",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add some cases with an out-of-range integer",
        "createdAt" : "2018-05-05T14:36:08Z",
        "updatedAt" : "2018-05-06T00:04:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d25c6eaf-847a-45cf-b60e-ad348ad29dc5",
        "parentId" : "1abff6e2-5cda-40a7-95cc-5ba7d0349b34",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "done",
        "createdAt" : "2018-05-06T00:06:19Z",
        "updatedAt" : "2018-05-06T00:06:20Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "65087a6de08b35ccc696051f508275747deabaf6",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +140,144 @@        expected = s.iloc[[1, 2, 3]]\n        self.assert_series_equal(result, expected)\n\n        result = s.get('Z')\n        assert result is None"
  },
  {
    "id" : "35a37a08-be99-474f-ac7b-631c4db55bc4",
    "prId" : 30318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30318#pullrequestreview-333935866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a3696dc-1cdb-4fc1-89f4-d6ae9b8aa03e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I wanted to add a more exact test for the type of the object (`assert isinstance(result, data.dtype.type)`), but this actually doesn't hold for all our dtypes (eg for categorical dtype)",
        "createdAt" : "2019-12-18T08:27:35Z",
        "updatedAt" : "2019-12-18T08:27:35Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8c857a44-699b-447f-9bb3-3349472f7a5a",
        "parentId" : "5a3696dc-1cdb-4fc1-89f4-d6ae9b8aa03e",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think we had an issue about that somewhere. But this seems sufficient.",
        "createdAt" : "2019-12-18T12:30:58Z",
        "updatedAt" : "2019-12-18T12:30:58Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "53954df08472c45ecc61f50c5f4da3d8f5356ddc",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +272,276 @@        s = pd.Series(data)\n        result = s[:1].item()\n        assert result == data[0]"
  }
]