[
  {
    "id" : "fe84db4e-8990-4490-82b5-7aead0b15ec1",
    "prId" : 22345,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22345#pullrequestreview-146462974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9f25158-3463-4a3a-b883-95acc52f3409",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Maybe you can also test `df._get_numeric_data` ?\r\n\r\nIt would be nice if this would also work for `df.select_dtypes`, but I suppose that is yet another issue",
        "createdAt" : "2018-08-15T14:11:57Z",
        "updatedAt" : "2018-08-20T11:17:44Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7409dac2-2084-420d-a096-f007bed73bd1",
        "parentId" : "e9f25158-3463-4a3a-b883-95acc52f3409",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> Maybe you can also test df._get_numeric_data ?\r\n\r\nah, that is done below",
        "createdAt" : "2018-08-15T14:16:18Z",
        "updatedAt" : "2018-08-20T11:17:44Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "e813855278b97bf7f09a5ffef26294d1bfff3c8c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +71,75 @@    def test_is_numeric_honored(self, data):\n        result = pd.Series(data)\n        assert result._data.blocks[0].is_numeric is data.dtype._is_numeric"
  },
  {
    "id" : "524bfce9-5bb6-4f95-92e4-d4de2abc0ede",
    "prId" : 23593,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23593#pullrequestreview-184771371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb47463c-af38-4161-8cf2-287e5bb96d0a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "are we not testing dtype here? its fine, but maybe add an xfail test or a TODO",
        "createdAt" : "2018-12-02T16:51:51Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d26aa6fd-4fae-40e7-8d52-c19b15e1885d",
        "parentId" : "cb47463c-af38-4161-8cf2-287e5bb96d0a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We are testing `dtype` with `dtype=object` ? That's the only dtype for which we know what the result will be, for all other dtypes it depends on the array dtype.",
        "createdAt" : "2018-12-13T17:09:02Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "4120586e626a4d3815a7f69132af70429a54dea8",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +38,42 @@        expected = np.array(list(data), dtype=object)\n        tm.assert_numpy_array_equal(result, expected)\n\n    def test_is_extension_array_dtype(self, data):\n        assert is_extension_array_dtype(data)"
  },
  {
    "id" : "462e9281-e056-4f36-9dbb-7ecaab5f4acc",
    "prId" : 23593,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23593#pullrequestreview-189430572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think worth generically testing this for all dtypes (as this is supposed to be a pass thru) is worth it",
        "createdAt" : "2019-01-04T14:04:37Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6fd069c3-c539-4caf-9be2-5a8280566ccd",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "See https://github.com/pandas-dev/pandas/pull/23593/files#r241486278",
        "createdAt" : "2019-01-04T14:07:12Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "16912ab4-a4be-48c0-8052-855a9ef67177",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "And to repeat: We are testing `dtype` with `dtype=object` ? That's the only dtype for which we know what the result will be, for all other dtypes it depends on the array dtype.",
        "createdAt" : "2019-01-04T14:07:48Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fa12b757-9401-45ea-8292-1f2fa3819ccb",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "but we *do* know the result for other dtypes, its ``np.array(list(array), dtype=dtype)``",
        "createdAt" : "2019-01-04T14:14:30Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "886c67de-5863-4223-89cd-213bba2d0642",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "otherwise if you change __array__ then you could easily regress",
        "createdAt" : "2019-01-04T14:15:06Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "19e7db72-8a21-46fa-bfb0-b6139f59f861",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "These are the *base* tests, we cannot assume anything about the expected result here. Each array type can still test the specifics for different dtypes in its own tests, which is exactly what I am doing in this PR for Datetime/Timedelta/PeriodArray. ",
        "createdAt" : "2019-01-04T14:17:43Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c9d57e2f-5e09-4ac6-ae7d-665e5d824518",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> but we do know the result for other dtypes, its np.array(list(array), dtype=dtype)\r\n\r\nAnd to come back to this specific example: that is not generally True. Eg for DatetimeArray, `list(array)` will give a list of Timestamp objects, which numpy cannot convert to any other dtype:\r\n\r\n```\r\nIn [49]: a = pd.arrays.DatetimeArray(pd.array([1, 2], dtype='datetime64[ns]')._ndarray)\r\n\r\nIn [50]: a                                                                                         \r\nOut[50]: \r\n<DatetimeArray>\r\n['1970-01-01 00:00:00.000000001', '1970-01-01 00:00:00.000000002']\r\nLength: 2, dtype: datetime64[ns]\r\n\r\nIn [51]: list(a)                                                                             \r\nOut[51]: \r\n[Timestamp('1970-01-01 00:00:00.000000001'),\r\n Timestamp('1970-01-01 00:00:00.000000002')]\r\n\r\nIn [53]: np.array(list(a), dtype='float')                                                        \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-53-1a9c1baaa853> in <module>\r\n----> 1 np.array(list(a), dtype='float')\r\n\r\nTypeError: float() argument must be a string or a number, not 'Timestamp'\r\n```",
        "createdAt" : "2019-01-04T14:40:34Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "dd873a04-e3c1-4ad3-adad-ab005b42c798",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@jreback OK?",
        "createdAt" : "2019-01-04T16:16:08Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "7140207d-32a3-4eae-8c6b-bbb3654bc11f",
        "parentId" : "199212ad-8f81-4bc1-8469-e8597a978c68",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "its fine i guess.",
        "createdAt" : "2019-01-04T16:19:28Z",
        "updatedAt" : "2019-01-05T20:26:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4120586e626a4d3815a7f69132af70429a54dea8",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +35,39 @@        assert result[0] == data[0]\n\n        result = np.array(data, dtype=object)\n        expected = np.array(list(data), dtype=object)\n        tm.assert_numpy_array_equal(result, expected)"
  }
]