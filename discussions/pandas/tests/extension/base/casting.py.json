[
  {
    "id" : "cbf18d23-f99a-4d17-8591-c3eaf1b7cb5f",
    "prId" : 33356,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33356#pullrequestreview-389014411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c501b8d1-13f3-4838-8c55-a81f74a1c565",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Yep, that was a bug.",
        "createdAt" : "2020-04-07T11:11:43Z",
        "updatedAt" : "2020-04-07T14:36:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0258315f8ce05f6845e5b346f35a4167fc409bbb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +11,15 @@\n    def test_astype_object_series(self, all_data):\n        ser = pd.Series(all_data, name=\"A\")\n        result = ser.astype(object)\n        assert isinstance(result._mgr.blocks[0], ObjectBlock)"
  },
  {
    "id" : "7b9ca82a-9b31-470e-9ecb-2947bb869465",
    "prId" : 33465,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33465#pullrequestreview-417290759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5f84ae-d2e9-4f57-a520-6b36088a5c43",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you give the issue ref number here",
        "createdAt" : "2020-05-22T15:49:22Z",
        "updatedAt" : "2020-05-26T15:47:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0ebbadc4-4b0c-43ce-a886-34fd2914c6c0",
        "parentId" : "1f5f84ae-d2e9-4f57-a520-6b36088a5c43",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Ok.",
        "createdAt" : "2020-05-23T16:24:19Z",
        "updatedAt" : "2020-05-26T15:47:24Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "08ff77af0b30d33055063af9cfcaa07fb2040b90",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +39,43 @@    def test_astype_string(self, data):\n        # GH-33465\n        result = pd.Series(data[:5]).astype(\"string\")\n        expected = pd.Series([str(x) for x in data[:5]], dtype=\"string\")\n        self.assert_series_equal(result, expected)"
  },
  {
    "id" : "708f8953-fb63-43b6-b487-d8344582a375",
    "prId" : 39908,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39908#pullrequestreview-638221296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b71a013f-c947-4c70-8670-93d66136a8a5",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "opened #40998 with this change (and fix failing casting tests https://github.com/pandas-dev/pandas/pull/39908#issuecomment-808905139) ",
        "createdAt" : "2021-04-17T11:48:31Z",
        "updatedAt" : "2021-04-17T11:50:12Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef02a435ec481eeac62fe00ebc87d501489e13fc",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +58,62 @@        # GH-33465\n        result = pd.Series(data[:5]).astype(nullable_string_dtype)\n        expected = pd.Series([str(x) for x in data[:5]], dtype=nullable_string_dtype)\n        self.assert_series_equal(result, expected)\n"
  },
  {
    "id" : "091a7211-6648-430c-8701-8baf0e624136",
    "prId" : 41278,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41278#pullrequestreview-650402668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this needed? ",
        "createdAt" : "2021-05-03T10:46:10Z",
        "updatedAt" : "2021-05-03T10:46:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "50e78fef-df1a-4474-993d-9caa7c839101",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "To force register the dtype, I think (the same reason that @simonjayhawkins also has been adding it in several places). AFAIU, once the ArrowStringDtype is merged with StringDtype, that will be done automatically and all those imports can be removed.",
        "createdAt" : "2021-05-03T10:49:04Z",
        "updatedAt" : "2021-05-03T10:49:04Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "c6c67d68-4708-496c-ab05-9910bafacaac",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "yep. these are removed in #39908",
        "createdAt" : "2021-05-03T11:40:40Z",
        "updatedAt" : "2021-05-03T11:40:40Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "427973d6-26aa-42ff-9900-69b264cab96b",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why can't you do the import IN the fixture itself? having in the test is very odd (when you *also* have the fixture)",
        "createdAt" : "2021-05-03T13:52:22Z",
        "updatedAt" : "2021-05-03T13:52:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1f8428a4-6b32-46e4-925e-9c2634777f08",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There is no fixture to import it inside, only a `pytest.mark.parametrize` decorator",
        "createdAt" : "2021-05-03T13:58:55Z",
        "updatedAt" : "2021-05-03T13:58:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "767de239-229b-4119-817d-6e8b744a0049",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the `nullable_string_dtype` fixtures, sure there is",
        "createdAt" : "2021-05-03T14:00:59Z",
        "updatedAt" : "2021-05-03T14:01:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7454cc52-1a11-4129-a4b0-fe7230bd7eb2",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "we do this type of thing in the parquet tests, need to do the same here",
        "createdAt" : "2021-05-03T14:01:19Z",
        "updatedAt" : "2021-05-03T14:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "53a39e3b-ab31-4a08-a294-e2f647993a05",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you be more specific as \"this type of thing in the parquet tests\" ?\r\n\r\n> the nullable_string_dtype fixtures, sure there is\r\n\r\nThe whole point of this PR is to not use that, please look at the diff. I am removing the `nullable_string_dtype` fixture with a local parametrization",
        "createdAt" : "2021-05-03T14:03:49Z",
        "updatedAt" : "2021-05-03T14:03:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "adc26937-e5f6-49c4-ab3d-77a23816f6bf",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why, this is *exactly* the reason this fixture should exist. to avoid having to do a local import like this. which will surely be done incorrectly the next time. a fixture exists for exactly this reason.",
        "createdAt" : "2021-05-03T14:05:56Z",
        "updatedAt" : "2021-05-03T14:05:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "166a31ab-a838-4ea2-88a7-d605638a18d8",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The local imports are only temporary, they will be removed in https://github.com/pandas-dev/pandas/pull/39908",
        "createdAt" : "2021-05-03T14:10:01Z",
        "updatedAt" : "2021-05-03T14:10:01Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "96e91a53-3dbf-414b-bc65-5504f2798a65",
        "parentId" : "7ab7ffa5-d795-4b9a-8391-d799ea1ace1d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ahh ok great",
        "createdAt" : "2021-05-03T14:27:44Z",
        "updatedAt" : "2021-05-03T14:27:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c0344a8fc9c63f9914fef9e662988d433bac017",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +57,61 @@    def test_astype_string(self, data, nullable_string_dtype):\n        # GH-33465\n        from pandas.core.arrays.string_arrow import ArrowStringDtype  # noqa: F401\n\n        result = pd.Series(data[:5]).astype(nullable_string_dtype)"
  }
]