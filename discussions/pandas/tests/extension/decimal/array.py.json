[
  {
    "id" : "405681dd-30a4-43ec-85f1-ac9363536454",
    "prId" : 20794,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20794#pullrequestreview-114722074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67934c57-fcba-482c-8b7e-5dda7b03fa6a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you have .data here? (no a big deal, but this is private yes?) and I think you removed in liue of ._data)",
        "createdAt" : "2018-04-23T12:44:06Z",
        "updatedAt" : "2018-04-23T12:44:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f2e202cb-e759-4514-99c2-3edb91af8677",
        "parentId" : "67934c57-fcba-482c-8b7e-5dda7b03fa6a",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "These are just in the tests.",
        "createdAt" : "2018-04-23T12:46:09Z",
        "updatedAt" : "2018-04-23T12:46:09Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "d4cb6984-9698-4c18-9d66-2062beadcca7",
        "parentId" : "67934c57-fcba-482c-8b7e-5dda7b03fa6a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "What do you exactly mean? It's not really about private/public, that's up to the EA author. The purpose of this it to ensure pandas has no problems if an EA author would use `.data` to store the underlying data (in geopandas we are actually using a `data` attribute) \r\n",
        "createdAt" : "2018-04-23T13:02:35Z",
        "updatedAt" : "2018-04-23T13:02:35Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "ad0c42e9-9719-40dc-9fd8-7d6eed8ba4af",
        "parentId" : "67934c57-fcba-482c-8b7e-5dda7b03fa6a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I understand you *can* have a ``.data`` items, it just doesn't seem a good pattern to advertise\r\n\r\nThe fact that these are in the tests is very odd itself.\r\n\r\nAnd the comment makes these doubly confusing.",
        "createdAt" : "2018-04-24T10:05:19Z",
        "updatedAt" : "2018-04-24T10:05:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7033525c-6957-4cff-bf77-6e57a9add365",
        "parentId" : "67934c57-fcba-482c-8b7e-5dda7b03fa6a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jorisvandenbossche ok I re-read what you are testing, this is ok",
        "createdAt" : "2018-04-24T10:27:50Z",
        "updatedAt" : "2018-04-24T10:27:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a57f8e067faadc53ebfdd1b645a8a322888b4a47",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +34,38 @@        # Some aliases for common attribute names to ensure pandas supports\n        # these\n        self._items = self.data = self._data\n        # those aliases are currently not working due to assumptions\n        # in internal code (GH-20735)"
  },
  {
    "id" : "61e79a96-e327-46a5-b92f-22d818f6e38c",
    "prId" : 22343,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22343#pullrequestreview-146095397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1324086b-609d-4b79-a731-7ff9347d526d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Seemed like a good idea to have a parameterized ExtensionDtype in the tests folder. For `.astype`, we're testing that `Series[decimal].astype(DecimalDtype(new_context))` is passed all the way through.",
        "createdAt" : "2018-08-14T14:37:43Z",
        "updatedAt" : "2018-08-16T12:47:02Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2606d02bb738fa914d48d5b460725b506d8e0a0a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +16,20 @@    na_value = decimal.Decimal('NaN')\n\n    def __init__(self, context=None):\n        self.context = context or decimal.getcontext()\n"
  },
  {
    "id" : "1f772d55-955c-4591-a8da-3936f6a742cd",
    "prId" : 22343,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22343#pullrequestreview-146095397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5df6aa44-4eba-41eb-a119-13bcedb5e86b",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Our default __eq__ is dangerous for parametrized dtypes, depending on whether the parameters appear in the name :/",
        "createdAt" : "2018-08-14T14:38:48Z",
        "updatedAt" : "2018-08-16T12:47:02Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2606d02bb738fa914d48d5b460725b506d8e0a0a",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +19,23 @@        self.context = context or decimal.getcontext()\n\n    def __eq__(self, other):\n        if isinstance(other, type(self)):\n            return self.context == other.context"
  },
  {
    "id" : "a28c69ed-d0ec-48c7-8750-6e958c455788",
    "prId" : 23284,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23284#pullrequestreview-171740845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b20558be-9098-451a-b55d-dc7eee4961cf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "OT: how much testing do we have on this?",
        "createdAt" : "2018-11-05T19:29:04Z",
        "updatedAt" : "2018-11-06T17:10:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "24b95480-43d2-4acd-824e-7bff1f93f38d",
        "parentId" : "b20558be-9098-451a-b55d-dc7eee4961cf",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Which bit specifically? We have a base test for `astype` to object and series.\r\n\r\nI'm not actually sure why I changed this...",
        "createdAt" : "2018-11-05T20:19:00Z",
        "updatedAt" : "2018-11-06T17:10:47Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "56e5f2fc31669e6708ffb15340da91d6e9e696e3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +103,107 @@        if isinstance(dtype, type(self.dtype)):\n            return type(self)(self._data, context=dtype.context)\n        return np.asarray(self, dtype=dtype)\n\n    def __setitem__(self, key, value):"
  },
  {
    "id" : "b1336550-093f-48c5-9e2b-4fb42c9dd2ac",
    "prId" : 24477,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24477#pullrequestreview-188411713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70c9fde5-9ea7-4f1f-bd05-dbef75f73588",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should prob import these like we normally do (is_like_like) at the top, but no big deal",
        "createdAt" : "2018-12-29T14:02:51Z",
        "updatedAt" : "2018-12-29T14:04:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1b7d1da98bbf4bb37a986b17c542e280bbdd677",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    def __setitem__(self, key, value):\n        if pd.api.types.is_list_like(value):\n            if pd.api.types.is_scalar(key):\n                raise ValueError(\"setting an array element with a sequence.\")"
  }
]