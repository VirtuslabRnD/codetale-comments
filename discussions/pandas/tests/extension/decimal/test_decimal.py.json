[
  {
    "id" : "c53ad1f0-c8c5-4cd3-aa42-eb45a2700ea7",
    "prId" : 21185,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21185#pullrequestreview-129944043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad0f74da-d5b6-493b-a117-2909a706097e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you actually implement this? (only change needed would be to register DecimalDtype I think?) \r\nAs that way we actually have a test for external dtypes registering?",
        "createdAt" : "2018-06-04T10:12:00Z",
        "updatedAt" : "2018-07-02T23:20:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "156e8c31-b362-4a89-88be-1b9be13e3de2",
        "parentId" : "ad0f74da-d5b6-493b-a117-2909a706097e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I do in subsequent PR's trying to keep this diff down.",
        "createdAt" : "2018-06-19T12:25:59Z",
        "updatedAt" : "2018-07-02T23:20:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2c91d706510b16a8a9f82dbeafa7d35396697d1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +115,119 @@    def test_from_dtype(self, data):\n        # construct from our dtype & string dtype\n        pass\n\n"
  },
  {
    "id" : "bd35ab25-4fe9-482e-8eb8-87b165afc04f",
    "prId" : 21185,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21185#pullrequestreview-129944088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cbb24ac-5398-4d28-b795-8a66a52c155e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think you can change the AssertionError to a ValueError in the code, and then we can still test this.",
        "createdAt" : "2018-06-04T10:13:32Z",
        "updatedAt" : "2018-07-02T23:20:38Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8b3ce910-55c7-4c65-8618-d94c4df32e63",
        "parentId" : "9cbb24ac-5398-4d28-b795-8a66a52c155e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is ok for now",
        "createdAt" : "2018-06-19T12:26:09Z",
        "updatedAt" : "2018-07-02T23:20:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2c91d706510b16a8a9f82dbeafa7d35396697d1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +165,169 @@@pytest.mark.xfail(reason=(\n    \"raising AssertionError as this is not implemented, \"\n    \"though easy enough to do\"))\ndef test_series_constructor_coerce_data_to_extension_dtype_raises():\n    xpr = (\"Cannot cast data to extension dtype 'decimal'. Pass the \""
  },
  {
    "id" : "5b69f1f8-5d69-47b4-a571-ced52f8ee76c",
    "prId" : 21261,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21261#pullrequestreview-131356233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df041ed7-ea89-40b2-84a9-4f63cb3c72c4",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Is this needed? It seems you are not changing anything in the implementation",
        "createdAt" : "2018-06-22T14:43:44Z",
        "updatedAt" : "2018-06-29T00:18:42Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a2ac1ffc-06bc-4576-9b1a-c765b1a3ce9d",
        "parentId" : "df041ed7-ea89-40b2-84a9-4f63cb3c72c4",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "Yes, this is needed because the super `check_opname` has a default of `exc=NotImplementedError`.  So this overrides that default.",
        "createdAt" : "2018-06-22T21:46:09Z",
        "updatedAt" : "2018-06-29T00:18:42Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fc93e49a28eccc4c66294e7238ba63f0e7bda29",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +198,202 @@    def check_opname(self, s, op_name, other, exc=None):\n        super(TestArithmeticOps, self).check_opname(s, op_name,\n                                                    other, exc=None)\n\n    def test_arith_array(self, data, all_arithmetic_operators):"
  }
]