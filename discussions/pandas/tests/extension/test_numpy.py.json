[
  {
    "id" : "828de78c-59a1-4f49-88f9-a1a9c51249ea",
    "prId" : 24227,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24227#pullrequestreview-188303368",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89096118-5843-496e-b68f-f36aaa173982",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you need to test for all numpy dtypes i think",
        "createdAt" : "2018-12-28T14:14:17Z",
        "updatedAt" : "2018-12-28T17:40:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f258297a-7db1-475c-93fe-b981282a8694",
        "parentId" : "89096118-5843-496e-b68f-f36aaa173982",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "That would create ~7,000 tests. Probably not what we want.\r\n\r\nIt also won't work for types like int, since ops casting to float will mean some of the base tests expected arrays will be incorrect. That would require special casing which test methods are skipped based on the dtype.",
        "createdAt" : "2018-12-28T14:18:30Z",
        "updatedAt" : "2018-12-28T17:40:29Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "3224a270-e64e-41ae-94e8-084306699b12",
        "parentId" : "89096118-5843-496e-b68f-f36aaa173982",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, the problem is this doesn't test for int (as you have noted), nor str, not to mention things like datetime. So either we should just restrict this, or test it.",
        "createdAt" : "2018-12-28T14:22:26Z",
        "updatedAt" : "2018-12-28T17:40:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d0fe0c82-aaf8-499d-8f56-6c5b6750584a",
        "parentId" : "89096118-5843-496e-b68f-f36aaa173982",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Note that the very basics are tested for every dtype in https://github.com/pandas-dev/pandas/pull/24227/files#diff-941bc2d6a7667d26acf010e1072c134bR1199.\r\n\r\nDo you have suggestions here? Exploding the number of tests is a no-go I think, so can we be more targeted?\r\n\r\nScanning through PandasArray it looks like the things that are dtype-dependent are\r\n\r\n* `__setitem__`\r\n\r\nand\r\n\r\n* PandasDtype._is_numeric\r\n* PandasDtype._is_boolean\r\n\r\nDo you see any others?",
        "createdAt" : "2018-12-28T14:36:05Z",
        "updatedAt" : "2018-12-28T17:40:29Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c9e34313-4eb3-46c3-b2d8-994880726ffb",
        "parentId" : "89096118-5843-496e-b68f-f36aaa173982",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think adding just construction tests would be enough for now",
        "createdAt" : "2018-12-28T14:41:44Z",
        "updatedAt" : "2018-12-28T17:40:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "35f50a57a7468068e191f23683283d55857d9729",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\n\n@pytest.fixture\ndef dtype():\n    return PandasDtype(np.dtype('float'))"
  },
  {
    "id" : "c7aa547b-87b3-414c-a386-7bdb7d595233",
    "prId" : 31025,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31025#pullrequestreview-347330321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cafa79a-3c1d-4f9e-bda4-3ca0c9125933",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this skipped?",
        "createdAt" : "2020-01-20T19:41:19Z",
        "updatedAt" : "2020-01-23T14:53:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b1c9aa6b-e054-45dc-98b5-d1dfc30b0641",
        "parentId" : "6cafa79a-3c1d-4f9e-bda4-3ca0c9125933",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Either a bug or not implemented behavior in PandasArray. `PandasArray.shift()` doesn't allow changing the dtype from int to float, so `diff` (which uses shift) would fail.",
        "createdAt" : "2020-01-21T15:34:38Z",
        "updatedAt" : "2020-01-23T14:53:34Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "785181e3-6326-4943-b468-c74eba976ee8",
        "parentId" : "6cafa79a-3c1d-4f9e-bda4-3ca0c9125933",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe xfail it then?",
        "createdAt" : "2020-01-23T14:20:38Z",
        "updatedAt" : "2020-01-23T14:53:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d34ffe31e8368b46f8cee395c0f4ead3db461633",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +250,254 @@\n    @pytest.mark.xfail(reason=\"PandasArray.diff may fail on dtype\")\n    def test_diff(self, data, periods):\n        return super().test_diff(data, periods)\n"
  },
  {
    "id" : "5d272b34-bc2e-4cea-839e-c183664cfeff",
    "prId" : 33846,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33846#pullrequestreview-403429927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b545564-da7d-48b6-ba2b-ab521f9d4196",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "for the object dtype, the scalar is a tuple, so this failure is related to https://github.com/pandas-dev/pandas/pull/33846#discussion_r417937451",
        "createdAt" : "2020-04-30T11:25:00Z",
        "updatedAt" : "2020-05-02T16:33:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "663c863213d65bf2782ab0ba5cc39bc017d7fb83",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +154,158 @@    @skip_nested\n    def test_series_constructor_scalar_with_index(self, data, dtype):\n        # ValueError: Length of passed values is 1, index implies 3.\n        super().test_series_constructor_scalar_with_index(data, dtype)\n"
  },
  {
    "id" : "9cfa9492-2dbd-46b0-ba13-62bd678fe270",
    "prId" : 35936,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35936#pullrequestreview-478141177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b59e4d-c658-4679-9fc8-2d8e4cbc8e0b",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "This is a bit strange, but because I switched `if isinstance(.., Series): value = value._value` to `extract_array`, this test started to fail. That is because for `test_numpy.py` we patch the PandasArray to not be special cased, and then `extract_array` returns a PandasArray, even for a numpy dtype. And thus, in `iset` we set a PandasArray into a consolidated numpy block ..",
        "createdAt" : "2020-08-28T07:47:07Z",
        "updatedAt" : "2020-08-28T07:47:07Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "11bd4e19-f8fa-4967-b3a3-edd132e8f555",
        "parentId" : "90b59e4d-c658-4679-9fc8-2d8e4cbc8e0b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "yah im not a fan of this patching, OK with xfailing",
        "createdAt" : "2020-08-29T16:58:51Z",
        "updatedAt" : "2020-08-29T16:58:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "76b614cb11e6aa1e237331e6255faa69f4725242",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +353,357 @@        # inplace update doesn't work correctly with patched extension arrays\n        # extract_array returns PandasArray, while dtype is a numpy dtype\n        super().test_fillna_fill_other(data_missing)\n\n"
  },
  {
    "id" : "5868d692-2a24-41be-af5f-b24c712eab73",
    "prId" : 39722,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39722#pullrequestreview-588016823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c329d7c6-c870-48ea-9e25-65f53a9284ab",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "why did this change?",
        "createdAt" : "2021-02-10T16:48:15Z",
        "updatedAt" : "2021-02-10T16:48:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5ef92368-a0f6-4a95-b8bd-e78ff9be5795",
        "parentId" : "c329d7c6-c870-48ea-9e25-65f53a9284ab",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't fully understand how testing with the PandasArrays works, but, within the `merge` implementation, we set a column in the resulting dataframe (the column with the key values) using an Index. \r\nAnd doing an `extract_array` on an Int64Index gives a PandasDtype(\"int64\") column when running those tests. And because in this PR I changed it such that the values being set are not converted to a 1D array before ending up in BlockManager.iset, the extension dtype is now preserved. And so the expected result from the base test is wrong",
        "createdAt" : "2021-02-10T19:21:03Z",
        "updatedAt" : "2021-02-10T19:21:03Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d19445e2-ada6-4382-ae7b-61bb38e0bd57",
        "parentId" : "c329d7c6-c870-48ea-9e25-65f53a9284ab",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this turns out to be a PITA in a bunch of places.  could just monkeypatch extract_array to extract PandasArray too",
        "createdAt" : "2021-02-10T20:18:23Z",
        "updatedAt" : "2021-02-10T20:18:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8e58caa221e9187faf0e49bd55b539b80a2a699",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +351,355 @@\nclass TestReshaping(BaseNumPyTests, base.BaseReshapingTests):\n    @pytest.mark.skip(reason=\"Incorrect expected.\")\n    def test_merge(self, data, na_value):\n        # Fails creating expected (key column becomes a PandasDtype because)"
  }
]