[
  {
    "id" : "53d12dcc-eeed-40fe-9df1-7ba1e6f455e4",
    "prId" : 19869,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19869#pullrequestreview-101018035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71597a79-a30c-4260-8497-26e90d070034",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use ``self._constructor`` rather than ``type(self)`` generally",
        "createdAt" : "2018-02-24T15:53:40Z",
        "updatedAt" : "2018-03-12T20:01:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b5d0ed20-3799-4c39-8df8-fefb458b2c65",
        "parentId" : "71597a79-a30c-4260-8497-26e90d070034",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "would change this too",
        "createdAt" : "2018-02-26T14:16:08Z",
        "updatedAt" : "2018-03-12T20:01:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a44931bb-cdb1-431b-b766-1c5d8d79852b",
        "parentId" : "71597a79-a30c-4260-8497-26e90d070034",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see above comment, define _consturct_from_sequence",
        "createdAt" : "2018-03-04T20:18:00Z",
        "updatedAt" : "2018-03-12T20:01:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "41dd12875f3bfc443e41df258d02d8722d62813b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +92,96 @@        # Parent method doesn't work since np.array will try to infer\n        # a 2-dim object.\n        return type(self)([\n            dict(x) for x in list(set(tuple(d.items()) for d in self.data))\n        ])"
  },
  {
    "id" : "27649837-3188-49fb-adde-37fa28052992",
    "prId" : 20794,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20794#pullrequestreview-114365478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b63a22-9f19-4e37-a240-4d6f78a06cc2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same?",
        "createdAt" : "2018-04-23T12:44:41Z",
        "updatedAt" : "2018-04-23T12:44:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a57f8e067faadc53ebfdd1b645a8a322888b4a47",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +36,40 @@        # Some aliases for common attribute names to ensure pandas supports\n        # these\n        self._items = self._data = self.data\n        # those aliases are currently not working due to assumptions\n        # in internal code (GH-20735)"
  },
  {
    "id" : "bb753d04-29a4-46bb-9645-317bde079024",
    "prId" : 20814,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20814#pullrequestreview-115643787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59dbb235-6566-4e7b-b304-65307f11f386",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "What is actually the reason you use `UserDict` here?",
        "createdAt" : "2018-04-26T15:46:22Z",
        "updatedAt" : "2018-04-27T11:02:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e3226a27-b5e0-43df-850c-5b3ce3493ddf",
        "parentId" : "59dbb235-6566-4e7b-b304-65307f11f386",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Pandas has a few places where we check `if isinstance(thing, dict)` and then does the \"wrong' thing with it. Fixing all those properly will be worthwhile, but a lot of careful work. UserDict is a way to work around that for now.",
        "createdAt" : "2018-04-26T15:54:25Z",
        "updatedAt" : "2018-04-27T11:02:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "e19be1a2-3422-4ffd-b20f-923add52d969",
        "parentId" : "59dbb235-6566-4e7b-b304-65307f11f386",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, can you add a small comment about that here?",
        "createdAt" : "2018-04-26T16:03:58Z",
        "updatedAt" : "2018-04-27T11:02:56Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec0cecd292947aa4d8416991e9f8920a4cd9a831",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +28,32 @@    name = 'json'\n    try:\n        na_value = collections.UserDict()\n    except AttributeError:\n        # source compatibility with Py2."
  },
  {
    "id" : "95006b60-2649-4552-ae84-2af5e06e108a",
    "prId" : 22936,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22936#pullrequestreview-161562788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4428affa-b140-4ca1-a113-b162a8d2428b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is pretty odd here",
        "createdAt" : "2018-10-04T11:26:54Z",
        "updatedAt" : "2018-10-04T11:26:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7e6d423f-e7eb-4397-9414-93ba09ff9f96",
        "parentId" : "4428affa-b140-4ca1-a113-b162a8d2428b",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jorisvandenbossche requested these be exported, since they're useful for creating datasets. It'd be more strange to import it from the test file.",
        "createdAt" : "2018-10-04T11:28:57Z",
        "updatedAt" : "2018-10-04T11:28:57Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7714e79a512f5d13f52c286458fcc9bac8b40bd0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +185,189 @@\ndef make_data():\n    # TODO: Use a regular dict. See _NDFrameIndexer._setitem_with_indexer\n    return [collections.UserDict([\n        (random.choice(string.ascii_letters), random.randint(0, 100))"
  },
  {
    "id" : "ecbeda8c-6380-4386-b019-79ee5a91e2f3",
    "prId" : 24599,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24599#pullrequestreview-189154458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0deb492-96f5-49f1-a6b8-22b78568ba70",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "really?, why is it 2d to begin with?",
        "createdAt" : "2019-01-03T19:23:31Z",
        "updatedAt" : "2019-01-03T20:30:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c8792c1f-32dc-4231-9535-b43e7777d628",
        "parentId" : "e0deb492-96f5-49f1-a6b8-22b78568ba70",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think because `np.array([()])` is 2-D.",
        "createdAt" : "2019-01-03T19:40:56Z",
        "updatedAt" : "2019-01-03T20:30:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "572f1d0d90b694cfa4923581ced6c72368bd3fd0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +179,183 @@\n    def _values_for_factorize(self):\n        frozen = self._values_for_argsort()\n        if len(frozen) == 0:\n            # _factorize_array expects 1-d array, this is a len-0 2-d array."
  },
  {
    "id" : "64902e8e-2484-429a-a414-6a8318a43740",
    "prId" : 25957,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25957#pullrequestreview-221602534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bbd130b-eb3a-434f-9d84-fcd18e0ecc74",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this can be changed (separate PR) as well",
        "createdAt" : "2019-04-02T11:38:43Z",
        "updatedAt" : "2019-04-02T11:39:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a77580bfdce1cf2f4efdd51596dd17e8d4d1cfde",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +30,34 @@\n    try:\n        na_value = UserDict()\n    except AttributeError:\n        # source compatibility with Py2."
  },
  {
    "id" : "dce3978c-a8e5-4733-8cba-23cd89d7627a",
    "prId" : 26085,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26085#pullrequestreview-226410731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8701c2ad-5fc9-4c27-8a19-8b6c8f2e4702",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can this just be a dict or OrderedDict?",
        "createdAt" : "2019-04-14T18:48:13Z",
        "updatedAt" : "2019-04-15T03:26:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1eab4178-cf23-45a7-b814-20833dbe19ca",
        "parentId" : "8701c2ad-5fc9-4c27-8a19-8b6c8f2e4702",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "From this comment in same file, using `UserDict` is intentional in order to treat dict as a scalar.\r\n\r\n>We currently store lists of UserDicts. Pandas has a few places\r\ninternally that specifically check for dicts, and does non-scalar things\r\nin that case. We *want* the dictionaries to be treated as scalars, so we\r\nhack around pandas by using UserDicts.",
        "createdAt" : "2019-04-14T20:02:03Z",
        "updatedAt" : "2019-04-15T03:26:22Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3661e4fc5cdee03c89dad1f2430cd07115b6454",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +28,32 @@    type = abc.Mapping\n    name = 'json'\n    na_value = UserDict()\n\n    @classmethod"
  },
  {
    "id" : "017663c1-07cb-4c9e-ab4f-9d44146368e7",
    "prId" : 40679,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40679#pullrequestreview-623265628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed67a37a-72ff-4d4e-94d6-210bfe584cf7",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "ArrowStringDtype is removed in #39908 and therefore this change will be reverted.",
        "createdAt" : "2021-03-29T14:03:08Z",
        "updatedAt" : "2021-04-01T10:17:37Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "88b05e8787f53fa18e3e50ea9d6685f0f7e13c44",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +196,200 @@                return self.copy()\n            return self\n        elif isinstance(dtype, (StringDtype, ArrowStringDtype)):\n            value = self.astype(str)  # numpy doesn'y like nested dicts\n            return dtype.construct_array_type()._from_sequence(value, copy=False)"
  }
]