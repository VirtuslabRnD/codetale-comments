[
  {
    "id" : "9075c8b3-5bc4-459d-9cce-474a7670e54c",
    "prId" : 22026,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22026#pullrequestreview-148841655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15606b69-69bc-458a-ad65-82688534e61e",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This duplication with `pandas/tests/arrays` is unfortunate. I take it because they're in separate directories?",
        "createdAt" : "2018-08-21T16:24:06Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "170b0a7c-65ef-4f94-8a57-e97a2ecafa0b",
        "parentId" : "15606b69-69bc-458a-ad65-82688534e61e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes. I don't think it is worth importing it from one place to the other to remove the duplication for such a small thing.\r\n\r\nBut even when they are in the same directory, I personally think it is a good idea to keep all fixtures for the base extension tests separate from the ones we implement for the custom tests (because those last ones we might want to change regularly)",
        "createdAt" : "2018-08-22T06:42:08Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "29189de2-929a-4753-a96f-b821882a1ed0",
        "parentId" : "15606b69-69bc-458a-ad65-82688534e61e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "BTW, I tried the approach of putting the extension interface test for integer also in `tests/arrays/integer` but marking them with a pytest mark so you can still easily run all interface tests for all types, but then you have the problem that the `tests/extension/conftest.py` is not used, and you would need to duplicate things from that ..",
        "createdAt" : "2018-08-22T06:44:02Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "e3aa9c46-386d-4aab-8f2d-22792c59021d",
        "parentId" : "15606b69-69bc-458a-ad65-82688534e61e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think duplicating fixtures is ok here (its not many)",
        "createdAt" : "2018-08-23T10:09:19Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "db2836c2be2bf7a8cd352449ffc02e5664b4e721",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@\n\ndef make_data():\n    return (list(range(1, 9)) + [np.nan] + list(range(10, 98))\n            + [np.nan] + [99, 100])"
  },
  {
    "id" : "e41c6181-aa98-4579-8157-739d07d71f62",
    "prId" : 22026,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22026#pullrequestreview-152473761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05ae0e62-6107-45aa-9333-a6a117ed3421",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Here (below), I added quite a bit of hoops to get the tests passing. This is partly because it is not easy to have generic arithmetic tests (certainly in case of integers where we different subdtypes), and I could also simply have skipped this class completely (since we still test arithmetic operations in a more custom way in `tests/arrays/test_integer.py`). But since trying to get those passing, actually turned up some bugs / corner cases (see the issue links in the comments below), I think it is useful to keep this.",
        "createdAt" : "2018-08-22T14:48:43Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "5befaad0-ed97-4783-8cdc-ab2b11b47c01",
        "parentId" : "05ae0e62-6107-45aa-9333-a6a117ed3421",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think we should change this to have individual checkers (kind of like we have ``_check_divmod_op``) which are defined in the base class, then it is straightforward to just override these here (and its not as complicated code)",
        "createdAt" : "2018-08-23T10:14:18Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0cd4f563-0e29-42d6-bd82-bd06a0f8dd60",
        "parentId" : "05ae0e62-6107-45aa-9333-a6a117ed3421",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "That might be a good idea, but note that we would still need to do some of the below hoops for each of the operations, so not sure if it would turn out simpler. \r\nAlso, since this would touch all tests of all types and is more a refactor of the base extension tests, I would like to leave that for a separate PR. Here, I only try to split the existing integer and interval tests.",
        "createdAt" : "2018-08-23T11:50:49Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "0e6f5271-c0a1-4b52-b057-1e5f0833e0bd",
        "parentId" : "05ae0e62-6107-45aa-9333-a6a117ed3421",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k, can you create an issue to track / refactor this.",
        "createdAt" : "2018-09-05T11:37:36Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f7820529-4c10-4008-8e09-cc3dcd877272",
        "parentId" : "05ae0e62-6107-45aa-9333-a6a117ed3421",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I already opened a bunch of issues for the actual bugs (see links below). For the reworking of the tests, I don't have a concrete idea how it would look like now, so I would rather not open a vague issue (but feel free to open one if you have a concrete idea of how to refactor it) ",
        "createdAt" : "2018-09-05T12:40:24Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "db2836c2be2bf7a8cd352449ffc02e5664b4e721",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@                                                    other, exc=None)\n\n    def _check_op(self, s, op, other, op_name, exc=NotImplementedError):\n        if exc is None:\n            if s.dtype.is_unsigned_integer and (op_name == '__rsub__'):"
  },
  {
    "id" : "bcf7aa69-320c-4421-9579-763e7504f4aa",
    "prId" : 22026,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22026#pullrequestreview-148870573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0923192d-9802-4b03-b359-2dec01140cb0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "was this moved? or are you just showing that this 'works'?",
        "createdAt" : "2018-08-23T10:15:17Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6b72e86d-e721-41ab-8126-8a576397b8a2",
        "parentId" : "0923192d-9802-4b03-b359-2dec01140cb0",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yep, it's a bit a strange test. I think @TomAugspurger changed that in the sparse PR (or commented about it)",
        "createdAt" : "2018-08-23T11:51:26Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "db2836c2be2bf7a8cd352449ffc02e5664b4e721",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@\n    @pytest.mark.skip(reason=\"intNA does not error on ops\")\n    def test_error(self, data, all_arithmetic_operators):\n        # other specific errors tested in the integer array specific tests\n        pass"
  },
  {
    "id" : "25e0de2f-0ab8-479f-89b0-b9d3d88fc679",
    "prId" : 22026,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22026#pullrequestreview-152450884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff34cda1-d9ab-4884-b68f-8d964ebc78b7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@TomAugspurger should create an issue to document fixtures in the extension array tests.",
        "createdAt" : "2018-09-05T11:36:06Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "116002ed-00e4-429d-b420-3873ac46f764",
        "parentId" : "ff34cda1-d9ab-4884-b68f-8d964ebc78b7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think also should have these fixtures in a conftest.py as NotImplementedError (IOW if an author doesn't implement the fixtures they should raise loudly). Once you implement they override and will work.",
        "createdAt" : "2018-09-05T11:36:52Z",
        "updatedAt" : "2018-09-05T12:46:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "db2836c2be2bf7a8cd352449ffc02e5664b4e721",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@@pytest.fixture\ndef data(dtype):\n    return integer_array(make_data(), dtype=dtype)\n\n"
  },
  {
    "id" : "2a8b9d8d-e41d-4b9b-9082-7129021ea3e1",
    "prId" : 22479,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22479#pullrequestreview-160992712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "517ef6f1-9dbb-48dd-8b50-7001217789d9",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "So, here's what's happening for IntegerArray with missing values,\r\n\r\nBecause of #22922, the ExtensionArray is listified, so we do `IntegerArray + List`. Then, in `IntegerArray.__add__` we do `np.asarray(other)`. Since we have missing values, we naturally end up with a float ndarray.\r\n\r\nFixing #22922 will fix this specific issue, but doesn't handle the general problem of `IntegerArray + List`. i.e. is this a bug?\r\n\r\n```python\r\nIn [3]: arr = pd.Series([1, None, 3], dtype='Int8').values\r\n\r\nIn [4]: arr\r\nOut[4]: IntegerArray([1, nan, 3], dtype='Int8')\r\n\r\nIn [5]: arr + list(arr)\r\nOut[5]: array([ 2., nan,  6.])\r\n```\r\n\r\nShould `Out[5]` be an `IntegerArray([2, nan, 6], dtype='Int8')`? If so, I'll open a new issue.",
        "createdAt" : "2018-10-03T02:28:24Z",
        "updatedAt" : "2018-10-03T02:28:24Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c61a168d-49db-4946-84b6-ecd11c3b5099",
        "parentId" : "517ef6f1-9dbb-48dd-8b50-7001217789d9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes i think you are right\r\n\r\nnot sure this is hitting the right path ",
        "createdAt" : "2018-10-03T02:46:18Z",
        "updatedAt" : "2018-10-03T02:46:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9ebeb637-1c32-4831-834f-ac8bef078b83",
        "parentId" : "517ef6f1-9dbb-48dd-8b50-7001217789d9",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "https://github.com/pandas-dev/pandas/issues/22962",
        "createdAt" : "2018-10-03T03:00:12Z",
        "updatedAt" : "2018-10-03T03:00:12Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7efeed85c77617827f3d8d4b957b89d16145e966",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +144,148 @@        pass\n\n    @pytest.mark.xfail(reason=\"EA is listified. GH-22922\", strict=True)\n    def test_add_series_with_extension_array(self, data):\n        super(TestArithmeticOps, self).test_add_series_with_extension_array("
  },
  {
    "id" : "05c0843b-1d64-455a-a182-58b7b29dc009",
    "prId" : 23601,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23601#pullrequestreview-176268357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58e0880c-aff9-493b-af63-71042186fe2c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "IOW shouldn't the interface tests for repr be here?",
        "createdAt" : "2018-11-11T14:59:36Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "739fb66f-47ab-4b38-9a63-8d115acd4dc1",
        "parentId" : "58e0880c-aff9-493b-af63-71042186fe2c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you respond here",
        "createdAt" : "2018-11-18T22:25:26Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3d038d55-348f-432c-be8b-3c4e24901be1",
        "parentId" : "58e0880c-aff9-493b-af63-71042186fe2c",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "What's the question? The'res a `TestPrinting` right below this line, which is the interface repr tests.",
        "createdAt" : "2018-11-19T12:15:13Z",
        "updatedAt" : "2018-12-03T22:25:25Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ad113b374641b6eb1f0cb7b28d7d38e24099902",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +216,220 @@    pass\n\n\nclass TestPrinting(base.BasePrintingTests):\n    pass"
  },
  {
    "id" : "8a919c0f-1cfb-4a79-97db-6cd0d2d3dad3",
    "prId" : 28945,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28945#pullrequestreview-304927040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56f67614-2994-44a6-a862-32609fa83fdc",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "can you check that the other comparisons work correctly",
        "createdAt" : "2019-10-13T22:11:37Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "b9aab410-d9b7-4b30-b015-935d4cc351c8",
        "parentId" : "56f67614-2994-44a6-a862-32609fa83fdc",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "I think I found other bugs when adding more test cases, so I created a couple follow-up issues: https://github.com/pandas-dev/pandas/issues/28980, https://github.com/pandas-dev/pandas/issues/28981.  ",
        "createdAt" : "2019-10-14T21:39:37Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "f38f5f05-9d3b-4dd8-b740-14492625d2a2",
        "parentId" : "56f67614-2994-44a6-a862-32609fa83fdc",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you still use `all_compare_operators` here and just xfail where appropriate? Will be easier to track over time instead of piecing in various tests as fixes come along",
        "createdAt" : "2019-10-22T01:00:39Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bd5381af39dbb9f57eabde1091945811e859509",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +173,177 @@        s = pd.Series([1, None], dtype=any_nullable_int_dtype)\n        result = s == \"a\"\n        expected = pd.Series([False, False])\n\n        self.assert_series_equal(result, expected)"
  },
  {
    "id" : "3ba42e96-4a24-4047-a53a-06e8593ae6ed",
    "prId" : 28945,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28945#pullrequestreview-302931794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c483b9d0-8db7-4095-a373-2a8a4d09885e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "create a new fixture in pandas/conftest.py, call it Int_dtype(params=ALL_EA_INT_DTYPES), and use it here.",
        "createdAt" : "2019-10-16T12:32:01Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1999d8a9-3b03-4743-86ac-44207901d2af",
        "parentId" : "c483b9d0-8db7-4095-a373-2a8a4d09885e",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "Done",
        "createdAt" : "2019-10-16T23:23:04Z",
        "updatedAt" : "2019-12-09T02:52:51Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bd5381af39dbb9f57eabde1091945811e859509",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +172,176 @@        # GH 28930\n        s = pd.Series([1, None], dtype=any_nullable_int_dtype)\n        result = s == \"a\"\n        expected = pd.Series([False, False])\n"
  }
]