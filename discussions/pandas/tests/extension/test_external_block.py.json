[
  {
    "id" : "02671c33-b7ed-4d40-bdad-544e209077ae",
    "prId" : 22014,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22014#pullrequestreview-139490424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3b2c2ef-84d6-4724-9bb0-dc373f9c8533",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "For next PRs doing further splitting, can we please keep the existing imports? \r\n\r\nWhat I mean is: import all the things that are used in pandas outside of internals itself in `internals/__init_.py`, then no changes to imports are needed, and it is also clear which functions/classes are used in the rest of pandas.\r\n\r\n",
        "createdAt" : "2018-07-23T11:35:32Z",
        "updatedAt" : "2018-07-23T11:35:33Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "06aade6c-43e5-4772-85cf-5e3451f6368e",
        "parentId" : "d3b2c2ef-84d6-4724-9bb0-dc373f9c8533",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> For next PRs doing further splitting, can we please keep the existing imports?\r\n\r\nYes.  I'm also marking which non-internals modules are importing what, in the hopes we can trim down the exposed surface.",
        "createdAt" : "2018-07-23T14:10:28Z",
        "updatedAt" : "2018-07-23T14:10:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa4d7f2c59f11d90ce15107278010a4ffb07812f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +7,11 @@from pandas.core.internals import (\n    BlockManager, SingleBlockManager)\nfrom pandas.core.internals.blocks import Block, NonConsolidatableMixIn\n\nimport pytest"
  },
  {
    "id" : "77fe4ee3-1bb2-41e3-9697-509d03be6be2",
    "prId" : 33123,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33123#pullrequestreview-384256632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da289f8d-dd0c-45ec-8e5b-5920c25e026b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can remove the placement arg from make_block_same_class I think (e.g. do this check internally), but for a followon",
        "createdAt" : "2020-03-30T21:48:53Z",
        "updatedAt" : "2020-03-30T21:48:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "86960ad91b438d6bcf01c57c3fdf3118d23c5e52",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +18,22 @@        \"\"\"\n        values = np.concatenate([blk.values for blk in to_concat])\n        placement = self.mgr_locs if self.ndim == 2 else slice(len(values))\n        return self.make_block_same_class(values, placement=placement)\n"
  }
]