[
  {
    "id" : "90b58ba9-0aa4-46a0-99ef-710dcccc570d",
    "prId" : 32546,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32546#pullrequestreview-408730240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1d0adfc-5501-4ced-990c-6a1206c4c495",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you provide a 1-liner here about this this test is actually testing",
        "createdAt" : "2020-05-09T19:44:39Z",
        "updatedAt" : "2020-06-13T10:49:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "68691551-d205-406a-bd8e-43251482f52c",
        "parentId" : "f1d0adfc-5501-4ced-990c-6a1206c4c495",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Have added a description (longer than one line though, is that OK?)",
        "createdAt" : "2020-05-10T10:24:01Z",
        "updatedAt" : "2020-06-13T10:49:11Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3352211c0d5d09a2633baaf612375bad40dde0e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1212,1216 @@    # and a non-categorical key, doesn't try to expand the output to include\n    # non-observed categories but instead matches the input shape.\n    # GH 32494\n    df_with_categorical = pd.DataFrame(\n        {"
  },
  {
    "id" : "fc09b3d3-6536-4016-bc83-17a956e21316",
    "prId" : 32546,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32546#pullrequestreview-408730248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d21c5d45-0f66-4bd6-9078-e6dd0b4974de",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is ok, but can you also put in an explicit constructedr result (e.g. a dataframe / series that is constructed directly). you can leave these as well.",
        "createdAt" : "2020-05-09T19:45:42Z",
        "updatedAt" : "2020-06-13T10:49:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1fad9fa4-39ee-4312-9c35-741fe2179cd4",
        "parentId" : "d21c5d45-0f66-4bd6-9078-e6dd0b4974de",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Sure, done",
        "createdAt" : "2020-05-10T10:24:06Z",
        "updatedAt" : "2020-06-13T10:49:11Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3352211c0d5d09a2633baaf612375bad40dde0e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1226,1230 @@    # DataFrame case\n    result = df_with_categorical.groupby([\"A\", \"C\"], observed=observed).transform(\"sum\")\n    expected = df_without_categorical.groupby([\"A\", \"C\"]).transform(\"sum\")\n    tm.assert_frame_equal(result, expected)\n    expected_explicit = pd.DataFrame({\"B\": [4, 2, 4]})"
  },
  {
    "id" : "5afacd6f-d2d2-4b44-9e41-daf7df431c4f",
    "prId" : 32546,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32546#pullrequestreview-429911447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69588f69-fc6c-42df-9172-2e89a6d4d06e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "observed is already a fixture, can remove this parameterization",
        "createdAt" : "2020-06-12T17:17:49Z",
        "updatedAt" : "2020-06-13T10:49:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3352211c0d5d09a2633baaf612375bad40dde0e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1208,1212 @@\n\ndef test_categorical_and_not_categorical_key(observed):\n    # Checks that groupby-transform, when grouping by both a categorical\n    # and a non-categorical key, doesn't try to expand the output to include"
  }
]