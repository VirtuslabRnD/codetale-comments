[
  {
    "id" : "52a8486f-3cef-45e9-afc0-669ac3749a10",
    "prId" : 24128,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24128#pullrequestreview-187802952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0de8e5c5-b5a3-49e2-81a4-acdfd99d0d85",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parametrize on ``fill_value`` here (pass, None, np.nan, pd.NaT)",
        "createdAt" : "2018-12-25T17:33:17Z",
        "updatedAt" : "2018-12-26T00:16:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a03cbf5e4afe65c8b6fe8a1eb1eee517d0fc5913",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +869,873 @@                        categories=['a', 'b', 'c', 'd'], ordered=False)\n    expected = pd.Categorical([None, 'a', 'b', 'c'],\n                              categories=['a', 'b', 'c', 'd'], ordered=False)\n    res = ct.shift(1, fill_value=fill_value)\n    assert_equal(res, expected)"
  },
  {
    "id" : "9c1d76ba-17d2-41fb-9091-be70e2eb4d4d",
    "prId" : 24850,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24850#pullrequestreview-194766520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93683cc3-a191-4b0d-a262-70b91e20df4c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "use the observed fixture here to test both cases",
        "createdAt" : "2019-01-21T21:27:55Z",
        "updatedAt" : "2019-01-22T14:59:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d5b8968acaac684f61e3acbf4df47f2f905696c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +427,431 @@                       'vals': [1, 2, 3]})\n    g = df.groupby('cat', observed=observed)\n    result = g.groups\n    if observed:\n        expected = {'a': Index([0, 2], dtype='int64')}"
  },
  {
    "id" : "098e12ba-5b65-419b-ab15-2a829829974c",
    "prId" : 25908,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25908#pullrequestreview-220419334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbe59db8-9e08-4285-93a6-39ebde9c7ccf",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Can you also add the example from #25167?  Then we can close that one as well (since they were duplicate issues AFAICT).",
        "createdAt" : "2019-03-28T19:26:12Z",
        "updatedAt" : "2019-04-03T08:05:12Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "db5bdaf9-7f63-4946-b173-eb00d4ce8862",
        "parentId" : "bbe59db8-9e08-4285-93a6-39ebde9c7ccf",
        "authorId" : "fae99d36-ea5a-409c-a544-2e1246434ef3",
        "body" : "Will do, sure. I agree they seem duplicates.",
        "createdAt" : "2019-03-29T07:24:55Z",
        "updatedAt" : "2019-04-03T08:05:12Z",
        "lastEditedBy" : "fae99d36-ea5a-409c-a544-2e1246434ef3",
        "tags" : [
        ]
      },
      {
        "id" : "51588ef3-878b-4332-9239-ccd8bc482e11",
        "parentId" : "bbe59db8-9e08-4285-93a6-39ebde9c7ccf",
        "authorId" : "fae99d36-ea5a-409c-a544-2e1246434ef3",
        "body" : "Done, checking now.\r\nI added the sample as-is, without extended parameterisation, as that was originally submitted.\r\nMy new test covers all combinations of parameters, anyway.\r\nIs that what you had in mind?",
        "createdAt" : "2019-03-29T08:29:34Z",
        "updatedAt" : "2019-04-03T08:05:12Z",
        "lastEditedBy" : "fae99d36-ea5a-409c-a544-2e1246434ef3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9e3883c630c48b17218e6bcc5593720c1402bf1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +483,487 @@        assert False, msg\n\n\ndef test_datetime():\n    # GH9049: ensure backward compatibility"
  },
  {
    "id" : "3ea97fd2-c511-419e-b022-4d9ff38fa58a",
    "prId" : 26463,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26463#pullrequestreview-239785229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9199979e-3781-4f42-bbed-95db6a8cf68a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Similar comment around just constructing from literals",
        "createdAt" : "2019-05-21T01:08:20Z",
        "updatedAt" : "2019-05-29T09:02:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6bca5e3cd34ba25ffb2cd7d74c187dd68e9fce7",
    "line" : 451,
    "diffHunk" : "@@ -1,1 +1011,1015 @@def test_seriesgroupby_observed_false_or_none(df_cat, observed, operation):\n    # GH 24880\n    index, _ = MultiIndex.from_product(\n        [CategoricalIndex(['bar', 'foo'], ordered=False),\n         CategoricalIndex(['one', 'three', 'two'], ordered=False)],"
  },
  {
    "id" : "fc6e7f31-3dd1-4802-9484-459d1e741bc5",
    "prId" : 26463,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26463#pullrequestreview-242395011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dae27fe-ede8-4d8f-8daf-dea652746d58",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "can you add a doctring, xref #19159",
        "createdAt" : "2019-05-27T21:49:31Z",
        "updatedAt" : "2019-05-29T09:02:12Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6bca5e3cd34ba25ffb2cd7d74c187dd68e9fce7",
    "line" : 408,
    "diffHunk" : "@@ -1,1 +968,972 @@\n@pytest.fixture\ndef df_cat(df):\n    \"\"\"\n    DataFrame with multiple categorical columns and a column of integers."
  },
  {
    "id" : "3527b719-951f-4561-9c3c-1a823b5497d9",
    "prId" : 28798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28798#pullrequestreview-297811299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e846c2e-0d37-4083-bd2d-0bb608e98853",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you use the example from the original issue and compare the resultant dataframes. I don't like *just* checking the names; rather a full-on comparison is best.",
        "createdAt" : "2019-10-05T22:37:53Z",
        "updatedAt" : "2019-10-07T12:52:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b471b72477c671c8ecb96d5713e5996c23cabd9",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1197,1201 @@\ndef test_groupby_cat_preserves_structure(observed):\n    # GH 28787\n    df = DataFrame([(\"Bob\", 1), (\"Greg\", 2)], columns=[\"Name\", \"Item\"])\n    expected = df.copy()"
  },
  {
    "id" : "e1ae2a1c-f0a3-4a1c-a675-821529a24af2",
    "prId" : 28798,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28798#pullrequestreview-297956329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06aa961a-12a9-4c79-89be-7cef3bd1df74",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "specify columns= here to fix the ordering rather using check_like",
        "createdAt" : "2019-10-07T08:03:05Z",
        "updatedAt" : "2019-10-07T12:52:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b471b72477c671c8ecb96d5713e5996c23cabd9",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1199,1203 @@    # GH 28787\n    df = DataFrame([(\"Bob\", 1), (\"Greg\", 2)], columns=[\"Name\", \"Item\"])\n    expected = df.copy()\n\n    result = ("
  },
  {
    "id" : "2e716f33-8675-4c73-bb77-70f4dd20bb6c",
    "prId" : 29690,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29690#pullrequestreview-318840215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52b0ec20-ad9c-4cb5-9a76-54af7ec8c0f1",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I'd also like some kind of assertion about this values here. For example, I don't know at a glance whether `reindex_output` will fill with NaN or 0. For the case  of `.groupby(...).count()`, we'll want to ensure we have int dtype for the output.\r\n\r\nYou may need to have `expected_values` be part of the parameterization.",
        "createdAt" : "2019-11-18T16:14:18Z",
        "updatedAt" : "2019-11-20T07:46:21Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "7939bb89-5a7b-4203-9e4f-27b78ea6cd76",
        "parentId" : "52b0ec20-ad9c-4cb5-9a76-54af7ec8c0f1",
        "authorId" : "da520e2e-df8e-4578-a864-1d3c791b1cea",
        "body" : "Sure! I'm gonna parametrize this test with the `reduction_func` fixture as @WillAyd mentioned below, but I'll add some more specific test cases for `count` and the other aggregations that seem to be failing.",
        "createdAt" : "2019-11-19T08:02:05Z",
        "updatedAt" : "2019-11-20T07:46:21Z",
        "lastEditedBy" : "da520e2e-df8e-4578-a864-1d3c791b1cea",
        "tags" : [
        ]
      }
    ],
    "commit" : "995d6588fcae7686e2f4ae2b8d1f0206d23e6488",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1278,1282 @@    result = agg(*args)\n\n    assert len(result) == expected_length\n\n"
  },
  {
    "id" : "5f323519-04a3-4a7a-9dd7-9a8f81a36be4",
    "prId" : 31359,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31359#pullrequestreview-350148354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dc36984-c529-48d5-a5db-9c4ef6e09380",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you also add a version with a non-numeric categories? (as that fails even more on master (all NaN), since none of the counts are possible categories)",
        "createdAt" : "2020-01-29T14:30:56Z",
        "updatedAt" : "2020-01-29T19:29:57Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b826bb710f4fb6f480127042b3c4e26ebb00f7e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1355,1359 @@            \"id\": [0, 1, 2, 3, 4],\n            \"groups\": [0, 1, 1, 2, 2],\n            \"value\": pd.Categorical([0, 0, 0, 0, 1]),\n        }\n    ).set_index(\"id\")"
  },
  {
    "id" : "c67e26f5-6a8d-4794-9593-f8bebb27df66",
    "prId" : 33098,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33098#pullrequestreview-385911300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "906532dd-c183-4612-8ad6-37e39c06ab0c",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "im not sure i follow.  the test name says you want to get categorical, but the `expected` here is not categorical",
        "createdAt" : "2020-03-31T20:31:11Z",
        "updatedAt" : "2020-06-15T21:54:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "fc5500f3-7774-4f68-b730-b36eddd2da3e",
        "parentId" : "906532dd-c183-4612-8ad6-37e39c06ab0c",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Sorry, the wording is obviously a bit confusing. The initial return value of the whole group by function was categorical and not a ``DataFrame`` as mentioned in [here](https://github.com/pandas-dev/pandas/issues/28641#issuecomment-549116890)\r\n\r\nShould I change the name or write a comment?",
        "createdAt" : "2020-03-31T20:44:14Z",
        "updatedAt" : "2020-06-15T21:54:05Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "55d6c519-84b3-4c6f-a88e-e0d2457c89ca",
        "parentId" : "906532dd-c183-4612-8ad6-37e39c06ab0c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "if you can come up with a concise+accurate name thatd be ideal",
        "createdAt" : "2020-04-01T15:28:27Z",
        "updatedAt" : "2020-06-15T21:54:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "162e9ac6-8b04-48e6-8479-6ccd66255860",
        "parentId" : "906532dd-c183-4612-8ad6-37e39c06ab0c",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Renamed the test. I think it reflects the previous issue a bit better now. Added a comment for good measure.",
        "createdAt" : "2020-04-01T20:07:38Z",
        "updatedAt" : "2020-06-15T21:54:05Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8dfb9c459d52d047fe8b62c99875f60ceaad0c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1399,1403 @@    result = getattr(df_grouped, func)()\n    expected = pd.Series([\"b\"], index=pd.Index([1997], name=\"A\"), name=\"B\")\n    tm.assert_series_equal(result, expected)\n\n"
  },
  {
    "id" : "0f768bc4-58c9-48b5-94df-41fe1433fdf1",
    "prId" : 35022,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35022#pullrequestreview-440466639",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "814e8f81-0a1c-4ef6-ac2a-7209662e574f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make sure the xfail reasons have the issue number as well",
        "createdAt" : "2020-06-30T23:29:43Z",
        "updatedAt" : "2020-07-08T13:26:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "732edb9a-4e11-4079-83e4-6c3b0f0c8dcd",
        "parentId" : "814e8f81-0a1c-4ef6-ac2a-7209662e574f",
        "authorId" : "2733f79e-d99c-490f-8750-7e0bb6c75032",
        "body" : "Done",
        "createdAt" : "2020-07-01T00:11:55Z",
        "updatedAt" : "2020-07-08T13:26:50Z",
        "lastEditedBy" : "2733f79e-d99c-490f-8750-7e0bb6c75032",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c312d477c3636216491c0737e87dfe62e0c0f18",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +1335,1339 @@        pytest.skip(\"ngroup is not truly a reduction\")\n\n    if reduction_func == \"corrwith\":  # GH 32293\n        mark = pytest.mark.xfail(\n            reason=\"TODO: implemented SeriesGroupBy.corrwith. See GH 32293\""
  },
  {
    "id" : "713602dd-d1a0-4a14-b2be-0934bbad4a5b",
    "prId" : 35253,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35253#pullrequestreview-447548917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf703a0c-6613-43fd-ab8f-fcd0b4be44aa",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize this over observed=True/False (I am not sure if its the same result or not),",
        "createdAt" : "2020-07-13T16:48:16Z",
        "updatedAt" : "2020-07-13T20:18:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0fc7ef1d-b5d4-40cb-bb1a-2133e1ea87ca",
        "parentId" : "bf703a0c-6613-43fd-ab8f-fcd0b4be44aa",
        "authorId" : "2733f79e-d99c-490f-8750-7e0bb6c75032",
        "body" : "Done",
        "createdAt" : "2020-07-13T19:45:26Z",
        "updatedAt" : "2020-07-13T20:18:42Z",
        "lastEditedBy" : "2733f79e-d99c-490f-8750-7e0bb6c75032",
        "tags" : [
        ]
      }
    ],
    "commit" : "d098586b1ca08cd628ab39f0c3ccfd2fc1420fe6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1672,1676 @@\n\n@pytest.mark.parametrize(\"func\", [\"first\", \"last\"])\ndef test_series_groupby_first_on_categorical_col_grouped_on_2_categoricals(\n    func: str, observed: bool"
  }
]