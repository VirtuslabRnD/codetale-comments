[
  {
    "id" : "3a98bb0b-bcfb-4a8a-a757-dbefca03a848",
    "prId" : 14952,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14952#pullrequestreview-14137781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8db7a363-360e-4cb5-88f5-4dc5514ecd75",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the ``.get_group`` call as well here. ping on green.",
        "createdAt" : "2016-12-22T11:24:28Z",
        "updatedAt" : "2016-12-23T03:13:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c1621168af47d32fad745daa1a3d85dbf6988ef",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +3941,3945 @@        dates = ['2015-01-05', '2015-01-04', '2015-01-03',\n                 '2015-01-02', '2015-01-01']\n        expected = {pd.Timestamp(date): pd.DatetimeIndex([date], name='date')\n                    for date in dates}\n        tm.assert_dict_equal(result, expected)"
  },
  {
    "id" : "fcebff33-f817-4b2d-910a-507b6407707c",
    "prId" : 16859,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16859#pullrequestreview-48863607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49ff6478-f2e2-4b05-b1ad-73a391ab7798",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a 1-liner about what this is testing",
        "createdAt" : "2017-07-10T10:32:08Z",
        "updatedAt" : "2017-08-21T06:55:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a98db9aec22696d60f9581deba1d20573fe370a3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3893,3897 @@\n    def test_gb_key_len_equal_axis_len(self):\n            # GH16843\n            # test ensures that index and column keys are recognized correctly\n            # when number of keys equals axis length of groupby"
  },
  {
    "id" : "a94e5b96-5543-4bc7-b61a-26e117fac373",
    "prId" : 17871,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17871#pullrequestreview-69921839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f338093e-0a8d-4b03-8aa7-da5b0ace0e90",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a tests on SeriesGroupBy",
        "createdAt" : "2017-10-17T10:19:11Z",
        "updatedAt" : "2017-10-17T23:38:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "21d15009-4bae-4874-b168-a949dfd2aef5",
        "parentId" : "f338093e-0a8d-4b03-8aa7-da5b0ace0e90",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Ok",
        "createdAt" : "2017-10-17T15:15:34Z",
        "updatedAt" : "2017-10-17T23:38:45Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "608a0e48b1481180d59fbb7f8cb5c0bfa15f1257",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +3822,3826 @@                             index=index)\n\n        assert_series_equal(expected, result)\n\n        # test SeriesGroupby.pipe"
  },
  {
    "id" : "a7416df4-e8a8-4d13-9f32-987e47de52c3",
    "prId" : 19610,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19610#pullrequestreview-95626012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "640e82ea-e383-436f-a501-ef2cbde1f53e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a tests with the numeric ops on groupby / object and assert they raise",
        "createdAt" : "2018-02-09T12:16:52Z",
        "updatedAt" : "2018-02-09T12:17:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1f05f9b9-40dd-461c-907e-34fabc5dd5e7",
        "parentId" : "640e82ea-e383-436f-a501-ef2cbde1f53e",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Assuming you want this in a different change no problem. That said, do you consider the numeric ops to be `add`, `prod`, `min`, `max`, `mean`, `median`, `var`, `ohlc`, `cumprod`, `cumsum`, `cummin`, `cummax` and `rank`? The tests are one thing, but these don't all raise at the moment so would have to couple that with some refactoring of the `groupby` module",
        "createdAt" : "2018-02-09T20:31:02Z",
        "updatedAt" : "2018-02-09T20:31:02Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "4e8f3429-f0ed-4439-9aee-5d9378cc7a9c",
        "parentId" : "640e82ea-e383-436f-a501-ef2cbde1f53e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes let's do this in another change.",
        "createdAt" : "2018-02-10T16:08:29Z",
        "updatedAt" : "2018-02-10T16:08:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa63b47595546d4583b0fa7dbfd9e9bff393c76e",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +2085,2089 @@        result = df.groupby(bins).median()\n        expected = df.groupby(bins).agg(lambda x: x.median())\n        assert_frame_equal(result, expected)\n\n    @pytest.mark.parametrize(\"dtype\", ["
  },
  {
    "id" : "7127fd22-0459-4d6a-a7a9-64e30c2dc40b",
    "prId" : 20081,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20081#pullrequestreview-102834667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc87e22f-7ea8-41ec-a4b8-822bf68aab97",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you provide a 1-line comment",
        "createdAt" : "2018-03-10T01:19:18Z",
        "updatedAt" : "2018-03-10T01:40:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9a656333-2f59-4ca3-af40-0533a967332c",
        "parentId" : "cc87e22f-7ea8-41ec-a4b8-822bf68aab97",
        "authorId" : "00662f94-8b2a-4eda-b6eb-1a32816139c6",
        "body" : "done in my last commit.",
        "createdAt" : "2018-03-10T01:41:26Z",
        "updatedAt" : "2018-03-10T01:41:26Z",
        "lastEditedBy" : "00662f94-8b2a-4eda-b6eb-1a32816139c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac6d5aec2eff44f896deab8b10ca60ffcca30e28",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +235,239 @@\n    def test_apply_trivial(self):\n        # GH 20066\n        # trivial apply: ignore input and return a constant dataframe.\n        df = pd.DataFrame({'key': ['a', 'a', 'b', 'b', 'a'],"
  }
]