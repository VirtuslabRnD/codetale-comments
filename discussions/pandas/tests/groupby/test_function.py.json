[
  {
    "id" : "f3683370-5539-42f2-a5f0-a921d3312d7a",
    "prId" : 20405,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20405#pullrequestreview-199365573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "decd3a73-a947-499d-8c0d-53c2e6183506",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "side note this file is getting pretty big, maybe should split it up a bit (later)",
        "createdAt" : "2019-02-02T22:57:55Z",
        "updatedAt" : "2019-02-28T07:01:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec013bf03c03a4c5124150bba7549f64d4f9ca90",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1062,1066 @@\n# quantile\n# --------------------------------\n@pytest.mark.parametrize(\"interpolation\", [\n    \"linear\", \"lower\", \"higher\", \"nearest\", \"midpoint\"])"
  },
  {
    "id" : "a9b35f08-4244-40c5-a29c-1ab74a1b1a40",
    "prId" : 26112,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26112#pullrequestreview-227479883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59f310fb-4c86-4375-b00b-de7cf1546520",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make a separate test",
        "createdAt" : "2019-04-16T22:43:04Z",
        "updatedAt" : "2019-04-17T02:23:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f9f66138c858e3ad6bf2d49624384039dcdbbec",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1092,1096 @@\ndef test_size_groupby_all_null():\n    # GH23050\n    # Assert no 'Value Error : Length of passed values is 2, index implies 0'\n    df = DataFrame({'A': [None, None]})  # all-null groups"
  },
  {
    "id" : "1beeb77a-3e27-4802-a1af-46ade2eca874",
    "prId" : 27071,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27071#pullrequestreview-254981405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Might be overlooking but not immediately obvious how this tests the preservation of Categorical and Spares types - is this just a general cleanup?",
        "createdAt" : "2019-06-27T02:27:12Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "db6124a2-be17-4d08-969c-a36cd57484c6",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is just general cleaning",
        "createdAt" : "2019-06-27T02:43:56Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d41074a0-c2af-4f16-89bb-8a59fceb0caf",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "So do we actually have test coverage for the preservation of Categorical / Sparse in groupby tests?",
        "createdAt" : "2019-06-27T03:05:21Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "07ef1c9c-9b4e-4887-a27d-51d8d7fd30b9",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "https://github.com/pandas-dev/pandas/pull/27071/files#diff-e88b6d0523a37f080cc5b64b9e6f24f7L285",
        "createdAt" : "2019-06-27T03:07:45Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a48ea615-6361-4c62-9814-e5b520cb79d9",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can we either repurpose this test or maybe add a new test for all of the ops and the preservation of sparse / categorical? Looks like the one you linked to only does first / last for Categorical, so a small subset of what is promised here",
        "createdAt" : "2019-06-27T03:19:06Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "834cc17f-cbc1-477c-8bdd-bc5c61cfaa87",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually added the OP tests now.",
        "createdAt" : "2019-06-27T03:19:45Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ac057ee5-2862-45f1-9858-f2af1d20409b",
        "parentId" : "fc86bc9a-103a-4176-b39d-00c071c74151",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Reading my mind...",
        "createdAt" : "2019-06-27T03:20:13Z",
        "updatedAt" : "2019-06-27T23:13:13Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a6a0c08dc5a65427f29fbf4c989b2b895b004aa",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +481,485 @@     pytest.param(\n         'sem', scipy_sem, marks=td.skip_if_no_scipy)])\ndef test_ops_general(op, targop):\n    df = DataFrame(np.random.randn(1000))\n    labels = np.random.randint(0, 50, size=1000).astype(float)"
  },
  {
    "id" : "556e108c-4383-4438-9816-f2ee443b498f",
    "prId" : 27951,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27951#pullrequestreview-284548389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e500d753-6715-4860-8e08-09b0f27a2219",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The parametrization here is pretty repetitive, though I realize that you have three items at a time being sent through to keep the expectation different across each.\r\n\r\nIs there a way to more succinctly parametrize though? It's rather difficult to read this and find what's expected",
        "createdAt" : "2019-09-05T18:17:39Z",
        "updatedAt" : "2019-09-06T15:50:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "79ac1c9a-3e3e-4a47-9478-b0b87ad0ad23",
        "parentId" : "e500d753-6715-4860-8e08-09b0f27a2219",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Agreed - have modified it so the DataFrame is constructed within the test",
        "createdAt" : "2019-09-05T21:19:22Z",
        "updatedAt" : "2019-09-06T15:50:44Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      }
    ],
    "commit" : "20ec544519c2a45d8b658c7bf089bcf745c91e0a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1026,1030 @@\n\n@pytest.mark.parametrize(\n    \"key, data, dropna, expected\",\n    ["
  },
  {
    "id" : "0894f651-a7b3-4fe7-96a3-5f8f8dbd443d",
    "prId" : 28931,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28931#pullrequestreview-302542593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5636d746-ef36-4fd5-af57-5b469f02c624",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe use any_real_type fixture here (can be followup)",
        "createdAt" : "2019-10-16T12:42:28Z",
        "updatedAt" : "2019-10-16T12:42:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "77a0b7e83312c18dbc298e239fa3aebbc8d249e8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +379,383 @@\n@pytest.mark.parametrize(\n    \"dtype\", [\"int8\", \"int16\", \"int32\", \"int64\", \"float32\", \"float64\", \"uint64\"]\n)\n@pytest.mark.parametrize("
  },
  {
    "id" : "89aef5df-e315-4592-95ca-00e3dab03d06",
    "prId" : 29173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29173#pullrequestreview-305574904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7997696d-ff9b-4a2a-8955-f9f0aacb7f00",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "i take it this is doesn't reliably segfault on the first try?",
        "createdAt" : "2019-10-23T00:13:44Z",
        "updatedAt" : "2019-10-25T17:06:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "265edafb-8301-4649-b3a0-a1a7de9c9786",
        "parentId" : "7997696d-ff9b-4a2a-8955-f9f0aacb7f00",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "... or i could just read the comment three lines up.  never mind",
        "createdAt" : "2019-10-23T00:14:21Z",
        "updatedAt" : "2019-10-25T17:06:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "57889db124086a15385f2437495ff48c7652fadd",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1381,1385 @@    # Random segfaults; would have been guaranteed in loop\n    grp = df.groupby(\"key\")\n    for _ in range(100):\n        grp.quantile()\n"
  },
  {
    "id" : "67da32e4-e26d-41f0-b413-2bedef69fca8",
    "prId" : 29173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29173#pullrequestreview-305575511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9000daf2-2ca4-4920-ae99-40464772d0a6",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "any reason not to re-use the setup from the other test?  could just assert the result after the loop?",
        "createdAt" : "2019-10-23T00:15:21Z",
        "updatedAt" : "2019-10-25T17:06:09Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "07f38ef6-8080-48f9-a381-cb66397da9b6",
        "parentId" : "9000daf2-2ca4-4920-ae99-40464772d0a6",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Different frame shapes. I think segfaults were occurring with oddly sized frames and bad results with evenly sized. Might be some other conflating factor",
        "createdAt" : "2019-10-23T00:16:49Z",
        "updatedAt" : "2019-10-25T17:06:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "57889db124086a15385f2437495ff48c7652fadd",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1388,1392 @@    # GH 28662\n    data = np.array([1.0, np.nan, 3.0, np.nan])\n    df = pd.DataFrame(dict(key=data, val=range(4)))\n\n    result = df.groupby(\"key\").quantile()"
  },
  {
    "id" : "25776804-c98e-4ffa-ab8f-367392fa1b56",
    "prId" : 29173,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29173#pullrequestreview-307931144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aee4897a-c338-4e48-8a83-2a1fb23679a7",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "the expected should be [0, 2], but also on 0.24.2 the columns index name was the q value. not sure if this is important.\r\n\r\n```\r\n>>> pd.__version__\r\n'0.24.2'\r\n>>>\r\n>>> import numpy as np\r\n>>>\r\n>>> data = np.array([1.0, np.nan, 3.0, np.nan])\r\n>>> df = pd.DataFrame(dict(key=data, val=range(4)))\r\n>>>\r\n>>>\r\n>>> df.groupby(\"key\").quantile()\r\n0.5  val\r\nkey\r\n1.0  0.0\r\n3.0  2.0\r\n```\r\n\r\n",
        "createdAt" : "2019-10-28T12:41:02Z",
        "updatedAt" : "2019-10-28T12:41:02Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "cb0b6ace-1591-4dda-ae16-48e76d5b4cdf",
        "parentId" : "aee4897a-c338-4e48-8a83-2a1fb23679a7",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Keep in mind that this is a groupby and each element belongs to its own group. [1, 3] is essentially the identity of the non-NA groupings and should be correct\r\n\r\nw.r.t. the column index name that probably goes back to https://github.com/pandas-dev/pandas/pull/20405/files#r208366338 which was an inconsistency in 0.24.2",
        "createdAt" : "2019-10-28T15:22:06Z",
        "updatedAt" : "2019-10-28T15:22:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "57889db124086a15385f2437495ff48c7652fadd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1392,1396 @@    result = df.groupby(\"key\").quantile()\n    expected = pd.DataFrame(\n        [1.0, 3.0], index=pd.Index([1.0, 3.0], name=\"key\"), columns=[\"val\"]\n    )\n    tm.assert_frame_equal(result, expected)"
  },
  {
    "id" : "a83c11c0-8af7-4e9a-8b91-23938fbb60e2",
    "prId" : 32223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32223#pullrequestreview-372465242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9bb245c-55e8-4a34-a557-eed33718a380",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move the expected to the top.",
        "createdAt" : "2020-03-11T04:10:09Z",
        "updatedAt" : "2020-03-11T20:55:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3dadd53cfef28bebc52300c017fe218edeb0c70d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1621,1625 @@def test_apply_to_nullable_integer_returns_float(values, function):\n    # https://github.com/pandas-dev/pandas/issues/32219\n    output = 0.5 if function == \"var\" else 1.5\n    arr = np.array([output] * 3, dtype=float)\n    idx = pd.Index([1, 2, 3], dtype=object, name=\"a\")"
  }
]