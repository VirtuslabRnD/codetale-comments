[
  {
    "id" : "d969e841-7f63-4382-bf8f-e024c8af9d2c",
    "prId" : 5105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6867eece-7e5d-460c-a411-5ce0491354e3",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "this test is pretty quick so not marking as `@slow`\n",
        "createdAt" : "2013-10-04T03:40:42Z",
        "updatedAt" : "2013-10-04T16:39:01Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc2fa2f5122fcaa7c3dc6c233e2b7c4d63bd4337",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +2728,2732 @@                    getattr(gb, bl)\n\n    def test_series_groupby_plotting_nominally_works(self):\n        try:\n            import matplotlib as mpl"
  },
  {
    "id" : "aa858a01-6a97-4ae0-8b1e-f75eb901a149",
    "prId" : 5510,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "maybe test for what happens if you have empty DataFrame? grouped Series? cumcount on something that's not a column (i.e., passed into the object) and maybe one different dtype for good measure?\n",
        "createdAt" : "2013-11-14T00:20:29Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "3d17098c-68fc-441a-958c-8e0a691e9809",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "yup, tests are incredibly light. sg is a grouped Series.\n\nWill add empty, it does work.\n\nNot sure what you mean by not an column.... :S\n",
        "createdAt" : "2013-11-14T00:25:00Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      },
      {
        "id" : "044d7bf6-ca29-4c77-995b-bc16a870e2b3",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "`df.groupby([1, 1, 3, 5, 6])`\n",
        "createdAt" : "2013-11-14T00:27:25Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "ab0d3099-5dcf-42da-a067-cb5311ef9e14",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "not that that matters for your implementation, but might be good to have if we replace with something faster for some reason\n",
        "createdAt" : "2013-11-14T00:28:05Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "6e720eb4-ccd6-4b37-8fb1-873ab337a1b3",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "replaced with something faster, and added this test.\n",
        "createdAt" : "2013-11-14T05:52:59Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56479879bb4e0fccdb23497e2073c201481aad7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +2569,2573 @@\n        assert_series_equal(expected, g.cumcount())\n        assert_series_equal(expected, sg.cumcount())\n\n    def test_cumcount_empty(self):"
  },
  {
    "id" : "d4ff44b8-334a-4ed5-9c87-9cd553fdd850",
    "prId" : 7133,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9bc691a-0547-4a94-88f2-d1c886874861",
        "parentId" : null,
        "authorId" : "7541636a-d24d-4ee9-9027-3d80fc972781",
        "body" : "Here is the test for _cython_agg_general\n",
        "createdAt" : "2014-05-16T13:36:17Z",
        "updatedAt" : "2014-06-05T10:21:19Z",
        "lastEditedBy" : "7541636a-d24d-4ee9-9027-3d80fc972781",
        "tags" : [
        ]
      }
    ],
    "commit" : "2121b22ebfb539db62e248be0f99815e2931ac90",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +4315,4319 @@        tm.assert_frame_equal(result, expected)\n\n    def test__cython_agg_general(self):\n        ops = [('mean', np.mean),\n               ('median', np.median),"
  },
  {
    "id" : "1883edc7-b63f-47e1-aef0-25270b23a737",
    "prId" : 9177,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f3917bb-aacf-4ddf-9ce2-5f250736ee98",
        "parentId" : null,
        "authorId" : "ba449df1-c789-4eb6-8106-d3a56cba8c07",
        "body" : "This test is for ensuring backward compatibility, so added a comment like this.\n",
        "createdAt" : "2015-02-08T21:12:43Z",
        "updatedAt" : "2015-02-08T21:12:43Z",
        "lastEditedBy" : "ba449df1-c789-4eb6-8106-d3a56cba8c07",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce07eab12f267990c7e361a9ab351715cb3e6b8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3299,3303 @@\n    def test_groupby_datetime_categorical(self):\n        # GH9049: ensure backward compatibility\n        levels = pd.date_range('2014-01-01', periods=4)\n        codes = np.random.randint(0, 4, size=100)"
  },
  {
    "id" : "911b11ef-501f-4a95-8cdf-f1e6f99cd377",
    "prId" : 10265,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84fa2cce-f1ec-48a7-929b-5424db09e467",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeh, this was a really weird test. \n",
        "createdAt" : "2015-06-04T21:49:57Z",
        "updatedAt" : "2015-07-13T13:24:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9d6678ac98c56ac057baa1a7be2e32a8aed5896",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +602,606 @@        result = df.groupby('A').apply(f)[['C']]\n        e = df.groupby('A').first()[['C']]\n        e.loc['Pony'] = pd.NaT\n        assert_frame_equal(result,e)\n"
  },
  {
    "id" : "8f3956f1-08e9-469f-82a4-4b0ddec41ac7",
    "prId" : 11013,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add `dtype='int64'` for the ints, otherwise these fail on windows (default for ndarray is int32 there)\n",
        "createdAt" : "2015-09-05T22:53:39Z",
        "updatedAt" : "2015-09-06T14:06:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b9d07da1-38f3-494d-9cdf-b268632b5bb2",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "body" : "this should work with any integer type; these are not the values passed to cython method\n",
        "createdAt" : "2015-09-06T14:54:50Z",
        "updatedAt" : "2015-09-06T14:54:50Z",
        "lastEditedBy" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "tags" : [
        ]
      },
      {
        "id" : "cb9362d0-37c2-4c85-94ce-c06b9ddadcfc",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "of course - but it will fail on windows because the expected is int32\n",
        "createdAt" : "2015-09-06T14:55:58Z",
        "updatedAt" : "2015-09-06T14:55:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9b9bba74-e1f2-4d92-ad72-bf3e7d6bcac7",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "body" : "no, it should not\n",
        "createdAt" : "2015-09-06T14:57:18Z",
        "updatedAt" : "2015-09-06T14:57:18Z",
        "lastEditedBy" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "tags" : [
        ]
      },
      {
        "id" : "724401fb-ac78-473e-8b76-18925a53b823",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "try it - it does \n",
        "createdAt" : "2015-09-06T14:58:31Z",
        "updatedAt" : "2015-09-06T14:58:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ae836770-141e-4cf9-ad60-ff6d4ad71c15",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "body" : "you try it, and if it crashed post the stack trace here\n",
        "createdAt" : "2015-09-06T15:06:29Z",
        "updatedAt" : "2015-09-06T15:06:29Z",
        "lastEditedBy" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "tags" : [
        ]
      },
      {
        "id" : "928af131-0ac3-4c1d-ac88-756e59811407",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "pls make the changes that I commented then I will\n",
        "createdAt" : "2015-09-06T15:08:25Z",
        "updatedAt" : "2015-09-06T15:08:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c91b1dd0-196b-4db9-9368-aaa79fd51160",
        "parentId" : "ff396800-71f4-4644-b7a6-2df68d80a6bc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I stand corrected. You are not comparing versus the original, so ok here.\n",
        "createdAt" : "2015-09-07T00:22:37Z",
        "updatedAt" : "2015-09-07T00:22:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d968aab3da13f68fabbb05f8eba12927d8bc5836",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2488,2492 @@        df = DataFrame({\n                '1st':np.random.choice(list(ascii_lowercase), n),\n                '2nd':np.random.randint(0, 5, n),\n                '3rd':np.random.randn(n).round(3),\n                '4th':np.random.randint(-10, 10, n),"
  },
  {
    "id" : "9484692d-7066-4a1e-83fe-72fc2631c0e0",
    "prId" : 11013,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d6f7600-1078-40c1-badf-c13f2604163b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "assert the actual number (e.g. you know ho many you put there) as well\n",
        "createdAt" : "2015-09-05T22:54:53Z",
        "updatedAt" : "2015-09-06T14:06:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8eeda808-6d6e-42cb-8197-ebcb3dc6a92e",
        "parentId" : "9d6f7600-1078-40c1-badf-c13f2604163b",
        "authorId" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "body" : "plz read the test; 10% within each column are set to nan at **random**; i do not have the actual numbers.\n",
        "createdAt" : "2015-09-06T14:56:28Z",
        "updatedAt" : "2015-09-06T14:56:28Z",
        "lastEditedBy" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "tags" : [
        ]
      },
      {
        "id" : "73a2972c-b41d-4cd2-ad22-657145633015",
        "parentId" : "9d6f7600-1078-40c1-badf-c13f2604163b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "but u do - compare vs the actual number\notherwise say if both implementations were wrong this test would pass\n",
        "createdAt" : "2015-09-06T14:57:56Z",
        "updatedAt" : "2015-09-06T14:57:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7e2888b4-5fed-400d-9d83-27fb913e7718",
        "parentId" : "9d6f7600-1078-40c1-badf-c13f2604163b",
        "authorId" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "body" : "no i do not; this is a random test. both [`test_groupby.py:L2483`](https://github.com/pydata/pandas/blob/81b647f4e623446d7b584e216382e79c2ed2e720/pandas/tests/test_groupby.py#L2483) and [`test_frame.py:L12613`](https://github.com/pydata/pandas/blob/81b647f4e623446d7b584e216382e79c2ed2e720/pandas/tests/test_frame.py#L12613) already include hand written tests.\n",
        "createdAt" : "2015-09-07T13:10:07Z",
        "updatedAt" : "2015-09-07T13:10:07Z",
        "lastEditedBy" : "93252f0a-20fd-4fff-a21f-b220eed58210",
        "tags" : [
        ]
      }
    ],
    "commit" : "d968aab3da13f68fabbb05f8eba12927d8bc5836",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +2505,2509 @@            left = df.groupby(key).count()\n            right = df.groupby(key).apply(DataFrame.count).drop(key, axis=1)\n            assert_frame_equal(left, right)\n\n        # GH5610"
  }
]