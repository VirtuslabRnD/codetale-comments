[
  {
    "id" : "d969e841-7f63-4382-bf8f-e024c8af9d2c",
    "prId" : 5105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6867eece-7e5d-460c-a411-5ce0491354e3",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "this test is pretty quick so not marking as `@slow`\n",
        "createdAt" : "2013-10-04T03:40:42Z",
        "updatedAt" : "2013-10-04T16:39:01Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc2fa2f5122fcaa7c3dc6c233e2b7c4d63bd4337",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +2728,2732 @@                    getattr(gb, bl)\n\n    def test_series_groupby_plotting_nominally_works(self):\n        try:\n            import matplotlib as mpl"
  },
  {
    "id" : "aa858a01-6a97-4ae0-8b1e-f75eb901a149",
    "prId" : 5510,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "maybe test for what happens if you have empty DataFrame? grouped Series? cumcount on something that's not a column (i.e., passed into the object) and maybe one different dtype for good measure?\n",
        "createdAt" : "2013-11-14T00:20:29Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "3d17098c-68fc-441a-958c-8e0a691e9809",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "yup, tests are incredibly light. sg is a grouped Series.\n\nWill add empty, it does work.\n\nNot sure what you mean by not an column.... :S\n",
        "createdAt" : "2013-11-14T00:25:00Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      },
      {
        "id" : "044d7bf6-ca29-4c77-995b-bc16a870e2b3",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "`df.groupby([1, 1, 3, 5, 6])`\n",
        "createdAt" : "2013-11-14T00:27:25Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "ab0d3099-5dcf-42da-a067-cb5311ef9e14",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "not that that matters for your implementation, but might be good to have if we replace with something faster for some reason\n",
        "createdAt" : "2013-11-14T00:28:05Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "6e720eb4-ccd6-4b37-8fb1-873ab337a1b3",
        "parentId" : "a3edbe15-f653-4d3d-9714-df52374d9a05",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "replaced with something faster, and added this test.\n",
        "createdAt" : "2013-11-14T05:52:59Z",
        "updatedAt" : "2013-11-14T19:18:52Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56479879bb4e0fccdb23497e2073c201481aad7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +2569,2573 @@\n        assert_series_equal(expected, g.cumcount())\n        assert_series_equal(expected, sg.cumcount())\n\n    def test_cumcount_empty(self):"
  }
]