[
  {
    "id" : "a3a15810-4dab-463b-a61b-bd826a64fb78",
    "prId" : 20061,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20061#pullrequestreview-102850081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30592264-539c-41df-9a27-bfc48599c665",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "not sure if the CI is actually running this?",
        "createdAt" : "2018-03-10T12:43:28Z",
        "updatedAt" : "2018-08-13T20:40:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fb5405a8d4fb1d5acfd215e5046bb091048b872",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@import os\nimport sys\n"
  },
  {
    "id" : "23c4e0d2-d0be-4dfc-9d89-e080d36ca2d3",
    "prId" : 20061,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20061#pullrequestreview-104067791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe21126-35ae-4f2d-954b-7be07f40325b",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I would try to split up some of those \"bad\" methods so each function is focused on 1 bad element, to be sure we are testing that.\r\n\r\nSo for example, the plot one above could be split up in:\r\n\r\n```\r\n    def test_missing_kwargs(self, kind, **kwargs):\r\n        \"\"\"\r\n        Kwargs argument is missing in parameters section.\r\n\r\n\r\n        Parameters\r\n        ----------\r\n        kind : str\r\n            Kind of matplotlib plot.\r\n        \"\"\"\r\n\r\n    def test_parameter_colon_spacing(self, kind):\r\n        \"\"\"\r\n        Space around colon is missing.\r\n\r\n        Parameters\r\n        ----------\r\n        kind: str\r\n            Kind of matplotlib plot.\r\n        \"\"\"\r\n\r\n    def test_parameter_description_period(self, kind):\r\n        \"\"\"\r\n        Parameter description does not end in a dot.\r\n\r\n        Parameters\r\n        ----------\r\n        kind : str\r\n            Kind of matplotlib plot\r\n        \"\"\"\r\n\r\n    def test_parameter_description_capital(self, kind):\r\n        \"\"\"\r\n        The parameter descriptions do not start with a capital.\r\n\r\n        Parameters\r\n        ----------\r\n        kind : str\r\n            kind of matplotlib plot.\r\n        \"\"\"\r\n\r\n    def test_parameter_blank_line(self, kind):\r\n        \"\"\"\r\n        Blank line between the parameters title and the first parameter. \r\n    \r\n        Parameters\r\n        ----------\r\n        \r\n        kind : str\r\n            Kind of matplotlib plot.\r\n        \"\"\"\r\n```\r\n",
        "createdAt" : "2018-03-14T11:16:58Z",
        "updatedAt" : "2018-08-13T20:40:09Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8388ba8f-9fd3-447a-90f7-a6773f213fb1",
        "parentId" : "abe21126-35ae-4f2d-954b-7be07f40325b",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Yes this is a great idea and what I envisioned for this module long term (would make it clearer the purpose of the tests). \r\n\r\nFor the initial change here I was just copying from the sprint docs, but I'll look how to integrate the above and any others that come to mind",
        "createdAt" : "2018-03-15T03:43:13Z",
        "updatedAt" : "2018-08-13T20:40:09Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fb5405a8d4fb1d5acfd215e5046bb091048b872",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +272,276 @@\n        kind: str\n            kind of matplotlib plot\n        \"\"\"\n        pass"
  },
  {
    "id" : "5391e350-7b60-488d-9e40-d7f5044efe7d",
    "prId" : 22413,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22413#pullrequestreview-148349911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e29f64c5-57f9-41b6-b6ea-4d6165177514",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Not sure if this causes an issue but from what I've tested locally if using the imperative skip `validate_docstrings` stays in globals as does the modification to system path. Perhaps we should ensure that code gets executed in the `except` block here?",
        "createdAt" : "2018-08-21T02:06:33Z",
        "updatedAt" : "2018-08-21T02:06:33Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "81ed8647-5396-4580-9a7c-0d1c76b9091e",
        "parentId" : "e29f64c5-57f9-41b6-b6ea-4d6165177514",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "* Fair point regarding system path modification.\r\n* Not sure how `validate_docstrings` stays in globals if the import fails in the first place...",
        "createdAt" : "2018-08-21T03:38:39Z",
        "updatedAt" : "2018-08-21T03:38:45Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "06db2bbd-5a76-4e62-abdf-b077b8d095c8",
        "parentId" : "e29f64c5-57f9-41b6-b6ea-4d6165177514",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@WillAyd : Addressed the change in follow-up (#22456)",
        "createdAt" : "2018-08-22T06:47:17Z",
        "updatedAt" : "2018-08-22T06:47:18Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "c14c540f33507e5468a702ac02b13f7563081b76",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +473,477 @@        except ImportError:\n            # Import will fail if the pandas installation is not inplace.\n            raise pytest.skip(\"pandas/scripts directory does not exist\")\n\n        yield"
  },
  {
    "id" : "e70929b6-5245-4844-993e-26f4016de258",
    "prId" : 22423,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22423#pullrequestreview-148634143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1444c5f6-4ebc-4c05-8a83-fd93ce84dabc",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I'm not sure about `versionadded` and `versionchanged`, but `deprecated` can have a description after if, for example:\r\n\r\n```\r\n          .. deprecated:: 0.21.0\r\n              Use :func:`pandas.read_csv` instead.\r\n```\r\n\r\nAnd it can be even multiline. Do you mind adding a test for that? I'm not sure if this is working with the current implementation.",
        "createdAt" : "2018-08-22T09:09:32Z",
        "updatedAt" : "2018-08-22T19:11:53Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "2a706c67-d9f1-40fd-af54-324a648da94e",
        "parentId" : "1444c5f6-4ebc-4c05-8a83-fd93ce84dabc",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "Also, if you check the `convert_datetime64` of `to_records`, there are cases where the directives come before the description. I'm happy if we consider only valid having them in one place (before or after the description). But, can we make the script generate a descriptive error for it? I guess with the current implementation we'll report that the parameter has no description.",
        "createdAt" : "2018-08-22T09:15:32Z",
        "updatedAt" : "2018-08-22T19:11:53Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "a006b823-9d07-4b71-b485-38c6a503dec6",
        "parentId" : "1444c5f6-4ebc-4c05-8a83-fd93ce84dabc",
        "authorId" : "72167df9-b9d8-48fe-86e7-ae160168d142",
        "body" : "I've added a test case for multi-line descriptions.\r\nDirective positioning is a bit more tricky. Enforcing them to be in one place would help, but the problem comes when trying to determine if text after the directive is directive description, or just generic parameter description. We need to make this distinction in order to produce a nice error message. \r\nThis is made harder by the fact that we're currently working with `doc_parameters`, which smooshes the whole description into one single-line string.",
        "createdAt" : "2018-08-22T19:20:31Z",
        "updatedAt" : "2018-08-22T19:20:31Z",
        "lastEditedBy" : "72167df9-b9d8-48fe-86e7-ae160168d142",
        "tags" : [
        ]
      },
      {
        "id" : "28677658-98b6-4fe3-9627-f1ab389895e2",
        "parentId" : "1444c5f6-4ebc-4c05-8a83-fd93ce84dabc",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think enforcement after description is fine. I think @datapythonista is correct in that it will generate an error, albeit with the wrong message. If we wanted to clean that up I'd suggest a separate PR, though @datapythonista I'll leave that decision up to you",
        "createdAt" : "2018-08-22T19:24:10Z",
        "updatedAt" : "2018-08-22T19:24:10Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3039d78adb395c8cc62fcf8cbe325cc7c1e7185b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +209,213 @@\n            .. versionadded:: 0.1.2\n            .. deprecated:: 0.00.0\n                A multiline description,\n                which spans another line."
  }
]