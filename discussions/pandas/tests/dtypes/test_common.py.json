[
  {
    "id" : "0f7c6067-4c16-42d4-b4ec-2758861690b0",
    "prId" : 16015,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16015#pullrequestreview-63228393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84c8738-dc3b-487d-ac9f-73d795d8d34c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "leave original ``pd.Categorical(['a', 'b']).dtype, CategoricalDtype())`` which should still work",
        "createdAt" : "2017-09-17T14:42:27Z",
        "updatedAt" : "2017-09-23T16:33:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f90cc13786b57b89709cdb7dd8d2c023adaee6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +550,554 @@    (pd.CategoricalIndex(['a', 'b']).dtype, CategoricalDtype(['a', 'b'])),\n    (pd.CategoricalIndex(['a', 'b']), CategoricalDtype(['a', 'b'])),\n    (CategoricalDtype(), CategoricalDtype()),\n    (CategoricalDtype(['a', 'b']), CategoricalDtype()),\n    (pd.DatetimeIndex([1, 2]), np.dtype('<M8[ns]')),"
  },
  {
    "id" : "6f097906-d076-4b8b-afe7-f66cf43522c2",
    "prId" : 16237,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16237#pullrequestreview-36394389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86c54e17-bccd-4b80-93df-d5c53e11a3b3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add CategoricalIndex",
        "createdAt" : "2017-05-04T21:30:49Z",
        "updatedAt" : "2017-05-04T21:36:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "361ff601-8dcd-4213-82ee-d5fc91a8fe14",
        "parentId" : "86c54e17-bccd-4b80-93df-d5c53e11a3b3",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I might have wanted to add this before you merged, but oh well, can do in follow-up.",
        "createdAt" : "2017-05-04T21:38:39Z",
        "updatedAt" : "2017-05-04T21:38:39Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5521101a30ff56bdd87b2ddfe0232860cebd5e1",
    "line" : 170,
    "diffHunk" : "@@ -1,1 +158,162 @@    cat = pd.Categorical([1, 2, 3])\n    assert com.is_categorical(cat)\n    assert com.is_categorical(pd.Series(cat))\n\n    assert not com.is_categorical([1, 2, 3])"
  },
  {
    "id" : "79218d19-ba44-4d62-b204-cdc364de38cc",
    "prId" : 16638,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16638#pullrequestreview-43279098",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77f297be-9b9b-4599-a9d0-a227c3f08c0c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "didn't you have 2 cases that trigger the exception? if so pls add the other one.",
        "createdAt" : "2017-06-09T22:50:39Z",
        "updatedAt" : "2017-07-05T14:53:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "67592648-f94c-40b6-ac01-77d123e0d09e",
        "parentId" : "77f297be-9b9b-4599-a9d0-a227c3f08c0c",
        "authorId" : "9e3f929f-a969-4da6-8303-b57eddc83f83",
        "body" : "Not that I am aware of. There is a separate issue I think were isnull would trigger an exception in the get_loc function. I don't see how that condition could be hit in the future.",
        "createdAt" : "2017-06-09T23:10:15Z",
        "updatedAt" : "2017-07-05T14:53:18Z",
        "lastEditedBy" : "9e3f929f-a969-4da6-8303-b57eddc83f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5f43a08898733e6cc58fe29a578267d81104534",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +205,209 @@    assert com.is_timedelta64_dtype(pd.Series([], dtype=\"timedelta64[ns]\"))\n\n    assert not com.is_timedelta64_dtype(\"0 days 00:00:00\")\n\n"
  },
  {
    "id" : "284b3a52-0282-443c-938c-f7f5f92c8c19",
    "prId" : 16887,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16887#pullrequestreview-49490182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "416b3aae-f413-476d-a53d-ee2f061828a8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what fixed this one?",
        "createdAt" : "2017-07-12T13:24:48Z",
        "updatedAt" : "2017-07-13T20:32:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f9f1df0e-4148-40dd-8a11-27c807ee726c",
        "parentId" : "416b3aae-f413-476d-a53d-ee2f061828a8",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "On both my system (Windows) and at try.jupyter.org (sys.platform is 'linux'), ``_get_dtype(str)`` returns ``np.dtype('<U')``. In the jenkins/appvoyeur,  it returns ``np.dtype('S')``. \r\n\r\nTo me it looks like a difference of how numpy is handled on different system and not a pandas issue. I therefore relax that test, to make it only check that ``_get_dtype(str) == np.dtype(str)``, which passes both locally and in the CI system.",
        "createdAt" : "2017-07-12T13:33:36Z",
        "updatedAt" : "2017-07-13T20:32:52Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "c5a54e6f-18d3-4975-99b2-4a6052cb8e71",
        "parentId" : "416b3aae-f413-476d-a53d-ee2f061828a8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, that looks like a py2/py3 thing. ok then. (you can maybe add a comment for that particular case)",
        "createdAt" : "2017-07-12T13:35:04Z",
        "updatedAt" : "2017-07-13T20:32:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "54da1458f45161f3c6215dbe4e53711bf73dca88",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +533,537 @@    ('float64', np.dtype('float64')),\n    (np.dtype('float64'), np.dtype('float64')),\n    (str, np.dtype(str)),\n    (pd.Series([1, 2], dtype=np.dtype('int16')), np.dtype('int16')),\n    (pd.Series(['a', 'b']), np.dtype(object)),"
  },
  {
    "id" : "c6456375-1c2a-4125-a9d6-425cd8ab6d13",
    "prId" : 16899,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16899#pullrequestreview-49646341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75a4fab5-f940-4736-9562-4f2e1a004d0b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a DTI with a tz",
        "createdAt" : "2017-07-12T23:24:15Z",
        "updatedAt" : "2017-07-20T11:59:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d39c3dfc80eedc3bf4347a51ede97b7d2e300177",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +588,592 @@    (pd.CategoricalIndex(['a', 'b']), com.CategoricalDtypeType),\n    (pd.DatetimeIndex([1, 2]), np.datetime64),\n    (pd.DatetimeIndex([1, 2]).dtype, np.datetime64),\n    ('<M8[ns]', np.datetime64),\n    (pd.DatetimeIndex([1, 2], tz='Europe/London'), com.DatetimeTZDtypeType),"
  },
  {
    "id" : "2d19abef-2189-4737-882f-61f83013eb34",
    "prId" : 20340,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20340#pullrequestreview-103762918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b4a542b-7750-4342-aa48-460a635d7383",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Not sure this test is actually necessary?  Split this off from the `test_invalid_dtype_error`, as it appears to be testing _valid_ instead of invalid dtypes.  Previously this didn't have any type of `assert` statement; it just called `pandas_dtype` and the test passed if no error was raised.",
        "createdAt" : "2018-03-14T06:04:36Z",
        "updatedAt" : "2018-03-15T07:51:22Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "95456d94-05af-4a0b-9865-edafaf210a04",
        "parentId" : "8b4a542b-7750-4342-aa48-460a635d7383",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah this is ok,  this is just testing that pandas_dtype doesn't raise on numpy dtypes",
        "createdAt" : "2018-03-14T10:33:21Z",
        "updatedAt" : "2018-03-15T07:51:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8933d3411256b8f15195068afb18b974eaeb69e7",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@        np.float64, float, np.dtype('float64')])\n    def test_pandas_dtype_valid(self, dtype):\n        assert com.pandas_dtype(dtype) == dtype\n\n    @pytest.mark.parametrize('dtype', ["
  },
  {
    "id" : "fbc1a9b5-17a5-44b1-863b-616ad85e764a",
    "prId" : 28492,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28492#pullrequestreview-293267379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75c6df77-bea3-466d-b8ef-c744048072f9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add an additional test for when dtype == object (which is the other path that hits M8 and m8)",
        "createdAt" : "2019-09-20T12:53:06Z",
        "updatedAt" : "2019-12-30T21:50:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b5516671-b9fa-4491-9b3d-8058b69f68a7",
        "parentId" : "75c6df77-bea3-466d-b8ef-c744048072f9",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "This would be a test separate from `test_astype_nansafe` to check that `NaT` is still null after casting to `object`?",
        "createdAt" : "2019-09-20T14:02:45Z",
        "updatedAt" : "2019-12-30T21:50:46Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      },
      {
        "id" : "0f9254c1-a76d-477c-92d4-8b0f9431654a",
        "parentId" : "75c6df77-bea3-466d-b8ef-c744048072f9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yep",
        "createdAt" : "2019-09-25T18:09:56Z",
        "updatedAt" : "2019-12-30T21:50:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "931e8c5e85046b1e87f89733bf9cde92134cb337",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +726,730 @@\n\n@pytest.mark.parametrize(\"val\", [np.datetime64(\"NaT\"), np.timedelta64(\"NaT\")])\n@pytest.mark.parametrize(\"typ\", [np.int64])\ndef test_astype_nansafe(val, typ):"
  },
  {
    "id" : "56f68a4b-982a-4e9d-b7db-9239bb4bb0d0",
    "prId" : 29549,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29549#pullrequestreview-315084860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb3a1f0c-20d3-407c-9442-9cc4f926f7b0",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I copy pasted the original `is_extension_type` to test `is_extension_array_dtype`, as that is going to replace it and was not yet tested here (so when cleaning this up, can simply remove the above `is_extension_type` test)",
        "createdAt" : "2019-11-11T18:45:01Z",
        "updatedAt" : "2019-11-11T18:45:02Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a80ebc75505cf0e84fa3509ea2fb16349360c27",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +583,587 @@    \"check_scipy\", [False, pytest.param(True, marks=td.skip_if_no_scipy)]\n)\ndef test_is_extension_array_dtype(check_scipy):\n    assert not com.is_extension_array_dtype([1, 2, 3])\n    assert not com.is_extension_array_dtype(np.array([1, 2, 3]))"
  }
]