[
  {
    "id" : "ff686f37-4645-4049-8a53-1c318c616f2a",
    "prId" : 25637,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25637#pullrequestreview-212686721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de015045-171a-460c-ae85-efc2d8f47279",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "handle null values in a separate clause to make this less compound",
        "createdAt" : "2019-03-10T22:03:21Z",
        "updatedAt" : "2019-06-21T06:15:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dc6ed562-af58-45a4-9b23-da4611593a35",
        "parentId" : "de015045-171a-460c-ae85-efc2d8f47279",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "OK",
        "createdAt" : "2019-03-11T07:29:50Z",
        "updatedAt" : "2019-06-21T06:15:41Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "636b1f18722fa6c4b7ffcf1d82ef134aa18398bd",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@\n    _safe_dtype_assert(result_dtype, expected_dtype)\n\n    # for equal values, also check type (relevant e.g. for int vs float, resp.\n    # for different datetimes and timedeltas)"
  },
  {
    "id" : "c7d2a3bb-3d8c-44a3-a5ac-ae0a26a004c5",
    "prId" : 28777,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28777#pullrequestreview-297576616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "046392f5-e075-46d6-8e96-29788a4f122f",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I guess for comprehensiveness should we also add unsigned `fill_value` values for a signed `dtype`? Looks like we have the other way around",
        "createdAt" : "2019-10-04T15:46:51Z",
        "updatedAt" : "2019-10-04T15:47:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "fd26f94f-e4eb-4bd9-b447-97607e32e022",
        "parentId" : "046392f5-e075-46d6-8e96-29788a4f122f",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Makes sense, but for the moment this is porting tests from one of @h-vetinariâ€™s PRs with minimal changes.",
        "createdAt" : "2019-10-04T16:10:52Z",
        "updatedAt" : "2019-10-04T16:10:52Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "930a81614eef6b4fe3e9d666b19278d3438eedd2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +169,173 @@        # size 8\n        (\"int8\", 1, \"int8\"),\n        (\"int8\", np.iinfo(\"int8\").max + 1, \"int16\"),\n        (\"int8\", np.iinfo(\"int16\").max + 1, \"int32\"),\n        (\"int8\", np.iinfo(\"int32\").max + 1, \"int64\"),"
  },
  {
    "id" : "3db46cc1-d3d2-4b3a-b44e-64e7b83391ec",
    "prId" : 28861,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28861#pullrequestreview-300648494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81a78ac7-745d-449f-89a7-65ac6db03c2c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "could enhance / make new test that uses an object here (e.g. list / tuple), IOW something that is treated similarly but is not also a numpy dtype. (future PR)",
        "createdAt" : "2019-10-11T12:24:18Z",
        "updatedAt" : "2019-10-11T12:24:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "43b329c86a830688c6f0fedac1284369855a4812",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +531,535 @@    boxed, box_dtype = box  # read from parametrized fixture\n\n    if not issubclass(dtype.type, np.bytes_):\n        if (\n            boxed"
  },
  {
    "id" : "9123d2a9-6862-4f3f-8e7e-9e79955e0f99",
    "prId" : 28864,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28864#pullrequestreview-299855145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdb1cff1-74b8-4a85-b692-706cf332ace8",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@h-vetinari did you find a nicer way to handle these?",
        "createdAt" : "2019-10-09T23:53:19Z",
        "updatedAt" : "2019-10-09T23:53:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "10d52949-b4a1-4cef-bc1a-2010140be1e6",
        "parentId" : "cdb1cff1-74b8-4a85-b692-706cf332ace8",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "No, I didn't have to deal with `ulonglong` (pretty sure that's platform-specific).",
        "createdAt" : "2019-10-10T07:04:40Z",
        "updatedAt" : "2019-10-10T07:05:06Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "703542b906d6b23206b3d269f11c8d9ab4cfa645",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +155,159 @@        # No idea why, but these (sometimes) do not compare as equal\n        assert ex_type.__name__ == \"uint64\"\n    elif res_type.__name__ == \"ulonglong\":\n        # On some builds we get this instead of np.uint64\n        # Note: cant check res_type.dtype.itemsize directly on numpy 1.18"
  },
  {
    "id" : "63ffb415-998b-460a-bf80-a9e019deb532",
    "prId" : 28864,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28864#pullrequestreview-299855145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c40b82ca-7c5a-4464-a978-6ff19eb42319",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "I believe this is numpy/numpy#12525 and [related issues](https://github.com/numpy/numpy/issues/12525#issuecomment-457727726)",
        "createdAt" : "2019-10-10T07:03:49Z",
        "updatedAt" : "2019-10-10T07:05:06Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "703542b906d6b23206b3d269f11c8d9ab4cfa645",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +153,157 @@    ex_type = type(expected_fill_value)\n    if res_type.__name__ == \"uint64\":\n        # No idea why, but these (sometimes) do not compare as equal\n        assert ex_type.__name__ == \"uint64\"\n    elif res_type.__name__ == \"ulonglong\":"
  }
]