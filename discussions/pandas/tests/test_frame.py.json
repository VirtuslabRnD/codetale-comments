[
  {
    "id" : "e71956e2-b303-4cca-adf2-87057f961920",
    "prId" : 4108,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0e4ff17-747e-4b52-886c-cd9a80e79d15",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@jreback FYI: this format isn't Python 3 compatible, better to use `except Exception as detail` and frankly you could collapse all of these lines into:\n\n``` python\nassertRaisesRegexp(TypeError, \"incompatible index of inserted column with frame index\", df.__setitem__, 'gr', df.groupby(['b', 'c']).count())\n```\n\nor \n\n``` python\ndef testit(): df['gr'] = df.groupby(['b', 'c']).count()\nassertRaisesRegexp(TypeError, \"incompatible index of inserted column with frame index\", testit)\n```\n",
        "createdAt" : "2013-07-03T01:55:58Z",
        "updatedAt" : "2013-07-03T01:55:58Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "ae4494c9-9359-4040-94cd-b50f898b3ac3",
        "parentId" : "f0e4ff17-747e-4b52-886c-cd9a80e79d15",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think 2to3 changes in any event\n\nthis test (and one above about constructor error msgs) should prob be changed then\n",
        "createdAt" : "2013-07-03T01:58:23Z",
        "updatedAt" : "2013-07-03T01:58:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "67c10cc2177581888b7ed323abb01b29280b7c3a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +2259,2263 @@        try:\n            df['gr'] = df.groupby(['b', 'c']).count()\n        except (Exception), detail:\n            msg = 'incompatible index of inserted column with frame index'\n            self.assert_(type(detail) == TypeError)"
  },
  {
    "id" : "e3a9c63f-65e3-4c33-831d-f2b4e6365bb6",
    "prId" : 4953,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f12bcf5-66cd-4f20-afbd-69ec585d3c78",
        "parentId" : null,
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "Maybe I've been confused by this statement (that bool comparisons always return bool?) This isn't #4947.... :s\n",
        "createdAt" : "2013-10-01T03:54:58Z",
        "updatedAt" : "2013-10-01T13:13:33Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "0de04598a0b6cd2bae447b8d0c920c5588c77baf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4525,4529 @@\n        # GH4947\n        # bool comparisons should return bool\n        result = d['a'] | d['b']\n        expected = Series([False, True])"
  },
  {
    "id" : "3e9f7583-1279-43d4-a216-9104c9b07be2",
    "prId" : 5740,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f7c8dcd-28ec-4125-bef6-6489a3460b0b",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "why is this test case here?\n",
        "createdAt" : "2013-12-19T06:02:42Z",
        "updatedAt" : "2014-02-17T07:56:29Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "9a7509bf-a632-421a-951f-d8533ebdf5b8",
        "parentId" : "5f7c8dcd-28ec-4125-bef6-6489a3460b0b",
        "authorId" : "413be534-cedb-4df7-abda-cde26db33acd",
        "body" : "there's a case below that tests an empty slice of dataframe with columns having different dtypes, I couldn't resist adding two more asserts just to be sure that the result matches that of non-empty slice.\n",
        "createdAt" : "2013-12-19T06:55:03Z",
        "updatedAt" : "2014-02-17T07:56:29Z",
        "lastEditedBy" : "413be534-cedb-4df7-abda-cde26db33acd",
        "tags" : [
        ]
      },
      {
        "id" : "de94b13b-6db4-4fcb-94e3-283ed6378865",
        "parentId" : "5f7c8dcd-28ec-4125-bef6-6489a3460b0b",
        "authorId" : "413be534-cedb-4df7-abda-cde26db33acd",
        "body" : "Revisiting this comment after an hour I think I might have misattributed the question to the beginning of `df` case, so just in case: tests concerning `nocols_df`, `norows_df` and `norows_int_df` are about empty dataframes (empty in a sense that they contain no actual data cells) and all returned garbage before patching `dtype`/`ftype` funcs. \n",
        "createdAt" : "2013-12-19T08:02:34Z",
        "updatedAt" : "2014-02-17T07:56:29Z",
        "lastEditedBy" : "413be534-cedb-4df7-abda-cde26db33acd",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfa8ec01c919e52785f9840fd3913aadf8521ff3",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +12183,12187 @@\n        odict = OrderedDict\n        df = pd.DataFrame(odict([('a', 1), ('b', True), ('c', 1.0)]), index=[1, 2, 3])\n        assert_series_equal(df.dtypes, pd.Series(odict([('a', np.int64),\n                                                        ('b', np.bool),"
  },
  {
    "id" : "0ebf4f92-f548-4f1e-ab34-d9187228aaa6",
    "prId" : 5740,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "188e212c-ab1d-4d01-aa84-e0f3cea5ec46",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@jreback does this make sense? dtype's just going to change once you assign something anyways, no?\n",
        "createdAt" : "2013-12-19T12:53:10Z",
        "updatedAt" : "2014-02-17T07:56:29Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "2f13668a-a355-4021-bddb-121cb37fb6b8",
        "parentId" : "188e212c-ab1d-4d01-aa84-e0f3cea5ec46",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine; yes dtype will change once you assign something\n",
        "createdAt" : "2013-12-19T13:26:47Z",
        "updatedAt" : "2014-02-17T07:56:29Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfa8ec01c919e52785f9840fd3913aadf8521ff3",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +12179,12183 @@\n        norows_int_df = pd.DataFrame(columns=list(\"abc\")).astype(np.int32)\n        assert_series_equal(norows_int_df.dtypes, pd.Series(np.dtype('int32'), index=list(\"abc\")))\n        assert_series_equal(norows_int_df.ftypes, pd.Series('int32:dense', index=list(\"abc\")))\n"
  }
]