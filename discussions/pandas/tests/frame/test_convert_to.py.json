[
  {
    "id" : "bedc4937-2caa-4527-b396-3724e4e8e976",
    "prId" : 16220,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16220#pullrequestreview-37470510",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6363d758-9c2a-4cdf-b3ff-5f435a2a6279",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This may be tested elsewhere, but can you add a test with a dataframe that has duplicate columns? Make sure to catch the warning.",
        "createdAt" : "2017-05-08T11:53:21Z",
        "updatedAt" : "2017-05-16T01:02:05Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "d8339033-10d6-4d44-9812-0362ecc23b06",
        "parentId" : "6363d758-9c2a-4cdf-b3ff-5f435a2a6279",
        "authorId" : "3fc1a010-62f4-43c5-a9a3-a504c5d35eb4",
        "body" : "Done - I added one at the end.  Let me know if that is what you were getting at.",
        "createdAt" : "2017-05-11T02:05:17Z",
        "updatedAt" : "2017-05-16T01:02:05Z",
        "lastEditedBy" : "3fc1a010-62f4-43c5-a9a3-a504c5d35eb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8469977d6e582aeeeff5a523ade0e14fba937ecd",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +152,156 @@        collections.defaultdict(list),\n        collections.OrderedDict])\n    def test_to_dict(self, mapping):\n        test_data = {\n            'A': {'1': 1, '2': 2},"
  },
  {
    "id" : "d26be574-2e06-473a-ae73-4a5891ac12ff",
    "prId" : 16220,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16220#pullrequestreview-37738617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d7b74b1-17d1-44c2-9d9a-138cf7d23b7e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would also add a test that hits some of the errors people might encounter (you do check these in the testing of standardize_mapping), but this is an integration test. you can put a test right after this, maybe ``test_to_dict_errors``",
        "createdAt" : "2017-05-11T11:30:04Z",
        "updatedAt" : "2017-05-16T01:02:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "139f774d-4f68-488b-89bf-e5001bd4cef8",
        "parentId" : "4d7b74b1-17d1-44c2-9d9a-138cf7d23b7e",
        "authorId" : "3fc1a010-62f4-43c5-a9a3-a504c5d35eb4",
        "body" : "Added this test - made sure the `TypeError`s were caught.  Let me know if you think anything else should go in there.",
        "createdAt" : "2017-05-12T01:37:31Z",
        "updatedAt" : "2017-05-16T01:02:05Z",
        "lastEditedBy" : "3fc1a010-62f4-43c5-a9a3-a504c5d35eb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8469977d6e582aeeeff5a523ade0e14fba937ecd",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +205,209 @@        for k, v in compat.iteritems(comp_data):\n            for k2, v2 in compat.iteritems(v):\n                assert (v2 == recons_data[k2][k])\n\n    @pytest.mark.parametrize('mapping', ["
  },
  {
    "id" : "b41fcbe9-dcc2-4287-8349-92051cdb0dca",
    "prId" : 22229,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22229#pullrequestreview-145185383",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa8ac259-971b-4755-9739-1e494909e0b9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so test with strings, unicode, bytes",
        "createdAt" : "2018-08-10T10:24:00Z",
        "updatedAt" : "2018-12-30T21:00:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec69fe0b4a98b7e21463ec1ceb6a3eaeed9cc96f",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +329,333 @@            def keys(self):\n                return self.d.keys()\n\n        df = DataFrame({\"A\": [1, 2], \"B\": [0.2, 1.5], \"C\": [\"a\", \"bc\"]})\n"
  },
  {
    "id" : "6123664f-813b-4c10-b84d-3d44c5964edd",
    "prId" : 22810,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22810#pullrequestreview-160452482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5410c47f-e3f9-4c7d-9bca-e0b9f4c88670",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number as a comment",
        "createdAt" : "2018-09-23T12:16:58Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "224a379d-8aa5-4105-b4f6-e645177d944b",
        "parentId" : "5410c47f-e3f9-4c7d-9bca-e0b9f4c88670",
        "authorId" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "body" : "Added.",
        "createdAt" : "2018-10-01T19:37:28Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec0749fe531940b8e57ccf4b0299d5937a6450",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +75,79 @@        # GH22801\n        # Data loss when indexes are not unique. Raise ValueError.\n        df = DataFrame({'a': [1, 2], 'b': [0.5, 0.75]}, index=['A', 'A'])\n        pytest.raises(ValueError, df.to_dict, orient='index')\n"
  },
  {
    "id" : "2c3c0f48-eebe-4525-8051-d189c8a25388",
    "prId" : 22810,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22810#pullrequestreview-160449539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this raise only happening on orient='index' or other orients as well?",
        "createdAt" : "2018-09-25T12:26:56Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "23ed9822-3e1a-4c5f-b8c8-6145162d99e4",
        "parentId" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "authorId" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "body" : "Yes",
        "createdAt" : "2018-09-25T21:17:50Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "tags" : [
        ]
      },
      {
        "id" : "4bb49430-6f1a-43ff-a4d3-a5019ad951bb",
        "parentId" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you parametrize this function to test all of the orients? FWIW this probably should be allowed with `orient=\"table\"` so curious how that behaves",
        "createdAt" : "2018-09-27T19:45:02Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "1575078a-4ffc-42ae-bac9-1bf1251f5b31",
        "parentId" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "authorId" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "body" : "@WillAyd can you point me at a good example test?",
        "createdAt" : "2018-10-01T19:22:48Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "740cd865-fe15-4bfd-ab36-81a7ac78cd52",
        "tags" : [
        ]
      },
      {
        "id" : "75613376-108f-48bd-be1a-b0e396463335",
        "parentId" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Check out any of the other tests in this module which are decorated with `@pytest.mark.parametrize` - you should be able to do something similar with `orient` parametrized with the various values (`index`, `table`, etc...)",
        "createdAt" : "2018-10-01T19:25:52Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "d768b7f2-eddd-4e0d-abea-eacffa9288a4",
        "parentId" : "1f3966f2-9f01-4f87-b32c-f0b048c64920",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm nevermind - I suppose this change is only applicable to `index` orients given that's the only one with the index value as a key of the dict",
        "createdAt" : "2018-10-01T19:29:11Z",
        "updatedAt" : "2018-10-11T02:52:30Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aec0749fe531940b8e57ccf4b0299d5937a6450",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +72,76 @@                             expected_split_mixed)\n\n    def test_to_dict_index_not_unique_with_index_orient(self):\n        # GH22801\n        # Data loss when indexes are not unique. Raise ValueError."
  },
  {
    "id" : "281bd074-24af-4cab-b74f-80675d21a15a",
    "prId" : 23921,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23921#pullrequestreview-178496563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b37247-1812-48da-ae8f-59550a739044",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Ah, that's definitely one way to parameterize ðŸ™‚ \r\n\r\nCould you reformat for readability so that it looks something like this:\r\n\r\n~~~python\r\n@pytest.mark.parametrize('orient,item_getter', [\r\n    ('dict', lambda d, col, idx: d[col][idx]),\r\n    # etc.\r\n~~~\r\n\r\nAlso, comment above the decorator here explaining what these parameters mean.",
        "createdAt" : "2018-11-26T20:56:54Z",
        "updatedAt" : "2018-11-28T15:07:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f2d1350c33b57c9c8d06bf0fac4f55718f632c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +291,295 @@        ('split', lambda d, col, idx: d['data'][idx][d['columns'].index(col)]),\n        ('index', lambda d, col, idx: d[idx][col])\n    ])\n    def test_to_dict_box_scalars(self, orient, item_getter):\n        # 14216, 23753"
  }
]