[
  {
    "id" : "c4b4a300-f41d-4d70-81ab-8716b2bfc163",
    "prId" : 18529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18529#pullrequestreview-91703936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8652f819-ca15-41e2-8ee8-10b8569d0b04",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "It seems that some of the dataframe constructors don't allow duplicated columns while others do so I had to change the ``from_items`` in this test to ``from_records`` and ``from_dict(OrderedDict())`` to get the test passing. But I'm not sure if it still tests for the original issue correctly (#2079)\r\n\r\nAll of the other tests in this file using ``from_items`` are directly testing ``from_items`` so I left the check for the deprecation warning rather than trying to replace ``from_items`` with a different constructor.",
        "createdAt" : "2018-01-25T23:09:10Z",
        "updatedAt" : "2018-01-30T22:34:20Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1838f65bf8ede9b83c3e227b95e50dde3abf4920",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +1284,1288 @@        tm.assert_frame_equal(df, edf)\n\n        idf = DataFrame.from_records([(8, 5)],\n                                     columns=['a', 'a'])\n"
  },
  {
    "id" : "d5870147-8fdb-46ab-bf2e-08c14092fd5d",
    "prId" : 18600,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18600#pullrequestreview-95661287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this changing?",
        "createdAt" : "2018-02-05T11:21:30Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1e7d63d5-412b-4fea-8259-1ae03d8bcd12",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "Because it was wrong: an ``int`` should not upcast to ``object`` (the passed dtype is currently not considered). issue? whatsnew?",
        "createdAt" : "2018-02-05T14:33:20Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "770267c9-5b5b-487b-af7f-1e8213f9af90",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, yeah this looks suspect. I would make a new issue for this",
        "createdAt" : "2018-02-10T17:31:19Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "054ca351-f7cb-41ed-9112-06bd4783068c",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "#19646",
        "createdAt" : "2018-02-11T16:29:33Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "22701fcf9e2f9daae4020d50af1ff9042803691b",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +796,800 @@        # does not error but ends up float\n        df = DataFrame(index=lrange(10), columns=['a', 'b'], dtype=int)\n        assert df.values.dtype == np.dtype('float64')\n\n        # #1783 empty dtype object"
  },
  {
    "id" : "aa19a6fd-a9c9-411f-8a47-4b2bf6f1c027",
    "prId" : 21987,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21987#pullrequestreview-139304097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f79fd88-0fe8-47df-9a7f-ac2630fa7903",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Reference the issue number in a comment below the functional definition.\r\n\r\nApplies to all newly-added tests.",
        "createdAt" : "2018-07-22T22:46:31Z",
        "updatedAt" : "2018-07-25T11:33:03Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ace52186f418fd2a3371df484ec827b97c2c43",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +958,962 @@        result = DataFrame(Iter())\n        tm.assert_frame_equal(result, expected)\n\n    def test_constructor_iterator(self):\n"
  },
  {
    "id" : "a10b01e1-545a-4554-bc63-095b0deb9bc1",
    "prId" : 22963,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22963#pullrequestreview-161436751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18695515-f507-4e48-a0cd-ee4c3e74dc7d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u rename ans -> expected",
        "createdAt" : "2018-10-04T03:33:13Z",
        "updatedAt" : "2018-10-04T04:05:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7efa9d32cd12eab92306411ac80624908b49128",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +804,808 @@\n    @pytest.mark.parametrize(\"data, index, columns, dtype, expected\", [\n        (None, lrange(10), ['a', 'b'], object, np.object_),\n        (None, None, ['a', 'b'], 'int64', np.dtype('int64')),\n        (None, lrange(10), ['a', 'b'], int, np.dtype('float64')),"
  },
  {
    "id" : "2e97a347-f69e-4416-8643-0b1da75a3a3b",
    "prId" : 23796,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23796#pullrequestreview-177433362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4216061-52e9-4cbe-af4f-38c60c842e6e",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Not sure if this *ancient* code path (that has been commented out since forever) is worth keeping. It's failing on `PY2`, passing on `PY3`",
        "createdAt" : "2018-11-21T21:22:35Z",
        "updatedAt" : "2018-11-25T13:01:37Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce5bd94125310571c6ca9cfa3ab4aed31b49dcde",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +167,171 @@        if PY3:\n            # unicode error under PY2\n            rec.dtype.names = list(rec.dtype.names)[::-1]\n\n        index = self.frame.index"
  },
  {
    "id" : "a86b12bb-64b2-4a22-a369-8676a981911f",
    "prId" : 25089,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25089#pullrequestreview-199803861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8f335a0-347b-4f8a-863b-601b07f5538f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number as a comment",
        "createdAt" : "2019-02-04T21:01:05Z",
        "updatedAt" : "2019-02-05T05:04:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e424effd3976eb1734a74a40bbae126daffbf62",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1186,1190 @@    def test_constructor_mixed_type_rows(self):\n        # Issue 25075\n        data = [[1, 2], (3, 4)]\n        result = DataFrame(data)\n        expected = DataFrame([[1, 2], [3, 4]])"
  },
  {
    "id" : "ee7b0257-4c95-4c6c-a253-d1e9fe632dda",
    "prId" : 26343,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26343#pullrequestreview-236390273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc407406-c619-4945-8eae-ae0c5abe3567",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I would reference the issue as a comment above this line as well.",
        "createdAt" : "2019-05-11T18:05:24Z",
        "updatedAt" : "2019-05-12T12:19:25Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "37a0dec3-4678-49dd-9314-1c48d0f47b08",
        "parentId" : "fc407406-c619-4945-8eae-ae0c5abe3567",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Oh, this is just an existing test that has been moved. It already passed before this PR.",
        "createdAt" : "2019-05-11T19:43:42Z",
        "updatedAt" : "2019-05-12T12:19:25Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "96706f0534d2a3ab777c355909bb7e68d3912175",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1009,1013 @@\n    def test_constructor_list_of_ranges(self):\n        result = DataFrame([range(10), range(10)])\n        expected = DataFrame([list(range(10)), list(range(10))])\n        tm.assert_frame_equal(result, expected)"
  },
  {
    "id" : "d1227027-34d4-45a0-8668-c0ba70cc0123",
    "prId" : 26356,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26356#pullrequestreview-236424926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba1af79-8be3-4a03-833c-b270d31945de",
        "parentId" : null,
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "This worked in master, but I just added this test as ensurance against problems like in #26342",
        "createdAt" : "2019-05-12T15:47:25Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "29834d7bd71761a379684ce2715993e9a962b67f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +537,541 @@        # GH 26356\n        data = {'a': range(3), 'b': range(3, 6)}\n\n        result = DataFrame(data)\n        expected = DataFrame({'a': [0, 1, 2], 'b': [3, 4, 5]})"
  },
  {
    "id" : "f9a3b06d-1c6b-4841-a5b1-93675d3bdbf5",
    "prId" : 26356,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26356#pullrequestreview-239210266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1194302-74ff-4b2f-8eb0-b51d598f7fe1",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "might be worth using `range(2, -1, -1)` for b so that the expected is the same for all three tests.",
        "createdAt" : "2019-05-18T00:01:55Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "d640ba7a-9341-485a-a77a-2b14bb9369fa",
        "parentId" : "b1194302-74ff-4b2f-8eb0-b51d598f7fe1",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Hi,\r\n\r\nI did it this way to by copying ``test_constructor_dict_of_tuples`` just above. Probably not worth it to align all of these styles, though in principle it would be clearer IMO.",
        "createdAt" : "2019-05-18T19:14:18Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      },
      {
        "id" : "054018b1-c40d-4fa0-a4f0-8dedb78f2bcd",
        "parentId" : "b1194302-74ff-4b2f-8eb0-b51d598f7fe1",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "the reason i mentioned it is that it would make parametrization easier. either in this PR or a follow-on. you could potentially then parametrize `a` and `b` independently to create the cartesian product (not sure if this would work simply with generators or whether they would be exhausted) and then add in list, tuple, series and index for completeness. this would ensure that the independence of the column parsing for each item in the dictionary.",
        "createdAt" : "2019-05-18T19:23:34Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "74be17eb-c75c-44bc-8b4a-42df1bb4e4a3",
        "parentId" : "b1194302-74ff-4b2f-8eb0-b51d598f7fe1",
        "authorId" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "body" : "Agree this would be a good issue for a follow-up. This module looks like it is from before Pandas switched to pytest, so parametrization could make things clearer.",
        "createdAt" : "2019-05-18T19:38:27Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "c2e7df75-d1fb-42be-9205-186b46cef3d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "29834d7bd71761a379684ce2715993e9a962b67f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +536,540 @@    def test_constructor_dict_of_ranges(self):\n        # GH 26356\n        data = {'a': range(3), 'b': range(3, 6)}\n\n        result = DataFrame(data)"
  },
  {
    "id" : "105b4ff1-3bc2-4dde-9fdf-8d5e58112f95",
    "prId" : 26356,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26356#pullrequestreview-239201554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4a484f5-4a4e-483b-930f-f07ef3384b97",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number",
        "createdAt" : "2019-05-18T15:07:56Z",
        "updatedAt" : "2019-05-19T20:06:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "29834d7bd71761a379684ce2715993e9a962b67f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +536,540 @@    def test_constructor_dict_of_ranges(self):\n        # GH 26356\n        data = {'a': range(3), 'b': range(3, 6)}\n\n        result = DataFrame(data)"
  },
  {
    "id" : "d9fe799e-e385-4cbf-bfdf-9a3d4b59d97c",
    "prId" : 27309,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27309#pullrequestreview-259680571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e0c45da-e763-458b-8b6f-f954b22d2769",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "What is the order here if YYY precedes Second? Somewhat wary of making assertions about ordering in 2D ",
        "createdAt" : "2019-07-09T17:55:45Z",
        "updatedAt" : "2019-07-16T00:14:05Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "8f576da8-d976-4256-824f-ccf8363dc99f",
        "parentId" : "7e0c45da-e763-458b-8b6f-f954b22d2769",
        "authorId" : null,
        "body" : "Sorry. `XXXX` and `YYYY` will appear after every column included in the first dict. Other than that,  their respective order is undefined.",
        "createdAt" : "2019-07-09T18:14:30Z",
        "updatedAt" : "2019-07-16T00:14:05Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "4592c169-e3d2-40c6-b414-a20478b66f29",
        "parentId" : "7e0c45da-e763-458b-8b6f-f954b22d2769",
        "authorId" : "0c662bd8-117d-4fae-ac4a-91ec3c9dc4d7",
        "body" : "yeah, it's tricky... as mentioned in my general comment, we could probably use `dict.update()` as a guide. As I understand it the guiding principle is insertion order - whatever is inserted first stays where it is. You don't have to deal with reordering things that were already inserted, just tack the new keys on to the end in the order you get them.",
        "createdAt" : "2019-07-09T18:14:39Z",
        "updatedAt" : "2019-07-16T00:14:05Z",
        "lastEditedBy" : "0c662bd8-117d-4fae-ac4a-91ec3c9dc4d7",
        "tags" : [
        ]
      },
      {
        "id" : "e92a9273-d4f2-48c8-931f-d52b2fca45e9",
        "parentId" : "7e0c45da-e763-458b-8b6f-f954b22d2769",
        "authorId" : null,
        "body" : "btw, I really appreciate how responsive you are to PRs. Just wanted to say thank you.",
        "createdAt" : "2019-07-09T18:23:32Z",
        "updatedAt" : "2019-07-16T00:14:05Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "0d194f1047984df534382b7a7b66885fe784ae3b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1346,1350 @@            {\"First\": 1, \"Second\": 4, \"Third\": 7, \"Fourth\": 10},\n            {\"Second\": 5, \"First\": 2, \"Fourth\": 11, \"Third\": 8},\n            {\"Second\": 6, \"First\": 3, \"Fourth\": 12, \"Third\": 9, \"YYY\": 14, \"XXX\": 13},\n        ]\n        expected = DataFrame("
  },
  {
    "id" : "cbc25abe-f58a-4bed-ad0c-bc56b9ef14ae",
    "prId" : 27309,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27309#pullrequestreview-260888620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0af2cecf-5f03-4204-9dc5-66ea61251d35",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I think XXX and YYY need to be switched in order? (to match the input data)",
        "createdAt" : "2019-07-11T18:50:18Z",
        "updatedAt" : "2019-07-16T00:14:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d194f1047984df534382b7a7b66885fe784ae3b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1354,1358 @@                \"Third\": [7, 8, 9],\n                \"Fourth\": [10, 11, 12],\n                \"YYY\": [None, None, 14],\n                \"XXX\": [None, None, 13],\n            }"
  },
  {
    "id" : "ca7fcaa6-7dd8-4ea0-92f9-4f5672b33d2b",
    "prId" : 27999,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27999#pullrequestreview-285154734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e2c93df-982b-42fd-af6f-d2e4acf9fbe0",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Could you make this a separate test?",
        "createdAt" : "2019-08-30T18:13:52Z",
        "updatedAt" : "2020-03-14T23:03:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c1ebe23c-2452-422c-b801-773d41998320",
        "parentId" : "6e2c93df-982b-42fd-af6f-d2e4acf9fbe0",
        "authorId" : "e141fe89-fd1b-4c99-8661-8ba876236c93",
        "body" : "I split the tests into 3 different tests",
        "createdAt" : "2019-09-07T03:49:17Z",
        "updatedAt" : "2020-03-14T23:03:44Z",
        "lastEditedBy" : "e141fe89-fd1b-4c99-8661-8ba876236c93",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8fa453c87863d674959bba4fccc238b7b320cff",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1382,1386 @@        from dataclasses import make_dataclass\n\n        # varying types\n        Point = make_dataclass(\"Point\", [(\"x\", int), (\"y\", int)])\n        HLine = make_dataclass(\"HLine\", [(\"x0\", int), (\"x1\", int), (\"y\", int)])"
  },
  {
    "id" : "86e18fd3-71ac-468c-825a-84c1a8a77650",
    "prId" : 27999,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27999#pullrequestreview-285608326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07924c16-7d61-45a9-980d-b665df6ae0b1",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Sorry didn't notice this tucked away here so ignore comment asking to add, but typically for things that raise we create them as a separate test. So would be better to break this off into a test called `test_constructor_dataclass_with_others_raises` or something to the effect",
        "createdAt" : "2019-08-30T18:19:25Z",
        "updatedAt" : "2020-03-14T23:03:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b5f92572-c672-4bcc-a165-63fb6b698534",
        "parentId" : "07924c16-7d61-45a9-980d-b665df6ae0b1",
        "authorId" : "e141fe89-fd1b-4c99-8661-8ba876236c93",
        "body" : "I did as asked",
        "createdAt" : "2019-09-07T03:49:41Z",
        "updatedAt" : "2020-03-14T23:03:44Z",
        "lastEditedBy" : "e141fe89-fd1b-4c99-8661-8ba876236c93",
        "tags" : [
        ]
      },
      {
        "id" : "5b506015-380c-4e86-8254-aca2c1df4860",
        "parentId" : "07924c16-7d61-45a9-980d-b665df6ae0b1",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think Point isn't defined anymore. Can you move the definition of those to somewhere else? Probably just at the top of this file, not sure.",
        "createdAt" : "2019-09-09T15:53:58Z",
        "updatedAt" : "2020-03-14T23:03:44Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8fa453c87863d674959bba4fccc238b7b320cff",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1402,1406 @@\n        # expect TypeError\n        with pytest.raises(TypeError):\n            DataFrame([Point(0, 0), {\"x\": 1, \"y\": 0}])\n"
  },
  {
    "id" : "e54f42c6-e3f8-4078-a80d-b5449dd25563",
    "prId" : 30222,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30222#pullrequestreview-331520338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "572dc447-afd6-4846-ae65-ad989ac424c5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can parameterize (later ok too)",
        "createdAt" : "2019-12-12T13:24:38Z",
        "updatedAt" : "2019-12-12T18:25:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ce81fa90-dc3c-4947-bcab-a7addfccedcf",
        "parentId" : "572dc447-afd6-4846-ae65-ad989ac424c5",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jbrockmendel : do you plan on addressing this here or later?",
        "createdAt" : "2019-12-12T19:57:17Z",
        "updatedAt" : "2019-12-12T19:57:17Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "c1b9bd54-6bac-4313-befa-f6865c5e96b0",
        "parentId" : "572dc447-afd6-4846-ae65-ad989ac424c5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "later",
        "createdAt" : "2019-12-12T20:58:10Z",
        "updatedAt" : "2019-12-12T20:58:11Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce531f7b2a386fc449f0c9cdc7fe27e5baa2f6fa",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1726,1730 @@        tm.assert_frame_equal(df, expected)\n\n    def test_constructor_datetimes_with_nulls(self):\n        # gh-15869, GH#11220\n        for arr in ["
  },
  {
    "id" : "7a1263a7-9e53-4e72-9296-28cd458cbaa7",
    "prId" : 30507,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30507#pullrequestreview-337469710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1594c3c6-7730-490b-932a-09d5bef473e7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make this test more generic and add to the EA tests instead (followup ok)",
        "createdAt" : "2020-01-01T03:16:35Z",
        "updatedAt" : "2020-01-01T03:22:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e408206450a4289855c0515ee6be31f7836be40f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2553,2557 @@        assert (res.dtypes == expected_dtypes).all()\n\n    def test_from_2d_ndarray_with_dtype(self):\n        # GH#12513\n        array_dim2 = np.arange(10).reshape((5, 2))"
  }
]