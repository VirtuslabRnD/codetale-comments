[
  {
    "id" : "c4b4a300-f41d-4d70-81ab-8716b2bfc163",
    "prId" : 18529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18529#pullrequestreview-91703936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8652f819-ca15-41e2-8ee8-10b8569d0b04",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "It seems that some of the dataframe constructors don't allow duplicated columns while others do so I had to change the ``from_items`` in this test to ``from_records`` and ``from_dict(OrderedDict())`` to get the test passing. But I'm not sure if it still tests for the original issue correctly (#2079)\r\n\r\nAll of the other tests in this file using ``from_items`` are directly testing ``from_items`` so I left the check for the deprecation warning rather than trying to replace ``from_items`` with a different constructor.",
        "createdAt" : "2018-01-25T23:09:10Z",
        "updatedAt" : "2018-01-30T22:34:20Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "1838f65bf8ede9b83c3e227b95e50dde3abf4920",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +1284,1288 @@        tm.assert_frame_equal(df, edf)\n\n        idf = DataFrame.from_records([(8, 5)],\n                                     columns=['a', 'a'])\n"
  },
  {
    "id" : "d5870147-8fdb-46ab-bf2e-08c14092fd5d",
    "prId" : 18600,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18600#pullrequestreview-95661287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this changing?",
        "createdAt" : "2018-02-05T11:21:30Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1e7d63d5-412b-4fea-8259-1ae03d8bcd12",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "Because it was wrong: an ``int`` should not upcast to ``object`` (the passed dtype is currently not considered). issue? whatsnew?",
        "createdAt" : "2018-02-05T14:33:20Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "770267c9-5b5b-487b-af7f-1e8213f9af90",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, yeah this looks suspect. I would make a new issue for this",
        "createdAt" : "2018-02-10T17:31:19Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "054ca351-f7cb-41ed-9112-06bd4783068c",
        "parentId" : "8d4750d7-e761-4359-8188-b0f6ce49443d",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "#19646",
        "createdAt" : "2018-02-11T16:29:33Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "22701fcf9e2f9daae4020d50af1ff9042803691b",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +796,800 @@        # does not error but ends up float\n        df = DataFrame(index=lrange(10), columns=['a', 'b'], dtype=int)\n        assert df.values.dtype == np.dtype('float64')\n\n        # #1783 empty dtype object"
  },
  {
    "id" : "aa19a6fd-a9c9-411f-8a47-4b2bf6f1c027",
    "prId" : 21987,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21987#pullrequestreview-139304097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f79fd88-0fe8-47df-9a7f-ac2630fa7903",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Reference the issue number in a comment below the functional definition.\r\n\r\nApplies to all newly-added tests.",
        "createdAt" : "2018-07-22T22:46:31Z",
        "updatedAt" : "2018-07-25T11:33:03Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ace52186f418fd2a3371df484ec827b97c2c43",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +958,962 @@        result = DataFrame(Iter())\n        tm.assert_frame_equal(result, expected)\n\n    def test_constructor_iterator(self):\n"
  }
]