[
  {
    "id" : "5ad2f2d3-06fa-481d-ba32-961fe33f7fcf",
    "prId" : 19611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19611#pullrequestreview-97308205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4164a6dc-0b0d-448b-96b6-30313e7ce853",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this represent a change in user facing API?",
        "createdAt" : "2018-02-16T18:38:51Z",
        "updatedAt" : "2018-02-16T23:34:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "598fb322-740e-4cdb-af13-a1fab1b6d9ca",
        "parentId" : "4164a6dc-0b0d-448b-96b6-30313e7ce853",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "No, just a case that is not currently tested.  I made a mistake in an early commit in this PR; this test would have caught it.",
        "createdAt" : "2018-02-16T20:33:10Z",
        "updatedAt" : "2018-02-16T23:34:20Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "118cd5d47ea025aad5e5759ea0a34cf86e0a390a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +74,78 @@\nclass TestFrameFlexArithmetic(object):\n    def test_df_add_flex_filled_mixed_dtypes(self):\n        # GH#19611\n        dti = pd.date_range('2016-01-01', periods=3)"
  },
  {
    "id" : "05e3ea6c-c401-49e9-babf-35ccd95ae9df",
    "prId" : 22267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22267#pullrequestreview-145052952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7026d1ab-1673-4c5b-b1b5-88388d14b58b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "woa needs parametrization big time :>",
        "createdAt" : "2018-08-09T22:41:21Z",
        "updatedAt" : "2018-08-09T22:42:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e627203a-fd7a-4bc5-b980-dd0bc131e54f",
        "parentId" : "7026d1ab-1673-4c5b-b1b5-88388d14b58b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Very much so.",
        "createdAt" : "2018-08-09T22:43:55Z",
        "updatedAt" : "2018-08-09T22:43:56Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18ba2e9652d2a2cca6023f5bcd91a18ee92224d",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +111,115 @@            aliases = {'div': 'truediv'}\n\n        for op in ops:\n            try:\n                alias = aliases.get(op, op)"
  },
  {
    "id" : "e6ecb31e-53ed-4a05-b3e8-85b92f03ae35",
    "prId" : 22267,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22267#pullrequestreview-145053778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d99de1b-e733-4d96-b6e8-a436b52afbb4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "aren't you moving things *to* ``pandas/tests/arithmetic`` ?  ",
        "createdAt" : "2018-08-09T22:41:58Z",
        "updatedAt" : "2018-08-09T22:42:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "24a6ec20-4696-4da9-9361-97fd0c5f0cf3",
        "parentId" : "2d99de1b-e733-4d96-b6e8-a436b52afbb4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "The focus is on tests that can be shared across Index/Series/DataFrame(/EA).  `flex` ops don't satisfy that criterion.",
        "createdAt" : "2018-08-09T22:45:05Z",
        "updatedAt" : "2018-08-09T22:45:05Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d7edab4a-dbf7-48fa-a479-01313bc75ab8",
        "parentId" : "2d99de1b-e733-4d96-b6e8-a436b52afbb4",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "In case unclear, the tests added to tests.frame.test_arithmetic were moved from tests.frame.test_operators; so this is a strictly better location.",
        "createdAt" : "2018-08-09T22:45:46Z",
        "updatedAt" : "2018-08-09T22:45:46Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "92114b04-80f8-4b6d-ae3c-fe9295512b3f",
        "parentId" : "2d99de1b-e733-4d96-b6e8-a436b52afbb4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah its ok.",
        "createdAt" : "2018-08-09T22:47:52Z",
        "updatedAt" : "2018-08-09T22:47:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f18ba2e9652d2a2cca6023f5bcd91a18ee92224d",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@# -*- coding: utf-8 -*-\nimport operator\n\nimport pytest"
  },
  {
    "id" : "25a91410-1260-4c70-8691-7ee083fbb7e0",
    "prId" : 22694,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22694#pullrequestreview-155711883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "431edfc4-e907-408a-8e26-fbfcea230610",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I generally prefer that the `expected` be as explicit as possible i.e., write out the actual result of those \"sums\" instead of the expression.  You can add a comment if needed to describe that we expected `dti + tdi` and `tdi + tdi`.",
        "createdAt" : "2018-09-14T04:50:34Z",
        "updatedAt" : "2018-09-14T04:50:35Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "6edbd0b8-5471-4b34-bd82-8ca45a533ebe",
        "parentId" : "431edfc4-e907-408a-8e26-fbfcea230610",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I agree with you generally, but these types of tests its ok.",
        "createdAt" : "2018-09-15T11:52:53Z",
        "updatedAt" : "2018-09-15T11:52:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "f31407c7ad778d64e8b09a373b63513d6f45c7cf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +110,114 @@        result = df.add(tser, axis=0)\n        expected = pd.DataFrame({0: dti + tdi,\n                                 1: tdi + tdi})\n        tm.assert_frame_equal(result, expected)\n"
  },
  {
    "id" : "9069c2cf-73db-41ea-aae0-aa48a4077dbf",
    "prId" : 22696,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22696#pullrequestreview-155650812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98be4eef-985a-45e0-ad1d-304ae1440c6c",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Any relevant error message to check for?",
        "createdAt" : "2018-09-14T04:54:28Z",
        "updatedAt" : "2018-10-02T01:38:36Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "01f0401b-a54f-48bb-a22c-1869f5b98820",
        "parentId" : "98be4eef-985a-45e0-ad1d-304ae1440c6c",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not really.  It may be worth standardizing these once they all happen in one place, but at the moment its a hodge-podge.",
        "createdAt" : "2018-09-14T20:29:47Z",
        "updatedAt" : "2018-10-02T01:38:36Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6f7fbf261e7528e32721b6707c303bd8d71ef7d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +275,279 @@        other = pd.DataFrame([1, 2, 3], index=tdi)  # indexed like `df`\n        with pytest.raises(TypeError):\n            df + other\n        with pytest.raises(TypeError):\n            other + df"
  },
  {
    "id" : "d94eed26-a997-42ea-8c9d-22348547859d",
    "prId" : 22736,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22736#pullrequestreview-156406806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11eef813-b5ea-4b7f-b902-f900fd3024a5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "might be more clear to move these to a separate test (from here down)",
        "createdAt" : "2018-09-18T11:52:55Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ef60f709-3216-4dcb-8352-9df064082871",
        "parentId" : "11eef813-b5ea-4b7f-b902-f900fd3024a5",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "I don't want to get into orthogonal changes here. I haven't changed anything about this except removing the indentation. This goes for the test split requested below as well.",
        "createdAt" : "2018-09-18T14:46:56Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0b82a7cbcf1cf47cb660cb3e8f7ebe0427bc63d",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +153,157 @@        f = getattr(operator, op)\n\n        # vs mix int\n        result = getattr(mixed_int_frame, op)(2 + mixed_int_frame)\n        exp = f(mixed_int_frame, 2 + mixed_int_frame)"
  },
  {
    "id" : "36c8fb63-bdb5-4a95-8083-579d638d31ac",
    "prId" : 22736,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22736#pullrequestreview-157151165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78952c38-70a7-4c71-b939-c3e70ebd2ee1",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Broke up the test like you wanted",
        "createdAt" : "2018-09-20T08:07:51Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0b82a7cbcf1cf47cb660cb3e8f7ebe0427bc63d",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +148,152 @@        _check_mixed_float(result, dtype=dict(C=None))\n\n    @pytest.mark.parametrize('op', ['__add__', '__sub__', '__mul__'])\n    def test_arith_flex_frame_mixed(self, op, int_frame, mixed_int_frame,\n                                    mixed_float_frame):"
  },
  {
    "id" : "36e273e4-fc26-4595-92af-d099d4f8be70",
    "prId" : 22736,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22736#pullrequestreview-157151165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73e82e20-80df-40d5-a5e2-3a7c30f44c8a",
        "parentId" : null,
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "> can you add a comment here on what this is testing\r\n\r\nAdded (and expanded)",
        "createdAt" : "2018-09-20T08:08:48Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0b82a7cbcf1cf47cb660cb3e8f7ebe0427bc63d",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +182,186 @@        op = all_arithmetic_operators\n\n        # Check that arrays with dim >= 3 raise\n        for dim in range(3, 6):\n            arr = np.ones((1,) * dim)"
  },
  {
    "id" : "f9cf62e0-bd35-4536-8a1c-6231fe8e2c5f",
    "prId" : 22736,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22736#pullrequestreview-158896124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "736d8be0-e065-4439-a189-1d9241979acf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "@jbrockmendel pls have a look here",
        "createdAt" : "2018-09-23T13:07:54Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ffc46d0b-cea2-4512-bf36-c1939f68c74b",
        "parentId" : "736d8be0-e065-4439-a189-1d9241979acf",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is fine.  The alternative would be to do a lookup in core.ops, but I think for a reader who is unfamiliar with core.ops this is clearer.",
        "createdAt" : "2018-09-26T00:05:12Z",
        "updatedAt" : "2018-09-26T09:19:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "ef0d5731-fb8e-4bff-829d-d7e50a62bc30",
        "parentId" : "736d8be0-e065-4439-a189-1d9241979acf",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Modified comment slightly",
        "createdAt" : "2018-09-26T09:03:49Z",
        "updatedAt" : "2018-09-26T09:19:41Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0b82a7cbcf1cf47cb660cb3e8f7ebe0427bc63d",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +135,139 @@            # r-versions not in operator-stdlib; get op without \"r\" and invert\n            if op.startswith('__r'):\n                return getattr(operator, op.replace('__r', '__'))(y, x)\n            return getattr(operator, op)(x, y)\n"
  }
]