[
  {
    "id" : "525f55e3-2d21-4ac8-aa07-a522e27f92df",
    "prId" : 38931,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38931#pullrequestreview-561256030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ba84475-74c3-467b-92e1-c1d328372aea",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "something off about the parameters here",
        "createdAt" : "2021-01-04T00:20:01Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "90f60edc-726f-4dc4-b920-dd6bc445e122",
        "parentId" : "5ba84475-74c3-467b-92e1-c1d328372aea",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "? I wanted to pass in ``\"B\"`` as string and as a list ``[\"B\"]``, to check that result is equal after fixing the bug",
        "createdAt" : "2021-01-04T00:23:38Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "17f89d62-03d3-431e-b886-bc043ded6464",
        "parentId" : "5ba84475-74c3-467b-92e1-c1d328372aea",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "right you have an extra `[` i think then (on the string one), so maybe not doing what you expect",
        "createdAt" : "2021-01-04T14:51:34Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "681fc2e4-62db-4ec4-b52b-8f025e68bcb8",
        "parentId" : "5ba84475-74c3-467b-92e1-c1d328372aea",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "I might misunderstand you here, but the indexer is ``\"B\"`` for the first and ``[\"B\"]`` for the second when running the test, which is what I wanted to do ",
        "createdAt" : "2021-01-04T15:01:07Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "6ae07f68-a5b4-4550-8cd0-c482e94ae556",
        "parentId" : "5ba84475-74c3-467b-92e1-c1d328372aea",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think @phofl is right here",
        "createdAt" : "2021-01-04T18:46:48Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3c3ee2075e0b254c05e45b184e0694219913702",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +339,343 @@        tm.assert_index_equal(df.columns, expected_cols)\n\n    @pytest.mark.parametrize(\"indexer\", [\"B\", [\"B\"]])\n    def test_setitem_frame_length_0_str_key(self, indexer):\n        # GH#38831"
  },
  {
    "id" : "de91eb2d-2953-4593-b86f-509337efb3a6",
    "prId" : 38931,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38931#pullrequestreview-562040362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe2d6906-3687-4364-9dc3-a3b34830a241",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "do we need/want to check any of the other indexers?",
        "createdAt" : "2021-01-04T02:01:03Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "9c713ca3-1dd6-4bb1-88d0-f68884038dc9",
        "parentId" : "fe2d6906-3687-4364-9dc3-a3b34830a241",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Don't know if this would be helpful, the string-DataFrame case is a special case while indexer in [list, Index, Series, array] is all the same (which was working previously)",
        "createdAt" : "2021-01-04T02:10:46Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "bf60ba53-caca-4ccf-abfa-e8a910da128f",
        "parentId" : "fe2d6906-3687-4364-9dc3-a3b34830a241",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, can you check `df.loc[:, indexer]` ? should be the same result i think.",
        "createdAt" : "2021-01-05T02:24:10Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3be232e5-72ca-40a2-a4f3-7a188af84d6b",
        "parentId" : "fe2d6906-3687-4364-9dc3-a3b34830a241",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "No unfortunately not, in case of ``indexer=[\"B\"]``  we align lhs and rhs, which leads to an empty result. This is losely related to our dicussion in #30439 @jbrockmendel \r\n\r\nWhen ``indexer=\"B\"`` this works as the case above",
        "createdAt" : "2021-01-05T18:44:01Z",
        "updatedAt" : "2021-01-05T18:45:42Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3c3ee2075e0b254c05e45b184e0694219913702",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +344,348 @@        df = DataFrame(columns=[\"A\", \"B\"])\n        other = DataFrame({\"B\": [1, 2]})\n        df[indexer] = other\n        expected = DataFrame({\"A\": [np.nan] * 2, \"B\": [1, 2]})\n        expected[\"A\"] = expected[\"A\"].astype(\"object\")"
  },
  {
    "id" : "7407a428-077e-4656-b599-6e1aa3b363de",
    "prId" : 39278,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39278#pullrequestreview-571991755",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3c1f36-156b-43ad-a9ad-decf0d3e1ea1",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "do we need tests for Series?",
        "createdAt" : "2021-01-19T23:58:03Z",
        "updatedAt" : "2021-01-20T00:06:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d86a6410-b97b-42e5-8fcf-7f2e6bb970eb",
        "parentId" : "8c3c1f36-156b-43ad-a9ad-decf0d3e1ea1",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Don't think so, indexer has to be a tuple to land there, which is only valid for dataframes I think?",
        "createdAt" : "2021-01-20T00:06:13Z",
        "updatedAt" : "2021-01-20T00:06:47Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "23048bdc-f48b-4824-9050-f76893e27a35",
        "parentId" : "8c3c1f36-156b-43ad-a9ad-decf0d3e1ea1",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "its weird, but you _could_ do `series.loc[(\"foo\",)]`",
        "createdAt" : "2021-01-20T01:20:43Z",
        "updatedAt" : "2021-01-20T01:20:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "13829c4e-94ce-459f-864c-f2ee2a15c0a9",
        "parentId" : "8c3c1f36-156b-43ad-a9ad-decf0d3e1ea1",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Yep, definitely weird :)\r\n\r\nBut this is already converted before reaching that point.\r\n\r\n```\r\ndf = Series(index=[\"a\", \"b\", \"b\"], dtype=\"float64\")\r\ndf.loc[(\"a\", )] = 1\r\n```\r\nThis results in ``indexer=0``. Tested the same with a MultiIndex Series, also 0 there",
        "createdAt" : "2021-01-20T08:48:26Z",
        "updatedAt" : "2021-01-20T08:48:26Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "74c1dd08fbc4ee208241ddec12f1d866dad0636d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +374,378 @@        tm.assert_frame_equal(df, expected)\n\n    def test_setitem_empty_df_duplicate_columns(self):\n        # GH#38521\n        df = DataFrame(columns=[\"a\", \"b\", \"b\"], dtype=\"float64\")"
  }
]