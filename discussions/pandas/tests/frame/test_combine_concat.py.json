[
  {
    "id" : "4fec125e-0a0c-4bab-95ca-96251a80676e",
    "prId" : 23657,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23657#pullrequestreview-174861080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7207aa38-e67f-4110-9f2b-81db9da1c173",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move this to another test, e.g. test_update_deprecation",
        "createdAt" : "2018-11-14T13:36:50Z",
        "updatedAt" : "2018-11-15T00:03:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff6261d07b82f54e3ce031a0fc908304d5c0c81",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +333,337 @@                           [nan, 7]], index=[1, 3], columns=[1, 2])\n        with pytest.raises(ValueError, match=\"Data overlaps\"):\n            df.update(other, errors='raise')\n\n    @pytest.mark.parametrize('raise_conflict', [True, False])"
  },
  {
    "id" : "bcc64c4d-84ed-4b49-a041-0054348efe4d",
    "prId" : 26022,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26022#pullrequestreview-223632446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "398b9cb0-f0fb-4925-8bdd-4b0e20090d2f",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Separate out test and reference issue number as a comment under test function `def`.",
        "createdAt" : "2019-04-08T03:38:12Z",
        "updatedAt" : "2019-04-20T20:13:02Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff96e0cec86d9c9cfb4af747cfda28ebca20e837",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +182,186 @@        expected = df.append(DataFrame(dicts), ignore_index=True, sort=True)\n        assert_frame_equal(result, expected)\n\n    def test_append_empty_dataframe(self):\n"
  },
  {
    "id" : "5d6fa381-bf06-49cf-aa60-f51e5d826d87",
    "prId" : 26022,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26022#pullrequestreview-224350474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdb8aeb3-c559-436b-a29a-ee52898e85ed",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make this a new test",
        "createdAt" : "2019-04-09T11:46:03Z",
        "updatedAt" : "2019-04-20T20:13:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff96e0cec86d9c9cfb4af747cfda28ebca20e837",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +169,173 @@\n    def test_append_missing_cols(self):\n        # GH22252\n        # exercise the conditional branch in append method where the data\n        # to be appended is a list and does not contain all columns that are in"
  },
  {
    "id" : "2a1d73a2-bfa6-431f-bb73-431a8d30aec0",
    "prId" : 26022,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26022#pullrequestreview-228816955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4644f4d4-1851-4114-863b-f85bd2f47ef0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you put an assert_produces_warning(None) around this",
        "createdAt" : "2019-04-19T20:27:37Z",
        "updatedAt" : "2019-04-20T20:13:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff96e0cec86d9c9cfb4af747cfda28ebca20e837",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +176,180 @@                       columns=['foo', 'bar', 'baz', 'qux'])\n\n        dicts = [{'foo': 9}, {'bar': 10}]\n        with tm.assert_produces_warning(None):\n            result = df.append(dicts, ignore_index=True, sort=True)"
  },
  {
    "id" : "55ba9009-56bd-475c-964a-a079a5cc3ed5",
    "prId" : 28834,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28834#pullrequestreview-306786149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b576d2f-f71d-44bc-85cc-03a98601e3db",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize with empty list, tuple, np.ndarray",
        "createdAt" : "2019-10-11T12:40:28Z",
        "updatedAt" : "2019-11-16T20:08:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "52264927-70b9-41cc-a523-e56e24931f56",
        "parentId" : "6b576d2f-f71d-44bc-85cc-03a98601e3db",
        "authorId" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "body" : "@jreback Please see the reply in the other comment (https://github.com/pandas-dev/pandas/pull/28834#discussion_r334256800)",
        "createdAt" : "2019-10-24T18:41:50Z",
        "updatedAt" : "2019-11-16T20:08:06Z",
        "lastEditedBy" : "9164c634-311a-47a7-96af-8590b019e4ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a5856be7b7c355fc1a3aba6e73766f8cefce98e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +129,133 @@        tm.assert_frame_equal(results, expected)\n\n    def test_append_empty_list(self):\n        # GH 28769\n        df = DataFrame()"
  }
]