[
  {
    "id" : "ec32f041-24e9-47df-85a9-4aef33b73157",
    "prId" : 36224,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36224#pullrequestreview-485143700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c4af86f-0e33-40b9-9b96-49443f64551e",
        "parentId" : null,
        "authorId" : "a61dd902-19ba-4f16-aece-dbb12e1137fc",
        "body" : "Just wanna add an extra note: `df.agg()` returns a series instead of a dataframe for this particular input shape, hence the use of `assert_series_equal`",
        "createdAt" : "2020-09-09T15:42:42Z",
        "updatedAt" : "2020-09-12T21:56:48Z",
        "lastEditedBy" : "a61dd902-19ba-4f16-aece-dbb12e1137fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbcd703158d26d9e78ce3d4adc0f7a776fe70794",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1163,1167 @@        tm.assert_series_equal(result, expected)\n\n    def test_agg_multiple_mixed_no_warning(self):\n        # GH 20909\n        mdf = pd.DataFrame("
  },
  {
    "id" : "a5399947-daae-4142-b74d-337c373e2bfb",
    "prId" : 37227,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37227#pullrequestreview-514270863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b83fc258-0b8c-4738-b375-2df25213cdad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think this is ok to change",
        "createdAt" : "2020-10-20T00:33:13Z",
        "updatedAt" : "2020-10-22T00:33:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "25b49998-b251-4385-83f5-a7262f3766cd",
        "parentId" : "b83fc258-0b8c-4738-b375-2df25213cdad",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "actually if you add sort=False doesn't this match the original?",
        "createdAt" : "2020-10-20T00:33:56Z",
        "updatedAt" : "2020-10-22T00:33:05Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0359c251-6651-40d8-a151-866ff692ba18",
        "parentId" : "b83fc258-0b8c-4738-b375-2df25213cdad",
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "The issue is that DataFrame sorts in certain cases. There is no argument `sort` to DataFrame that can be set to False in this test.",
        "createdAt" : "2020-10-22T00:01:12Z",
        "updatedAt" : "2020-10-22T00:33:05Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      }
    ],
    "commit" : "db01e1b7ceb00a3069876aa6721a49a6f58cb45d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1255,1259 @@        func = dict([(name1, [\"mean\", \"sum\"]), (name2, [\"sum\", \"max\"])])\n        result = float_frame.agg(func, axis=axis)\n        expected = pd.concat(\n            dict(\n                ["
  },
  {
    "id" : "f6814dc5-5ee9-4f3f-86a4-76c4d49aa247",
    "prId" : 39212,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39212#pullrequestreview-570089706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27b62e76-673b-4185-97a9-a3b00a03d4ac",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "does this already raise when a function is passed? ideally can you co-locate these tests.",
        "createdAt" : "2021-01-17T15:48:15Z",
        "updatedAt" : "2021-01-17T15:48:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ba1ab713-71c3-4fb2-8342-807bfac8b517",
        "parentId" : "27b62e76-673b-4185-97a9-a3b00a03d4ac",
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "When function is passed, apply with axis=1 computes the correct result. E.g.\r\n\r\n```\r\ndf = DataFrame([[1, 2, 3], [4, 5, 6]])\r\nprint(df.apply(lambda x: x.tail(1), axis=1))\r\n\r\n# gives:\r\n   2\r\n0  3\r\n1  6\r\n```\r\n\r\nThe argument `axis=1` is intercepted and then `apply_standard` is computed on the rows of the frame without an axis argument.",
        "createdAt" : "2021-01-17T16:42:07Z",
        "updatedAt" : "2021-01-17T16:42:08Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      },
      {
        "id" : "6d4869d7-5f8c-41d2-bd2e-40700ff4580c",
        "parentId" : "27b62e76-673b-4185-97a9-a3b00a03d4ac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok cool, can you co-locate this test near the others",
        "createdAt" : "2021-01-17T18:30:43Z",
        "updatedAt" : "2021-01-17T18:30:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e4f55429-1ef7-4b5a-b5fc-045e298e5b18",
        "parentId" : "27b62e76-673b-4185-97a9-a3b00a03d4ac",
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "What is meant by others? Currently located below the other test for str arguments. Tests for axis=1 and tests that raise are fairly spread out in this file, not sure how else to locate this test.\r\n\r\nAs an aside, I've been wanting to consolidate (and then start to cleanup) the apply/agg/transform tests into `pandas.tests.apply`. Does that move make sense?",
        "createdAt" : "2021-01-17T19:37:39Z",
        "updatedAt" : "2021-01-17T19:37:39Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      },
      {
        "id" : "5b7aa033-b216-4196-8e5e-7cb6b00cc02d",
        "parentId" : "27b62e76-673b-4185-97a9-a3b00a03d4ac",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok cool\nyeah would love to break up some of these test files more logically",
        "createdAt" : "2021-01-17T20:05:50Z",
        "updatedAt" : "2021-01-17T20:05:50Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "5247e143f98a03ac40913dd1c32ab4aafdf77c12",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +182,186 @@    @pytest.mark.parametrize(\n        \"how, args\", [(\"pct_change\", ()), (\"nsmallest\", (1, [\"a\", \"b\"])), (\"tail\", 1)]\n    )\n    def test_apply_str_axis_1_raises(self, how, args):\n        # GH 39211 - some ops don't support axis=1"
  }
]