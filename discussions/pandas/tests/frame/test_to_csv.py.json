[
  {
    "id" : "2f817e2c-7dd9-4a53-8b50-98d59c80cb15",
    "prId" : 15984,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/15984#pullrequestreview-32483197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e3b3b71-a4a0-4ea4-a276-fb62e4091838",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also test NaT. I think we have very few tests for outputing a PI.",
        "createdAt" : "2017-04-12T19:31:56Z",
        "updatedAt" : "2017-04-13T16:36:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0855eb76-16c8-44ad-8775-0f6a565bc921",
        "parentId" : "4e3b3b71-a4a0-4ea4-a276-fb62e4091838",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Yep, done.",
        "createdAt" : "2017-04-12T20:20:41Z",
        "updatedAt" : "2017-04-13T16:36:49Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "5939a241d0eed03391bf73342e94fc99cc79a19c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1145,1149 @@        self.assertEqual(df.to_csv(quoting=csv.QUOTE_ALL), expected)\n\n    def test_period_index_date_overflow(self):\n        # see gh-15982\n"
  },
  {
    "id" : "c8e3077e-e226-4dbc-addb-1701a00deed6",
    "prId" : 18110,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18110#pullrequestreview-74264256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78e0d3b3-1df2-4e49-a02d-016a694e6c6b",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Looks like `DataFrame` and `MultiIndex` are already imported, so could remove the `pd.`, if you feel that's cleaner/worth an edit.",
        "createdAt" : "2017-11-04T19:54:07Z",
        "updatedAt" : "2017-11-04T22:49:41Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccd5098558248dc73e8edc3033c337dafeaeab82",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1209,1213 @@        columns = pd.MultiIndex.from_tuples([(\"a\", 1), (\"a\", 2),\n                                             (\"b\", 1), (\"b\", 2)])\n        df = pd.DataFrame([[1, 2, 3, 4], [5, 6, 7, 8]])\n        df.columns = columns\n"
  },
  {
    "id" : "ab46920e-5197-47db-bfb2-1e70550f7d45",
    "prId" : 21300,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21300#pullrequestreview-125410595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3b9b6ae-ba52-420b-8ffc-1d4a61c03263",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comment as below, add the issue numbers as comments",
        "createdAt" : "2018-06-03T22:45:30Z",
        "updatedAt" : "2018-06-04T22:46:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e914ff8e05006c2ad6df6684c779d07f3ce67de",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +932,936 @@    ])\n    def test_to_csv_compression(self, df, encoding, compression):\n\n        with ensure_clean() as filename:\n"
  },
  {
    "id" : "77617c1c-1a1e-4ab2-97c8-e3af65e4ee45",
    "prId" : 21406,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21406#pullrequestreview-135076580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e10124e8-7ae5-43be-95a0-733e434ebadd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you do separate ensure_cleans() for each case & put a comment for each case",
        "createdAt" : "2018-07-06T16:22:35Z",
        "updatedAt" : "2018-10-19T05:43:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ce5c6cf5fd649a19692a9bda0fbc844534127e",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +894,898 @@        with ensure_clean() as path:\n            # case 2: LF as line terminator\n            df.to_csv(path, line_terminator='\\n')\n            expected = b',A,B\\none,1,4\\ntwo,2,5\\nthree,3,6\\n'\n"
  }
]