[
  {
    "id" : "9b13dc13-41a8-44f2-8724-028e72ebe936",
    "prId" : 33734,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33734#pullrequestreview-398900498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32e255ff-e931-4a46-9ef8-2bf79e676892",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "this looks out of place",
        "createdAt" : "2020-04-23T09:01:55Z",
        "updatedAt" : "2020-04-23T09:01:56Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "221835d7f49feb04eacb289b0fa62ccc84f82a9b",
    "line" : 562,
    "diffHunk" : "@@ -1,1 +560,564 @@            assert (\n                \"2 2013-01-03 2013-01-03 00:00:00-05:00 2013-01-03 00:00:00+01:00\"\n            ) in result"
  },
  {
    "id" : "3688ab76-7893-4859-805b-f74fa531c046",
    "prId" : 35973,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35973#pullrequestreview-501486204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e93366ca-955b-430a-9f5b-294c3ae1df47",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you move this expected change to L595 as it goes with it",
        "createdAt" : "2020-10-02T22:56:08Z",
        "updatedAt" : "2020-10-31T19:15:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b58d2f0f0982e80692fd1b4e6cc55314f98f3c3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +596,600 @@\n        expected = df\n        expected[\"tz\"] = expected[\"tz\"].dt.tz_convert(\"Europe/Berlin\")\n        tm.assert_frame_equal(result, expected)\n"
  },
  {
    "id" : "9943fdfd-6f7a-4bf3-a794-0c3d3195ac11",
    "prId" : 35973,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35973#pullrequestreview-517488982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c637309f-caff-4e57-a01f-7e22c94a7123",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this test passes on master.  i dont see how it is related to read_json",
        "createdAt" : "2020-10-26T23:17:58Z",
        "updatedAt" : "2020-10-31T19:15:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "29b1238f-2e36-4e8d-a2ca-56a14d8c723a",
        "parentId" : "c637309f-caff-4e57-a01f-7e22c94a7123",
        "authorId" : "00fd25ec-10ce-4da2-b282-338650c2fd94",
        "body" : "This PR originally started to fix only `read_json`. @mroeschke suggested a better fix was to correct `astype` conversion which would then cascade the fix to `read_json`.\r\n\r\nThe 'key' added test: `test_astype_tz_object_conversion(self, tz)` uses the specific, more basic, functionality from `test_astype_tz_conversion(self)`, so I included it for completeness (even though it already works). However, it may be superfluous, or there may be a similar test elsewehere in pandas that I could not find.\r\n\r\nLet me know if this is OK to keep, or if I should remove this test.",
        "createdAt" : "2020-10-27T09:17:39Z",
        "updatedAt" : "2020-10-31T19:15:27Z",
        "lastEditedBy" : "00fd25ec-10ce-4da2-b282-338650c2fd94",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b58d2f0f0982e80692fd1b4e6cc55314f98f3c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +589,593 @@                df.astype(float, errors=errors)\n\n    def test_astype_tz_conversion(self):\n        # GH 35973\n        val = {\"tz\": date_range(\"2020-08-30\", freq=\"d\", periods=2, tz=\"Europe/London\")}"
  },
  {
    "id" : "d5954fbb-4a84-4207-a1b8-7e14a7d53456",
    "prId" : 35979,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35979#pullrequestreview-483099426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "247bdb70-4601-4a28-87b8-3021892ea398",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have tests for these same types for errors='raise' (the default) and errors='coerce'?\r\n",
        "createdAt" : "2020-09-05T15:36:53Z",
        "updatedAt" : "2020-09-06T00:58:09Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "78df18de-c871-4424-92b8-124230ae15e4",
        "parentId" : "247bdb70-4601-4a28-87b8-3021892ea398",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "I don't think so for all, can add those here",
        "createdAt" : "2020-09-05T22:57:44Z",
        "updatedAt" : "2020-09-06T00:58:09Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "61b6eb8251f46fd504b3c266b7d06ab8c9e91112",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +567,571 @@        tm.assert_frame_equal(result, df)\n        assert result is not df\n\n    @pytest.mark.parametrize(\n        \"df\","
  },
  {
    "id" : "3595e0e3-93d0-4770-8926-faa97f23745e",
    "prId" : 39484,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39484#pullrequestreview-581780216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is not correct, it should be `object`",
        "createdAt" : "2021-01-30T20:39:31Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1acd906b-5d49-4f96-94da-1c72bddbbc77",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "This was ``np.dtype(\"S3\")`` on 1.1.5 too, so wrong there too?",
        "createdAt" : "2021-01-30T20:56:34Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "918753c2-128f-4237-916e-77f80a2b6dcd",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Could remove the test to avoid testing wrong behavior?",
        "createdAt" : "2021-01-30T21:20:30Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "49cc8b85-ae1a-49ca-ac93-ec85a4e3ef82",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm yeah this is definitely wrong, we should *never* have a numpy string type in output.",
        "createdAt" : "2021-02-01T13:50:36Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dfd92db8-0b58-4d1c-80b1-808fc14c0c4a",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "We have unfortunately been doing this for many releases ..",
        "createdAt" : "2021-02-02T13:38:21Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d4362bda-aee3-466f-8cda-326e920f5a01",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "grr really?",
        "createdAt" : "2021-02-02T13:55:50Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "09aa9d57-0819-472b-870a-e96f43932062",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok @phofl let's fix this for 1.3 (the S dtypes) and backport this change.",
        "createdAt" : "2021-02-02T13:56:14Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "98c85d7e-e1e6-475c-bbb6-d32abdca5f39",
        "parentId" : "4b9dc812-2f3b-40ea-a752-d0ef5d4eec14",
        "authorId" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "body" : "Ok all right. Will open issue as follow up",
        "createdAt" : "2021-02-02T21:15:22Z",
        "updatedAt" : "2021-02-02T21:15:58Z",
        "lastEditedBy" : "f3e7d5fe-a112-47db-9178-8be42b4a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb21a6ab30f7008890c04af7fb7af5299c44110c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +656,660 @@        # GH#39474\n        result = DataFrame([\"foo\", \"bar\", \"baz\"]).astype(bytes)\n        assert result.dtypes[0] == np.dtype(\"S3\")"
  },
  {
    "id" : "8e57a530-eeaf-4a31-a85f-55c561531a68",
    "prId" : 39908,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39908#pullrequestreview-636750380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b25495af-80be-4bf9-a01d-e4d0a732640a",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "This didn't work while breaking some changes off #40679, in so in #40749 instead. so these changes won't be part of this PR.\r\n\r\n(it seems pytest tries to create the DataFrame, before skipping, resulting in an ImportError... and we want to preserve that behavior https://github.com/pandas-dev/pandas/pull/39908#discussion_r585581525\r\n\r\ncc @jreback  ",
        "createdAt" : "2021-04-02T14:30:28Z",
        "updatedAt" : "2021-04-17T11:36:45Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "4bdedc16-55f1-4ca5-b63f-395e622a2712",
        "parentId" : "b25495af-80be-4bf9-a01d-e4d0a732640a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> (it seems pytest tries to create the DataFrame, before skipping, resulting in an ImportError.\r\n\r\nI think that is expected, since the DataFrame is a function parameter value, which is evaluated when creating the param object",
        "createdAt" : "2021-04-02T17:04:36Z",
        "updatedAt" : "2021-04-17T11:36:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "8854c149-a502-4e96-8841-d2203609deb3",
        "parentId" : "b25495af-80be-4bf9-a01d-e4d0a732640a",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "yeah, obvious when you stop and think about it.",
        "createdAt" : "2021-04-15T14:23:06Z",
        "updatedAt" : "2021-04-17T11:36:45Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef02a435ec481eeac62fe00ebc87d501489e13fc",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +590,594 @@                \"string[pyarrow]\",\n                marks=td.skip_if_no(\"pyarrow\", min_version=\"1.0.0\"),\n            ),\n            ([\"x\", \"y\", \"z\"], \"category\"),\n            (3 * [Timestamp(\"2020-01-01\", tz=\"UTC\")], None),"
  }
]