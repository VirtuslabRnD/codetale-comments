[
  {
    "id" : "a27c0ea5-2bd8-4dad-8dfe-1722855e2e53",
    "prId" : 36808,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36808#pullrequestreview-570401363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00951c23-3608-40d6-a59d-200d5fe8920d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number as a comment",
        "createdAt" : "2020-12-29T17:27:23Z",
        "updatedAt" : "2021-02-05T23:11:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8de6bc22-12de-424f-a5b6-f896d9727567",
        "parentId" : "00951c23-3608-40d6-a59d-200d5fe8920d",
        "authorId" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "body" : "Ok",
        "createdAt" : "2021-01-18T11:25:26Z",
        "updatedAt" : "2021-02-05T23:11:10Z",
        "lastEditedBy" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "tags" : [
        ]
      }
    ],
    "commit" : "06b7077eb56422c25c123f563a54c32a1b10c3fc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +134,138 @@    def test_select_dtypes_exclude_include_int(self, include):\n        # Fix select_dtypes(include='int') for Windows, FYI #36596\n        df = DataFrame(\n            {\n                \"a\": list(\"abc\"),"
  },
  {
    "id" : "a1d4ed58-a40e-4274-b105-4bf8267d219f",
    "prId" : 36808,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/36808#pullrequestreview-584489699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c62539c-78d7-48e1-a31b-c1a3520d3363",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize on these types (e.g. you can add include & excude as paramters), the this is much simpler to grok.",
        "createdAt" : "2021-01-19T16:55:37Z",
        "updatedAt" : "2021-02-05T23:11:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "26a61c44-f346-4e3e-a24c-6df681947936",
        "parentId" : "8c62539c-78d7-48e1-a31b-c1a3520d3363",
        "authorId" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "body" : "Yes, that will be nicer for sure. I updated this pull request with the requested changes.",
        "createdAt" : "2021-02-05T16:16:11Z",
        "updatedAt" : "2021-02-05T23:11:10Z",
        "lastEditedBy" : "1bc2d5e7-2adf-473d-b33e-9ef6e449b86c",
        "tags" : [
        ]
      }
    ],
    "commit" : "06b7077eb56422c25c123f563a54c32a1b10c3fc",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +144,148 @@            }\n        )\n        exclude = (np.datetime64,)\n        result = df.select_dtypes(include=include, exclude=exclude)\n        expected = df[[\"b\", \"c\", \"e\"]]"
  },
  {
    "id" : "fd96d07d-4026-4510-b243-66b2d3ec5fa1",
    "prId" : 38246,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38246#pullrequestreview-550968978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ed023c-c8a3-49ab-95c0-99be7a0f98ad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add the test from the OP\n\ni think was about int / int32",
        "createdAt" : "2020-12-13T20:08:03Z",
        "updatedAt" : "2020-12-14T16:07:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "671f82ea-f3e7-454b-8dab-ec7fb39c1b48",
        "parentId" : "45ed023c-c8a3-49ab-95c0-99be7a0f98ad",
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "hmm so the OP was angling plotting EAs but it's quite old (April 2019)\r\n\r\nWith `int`/`int32`/`Int32`/`Int64` etc. these snippets pass on master, and even on 1.0.5:\r\n```\r\nIn [21]:         ea = pd.array([1, 2], dtype=np.int32) \r\n    ...:         df = pd.DataFrame(ea) \r\n    ...:         assert df.select_dtypes(np.number).shape == df.shape                                                                              \r\n\r\n```\r\nbut I'm not sure we test this so might add that here",
        "createdAt" : "2020-12-13T22:10:37Z",
        "updatedAt" : "2020-12-14T16:07:47Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "da6f73bd-120c-4717-9d4a-9a4b9b9cdfd6",
        "parentId" : "45ed023c-c8a3-49ab-95c0-99be7a0f98ad",
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "the ExtensionDtype derived class doesn't pass on master so I think that's what's being fixed here",
        "createdAt" : "2020-12-13T22:15:48Z",
        "updatedAt" : "2020-12-14T16:07:47Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "866556fe-ecd1-44de-ac46-5c2545de17c7",
        "parentId" : "45ed023c-c8a3-49ab-95c0-99be7a0f98ad",
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "Added those ",
        "createdAt" : "2020-12-13T22:39:17Z",
        "updatedAt" : "2020-12-14T16:07:47Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0902be8755c40469cc630a04679b5aa4b0e7b7f",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +372,376 @@    )\n    def test_select_dtypes_numeric(self, arr, expected):\n        # GH 35340\n\n        df = DataFrame(arr)"
  }
]