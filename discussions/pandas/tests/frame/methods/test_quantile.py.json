[
  {
    "id" : "35e10611-8a17-4ba7-a0c4-4e9fb48d7c2d",
    "prId" : 39606,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39606#pullrequestreview-585936302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eed76c7f-bbca-409c-a696-8dbff96a256e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add eg `pd.array(range(9), dtype=\"Float64\")` here?",
        "createdAt" : "2021-02-08T21:23:59Z",
        "updatedAt" : "2021-02-11T22:59:50Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "d09fc5e4e24e58214041b7fa81cd2d939bb1afd8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +547,551 @@            ),\n            pd.period_range(\"2016-01-01\", periods=9, freq=\"D\"),\n            pd.date_range(\"2016-01-01\", periods=9, tz=\"US/Pacific\"),\n            pytest.param(\n                pd.array(np.arange(9), dtype=\"Int64\"),"
  },
  {
    "id" : "6fecc6aa-6d71-470c-b123-62eb03806ce6",
    "prId" : 40189,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40189#pullrequestreview-602732386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e3193cd-dfb9-47db-b496-61878064838a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I can't comment on the exact line (3 lines below), but could also do \r\n\r\n```\r\nif not using_array_manager:\r\n    assert len(df._mgr.blocks) == 2\r\n```\r\nbecause I think the rest of the test is still valid",
        "createdAt" : "2021-03-03T10:23:33Z",
        "updatedAt" : "2021-03-05T01:42:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d80803f3af783b93f7901eef9896839be7b616d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +525,529 @@    def test_quantile_item_cache(self, using_array_manager):\n        # previous behavior incorrect retained an invalid _item_cache entry\n        df = DataFrame(np.random.randn(4, 3), columns=[\"A\", \"B\", \"C\"])\n        df[\"D\"] = df[\"A\"] * 2\n        ser = df[\"A\"]"
  }
]