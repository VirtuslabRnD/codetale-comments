[
  {
    "id" : "2a4c4867-9d2e-44d8-8198-0077a92a3239",
    "prId" : 19823,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19823#pullrequestreview-98530708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00614c81-8d82-43fa-b8fa-8592d8e60873",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you need to check the result of this using ``tm.assert_frame_equal``, just use a simple example of an applied function, testing both returning a list, e.g. ``lambda x: [1, 2, 3]`` and a sub-classed series",
        "createdAt" : "2018-02-22T11:28:39Z",
        "updatedAt" : "2018-02-23T08:49:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b22e090950e37699ede10ddb5f4130ee19ef215b",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +534,538 @@            columns=['first', 'last', 'variable', 'value'])\n\n        df.apply(lambda x: check_row_subclass(x))\n        df.apply(lambda x: check_row_subclass(x), axis=1)\n"
  },
  {
    "id" : "68874fda-193b-4614-9923-2c69fd561e18",
    "prId" : 30945,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30945#pullrequestreview-342968877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f60c59e-4009-43f0-bef5-4a8bf37cdafb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you remove the extra blank lines between statements.",
        "createdAt" : "2020-01-15T03:15:55Z",
        "updatedAt" : "2020-01-23T14:12:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a064b3877c6ef2888ac65df33ee7a5339a51a937",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +562,566 @@        # GH 25596\n\n        df = tm.SubclassedDataFrame({\"A\": [1, 2, 3], \"B\": [4, 5, 6], \"C\": [7, 8, 9]})\n        result = getattr(df, all_numeric_reductions)()\n        assert isinstance(result, tm.SubclassedSeries)"
  },
  {
    "id" : "2379e5da-88fe-417c-af65-4a95275313e6",
    "prId" : 31331,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31331#pullrequestreview-351185524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9a47994-f7b1-41a4-ac6b-4bc25fb2123f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this looks like it can be parametrized+shared with test_idxmin.  if there are any others that can be parametrized, pls give it a try",
        "createdAt" : "2020-01-30T22:25:40Z",
        "updatedAt" : "2020-05-09T19:39:22Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "25b4dfba182ad5bdb6270caebeb3a4baa80b3dd0",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +625,629 @@        df = tm.SubclassedDataFrame({\"A\": [1, 2, 3], \"B\": [4, 5, 6], \"C\": [7, 8, 9]})\n        result = getattr(df, idx_method)()\n        assert isinstance(result, tm.SubclassedSeries)\n\n    def test_dot(self):"
  },
  {
    "id" : "d223cfc5-0c64-429c-ad73-4c0d2ca14d87",
    "prId" : 31331,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31331#pullrequestreview-408679577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18b469e2-6c11-4429-94b8-8f73e5ef9bb5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you paramaterize any of this?",
        "createdAt" : "2020-04-21T14:37:11Z",
        "updatedAt" : "2020-05-09T19:39:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8af5f8ab-18b6-40d8-b795-aa54a43759d4",
        "parentId" : "18b469e2-6c11-4429-94b8-8f73e5ef9bb5",
        "authorId" : "8dbfba30-c765-422d-a783-653f8acf5fc2",
        "body" : "I don't believe pytest allows you to use fixtures (boolean_reductions, numeric_reductions) in a paramaterized test the way I would need. \r\n\r\nSo there's two ways I can see to do this. Paramaterize the two reduction tests into one or create a new fixture combining `boolean_reductions` and `numeric_reductions`. Since paramaterizing the test would require creating another point of maintenance I created `all_reductions` as a new fixture. \r\n\r\nThis would help reduce the number of written tests in other files as well, for example look at [pandas/tests/extension/base/reduce.py](https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/base/reduce.py)\r\n\r\n",
        "createdAt" : "2020-05-09T19:50:51Z",
        "updatedAt" : "2020-05-09T19:51:41Z",
        "lastEditedBy" : "8dbfba30-c765-422d-a783-653f8acf5fc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "25b4dfba182ad5bdb6270caebeb3a4baa80b3dd0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +569,573 @@        result = getattr(df, all_reductions)()\n        assert isinstance(result, tm.SubclassedSeries)\n\n    def test_subclassed_count(self):\n"
  }
]